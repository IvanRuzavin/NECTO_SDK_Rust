#![no_std]
#![allow(non_camel_case_types, non_snake_case, non_upper_case_globals)]
#[repr(i32)]
pub enum IRQn_Type {
    NonMaskableInt_IRQn = -14,
    HardFault_IRQn = -13,
    MemoryManagement_IRQn = -12,
    BusFault_IRQn = -11,
    UsageFault_IRQn = -10,
    SVC_IRQn = -5,
    DebugMonitor_IRQn = -4,
    PendSV_IRQn = -2,
    SysTick_IRQn = -1,
    WWDG_IRQn = 0,
    PVD_IRQn = 1,
    TAMPER_STAMP_IRQn = 2,
    RTC_WKUP_IRQn = 3,
    FLASH_IRQn = 4,
    RCC_IRQn = 5,
    EXTI0_IRQn = 6,
    EXTI1_IRQn = 7,
    EXTI2_IRQn = 8,
    EXTI3_IRQn = 9,
    EXTI4_IRQn = 10,
    DMA1_Channel1_IRQn = 11,
    DMA1_Channel2_IRQn = 12,
    DMA1_Channel3_IRQn = 13,
    DMA1_Channel4_IRQn = 14,
    DMA1_Channel5_IRQn = 15,
    DMA1_Channel6_IRQn = 16,
    DMA1_Channel7_IRQn = 17,
    ADC1_IRQn = 18,
    USB_HP_IRQn = 19,
    USB_LP_IRQn = 20,
    DAC_IRQn = 21,
    COMP_IRQn = 22,
    EXTI9_5_IRQn = 23,
    LCD_IRQn = 24,
    TIM9_IRQn = 25,
    TIM10_IRQn = 26,
    TIM11_IRQn = 27,
    TIM2_IRQn = 28,
    TIM3_IRQn = 29,
    TIM4_IRQn = 30,
    I2C1_EV_IRQn = 31,
    I2C1_ER_IRQn = 32,
    I2C2_EV_IRQn = 33,
    I2C2_ER_IRQn = 34,
    SPI1_IRQn = 35,
    SPI2_IRQn = 36,
    USART1_IRQn = 37,
    USART2_IRQn = 38,
    USART3_IRQn = 39,
    EXTI15_10_IRQn = 40,
    RTC_Alarm_IRQn = 41,
    USB_FS_WKUP_IRQn = 42,
    TIM6_IRQn = 43,
    TIM7_IRQn = 44,
    TIM5_IRQn = 46,
    SPI3_IRQn = 47,
    UART4_IRQn = 48,
    UART5_IRQn = 49,
    DMA2_Channel1_IRQn = 50,
    DMA2_Channel2_IRQn = 51,
    DMA2_Channel3_IRQn = 52,
    DMA2_Channel4_IRQn = 53,
    DMA2_Channel5_IRQn = 54,
    COMP_ACQ_IRQn = 56,
}
#[repr(C)]
pub struct ADC_TypeDef {
    pub SR: u32,
    pub CR1: u32,
    pub CR2: u32,
    pub SMPR1: u32,
    pub SMPR2: u32,
    pub SMPR3: u32,
    pub JOFR1: u32,
    pub JOFR2: u32,
    pub JOFR3: u32,
    pub JOFR4: u32,
    pub HTR: u32,
    pub LTR: u32,
    pub SQR1: u32,
    pub SQR2: u32,
    pub SQR3: u32,
    pub SQR4: u32,
    pub SQR5: u32,
    pub JSQR: u32,
    pub JDR1: u32,
    pub JDR2: u32,
    pub JDR3: u32,
    pub JDR4: u32,
    pub DR: u32,
    pub SMPR0: u32,
}
#[repr(C)]
pub struct ADC_Common_TypeDef {
    pub CSR: u32,
    pub CCR: u32,
}
#[repr(C)]
pub struct COMP_TypeDef {
    pub CSR: u32,
}
#[repr(C)]
pub struct COMP_Common_TypeDef {
    pub CSR: u32,
}
#[repr(C)]
pub struct CRC_TypeDef {
    pub DR: u32,
    pub IDR: u32,
    pub RESERVED0: u32,
    pub RESERVED1: u32,
    pub CR: u32,
}
#[repr(C)]
pub struct DAC_TypeDef {
    pub CR: u32,
    pub SWTRIGR: u32,
    pub DHR12R1: u32,
    pub DHR12L1: u32,
    pub DHR8R1: u32,
    pub DHR12R2: u32,
    pub DHR12L2: u32,
    pub DHR8R2: u32,
    pub DHR12RD: u32,
    pub DHR12LD: u32,
    pub DHR8RD: u32,
    pub DOR1: u32,
    pub DOR2: u32,
    pub SR: u32,
}
#[repr(C)]
pub struct DBGMCU_TypeDef {
    pub IDCODE: u32,
    pub CR: u32,
    pub APB1FZ: u32,
    pub APB2FZ: u32,
}
#[repr(C)]
pub struct DMA_Channel_TypeDef {
    pub CCR: u32,
    pub CNDTR: u32,
    pub CPAR: u32,
    pub CMAR: u32,
}
#[repr(C)]
pub struct DMA_TypeDef {
    pub ISR: u32,
    pub IFCR: u32,
}
#[repr(C)]
pub struct EXTI_TypeDef {
    pub IMR: u32,
    pub EMR: u32,
    pub RTSR: u32,
    pub FTSR: u32,
    pub SWIER: u32,
    pub PR: u32,
}
#[repr(C)]
pub struct FLASH_TypeDef {
    pub ACR: u32,
    pub PECR: u32,
    pub PDKEYR: u32,
    pub PEKEYR: u32,
    pub PRGKEYR: u32,
    pub OPTKEYR: u32,
    pub SR: u32,
    pub OBR: u32,
    pub WRPR1: u32,
    pub RESERVED: [u32; 23],
    pub WRPR2: u32,
    pub WRPR3: u32,
    pub WRPR4: u32,
}
#[repr(C)]
pub struct OB_TypeDef {
    pub RDP: u32,
    pub USER: u32,
    pub WRP01: u32,
    pub WRP23: u32,
    pub WRP45: u32,
    pub WRP67: u32,
    pub WRP89: u32,
    pub WRP1011: u32,
    pub RESERVED: [u32; 24],
    pub WRP1213: u32,
    pub WRP1415: u32,
}
#[repr(C)]
pub struct OPAMP_TypeDef {
    pub CSR: u32,
    pub OTR: u32,
    pub LPOTR: u32,
}
#[repr(C)]
pub struct OPAMP_Common_TypeDef {
    pub CSR: u32,
    pub OTR: u32,
}
#[repr(C)]
pub struct GPIO_TypeDef {
    pub MODER: u32,
    pub OTYPER: u32,
    pub OSPEEDR: u32,
    pub PUPDR: u32,
    pub IDR: u32,
    pub ODR: u32,
    pub BSRR: u32,
    pub LCKR: u32,
    pub AFR: [u32; 2],
    pub BRR: u32,
}
#[repr(C)]
pub struct SYSCFG_TypeDef {
    pub MEMRMP: u32,
    pub PMC: u32,
    pub EXTICR: [u32; 4],
}
#[repr(C)]
pub struct I2C_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub OAR1: u32,
    pub OAR2: u32,
    pub DR: u32,
    pub SR1: u32,
    pub SR2: u32,
    pub CCR: u32,
    pub TRISE: u32,
}
#[repr(C)]
pub struct IWDG_TypeDef {
    pub KR: u32,
    pub PR: u32,
    pub RLR: u32,
    pub SR: u32,
}
#[repr(C)]
pub struct LCD_TypeDef {
    pub CR: u32,
    pub FCR: u32,
    pub SR: u32,
    pub CLR: u32,
    pub RESERVED: u32,
    pub RAM: [u32; 16],
}
#[repr(C)]
pub struct PWR_TypeDef {
    pub CR: u32,
    pub CSR: u32,
}
#[repr(C)]
pub struct RCC_TypeDef {
    pub CR: u32,
    pub ICSCR: u32,
    pub CFGR: u32,
    pub CIR: u32,
    pub AHBRSTR: u32,
    pub APB2RSTR: u32,
    pub APB1RSTR: u32,
    pub AHBENR: u32,
    pub APB2ENR: u32,
    pub APB1ENR: u32,
    pub AHBLPENR: u32,
    pub APB2LPENR: u32,
    pub APB1LPENR: u32,
    pub CSR: u32,
}
#[repr(C)]
pub struct RI_TypeDef {
    pub ICR: u32,
    pub ASCR1: u32,
    pub ASCR2: u32,
    pub HYSCR1: u32,
    pub HYSCR2: u32,
    pub HYSCR3: u32,
    pub HYSCR4: u32,
    pub ASMR1: u32,
    pub CMR1: u32,
    pub CICR1: u32,
    pub ASMR2: u32,
    pub CMR2: u32,
    pub CICR2: u32,
    pub ASMR3: u32,
    pub CMR3: u32,
    pub CICR3: u32,
    pub ASMR4: u32,
    pub CMR4: u32,
    pub CICR4: u32,
    pub ASMR5: u32,
    pub CMR5: u32,
    pub CICR5: u32,
}
#[repr(C)]
pub struct RTC_TypeDef {
    pub TR: u32,
    pub DR: u32,
    pub CR: u32,
    pub ISR: u32,
    pub PRER: u32,
    pub WUTR: u32,
    pub CALIBR: u32,
    pub ALRMAR: u32,
    pub ALRMBR: u32,
    pub WPR: u32,
    pub SSR: u32,
    pub SHIFTR: u32,
    pub TSTR: u32,
    pub TSDR: u32,
    pub TSSSR: u32,
    pub CALR: u32,
    pub TAFCR: u32,
    pub ALRMASSR: u32,
    pub ALRMBSSR: u32,
    pub RESERVED7: u32,
    pub BKP0R: u32,
    pub BKP1R: u32,
    pub BKP2R: u32,
    pub BKP3R: u32,
    pub BKP4R: u32,
    pub BKP5R: u32,
    pub BKP6R: u32,
    pub BKP7R: u32,
    pub BKP8R: u32,
    pub BKP9R: u32,
    pub BKP10R: u32,
    pub BKP11R: u32,
    pub BKP12R: u32,
    pub BKP13R: u32,
    pub BKP14R: u32,
    pub BKP15R: u32,
    pub BKP16R: u32,
    pub BKP17R: u32,
    pub BKP18R: u32,
    pub BKP19R: u32,
    pub BKP20R: u32,
    pub BKP21R: u32,
    pub BKP22R: u32,
    pub BKP23R: u32,
    pub BKP24R: u32,
    pub BKP25R: u32,
    pub BKP26R: u32,
    pub BKP27R: u32,
    pub BKP28R: u32,
    pub BKP29R: u32,
    pub BKP30R: u32,
    pub BKP31R: u32,
}
#[repr(C)]
pub struct SPI_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub SR: u32,
    pub DR: u32,
    pub CRCPR: u32,
    pub RXCRCR: u32,
    pub TXCRCR: u32,
    pub I2SCFGR: u32,
    pub I2SPR: u32,
}
#[repr(C)]
pub struct TIM_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub SMCR: u32,
    pub DIER: u32,
    pub SR: u32,
    pub EGR: u32,
    pub CCMR1: u32,
    pub CCMR2: u32,
    pub CCER: u32,
    pub CNT: u32,
    pub PSC: u32,
    pub ARR: u32,
    pub RESERVED12: u32,
    pub CCR1: u32,
    pub CCR2: u32,
    pub CCR3: u32,
    pub CCR4: u32,
    pub RESERVED17: u32,
    pub DCR: u32,
    pub DMAR: u32,
    pub OR: u32,
}
#[repr(C)]
pub struct USART_TypeDef {
    pub SR: u32,
    pub DR: u32,
    pub BRR: u32,
    pub CR1: u32,
    pub CR2: u32,
    pub CR3: u32,
    pub GTPR: u32,
}
#[repr(C)]
pub struct USB_TypeDef {
    pub EP0R: u32,
    pub RESERVED0: u32,
    pub EP1R: u32,
    pub RESERVED1: u32,
    pub EP2R: u32,
    pub RESERVED2: u32,
    pub EP3R: u32,
    pub RESERVED3: u32,
    pub EP4R: u32,
    pub RESERVED4: u32,
    pub EP5R: u32,
    pub RESERVED5: u32,
    pub EP6R: u32,
    pub RESERVED6: u32,
    pub EP7R: u32,
    pub RESERVED7: [u32; 17],
    pub CNTR: u32,
    pub RESERVED8: u32,
    pub ISTR: u32,
    pub RESERVED9: u32,
    pub FNR: u32,
    pub RESERVEDA: u32,
    pub DADDR: u32,
    pub RESERVEDB: u32,
    pub BTABLE: u32,
    pub RESERVEDC: u32,
}
#[repr(C)]
pub struct WWDG_TypeDef {
    pub CR: u32,
    pub CFR: u32,
    pub SR: u32,
}
pub const __CM3_REV: u32 = 0x200;
pub const __MPU_PRESENT: u32 = 1;
pub const __NVIC_PRIO_BITS: u32 = 4;
pub const __Vendor_SysTickConfig: u32 = 0;
pub const FLASH_BASE: u32 = 0x08000000;
pub const FLASH_EEPROM_BASE: u32 = FLASH_BASE + 0x80000;
pub const SRAM_BASE: u32 = 0x20000000;
pub const PERIPH_BASE: u32 = 0x40000000;
pub const SRAM_BB_BASE: u32 = 0x22000000;
pub const PERIPH_BB_BASE: u32 = 0x42000000;
pub const FLASH_BANK2_BASE: u32 = 0x08040000;
pub const FLASH_BANK1_END: u32 = 0x0802FFFF;
pub const FLASH_BANK2_END: u32 = 0x0806FFFF;
pub const FLASH_END: u32 = 0x0806FFFF;
pub const FLASH_EEPROM_END: u32 = 0x08083FFF;
pub const APB1PERIPH_BASE: u32 = PERIPH_BASE;
pub const APB2PERIPH_BASE: u32 = PERIPH_BASE + 0x00010000;
pub const AHBPERIPH_BASE: u32 = PERIPH_BASE + 0x00020000;
pub const TIM2_BASE: u32 = APB1PERIPH_BASE + 0x00000000;
pub const TIM3_BASE: u32 = APB1PERIPH_BASE + 0x00000400;
pub const TIM4_BASE: u32 = APB1PERIPH_BASE + 0x00000800;
pub const TIM5_BASE: u32 = APB1PERIPH_BASE + 0x00000C00;
pub const TIM6_BASE: u32 = APB1PERIPH_BASE + 0x00001000;
pub const TIM7_BASE: u32 = APB1PERIPH_BASE + 0x00001400;
pub const LCD_BASE: u32 = APB1PERIPH_BASE + 0x00002400;
pub const RTC_BASE: u32 = APB1PERIPH_BASE + 0x00002800;
pub const WWDG_BASE: u32 = APB1PERIPH_BASE + 0x00002C00;
pub const IWDG_BASE: u32 = APB1PERIPH_BASE + 0x00003000;
pub const SPI2_BASE: u32 = APB1PERIPH_BASE + 0x00003800;
pub const SPI3_BASE: u32 = APB1PERIPH_BASE + 0x00003C00;
pub const USART2_BASE: u32 = APB1PERIPH_BASE + 0x00004400;
pub const USART3_BASE: u32 = APB1PERIPH_BASE + 0x00004800;
pub const UART4_BASE: u32 = APB1PERIPH_BASE + 0x00004C00;
pub const UART5_BASE: u32 = APB1PERIPH_BASE + 0x00005000;
pub const I2C1_BASE: u32 = APB1PERIPH_BASE + 0x00005400;
pub const I2C2_BASE: u32 = APB1PERIPH_BASE + 0x00005800;
pub const USB_BASE: u32 = APB1PERIPH_BASE + 0x00005C00;
pub const USB_PMAADDR: u32 = APB1PERIPH_BASE + 0x00006000;
pub const PWR_BASE: u32 = APB1PERIPH_BASE + 0x00007000;
pub const DAC_BASE: u32 = APB1PERIPH_BASE + 0x00007400;
pub const COMP_BASE: u32 = APB1PERIPH_BASE + 0x00007C00;
pub const RI_BASE: u32 = APB1PERIPH_BASE + 0x00007C04;
pub const OPAMP_BASE: u32 = APB1PERIPH_BASE + 0x00007C5C;
pub const SYSCFG_BASE: u32 = APB2PERIPH_BASE + 0x00000000;
pub const EXTI_BASE: u32 = APB2PERIPH_BASE + 0x00000400;
pub const TIM9_BASE: u32 = APB2PERIPH_BASE + 0x00000800;
pub const TIM10_BASE: u32 = APB2PERIPH_BASE + 0x00000C00;
pub const TIM11_BASE: u32 = APB2PERIPH_BASE + 0x00001000;
pub const ADC1_BASE: u32 = APB2PERIPH_BASE + 0x00002400;
pub const ADC_BASE: u32 = APB2PERIPH_BASE + 0x00002700;
pub const SPI1_BASE: u32 = APB2PERIPH_BASE + 0x00003000;
pub const USART1_BASE: u32 = APB2PERIPH_BASE + 0x00003800;
pub const GPIOA_BASE: u32 = AHBPERIPH_BASE + 0x00000000;
pub const GPIOB_BASE: u32 = AHBPERIPH_BASE + 0x00000400;
pub const GPIOC_BASE: u32 = AHBPERIPH_BASE + 0x00000800;
pub const GPIOD_BASE: u32 = AHBPERIPH_BASE + 0x00000C00;
pub const GPIOE_BASE: u32 = AHBPERIPH_BASE + 0x00001000;
pub const GPIOH_BASE: u32 = AHBPERIPH_BASE + 0x00001400;
pub const GPIOF_BASE: u32 = AHBPERIPH_BASE + 0x00001800;
pub const GPIOG_BASE: u32 = AHBPERIPH_BASE + 0x00001C00;
pub const CRC_BASE: u32 = AHBPERIPH_BASE + 0x00003000;
pub const RCC_BASE: u32 = AHBPERIPH_BASE + 0x00003800;
pub const FLASH_R_BASE: u32 = AHBPERIPH_BASE + 0x00003C00;
pub const OB_BASE: u32 = 0x1FF80000;
pub const FLASHSIZE_BASE: u32 = 0x1FF800CC;
pub const UID_BASE: u32 = 0x1FF800D0;
pub const DMA1_BASE: u32 = AHBPERIPH_BASE + 0x00006000;
pub const DMA1_Channel1_BASE: u32 = DMA1_BASE + 0x00000008;
pub const DMA1_Channel2_BASE: u32 = DMA1_BASE + 0x0000001C;
pub const DMA1_Channel3_BASE: u32 = DMA1_BASE + 0x00000030;
pub const DMA1_Channel4_BASE: u32 = DMA1_BASE + 0x00000044;
pub const DMA1_Channel5_BASE: u32 = DMA1_BASE + 0x00000058;
pub const DMA1_Channel6_BASE: u32 = DMA1_BASE + 0x0000006C;
pub const DMA1_Channel7_BASE: u32 = DMA1_BASE + 0x00000080;
pub const DMA2_BASE: u32 = AHBPERIPH_BASE + 0x00006400;
pub const DMA2_Channel1_BASE: u32 = DMA2_BASE + 0x00000008;
pub const DMA2_Channel2_BASE: u32 = DMA2_BASE + 0x0000001C;
pub const DMA2_Channel3_BASE: u32 = DMA2_BASE + 0x00000030;
pub const DMA2_Channel4_BASE: u32 = DMA2_BASE + 0x00000044;
pub const DMA2_Channel5_BASE: u32 = DMA2_BASE + 0x00000058;
pub const DBGMCU_BASE: u32 = 0xE0042000;
pub const DAC: u32 = DAC1;
pub const LSI_STARTUP_TIME: u32 = 200;
pub const VREFINT_CAL_ADDR_CMSIS: u32 = 0x1FF800F8;
pub const TEMPSENSOR_CAL1_ADDR_CMSIS: u32 = 0x1FF800FA;
pub const TEMPSENSOR_CAL2_ADDR_CMSIS: u32 = 0x1FF800FE;
pub const ADC_SR_AWD_Pos: u32 = 0;
pub const ADC_SR_AWD_Msk: u32 = 0x1 << ADC_SR_AWD_Pos;
pub const ADC_SR_AWD: u32 = ADC_SR_AWD_Msk;
pub const ADC_SR_EOCS_Pos: u32 = 1;
pub const ADC_SR_EOCS_Msk: u32 = 0x1 << ADC_SR_EOCS_Pos;
pub const ADC_SR_EOCS: u32 = ADC_SR_EOCS_Msk;
pub const ADC_SR_JEOS_Pos: u32 = 2;
pub const ADC_SR_JEOS_Msk: u32 = 0x1 << ADC_SR_JEOS_Pos;
pub const ADC_SR_JEOS: u32 = ADC_SR_JEOS_Msk;
pub const ADC_SR_JSTRT_Pos: u32 = 3;
pub const ADC_SR_JSTRT_Msk: u32 = 0x1 << ADC_SR_JSTRT_Pos;
pub const ADC_SR_JSTRT: u32 = ADC_SR_JSTRT_Msk;
pub const ADC_SR_STRT_Pos: u32 = 4;
pub const ADC_SR_STRT_Msk: u32 = 0x1 << ADC_SR_STRT_Pos;
pub const ADC_SR_STRT: u32 = ADC_SR_STRT_Msk;
pub const ADC_SR_OVR_Pos: u32 = 5;
pub const ADC_SR_OVR_Msk: u32 = 0x1 << ADC_SR_OVR_Pos;
pub const ADC_SR_OVR: u32 = ADC_SR_OVR_Msk;
pub const ADC_SR_ADONS_Pos: u32 = 6;
pub const ADC_SR_ADONS_Msk: u32 = 0x1 << ADC_SR_ADONS_Pos;
pub const ADC_SR_ADONS: u32 = ADC_SR_ADONS_Msk;
pub const ADC_SR_RCNR_Pos: u32 = 8;
pub const ADC_SR_RCNR_Msk: u32 = 0x1 << ADC_SR_RCNR_Pos;
pub const ADC_SR_RCNR: u32 = ADC_SR_RCNR_Msk;
pub const ADC_SR_JCNR_Pos: u32 = 9;
pub const ADC_SR_JCNR_Msk: u32 = 0x1 << ADC_SR_JCNR_Pos;
pub const ADC_SR_JCNR: u32 = ADC_SR_JCNR_Msk;
pub const ADC_SR_EOC: u32 = ADC_SR_EOCS;
pub const ADC_SR_JEOC: u32 = ADC_SR_JEOS;
pub const ADC_CR1_AWDCH_Pos: u32 = 0;
pub const ADC_CR1_AWDCH_Msk: u32 = 0x1F << ADC_CR1_AWDCH_Pos;
pub const ADC_CR1_AWDCH: u32 = ADC_CR1_AWDCH_Msk;
pub const ADC_CR1_AWDCH_0: u32 = 0x01 << ADC_CR1_AWDCH_Pos;
pub const ADC_CR1_AWDCH_1: u32 = 0x02 << ADC_CR1_AWDCH_Pos;
pub const ADC_CR1_AWDCH_2: u32 = 0x04 << ADC_CR1_AWDCH_Pos;
pub const ADC_CR1_AWDCH_3: u32 = 0x08 << ADC_CR1_AWDCH_Pos;
pub const ADC_CR1_AWDCH_4: u32 = 0x10 << ADC_CR1_AWDCH_Pos;
pub const ADC_CR1_EOCSIE_Pos: u32 = 5;
pub const ADC_CR1_EOCSIE_Msk: u32 = 0x1 << ADC_CR1_EOCSIE_Pos;
pub const ADC_CR1_EOCSIE: u32 = ADC_CR1_EOCSIE_Msk;
pub const ADC_CR1_AWDIE_Pos: u32 = 6;
pub const ADC_CR1_AWDIE_Msk: u32 = 0x1 << ADC_CR1_AWDIE_Pos;
pub const ADC_CR1_AWDIE: u32 = ADC_CR1_AWDIE_Msk;
pub const ADC_CR1_JEOSIE_Pos: u32 = 7;
pub const ADC_CR1_JEOSIE_Msk: u32 = 0x1 << ADC_CR1_JEOSIE_Pos;
pub const ADC_CR1_JEOSIE: u32 = ADC_CR1_JEOSIE_Msk;
pub const ADC_CR1_SCAN_Pos: u32 = 8;
pub const ADC_CR1_SCAN_Msk: u32 = 0x1 << ADC_CR1_SCAN_Pos;
pub const ADC_CR1_SCAN: u32 = ADC_CR1_SCAN_Msk;
pub const ADC_CR1_AWDSGL_Pos: u32 = 9;
pub const ADC_CR1_AWDSGL_Msk: u32 = 0x1 << ADC_CR1_AWDSGL_Pos;
pub const ADC_CR1_AWDSGL: u32 = ADC_CR1_AWDSGL_Msk;
pub const ADC_CR1_JAUTO_Pos: u32 = 10;
pub const ADC_CR1_JAUTO_Msk: u32 = 0x1 << ADC_CR1_JAUTO_Pos;
pub const ADC_CR1_JAUTO: u32 = ADC_CR1_JAUTO_Msk;
pub const ADC_CR1_DISCEN_Pos: u32 = 11;
pub const ADC_CR1_DISCEN_Msk: u32 = 0x1 << ADC_CR1_DISCEN_Pos;
pub const ADC_CR1_DISCEN: u32 = ADC_CR1_DISCEN_Msk;
pub const ADC_CR1_JDISCEN_Pos: u32 = 12;
pub const ADC_CR1_JDISCEN_Msk: u32 = 0x1 << ADC_CR1_JDISCEN_Pos;
pub const ADC_CR1_JDISCEN: u32 = ADC_CR1_JDISCEN_Msk;
pub const ADC_CR1_DISCNUM_Pos: u32 = 13;
pub const ADC_CR1_DISCNUM_Msk: u32 = 0x7 << ADC_CR1_DISCNUM_Pos;
pub const ADC_CR1_DISCNUM: u32 = ADC_CR1_DISCNUM_Msk;
pub const ADC_CR1_DISCNUM_0: u32 = 0x1 << ADC_CR1_DISCNUM_Pos;
pub const ADC_CR1_DISCNUM_1: u32 = 0x2 << ADC_CR1_DISCNUM_Pos;
pub const ADC_CR1_DISCNUM_2: u32 = 0x4 << ADC_CR1_DISCNUM_Pos;
pub const ADC_CR1_PDD_Pos: u32 = 16;
pub const ADC_CR1_PDD_Msk: u32 = 0x1 << ADC_CR1_PDD_Pos;
pub const ADC_CR1_PDD: u32 = ADC_CR1_PDD_Msk;
pub const ADC_CR1_PDI_Pos: u32 = 17;
pub const ADC_CR1_PDI_Msk: u32 = 0x1 << ADC_CR1_PDI_Pos;
pub const ADC_CR1_PDI: u32 = ADC_CR1_PDI_Msk;
pub const ADC_CR1_JAWDEN_Pos: u32 = 22;
pub const ADC_CR1_JAWDEN_Msk: u32 = 0x1 << ADC_CR1_JAWDEN_Pos;
pub const ADC_CR1_JAWDEN: u32 = ADC_CR1_JAWDEN_Msk;
pub const ADC_CR1_AWDEN_Pos: u32 = 23;
pub const ADC_CR1_AWDEN_Msk: u32 = 0x1 << ADC_CR1_AWDEN_Pos;
pub const ADC_CR1_AWDEN: u32 = ADC_CR1_AWDEN_Msk;
pub const ADC_CR1_RES_Pos: u32 = 24;
pub const ADC_CR1_RES_Msk: u32 = 0x3 << ADC_CR1_RES_Pos;
pub const ADC_CR1_RES: u32 = ADC_CR1_RES_Msk;
pub const ADC_CR1_RES_0: u32 = 0x1 << ADC_CR1_RES_Pos;
pub const ADC_CR1_RES_1: u32 = 0x2 << ADC_CR1_RES_Pos;
pub const ADC_CR1_OVRIE_Pos: u32 = 26;
pub const ADC_CR1_OVRIE_Msk: u32 = 0x1 << ADC_CR1_OVRIE_Pos;
pub const ADC_CR1_OVRIE: u32 = ADC_CR1_OVRIE_Msk;
pub const ADC_CR1_EOCIE: u32 = ADC_CR1_EOCSIE;
pub const ADC_CR1_JEOCIE: u32 = ADC_CR1_JEOSIE;
pub const ADC_CR2_ADON_Pos: u32 = 0;
pub const ADC_CR2_ADON_Msk: u32 = 0x1 << ADC_CR2_ADON_Pos;
pub const ADC_CR2_ADON: u32 = ADC_CR2_ADON_Msk;
pub const ADC_CR2_CONT_Pos: u32 = 1;
pub const ADC_CR2_CONT_Msk: u32 = 0x1 << ADC_CR2_CONT_Pos;
pub const ADC_CR2_CONT: u32 = ADC_CR2_CONT_Msk;
pub const ADC_CR2_CFG_Pos: u32 = 2;
pub const ADC_CR2_CFG_Msk: u32 = 0x1 << ADC_CR2_CFG_Pos;
pub const ADC_CR2_CFG: u32 = ADC_CR2_CFG_Msk;
pub const ADC_CR2_DELS_Pos: u32 = 4;
pub const ADC_CR2_DELS_Msk: u32 = 0x7 << ADC_CR2_DELS_Pos;
pub const ADC_CR2_DELS: u32 = ADC_CR2_DELS_Msk;
pub const ADC_CR2_DELS_0: u32 = 0x1 << ADC_CR2_DELS_Pos;
pub const ADC_CR2_DELS_1: u32 = 0x2 << ADC_CR2_DELS_Pos;
pub const ADC_CR2_DELS_2: u32 = 0x4 << ADC_CR2_DELS_Pos;
pub const ADC_CR2_DMA_Pos: u32 = 8;
pub const ADC_CR2_DMA_Msk: u32 = 0x1 << ADC_CR2_DMA_Pos;
pub const ADC_CR2_DMA: u32 = ADC_CR2_DMA_Msk;
pub const ADC_CR2_DDS_Pos: u32 = 9;
pub const ADC_CR2_DDS_Msk: u32 = 0x1 << ADC_CR2_DDS_Pos;
pub const ADC_CR2_DDS: u32 = ADC_CR2_DDS_Msk;
pub const ADC_CR2_EOCS_Pos: u32 = 10;
pub const ADC_CR2_EOCS_Msk: u32 = 0x1 << ADC_CR2_EOCS_Pos;
pub const ADC_CR2_EOCS: u32 = ADC_CR2_EOCS_Msk;
pub const ADC_CR2_ALIGN_Pos: u32 = 11;
pub const ADC_CR2_ALIGN_Msk: u32 = 0x1 << ADC_CR2_ALIGN_Pos;
pub const ADC_CR2_ALIGN: u32 = ADC_CR2_ALIGN_Msk;
pub const ADC_CR2_JEXTSEL_Pos: u32 = 16;
pub const ADC_CR2_JEXTSEL_Msk: u32 = 0xF << ADC_CR2_JEXTSEL_Pos;
pub const ADC_CR2_JEXTSEL: u32 = ADC_CR2_JEXTSEL_Msk;
pub const ADC_CR2_JEXTSEL_0: u32 = 0x1 << ADC_CR2_JEXTSEL_Pos;
pub const ADC_CR2_JEXTSEL_1: u32 = 0x2 << ADC_CR2_JEXTSEL_Pos;
pub const ADC_CR2_JEXTSEL_2: u32 = 0x4 << ADC_CR2_JEXTSEL_Pos;
pub const ADC_CR2_JEXTSEL_3: u32 = 0x8 << ADC_CR2_JEXTSEL_Pos;
pub const ADC_CR2_JEXTEN_Pos: u32 = 20;
pub const ADC_CR2_JEXTEN_Msk: u32 = 0x3 << ADC_CR2_JEXTEN_Pos;
pub const ADC_CR2_JEXTEN: u32 = ADC_CR2_JEXTEN_Msk;
pub const ADC_CR2_JEXTEN_0: u32 = 0x1 << ADC_CR2_JEXTEN_Pos;
pub const ADC_CR2_JEXTEN_1: u32 = 0x2 << ADC_CR2_JEXTEN_Pos;
pub const ADC_CR2_JSWSTART_Pos: u32 = 22;
pub const ADC_CR2_JSWSTART_Msk: u32 = 0x1 << ADC_CR2_JSWSTART_Pos;
pub const ADC_CR2_JSWSTART: u32 = ADC_CR2_JSWSTART_Msk;
pub const ADC_CR2_EXTSEL_Pos: u32 = 24;
pub const ADC_CR2_EXTSEL_Msk: u32 = 0xF << ADC_CR2_EXTSEL_Pos;
pub const ADC_CR2_EXTSEL: u32 = ADC_CR2_EXTSEL_Msk;
pub const ADC_CR2_EXTSEL_0: u32 = 0x1 << ADC_CR2_EXTSEL_Pos;
pub const ADC_CR2_EXTSEL_1: u32 = 0x2 << ADC_CR2_EXTSEL_Pos;
pub const ADC_CR2_EXTSEL_2: u32 = 0x4 << ADC_CR2_EXTSEL_Pos;
pub const ADC_CR2_EXTSEL_3: u32 = 0x8 << ADC_CR2_EXTSEL_Pos;
pub const ADC_CR2_EXTEN_Pos: u32 = 28;
pub const ADC_CR2_EXTEN_Msk: u32 = 0x3 << ADC_CR2_EXTEN_Pos;
pub const ADC_CR2_EXTEN: u32 = ADC_CR2_EXTEN_Msk;
pub const ADC_CR2_EXTEN_0: u32 = 0x1 << ADC_CR2_EXTEN_Pos;
pub const ADC_CR2_EXTEN_1: u32 = 0x2 << ADC_CR2_EXTEN_Pos;
pub const ADC_CR2_SWSTART_Pos: u32 = 30;
pub const ADC_CR2_SWSTART_Msk: u32 = 0x1 << ADC_CR2_SWSTART_Pos;
pub const ADC_CR2_SWSTART: u32 = ADC_CR2_SWSTART_Msk;
pub const ADC_SMPR1_SMP20_Pos: u32 = 0;
pub const ADC_SMPR1_SMP20_Msk: u32 = 0x7 << ADC_SMPR1_SMP20_Pos;
pub const ADC_SMPR1_SMP20: u32 = ADC_SMPR1_SMP20_Msk;
pub const ADC_SMPR1_SMP20_0: u32 = 0x1 << ADC_SMPR1_SMP20_Pos;
pub const ADC_SMPR1_SMP20_1: u32 = 0x2 << ADC_SMPR1_SMP20_Pos;
pub const ADC_SMPR1_SMP20_2: u32 = 0x4 << ADC_SMPR1_SMP20_Pos;
pub const ADC_SMPR1_SMP21_Pos: u32 = 3;
pub const ADC_SMPR1_SMP21_Msk: u32 = 0x7 << ADC_SMPR1_SMP21_Pos;
pub const ADC_SMPR1_SMP21: u32 = ADC_SMPR1_SMP21_Msk;
pub const ADC_SMPR1_SMP21_0: u32 = 0x1 << ADC_SMPR1_SMP21_Pos;
pub const ADC_SMPR1_SMP21_1: u32 = 0x2 << ADC_SMPR1_SMP21_Pos;
pub const ADC_SMPR1_SMP21_2: u32 = 0x4 << ADC_SMPR1_SMP21_Pos;
pub const ADC_SMPR1_SMP22_Pos: u32 = 6;
pub const ADC_SMPR1_SMP22_Msk: u32 = 0x7 << ADC_SMPR1_SMP22_Pos;
pub const ADC_SMPR1_SMP22: u32 = ADC_SMPR1_SMP22_Msk;
pub const ADC_SMPR1_SMP22_0: u32 = 0x1 << ADC_SMPR1_SMP22_Pos;
pub const ADC_SMPR1_SMP22_1: u32 = 0x2 << ADC_SMPR1_SMP22_Pos;
pub const ADC_SMPR1_SMP22_2: u32 = 0x4 << ADC_SMPR1_SMP22_Pos;
pub const ADC_SMPR1_SMP23_Pos: u32 = 9;
pub const ADC_SMPR1_SMP23_Msk: u32 = 0x7 << ADC_SMPR1_SMP23_Pos;
pub const ADC_SMPR1_SMP23: u32 = ADC_SMPR1_SMP23_Msk;
pub const ADC_SMPR1_SMP23_0: u32 = 0x1 << ADC_SMPR1_SMP23_Pos;
pub const ADC_SMPR1_SMP23_1: u32 = 0x2 << ADC_SMPR1_SMP23_Pos;
pub const ADC_SMPR1_SMP23_2: u32 = 0x4 << ADC_SMPR1_SMP23_Pos;
pub const ADC_SMPR1_SMP24_Pos: u32 = 12;
pub const ADC_SMPR1_SMP24_Msk: u32 = 0x7 << ADC_SMPR1_SMP24_Pos;
pub const ADC_SMPR1_SMP24: u32 = ADC_SMPR1_SMP24_Msk;
pub const ADC_SMPR1_SMP24_0: u32 = 0x1 << ADC_SMPR1_SMP24_Pos;
pub const ADC_SMPR1_SMP24_1: u32 = 0x2 << ADC_SMPR1_SMP24_Pos;
pub const ADC_SMPR1_SMP24_2: u32 = 0x4 << ADC_SMPR1_SMP24_Pos;
pub const ADC_SMPR1_SMP25_Pos: u32 = 15;
pub const ADC_SMPR1_SMP25_Msk: u32 = 0x7 << ADC_SMPR1_SMP25_Pos;
pub const ADC_SMPR1_SMP25: u32 = ADC_SMPR1_SMP25_Msk;
pub const ADC_SMPR1_SMP25_0: u32 = 0x1 << ADC_SMPR1_SMP25_Pos;
pub const ADC_SMPR1_SMP25_1: u32 = 0x2 << ADC_SMPR1_SMP25_Pos;
pub const ADC_SMPR1_SMP25_2: u32 = 0x4 << ADC_SMPR1_SMP25_Pos;
pub const ADC_SMPR1_SMP26_Pos: u32 = 18;
pub const ADC_SMPR1_SMP26_Msk: u32 = 0x7 << ADC_SMPR1_SMP26_Pos;
pub const ADC_SMPR1_SMP26: u32 = ADC_SMPR1_SMP26_Msk;
pub const ADC_SMPR1_SMP26_0: u32 = 0x1 << ADC_SMPR1_SMP26_Pos;
pub const ADC_SMPR1_SMP26_1: u32 = 0x2 << ADC_SMPR1_SMP26_Pos;
pub const ADC_SMPR1_SMP26_2: u32 = 0x4 << ADC_SMPR1_SMP26_Pos;
pub const ADC_SMPR1_SMP27_Pos: u32 = 21;
pub const ADC_SMPR1_SMP27_Msk: u32 = 0x7 << ADC_SMPR1_SMP27_Pos;
pub const ADC_SMPR1_SMP27: u32 = ADC_SMPR1_SMP27_Msk;
pub const ADC_SMPR1_SMP27_0: u32 = 0x1 << ADC_SMPR1_SMP27_Pos;
pub const ADC_SMPR1_SMP27_1: u32 = 0x2 << ADC_SMPR1_SMP27_Pos;
pub const ADC_SMPR1_SMP27_2: u32 = 0x4 << ADC_SMPR1_SMP27_Pos;
pub const ADC_SMPR1_SMP28_Pos: u32 = 24;
pub const ADC_SMPR1_SMP28_Msk: u32 = 0x7 << ADC_SMPR1_SMP28_Pos;
pub const ADC_SMPR1_SMP28: u32 = ADC_SMPR1_SMP28_Msk;
pub const ADC_SMPR1_SMP28_0: u32 = 0x1 << ADC_SMPR1_SMP28_Pos;
pub const ADC_SMPR1_SMP28_1: u32 = 0x2 << ADC_SMPR1_SMP28_Pos;
pub const ADC_SMPR1_SMP28_2: u32 = 0x4 << ADC_SMPR1_SMP28_Pos;
pub const ADC_SMPR1_SMP29_Pos: u32 = 27;
pub const ADC_SMPR1_SMP29_Msk: u32 = 0x7 << ADC_SMPR1_SMP29_Pos;
pub const ADC_SMPR1_SMP29: u32 = ADC_SMPR1_SMP29_Msk;
pub const ADC_SMPR1_SMP29_0: u32 = 0x1 << ADC_SMPR1_SMP29_Pos;
pub const ADC_SMPR1_SMP29_1: u32 = 0x2 << ADC_SMPR1_SMP29_Pos;
pub const ADC_SMPR1_SMP29_2: u32 = 0x4 << ADC_SMPR1_SMP29_Pos;
pub const ADC_SMPR2_SMP10_Pos: u32 = 0;
pub const ADC_SMPR2_SMP10_Msk: u32 = 0x7 << ADC_SMPR2_SMP10_Pos;
pub const ADC_SMPR2_SMP10: u32 = ADC_SMPR2_SMP10_Msk;
pub const ADC_SMPR2_SMP10_0: u32 = 0x1 << ADC_SMPR2_SMP10_Pos;
pub const ADC_SMPR2_SMP10_1: u32 = 0x2 << ADC_SMPR2_SMP10_Pos;
pub const ADC_SMPR2_SMP10_2: u32 = 0x4 << ADC_SMPR2_SMP10_Pos;
pub const ADC_SMPR2_SMP11_Pos: u32 = 3;
pub const ADC_SMPR2_SMP11_Msk: u32 = 0x7 << ADC_SMPR2_SMP11_Pos;
pub const ADC_SMPR2_SMP11: u32 = ADC_SMPR2_SMP11_Msk;
pub const ADC_SMPR2_SMP11_0: u32 = 0x1 << ADC_SMPR2_SMP11_Pos;
pub const ADC_SMPR2_SMP11_1: u32 = 0x2 << ADC_SMPR2_SMP11_Pos;
pub const ADC_SMPR2_SMP11_2: u32 = 0x4 << ADC_SMPR2_SMP11_Pos;
pub const ADC_SMPR2_SMP12_Pos: u32 = 6;
pub const ADC_SMPR2_SMP12_Msk: u32 = 0x7 << ADC_SMPR2_SMP12_Pos;
pub const ADC_SMPR2_SMP12: u32 = ADC_SMPR2_SMP12_Msk;
pub const ADC_SMPR2_SMP12_0: u32 = 0x1 << ADC_SMPR2_SMP12_Pos;
pub const ADC_SMPR2_SMP12_1: u32 = 0x2 << ADC_SMPR2_SMP12_Pos;
pub const ADC_SMPR2_SMP12_2: u32 = 0x4 << ADC_SMPR2_SMP12_Pos;
pub const ADC_SMPR2_SMP13_Pos: u32 = 9;
pub const ADC_SMPR2_SMP13_Msk: u32 = 0x7 << ADC_SMPR2_SMP13_Pos;
pub const ADC_SMPR2_SMP13: u32 = ADC_SMPR2_SMP13_Msk;
pub const ADC_SMPR2_SMP13_0: u32 = 0x1 << ADC_SMPR2_SMP13_Pos;
pub const ADC_SMPR2_SMP13_1: u32 = 0x2 << ADC_SMPR2_SMP13_Pos;
pub const ADC_SMPR2_SMP13_2: u32 = 0x4 << ADC_SMPR2_SMP13_Pos;
pub const ADC_SMPR2_SMP14_Pos: u32 = 12;
pub const ADC_SMPR2_SMP14_Msk: u32 = 0x7 << ADC_SMPR2_SMP14_Pos;
pub const ADC_SMPR2_SMP14: u32 = ADC_SMPR2_SMP14_Msk;
pub const ADC_SMPR2_SMP14_0: u32 = 0x1 << ADC_SMPR2_SMP14_Pos;
pub const ADC_SMPR2_SMP14_1: u32 = 0x2 << ADC_SMPR2_SMP14_Pos;
pub const ADC_SMPR2_SMP14_2: u32 = 0x4 << ADC_SMPR2_SMP14_Pos;
pub const ADC_SMPR2_SMP15_Pos: u32 = 15;
pub const ADC_SMPR2_SMP15_Msk: u32 = 0x7 << ADC_SMPR2_SMP15_Pos;
pub const ADC_SMPR2_SMP15: u32 = ADC_SMPR2_SMP15_Msk;
pub const ADC_SMPR2_SMP15_0: u32 = 0x1 << ADC_SMPR2_SMP15_Pos;
pub const ADC_SMPR2_SMP15_1: u32 = 0x2 << ADC_SMPR2_SMP15_Pos;
pub const ADC_SMPR2_SMP15_2: u32 = 0x4 << ADC_SMPR2_SMP15_Pos;
pub const ADC_SMPR2_SMP16_Pos: u32 = 18;
pub const ADC_SMPR2_SMP16_Msk: u32 = 0x7 << ADC_SMPR2_SMP16_Pos;
pub const ADC_SMPR2_SMP16: u32 = ADC_SMPR2_SMP16_Msk;
pub const ADC_SMPR2_SMP16_0: u32 = 0x1 << ADC_SMPR2_SMP16_Pos;
pub const ADC_SMPR2_SMP16_1: u32 = 0x2 << ADC_SMPR2_SMP16_Pos;
pub const ADC_SMPR2_SMP16_2: u32 = 0x4 << ADC_SMPR2_SMP16_Pos;
pub const ADC_SMPR2_SMP17_Pos: u32 = 21;
pub const ADC_SMPR2_SMP17_Msk: u32 = 0x7 << ADC_SMPR2_SMP17_Pos;
pub const ADC_SMPR2_SMP17: u32 = ADC_SMPR2_SMP17_Msk;
pub const ADC_SMPR2_SMP17_0: u32 = 0x1 << ADC_SMPR2_SMP17_Pos;
pub const ADC_SMPR2_SMP17_1: u32 = 0x2 << ADC_SMPR2_SMP17_Pos;
pub const ADC_SMPR2_SMP17_2: u32 = 0x4 << ADC_SMPR2_SMP17_Pos;
pub const ADC_SMPR2_SMP18_Pos: u32 = 24;
pub const ADC_SMPR2_SMP18_Msk: u32 = 0x7 << ADC_SMPR2_SMP18_Pos;
pub const ADC_SMPR2_SMP18: u32 = ADC_SMPR2_SMP18_Msk;
pub const ADC_SMPR2_SMP18_0: u32 = 0x1 << ADC_SMPR2_SMP18_Pos;
pub const ADC_SMPR2_SMP18_1: u32 = 0x2 << ADC_SMPR2_SMP18_Pos;
pub const ADC_SMPR2_SMP18_2: u32 = 0x4 << ADC_SMPR2_SMP18_Pos;
pub const ADC_SMPR2_SMP19_Pos: u32 = 27;
pub const ADC_SMPR2_SMP19_Msk: u32 = 0x7 << ADC_SMPR2_SMP19_Pos;
pub const ADC_SMPR2_SMP19: u32 = ADC_SMPR2_SMP19_Msk;
pub const ADC_SMPR2_SMP19_0: u32 = 0x1 << ADC_SMPR2_SMP19_Pos;
pub const ADC_SMPR2_SMP19_1: u32 = 0x2 << ADC_SMPR2_SMP19_Pos;
pub const ADC_SMPR2_SMP19_2: u32 = 0x4 << ADC_SMPR2_SMP19_Pos;
pub const ADC_SMPR3_SMP0_Pos: u32 = 0;
pub const ADC_SMPR3_SMP0_Msk: u32 = 0x7 << ADC_SMPR3_SMP0_Pos;
pub const ADC_SMPR3_SMP0: u32 = ADC_SMPR3_SMP0_Msk;
pub const ADC_SMPR3_SMP0_0: u32 = 0x1 << ADC_SMPR3_SMP0_Pos;
pub const ADC_SMPR3_SMP0_1: u32 = 0x2 << ADC_SMPR3_SMP0_Pos;
pub const ADC_SMPR3_SMP0_2: u32 = 0x4 << ADC_SMPR3_SMP0_Pos;
pub const ADC_SMPR3_SMP1_Pos: u32 = 3;
pub const ADC_SMPR3_SMP1_Msk: u32 = 0x7 << ADC_SMPR3_SMP1_Pos;
pub const ADC_SMPR3_SMP1: u32 = ADC_SMPR3_SMP1_Msk;
pub const ADC_SMPR3_SMP1_0: u32 = 0x1 << ADC_SMPR3_SMP1_Pos;
pub const ADC_SMPR3_SMP1_1: u32 = 0x2 << ADC_SMPR3_SMP1_Pos;
pub const ADC_SMPR3_SMP1_2: u32 = 0x4 << ADC_SMPR3_SMP1_Pos;
pub const ADC_SMPR3_SMP2_Pos: u32 = 6;
pub const ADC_SMPR3_SMP2_Msk: u32 = 0x7 << ADC_SMPR3_SMP2_Pos;
pub const ADC_SMPR3_SMP2: u32 = ADC_SMPR3_SMP2_Msk;
pub const ADC_SMPR3_SMP2_0: u32 = 0x1 << ADC_SMPR3_SMP2_Pos;
pub const ADC_SMPR3_SMP2_1: u32 = 0x2 << ADC_SMPR3_SMP2_Pos;
pub const ADC_SMPR3_SMP2_2: u32 = 0x4 << ADC_SMPR3_SMP2_Pos;
pub const ADC_SMPR3_SMP3_Pos: u32 = 9;
pub const ADC_SMPR3_SMP3_Msk: u32 = 0x7 << ADC_SMPR3_SMP3_Pos;
pub const ADC_SMPR3_SMP3: u32 = ADC_SMPR3_SMP3_Msk;
pub const ADC_SMPR3_SMP3_0: u32 = 0x1 << ADC_SMPR3_SMP3_Pos;
pub const ADC_SMPR3_SMP3_1: u32 = 0x2 << ADC_SMPR3_SMP3_Pos;
pub const ADC_SMPR3_SMP3_2: u32 = 0x4 << ADC_SMPR3_SMP3_Pos;
pub const ADC_SMPR3_SMP4_Pos: u32 = 12;
pub const ADC_SMPR3_SMP4_Msk: u32 = 0x7 << ADC_SMPR3_SMP4_Pos;
pub const ADC_SMPR3_SMP4: u32 = ADC_SMPR3_SMP4_Msk;
pub const ADC_SMPR3_SMP4_0: u32 = 0x1 << ADC_SMPR3_SMP4_Pos;
pub const ADC_SMPR3_SMP4_1: u32 = 0x2 << ADC_SMPR3_SMP4_Pos;
pub const ADC_SMPR3_SMP4_2: u32 = 0x4 << ADC_SMPR3_SMP4_Pos;
pub const ADC_SMPR3_SMP5_Pos: u32 = 15;
pub const ADC_SMPR3_SMP5_Msk: u32 = 0x7 << ADC_SMPR3_SMP5_Pos;
pub const ADC_SMPR3_SMP5: u32 = ADC_SMPR3_SMP5_Msk;
pub const ADC_SMPR3_SMP5_0: u32 = 0x1 << ADC_SMPR3_SMP5_Pos;
pub const ADC_SMPR3_SMP5_1: u32 = 0x2 << ADC_SMPR3_SMP5_Pos;
pub const ADC_SMPR3_SMP5_2: u32 = 0x4 << ADC_SMPR3_SMP5_Pos;
pub const ADC_SMPR3_SMP6_Pos: u32 = 18;
pub const ADC_SMPR3_SMP6_Msk: u32 = 0x7 << ADC_SMPR3_SMP6_Pos;
pub const ADC_SMPR3_SMP6: u32 = ADC_SMPR3_SMP6_Msk;
pub const ADC_SMPR3_SMP6_0: u32 = 0x1 << ADC_SMPR3_SMP6_Pos;
pub const ADC_SMPR3_SMP6_1: u32 = 0x2 << ADC_SMPR3_SMP6_Pos;
pub const ADC_SMPR3_SMP6_2: u32 = 0x4 << ADC_SMPR3_SMP6_Pos;
pub const ADC_SMPR3_SMP7_Pos: u32 = 21;
pub const ADC_SMPR3_SMP7_Msk: u32 = 0x7 << ADC_SMPR3_SMP7_Pos;
pub const ADC_SMPR3_SMP7: u32 = ADC_SMPR3_SMP7_Msk;
pub const ADC_SMPR3_SMP7_0: u32 = 0x1 << ADC_SMPR3_SMP7_Pos;
pub const ADC_SMPR3_SMP7_1: u32 = 0x2 << ADC_SMPR3_SMP7_Pos;
pub const ADC_SMPR3_SMP7_2: u32 = 0x4 << ADC_SMPR3_SMP7_Pos;
pub const ADC_SMPR3_SMP8_Pos: u32 = 24;
pub const ADC_SMPR3_SMP8_Msk: u32 = 0x7 << ADC_SMPR3_SMP8_Pos;
pub const ADC_SMPR3_SMP8: u32 = ADC_SMPR3_SMP8_Msk;
pub const ADC_SMPR3_SMP8_0: u32 = 0x1 << ADC_SMPR3_SMP8_Pos;
pub const ADC_SMPR3_SMP8_1: u32 = 0x2 << ADC_SMPR3_SMP8_Pos;
pub const ADC_SMPR3_SMP8_2: u32 = 0x4 << ADC_SMPR3_SMP8_Pos;
pub const ADC_SMPR3_SMP9_Pos: u32 = 27;
pub const ADC_SMPR3_SMP9_Msk: u32 = 0x7 << ADC_SMPR3_SMP9_Pos;
pub const ADC_SMPR3_SMP9: u32 = ADC_SMPR3_SMP9_Msk;
pub const ADC_SMPR3_SMP9_0: u32 = 0x1 << ADC_SMPR3_SMP9_Pos;
pub const ADC_SMPR3_SMP9_1: u32 = 0x2 << ADC_SMPR3_SMP9_Pos;
pub const ADC_SMPR3_SMP9_2: u32 = 0x4 << ADC_SMPR3_SMP9_Pos;
pub const ADC_JOFR1_JOFFSET1_Pos: u32 = 0;
pub const ADC_JOFR1_JOFFSET1_Msk: u32 = 0xFFF << ADC_JOFR1_JOFFSET1_Pos;
pub const ADC_JOFR1_JOFFSET1: u32 = ADC_JOFR1_JOFFSET1_Msk;
pub const ADC_JOFR2_JOFFSET2_Pos: u32 = 0;
pub const ADC_JOFR2_JOFFSET2_Msk: u32 = 0xFFF << ADC_JOFR2_JOFFSET2_Pos;
pub const ADC_JOFR2_JOFFSET2: u32 = ADC_JOFR2_JOFFSET2_Msk;
pub const ADC_JOFR3_JOFFSET3_Pos: u32 = 0;
pub const ADC_JOFR3_JOFFSET3_Msk: u32 = 0xFFF << ADC_JOFR3_JOFFSET3_Pos;
pub const ADC_JOFR3_JOFFSET3: u32 = ADC_JOFR3_JOFFSET3_Msk;
pub const ADC_JOFR4_JOFFSET4_Pos: u32 = 0;
pub const ADC_JOFR4_JOFFSET4_Msk: u32 = 0xFFF << ADC_JOFR4_JOFFSET4_Pos;
pub const ADC_JOFR4_JOFFSET4: u32 = ADC_JOFR4_JOFFSET4_Msk;
pub const ADC_HTR_HT_Pos: u32 = 0;
pub const ADC_HTR_HT_Msk: u32 = 0xFFF << ADC_HTR_HT_Pos;
pub const ADC_HTR_HT: u32 = ADC_HTR_HT_Msk;
pub const ADC_LTR_LT_Pos: u32 = 0;
pub const ADC_LTR_LT_Msk: u32 = 0xFFF << ADC_LTR_LT_Pos;
pub const ADC_LTR_LT: u32 = ADC_LTR_LT_Msk;
pub const ADC_SQR1_L_Pos: u32 = 20;
pub const ADC_SQR1_L_Msk: u32 = 0x1F << ADC_SQR1_L_Pos;
pub const ADC_SQR1_L: u32 = ADC_SQR1_L_Msk;
pub const ADC_SQR1_L_0: u32 = 0x01 << ADC_SQR1_L_Pos;
pub const ADC_SQR1_L_1: u32 = 0x02 << ADC_SQR1_L_Pos;
pub const ADC_SQR1_L_2: u32 = 0x04 << ADC_SQR1_L_Pos;
pub const ADC_SQR1_L_3: u32 = 0x08 << ADC_SQR1_L_Pos;
pub const ADC_SQR1_L_4: u32 = 0x10 << ADC_SQR1_L_Pos;
pub const ADC_SQR1_SQ28_Pos: u32 = 15;
pub const ADC_SQR1_SQ28_Msk: u32 = 0x1F << ADC_SQR1_SQ28_Pos;
pub const ADC_SQR1_SQ28: u32 = ADC_SQR1_SQ28_Msk;
pub const ADC_SQR1_SQ28_0: u32 = 0x01 << ADC_SQR1_SQ28_Pos;
pub const ADC_SQR1_SQ28_1: u32 = 0x02 << ADC_SQR1_SQ28_Pos;
pub const ADC_SQR1_SQ28_2: u32 = 0x04 << ADC_SQR1_SQ28_Pos;
pub const ADC_SQR1_SQ28_3: u32 = 0x08 << ADC_SQR1_SQ28_Pos;
pub const ADC_SQR1_SQ28_4: u32 = 0x10 << ADC_SQR1_SQ28_Pos;
pub const ADC_SQR1_SQ27_Pos: u32 = 10;
pub const ADC_SQR1_SQ27_Msk: u32 = 0x1F << ADC_SQR1_SQ27_Pos;
pub const ADC_SQR1_SQ27: u32 = ADC_SQR1_SQ27_Msk;
pub const ADC_SQR1_SQ27_0: u32 = 0x01 << ADC_SQR1_SQ27_Pos;
pub const ADC_SQR1_SQ27_1: u32 = 0x02 << ADC_SQR1_SQ27_Pos;
pub const ADC_SQR1_SQ27_2: u32 = 0x04 << ADC_SQR1_SQ27_Pos;
pub const ADC_SQR1_SQ27_3: u32 = 0x08 << ADC_SQR1_SQ27_Pos;
pub const ADC_SQR1_SQ27_4: u32 = 0x10 << ADC_SQR1_SQ27_Pos;
pub const ADC_SQR1_SQ26_Pos: u32 = 5;
pub const ADC_SQR1_SQ26_Msk: u32 = 0x1F << ADC_SQR1_SQ26_Pos;
pub const ADC_SQR1_SQ26: u32 = ADC_SQR1_SQ26_Msk;
pub const ADC_SQR1_SQ26_0: u32 = 0x01 << ADC_SQR1_SQ26_Pos;
pub const ADC_SQR1_SQ26_1: u32 = 0x02 << ADC_SQR1_SQ26_Pos;
pub const ADC_SQR1_SQ26_2: u32 = 0x04 << ADC_SQR1_SQ26_Pos;
pub const ADC_SQR1_SQ26_3: u32 = 0x08 << ADC_SQR1_SQ26_Pos;
pub const ADC_SQR1_SQ26_4: u32 = 0x10 << ADC_SQR1_SQ26_Pos;
pub const ADC_SQR1_SQ25_Pos: u32 = 0;
pub const ADC_SQR1_SQ25_Msk: u32 = 0x1F << ADC_SQR1_SQ25_Pos;
pub const ADC_SQR1_SQ25: u32 = ADC_SQR1_SQ25_Msk;
pub const ADC_SQR1_SQ25_0: u32 = 0x01 << ADC_SQR1_SQ25_Pos;
pub const ADC_SQR1_SQ25_1: u32 = 0x02 << ADC_SQR1_SQ25_Pos;
pub const ADC_SQR1_SQ25_2: u32 = 0x04 << ADC_SQR1_SQ25_Pos;
pub const ADC_SQR1_SQ25_3: u32 = 0x08 << ADC_SQR1_SQ25_Pos;
pub const ADC_SQR1_SQ25_4: u32 = 0x10 << ADC_SQR1_SQ25_Pos;
pub const ADC_SQR2_SQ19_Pos: u32 = 0;
pub const ADC_SQR2_SQ19_Msk: u32 = 0x1F << ADC_SQR2_SQ19_Pos;
pub const ADC_SQR2_SQ19: u32 = ADC_SQR2_SQ19_Msk;
pub const ADC_SQR2_SQ19_0: u32 = 0x01 << ADC_SQR2_SQ19_Pos;
pub const ADC_SQR2_SQ19_1: u32 = 0x02 << ADC_SQR2_SQ19_Pos;
pub const ADC_SQR2_SQ19_2: u32 = 0x04 << ADC_SQR2_SQ19_Pos;
pub const ADC_SQR2_SQ19_3: u32 = 0x08 << ADC_SQR2_SQ19_Pos;
pub const ADC_SQR2_SQ19_4: u32 = 0x10 << ADC_SQR2_SQ19_Pos;
pub const ADC_SQR2_SQ20_Pos: u32 = 5;
pub const ADC_SQR2_SQ20_Msk: u32 = 0x1F << ADC_SQR2_SQ20_Pos;
pub const ADC_SQR2_SQ20: u32 = ADC_SQR2_SQ20_Msk;
pub const ADC_SQR2_SQ20_0: u32 = 0x01 << ADC_SQR2_SQ20_Pos;
pub const ADC_SQR2_SQ20_1: u32 = 0x02 << ADC_SQR2_SQ20_Pos;
pub const ADC_SQR2_SQ20_2: u32 = 0x04 << ADC_SQR2_SQ20_Pos;
pub const ADC_SQR2_SQ20_3: u32 = 0x08 << ADC_SQR2_SQ20_Pos;
pub const ADC_SQR2_SQ20_4: u32 = 0x10 << ADC_SQR2_SQ20_Pos;
pub const ADC_SQR2_SQ21_Pos: u32 = 10;
pub const ADC_SQR2_SQ21_Msk: u32 = 0x1F << ADC_SQR2_SQ21_Pos;
pub const ADC_SQR2_SQ21: u32 = ADC_SQR2_SQ21_Msk;
pub const ADC_SQR2_SQ21_0: u32 = 0x01 << ADC_SQR2_SQ21_Pos;
pub const ADC_SQR2_SQ21_1: u32 = 0x02 << ADC_SQR2_SQ21_Pos;
pub const ADC_SQR2_SQ21_2: u32 = 0x04 << ADC_SQR2_SQ21_Pos;
pub const ADC_SQR2_SQ21_3: u32 = 0x08 << ADC_SQR2_SQ21_Pos;
pub const ADC_SQR2_SQ21_4: u32 = 0x10 << ADC_SQR2_SQ21_Pos;
pub const ADC_SQR2_SQ22_Pos: u32 = 15;
pub const ADC_SQR2_SQ22_Msk: u32 = 0x1F << ADC_SQR2_SQ22_Pos;
pub const ADC_SQR2_SQ22: u32 = ADC_SQR2_SQ22_Msk;
pub const ADC_SQR2_SQ22_0: u32 = 0x01 << ADC_SQR2_SQ22_Pos;
pub const ADC_SQR2_SQ22_1: u32 = 0x02 << ADC_SQR2_SQ22_Pos;
pub const ADC_SQR2_SQ22_2: u32 = 0x04 << ADC_SQR2_SQ22_Pos;
pub const ADC_SQR2_SQ22_3: u32 = 0x08 << ADC_SQR2_SQ22_Pos;
pub const ADC_SQR2_SQ22_4: u32 = 0x10 << ADC_SQR2_SQ22_Pos;
pub const ADC_SQR2_SQ23_Pos: u32 = 20;
pub const ADC_SQR2_SQ23_Msk: u32 = 0x1F << ADC_SQR2_SQ23_Pos;
pub const ADC_SQR2_SQ23: u32 = ADC_SQR2_SQ23_Msk;
pub const ADC_SQR2_SQ23_0: u32 = 0x01 << ADC_SQR2_SQ23_Pos;
pub const ADC_SQR2_SQ23_1: u32 = 0x02 << ADC_SQR2_SQ23_Pos;
pub const ADC_SQR2_SQ23_2: u32 = 0x04 << ADC_SQR2_SQ23_Pos;
pub const ADC_SQR2_SQ23_3: u32 = 0x08 << ADC_SQR2_SQ23_Pos;
pub const ADC_SQR2_SQ23_4: u32 = 0x10 << ADC_SQR2_SQ23_Pos;
pub const ADC_SQR2_SQ24_Pos: u32 = 25;
pub const ADC_SQR2_SQ24_Msk: u32 = 0x1F << ADC_SQR2_SQ24_Pos;
pub const ADC_SQR2_SQ24: u32 = ADC_SQR2_SQ24_Msk;
pub const ADC_SQR2_SQ24_0: u32 = 0x01 << ADC_SQR2_SQ24_Pos;
pub const ADC_SQR2_SQ24_1: u32 = 0x02 << ADC_SQR2_SQ24_Pos;
pub const ADC_SQR2_SQ24_2: u32 = 0x04 << ADC_SQR2_SQ24_Pos;
pub const ADC_SQR2_SQ24_3: u32 = 0x08 << ADC_SQR2_SQ24_Pos;
pub const ADC_SQR2_SQ24_4: u32 = 0x10 << ADC_SQR2_SQ24_Pos;
pub const ADC_SQR3_SQ13_Pos: u32 = 0;
pub const ADC_SQR3_SQ13_Msk: u32 = 0x1F << ADC_SQR3_SQ13_Pos;
pub const ADC_SQR3_SQ13: u32 = ADC_SQR3_SQ13_Msk;
pub const ADC_SQR3_SQ13_0: u32 = 0x01 << ADC_SQR3_SQ13_Pos;
pub const ADC_SQR3_SQ13_1: u32 = 0x02 << ADC_SQR3_SQ13_Pos;
pub const ADC_SQR3_SQ13_2: u32 = 0x04 << ADC_SQR3_SQ13_Pos;
pub const ADC_SQR3_SQ13_3: u32 = 0x08 << ADC_SQR3_SQ13_Pos;
pub const ADC_SQR3_SQ13_4: u32 = 0x10 << ADC_SQR3_SQ13_Pos;
pub const ADC_SQR3_SQ14_Pos: u32 = 5;
pub const ADC_SQR3_SQ14_Msk: u32 = 0x1F << ADC_SQR3_SQ14_Pos;
pub const ADC_SQR3_SQ14: u32 = ADC_SQR3_SQ14_Msk;
pub const ADC_SQR3_SQ14_0: u32 = 0x01 << ADC_SQR3_SQ14_Pos;
pub const ADC_SQR3_SQ14_1: u32 = 0x02 << ADC_SQR3_SQ14_Pos;
pub const ADC_SQR3_SQ14_2: u32 = 0x04 << ADC_SQR3_SQ14_Pos;
pub const ADC_SQR3_SQ14_3: u32 = 0x08 << ADC_SQR3_SQ14_Pos;
pub const ADC_SQR3_SQ14_4: u32 = 0x10 << ADC_SQR3_SQ14_Pos;
pub const ADC_SQR3_SQ15_Pos: u32 = 10;
pub const ADC_SQR3_SQ15_Msk: u32 = 0x1F << ADC_SQR3_SQ15_Pos;
pub const ADC_SQR3_SQ15: u32 = ADC_SQR3_SQ15_Msk;
pub const ADC_SQR3_SQ15_0: u32 = 0x01 << ADC_SQR3_SQ15_Pos;
pub const ADC_SQR3_SQ15_1: u32 = 0x02 << ADC_SQR3_SQ15_Pos;
pub const ADC_SQR3_SQ15_2: u32 = 0x04 << ADC_SQR3_SQ15_Pos;
pub const ADC_SQR3_SQ15_3: u32 = 0x08 << ADC_SQR3_SQ15_Pos;
pub const ADC_SQR3_SQ15_4: u32 = 0x10 << ADC_SQR3_SQ15_Pos;
pub const ADC_SQR3_SQ16_Pos: u32 = 15;
pub const ADC_SQR3_SQ16_Msk: u32 = 0x1F << ADC_SQR3_SQ16_Pos;
pub const ADC_SQR3_SQ16: u32 = ADC_SQR3_SQ16_Msk;
pub const ADC_SQR3_SQ16_0: u32 = 0x01 << ADC_SQR3_SQ16_Pos;
pub const ADC_SQR3_SQ16_1: u32 = 0x02 << ADC_SQR3_SQ16_Pos;
pub const ADC_SQR3_SQ16_2: u32 = 0x04 << ADC_SQR3_SQ16_Pos;
pub const ADC_SQR3_SQ16_3: u32 = 0x08 << ADC_SQR3_SQ16_Pos;
pub const ADC_SQR3_SQ16_4: u32 = 0x10 << ADC_SQR3_SQ16_Pos;
pub const ADC_SQR3_SQ17_Pos: u32 = 20;
pub const ADC_SQR3_SQ17_Msk: u32 = 0x1F << ADC_SQR3_SQ17_Pos;
pub const ADC_SQR3_SQ17: u32 = ADC_SQR3_SQ17_Msk;
pub const ADC_SQR3_SQ17_0: u32 = 0x01 << ADC_SQR3_SQ17_Pos;
pub const ADC_SQR3_SQ17_1: u32 = 0x02 << ADC_SQR3_SQ17_Pos;
pub const ADC_SQR3_SQ17_2: u32 = 0x04 << ADC_SQR3_SQ17_Pos;
pub const ADC_SQR3_SQ17_3: u32 = 0x08 << ADC_SQR3_SQ17_Pos;
pub const ADC_SQR3_SQ17_4: u32 = 0x10 << ADC_SQR3_SQ17_Pos;
pub const ADC_SQR3_SQ18_Pos: u32 = 25;
pub const ADC_SQR3_SQ18_Msk: u32 = 0x1F << ADC_SQR3_SQ18_Pos;
pub const ADC_SQR3_SQ18: u32 = ADC_SQR3_SQ18_Msk;
pub const ADC_SQR3_SQ18_0: u32 = 0x01 << ADC_SQR3_SQ18_Pos;
pub const ADC_SQR3_SQ18_1: u32 = 0x02 << ADC_SQR3_SQ18_Pos;
pub const ADC_SQR3_SQ18_2: u32 = 0x04 << ADC_SQR3_SQ18_Pos;
pub const ADC_SQR3_SQ18_3: u32 = 0x08 << ADC_SQR3_SQ18_Pos;
pub const ADC_SQR3_SQ18_4: u32 = 0x10 << ADC_SQR3_SQ18_Pos;
pub const ADC_SQR4_SQ7_Pos: u32 = 0;
pub const ADC_SQR4_SQ7_Msk: u32 = 0x1F << ADC_SQR4_SQ7_Pos;
pub const ADC_SQR4_SQ7: u32 = ADC_SQR4_SQ7_Msk;
pub const ADC_SQR4_SQ7_0: u32 = 0x01 << ADC_SQR4_SQ7_Pos;
pub const ADC_SQR4_SQ7_1: u32 = 0x02 << ADC_SQR4_SQ7_Pos;
pub const ADC_SQR4_SQ7_2: u32 = 0x04 << ADC_SQR4_SQ7_Pos;
pub const ADC_SQR4_SQ7_3: u32 = 0x08 << ADC_SQR4_SQ7_Pos;
pub const ADC_SQR4_SQ7_4: u32 = 0x10 << ADC_SQR4_SQ7_Pos;
pub const ADC_SQR4_SQ8_Pos: u32 = 5;
pub const ADC_SQR4_SQ8_Msk: u32 = 0x1F << ADC_SQR4_SQ8_Pos;
pub const ADC_SQR4_SQ8: u32 = ADC_SQR4_SQ8_Msk;
pub const ADC_SQR4_SQ8_0: u32 = 0x01 << ADC_SQR4_SQ8_Pos;
pub const ADC_SQR4_SQ8_1: u32 = 0x02 << ADC_SQR4_SQ8_Pos;
pub const ADC_SQR4_SQ8_2: u32 = 0x04 << ADC_SQR4_SQ8_Pos;
pub const ADC_SQR4_SQ8_3: u32 = 0x08 << ADC_SQR4_SQ8_Pos;
pub const ADC_SQR4_SQ8_4: u32 = 0x10 << ADC_SQR4_SQ8_Pos;
pub const ADC_SQR4_SQ9_Pos: u32 = 10;
pub const ADC_SQR4_SQ9_Msk: u32 = 0x1F << ADC_SQR4_SQ9_Pos;
pub const ADC_SQR4_SQ9: u32 = ADC_SQR4_SQ9_Msk;
pub const ADC_SQR4_SQ9_0: u32 = 0x01 << ADC_SQR4_SQ9_Pos;
pub const ADC_SQR4_SQ9_1: u32 = 0x02 << ADC_SQR4_SQ9_Pos;
pub const ADC_SQR4_SQ9_2: u32 = 0x04 << ADC_SQR4_SQ9_Pos;
pub const ADC_SQR4_SQ9_3: u32 = 0x08 << ADC_SQR4_SQ9_Pos;
pub const ADC_SQR4_SQ9_4: u32 = 0x10 << ADC_SQR4_SQ9_Pos;
pub const ADC_SQR4_SQ10_Pos: u32 = 15;
pub const ADC_SQR4_SQ10_Msk: u32 = 0x1F << ADC_SQR4_SQ10_Pos;
pub const ADC_SQR4_SQ10: u32 = ADC_SQR4_SQ10_Msk;
pub const ADC_SQR4_SQ10_0: u32 = 0x01 << ADC_SQR4_SQ10_Pos;
pub const ADC_SQR4_SQ10_1: u32 = 0x02 << ADC_SQR4_SQ10_Pos;
pub const ADC_SQR4_SQ10_2: u32 = 0x04 << ADC_SQR4_SQ10_Pos;
pub const ADC_SQR4_SQ10_3: u32 = 0x08 << ADC_SQR4_SQ10_Pos;
pub const ADC_SQR4_SQ10_4: u32 = 0x10 << ADC_SQR4_SQ10_Pos;
pub const ADC_SQR4_SQ11_Pos: u32 = 20;
pub const ADC_SQR4_SQ11_Msk: u32 = 0x1F << ADC_SQR4_SQ11_Pos;
pub const ADC_SQR4_SQ11: u32 = ADC_SQR4_SQ11_Msk;
pub const ADC_SQR4_SQ11_0: u32 = 0x01 << ADC_SQR4_SQ11_Pos;
pub const ADC_SQR4_SQ11_1: u32 = 0x02 << ADC_SQR4_SQ11_Pos;
pub const ADC_SQR4_SQ11_2: u32 = 0x04 << ADC_SQR4_SQ11_Pos;
pub const ADC_SQR4_SQ11_3: u32 = 0x08 << ADC_SQR4_SQ11_Pos;
pub const ADC_SQR4_SQ11_4: u32 = 0x10 << ADC_SQR4_SQ11_Pos;
pub const ADC_SQR4_SQ12_Pos: u32 = 25;
pub const ADC_SQR4_SQ12_Msk: u32 = 0x1F << ADC_SQR4_SQ12_Pos;
pub const ADC_SQR4_SQ12: u32 = ADC_SQR4_SQ12_Msk;
pub const ADC_SQR4_SQ12_0: u32 = 0x01 << ADC_SQR4_SQ12_Pos;
pub const ADC_SQR4_SQ12_1: u32 = 0x02 << ADC_SQR4_SQ12_Pos;
pub const ADC_SQR4_SQ12_2: u32 = 0x04 << ADC_SQR4_SQ12_Pos;
pub const ADC_SQR4_SQ12_3: u32 = 0x08 << ADC_SQR4_SQ12_Pos;
pub const ADC_SQR4_SQ12_4: u32 = 0x10 << ADC_SQR4_SQ12_Pos;
pub const ADC_SQR5_SQ1_Pos: u32 = 0;
pub const ADC_SQR5_SQ1_Msk: u32 = 0x1F << ADC_SQR5_SQ1_Pos;
pub const ADC_SQR5_SQ1: u32 = ADC_SQR5_SQ1_Msk;
pub const ADC_SQR5_SQ1_0: u32 = 0x01 << ADC_SQR5_SQ1_Pos;
pub const ADC_SQR5_SQ1_1: u32 = 0x02 << ADC_SQR5_SQ1_Pos;
pub const ADC_SQR5_SQ1_2: u32 = 0x04 << ADC_SQR5_SQ1_Pos;
pub const ADC_SQR5_SQ1_3: u32 = 0x08 << ADC_SQR5_SQ1_Pos;
pub const ADC_SQR5_SQ1_4: u32 = 0x10 << ADC_SQR5_SQ1_Pos;
pub const ADC_SQR5_SQ2_Pos: u32 = 5;
pub const ADC_SQR5_SQ2_Msk: u32 = 0x1F << ADC_SQR5_SQ2_Pos;
pub const ADC_SQR5_SQ2: u32 = ADC_SQR5_SQ2_Msk;
pub const ADC_SQR5_SQ2_0: u32 = 0x01 << ADC_SQR5_SQ2_Pos;
pub const ADC_SQR5_SQ2_1: u32 = 0x02 << ADC_SQR5_SQ2_Pos;
pub const ADC_SQR5_SQ2_2: u32 = 0x04 << ADC_SQR5_SQ2_Pos;
pub const ADC_SQR5_SQ2_3: u32 = 0x08 << ADC_SQR5_SQ2_Pos;
pub const ADC_SQR5_SQ2_4: u32 = 0x10 << ADC_SQR5_SQ2_Pos;
pub const ADC_SQR5_SQ3_Pos: u32 = 10;
pub const ADC_SQR5_SQ3_Msk: u32 = 0x1F << ADC_SQR5_SQ3_Pos;
pub const ADC_SQR5_SQ3: u32 = ADC_SQR5_SQ3_Msk;
pub const ADC_SQR5_SQ3_0: u32 = 0x01 << ADC_SQR5_SQ3_Pos;
pub const ADC_SQR5_SQ3_1: u32 = 0x02 << ADC_SQR5_SQ3_Pos;
pub const ADC_SQR5_SQ3_2: u32 = 0x04 << ADC_SQR5_SQ3_Pos;
pub const ADC_SQR5_SQ3_3: u32 = 0x08 << ADC_SQR5_SQ3_Pos;
pub const ADC_SQR5_SQ3_4: u32 = 0x10 << ADC_SQR5_SQ3_Pos;
pub const ADC_SQR5_SQ4_Pos: u32 = 15;
pub const ADC_SQR5_SQ4_Msk: u32 = 0x1F << ADC_SQR5_SQ4_Pos;
pub const ADC_SQR5_SQ4: u32 = ADC_SQR5_SQ4_Msk;
pub const ADC_SQR5_SQ4_0: u32 = 0x01 << ADC_SQR5_SQ4_Pos;
pub const ADC_SQR5_SQ4_1: u32 = 0x02 << ADC_SQR5_SQ4_Pos;
pub const ADC_SQR5_SQ4_2: u32 = 0x04 << ADC_SQR5_SQ4_Pos;
pub const ADC_SQR5_SQ4_3: u32 = 0x08 << ADC_SQR5_SQ4_Pos;
pub const ADC_SQR5_SQ4_4: u32 = 0x10 << ADC_SQR5_SQ4_Pos;
pub const ADC_SQR5_SQ5_Pos: u32 = 20;
pub const ADC_SQR5_SQ5_Msk: u32 = 0x1F << ADC_SQR5_SQ5_Pos;
pub const ADC_SQR5_SQ5: u32 = ADC_SQR5_SQ5_Msk;
pub const ADC_SQR5_SQ5_0: u32 = 0x01 << ADC_SQR5_SQ5_Pos;
pub const ADC_SQR5_SQ5_1: u32 = 0x02 << ADC_SQR5_SQ5_Pos;
pub const ADC_SQR5_SQ5_2: u32 = 0x04 << ADC_SQR5_SQ5_Pos;
pub const ADC_SQR5_SQ5_3: u32 = 0x08 << ADC_SQR5_SQ5_Pos;
pub const ADC_SQR5_SQ5_4: u32 = 0x10 << ADC_SQR5_SQ5_Pos;
pub const ADC_SQR5_SQ6_Pos: u32 = 25;
pub const ADC_SQR5_SQ6_Msk: u32 = 0x1F << ADC_SQR5_SQ6_Pos;
pub const ADC_SQR5_SQ6: u32 = ADC_SQR5_SQ6_Msk;
pub const ADC_SQR5_SQ6_0: u32 = 0x01 << ADC_SQR5_SQ6_Pos;
pub const ADC_SQR5_SQ6_1: u32 = 0x02 << ADC_SQR5_SQ6_Pos;
pub const ADC_SQR5_SQ6_2: u32 = 0x04 << ADC_SQR5_SQ6_Pos;
pub const ADC_SQR5_SQ6_3: u32 = 0x08 << ADC_SQR5_SQ6_Pos;
pub const ADC_SQR5_SQ6_4: u32 = 0x10 << ADC_SQR5_SQ6_Pos;
pub const ADC_JSQR_JSQ1_Pos: u32 = 0;
pub const ADC_JSQR_JSQ1_Msk: u32 = 0x1F << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1: u32 = ADC_JSQR_JSQ1_Msk;
pub const ADC_JSQR_JSQ1_0: u32 = 0x01 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1_1: u32 = 0x02 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1_2: u32 = 0x04 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1_3: u32 = 0x08 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1_4: u32 = 0x10 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ2_Pos: u32 = 5;
pub const ADC_JSQR_JSQ2_Msk: u32 = 0x1F << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2: u32 = ADC_JSQR_JSQ2_Msk;
pub const ADC_JSQR_JSQ2_0: u32 = 0x01 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2_1: u32 = 0x02 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2_2: u32 = 0x04 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2_3: u32 = 0x08 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2_4: u32 = 0x10 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ3_Pos: u32 = 10;
pub const ADC_JSQR_JSQ3_Msk: u32 = 0x1F << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3: u32 = ADC_JSQR_JSQ3_Msk;
pub const ADC_JSQR_JSQ3_0: u32 = 0x01 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3_1: u32 = 0x02 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3_2: u32 = 0x04 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3_3: u32 = 0x08 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3_4: u32 = 0x10 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ4_Pos: u32 = 15;
pub const ADC_JSQR_JSQ4_Msk: u32 = 0x1F << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4: u32 = ADC_JSQR_JSQ4_Msk;
pub const ADC_JSQR_JSQ4_0: u32 = 0x01 << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4_1: u32 = 0x02 << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4_2: u32 = 0x04 << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4_3: u32 = 0x08 << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4_4: u32 = 0x10 << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JL_Pos: u32 = 20;
pub const ADC_JSQR_JL_Msk: u32 = 0x3 << ADC_JSQR_JL_Pos;
pub const ADC_JSQR_JL: u32 = ADC_JSQR_JL_Msk;
pub const ADC_JSQR_JL_0: u32 = 0x1 << ADC_JSQR_JL_Pos;
pub const ADC_JSQR_JL_1: u32 = 0x2 << ADC_JSQR_JL_Pos;
pub const ADC_JDR1_JDATA_Pos: u32 = 0;
pub const ADC_JDR1_JDATA_Msk: u32 = 0xFFFF << ADC_JDR1_JDATA_Pos;
pub const ADC_JDR1_JDATA: u32 = ADC_JDR1_JDATA_Msk;
pub const ADC_JDR2_JDATA_Pos: u32 = 0;
pub const ADC_JDR2_JDATA_Msk: u32 = 0xFFFF << ADC_JDR2_JDATA_Pos;
pub const ADC_JDR2_JDATA: u32 = ADC_JDR2_JDATA_Msk;
pub const ADC_JDR3_JDATA_Pos: u32 = 0;
pub const ADC_JDR3_JDATA_Msk: u32 = 0xFFFF << ADC_JDR3_JDATA_Pos;
pub const ADC_JDR3_JDATA: u32 = ADC_JDR3_JDATA_Msk;
pub const ADC_JDR4_JDATA_Pos: u32 = 0;
pub const ADC_JDR4_JDATA_Msk: u32 = 0xFFFF << ADC_JDR4_JDATA_Pos;
pub const ADC_JDR4_JDATA: u32 = ADC_JDR4_JDATA_Msk;
pub const ADC_DR_DATA_Pos: u32 = 0;
pub const ADC_DR_DATA_Msk: u32 = 0xFFFF << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA: u32 = ADC_DR_DATA_Msk;
pub const ADC_SMPR0_SMP30_Pos: u32 = 0;
pub const ADC_SMPR0_SMP30_Msk: u32 = 0x7 << ADC_SMPR0_SMP30_Pos;
pub const ADC_SMPR0_SMP30: u32 = ADC_SMPR0_SMP30_Msk;
pub const ADC_SMPR0_SMP30_0: u32 = 0x1 << ADC_SMPR0_SMP30_Pos;
pub const ADC_SMPR0_SMP30_1: u32 = 0x2 << ADC_SMPR0_SMP30_Pos;
pub const ADC_SMPR0_SMP30_2: u32 = 0x4 << ADC_SMPR0_SMP30_Pos;
pub const ADC_SMPR0_SMP31_Pos: u32 = 3;
pub const ADC_SMPR0_SMP31_Msk: u32 = 0x7 << ADC_SMPR0_SMP31_Pos;
pub const ADC_SMPR0_SMP31: u32 = ADC_SMPR0_SMP31_Msk;
pub const ADC_SMPR0_SMP31_0: u32 = 0x1 << ADC_SMPR0_SMP31_Pos;
pub const ADC_SMPR0_SMP31_1: u32 = 0x2 << ADC_SMPR0_SMP31_Pos;
pub const ADC_SMPR0_SMP31_2: u32 = 0x4 << ADC_SMPR0_SMP31_Pos;
pub const ADC_CSR_AWD1_Pos: u32 = 0;
pub const ADC_CSR_AWD1_Msk: u32 = 0x1 << ADC_CSR_AWD1_Pos;
pub const ADC_CSR_AWD1: u32 = ADC_CSR_AWD1_Msk;
pub const ADC_CSR_EOCS1_Pos: u32 = 1;
pub const ADC_CSR_EOCS1_Msk: u32 = 0x1 << ADC_CSR_EOCS1_Pos;
pub const ADC_CSR_EOCS1: u32 = ADC_CSR_EOCS1_Msk;
pub const ADC_CSR_JEOS1_Pos: u32 = 2;
pub const ADC_CSR_JEOS1_Msk: u32 = 0x1 << ADC_CSR_JEOS1_Pos;
pub const ADC_CSR_JEOS1: u32 = ADC_CSR_JEOS1_Msk;
pub const ADC_CSR_JSTRT1_Pos: u32 = 3;
pub const ADC_CSR_JSTRT1_Msk: u32 = 0x1 << ADC_CSR_JSTRT1_Pos;
pub const ADC_CSR_JSTRT1: u32 = ADC_CSR_JSTRT1_Msk;
pub const ADC_CSR_STRT1_Pos: u32 = 4;
pub const ADC_CSR_STRT1_Msk: u32 = 0x1 << ADC_CSR_STRT1_Pos;
pub const ADC_CSR_STRT1: u32 = ADC_CSR_STRT1_Msk;
pub const ADC_CSR_OVR1_Pos: u32 = 5;
pub const ADC_CSR_OVR1_Msk: u32 = 0x1 << ADC_CSR_OVR1_Pos;
pub const ADC_CSR_OVR1: u32 = ADC_CSR_OVR1_Msk;
pub const ADC_CSR_ADONS1_Pos: u32 = 6;
pub const ADC_CSR_ADONS1_Msk: u32 = 0x1 << ADC_CSR_ADONS1_Pos;
pub const ADC_CSR_ADONS1: u32 = ADC_CSR_ADONS1_Msk;
pub const ADC_CSR_EOC1: u32 = ADC_CSR_EOCS1;
pub const ADC_CSR_JEOC1: u32 = ADC_CSR_JEOS1;
pub const ADC_CCR_ADCPRE_Pos: u32 = 16;
pub const ADC_CCR_ADCPRE_Msk: u32 = 0x3 << ADC_CCR_ADCPRE_Pos;
pub const ADC_CCR_ADCPRE: u32 = ADC_CCR_ADCPRE_Msk;
pub const ADC_CCR_ADCPRE_0: u32 = 0x1 << ADC_CCR_ADCPRE_Pos;
pub const ADC_CCR_ADCPRE_1: u32 = 0x2 << ADC_CCR_ADCPRE_Pos;
pub const ADC_CCR_TSVREFE_Pos: u32 = 23;
pub const ADC_CCR_TSVREFE_Msk: u32 = 0x1 << ADC_CCR_TSVREFE_Pos;
pub const ADC_CCR_TSVREFE: u32 = ADC_CCR_TSVREFE_Msk;
pub const COMP_CSR_10KPU: u32 = 0x00000001;
pub const COMP_CSR_400KPU: u32 = 0x00000002;
pub const COMP_CSR_10KPD: u32 = 0x00000004;
pub const COMP_CSR_400KPD: u32 = 0x00000008;
pub const COMP_CSR_CMP1EN_Pos: u32 = 4;
pub const COMP_CSR_CMP1EN_Msk: u32 = 0x1 << COMP_CSR_CMP1EN_Pos;
pub const COMP_CSR_CMP1EN: u32 = COMP_CSR_CMP1EN_Msk;
pub const COMP_CSR_CMP1OUT_Pos: u32 = 7;
pub const COMP_CSR_CMP1OUT_Msk: u32 = 0x1 << COMP_CSR_CMP1OUT_Pos;
pub const COMP_CSR_CMP1OUT: u32 = COMP_CSR_CMP1OUT_Msk;
pub const COMP_CSR_SPEED_Pos: u32 = 12;
pub const COMP_CSR_SPEED_Msk: u32 = 0x1 << COMP_CSR_SPEED_Pos;
pub const COMP_CSR_SPEED: u32 = COMP_CSR_SPEED_Msk;
pub const COMP_CSR_CMP2OUT_Pos: u32 = 13;
pub const COMP_CSR_CMP2OUT_Msk: u32 = 0x1 << COMP_CSR_CMP2OUT_Pos;
pub const COMP_CSR_CMP2OUT: u32 = COMP_CSR_CMP2OUT_Msk;
pub const COMP_CSR_WNDWE_Pos: u32 = 17;
pub const COMP_CSR_WNDWE_Msk: u32 = 0x1 << COMP_CSR_WNDWE_Pos;
pub const COMP_CSR_WNDWE: u32 = COMP_CSR_WNDWE_Msk;
pub const COMP_CSR_INSEL_Pos: u32 = 18;
pub const COMP_CSR_INSEL_Msk: u32 = 0x7 << COMP_CSR_INSEL_Pos;
pub const COMP_CSR_INSEL: u32 = COMP_CSR_INSEL_Msk;
pub const COMP_CSR_INSEL_0: u32 = 0x1 << COMP_CSR_INSEL_Pos;
pub const COMP_CSR_INSEL_1: u32 = 0x2 << COMP_CSR_INSEL_Pos;
pub const COMP_CSR_INSEL_2: u32 = 0x4 << COMP_CSR_INSEL_Pos;
pub const COMP_CSR_OUTSEL_Pos: u32 = 21;
pub const COMP_CSR_OUTSEL_Msk: u32 = 0x7 << COMP_CSR_OUTSEL_Pos;
pub const COMP_CSR_OUTSEL: u32 = COMP_CSR_OUTSEL_Msk;
pub const COMP_CSR_OUTSEL_0: u32 = 0x1 << COMP_CSR_OUTSEL_Pos;
pub const COMP_CSR_OUTSEL_1: u32 = 0x2 << COMP_CSR_OUTSEL_Pos;
pub const COMP_CSR_OUTSEL_2: u32 = 0x4 << COMP_CSR_OUTSEL_Pos;
pub const COMP_CSR_SW1_Pos: u32 = 5;
pub const COMP_CSR_SW1_Msk: u32 = 0x1 << COMP_CSR_SW1_Pos;
pub const COMP_CSR_SW1: u32 = COMP_CSR_SW1_Msk;
pub const COMP_CSR_VREFOUTEN_Pos: u32 = 16;
pub const COMP_CSR_VREFOUTEN_Msk: u32 = 0x1 << COMP_CSR_VREFOUTEN_Pos;
pub const COMP_CSR_VREFOUTEN: u32 = COMP_CSR_VREFOUTEN_Msk;
pub const COMP_CSR_FCH3_Pos: u32 = 26;
pub const COMP_CSR_FCH3_Msk: u32 = 0x1 << COMP_CSR_FCH3_Pos;
pub const COMP_CSR_FCH3: u32 = COMP_CSR_FCH3_Msk;
pub const COMP_CSR_FCH8_Pos: u32 = 27;
pub const COMP_CSR_FCH8_Msk: u32 = 0x1 << COMP_CSR_FCH8_Pos;
pub const COMP_CSR_FCH8: u32 = COMP_CSR_FCH8_Msk;
pub const COMP_CSR_RCH13_Pos: u32 = 28;
pub const COMP_CSR_RCH13_Msk: u32 = 0x1 << COMP_CSR_RCH13_Pos;
pub const COMP_CSR_RCH13: u32 = COMP_CSR_RCH13_Msk;
pub const COMP_CSR_CAIE_Pos: u32 = 29;
pub const COMP_CSR_CAIE_Msk: u32 = 0x1 << COMP_CSR_CAIE_Pos;
pub const COMP_CSR_CAIE: u32 = COMP_CSR_CAIE_Msk;
pub const COMP_CSR_CAIF_Pos: u32 = 30;
pub const COMP_CSR_CAIF_Msk: u32 = 0x1 << COMP_CSR_CAIF_Pos;
pub const COMP_CSR_CAIF: u32 = COMP_CSR_CAIF_Msk;
pub const COMP_CSR_TSUSP_Pos: u32 = 31;
pub const COMP_CSR_TSUSP_Msk: u32 = 0x1 << COMP_CSR_TSUSP_Pos;
pub const COMP_CSR_TSUSP: u32 = COMP_CSR_TSUSP_Msk;
pub const OPAMP_CSR_OPA1PD_Pos: u32 = 0;
pub const OPAMP_CSR_OPA1PD_Msk: u32 = 0x1 << OPAMP_CSR_OPA1PD_Pos;
pub const OPAMP_CSR_OPA1PD: u32 = OPAMP_CSR_OPA1PD_Msk;
pub const OPAMP_CSR_S3SEL1_Pos: u32 = 1;
pub const OPAMP_CSR_S3SEL1_Msk: u32 = 0x1 << OPAMP_CSR_S3SEL1_Pos;
pub const OPAMP_CSR_S3SEL1: u32 = OPAMP_CSR_S3SEL1_Msk;
pub const OPAMP_CSR_S4SEL1_Pos: u32 = 2;
pub const OPAMP_CSR_S4SEL1_Msk: u32 = 0x1 << OPAMP_CSR_S4SEL1_Pos;
pub const OPAMP_CSR_S4SEL1: u32 = OPAMP_CSR_S4SEL1_Msk;
pub const OPAMP_CSR_S5SEL1_Pos: u32 = 3;
pub const OPAMP_CSR_S5SEL1_Msk: u32 = 0x1 << OPAMP_CSR_S5SEL1_Pos;
pub const OPAMP_CSR_S5SEL1: u32 = OPAMP_CSR_S5SEL1_Msk;
pub const OPAMP_CSR_S6SEL1_Pos: u32 = 4;
pub const OPAMP_CSR_S6SEL1_Msk: u32 = 0x1 << OPAMP_CSR_S6SEL1_Pos;
pub const OPAMP_CSR_S6SEL1: u32 = OPAMP_CSR_S6SEL1_Msk;
pub const OPAMP_CSR_OPA1CAL_L_Pos: u32 = 5;
pub const OPAMP_CSR_OPA1CAL_L_Msk: u32 = 0x1 << OPAMP_CSR_OPA1CAL_L_Pos;
pub const OPAMP_CSR_OPA1CAL_L: u32 = OPAMP_CSR_OPA1CAL_L_Msk;
pub const OPAMP_CSR_OPA1CAL_H_Pos: u32 = 6;
pub const OPAMP_CSR_OPA1CAL_H_Msk: u32 = 0x1 << OPAMP_CSR_OPA1CAL_H_Pos;
pub const OPAMP_CSR_OPA1CAL_H: u32 = OPAMP_CSR_OPA1CAL_H_Msk;
pub const OPAMP_CSR_OPA1LPM_Pos: u32 = 7;
pub const OPAMP_CSR_OPA1LPM_Msk: u32 = 0x1 << OPAMP_CSR_OPA1LPM_Pos;
pub const OPAMP_CSR_OPA1LPM: u32 = OPAMP_CSR_OPA1LPM_Msk;
pub const OPAMP_CSR_OPA2PD_Pos: u32 = 8;
pub const OPAMP_CSR_OPA2PD_Msk: u32 = 0x1 << OPAMP_CSR_OPA2PD_Pos;
pub const OPAMP_CSR_OPA2PD: u32 = OPAMP_CSR_OPA2PD_Msk;
pub const OPAMP_CSR_S3SEL2_Pos: u32 = 9;
pub const OPAMP_CSR_S3SEL2_Msk: u32 = 0x1 << OPAMP_CSR_S3SEL2_Pos;
pub const OPAMP_CSR_S3SEL2: u32 = OPAMP_CSR_S3SEL2_Msk;
pub const OPAMP_CSR_S4SEL2_Pos: u32 = 10;
pub const OPAMP_CSR_S4SEL2_Msk: u32 = 0x1 << OPAMP_CSR_S4SEL2_Pos;
pub const OPAMP_CSR_S4SEL2: u32 = OPAMP_CSR_S4SEL2_Msk;
pub const OPAMP_CSR_S5SEL2_Pos: u32 = 11;
pub const OPAMP_CSR_S5SEL2_Msk: u32 = 0x1 << OPAMP_CSR_S5SEL2_Pos;
pub const OPAMP_CSR_S5SEL2: u32 = OPAMP_CSR_S5SEL2_Msk;
pub const OPAMP_CSR_S6SEL2_Pos: u32 = 12;
pub const OPAMP_CSR_S6SEL2_Msk: u32 = 0x1 << OPAMP_CSR_S6SEL2_Pos;
pub const OPAMP_CSR_S6SEL2: u32 = OPAMP_CSR_S6SEL2_Msk;
pub const OPAMP_CSR_OPA2CAL_L_Pos: u32 = 13;
pub const OPAMP_CSR_OPA2CAL_L_Msk: u32 = 0x1 << OPAMP_CSR_OPA2CAL_L_Pos;
pub const OPAMP_CSR_OPA2CAL_L: u32 = OPAMP_CSR_OPA2CAL_L_Msk;
pub const OPAMP_CSR_OPA2CAL_H_Pos: u32 = 14;
pub const OPAMP_CSR_OPA2CAL_H_Msk: u32 = 0x1 << OPAMP_CSR_OPA2CAL_H_Pos;
pub const OPAMP_CSR_OPA2CAL_H: u32 = OPAMP_CSR_OPA2CAL_H_Msk;
pub const OPAMP_CSR_OPA2LPM_Pos: u32 = 15;
pub const OPAMP_CSR_OPA2LPM_Msk: u32 = 0x1 << OPAMP_CSR_OPA2LPM_Pos;
pub const OPAMP_CSR_OPA2LPM: u32 = OPAMP_CSR_OPA2LPM_Msk;
pub const OPAMP_CSR_ANAWSEL1_Pos: u32 = 24;
pub const OPAMP_CSR_ANAWSEL1_Msk: u32 = 0x1 << OPAMP_CSR_ANAWSEL1_Pos;
pub const OPAMP_CSR_ANAWSEL1: u32 = OPAMP_CSR_ANAWSEL1_Msk;
pub const OPAMP_CSR_ANAWSEL2_Pos: u32 = 25;
pub const OPAMP_CSR_ANAWSEL2_Msk: u32 = 0x1 << OPAMP_CSR_ANAWSEL2_Pos;
pub const OPAMP_CSR_ANAWSEL2: u32 = OPAMP_CSR_ANAWSEL2_Msk;
pub const OPAMP_CSR_S7SEL2_Pos: u32 = 27;
pub const OPAMP_CSR_S7SEL2_Msk: u32 = 0x1 << OPAMP_CSR_S7SEL2_Pos;
pub const OPAMP_CSR_S7SEL2: u32 = OPAMP_CSR_S7SEL2_Msk;
pub const OPAMP_CSR_AOP_RANGE_Pos: u32 = 28;
pub const OPAMP_CSR_AOP_RANGE_Msk: u32 = 0x1 << OPAMP_CSR_AOP_RANGE_Pos;
pub const OPAMP_CSR_AOP_RANGE: u32 = OPAMP_CSR_AOP_RANGE_Msk;
pub const OPAMP_CSR_OPA1CALOUT_Pos: u32 = 29;
pub const OPAMP_CSR_OPA1CALOUT_Msk: u32 = 0x1 << OPAMP_CSR_OPA1CALOUT_Pos;
pub const OPAMP_CSR_OPA1CALOUT: u32 = OPAMP_CSR_OPA1CALOUT_Msk;
pub const OPAMP_CSR_OPA2CALOUT_Pos: u32 = 30;
pub const OPAMP_CSR_OPA2CALOUT_Msk: u32 = 0x1 << OPAMP_CSR_OPA2CALOUT_Pos;
pub const OPAMP_CSR_OPA2CALOUT: u32 = OPAMP_CSR_OPA2CALOUT_Msk;
pub const OPAMP_OTR_AO1_OPT_OFFSET_TRIM_LOW_Pos: u32 = 0;
pub const OPAMP_OTR_AO1_OPT_OFFSET_TRIM_LOW_Msk: u32 =
    0x1F << OPAMP_OTR_AO1_OPT_OFFSET_TRIM_LOW_Pos;
pub const OPAMP_OTR_AO1_OPT_OFFSET_TRIM_LOW: u32 = OPAMP_OTR_AO1_OPT_OFFSET_TRIM_LOW_Msk;
pub const OPAMP_OTR_AO1_OPT_OFFSET_TRIM_HIGH_Pos: u32 = 5;
pub const OPAMP_OTR_AO1_OPT_OFFSET_TRIM_HIGH_Msk: u32 =
    0x1F << OPAMP_OTR_AO1_OPT_OFFSET_TRIM_HIGH_Pos;
pub const OPAMP_OTR_AO1_OPT_OFFSET_TRIM_HIGH: u32 = OPAMP_OTR_AO1_OPT_OFFSET_TRIM_HIGH_Msk;
pub const OPAMP_OTR_AO2_OPT_OFFSET_TRIM_LOW_Pos: u32 = 10;
pub const OPAMP_OTR_AO2_OPT_OFFSET_TRIM_LOW_Msk: u32 =
    0x1F << OPAMP_OTR_AO2_OPT_OFFSET_TRIM_LOW_Pos;
pub const OPAMP_OTR_AO2_OPT_OFFSET_TRIM_LOW: u32 = OPAMP_OTR_AO2_OPT_OFFSET_TRIM_LOW_Msk;
pub const OPAMP_OTR_AO2_OPT_OFFSET_TRIM_HIGH_Pos: u32 = 15;
pub const OPAMP_OTR_AO2_OPT_OFFSET_TRIM_HIGH_Msk: u32 =
    0x1F << OPAMP_OTR_AO2_OPT_OFFSET_TRIM_HIGH_Pos;
pub const OPAMP_OTR_AO2_OPT_OFFSET_TRIM_HIGH: u32 = OPAMP_OTR_AO2_OPT_OFFSET_TRIM_HIGH_Msk;
pub const OPAMP_OTR_OT_USER_Pos: u32 = 31;
pub const OPAMP_OTR_OT_USER_Msk: u32 = 0x1 << OPAMP_OTR_OT_USER_Pos;
pub const OPAMP_OTR_OT_USER: u32 = OPAMP_OTR_OT_USER_Msk;
pub const OPAMP_OTR_AO1_OPT_OFFSET_TRIM_LP_LOW_Pos: u32 = 0;
pub const OPAMP_OTR_AO1_OPT_OFFSET_TRIM_LP_LOW_Msk: u32 =
    0x1F << OPAMP_OTR_AO1_OPT_OFFSET_TRIM_LP_LOW_Pos;
pub const OPAMP_OTR_AO1_OPT_OFFSET_TRIM_LP_LOW: u32 = OPAMP_OTR_AO1_OPT_OFFSET_TRIM_LP_LOW_Msk;
pub const OPAMP_OTR_AO1_OPT_OFFSET_TRIM_LP_HIGH_Pos: u32 = 5;
pub const OPAMP_OTR_AO1_OPT_OFFSET_TRIM_LP_HIGH_Msk: u32 =
    0x1F << OPAMP_OTR_AO1_OPT_OFFSET_TRIM_LP_HIGH_Pos;
pub const OPAMP_OTR_AO1_OPT_OFFSET_TRIM_LP_HIGH: u32 = OPAMP_OTR_AO1_OPT_OFFSET_TRIM_LP_HIGH_Msk;
pub const OPAMP_OTR_AO2_OPT_OFFSET_TRIM_LP_LOW_Pos: u32 = 10;
pub const OPAMP_OTR_AO2_OPT_OFFSET_TRIM_LP_LOW_Msk: u32 =
    0x1F << OPAMP_OTR_AO2_OPT_OFFSET_TRIM_LP_LOW_Pos;
pub const OPAMP_OTR_AO2_OPT_OFFSET_TRIM_LP_LOW: u32 = OPAMP_OTR_AO2_OPT_OFFSET_TRIM_LP_LOW_Msk;
pub const OPAMP_OTR_AO2_OPT_OFFSET_TRIM_LP_HIGH_Pos: u32 = 15;
pub const OPAMP_OTR_AO2_OPT_OFFSET_TRIM_LP_HIGH_Msk: u32 =
    0x1F << OPAMP_OTR_AO2_OPT_OFFSET_TRIM_LP_HIGH_Pos;
pub const OPAMP_OTR_AO2_OPT_OFFSET_TRIM_LP_HIGH: u32 = OPAMP_OTR_AO2_OPT_OFFSET_TRIM_LP_HIGH_Msk;
pub const CRC_DR_DR_Pos: u32 = 0;
pub const CRC_DR_DR_Msk: u32 = 0xFFFFFFFF << CRC_DR_DR_Pos;
pub const CRC_DR_DR: u32 = CRC_DR_DR_Msk;
pub const CRC_IDR_IDR_Pos: u32 = 0;
pub const CRC_IDR_IDR_Msk: u32 = 0xFF << CRC_IDR_IDR_Pos;
pub const CRC_IDR_IDR: u32 = CRC_IDR_IDR_Msk;
pub const CRC_CR_RESET_Pos: u32 = 0;
pub const CRC_CR_RESET_Msk: u32 = 0x1 << CRC_CR_RESET_Pos;
pub const CRC_CR_RESET: u32 = CRC_CR_RESET_Msk;
pub const DAC_CR_EN1_Pos: u32 = 0;
pub const DAC_CR_EN1_Msk: u32 = 0x1 << DAC_CR_EN1_Pos;
pub const DAC_CR_EN1: u32 = DAC_CR_EN1_Msk;
pub const DAC_CR_BOFF1_Pos: u32 = 1;
pub const DAC_CR_BOFF1_Msk: u32 = 0x1 << DAC_CR_BOFF1_Pos;
pub const DAC_CR_BOFF1: u32 = DAC_CR_BOFF1_Msk;
pub const DAC_CR_TEN1_Pos: u32 = 2;
pub const DAC_CR_TEN1_Msk: u32 = 0x1 << DAC_CR_TEN1_Pos;
pub const DAC_CR_TEN1: u32 = DAC_CR_TEN1_Msk;
pub const DAC_CR_TSEL1_Pos: u32 = 3;
pub const DAC_CR_TSEL1_Msk: u32 = 0x7 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_TSEL1: u32 = DAC_CR_TSEL1_Msk;
pub const DAC_CR_TSEL1_0: u32 = 0x1 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_TSEL1_1: u32 = 0x2 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_TSEL1_2: u32 = 0x4 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_WAVE1_Pos: u32 = 6;
pub const DAC_CR_WAVE1_Msk: u32 = 0x3 << DAC_CR_WAVE1_Pos;
pub const DAC_CR_WAVE1: u32 = DAC_CR_WAVE1_Msk;
pub const DAC_CR_WAVE1_0: u32 = 0x1 << DAC_CR_WAVE1_Pos;
pub const DAC_CR_WAVE1_1: u32 = 0x2 << DAC_CR_WAVE1_Pos;
pub const DAC_CR_MAMP1_Pos: u32 = 8;
pub const DAC_CR_MAMP1_Msk: u32 = 0xF << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1: u32 = DAC_CR_MAMP1_Msk;
pub const DAC_CR_MAMP1_0: u32 = 0x1 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1_1: u32 = 0x2 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1_2: u32 = 0x4 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1_3: u32 = 0x8 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_DMAEN1_Pos: u32 = 12;
pub const DAC_CR_DMAEN1_Msk: u32 = 0x1 << DAC_CR_DMAEN1_Pos;
pub const DAC_CR_DMAEN1: u32 = DAC_CR_DMAEN1_Msk;
pub const DAC_CR_DMAUDRIE1_Pos: u32 = 13;
pub const DAC_CR_DMAUDRIE1_Msk: u32 = 0x1 << DAC_CR_DMAUDRIE1_Pos;
pub const DAC_CR_DMAUDRIE1: u32 = DAC_CR_DMAUDRIE1_Msk;
pub const DAC_CR_EN2_Pos: u32 = 16;
pub const DAC_CR_EN2_Msk: u32 = 0x1 << DAC_CR_EN2_Pos;
pub const DAC_CR_EN2: u32 = DAC_CR_EN2_Msk;
pub const DAC_CR_BOFF2_Pos: u32 = 17;
pub const DAC_CR_BOFF2_Msk: u32 = 0x1 << DAC_CR_BOFF2_Pos;
pub const DAC_CR_BOFF2: u32 = DAC_CR_BOFF2_Msk;
pub const DAC_CR_TEN2_Pos: u32 = 18;
pub const DAC_CR_TEN2_Msk: u32 = 0x1 << DAC_CR_TEN2_Pos;
pub const DAC_CR_TEN2: u32 = DAC_CR_TEN2_Msk;
pub const DAC_CR_TSEL2_Pos: u32 = 19;
pub const DAC_CR_TSEL2_Msk: u32 = 0x7 << DAC_CR_TSEL2_Pos;
pub const DAC_CR_TSEL2: u32 = DAC_CR_TSEL2_Msk;
pub const DAC_CR_TSEL2_0: u32 = 0x1 << DAC_CR_TSEL2_Pos;
pub const DAC_CR_TSEL2_1: u32 = 0x2 << DAC_CR_TSEL2_Pos;
pub const DAC_CR_TSEL2_2: u32 = 0x4 << DAC_CR_TSEL2_Pos;
pub const DAC_CR_WAVE2_Pos: u32 = 22;
pub const DAC_CR_WAVE2_Msk: u32 = 0x3 << DAC_CR_WAVE2_Pos;
pub const DAC_CR_WAVE2: u32 = DAC_CR_WAVE2_Msk;
pub const DAC_CR_WAVE2_0: u32 = 0x1 << DAC_CR_WAVE2_Pos;
pub const DAC_CR_WAVE2_1: u32 = 0x2 << DAC_CR_WAVE2_Pos;
pub const DAC_CR_MAMP2_Pos: u32 = 24;
pub const DAC_CR_MAMP2_Msk: u32 = 0xF << DAC_CR_MAMP2_Pos;
pub const DAC_CR_MAMP2: u32 = DAC_CR_MAMP2_Msk;
pub const DAC_CR_MAMP2_0: u32 = 0x1 << DAC_CR_MAMP2_Pos;
pub const DAC_CR_MAMP2_1: u32 = 0x2 << DAC_CR_MAMP2_Pos;
pub const DAC_CR_MAMP2_2: u32 = 0x4 << DAC_CR_MAMP2_Pos;
pub const DAC_CR_MAMP2_3: u32 = 0x8 << DAC_CR_MAMP2_Pos;
pub const DAC_CR_DMAEN2_Pos: u32 = 28;
pub const DAC_CR_DMAEN2_Msk: u32 = 0x1 << DAC_CR_DMAEN2_Pos;
pub const DAC_CR_DMAEN2: u32 = DAC_CR_DMAEN2_Msk;
pub const DAC_CR_DMAUDRIE2_Pos: u32 = 29;
pub const DAC_CR_DMAUDRIE2_Msk: u32 = 0x1 << DAC_CR_DMAUDRIE2_Pos;
pub const DAC_CR_DMAUDRIE2: u32 = DAC_CR_DMAUDRIE2_Msk;
pub const DAC_SWTRIGR_SWTRIG1_Pos: u32 = 0;
pub const DAC_SWTRIGR_SWTRIG1_Msk: u32 = 0x1 << DAC_SWTRIGR_SWTRIG1_Pos;
pub const DAC_SWTRIGR_SWTRIG1: u32 = DAC_SWTRIGR_SWTRIG1_Msk;
pub const DAC_SWTRIGR_SWTRIG2_Pos: u32 = 1;
pub const DAC_SWTRIGR_SWTRIG2_Msk: u32 = 0x1 << DAC_SWTRIGR_SWTRIG2_Pos;
pub const DAC_SWTRIGR_SWTRIG2: u32 = DAC_SWTRIGR_SWTRIG2_Msk;
pub const DAC_DHR12R1_DACC1DHR_Pos: u32 = 0;
pub const DAC_DHR12R1_DACC1DHR_Msk: u32 = 0xFFF << DAC_DHR12R1_DACC1DHR_Pos;
pub const DAC_DHR12R1_DACC1DHR: u32 = DAC_DHR12R1_DACC1DHR_Msk;
pub const DAC_DHR12L1_DACC1DHR_Pos: u32 = 4;
pub const DAC_DHR12L1_DACC1DHR_Msk: u32 = 0xFFF << DAC_DHR12L1_DACC1DHR_Pos;
pub const DAC_DHR12L1_DACC1DHR: u32 = DAC_DHR12L1_DACC1DHR_Msk;
pub const DAC_DHR8R1_DACC1DHR_Pos: u32 = 0;
pub const DAC_DHR8R1_DACC1DHR_Msk: u32 = 0xFF << DAC_DHR8R1_DACC1DHR_Pos;
pub const DAC_DHR8R1_DACC1DHR: u32 = DAC_DHR8R1_DACC1DHR_Msk;
pub const DAC_DHR12R2_DACC2DHR_Pos: u32 = 0;
pub const DAC_DHR12R2_DACC2DHR_Msk: u32 = 0xFFF << DAC_DHR12R2_DACC2DHR_Pos;
pub const DAC_DHR12R2_DACC2DHR: u32 = DAC_DHR12R2_DACC2DHR_Msk;
pub const DAC_DHR12L2_DACC2DHR_Pos: u32 = 4;
pub const DAC_DHR12L2_DACC2DHR_Msk: u32 = 0xFFF << DAC_DHR12L2_DACC2DHR_Pos;
pub const DAC_DHR12L2_DACC2DHR: u32 = DAC_DHR12L2_DACC2DHR_Msk;
pub const DAC_DHR8R2_DACC2DHR_Pos: u32 = 0;
pub const DAC_DHR8R2_DACC2DHR_Msk: u32 = 0xFF << DAC_DHR8R2_DACC2DHR_Pos;
pub const DAC_DHR8R2_DACC2DHR: u32 = DAC_DHR8R2_DACC2DHR_Msk;
pub const DAC_DHR12RD_DACC1DHR_Pos: u32 = 0;
pub const DAC_DHR12RD_DACC1DHR_Msk: u32 = 0xFFF << DAC_DHR12RD_DACC1DHR_Pos;
pub const DAC_DHR12RD_DACC1DHR: u32 = DAC_DHR12RD_DACC1DHR_Msk;
pub const DAC_DHR12RD_DACC2DHR_Pos: u32 = 16;
pub const DAC_DHR12RD_DACC2DHR_Msk: u32 = 0xFFF << DAC_DHR12RD_DACC2DHR_Pos;
pub const DAC_DHR12RD_DACC2DHR: u32 = DAC_DHR12RD_DACC2DHR_Msk;
pub const DAC_DHR12LD_DACC1DHR_Pos: u32 = 4;
pub const DAC_DHR12LD_DACC1DHR_Msk: u32 = 0xFFF << DAC_DHR12LD_DACC1DHR_Pos;
pub const DAC_DHR12LD_DACC1DHR: u32 = DAC_DHR12LD_DACC1DHR_Msk;
pub const DAC_DHR12LD_DACC2DHR_Pos: u32 = 20;
pub const DAC_DHR12LD_DACC2DHR_Msk: u32 = 0xFFF << DAC_DHR12LD_DACC2DHR_Pos;
pub const DAC_DHR12LD_DACC2DHR: u32 = DAC_DHR12LD_DACC2DHR_Msk;
pub const DAC_DHR8RD_DACC1DHR_Pos: u32 = 0;
pub const DAC_DHR8RD_DACC1DHR_Msk: u32 = 0xFF << DAC_DHR8RD_DACC1DHR_Pos;
pub const DAC_DHR8RD_DACC1DHR: u32 = DAC_DHR8RD_DACC1DHR_Msk;
pub const DAC_DHR8RD_DACC2DHR_Pos: u32 = 8;
pub const DAC_DHR8RD_DACC2DHR_Msk: u32 = 0xFF << DAC_DHR8RD_DACC2DHR_Pos;
pub const DAC_DHR8RD_DACC2DHR: u32 = DAC_DHR8RD_DACC2DHR_Msk;
pub const DAC_DOR1_DACC1DOR_Pos: u32 = 0;
pub const DAC_DOR1_DACC1DOR_Msk: u32 = 0xFFF << DAC_DOR1_DACC1DOR_Pos;
pub const DAC_DOR1_DACC1DOR: u32 = DAC_DOR1_DACC1DOR_Msk;
pub const DAC_DOR2_DACC2DOR_Pos: u32 = 0;
pub const DAC_DOR2_DACC2DOR_Msk: u32 = 0xFFF << DAC_DOR2_DACC2DOR_Pos;
pub const DAC_DOR2_DACC2DOR: u32 = DAC_DOR2_DACC2DOR_Msk;
pub const DAC_SR_DMAUDR1_Pos: u32 = 13;
pub const DAC_SR_DMAUDR1_Msk: u32 = 0x1 << DAC_SR_DMAUDR1_Pos;
pub const DAC_SR_DMAUDR1: u32 = DAC_SR_DMAUDR1_Msk;
pub const DAC_SR_DMAUDR2_Pos: u32 = 29;
pub const DAC_SR_DMAUDR2_Msk: u32 = 0x1 << DAC_SR_DMAUDR2_Pos;
pub const DAC_SR_DMAUDR2: u32 = DAC_SR_DMAUDR2_Msk;
pub const DBGMCU_IDCODE_DEV_ID_Pos: u32 = 0;
pub const DBGMCU_IDCODE_DEV_ID_Msk: u32 = 0xFFF << DBGMCU_IDCODE_DEV_ID_Pos;
pub const DBGMCU_IDCODE_DEV_ID: u32 = DBGMCU_IDCODE_DEV_ID_Msk;
pub const DBGMCU_IDCODE_REV_ID_Pos: u32 = 16;
pub const DBGMCU_IDCODE_REV_ID_Msk: u32 = 0xFFFF << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID: u32 = DBGMCU_IDCODE_REV_ID_Msk;
pub const DBGMCU_IDCODE_REV_ID_0: u32 = 0x0001 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_1: u32 = 0x0002 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_2: u32 = 0x0004 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_3: u32 = 0x0008 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_4: u32 = 0x0010 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_5: u32 = 0x0020 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_6: u32 = 0x0040 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_7: u32 = 0x0080 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_8: u32 = 0x0100 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_9: u32 = 0x0200 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_10: u32 = 0x0400 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_11: u32 = 0x0800 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_12: u32 = 0x1000 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_13: u32 = 0x2000 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_14: u32 = 0x4000 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_15: u32 = 0x8000 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_CR_DBG_SLEEP_Pos: u32 = 0;
pub const DBGMCU_CR_DBG_SLEEP_Msk: u32 = 0x1 << DBGMCU_CR_DBG_SLEEP_Pos;
pub const DBGMCU_CR_DBG_SLEEP: u32 = DBGMCU_CR_DBG_SLEEP_Msk;
pub const DBGMCU_CR_DBG_STOP_Pos: u32 = 1;
pub const DBGMCU_CR_DBG_STOP_Msk: u32 = 0x1 << DBGMCU_CR_DBG_STOP_Pos;
pub const DBGMCU_CR_DBG_STOP: u32 = DBGMCU_CR_DBG_STOP_Msk;
pub const DBGMCU_CR_DBG_STANDBY_Pos: u32 = 2;
pub const DBGMCU_CR_DBG_STANDBY_Msk: u32 = 0x1 << DBGMCU_CR_DBG_STANDBY_Pos;
pub const DBGMCU_CR_DBG_STANDBY: u32 = DBGMCU_CR_DBG_STANDBY_Msk;
pub const DBGMCU_CR_TRACE_IOEN_Pos: u32 = 5;
pub const DBGMCU_CR_TRACE_IOEN_Msk: u32 = 0x1 << DBGMCU_CR_TRACE_IOEN_Pos;
pub const DBGMCU_CR_TRACE_IOEN: u32 = DBGMCU_CR_TRACE_IOEN_Msk;
pub const DBGMCU_CR_TRACE_MODE_Pos: u32 = 6;
pub const DBGMCU_CR_TRACE_MODE_Msk: u32 = 0x3 << DBGMCU_CR_TRACE_MODE_Pos;
pub const DBGMCU_CR_TRACE_MODE: u32 = DBGMCU_CR_TRACE_MODE_Msk;
pub const DBGMCU_CR_TRACE_MODE_0: u32 = 0x1 << DBGMCU_CR_TRACE_MODE_Pos;
pub const DBGMCU_CR_TRACE_MODE_1: u32 = 0x2 << DBGMCU_CR_TRACE_MODE_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM2_STOP_Pos: u32 = 0;
pub const DBGMCU_APB1_FZ_DBG_TIM2_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_TIM2_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM2_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM2_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_TIM3_STOP_Pos: u32 = 1;
pub const DBGMCU_APB1_FZ_DBG_TIM3_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_TIM3_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM3_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM3_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_TIM4_STOP_Pos: u32 = 2;
pub const DBGMCU_APB1_FZ_DBG_TIM4_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_TIM4_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM4_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM4_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_TIM5_STOP_Pos: u32 = 3;
pub const DBGMCU_APB1_FZ_DBG_TIM5_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_TIM5_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM5_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM5_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_TIM6_STOP_Pos: u32 = 4;
pub const DBGMCU_APB1_FZ_DBG_TIM6_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_TIM6_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM6_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM6_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_TIM7_STOP_Pos: u32 = 5;
pub const DBGMCU_APB1_FZ_DBG_TIM7_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_TIM7_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM7_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM7_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_RTC_STOP_Pos: u32 = 10;
pub const DBGMCU_APB1_FZ_DBG_RTC_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_RTC_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_RTC_STOP: u32 = DBGMCU_APB1_FZ_DBG_RTC_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_WWDG_STOP_Pos: u32 = 11;
pub const DBGMCU_APB1_FZ_DBG_WWDG_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_WWDG_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_WWDG_STOP: u32 = DBGMCU_APB1_FZ_DBG_WWDG_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_IWDG_STOP_Pos: u32 = 12;
pub const DBGMCU_APB1_FZ_DBG_IWDG_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_IWDG_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_IWDG_STOP: u32 = DBGMCU_APB1_FZ_DBG_IWDG_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT_Pos: u32 = 21;
pub const DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT_Msk: u32 =
    0x1 << DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT_Pos;
pub const DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT: u32 = DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT_Msk;
pub const DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT_Pos: u32 = 22;
pub const DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT_Msk: u32 =
    0x1 << DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT_Pos;
pub const DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT: u32 = DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT_Msk;
pub const DBGMCU_APB2_FZ_DBG_TIM9_STOP_Pos: u32 = 2;
pub const DBGMCU_APB2_FZ_DBG_TIM9_STOP_Msk: u32 = 0x1 << DBGMCU_APB2_FZ_DBG_TIM9_STOP_Pos;
pub const DBGMCU_APB2_FZ_DBG_TIM9_STOP: u32 = DBGMCU_APB2_FZ_DBG_TIM9_STOP_Msk;
pub const DBGMCU_APB2_FZ_DBG_TIM10_STOP_Pos: u32 = 3;
pub const DBGMCU_APB2_FZ_DBG_TIM10_STOP_Msk: u32 = 0x1 << DBGMCU_APB2_FZ_DBG_TIM10_STOP_Pos;
pub const DBGMCU_APB2_FZ_DBG_TIM10_STOP: u32 = DBGMCU_APB2_FZ_DBG_TIM10_STOP_Msk;
pub const DBGMCU_APB2_FZ_DBG_TIM11_STOP_Pos: u32 = 4;
pub const DBGMCU_APB2_FZ_DBG_TIM11_STOP_Msk: u32 = 0x1 << DBGMCU_APB2_FZ_DBG_TIM11_STOP_Pos;
pub const DBGMCU_APB2_FZ_DBG_TIM11_STOP: u32 = DBGMCU_APB2_FZ_DBG_TIM11_STOP_Msk;
pub const DMA_ISR_GIF1_Pos: u32 = 0;
pub const DMA_ISR_GIF1_Msk: u32 = 0x1 << DMA_ISR_GIF1_Pos;
pub const DMA_ISR_GIF1: u32 = DMA_ISR_GIF1_Msk;
pub const DMA_ISR_TCIF1_Pos: u32 = 1;
pub const DMA_ISR_TCIF1_Msk: u32 = 0x1 << DMA_ISR_TCIF1_Pos;
pub const DMA_ISR_TCIF1: u32 = DMA_ISR_TCIF1_Msk;
pub const DMA_ISR_HTIF1_Pos: u32 = 2;
pub const DMA_ISR_HTIF1_Msk: u32 = 0x1 << DMA_ISR_HTIF1_Pos;
pub const DMA_ISR_HTIF1: u32 = DMA_ISR_HTIF1_Msk;
pub const DMA_ISR_TEIF1_Pos: u32 = 3;
pub const DMA_ISR_TEIF1_Msk: u32 = 0x1 << DMA_ISR_TEIF1_Pos;
pub const DMA_ISR_TEIF1: u32 = DMA_ISR_TEIF1_Msk;
pub const DMA_ISR_GIF2_Pos: u32 = 4;
pub const DMA_ISR_GIF2_Msk: u32 = 0x1 << DMA_ISR_GIF2_Pos;
pub const DMA_ISR_GIF2: u32 = DMA_ISR_GIF2_Msk;
pub const DMA_ISR_TCIF2_Pos: u32 = 5;
pub const DMA_ISR_TCIF2_Msk: u32 = 0x1 << DMA_ISR_TCIF2_Pos;
pub const DMA_ISR_TCIF2: u32 = DMA_ISR_TCIF2_Msk;
pub const DMA_ISR_HTIF2_Pos: u32 = 6;
pub const DMA_ISR_HTIF2_Msk: u32 = 0x1 << DMA_ISR_HTIF2_Pos;
pub const DMA_ISR_HTIF2: u32 = DMA_ISR_HTIF2_Msk;
pub const DMA_ISR_TEIF2_Pos: u32 = 7;
pub const DMA_ISR_TEIF2_Msk: u32 = 0x1 << DMA_ISR_TEIF2_Pos;
pub const DMA_ISR_TEIF2: u32 = DMA_ISR_TEIF2_Msk;
pub const DMA_ISR_GIF3_Pos: u32 = 8;
pub const DMA_ISR_GIF3_Msk: u32 = 0x1 << DMA_ISR_GIF3_Pos;
pub const DMA_ISR_GIF3: u32 = DMA_ISR_GIF3_Msk;
pub const DMA_ISR_TCIF3_Pos: u32 = 9;
pub const DMA_ISR_TCIF3_Msk: u32 = 0x1 << DMA_ISR_TCIF3_Pos;
pub const DMA_ISR_TCIF3: u32 = DMA_ISR_TCIF3_Msk;
pub const DMA_ISR_HTIF3_Pos: u32 = 10;
pub const DMA_ISR_HTIF3_Msk: u32 = 0x1 << DMA_ISR_HTIF3_Pos;
pub const DMA_ISR_HTIF3: u32 = DMA_ISR_HTIF3_Msk;
pub const DMA_ISR_TEIF3_Pos: u32 = 11;
pub const DMA_ISR_TEIF3_Msk: u32 = 0x1 << DMA_ISR_TEIF3_Pos;
pub const DMA_ISR_TEIF3: u32 = DMA_ISR_TEIF3_Msk;
pub const DMA_ISR_GIF4_Pos: u32 = 12;
pub const DMA_ISR_GIF4_Msk: u32 = 0x1 << DMA_ISR_GIF4_Pos;
pub const DMA_ISR_GIF4: u32 = DMA_ISR_GIF4_Msk;
pub const DMA_ISR_TCIF4_Pos: u32 = 13;
pub const DMA_ISR_TCIF4_Msk: u32 = 0x1 << DMA_ISR_TCIF4_Pos;
pub const DMA_ISR_TCIF4: u32 = DMA_ISR_TCIF4_Msk;
pub const DMA_ISR_HTIF4_Pos: u32 = 14;
pub const DMA_ISR_HTIF4_Msk: u32 = 0x1 << DMA_ISR_HTIF4_Pos;
pub const DMA_ISR_HTIF4: u32 = DMA_ISR_HTIF4_Msk;
pub const DMA_ISR_TEIF4_Pos: u32 = 15;
pub const DMA_ISR_TEIF4_Msk: u32 = 0x1 << DMA_ISR_TEIF4_Pos;
pub const DMA_ISR_TEIF4: u32 = DMA_ISR_TEIF4_Msk;
pub const DMA_ISR_GIF5_Pos: u32 = 16;
pub const DMA_ISR_GIF5_Msk: u32 = 0x1 << DMA_ISR_GIF5_Pos;
pub const DMA_ISR_GIF5: u32 = DMA_ISR_GIF5_Msk;
pub const DMA_ISR_TCIF5_Pos: u32 = 17;
pub const DMA_ISR_TCIF5_Msk: u32 = 0x1 << DMA_ISR_TCIF5_Pos;
pub const DMA_ISR_TCIF5: u32 = DMA_ISR_TCIF5_Msk;
pub const DMA_ISR_HTIF5_Pos: u32 = 18;
pub const DMA_ISR_HTIF5_Msk: u32 = 0x1 << DMA_ISR_HTIF5_Pos;
pub const DMA_ISR_HTIF5: u32 = DMA_ISR_HTIF5_Msk;
pub const DMA_ISR_TEIF5_Pos: u32 = 19;
pub const DMA_ISR_TEIF5_Msk: u32 = 0x1 << DMA_ISR_TEIF5_Pos;
pub const DMA_ISR_TEIF5: u32 = DMA_ISR_TEIF5_Msk;
pub const DMA_ISR_GIF6_Pos: u32 = 20;
pub const DMA_ISR_GIF6_Msk: u32 = 0x1 << DMA_ISR_GIF6_Pos;
pub const DMA_ISR_GIF6: u32 = DMA_ISR_GIF6_Msk;
pub const DMA_ISR_TCIF6_Pos: u32 = 21;
pub const DMA_ISR_TCIF6_Msk: u32 = 0x1 << DMA_ISR_TCIF6_Pos;
pub const DMA_ISR_TCIF6: u32 = DMA_ISR_TCIF6_Msk;
pub const DMA_ISR_HTIF6_Pos: u32 = 22;
pub const DMA_ISR_HTIF6_Msk: u32 = 0x1 << DMA_ISR_HTIF6_Pos;
pub const DMA_ISR_HTIF6: u32 = DMA_ISR_HTIF6_Msk;
pub const DMA_ISR_TEIF6_Pos: u32 = 23;
pub const DMA_ISR_TEIF6_Msk: u32 = 0x1 << DMA_ISR_TEIF6_Pos;
pub const DMA_ISR_TEIF6: u32 = DMA_ISR_TEIF6_Msk;
pub const DMA_ISR_GIF7_Pos: u32 = 24;
pub const DMA_ISR_GIF7_Msk: u32 = 0x1 << DMA_ISR_GIF7_Pos;
pub const DMA_ISR_GIF7: u32 = DMA_ISR_GIF7_Msk;
pub const DMA_ISR_TCIF7_Pos: u32 = 25;
pub const DMA_ISR_TCIF7_Msk: u32 = 0x1 << DMA_ISR_TCIF7_Pos;
pub const DMA_ISR_TCIF7: u32 = DMA_ISR_TCIF7_Msk;
pub const DMA_ISR_HTIF7_Pos: u32 = 26;
pub const DMA_ISR_HTIF7_Msk: u32 = 0x1 << DMA_ISR_HTIF7_Pos;
pub const DMA_ISR_HTIF7: u32 = DMA_ISR_HTIF7_Msk;
pub const DMA_ISR_TEIF7_Pos: u32 = 27;
pub const DMA_ISR_TEIF7_Msk: u32 = 0x1 << DMA_ISR_TEIF7_Pos;
pub const DMA_ISR_TEIF7: u32 = DMA_ISR_TEIF7_Msk;
pub const DMA_IFCR_CGIF1_Pos: u32 = 0;
pub const DMA_IFCR_CGIF1_Msk: u32 = 0x1 << DMA_IFCR_CGIF1_Pos;
pub const DMA_IFCR_CGIF1: u32 = DMA_IFCR_CGIF1_Msk;
pub const DMA_IFCR_CTCIF1_Pos: u32 = 1;
pub const DMA_IFCR_CTCIF1_Msk: u32 = 0x1 << DMA_IFCR_CTCIF1_Pos;
pub const DMA_IFCR_CTCIF1: u32 = DMA_IFCR_CTCIF1_Msk;
pub const DMA_IFCR_CHTIF1_Pos: u32 = 2;
pub const DMA_IFCR_CHTIF1_Msk: u32 = 0x1 << DMA_IFCR_CHTIF1_Pos;
pub const DMA_IFCR_CHTIF1: u32 = DMA_IFCR_CHTIF1_Msk;
pub const DMA_IFCR_CTEIF1_Pos: u32 = 3;
pub const DMA_IFCR_CTEIF1_Msk: u32 = 0x1 << DMA_IFCR_CTEIF1_Pos;
pub const DMA_IFCR_CTEIF1: u32 = DMA_IFCR_CTEIF1_Msk;
pub const DMA_IFCR_CGIF2_Pos: u32 = 4;
pub const DMA_IFCR_CGIF2_Msk: u32 = 0x1 << DMA_IFCR_CGIF2_Pos;
pub const DMA_IFCR_CGIF2: u32 = DMA_IFCR_CGIF2_Msk;
pub const DMA_IFCR_CTCIF2_Pos: u32 = 5;
pub const DMA_IFCR_CTCIF2_Msk: u32 = 0x1 << DMA_IFCR_CTCIF2_Pos;
pub const DMA_IFCR_CTCIF2: u32 = DMA_IFCR_CTCIF2_Msk;
pub const DMA_IFCR_CHTIF2_Pos: u32 = 6;
pub const DMA_IFCR_CHTIF2_Msk: u32 = 0x1 << DMA_IFCR_CHTIF2_Pos;
pub const DMA_IFCR_CHTIF2: u32 = DMA_IFCR_CHTIF2_Msk;
pub const DMA_IFCR_CTEIF2_Pos: u32 = 7;
pub const DMA_IFCR_CTEIF2_Msk: u32 = 0x1 << DMA_IFCR_CTEIF2_Pos;
pub const DMA_IFCR_CTEIF2: u32 = DMA_IFCR_CTEIF2_Msk;
pub const DMA_IFCR_CGIF3_Pos: u32 = 8;
pub const DMA_IFCR_CGIF3_Msk: u32 = 0x1 << DMA_IFCR_CGIF3_Pos;
pub const DMA_IFCR_CGIF3: u32 = DMA_IFCR_CGIF3_Msk;
pub const DMA_IFCR_CTCIF3_Pos: u32 = 9;
pub const DMA_IFCR_CTCIF3_Msk: u32 = 0x1 << DMA_IFCR_CTCIF3_Pos;
pub const DMA_IFCR_CTCIF3: u32 = DMA_IFCR_CTCIF3_Msk;
pub const DMA_IFCR_CHTIF3_Pos: u32 = 10;
pub const DMA_IFCR_CHTIF3_Msk: u32 = 0x1 << DMA_IFCR_CHTIF3_Pos;
pub const DMA_IFCR_CHTIF3: u32 = DMA_IFCR_CHTIF3_Msk;
pub const DMA_IFCR_CTEIF3_Pos: u32 = 11;
pub const DMA_IFCR_CTEIF3_Msk: u32 = 0x1 << DMA_IFCR_CTEIF3_Pos;
pub const DMA_IFCR_CTEIF3: u32 = DMA_IFCR_CTEIF3_Msk;
pub const DMA_IFCR_CGIF4_Pos: u32 = 12;
pub const DMA_IFCR_CGIF4_Msk: u32 = 0x1 << DMA_IFCR_CGIF4_Pos;
pub const DMA_IFCR_CGIF4: u32 = DMA_IFCR_CGIF4_Msk;
pub const DMA_IFCR_CTCIF4_Pos: u32 = 13;
pub const DMA_IFCR_CTCIF4_Msk: u32 = 0x1 << DMA_IFCR_CTCIF4_Pos;
pub const DMA_IFCR_CTCIF4: u32 = DMA_IFCR_CTCIF4_Msk;
pub const DMA_IFCR_CHTIF4_Pos: u32 = 14;
pub const DMA_IFCR_CHTIF4_Msk: u32 = 0x1 << DMA_IFCR_CHTIF4_Pos;
pub const DMA_IFCR_CHTIF4: u32 = DMA_IFCR_CHTIF4_Msk;
pub const DMA_IFCR_CTEIF4_Pos: u32 = 15;
pub const DMA_IFCR_CTEIF4_Msk: u32 = 0x1 << DMA_IFCR_CTEIF4_Pos;
pub const DMA_IFCR_CTEIF4: u32 = DMA_IFCR_CTEIF4_Msk;
pub const DMA_IFCR_CGIF5_Pos: u32 = 16;
pub const DMA_IFCR_CGIF5_Msk: u32 = 0x1 << DMA_IFCR_CGIF5_Pos;
pub const DMA_IFCR_CGIF5: u32 = DMA_IFCR_CGIF5_Msk;
pub const DMA_IFCR_CTCIF5_Pos: u32 = 17;
pub const DMA_IFCR_CTCIF5_Msk: u32 = 0x1 << DMA_IFCR_CTCIF5_Pos;
pub const DMA_IFCR_CTCIF5: u32 = DMA_IFCR_CTCIF5_Msk;
pub const DMA_IFCR_CHTIF5_Pos: u32 = 18;
pub const DMA_IFCR_CHTIF5_Msk: u32 = 0x1 << DMA_IFCR_CHTIF5_Pos;
pub const DMA_IFCR_CHTIF5: u32 = DMA_IFCR_CHTIF5_Msk;
pub const DMA_IFCR_CTEIF5_Pos: u32 = 19;
pub const DMA_IFCR_CTEIF5_Msk: u32 = 0x1 << DMA_IFCR_CTEIF5_Pos;
pub const DMA_IFCR_CTEIF5: u32 = DMA_IFCR_CTEIF5_Msk;
pub const DMA_IFCR_CGIF6_Pos: u32 = 20;
pub const DMA_IFCR_CGIF6_Msk: u32 = 0x1 << DMA_IFCR_CGIF6_Pos;
pub const DMA_IFCR_CGIF6: u32 = DMA_IFCR_CGIF6_Msk;
pub const DMA_IFCR_CTCIF6_Pos: u32 = 21;
pub const DMA_IFCR_CTCIF6_Msk: u32 = 0x1 << DMA_IFCR_CTCIF6_Pos;
pub const DMA_IFCR_CTCIF6: u32 = DMA_IFCR_CTCIF6_Msk;
pub const DMA_IFCR_CHTIF6_Pos: u32 = 22;
pub const DMA_IFCR_CHTIF6_Msk: u32 = 0x1 << DMA_IFCR_CHTIF6_Pos;
pub const DMA_IFCR_CHTIF6: u32 = DMA_IFCR_CHTIF6_Msk;
pub const DMA_IFCR_CTEIF6_Pos: u32 = 23;
pub const DMA_IFCR_CTEIF6_Msk: u32 = 0x1 << DMA_IFCR_CTEIF6_Pos;
pub const DMA_IFCR_CTEIF6: u32 = DMA_IFCR_CTEIF6_Msk;
pub const DMA_IFCR_CGIF7_Pos: u32 = 24;
pub const DMA_IFCR_CGIF7_Msk: u32 = 0x1 << DMA_IFCR_CGIF7_Pos;
pub const DMA_IFCR_CGIF7: u32 = DMA_IFCR_CGIF7_Msk;
pub const DMA_IFCR_CTCIF7_Pos: u32 = 25;
pub const DMA_IFCR_CTCIF7_Msk: u32 = 0x1 << DMA_IFCR_CTCIF7_Pos;
pub const DMA_IFCR_CTCIF7: u32 = DMA_IFCR_CTCIF7_Msk;
pub const DMA_IFCR_CHTIF7_Pos: u32 = 26;
pub const DMA_IFCR_CHTIF7_Msk: u32 = 0x1 << DMA_IFCR_CHTIF7_Pos;
pub const DMA_IFCR_CHTIF7: u32 = DMA_IFCR_CHTIF7_Msk;
pub const DMA_IFCR_CTEIF7_Pos: u32 = 27;
pub const DMA_IFCR_CTEIF7_Msk: u32 = 0x1 << DMA_IFCR_CTEIF7_Pos;
pub const DMA_IFCR_CTEIF7: u32 = DMA_IFCR_CTEIF7_Msk;
pub const DMA_CCR_EN_Pos: u32 = 0;
pub const DMA_CCR_EN_Msk: u32 = 0x1 << DMA_CCR_EN_Pos;
pub const DMA_CCR_EN: u32 = DMA_CCR_EN_Msk;
pub const DMA_CCR_TCIE_Pos: u32 = 1;
pub const DMA_CCR_TCIE_Msk: u32 = 0x1 << DMA_CCR_TCIE_Pos;
pub const DMA_CCR_TCIE: u32 = DMA_CCR_TCIE_Msk;
pub const DMA_CCR_HTIE_Pos: u32 = 2;
pub const DMA_CCR_HTIE_Msk: u32 = 0x1 << DMA_CCR_HTIE_Pos;
pub const DMA_CCR_HTIE: u32 = DMA_CCR_HTIE_Msk;
pub const DMA_CCR_TEIE_Pos: u32 = 3;
pub const DMA_CCR_TEIE_Msk: u32 = 0x1 << DMA_CCR_TEIE_Pos;
pub const DMA_CCR_TEIE: u32 = DMA_CCR_TEIE_Msk;
pub const DMA_CCR_DIR_Pos: u32 = 4;
pub const DMA_CCR_DIR_Msk: u32 = 0x1 << DMA_CCR_DIR_Pos;
pub const DMA_CCR_DIR: u32 = DMA_CCR_DIR_Msk;
pub const DMA_CCR_CIRC_Pos: u32 = 5;
pub const DMA_CCR_CIRC_Msk: u32 = 0x1 << DMA_CCR_CIRC_Pos;
pub const DMA_CCR_CIRC: u32 = DMA_CCR_CIRC_Msk;
pub const DMA_CCR_PINC_Pos: u32 = 6;
pub const DMA_CCR_PINC_Msk: u32 = 0x1 << DMA_CCR_PINC_Pos;
pub const DMA_CCR_PINC: u32 = DMA_CCR_PINC_Msk;
pub const DMA_CCR_MINC_Pos: u32 = 7;
pub const DMA_CCR_MINC_Msk: u32 = 0x1 << DMA_CCR_MINC_Pos;
pub const DMA_CCR_MINC: u32 = DMA_CCR_MINC_Msk;
pub const DMA_CCR_PSIZE_Pos: u32 = 8;
pub const DMA_CCR_PSIZE_Msk: u32 = 0x3 << DMA_CCR_PSIZE_Pos;
pub const DMA_CCR_PSIZE: u32 = DMA_CCR_PSIZE_Msk;
pub const DMA_CCR_PSIZE_0: u32 = 0x1 << DMA_CCR_PSIZE_Pos;
pub const DMA_CCR_PSIZE_1: u32 = 0x2 << DMA_CCR_PSIZE_Pos;
pub const DMA_CCR_MSIZE_Pos: u32 = 10;
pub const DMA_CCR_MSIZE_Msk: u32 = 0x3 << DMA_CCR_MSIZE_Pos;
pub const DMA_CCR_MSIZE: u32 = DMA_CCR_MSIZE_Msk;
pub const DMA_CCR_MSIZE_0: u32 = 0x1 << DMA_CCR_MSIZE_Pos;
pub const DMA_CCR_MSIZE_1: u32 = 0x2 << DMA_CCR_MSIZE_Pos;
pub const DMA_CCR_PL_Pos: u32 = 12;
pub const DMA_CCR_PL_Msk: u32 = 0x3 << DMA_CCR_PL_Pos;
pub const DMA_CCR_PL: u32 = DMA_CCR_PL_Msk;
pub const DMA_CCR_PL_0: u32 = 0x1 << DMA_CCR_PL_Pos;
pub const DMA_CCR_PL_1: u32 = 0x2 << DMA_CCR_PL_Pos;
pub const DMA_CCR_MEM2MEM_Pos: u32 = 14;
pub const DMA_CCR_MEM2MEM_Msk: u32 = 0x1 << DMA_CCR_MEM2MEM_Pos;
pub const DMA_CCR_MEM2MEM: u32 = DMA_CCR_MEM2MEM_Msk;
pub const DMA_CNDTR_NDT_Pos: u32 = 0;
pub const DMA_CNDTR_NDT_Msk: u32 = 0xFFFF << DMA_CNDTR_NDT_Pos;
pub const DMA_CNDTR_NDT: u32 = DMA_CNDTR_NDT_Msk;
pub const DMA_CNDTR1_NDT_Pos: u32 = 0;
pub const DMA_CNDTR1_NDT_Msk: u32 = 0xFFFF << DMA_CNDTR1_NDT_Pos;
pub const DMA_CNDTR1_NDT: u32 = DMA_CNDTR1_NDT_Msk;
pub const DMA_CNDTR2_NDT_Pos: u32 = 0;
pub const DMA_CNDTR2_NDT_Msk: u32 = 0xFFFF << DMA_CNDTR2_NDT_Pos;
pub const DMA_CNDTR2_NDT: u32 = DMA_CNDTR2_NDT_Msk;
pub const DMA_CNDTR3_NDT_Pos: u32 = 0;
pub const DMA_CNDTR3_NDT_Msk: u32 = 0xFFFF << DMA_CNDTR3_NDT_Pos;
pub const DMA_CNDTR3_NDT: u32 = DMA_CNDTR3_NDT_Msk;
pub const DMA_CNDTR4_NDT_Pos: u32 = 0;
pub const DMA_CNDTR4_NDT_Msk: u32 = 0xFFFF << DMA_CNDTR4_NDT_Pos;
pub const DMA_CNDTR4_NDT: u32 = DMA_CNDTR4_NDT_Msk;
pub const DMA_CNDTR5_NDT_Pos: u32 = 0;
pub const DMA_CNDTR5_NDT_Msk: u32 = 0xFFFF << DMA_CNDTR5_NDT_Pos;
pub const DMA_CNDTR5_NDT: u32 = DMA_CNDTR5_NDT_Msk;
pub const DMA_CNDTR6_NDT_Pos: u32 = 0;
pub const DMA_CNDTR6_NDT_Msk: u32 = 0xFFFF << DMA_CNDTR6_NDT_Pos;
pub const DMA_CNDTR6_NDT: u32 = DMA_CNDTR6_NDT_Msk;
pub const DMA_CNDTR7_NDT_Pos: u32 = 0;
pub const DMA_CNDTR7_NDT_Msk: u32 = 0xFFFF << DMA_CNDTR7_NDT_Pos;
pub const DMA_CNDTR7_NDT: u32 = DMA_CNDTR7_NDT_Msk;
pub const DMA_CPAR_PA_Pos: u32 = 0;
pub const DMA_CPAR_PA_Msk: u32 = 0xFFFFFFFF << DMA_CPAR_PA_Pos;
pub const DMA_CPAR_PA: u32 = DMA_CPAR_PA_Msk;
pub const DMA_CPAR1_PA_Pos: u32 = 0;
pub const DMA_CPAR1_PA_Msk: u32 = 0xFFFFFFFF << DMA_CPAR1_PA_Pos;
pub const DMA_CPAR1_PA: u32 = DMA_CPAR1_PA_Msk;
pub const DMA_CPAR2_PA_Pos: u32 = 0;
pub const DMA_CPAR2_PA_Msk: u32 = 0xFFFFFFFF << DMA_CPAR2_PA_Pos;
pub const DMA_CPAR2_PA: u32 = DMA_CPAR2_PA_Msk;
pub const DMA_CPAR3_PA_Pos: u32 = 0;
pub const DMA_CPAR3_PA_Msk: u32 = 0xFFFFFFFF << DMA_CPAR3_PA_Pos;
pub const DMA_CPAR3_PA: u32 = DMA_CPAR3_PA_Msk;
pub const DMA_CPAR4_PA_Pos: u32 = 0;
pub const DMA_CPAR4_PA_Msk: u32 = 0xFFFFFFFF << DMA_CPAR4_PA_Pos;
pub const DMA_CPAR4_PA: u32 = DMA_CPAR4_PA_Msk;
pub const DMA_CPAR5_PA_Pos: u32 = 0;
pub const DMA_CPAR5_PA_Msk: u32 = 0xFFFFFFFF << DMA_CPAR5_PA_Pos;
pub const DMA_CPAR5_PA: u32 = DMA_CPAR5_PA_Msk;
pub const DMA_CPAR6_PA_Pos: u32 = 0;
pub const DMA_CPAR6_PA_Msk: u32 = 0xFFFFFFFF << DMA_CPAR6_PA_Pos;
pub const DMA_CPAR6_PA: u32 = DMA_CPAR6_PA_Msk;
pub const DMA_CPAR7_PA_Pos: u32 = 0;
pub const DMA_CPAR7_PA_Msk: u32 = 0xFFFFFFFF << DMA_CPAR7_PA_Pos;
pub const DMA_CPAR7_PA: u32 = DMA_CPAR7_PA_Msk;
pub const DMA_CMAR_MA_Pos: u32 = 0;
pub const DMA_CMAR_MA_Msk: u32 = 0xFFFFFFFF << DMA_CMAR_MA_Pos;
pub const DMA_CMAR_MA: u32 = DMA_CMAR_MA_Msk;
pub const DMA_CMAR1_MA_Pos: u32 = 0;
pub const DMA_CMAR1_MA_Msk: u32 = 0xFFFFFFFF << DMA_CMAR1_MA_Pos;
pub const DMA_CMAR1_MA: u32 = DMA_CMAR1_MA_Msk;
pub const DMA_CMAR2_MA_Pos: u32 = 0;
pub const DMA_CMAR2_MA_Msk: u32 = 0xFFFFFFFF << DMA_CMAR2_MA_Pos;
pub const DMA_CMAR2_MA: u32 = DMA_CMAR2_MA_Msk;
pub const DMA_CMAR3_MA_Pos: u32 = 0;
pub const DMA_CMAR3_MA_Msk: u32 = 0xFFFFFFFF << DMA_CMAR3_MA_Pos;
pub const DMA_CMAR3_MA: u32 = DMA_CMAR3_MA_Msk;
pub const DMA_CMAR4_MA_Pos: u32 = 0;
pub const DMA_CMAR4_MA_Msk: u32 = 0xFFFFFFFF << DMA_CMAR4_MA_Pos;
pub const DMA_CMAR4_MA: u32 = DMA_CMAR4_MA_Msk;
pub const DMA_CMAR5_MA_Pos: u32 = 0;
pub const DMA_CMAR5_MA_Msk: u32 = 0xFFFFFFFF << DMA_CMAR5_MA_Pos;
pub const DMA_CMAR5_MA: u32 = DMA_CMAR5_MA_Msk;
pub const DMA_CMAR6_MA_Pos: u32 = 0;
pub const DMA_CMAR6_MA_Msk: u32 = 0xFFFFFFFF << DMA_CMAR6_MA_Pos;
pub const DMA_CMAR6_MA: u32 = DMA_CMAR6_MA_Msk;
pub const DMA_CMAR7_MA_Pos: u32 = 0;
pub const DMA_CMAR7_MA_Msk: u32 = 0xFFFFFFFF << DMA_CMAR7_MA_Pos;
pub const DMA_CMAR7_MA: u32 = DMA_CMAR7_MA_Msk;
pub const EXTI_IMR_MR0_Pos: u32 = 0;
pub const EXTI_IMR_MR0_Msk: u32 = 0x1 << EXTI_IMR_MR0_Pos;
pub const EXTI_IMR_MR0: u32 = EXTI_IMR_MR0_Msk;
pub const EXTI_IMR_MR1_Pos: u32 = 1;
pub const EXTI_IMR_MR1_Msk: u32 = 0x1 << EXTI_IMR_MR1_Pos;
pub const EXTI_IMR_MR1: u32 = EXTI_IMR_MR1_Msk;
pub const EXTI_IMR_MR2_Pos: u32 = 2;
pub const EXTI_IMR_MR2_Msk: u32 = 0x1 << EXTI_IMR_MR2_Pos;
pub const EXTI_IMR_MR2: u32 = EXTI_IMR_MR2_Msk;
pub const EXTI_IMR_MR3_Pos: u32 = 3;
pub const EXTI_IMR_MR3_Msk: u32 = 0x1 << EXTI_IMR_MR3_Pos;
pub const EXTI_IMR_MR3: u32 = EXTI_IMR_MR3_Msk;
pub const EXTI_IMR_MR4_Pos: u32 = 4;
pub const EXTI_IMR_MR4_Msk: u32 = 0x1 << EXTI_IMR_MR4_Pos;
pub const EXTI_IMR_MR4: u32 = EXTI_IMR_MR4_Msk;
pub const EXTI_IMR_MR5_Pos: u32 = 5;
pub const EXTI_IMR_MR5_Msk: u32 = 0x1 << EXTI_IMR_MR5_Pos;
pub const EXTI_IMR_MR5: u32 = EXTI_IMR_MR5_Msk;
pub const EXTI_IMR_MR6_Pos: u32 = 6;
pub const EXTI_IMR_MR6_Msk: u32 = 0x1 << EXTI_IMR_MR6_Pos;
pub const EXTI_IMR_MR6: u32 = EXTI_IMR_MR6_Msk;
pub const EXTI_IMR_MR7_Pos: u32 = 7;
pub const EXTI_IMR_MR7_Msk: u32 = 0x1 << EXTI_IMR_MR7_Pos;
pub const EXTI_IMR_MR7: u32 = EXTI_IMR_MR7_Msk;
pub const EXTI_IMR_MR8_Pos: u32 = 8;
pub const EXTI_IMR_MR8_Msk: u32 = 0x1 << EXTI_IMR_MR8_Pos;
pub const EXTI_IMR_MR8: u32 = EXTI_IMR_MR8_Msk;
pub const EXTI_IMR_MR9_Pos: u32 = 9;
pub const EXTI_IMR_MR9_Msk: u32 = 0x1 << EXTI_IMR_MR9_Pos;
pub const EXTI_IMR_MR9: u32 = EXTI_IMR_MR9_Msk;
pub const EXTI_IMR_MR10_Pos: u32 = 10;
pub const EXTI_IMR_MR10_Msk: u32 = 0x1 << EXTI_IMR_MR10_Pos;
pub const EXTI_IMR_MR10: u32 = EXTI_IMR_MR10_Msk;
pub const EXTI_IMR_MR11_Pos: u32 = 11;
pub const EXTI_IMR_MR11_Msk: u32 = 0x1 << EXTI_IMR_MR11_Pos;
pub const EXTI_IMR_MR11: u32 = EXTI_IMR_MR11_Msk;
pub const EXTI_IMR_MR12_Pos: u32 = 12;
pub const EXTI_IMR_MR12_Msk: u32 = 0x1 << EXTI_IMR_MR12_Pos;
pub const EXTI_IMR_MR12: u32 = EXTI_IMR_MR12_Msk;
pub const EXTI_IMR_MR13_Pos: u32 = 13;
pub const EXTI_IMR_MR13_Msk: u32 = 0x1 << EXTI_IMR_MR13_Pos;
pub const EXTI_IMR_MR13: u32 = EXTI_IMR_MR13_Msk;
pub const EXTI_IMR_MR14_Pos: u32 = 14;
pub const EXTI_IMR_MR14_Msk: u32 = 0x1 << EXTI_IMR_MR14_Pos;
pub const EXTI_IMR_MR14: u32 = EXTI_IMR_MR14_Msk;
pub const EXTI_IMR_MR15_Pos: u32 = 15;
pub const EXTI_IMR_MR15_Msk: u32 = 0x1 << EXTI_IMR_MR15_Pos;
pub const EXTI_IMR_MR15: u32 = EXTI_IMR_MR15_Msk;
pub const EXTI_IMR_MR16_Pos: u32 = 16;
pub const EXTI_IMR_MR16_Msk: u32 = 0x1 << EXTI_IMR_MR16_Pos;
pub const EXTI_IMR_MR16: u32 = EXTI_IMR_MR16_Msk;
pub const EXTI_IMR_MR17_Pos: u32 = 17;
pub const EXTI_IMR_MR17_Msk: u32 = 0x1 << EXTI_IMR_MR17_Pos;
pub const EXTI_IMR_MR17: u32 = EXTI_IMR_MR17_Msk;
pub const EXTI_IMR_MR18_Pos: u32 = 18;
pub const EXTI_IMR_MR18_Msk: u32 = 0x1 << EXTI_IMR_MR18_Pos;
pub const EXTI_IMR_MR18: u32 = EXTI_IMR_MR18_Msk;
pub const EXTI_IMR_MR19_Pos: u32 = 19;
pub const EXTI_IMR_MR19_Msk: u32 = 0x1 << EXTI_IMR_MR19_Pos;
pub const EXTI_IMR_MR19: u32 = EXTI_IMR_MR19_Msk;
pub const EXTI_IMR_MR20_Pos: u32 = 20;
pub const EXTI_IMR_MR20_Msk: u32 = 0x1 << EXTI_IMR_MR20_Pos;
pub const EXTI_IMR_MR20: u32 = EXTI_IMR_MR20_Msk;
pub const EXTI_IMR_MR21_Pos: u32 = 21;
pub const EXTI_IMR_MR21_Msk: u32 = 0x1 << EXTI_IMR_MR21_Pos;
pub const EXTI_IMR_MR21: u32 = EXTI_IMR_MR21_Msk;
pub const EXTI_IMR_MR22_Pos: u32 = 22;
pub const EXTI_IMR_MR22_Msk: u32 = 0x1 << EXTI_IMR_MR22_Pos;
pub const EXTI_IMR_MR22: u32 = EXTI_IMR_MR22_Msk;
pub const EXTI_IMR_MR23_Pos: u32 = 23;
pub const EXTI_IMR_MR23_Msk: u32 = 0x1 << EXTI_IMR_MR23_Pos;
pub const EXTI_IMR_MR23: u32 = EXTI_IMR_MR23_Msk;
pub const EXTI_IMR_IM0: u32 = EXTI_IMR_MR0;
pub const EXTI_IMR_IM1: u32 = EXTI_IMR_MR1;
pub const EXTI_IMR_IM2: u32 = EXTI_IMR_MR2;
pub const EXTI_IMR_IM3: u32 = EXTI_IMR_MR3;
pub const EXTI_IMR_IM4: u32 = EXTI_IMR_MR4;
pub const EXTI_IMR_IM5: u32 = EXTI_IMR_MR5;
pub const EXTI_IMR_IM6: u32 = EXTI_IMR_MR6;
pub const EXTI_IMR_IM7: u32 = EXTI_IMR_MR7;
pub const EXTI_IMR_IM8: u32 = EXTI_IMR_MR8;
pub const EXTI_IMR_IM9: u32 = EXTI_IMR_MR9;
pub const EXTI_IMR_IM10: u32 = EXTI_IMR_MR10;
pub const EXTI_IMR_IM11: u32 = EXTI_IMR_MR11;
pub const EXTI_IMR_IM12: u32 = EXTI_IMR_MR12;
pub const EXTI_IMR_IM13: u32 = EXTI_IMR_MR13;
pub const EXTI_IMR_IM14: u32 = EXTI_IMR_MR14;
pub const EXTI_IMR_IM15: u32 = EXTI_IMR_MR15;
pub const EXTI_IMR_IM16: u32 = EXTI_IMR_MR16;
pub const EXTI_IMR_IM17: u32 = EXTI_IMR_MR17;
pub const EXTI_IMR_IM18: u32 = EXTI_IMR_MR18;
pub const EXTI_IMR_IM19: u32 = EXTI_IMR_MR19;
pub const EXTI_IMR_IM20: u32 = EXTI_IMR_MR20;
pub const EXTI_IMR_IM21: u32 = EXTI_IMR_MR21;
pub const EXTI_IMR_IM22: u32 = EXTI_IMR_MR22;
pub const EXTI_IMR_IM23: u32 = EXTI_IMR_MR23;
pub const EXTI_IMR_IM_Pos: u32 = 0;
pub const EXTI_IMR_IM_Msk: u32 = 0xFFFFFF << EXTI_IMR_IM_Pos;
pub const EXTI_IMR_IM: u32 = EXTI_IMR_IM_Msk;
pub const EXTI_EMR_MR0_Pos: u32 = 0;
pub const EXTI_EMR_MR0_Msk: u32 = 0x1 << EXTI_EMR_MR0_Pos;
pub const EXTI_EMR_MR0: u32 = EXTI_EMR_MR0_Msk;
pub const EXTI_EMR_MR1_Pos: u32 = 1;
pub const EXTI_EMR_MR1_Msk: u32 = 0x1 << EXTI_EMR_MR1_Pos;
pub const EXTI_EMR_MR1: u32 = EXTI_EMR_MR1_Msk;
pub const EXTI_EMR_MR2_Pos: u32 = 2;
pub const EXTI_EMR_MR2_Msk: u32 = 0x1 << EXTI_EMR_MR2_Pos;
pub const EXTI_EMR_MR2: u32 = EXTI_EMR_MR2_Msk;
pub const EXTI_EMR_MR3_Pos: u32 = 3;
pub const EXTI_EMR_MR3_Msk: u32 = 0x1 << EXTI_EMR_MR3_Pos;
pub const EXTI_EMR_MR3: u32 = EXTI_EMR_MR3_Msk;
pub const EXTI_EMR_MR4_Pos: u32 = 4;
pub const EXTI_EMR_MR4_Msk: u32 = 0x1 << EXTI_EMR_MR4_Pos;
pub const EXTI_EMR_MR4: u32 = EXTI_EMR_MR4_Msk;
pub const EXTI_EMR_MR5_Pos: u32 = 5;
pub const EXTI_EMR_MR5_Msk: u32 = 0x1 << EXTI_EMR_MR5_Pos;
pub const EXTI_EMR_MR5: u32 = EXTI_EMR_MR5_Msk;
pub const EXTI_EMR_MR6_Pos: u32 = 6;
pub const EXTI_EMR_MR6_Msk: u32 = 0x1 << EXTI_EMR_MR6_Pos;
pub const EXTI_EMR_MR6: u32 = EXTI_EMR_MR6_Msk;
pub const EXTI_EMR_MR7_Pos: u32 = 7;
pub const EXTI_EMR_MR7_Msk: u32 = 0x1 << EXTI_EMR_MR7_Pos;
pub const EXTI_EMR_MR7: u32 = EXTI_EMR_MR7_Msk;
pub const EXTI_EMR_MR8_Pos: u32 = 8;
pub const EXTI_EMR_MR8_Msk: u32 = 0x1 << EXTI_EMR_MR8_Pos;
pub const EXTI_EMR_MR8: u32 = EXTI_EMR_MR8_Msk;
pub const EXTI_EMR_MR9_Pos: u32 = 9;
pub const EXTI_EMR_MR9_Msk: u32 = 0x1 << EXTI_EMR_MR9_Pos;
pub const EXTI_EMR_MR9: u32 = EXTI_EMR_MR9_Msk;
pub const EXTI_EMR_MR10_Pos: u32 = 10;
pub const EXTI_EMR_MR10_Msk: u32 = 0x1 << EXTI_EMR_MR10_Pos;
pub const EXTI_EMR_MR10: u32 = EXTI_EMR_MR10_Msk;
pub const EXTI_EMR_MR11_Pos: u32 = 11;
pub const EXTI_EMR_MR11_Msk: u32 = 0x1 << EXTI_EMR_MR11_Pos;
pub const EXTI_EMR_MR11: u32 = EXTI_EMR_MR11_Msk;
pub const EXTI_EMR_MR12_Pos: u32 = 12;
pub const EXTI_EMR_MR12_Msk: u32 = 0x1 << EXTI_EMR_MR12_Pos;
pub const EXTI_EMR_MR12: u32 = EXTI_EMR_MR12_Msk;
pub const EXTI_EMR_MR13_Pos: u32 = 13;
pub const EXTI_EMR_MR13_Msk: u32 = 0x1 << EXTI_EMR_MR13_Pos;
pub const EXTI_EMR_MR13: u32 = EXTI_EMR_MR13_Msk;
pub const EXTI_EMR_MR14_Pos: u32 = 14;
pub const EXTI_EMR_MR14_Msk: u32 = 0x1 << EXTI_EMR_MR14_Pos;
pub const EXTI_EMR_MR14: u32 = EXTI_EMR_MR14_Msk;
pub const EXTI_EMR_MR15_Pos: u32 = 15;
pub const EXTI_EMR_MR15_Msk: u32 = 0x1 << EXTI_EMR_MR15_Pos;
pub const EXTI_EMR_MR15: u32 = EXTI_EMR_MR15_Msk;
pub const EXTI_EMR_MR16_Pos: u32 = 16;
pub const EXTI_EMR_MR16_Msk: u32 = 0x1 << EXTI_EMR_MR16_Pos;
pub const EXTI_EMR_MR16: u32 = EXTI_EMR_MR16_Msk;
pub const EXTI_EMR_MR17_Pos: u32 = 17;
pub const EXTI_EMR_MR17_Msk: u32 = 0x1 << EXTI_EMR_MR17_Pos;
pub const EXTI_EMR_MR17: u32 = EXTI_EMR_MR17_Msk;
pub const EXTI_EMR_MR18_Pos: u32 = 18;
pub const EXTI_EMR_MR18_Msk: u32 = 0x1 << EXTI_EMR_MR18_Pos;
pub const EXTI_EMR_MR18: u32 = EXTI_EMR_MR18_Msk;
pub const EXTI_EMR_MR19_Pos: u32 = 19;
pub const EXTI_EMR_MR19_Msk: u32 = 0x1 << EXTI_EMR_MR19_Pos;
pub const EXTI_EMR_MR19: u32 = EXTI_EMR_MR19_Msk;
pub const EXTI_EMR_MR20_Pos: u32 = 20;
pub const EXTI_EMR_MR20_Msk: u32 = 0x1 << EXTI_EMR_MR20_Pos;
pub const EXTI_EMR_MR20: u32 = EXTI_EMR_MR20_Msk;
pub const EXTI_EMR_MR21_Pos: u32 = 21;
pub const EXTI_EMR_MR21_Msk: u32 = 0x1 << EXTI_EMR_MR21_Pos;
pub const EXTI_EMR_MR21: u32 = EXTI_EMR_MR21_Msk;
pub const EXTI_EMR_MR22_Pos: u32 = 22;
pub const EXTI_EMR_MR22_Msk: u32 = 0x1 << EXTI_EMR_MR22_Pos;
pub const EXTI_EMR_MR22: u32 = EXTI_EMR_MR22_Msk;
pub const EXTI_EMR_MR23_Pos: u32 = 23;
pub const EXTI_EMR_MR23_Msk: u32 = 0x1 << EXTI_EMR_MR23_Pos;
pub const EXTI_EMR_MR23: u32 = EXTI_EMR_MR23_Msk;
pub const EXTI_EMR_EM0: u32 = EXTI_EMR_MR0;
pub const EXTI_EMR_EM1: u32 = EXTI_EMR_MR1;
pub const EXTI_EMR_EM2: u32 = EXTI_EMR_MR2;
pub const EXTI_EMR_EM3: u32 = EXTI_EMR_MR3;
pub const EXTI_EMR_EM4: u32 = EXTI_EMR_MR4;
pub const EXTI_EMR_EM5: u32 = EXTI_EMR_MR5;
pub const EXTI_EMR_EM6: u32 = EXTI_EMR_MR6;
pub const EXTI_EMR_EM7: u32 = EXTI_EMR_MR7;
pub const EXTI_EMR_EM8: u32 = EXTI_EMR_MR8;
pub const EXTI_EMR_EM9: u32 = EXTI_EMR_MR9;
pub const EXTI_EMR_EM10: u32 = EXTI_EMR_MR10;
pub const EXTI_EMR_EM11: u32 = EXTI_EMR_MR11;
pub const EXTI_EMR_EM12: u32 = EXTI_EMR_MR12;
pub const EXTI_EMR_EM13: u32 = EXTI_EMR_MR13;
pub const EXTI_EMR_EM14: u32 = EXTI_EMR_MR14;
pub const EXTI_EMR_EM15: u32 = EXTI_EMR_MR15;
pub const EXTI_EMR_EM16: u32 = EXTI_EMR_MR16;
pub const EXTI_EMR_EM17: u32 = EXTI_EMR_MR17;
pub const EXTI_EMR_EM18: u32 = EXTI_EMR_MR18;
pub const EXTI_EMR_EM19: u32 = EXTI_EMR_MR19;
pub const EXTI_EMR_EM20: u32 = EXTI_EMR_MR20;
pub const EXTI_EMR_EM21: u32 = EXTI_EMR_MR21;
pub const EXTI_EMR_EM22: u32 = EXTI_EMR_MR22;
pub const EXTI_EMR_EM23: u32 = EXTI_EMR_MR23;
pub const EXTI_RTSR_TR0_Pos: u32 = 0;
pub const EXTI_RTSR_TR0_Msk: u32 = 0x1 << EXTI_RTSR_TR0_Pos;
pub const EXTI_RTSR_TR0: u32 = EXTI_RTSR_TR0_Msk;
pub const EXTI_RTSR_TR1_Pos: u32 = 1;
pub const EXTI_RTSR_TR1_Msk: u32 = 0x1 << EXTI_RTSR_TR1_Pos;
pub const EXTI_RTSR_TR1: u32 = EXTI_RTSR_TR1_Msk;
pub const EXTI_RTSR_TR2_Pos: u32 = 2;
pub const EXTI_RTSR_TR2_Msk: u32 = 0x1 << EXTI_RTSR_TR2_Pos;
pub const EXTI_RTSR_TR2: u32 = EXTI_RTSR_TR2_Msk;
pub const EXTI_RTSR_TR3_Pos: u32 = 3;
pub const EXTI_RTSR_TR3_Msk: u32 = 0x1 << EXTI_RTSR_TR3_Pos;
pub const EXTI_RTSR_TR3: u32 = EXTI_RTSR_TR3_Msk;
pub const EXTI_RTSR_TR4_Pos: u32 = 4;
pub const EXTI_RTSR_TR4_Msk: u32 = 0x1 << EXTI_RTSR_TR4_Pos;
pub const EXTI_RTSR_TR4: u32 = EXTI_RTSR_TR4_Msk;
pub const EXTI_RTSR_TR5_Pos: u32 = 5;
pub const EXTI_RTSR_TR5_Msk: u32 = 0x1 << EXTI_RTSR_TR5_Pos;
pub const EXTI_RTSR_TR5: u32 = EXTI_RTSR_TR5_Msk;
pub const EXTI_RTSR_TR6_Pos: u32 = 6;
pub const EXTI_RTSR_TR6_Msk: u32 = 0x1 << EXTI_RTSR_TR6_Pos;
pub const EXTI_RTSR_TR6: u32 = EXTI_RTSR_TR6_Msk;
pub const EXTI_RTSR_TR7_Pos: u32 = 7;
pub const EXTI_RTSR_TR7_Msk: u32 = 0x1 << EXTI_RTSR_TR7_Pos;
pub const EXTI_RTSR_TR7: u32 = EXTI_RTSR_TR7_Msk;
pub const EXTI_RTSR_TR8_Pos: u32 = 8;
pub const EXTI_RTSR_TR8_Msk: u32 = 0x1 << EXTI_RTSR_TR8_Pos;
pub const EXTI_RTSR_TR8: u32 = EXTI_RTSR_TR8_Msk;
pub const EXTI_RTSR_TR9_Pos: u32 = 9;
pub const EXTI_RTSR_TR9_Msk: u32 = 0x1 << EXTI_RTSR_TR9_Pos;
pub const EXTI_RTSR_TR9: u32 = EXTI_RTSR_TR9_Msk;
pub const EXTI_RTSR_TR10_Pos: u32 = 10;
pub const EXTI_RTSR_TR10_Msk: u32 = 0x1 << EXTI_RTSR_TR10_Pos;
pub const EXTI_RTSR_TR10: u32 = EXTI_RTSR_TR10_Msk;
pub const EXTI_RTSR_TR11_Pos: u32 = 11;
pub const EXTI_RTSR_TR11_Msk: u32 = 0x1 << EXTI_RTSR_TR11_Pos;
pub const EXTI_RTSR_TR11: u32 = EXTI_RTSR_TR11_Msk;
pub const EXTI_RTSR_TR12_Pos: u32 = 12;
pub const EXTI_RTSR_TR12_Msk: u32 = 0x1 << EXTI_RTSR_TR12_Pos;
pub const EXTI_RTSR_TR12: u32 = EXTI_RTSR_TR12_Msk;
pub const EXTI_RTSR_TR13_Pos: u32 = 13;
pub const EXTI_RTSR_TR13_Msk: u32 = 0x1 << EXTI_RTSR_TR13_Pos;
pub const EXTI_RTSR_TR13: u32 = EXTI_RTSR_TR13_Msk;
pub const EXTI_RTSR_TR14_Pos: u32 = 14;
pub const EXTI_RTSR_TR14_Msk: u32 = 0x1 << EXTI_RTSR_TR14_Pos;
pub const EXTI_RTSR_TR14: u32 = EXTI_RTSR_TR14_Msk;
pub const EXTI_RTSR_TR15_Pos: u32 = 15;
pub const EXTI_RTSR_TR15_Msk: u32 = 0x1 << EXTI_RTSR_TR15_Pos;
pub const EXTI_RTSR_TR15: u32 = EXTI_RTSR_TR15_Msk;
pub const EXTI_RTSR_TR16_Pos: u32 = 16;
pub const EXTI_RTSR_TR16_Msk: u32 = 0x1 << EXTI_RTSR_TR16_Pos;
pub const EXTI_RTSR_TR16: u32 = EXTI_RTSR_TR16_Msk;
pub const EXTI_RTSR_TR17_Pos: u32 = 17;
pub const EXTI_RTSR_TR17_Msk: u32 = 0x1 << EXTI_RTSR_TR17_Pos;
pub const EXTI_RTSR_TR17: u32 = EXTI_RTSR_TR17_Msk;
pub const EXTI_RTSR_TR18_Pos: u32 = 18;
pub const EXTI_RTSR_TR18_Msk: u32 = 0x1 << EXTI_RTSR_TR18_Pos;
pub const EXTI_RTSR_TR18: u32 = EXTI_RTSR_TR18_Msk;
pub const EXTI_RTSR_TR19_Pos: u32 = 19;
pub const EXTI_RTSR_TR19_Msk: u32 = 0x1 << EXTI_RTSR_TR19_Pos;
pub const EXTI_RTSR_TR19: u32 = EXTI_RTSR_TR19_Msk;
pub const EXTI_RTSR_TR20_Pos: u32 = 20;
pub const EXTI_RTSR_TR20_Msk: u32 = 0x1 << EXTI_RTSR_TR20_Pos;
pub const EXTI_RTSR_TR20: u32 = EXTI_RTSR_TR20_Msk;
pub const EXTI_RTSR_TR21_Pos: u32 = 21;
pub const EXTI_RTSR_TR21_Msk: u32 = 0x1 << EXTI_RTSR_TR21_Pos;
pub const EXTI_RTSR_TR21: u32 = EXTI_RTSR_TR21_Msk;
pub const EXTI_RTSR_TR22_Pos: u32 = 22;
pub const EXTI_RTSR_TR22_Msk: u32 = 0x1 << EXTI_RTSR_TR22_Pos;
pub const EXTI_RTSR_TR22: u32 = EXTI_RTSR_TR22_Msk;
pub const EXTI_RTSR_TR23_Pos: u32 = 23;
pub const EXTI_RTSR_TR23_Msk: u32 = 0x1 << EXTI_RTSR_TR23_Pos;
pub const EXTI_RTSR_TR23: u32 = EXTI_RTSR_TR23_Msk;
pub const EXTI_RTSR_RT0: u32 = EXTI_RTSR_TR0;
pub const EXTI_RTSR_RT1: u32 = EXTI_RTSR_TR1;
pub const EXTI_RTSR_RT2: u32 = EXTI_RTSR_TR2;
pub const EXTI_RTSR_RT3: u32 = EXTI_RTSR_TR3;
pub const EXTI_RTSR_RT4: u32 = EXTI_RTSR_TR4;
pub const EXTI_RTSR_RT5: u32 = EXTI_RTSR_TR5;
pub const EXTI_RTSR_RT6: u32 = EXTI_RTSR_TR6;
pub const EXTI_RTSR_RT7: u32 = EXTI_RTSR_TR7;
pub const EXTI_RTSR_RT8: u32 = EXTI_RTSR_TR8;
pub const EXTI_RTSR_RT9: u32 = EXTI_RTSR_TR9;
pub const EXTI_RTSR_RT10: u32 = EXTI_RTSR_TR10;
pub const EXTI_RTSR_RT11: u32 = EXTI_RTSR_TR11;
pub const EXTI_RTSR_RT12: u32 = EXTI_RTSR_TR12;
pub const EXTI_RTSR_RT13: u32 = EXTI_RTSR_TR13;
pub const EXTI_RTSR_RT14: u32 = EXTI_RTSR_TR14;
pub const EXTI_RTSR_RT15: u32 = EXTI_RTSR_TR15;
pub const EXTI_RTSR_RT16: u32 = EXTI_RTSR_TR16;
pub const EXTI_RTSR_RT17: u32 = EXTI_RTSR_TR17;
pub const EXTI_RTSR_RT18: u32 = EXTI_RTSR_TR18;
pub const EXTI_RTSR_RT19: u32 = EXTI_RTSR_TR19;
pub const EXTI_RTSR_RT20: u32 = EXTI_RTSR_TR20;
pub const EXTI_RTSR_RT21: u32 = EXTI_RTSR_TR21;
pub const EXTI_RTSR_RT22: u32 = EXTI_RTSR_TR22;
pub const EXTI_RTSR_RT23: u32 = EXTI_RTSR_TR23;
pub const EXTI_FTSR_TR0_Pos: u32 = 0;
pub const EXTI_FTSR_TR0_Msk: u32 = 0x1 << EXTI_FTSR_TR0_Pos;
pub const EXTI_FTSR_TR0: u32 = EXTI_FTSR_TR0_Msk;
pub const EXTI_FTSR_TR1_Pos: u32 = 1;
pub const EXTI_FTSR_TR1_Msk: u32 = 0x1 << EXTI_FTSR_TR1_Pos;
pub const EXTI_FTSR_TR1: u32 = EXTI_FTSR_TR1_Msk;
pub const EXTI_FTSR_TR2_Pos: u32 = 2;
pub const EXTI_FTSR_TR2_Msk: u32 = 0x1 << EXTI_FTSR_TR2_Pos;
pub const EXTI_FTSR_TR2: u32 = EXTI_FTSR_TR2_Msk;
pub const EXTI_FTSR_TR3_Pos: u32 = 3;
pub const EXTI_FTSR_TR3_Msk: u32 = 0x1 << EXTI_FTSR_TR3_Pos;
pub const EXTI_FTSR_TR3: u32 = EXTI_FTSR_TR3_Msk;
pub const EXTI_FTSR_TR4_Pos: u32 = 4;
pub const EXTI_FTSR_TR4_Msk: u32 = 0x1 << EXTI_FTSR_TR4_Pos;
pub const EXTI_FTSR_TR4: u32 = EXTI_FTSR_TR4_Msk;
pub const EXTI_FTSR_TR5_Pos: u32 = 5;
pub const EXTI_FTSR_TR5_Msk: u32 = 0x1 << EXTI_FTSR_TR5_Pos;
pub const EXTI_FTSR_TR5: u32 = EXTI_FTSR_TR5_Msk;
pub const EXTI_FTSR_TR6_Pos: u32 = 6;
pub const EXTI_FTSR_TR6_Msk: u32 = 0x1 << EXTI_FTSR_TR6_Pos;
pub const EXTI_FTSR_TR6: u32 = EXTI_FTSR_TR6_Msk;
pub const EXTI_FTSR_TR7_Pos: u32 = 7;
pub const EXTI_FTSR_TR7_Msk: u32 = 0x1 << EXTI_FTSR_TR7_Pos;
pub const EXTI_FTSR_TR7: u32 = EXTI_FTSR_TR7_Msk;
pub const EXTI_FTSR_TR8_Pos: u32 = 8;
pub const EXTI_FTSR_TR8_Msk: u32 = 0x1 << EXTI_FTSR_TR8_Pos;
pub const EXTI_FTSR_TR8: u32 = EXTI_FTSR_TR8_Msk;
pub const EXTI_FTSR_TR9_Pos: u32 = 9;
pub const EXTI_FTSR_TR9_Msk: u32 = 0x1 << EXTI_FTSR_TR9_Pos;
pub const EXTI_FTSR_TR9: u32 = EXTI_FTSR_TR9_Msk;
pub const EXTI_FTSR_TR10_Pos: u32 = 10;
pub const EXTI_FTSR_TR10_Msk: u32 = 0x1 << EXTI_FTSR_TR10_Pos;
pub const EXTI_FTSR_TR10: u32 = EXTI_FTSR_TR10_Msk;
pub const EXTI_FTSR_TR11_Pos: u32 = 11;
pub const EXTI_FTSR_TR11_Msk: u32 = 0x1 << EXTI_FTSR_TR11_Pos;
pub const EXTI_FTSR_TR11: u32 = EXTI_FTSR_TR11_Msk;
pub const EXTI_FTSR_TR12_Pos: u32 = 12;
pub const EXTI_FTSR_TR12_Msk: u32 = 0x1 << EXTI_FTSR_TR12_Pos;
pub const EXTI_FTSR_TR12: u32 = EXTI_FTSR_TR12_Msk;
pub const EXTI_FTSR_TR13_Pos: u32 = 13;
pub const EXTI_FTSR_TR13_Msk: u32 = 0x1 << EXTI_FTSR_TR13_Pos;
pub const EXTI_FTSR_TR13: u32 = EXTI_FTSR_TR13_Msk;
pub const EXTI_FTSR_TR14_Pos: u32 = 14;
pub const EXTI_FTSR_TR14_Msk: u32 = 0x1 << EXTI_FTSR_TR14_Pos;
pub const EXTI_FTSR_TR14: u32 = EXTI_FTSR_TR14_Msk;
pub const EXTI_FTSR_TR15_Pos: u32 = 15;
pub const EXTI_FTSR_TR15_Msk: u32 = 0x1 << EXTI_FTSR_TR15_Pos;
pub const EXTI_FTSR_TR15: u32 = EXTI_FTSR_TR15_Msk;
pub const EXTI_FTSR_TR16_Pos: u32 = 16;
pub const EXTI_FTSR_TR16_Msk: u32 = 0x1 << EXTI_FTSR_TR16_Pos;
pub const EXTI_FTSR_TR16: u32 = EXTI_FTSR_TR16_Msk;
pub const EXTI_FTSR_TR17_Pos: u32 = 17;
pub const EXTI_FTSR_TR17_Msk: u32 = 0x1 << EXTI_FTSR_TR17_Pos;
pub const EXTI_FTSR_TR17: u32 = EXTI_FTSR_TR17_Msk;
pub const EXTI_FTSR_TR18_Pos: u32 = 18;
pub const EXTI_FTSR_TR18_Msk: u32 = 0x1 << EXTI_FTSR_TR18_Pos;
pub const EXTI_FTSR_TR18: u32 = EXTI_FTSR_TR18_Msk;
pub const EXTI_FTSR_TR19_Pos: u32 = 19;
pub const EXTI_FTSR_TR19_Msk: u32 = 0x1 << EXTI_FTSR_TR19_Pos;
pub const EXTI_FTSR_TR19: u32 = EXTI_FTSR_TR19_Msk;
pub const EXTI_FTSR_TR20_Pos: u32 = 20;
pub const EXTI_FTSR_TR20_Msk: u32 = 0x1 << EXTI_FTSR_TR20_Pos;
pub const EXTI_FTSR_TR20: u32 = EXTI_FTSR_TR20_Msk;
pub const EXTI_FTSR_TR21_Pos: u32 = 21;
pub const EXTI_FTSR_TR21_Msk: u32 = 0x1 << EXTI_FTSR_TR21_Pos;
pub const EXTI_FTSR_TR21: u32 = EXTI_FTSR_TR21_Msk;
pub const EXTI_FTSR_TR22_Pos: u32 = 22;
pub const EXTI_FTSR_TR22_Msk: u32 = 0x1 << EXTI_FTSR_TR22_Pos;
pub const EXTI_FTSR_TR22: u32 = EXTI_FTSR_TR22_Msk;
pub const EXTI_FTSR_TR23_Pos: u32 = 23;
pub const EXTI_FTSR_TR23_Msk: u32 = 0x1 << EXTI_FTSR_TR23_Pos;
pub const EXTI_FTSR_TR23: u32 = EXTI_FTSR_TR23_Msk;
pub const EXTI_FTSR_FT0: u32 = EXTI_FTSR_TR0;
pub const EXTI_FTSR_FT1: u32 = EXTI_FTSR_TR1;
pub const EXTI_FTSR_FT2: u32 = EXTI_FTSR_TR2;
pub const EXTI_FTSR_FT3: u32 = EXTI_FTSR_TR3;
pub const EXTI_FTSR_FT4: u32 = EXTI_FTSR_TR4;
pub const EXTI_FTSR_FT5: u32 = EXTI_FTSR_TR5;
pub const EXTI_FTSR_FT6: u32 = EXTI_FTSR_TR6;
pub const EXTI_FTSR_FT7: u32 = EXTI_FTSR_TR7;
pub const EXTI_FTSR_FT8: u32 = EXTI_FTSR_TR8;
pub const EXTI_FTSR_FT9: u32 = EXTI_FTSR_TR9;
pub const EXTI_FTSR_FT10: u32 = EXTI_FTSR_TR10;
pub const EXTI_FTSR_FT11: u32 = EXTI_FTSR_TR11;
pub const EXTI_FTSR_FT12: u32 = EXTI_FTSR_TR12;
pub const EXTI_FTSR_FT13: u32 = EXTI_FTSR_TR13;
pub const EXTI_FTSR_FT14: u32 = EXTI_FTSR_TR14;
pub const EXTI_FTSR_FT15: u32 = EXTI_FTSR_TR15;
pub const EXTI_FTSR_FT16: u32 = EXTI_FTSR_TR16;
pub const EXTI_FTSR_FT17: u32 = EXTI_FTSR_TR17;
pub const EXTI_FTSR_FT18: u32 = EXTI_FTSR_TR18;
pub const EXTI_FTSR_FT19: u32 = EXTI_FTSR_TR19;
pub const EXTI_FTSR_FT20: u32 = EXTI_FTSR_TR20;
pub const EXTI_FTSR_FT21: u32 = EXTI_FTSR_TR21;
pub const EXTI_FTSR_FT22: u32 = EXTI_FTSR_TR22;
pub const EXTI_FTSR_FT23: u32 = EXTI_FTSR_TR23;
pub const EXTI_SWIER_SWIER0_Pos: u32 = 0;
pub const EXTI_SWIER_SWIER0_Msk: u32 = 0x1 << EXTI_SWIER_SWIER0_Pos;
pub const EXTI_SWIER_SWIER0: u32 = EXTI_SWIER_SWIER0_Msk;
pub const EXTI_SWIER_SWIER1_Pos: u32 = 1;
pub const EXTI_SWIER_SWIER1_Msk: u32 = 0x1 << EXTI_SWIER_SWIER1_Pos;
pub const EXTI_SWIER_SWIER1: u32 = EXTI_SWIER_SWIER1_Msk;
pub const EXTI_SWIER_SWIER2_Pos: u32 = 2;
pub const EXTI_SWIER_SWIER2_Msk: u32 = 0x1 << EXTI_SWIER_SWIER2_Pos;
pub const EXTI_SWIER_SWIER2: u32 = EXTI_SWIER_SWIER2_Msk;
pub const EXTI_SWIER_SWIER3_Pos: u32 = 3;
pub const EXTI_SWIER_SWIER3_Msk: u32 = 0x1 << EXTI_SWIER_SWIER3_Pos;
pub const EXTI_SWIER_SWIER3: u32 = EXTI_SWIER_SWIER3_Msk;
pub const EXTI_SWIER_SWIER4_Pos: u32 = 4;
pub const EXTI_SWIER_SWIER4_Msk: u32 = 0x1 << EXTI_SWIER_SWIER4_Pos;
pub const EXTI_SWIER_SWIER4: u32 = EXTI_SWIER_SWIER4_Msk;
pub const EXTI_SWIER_SWIER5_Pos: u32 = 5;
pub const EXTI_SWIER_SWIER5_Msk: u32 = 0x1 << EXTI_SWIER_SWIER5_Pos;
pub const EXTI_SWIER_SWIER5: u32 = EXTI_SWIER_SWIER5_Msk;
pub const EXTI_SWIER_SWIER6_Pos: u32 = 6;
pub const EXTI_SWIER_SWIER6_Msk: u32 = 0x1 << EXTI_SWIER_SWIER6_Pos;
pub const EXTI_SWIER_SWIER6: u32 = EXTI_SWIER_SWIER6_Msk;
pub const EXTI_SWIER_SWIER7_Pos: u32 = 7;
pub const EXTI_SWIER_SWIER7_Msk: u32 = 0x1 << EXTI_SWIER_SWIER7_Pos;
pub const EXTI_SWIER_SWIER7: u32 = EXTI_SWIER_SWIER7_Msk;
pub const EXTI_SWIER_SWIER8_Pos: u32 = 8;
pub const EXTI_SWIER_SWIER8_Msk: u32 = 0x1 << EXTI_SWIER_SWIER8_Pos;
pub const EXTI_SWIER_SWIER8: u32 = EXTI_SWIER_SWIER8_Msk;
pub const EXTI_SWIER_SWIER9_Pos: u32 = 9;
pub const EXTI_SWIER_SWIER9_Msk: u32 = 0x1 << EXTI_SWIER_SWIER9_Pos;
pub const EXTI_SWIER_SWIER9: u32 = EXTI_SWIER_SWIER9_Msk;
pub const EXTI_SWIER_SWIER10_Pos: u32 = 10;
pub const EXTI_SWIER_SWIER10_Msk: u32 = 0x1 << EXTI_SWIER_SWIER10_Pos;
pub const EXTI_SWIER_SWIER10: u32 = EXTI_SWIER_SWIER10_Msk;
pub const EXTI_SWIER_SWIER11_Pos: u32 = 11;
pub const EXTI_SWIER_SWIER11_Msk: u32 = 0x1 << EXTI_SWIER_SWIER11_Pos;
pub const EXTI_SWIER_SWIER11: u32 = EXTI_SWIER_SWIER11_Msk;
pub const EXTI_SWIER_SWIER12_Pos: u32 = 12;
pub const EXTI_SWIER_SWIER12_Msk: u32 = 0x1 << EXTI_SWIER_SWIER12_Pos;
pub const EXTI_SWIER_SWIER12: u32 = EXTI_SWIER_SWIER12_Msk;
pub const EXTI_SWIER_SWIER13_Pos: u32 = 13;
pub const EXTI_SWIER_SWIER13_Msk: u32 = 0x1 << EXTI_SWIER_SWIER13_Pos;
pub const EXTI_SWIER_SWIER13: u32 = EXTI_SWIER_SWIER13_Msk;
pub const EXTI_SWIER_SWIER14_Pos: u32 = 14;
pub const EXTI_SWIER_SWIER14_Msk: u32 = 0x1 << EXTI_SWIER_SWIER14_Pos;
pub const EXTI_SWIER_SWIER14: u32 = EXTI_SWIER_SWIER14_Msk;
pub const EXTI_SWIER_SWIER15_Pos: u32 = 15;
pub const EXTI_SWIER_SWIER15_Msk: u32 = 0x1 << EXTI_SWIER_SWIER15_Pos;
pub const EXTI_SWIER_SWIER15: u32 = EXTI_SWIER_SWIER15_Msk;
pub const EXTI_SWIER_SWIER16_Pos: u32 = 16;
pub const EXTI_SWIER_SWIER16_Msk: u32 = 0x1 << EXTI_SWIER_SWIER16_Pos;
pub const EXTI_SWIER_SWIER16: u32 = EXTI_SWIER_SWIER16_Msk;
pub const EXTI_SWIER_SWIER17_Pos: u32 = 17;
pub const EXTI_SWIER_SWIER17_Msk: u32 = 0x1 << EXTI_SWIER_SWIER17_Pos;
pub const EXTI_SWIER_SWIER17: u32 = EXTI_SWIER_SWIER17_Msk;
pub const EXTI_SWIER_SWIER18_Pos: u32 = 18;
pub const EXTI_SWIER_SWIER18_Msk: u32 = 0x1 << EXTI_SWIER_SWIER18_Pos;
pub const EXTI_SWIER_SWIER18: u32 = EXTI_SWIER_SWIER18_Msk;
pub const EXTI_SWIER_SWIER19_Pos: u32 = 19;
pub const EXTI_SWIER_SWIER19_Msk: u32 = 0x1 << EXTI_SWIER_SWIER19_Pos;
pub const EXTI_SWIER_SWIER19: u32 = EXTI_SWIER_SWIER19_Msk;
pub const EXTI_SWIER_SWIER20_Pos: u32 = 20;
pub const EXTI_SWIER_SWIER20_Msk: u32 = 0x1 << EXTI_SWIER_SWIER20_Pos;
pub const EXTI_SWIER_SWIER20: u32 = EXTI_SWIER_SWIER20_Msk;
pub const EXTI_SWIER_SWIER21_Pos: u32 = 21;
pub const EXTI_SWIER_SWIER21_Msk: u32 = 0x1 << EXTI_SWIER_SWIER21_Pos;
pub const EXTI_SWIER_SWIER21: u32 = EXTI_SWIER_SWIER21_Msk;
pub const EXTI_SWIER_SWIER22_Pos: u32 = 22;
pub const EXTI_SWIER_SWIER22_Msk: u32 = 0x1 << EXTI_SWIER_SWIER22_Pos;
pub const EXTI_SWIER_SWIER22: u32 = EXTI_SWIER_SWIER22_Msk;
pub const EXTI_SWIER_SWIER23_Pos: u32 = 23;
pub const EXTI_SWIER_SWIER23_Msk: u32 = 0x1 << EXTI_SWIER_SWIER23_Pos;
pub const EXTI_SWIER_SWIER23: u32 = EXTI_SWIER_SWIER23_Msk;
pub const EXTI_SWIER_SWI0: u32 = EXTI_SWIER_SWIER0;
pub const EXTI_SWIER_SWI1: u32 = EXTI_SWIER_SWIER1;
pub const EXTI_SWIER_SWI2: u32 = EXTI_SWIER_SWIER2;
pub const EXTI_SWIER_SWI3: u32 = EXTI_SWIER_SWIER3;
pub const EXTI_SWIER_SWI4: u32 = EXTI_SWIER_SWIER4;
pub const EXTI_SWIER_SWI5: u32 = EXTI_SWIER_SWIER5;
pub const EXTI_SWIER_SWI6: u32 = EXTI_SWIER_SWIER6;
pub const EXTI_SWIER_SWI7: u32 = EXTI_SWIER_SWIER7;
pub const EXTI_SWIER_SWI8: u32 = EXTI_SWIER_SWIER8;
pub const EXTI_SWIER_SWI9: u32 = EXTI_SWIER_SWIER9;
pub const EXTI_SWIER_SWI10: u32 = EXTI_SWIER_SWIER10;
pub const EXTI_SWIER_SWI11: u32 = EXTI_SWIER_SWIER11;
pub const EXTI_SWIER_SWI12: u32 = EXTI_SWIER_SWIER12;
pub const EXTI_SWIER_SWI13: u32 = EXTI_SWIER_SWIER13;
pub const EXTI_SWIER_SWI14: u32 = EXTI_SWIER_SWIER14;
pub const EXTI_SWIER_SWI15: u32 = EXTI_SWIER_SWIER15;
pub const EXTI_SWIER_SWI16: u32 = EXTI_SWIER_SWIER16;
pub const EXTI_SWIER_SWI17: u32 = EXTI_SWIER_SWIER17;
pub const EXTI_SWIER_SWI18: u32 = EXTI_SWIER_SWIER18;
pub const EXTI_SWIER_SWI19: u32 = EXTI_SWIER_SWIER19;
pub const EXTI_SWIER_SWI20: u32 = EXTI_SWIER_SWIER20;
pub const EXTI_SWIER_SWI21: u32 = EXTI_SWIER_SWIER21;
pub const EXTI_SWIER_SWI22: u32 = EXTI_SWIER_SWIER22;
pub const EXTI_SWIER_SWI23: u32 = EXTI_SWIER_SWIER23;
pub const EXTI_PR_PR0_Pos: u32 = 0;
pub const EXTI_PR_PR0_Msk: u32 = 0x1 << EXTI_PR_PR0_Pos;
pub const EXTI_PR_PR0: u32 = EXTI_PR_PR0_Msk;
pub const EXTI_PR_PR1_Pos: u32 = 1;
pub const EXTI_PR_PR1_Msk: u32 = 0x1 << EXTI_PR_PR1_Pos;
pub const EXTI_PR_PR1: u32 = EXTI_PR_PR1_Msk;
pub const EXTI_PR_PR2_Pos: u32 = 2;
pub const EXTI_PR_PR2_Msk: u32 = 0x1 << EXTI_PR_PR2_Pos;
pub const EXTI_PR_PR2: u32 = EXTI_PR_PR2_Msk;
pub const EXTI_PR_PR3_Pos: u32 = 3;
pub const EXTI_PR_PR3_Msk: u32 = 0x1 << EXTI_PR_PR3_Pos;
pub const EXTI_PR_PR3: u32 = EXTI_PR_PR3_Msk;
pub const EXTI_PR_PR4_Pos: u32 = 4;
pub const EXTI_PR_PR4_Msk: u32 = 0x1 << EXTI_PR_PR4_Pos;
pub const EXTI_PR_PR4: u32 = EXTI_PR_PR4_Msk;
pub const EXTI_PR_PR5_Pos: u32 = 5;
pub const EXTI_PR_PR5_Msk: u32 = 0x1 << EXTI_PR_PR5_Pos;
pub const EXTI_PR_PR5: u32 = EXTI_PR_PR5_Msk;
pub const EXTI_PR_PR6_Pos: u32 = 6;
pub const EXTI_PR_PR6_Msk: u32 = 0x1 << EXTI_PR_PR6_Pos;
pub const EXTI_PR_PR6: u32 = EXTI_PR_PR6_Msk;
pub const EXTI_PR_PR7_Pos: u32 = 7;
pub const EXTI_PR_PR7_Msk: u32 = 0x1 << EXTI_PR_PR7_Pos;
pub const EXTI_PR_PR7: u32 = EXTI_PR_PR7_Msk;
pub const EXTI_PR_PR8_Pos: u32 = 8;
pub const EXTI_PR_PR8_Msk: u32 = 0x1 << EXTI_PR_PR8_Pos;
pub const EXTI_PR_PR8: u32 = EXTI_PR_PR8_Msk;
pub const EXTI_PR_PR9_Pos: u32 = 9;
pub const EXTI_PR_PR9_Msk: u32 = 0x1 << EXTI_PR_PR9_Pos;
pub const EXTI_PR_PR9: u32 = EXTI_PR_PR9_Msk;
pub const EXTI_PR_PR10_Pos: u32 = 10;
pub const EXTI_PR_PR10_Msk: u32 = 0x1 << EXTI_PR_PR10_Pos;
pub const EXTI_PR_PR10: u32 = EXTI_PR_PR10_Msk;
pub const EXTI_PR_PR11_Pos: u32 = 11;
pub const EXTI_PR_PR11_Msk: u32 = 0x1 << EXTI_PR_PR11_Pos;
pub const EXTI_PR_PR11: u32 = EXTI_PR_PR11_Msk;
pub const EXTI_PR_PR12_Pos: u32 = 12;
pub const EXTI_PR_PR12_Msk: u32 = 0x1 << EXTI_PR_PR12_Pos;
pub const EXTI_PR_PR12: u32 = EXTI_PR_PR12_Msk;
pub const EXTI_PR_PR13_Pos: u32 = 13;
pub const EXTI_PR_PR13_Msk: u32 = 0x1 << EXTI_PR_PR13_Pos;
pub const EXTI_PR_PR13: u32 = EXTI_PR_PR13_Msk;
pub const EXTI_PR_PR14_Pos: u32 = 14;
pub const EXTI_PR_PR14_Msk: u32 = 0x1 << EXTI_PR_PR14_Pos;
pub const EXTI_PR_PR14: u32 = EXTI_PR_PR14_Msk;
pub const EXTI_PR_PR15_Pos: u32 = 15;
pub const EXTI_PR_PR15_Msk: u32 = 0x1 << EXTI_PR_PR15_Pos;
pub const EXTI_PR_PR15: u32 = EXTI_PR_PR15_Msk;
pub const EXTI_PR_PR16_Pos: u32 = 16;
pub const EXTI_PR_PR16_Msk: u32 = 0x1 << EXTI_PR_PR16_Pos;
pub const EXTI_PR_PR16: u32 = EXTI_PR_PR16_Msk;
pub const EXTI_PR_PR17_Pos: u32 = 17;
pub const EXTI_PR_PR17_Msk: u32 = 0x1 << EXTI_PR_PR17_Pos;
pub const EXTI_PR_PR17: u32 = EXTI_PR_PR17_Msk;
pub const EXTI_PR_PR18_Pos: u32 = 18;
pub const EXTI_PR_PR18_Msk: u32 = 0x1 << EXTI_PR_PR18_Pos;
pub const EXTI_PR_PR18: u32 = EXTI_PR_PR18_Msk;
pub const EXTI_PR_PR19_Pos: u32 = 19;
pub const EXTI_PR_PR19_Msk: u32 = 0x1 << EXTI_PR_PR19_Pos;
pub const EXTI_PR_PR19: u32 = EXTI_PR_PR19_Msk;
pub const EXTI_PR_PR20_Pos: u32 = 20;
pub const EXTI_PR_PR20_Msk: u32 = 0x1 << EXTI_PR_PR20_Pos;
pub const EXTI_PR_PR20: u32 = EXTI_PR_PR20_Msk;
pub const EXTI_PR_PR21_Pos: u32 = 21;
pub const EXTI_PR_PR21_Msk: u32 = 0x1 << EXTI_PR_PR21_Pos;
pub const EXTI_PR_PR21: u32 = EXTI_PR_PR21_Msk;
pub const EXTI_PR_PR22_Pos: u32 = 22;
pub const EXTI_PR_PR22_Msk: u32 = 0x1 << EXTI_PR_PR22_Pos;
pub const EXTI_PR_PR22: u32 = EXTI_PR_PR22_Msk;
pub const EXTI_PR_PR23_Pos: u32 = 23;
pub const EXTI_PR_PR23_Msk: u32 = 0x1 << EXTI_PR_PR23_Pos;
pub const EXTI_PR_PR23: u32 = EXTI_PR_PR23_Msk;
pub const EXTI_PR_PIF0: u32 = EXTI_PR_PR0;
pub const EXTI_PR_PIF1: u32 = EXTI_PR_PR1;
pub const EXTI_PR_PIF2: u32 = EXTI_PR_PR2;
pub const EXTI_PR_PIF3: u32 = EXTI_PR_PR3;
pub const EXTI_PR_PIF4: u32 = EXTI_PR_PR4;
pub const EXTI_PR_PIF5: u32 = EXTI_PR_PR5;
pub const EXTI_PR_PIF6: u32 = EXTI_PR_PR6;
pub const EXTI_PR_PIF7: u32 = EXTI_PR_PR7;
pub const EXTI_PR_PIF8: u32 = EXTI_PR_PR8;
pub const EXTI_PR_PIF9: u32 = EXTI_PR_PR9;
pub const EXTI_PR_PIF10: u32 = EXTI_PR_PR10;
pub const EXTI_PR_PIF11: u32 = EXTI_PR_PR11;
pub const EXTI_PR_PIF12: u32 = EXTI_PR_PR12;
pub const EXTI_PR_PIF13: u32 = EXTI_PR_PR13;
pub const EXTI_PR_PIF14: u32 = EXTI_PR_PR14;
pub const EXTI_PR_PIF15: u32 = EXTI_PR_PR15;
pub const EXTI_PR_PIF16: u32 = EXTI_PR_PR16;
pub const EXTI_PR_PIF17: u32 = EXTI_PR_PR17;
pub const EXTI_PR_PIF18: u32 = EXTI_PR_PR18;
pub const EXTI_PR_PIF19: u32 = EXTI_PR_PR19;
pub const EXTI_PR_PIF20: u32 = EXTI_PR_PR20;
pub const EXTI_PR_PIF21: u32 = EXTI_PR_PR21;
pub const EXTI_PR_PIF22: u32 = EXTI_PR_PR22;
pub const EXTI_PR_PIF23: u32 = EXTI_PR_PR23;
pub const FLASH_ACR_LATENCY_Pos: u32 = 0;
pub const FLASH_ACR_LATENCY_Msk: u32 = 0x1 << FLASH_ACR_LATENCY_Pos;
pub const FLASH_ACR_LATENCY: u32 = FLASH_ACR_LATENCY_Msk;
pub const FLASH_ACR_PRFTEN_Pos: u32 = 1;
pub const FLASH_ACR_PRFTEN_Msk: u32 = 0x1 << FLASH_ACR_PRFTEN_Pos;
pub const FLASH_ACR_PRFTEN: u32 = FLASH_ACR_PRFTEN_Msk;
pub const FLASH_ACR_ACC64_Pos: u32 = 2;
pub const FLASH_ACR_ACC64_Msk: u32 = 0x1 << FLASH_ACR_ACC64_Pos;
pub const FLASH_ACR_ACC64: u32 = FLASH_ACR_ACC64_Msk;
pub const FLASH_ACR_SLEEP_PD_Pos: u32 = 3;
pub const FLASH_ACR_SLEEP_PD_Msk: u32 = 0x1 << FLASH_ACR_SLEEP_PD_Pos;
pub const FLASH_ACR_SLEEP_PD: u32 = FLASH_ACR_SLEEP_PD_Msk;
pub const FLASH_ACR_RUN_PD_Pos: u32 = 4;
pub const FLASH_ACR_RUN_PD_Msk: u32 = 0x1 << FLASH_ACR_RUN_PD_Pos;
pub const FLASH_ACR_RUN_PD: u32 = FLASH_ACR_RUN_PD_Msk;
pub const FLASH_PECR_PELOCK_Pos: u32 = 0;
pub const FLASH_PECR_PELOCK_Msk: u32 = 0x1 << FLASH_PECR_PELOCK_Pos;
pub const FLASH_PECR_PELOCK: u32 = FLASH_PECR_PELOCK_Msk;
pub const FLASH_PECR_PRGLOCK_Pos: u32 = 1;
pub const FLASH_PECR_PRGLOCK_Msk: u32 = 0x1 << FLASH_PECR_PRGLOCK_Pos;
pub const FLASH_PECR_PRGLOCK: u32 = FLASH_PECR_PRGLOCK_Msk;
pub const FLASH_PECR_OPTLOCK_Pos: u32 = 2;
pub const FLASH_PECR_OPTLOCK_Msk: u32 = 0x1 << FLASH_PECR_OPTLOCK_Pos;
pub const FLASH_PECR_OPTLOCK: u32 = FLASH_PECR_OPTLOCK_Msk;
pub const FLASH_PECR_PROG_Pos: u32 = 3;
pub const FLASH_PECR_PROG_Msk: u32 = 0x1 << FLASH_PECR_PROG_Pos;
pub const FLASH_PECR_PROG: u32 = FLASH_PECR_PROG_Msk;
pub const FLASH_PECR_DATA_Pos: u32 = 4;
pub const FLASH_PECR_DATA_Msk: u32 = 0x1 << FLASH_PECR_DATA_Pos;
pub const FLASH_PECR_DATA: u32 = FLASH_PECR_DATA_Msk;
pub const FLASH_PECR_FTDW_Pos: u32 = 8;
pub const FLASH_PECR_FTDW_Msk: u32 = 0x1 << FLASH_PECR_FTDW_Pos;
pub const FLASH_PECR_FTDW: u32 = FLASH_PECR_FTDW_Msk;
pub const FLASH_PECR_ERASE_Pos: u32 = 9;
pub const FLASH_PECR_ERASE_Msk: u32 = 0x1 << FLASH_PECR_ERASE_Pos;
pub const FLASH_PECR_ERASE: u32 = FLASH_PECR_ERASE_Msk;
pub const FLASH_PECR_FPRG_Pos: u32 = 10;
pub const FLASH_PECR_FPRG_Msk: u32 = 0x1 << FLASH_PECR_FPRG_Pos;
pub const FLASH_PECR_FPRG: u32 = FLASH_PECR_FPRG_Msk;
pub const FLASH_PECR_PARALLBANK_Pos: u32 = 15;
pub const FLASH_PECR_PARALLBANK_Msk: u32 = 0x1 << FLASH_PECR_PARALLBANK_Pos;
pub const FLASH_PECR_PARALLBANK: u32 = FLASH_PECR_PARALLBANK_Msk;
pub const FLASH_PECR_EOPIE_Pos: u32 = 16;
pub const FLASH_PECR_EOPIE_Msk: u32 = 0x1 << FLASH_PECR_EOPIE_Pos;
pub const FLASH_PECR_EOPIE: u32 = FLASH_PECR_EOPIE_Msk;
pub const FLASH_PECR_ERRIE_Pos: u32 = 17;
pub const FLASH_PECR_ERRIE_Msk: u32 = 0x1 << FLASH_PECR_ERRIE_Pos;
pub const FLASH_PECR_ERRIE: u32 = FLASH_PECR_ERRIE_Msk;
pub const FLASH_PECR_OBL_LAUNCH_Pos: u32 = 18;
pub const FLASH_PECR_OBL_LAUNCH_Msk: u32 = 0x1 << FLASH_PECR_OBL_LAUNCH_Pos;
pub const FLASH_PECR_OBL_LAUNCH: u32 = FLASH_PECR_OBL_LAUNCH_Msk;
pub const FLASH_PDKEYR_PDKEYR_Pos: u32 = 0;
pub const FLASH_PDKEYR_PDKEYR_Msk: u32 = 0xFFFFFFFF << FLASH_PDKEYR_PDKEYR_Pos;
pub const FLASH_PDKEYR_PDKEYR: u32 = FLASH_PDKEYR_PDKEYR_Msk;
pub const FLASH_PEKEYR_PEKEYR_Pos: u32 = 0;
pub const FLASH_PEKEYR_PEKEYR_Msk: u32 = 0xFFFFFFFF << FLASH_PEKEYR_PEKEYR_Pos;
pub const FLASH_PEKEYR_PEKEYR: u32 = FLASH_PEKEYR_PEKEYR_Msk;
pub const FLASH_PRGKEYR_PRGKEYR_Pos: u32 = 0;
pub const FLASH_PRGKEYR_PRGKEYR_Msk: u32 = 0xFFFFFFFF << FLASH_PRGKEYR_PRGKEYR_Pos;
pub const FLASH_PRGKEYR_PRGKEYR: u32 = FLASH_PRGKEYR_PRGKEYR_Msk;
pub const FLASH_OPTKEYR_OPTKEYR_Pos: u32 = 0;
pub const FLASH_OPTKEYR_OPTKEYR_Msk: u32 = 0xFFFFFFFF << FLASH_OPTKEYR_OPTKEYR_Pos;
pub const FLASH_OPTKEYR_OPTKEYR: u32 = FLASH_OPTKEYR_OPTKEYR_Msk;
pub const FLASH_SR_BSY_Pos: u32 = 0;
pub const FLASH_SR_BSY_Msk: u32 = 0x1 << FLASH_SR_BSY_Pos;
pub const FLASH_SR_BSY: u32 = FLASH_SR_BSY_Msk;
pub const FLASH_SR_EOP_Pos: u32 = 1;
pub const FLASH_SR_EOP_Msk: u32 = 0x1 << FLASH_SR_EOP_Pos;
pub const FLASH_SR_EOP: u32 = FLASH_SR_EOP_Msk;
pub const FLASH_SR_ENDHV_Pos: u32 = 2;
pub const FLASH_SR_ENDHV_Msk: u32 = 0x1 << FLASH_SR_ENDHV_Pos;
pub const FLASH_SR_ENDHV: u32 = FLASH_SR_ENDHV_Msk;
pub const FLASH_SR_READY_Pos: u32 = 3;
pub const FLASH_SR_READY_Msk: u32 = 0x1 << FLASH_SR_READY_Pos;
pub const FLASH_SR_READY: u32 = FLASH_SR_READY_Msk;
pub const FLASH_SR_WRPERR_Pos: u32 = 8;
pub const FLASH_SR_WRPERR_Msk: u32 = 0x1 << FLASH_SR_WRPERR_Pos;
pub const FLASH_SR_WRPERR: u32 = FLASH_SR_WRPERR_Msk;
pub const FLASH_SR_PGAERR_Pos: u32 = 9;
pub const FLASH_SR_PGAERR_Msk: u32 = 0x1 << FLASH_SR_PGAERR_Pos;
pub const FLASH_SR_PGAERR: u32 = FLASH_SR_PGAERR_Msk;
pub const FLASH_SR_SIZERR_Pos: u32 = 10;
pub const FLASH_SR_SIZERR_Msk: u32 = 0x1 << FLASH_SR_SIZERR_Pos;
pub const FLASH_SR_SIZERR: u32 = FLASH_SR_SIZERR_Msk;
pub const FLASH_SR_OPTVERR_Pos: u32 = 11;
pub const FLASH_SR_OPTVERR_Msk: u32 = 0x1 << FLASH_SR_OPTVERR_Pos;
pub const FLASH_SR_OPTVERR: u32 = FLASH_SR_OPTVERR_Msk;
pub const FLASH_SR_OPTVERRUSR_Pos: u32 = 12;
pub const FLASH_SR_OPTVERRUSR_Msk: u32 = 0x1 << FLASH_SR_OPTVERRUSR_Pos;
pub const FLASH_SR_OPTVERRUSR: u32 = FLASH_SR_OPTVERRUSR_Msk;
pub const FLASH_OBR_RDPRT_Pos: u32 = 0;
pub const FLASH_OBR_RDPRT_Msk: u32 = 0xFF << FLASH_OBR_RDPRT_Pos;
pub const FLASH_OBR_RDPRT: u32 = FLASH_OBR_RDPRT_Msk;
pub const FLASH_OBR_BOR_LEV_Pos: u32 = 16;
pub const FLASH_OBR_BOR_LEV_Msk: u32 = 0xF << FLASH_OBR_BOR_LEV_Pos;
pub const FLASH_OBR_BOR_LEV: u32 = FLASH_OBR_BOR_LEV_Msk;
pub const FLASH_OBR_USER_Pos: u32 = 20;
pub const FLASH_OBR_USER_Msk: u32 = 0xF << FLASH_OBR_USER_Pos;
pub const FLASH_OBR_USER: u32 = FLASH_OBR_USER_Msk;
pub const FLASH_OBR_IWDG_SW_Pos: u32 = 20;
pub const FLASH_OBR_IWDG_SW_Msk: u32 = 0x1 << FLASH_OBR_IWDG_SW_Pos;
pub const FLASH_OBR_IWDG_SW: u32 = FLASH_OBR_IWDG_SW_Msk;
pub const FLASH_OBR_nRST_STOP_Pos: u32 = 21;
pub const FLASH_OBR_nRST_STOP_Msk: u32 = 0x1 << FLASH_OBR_nRST_STOP_Pos;
pub const FLASH_OBR_nRST_STOP: u32 = FLASH_OBR_nRST_STOP_Msk;
pub const FLASH_OBR_nRST_STDBY_Pos: u32 = 22;
pub const FLASH_OBR_nRST_STDBY_Msk: u32 = 0x1 << FLASH_OBR_nRST_STDBY_Pos;
pub const FLASH_OBR_nRST_STDBY: u32 = FLASH_OBR_nRST_STDBY_Msk;
pub const FLASH_OBR_nRST_BFB2_Pos: u32 = 23;
pub const FLASH_OBR_nRST_BFB2_Msk: u32 = 0x1 << FLASH_OBR_nRST_BFB2_Pos;
pub const FLASH_OBR_nRST_BFB2: u32 = FLASH_OBR_nRST_BFB2_Msk;
pub const FLASH_WRPR1_WRP_Pos: u32 = 0;
pub const FLASH_WRPR1_WRP_Msk: u32 = 0xFFFFFFFF << FLASH_WRPR1_WRP_Pos;
pub const FLASH_WRPR1_WRP: u32 = FLASH_WRPR1_WRP_Msk;
pub const FLASH_WRPR2_WRP_Pos: u32 = 0;
pub const FLASH_WRPR2_WRP_Msk: u32 = 0xFFFF << FLASH_WRPR2_WRP_Pos;
pub const FLASH_WRPR2_WRP: u32 = FLASH_WRPR2_WRP_Msk;
pub const FLASH_WRPR3_WRP_Pos: u32 = 0;
pub const FLASH_WRPR3_WRP_Msk: u32 = 0xFFFFFFFF << FLASH_WRPR3_WRP_Pos;
pub const FLASH_WRPR3_WRP: u32 = FLASH_WRPR3_WRP_Msk;
pub const FLASH_WRPR4_WRP_Pos: u32 = 0;
pub const FLASH_WRPR4_WRP_Msk: u32 = 0xFFFF << FLASH_WRPR4_WRP_Pos;
pub const FLASH_WRPR4_WRP: u32 = FLASH_WRPR4_WRP_Msk;
pub const GPIO_MODER_MODER0_Pos: u32 = 0;
pub const GPIO_MODER_MODER0_Msk: u32 = 0x3 << GPIO_MODER_MODER0_Pos;
pub const GPIO_MODER_MODER0: u32 = GPIO_MODER_MODER0_Msk;
pub const GPIO_MODER_MODER0_0: u32 = 0x1 << GPIO_MODER_MODER0_Pos;
pub const GPIO_MODER_MODER0_1: u32 = 0x2 << GPIO_MODER_MODER0_Pos;
pub const GPIO_MODER_MODER1_Pos: u32 = 2;
pub const GPIO_MODER_MODER1_Msk: u32 = 0x3 << GPIO_MODER_MODER1_Pos;
pub const GPIO_MODER_MODER1: u32 = GPIO_MODER_MODER1_Msk;
pub const GPIO_MODER_MODER1_0: u32 = 0x1 << GPIO_MODER_MODER1_Pos;
pub const GPIO_MODER_MODER1_1: u32 = 0x2 << GPIO_MODER_MODER1_Pos;
pub const GPIO_MODER_MODER2_Pos: u32 = 4;
pub const GPIO_MODER_MODER2_Msk: u32 = 0x3 << GPIO_MODER_MODER2_Pos;
pub const GPIO_MODER_MODER2: u32 = GPIO_MODER_MODER2_Msk;
pub const GPIO_MODER_MODER2_0: u32 = 0x1 << GPIO_MODER_MODER2_Pos;
pub const GPIO_MODER_MODER2_1: u32 = 0x2 << GPIO_MODER_MODER2_Pos;
pub const GPIO_MODER_MODER3_Pos: u32 = 6;
pub const GPIO_MODER_MODER3_Msk: u32 = 0x3 << GPIO_MODER_MODER3_Pos;
pub const GPIO_MODER_MODER3: u32 = GPIO_MODER_MODER3_Msk;
pub const GPIO_MODER_MODER3_0: u32 = 0x1 << GPIO_MODER_MODER3_Pos;
pub const GPIO_MODER_MODER3_1: u32 = 0x2 << GPIO_MODER_MODER3_Pos;
pub const GPIO_MODER_MODER4_Pos: u32 = 8;
pub const GPIO_MODER_MODER4_Msk: u32 = 0x3 << GPIO_MODER_MODER4_Pos;
pub const GPIO_MODER_MODER4: u32 = GPIO_MODER_MODER4_Msk;
pub const GPIO_MODER_MODER4_0: u32 = 0x1 << GPIO_MODER_MODER4_Pos;
pub const GPIO_MODER_MODER4_1: u32 = 0x2 << GPIO_MODER_MODER4_Pos;
pub const GPIO_MODER_MODER5_Pos: u32 = 10;
pub const GPIO_MODER_MODER5_Msk: u32 = 0x3 << GPIO_MODER_MODER5_Pos;
pub const GPIO_MODER_MODER5: u32 = GPIO_MODER_MODER5_Msk;
pub const GPIO_MODER_MODER5_0: u32 = 0x1 << GPIO_MODER_MODER5_Pos;
pub const GPIO_MODER_MODER5_1: u32 = 0x2 << GPIO_MODER_MODER5_Pos;
pub const GPIO_MODER_MODER6_Pos: u32 = 12;
pub const GPIO_MODER_MODER6_Msk: u32 = 0x3 << GPIO_MODER_MODER6_Pos;
pub const GPIO_MODER_MODER6: u32 = GPIO_MODER_MODER6_Msk;
pub const GPIO_MODER_MODER6_0: u32 = 0x1 << GPIO_MODER_MODER6_Pos;
pub const GPIO_MODER_MODER6_1: u32 = 0x2 << GPIO_MODER_MODER6_Pos;
pub const GPIO_MODER_MODER7_Pos: u32 = 14;
pub const GPIO_MODER_MODER7_Msk: u32 = 0x3 << GPIO_MODER_MODER7_Pos;
pub const GPIO_MODER_MODER7: u32 = GPIO_MODER_MODER7_Msk;
pub const GPIO_MODER_MODER7_0: u32 = 0x1 << GPIO_MODER_MODER7_Pos;
pub const GPIO_MODER_MODER7_1: u32 = 0x2 << GPIO_MODER_MODER7_Pos;
pub const GPIO_MODER_MODER8_Pos: u32 = 16;
pub const GPIO_MODER_MODER8_Msk: u32 = 0x3 << GPIO_MODER_MODER8_Pos;
pub const GPIO_MODER_MODER8: u32 = GPIO_MODER_MODER8_Msk;
pub const GPIO_MODER_MODER8_0: u32 = 0x1 << GPIO_MODER_MODER8_Pos;
pub const GPIO_MODER_MODER8_1: u32 = 0x2 << GPIO_MODER_MODER8_Pos;
pub const GPIO_MODER_MODER9_Pos: u32 = 18;
pub const GPIO_MODER_MODER9_Msk: u32 = 0x3 << GPIO_MODER_MODER9_Pos;
pub const GPIO_MODER_MODER9: u32 = GPIO_MODER_MODER9_Msk;
pub const GPIO_MODER_MODER9_0: u32 = 0x1 << GPIO_MODER_MODER9_Pos;
pub const GPIO_MODER_MODER9_1: u32 = 0x2 << GPIO_MODER_MODER9_Pos;
pub const GPIO_MODER_MODER10_Pos: u32 = 20;
pub const GPIO_MODER_MODER10_Msk: u32 = 0x3 << GPIO_MODER_MODER10_Pos;
pub const GPIO_MODER_MODER10: u32 = GPIO_MODER_MODER10_Msk;
pub const GPIO_MODER_MODER10_0: u32 = 0x1 << GPIO_MODER_MODER10_Pos;
pub const GPIO_MODER_MODER10_1: u32 = 0x2 << GPIO_MODER_MODER10_Pos;
pub const GPIO_MODER_MODER11_Pos: u32 = 22;
pub const GPIO_MODER_MODER11_Msk: u32 = 0x3 << GPIO_MODER_MODER11_Pos;
pub const GPIO_MODER_MODER11: u32 = GPIO_MODER_MODER11_Msk;
pub const GPIO_MODER_MODER11_0: u32 = 0x1 << GPIO_MODER_MODER11_Pos;
pub const GPIO_MODER_MODER11_1: u32 = 0x2 << GPIO_MODER_MODER11_Pos;
pub const GPIO_MODER_MODER12_Pos: u32 = 24;
pub const GPIO_MODER_MODER12_Msk: u32 = 0x3 << GPIO_MODER_MODER12_Pos;
pub const GPIO_MODER_MODER12: u32 = GPIO_MODER_MODER12_Msk;
pub const GPIO_MODER_MODER12_0: u32 = 0x1 << GPIO_MODER_MODER12_Pos;
pub const GPIO_MODER_MODER12_1: u32 = 0x2 << GPIO_MODER_MODER12_Pos;
pub const GPIO_MODER_MODER13_Pos: u32 = 26;
pub const GPIO_MODER_MODER13_Msk: u32 = 0x3 << GPIO_MODER_MODER13_Pos;
pub const GPIO_MODER_MODER13: u32 = GPIO_MODER_MODER13_Msk;
pub const GPIO_MODER_MODER13_0: u32 = 0x1 << GPIO_MODER_MODER13_Pos;
pub const GPIO_MODER_MODER13_1: u32 = 0x2 << GPIO_MODER_MODER13_Pos;
pub const GPIO_MODER_MODER14_Pos: u32 = 28;
pub const GPIO_MODER_MODER14_Msk: u32 = 0x3 << GPIO_MODER_MODER14_Pos;
pub const GPIO_MODER_MODER14: u32 = GPIO_MODER_MODER14_Msk;
pub const GPIO_MODER_MODER14_0: u32 = 0x1 << GPIO_MODER_MODER14_Pos;
pub const GPIO_MODER_MODER14_1: u32 = 0x2 << GPIO_MODER_MODER14_Pos;
pub const GPIO_MODER_MODER15_Pos: u32 = 30;
pub const GPIO_MODER_MODER15_Msk: u32 = 0x3 << GPIO_MODER_MODER15_Pos;
pub const GPIO_MODER_MODER15: u32 = GPIO_MODER_MODER15_Msk;
pub const GPIO_MODER_MODER15_0: u32 = 0x1 << GPIO_MODER_MODER15_Pos;
pub const GPIO_MODER_MODER15_1: u32 = 0x2 << GPIO_MODER_MODER15_Pos;
pub const GPIO_OTYPER_OT_0: u32 = 0x00000001;
pub const GPIO_OTYPER_OT_1: u32 = 0x00000002;
pub const GPIO_OTYPER_OT_2: u32 = 0x00000004;
pub const GPIO_OTYPER_OT_3: u32 = 0x00000008;
pub const GPIO_OTYPER_OT_4: u32 = 0x00000010;
pub const GPIO_OTYPER_OT_5: u32 = 0x00000020;
pub const GPIO_OTYPER_OT_6: u32 = 0x00000040;
pub const GPIO_OTYPER_OT_7: u32 = 0x00000080;
pub const GPIO_OTYPER_OT_8: u32 = 0x00000100;
pub const GPIO_OTYPER_OT_9: u32 = 0x00000200;
pub const GPIO_OTYPER_OT_10: u32 = 0x00000400;
pub const GPIO_OTYPER_OT_11: u32 = 0x00000800;
pub const GPIO_OTYPER_OT_12: u32 = 0x00001000;
pub const GPIO_OTYPER_OT_13: u32 = 0x00002000;
pub const GPIO_OTYPER_OT_14: u32 = 0x00004000;
pub const GPIO_OTYPER_OT_15: u32 = 0x00008000;
pub const GPIO_OSPEEDER_OSPEEDR0_Pos: u32 = 0;
pub const GPIO_OSPEEDER_OSPEEDR0_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEEDR0_Pos;
pub const GPIO_OSPEEDER_OSPEEDR0: u32 = GPIO_OSPEEDER_OSPEEDR0_Msk;
pub const GPIO_OSPEEDER_OSPEEDR0_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEEDR0_Pos;
pub const GPIO_OSPEEDER_OSPEEDR0_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEEDR0_Pos;
pub const GPIO_OSPEEDER_OSPEEDR1_Pos: u32 = 2;
pub const GPIO_OSPEEDER_OSPEEDR1_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEEDR1_Pos;
pub const GPIO_OSPEEDER_OSPEEDR1: u32 = GPIO_OSPEEDER_OSPEEDR1_Msk;
pub const GPIO_OSPEEDER_OSPEEDR1_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEEDR1_Pos;
pub const GPIO_OSPEEDER_OSPEEDR1_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEEDR1_Pos;
pub const GPIO_OSPEEDER_OSPEEDR2_Pos: u32 = 4;
pub const GPIO_OSPEEDER_OSPEEDR2_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEEDR2_Pos;
pub const GPIO_OSPEEDER_OSPEEDR2: u32 = GPIO_OSPEEDER_OSPEEDR2_Msk;
pub const GPIO_OSPEEDER_OSPEEDR2_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEEDR2_Pos;
pub const GPIO_OSPEEDER_OSPEEDR2_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEEDR2_Pos;
pub const GPIO_OSPEEDER_OSPEEDR3_Pos: u32 = 6;
pub const GPIO_OSPEEDER_OSPEEDR3_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEEDR3_Pos;
pub const GPIO_OSPEEDER_OSPEEDR3: u32 = GPIO_OSPEEDER_OSPEEDR3_Msk;
pub const GPIO_OSPEEDER_OSPEEDR3_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEEDR3_Pos;
pub const GPIO_OSPEEDER_OSPEEDR3_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEEDR3_Pos;
pub const GPIO_OSPEEDER_OSPEEDR4_Pos: u32 = 8;
pub const GPIO_OSPEEDER_OSPEEDR4_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEEDR4_Pos;
pub const GPIO_OSPEEDER_OSPEEDR4: u32 = GPIO_OSPEEDER_OSPEEDR4_Msk;
pub const GPIO_OSPEEDER_OSPEEDR4_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEEDR4_Pos;
pub const GPIO_OSPEEDER_OSPEEDR4_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEEDR4_Pos;
pub const GPIO_OSPEEDER_OSPEEDR5_Pos: u32 = 10;
pub const GPIO_OSPEEDER_OSPEEDR5_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEEDR5_Pos;
pub const GPIO_OSPEEDER_OSPEEDR5: u32 = GPIO_OSPEEDER_OSPEEDR5_Msk;
pub const GPIO_OSPEEDER_OSPEEDR5_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEEDR5_Pos;
pub const GPIO_OSPEEDER_OSPEEDR5_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEEDR5_Pos;
pub const GPIO_OSPEEDER_OSPEEDR6_Pos: u32 = 12;
pub const GPIO_OSPEEDER_OSPEEDR6_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEEDR6_Pos;
pub const GPIO_OSPEEDER_OSPEEDR6: u32 = GPIO_OSPEEDER_OSPEEDR6_Msk;
pub const GPIO_OSPEEDER_OSPEEDR6_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEEDR6_Pos;
pub const GPIO_OSPEEDER_OSPEEDR6_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEEDR6_Pos;
pub const GPIO_OSPEEDER_OSPEEDR7_Pos: u32 = 14;
pub const GPIO_OSPEEDER_OSPEEDR7_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEEDR7_Pos;
pub const GPIO_OSPEEDER_OSPEEDR7: u32 = GPIO_OSPEEDER_OSPEEDR7_Msk;
pub const GPIO_OSPEEDER_OSPEEDR7_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEEDR7_Pos;
pub const GPIO_OSPEEDER_OSPEEDR7_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEEDR7_Pos;
pub const GPIO_OSPEEDER_OSPEEDR8_Pos: u32 = 16;
pub const GPIO_OSPEEDER_OSPEEDR8_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEEDR8_Pos;
pub const GPIO_OSPEEDER_OSPEEDR8: u32 = GPIO_OSPEEDER_OSPEEDR8_Msk;
pub const GPIO_OSPEEDER_OSPEEDR8_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEEDR8_Pos;
pub const GPIO_OSPEEDER_OSPEEDR8_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEEDR8_Pos;
pub const GPIO_OSPEEDER_OSPEEDR9_Pos: u32 = 18;
pub const GPIO_OSPEEDER_OSPEEDR9_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEEDR9_Pos;
pub const GPIO_OSPEEDER_OSPEEDR9: u32 = GPIO_OSPEEDER_OSPEEDR9_Msk;
pub const GPIO_OSPEEDER_OSPEEDR9_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEEDR9_Pos;
pub const GPIO_OSPEEDER_OSPEEDR9_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEEDR9_Pos;
pub const GPIO_OSPEEDER_OSPEEDR10_Pos: u32 = 20;
pub const GPIO_OSPEEDER_OSPEEDR10_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEEDR10_Pos;
pub const GPIO_OSPEEDER_OSPEEDR10: u32 = GPIO_OSPEEDER_OSPEEDR10_Msk;
pub const GPIO_OSPEEDER_OSPEEDR10_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEEDR10_Pos;
pub const GPIO_OSPEEDER_OSPEEDR10_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEEDR10_Pos;
pub const GPIO_OSPEEDER_OSPEEDR11_Pos: u32 = 22;
pub const GPIO_OSPEEDER_OSPEEDR11_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEEDR11_Pos;
pub const GPIO_OSPEEDER_OSPEEDR11: u32 = GPIO_OSPEEDER_OSPEEDR11_Msk;
pub const GPIO_OSPEEDER_OSPEEDR11_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEEDR11_Pos;
pub const GPIO_OSPEEDER_OSPEEDR11_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEEDR11_Pos;
pub const GPIO_OSPEEDER_OSPEEDR12_Pos: u32 = 24;
pub const GPIO_OSPEEDER_OSPEEDR12_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEEDR12_Pos;
pub const GPIO_OSPEEDER_OSPEEDR12: u32 = GPIO_OSPEEDER_OSPEEDR12_Msk;
pub const GPIO_OSPEEDER_OSPEEDR12_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEEDR12_Pos;
pub const GPIO_OSPEEDER_OSPEEDR12_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEEDR12_Pos;
pub const GPIO_OSPEEDER_OSPEEDR13_Pos: u32 = 26;
pub const GPIO_OSPEEDER_OSPEEDR13_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEEDR13_Pos;
pub const GPIO_OSPEEDER_OSPEEDR13: u32 = GPIO_OSPEEDER_OSPEEDR13_Msk;
pub const GPIO_OSPEEDER_OSPEEDR13_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEEDR13_Pos;
pub const GPIO_OSPEEDER_OSPEEDR13_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEEDR13_Pos;
pub const GPIO_OSPEEDER_OSPEEDR14_Pos: u32 = 28;
pub const GPIO_OSPEEDER_OSPEEDR14_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEEDR14_Pos;
pub const GPIO_OSPEEDER_OSPEEDR14: u32 = GPIO_OSPEEDER_OSPEEDR14_Msk;
pub const GPIO_OSPEEDER_OSPEEDR14_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEEDR14_Pos;
pub const GPIO_OSPEEDER_OSPEEDR14_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEEDR14_Pos;
pub const GPIO_OSPEEDER_OSPEEDR15_Pos: u32 = 30;
pub const GPIO_OSPEEDER_OSPEEDR15_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEEDR15_Pos;
pub const GPIO_OSPEEDER_OSPEEDR15: u32 = GPIO_OSPEEDER_OSPEEDR15_Msk;
pub const GPIO_OSPEEDER_OSPEEDR15_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEEDR15_Pos;
pub const GPIO_OSPEEDER_OSPEEDR15_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEEDR15_Pos;
pub const GPIO_PUPDR_PUPDR0_Pos: u32 = 0;
pub const GPIO_PUPDR_PUPDR0_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR0_Pos;
pub const GPIO_PUPDR_PUPDR0: u32 = GPIO_PUPDR_PUPDR0_Msk;
pub const GPIO_PUPDR_PUPDR0_0: u32 = 0x1 << GPIO_PUPDR_PUPDR0_Pos;
pub const GPIO_PUPDR_PUPDR0_1: u32 = 0x2 << GPIO_PUPDR_PUPDR0_Pos;
pub const GPIO_PUPDR_PUPDR1_Pos: u32 = 2;
pub const GPIO_PUPDR_PUPDR1_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR1_Pos;
pub const GPIO_PUPDR_PUPDR1: u32 = GPIO_PUPDR_PUPDR1_Msk;
pub const GPIO_PUPDR_PUPDR1_0: u32 = 0x1 << GPIO_PUPDR_PUPDR1_Pos;
pub const GPIO_PUPDR_PUPDR1_1: u32 = 0x2 << GPIO_PUPDR_PUPDR1_Pos;
pub const GPIO_PUPDR_PUPDR2_Pos: u32 = 4;
pub const GPIO_PUPDR_PUPDR2_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR2_Pos;
pub const GPIO_PUPDR_PUPDR2: u32 = GPIO_PUPDR_PUPDR2_Msk;
pub const GPIO_PUPDR_PUPDR2_0: u32 = 0x1 << GPIO_PUPDR_PUPDR2_Pos;
pub const GPIO_PUPDR_PUPDR2_1: u32 = 0x2 << GPIO_PUPDR_PUPDR2_Pos;
pub const GPIO_PUPDR_PUPDR3_Pos: u32 = 6;
pub const GPIO_PUPDR_PUPDR3_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR3_Pos;
pub const GPIO_PUPDR_PUPDR3: u32 = GPIO_PUPDR_PUPDR3_Msk;
pub const GPIO_PUPDR_PUPDR3_0: u32 = 0x1 << GPIO_PUPDR_PUPDR3_Pos;
pub const GPIO_PUPDR_PUPDR3_1: u32 = 0x2 << GPIO_PUPDR_PUPDR3_Pos;
pub const GPIO_PUPDR_PUPDR4_Pos: u32 = 8;
pub const GPIO_PUPDR_PUPDR4_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR4_Pos;
pub const GPIO_PUPDR_PUPDR4: u32 = GPIO_PUPDR_PUPDR4_Msk;
pub const GPIO_PUPDR_PUPDR4_0: u32 = 0x1 << GPIO_PUPDR_PUPDR4_Pos;
pub const GPIO_PUPDR_PUPDR4_1: u32 = 0x2 << GPIO_PUPDR_PUPDR4_Pos;
pub const GPIO_PUPDR_PUPDR5_Pos: u32 = 10;
pub const GPIO_PUPDR_PUPDR5_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR5_Pos;
pub const GPIO_PUPDR_PUPDR5: u32 = GPIO_PUPDR_PUPDR5_Msk;
pub const GPIO_PUPDR_PUPDR5_0: u32 = 0x1 << GPIO_PUPDR_PUPDR5_Pos;
pub const GPIO_PUPDR_PUPDR5_1: u32 = 0x2 << GPIO_PUPDR_PUPDR5_Pos;
pub const GPIO_PUPDR_PUPDR6_Pos: u32 = 12;
pub const GPIO_PUPDR_PUPDR6_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR6_Pos;
pub const GPIO_PUPDR_PUPDR6: u32 = GPIO_PUPDR_PUPDR6_Msk;
pub const GPIO_PUPDR_PUPDR6_0: u32 = 0x1 << GPIO_PUPDR_PUPDR6_Pos;
pub const GPIO_PUPDR_PUPDR6_1: u32 = 0x2 << GPIO_PUPDR_PUPDR6_Pos;
pub const GPIO_PUPDR_PUPDR7_Pos: u32 = 14;
pub const GPIO_PUPDR_PUPDR7_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR7_Pos;
pub const GPIO_PUPDR_PUPDR7: u32 = GPIO_PUPDR_PUPDR7_Msk;
pub const GPIO_PUPDR_PUPDR7_0: u32 = 0x1 << GPIO_PUPDR_PUPDR7_Pos;
pub const GPIO_PUPDR_PUPDR7_1: u32 = 0x2 << GPIO_PUPDR_PUPDR7_Pos;
pub const GPIO_PUPDR_PUPDR8_Pos: u32 = 16;
pub const GPIO_PUPDR_PUPDR8_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR8_Pos;
pub const GPIO_PUPDR_PUPDR8: u32 = GPIO_PUPDR_PUPDR8_Msk;
pub const GPIO_PUPDR_PUPDR8_0: u32 = 0x1 << GPIO_PUPDR_PUPDR8_Pos;
pub const GPIO_PUPDR_PUPDR8_1: u32 = 0x2 << GPIO_PUPDR_PUPDR8_Pos;
pub const GPIO_PUPDR_PUPDR9_Pos: u32 = 18;
pub const GPIO_PUPDR_PUPDR9_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR9_Pos;
pub const GPIO_PUPDR_PUPDR9: u32 = GPIO_PUPDR_PUPDR9_Msk;
pub const GPIO_PUPDR_PUPDR9_0: u32 = 0x1 << GPIO_PUPDR_PUPDR9_Pos;
pub const GPIO_PUPDR_PUPDR9_1: u32 = 0x2 << GPIO_PUPDR_PUPDR9_Pos;
pub const GPIO_PUPDR_PUPDR10_Pos: u32 = 20;
pub const GPIO_PUPDR_PUPDR10_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR10_Pos;
pub const GPIO_PUPDR_PUPDR10: u32 = GPIO_PUPDR_PUPDR10_Msk;
pub const GPIO_PUPDR_PUPDR10_0: u32 = 0x1 << GPIO_PUPDR_PUPDR10_Pos;
pub const GPIO_PUPDR_PUPDR10_1: u32 = 0x2 << GPIO_PUPDR_PUPDR10_Pos;
pub const GPIO_PUPDR_PUPDR11_Pos: u32 = 22;
pub const GPIO_PUPDR_PUPDR11_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR11_Pos;
pub const GPIO_PUPDR_PUPDR11: u32 = GPIO_PUPDR_PUPDR11_Msk;
pub const GPIO_PUPDR_PUPDR11_0: u32 = 0x1 << GPIO_PUPDR_PUPDR11_Pos;
pub const GPIO_PUPDR_PUPDR11_1: u32 = 0x2 << GPIO_PUPDR_PUPDR11_Pos;
pub const GPIO_PUPDR_PUPDR12_Pos: u32 = 24;
pub const GPIO_PUPDR_PUPDR12_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR12_Pos;
pub const GPIO_PUPDR_PUPDR12: u32 = GPIO_PUPDR_PUPDR12_Msk;
pub const GPIO_PUPDR_PUPDR12_0: u32 = 0x1 << GPIO_PUPDR_PUPDR12_Pos;
pub const GPIO_PUPDR_PUPDR12_1: u32 = 0x2 << GPIO_PUPDR_PUPDR12_Pos;
pub const GPIO_PUPDR_PUPDR13_Pos: u32 = 26;
pub const GPIO_PUPDR_PUPDR13_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR13_Pos;
pub const GPIO_PUPDR_PUPDR13: u32 = GPIO_PUPDR_PUPDR13_Msk;
pub const GPIO_PUPDR_PUPDR13_0: u32 = 0x1 << GPIO_PUPDR_PUPDR13_Pos;
pub const GPIO_PUPDR_PUPDR13_1: u32 = 0x2 << GPIO_PUPDR_PUPDR13_Pos;
pub const GPIO_PUPDR_PUPDR14_Pos: u32 = 28;
pub const GPIO_PUPDR_PUPDR14_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR14_Pos;
pub const GPIO_PUPDR_PUPDR14: u32 = GPIO_PUPDR_PUPDR14_Msk;
pub const GPIO_PUPDR_PUPDR14_0: u32 = 0x1 << GPIO_PUPDR_PUPDR14_Pos;
pub const GPIO_PUPDR_PUPDR14_1: u32 = 0x2 << GPIO_PUPDR_PUPDR14_Pos;
pub const GPIO_PUPDR_PUPDR15_Pos: u32 = 30;
pub const GPIO_PUPDR_PUPDR15_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR15_Pos;
pub const GPIO_PUPDR_PUPDR15: u32 = GPIO_PUPDR_PUPDR15_Msk;
pub const GPIO_PUPDR_PUPDR15_0: u32 = 0x1 << GPIO_PUPDR_PUPDR15_Pos;
pub const GPIO_PUPDR_PUPDR15_1: u32 = 0x2 << GPIO_PUPDR_PUPDR15_Pos;
pub const GPIO_IDR_IDR_0: u32 = 0x00000001;
pub const GPIO_IDR_IDR_1: u32 = 0x00000002;
pub const GPIO_IDR_IDR_2: u32 = 0x00000004;
pub const GPIO_IDR_IDR_3: u32 = 0x00000008;
pub const GPIO_IDR_IDR_4: u32 = 0x00000010;
pub const GPIO_IDR_IDR_5: u32 = 0x00000020;
pub const GPIO_IDR_IDR_6: u32 = 0x00000040;
pub const GPIO_IDR_IDR_7: u32 = 0x00000080;
pub const GPIO_IDR_IDR_8: u32 = 0x00000100;
pub const GPIO_IDR_IDR_9: u32 = 0x00000200;
pub const GPIO_IDR_IDR_10: u32 = 0x00000400;
pub const GPIO_IDR_IDR_11: u32 = 0x00000800;
pub const GPIO_IDR_IDR_12: u32 = 0x00001000;
pub const GPIO_IDR_IDR_13: u32 = 0x00002000;
pub const GPIO_IDR_IDR_14: u32 = 0x00004000;
pub const GPIO_IDR_IDR_15: u32 = 0x00008000;
pub const GPIO_ODR_ODR_0: u32 = 0x00000001;
pub const GPIO_ODR_ODR_1: u32 = 0x00000002;
pub const GPIO_ODR_ODR_2: u32 = 0x00000004;
pub const GPIO_ODR_ODR_3: u32 = 0x00000008;
pub const GPIO_ODR_ODR_4: u32 = 0x00000010;
pub const GPIO_ODR_ODR_5: u32 = 0x00000020;
pub const GPIO_ODR_ODR_6: u32 = 0x00000040;
pub const GPIO_ODR_ODR_7: u32 = 0x00000080;
pub const GPIO_ODR_ODR_8: u32 = 0x00000100;
pub const GPIO_ODR_ODR_9: u32 = 0x00000200;
pub const GPIO_ODR_ODR_10: u32 = 0x00000400;
pub const GPIO_ODR_ODR_11: u32 = 0x00000800;
pub const GPIO_ODR_ODR_12: u32 = 0x00001000;
pub const GPIO_ODR_ODR_13: u32 = 0x00002000;
pub const GPIO_ODR_ODR_14: u32 = 0x00004000;
pub const GPIO_ODR_ODR_15: u32 = 0x00008000;
pub const GPIO_BSRR_BS_0: u32 = 0x00000001;
pub const GPIO_BSRR_BS_1: u32 = 0x00000002;
pub const GPIO_BSRR_BS_2: u32 = 0x00000004;
pub const GPIO_BSRR_BS_3: u32 = 0x00000008;
pub const GPIO_BSRR_BS_4: u32 = 0x00000010;
pub const GPIO_BSRR_BS_5: u32 = 0x00000020;
pub const GPIO_BSRR_BS_6: u32 = 0x00000040;
pub const GPIO_BSRR_BS_7: u32 = 0x00000080;
pub const GPIO_BSRR_BS_8: u32 = 0x00000100;
pub const GPIO_BSRR_BS_9: u32 = 0x00000200;
pub const GPIO_BSRR_BS_10: u32 = 0x00000400;
pub const GPIO_BSRR_BS_11: u32 = 0x00000800;
pub const GPIO_BSRR_BS_12: u32 = 0x00001000;
pub const GPIO_BSRR_BS_13: u32 = 0x00002000;
pub const GPIO_BSRR_BS_14: u32 = 0x00004000;
pub const GPIO_BSRR_BS_15: u32 = 0x00008000;
pub const GPIO_BSRR_BR_0: u32 = 0x00010000;
pub const GPIO_BSRR_BR_1: u32 = 0x00020000;
pub const GPIO_BSRR_BR_2: u32 = 0x00040000;
pub const GPIO_BSRR_BR_3: u32 = 0x00080000;
pub const GPIO_BSRR_BR_4: u32 = 0x00100000;
pub const GPIO_BSRR_BR_5: u32 = 0x00200000;
pub const GPIO_BSRR_BR_6: u32 = 0x00400000;
pub const GPIO_BSRR_BR_7: u32 = 0x00800000;
pub const GPIO_BSRR_BR_8: u32 = 0x01000000;
pub const GPIO_BSRR_BR_9: u32 = 0x02000000;
pub const GPIO_BSRR_BR_10: u32 = 0x04000000;
pub const GPIO_BSRR_BR_11: u32 = 0x08000000;
pub const GPIO_BSRR_BR_12: u32 = 0x10000000;
pub const GPIO_BSRR_BR_13: u32 = 0x20000000;
pub const GPIO_BSRR_BR_14: u32 = 0x40000000;
pub const GPIO_BSRR_BR_15: u32 = 0x80000000;
pub const GPIO_LCKR_LCK0_Pos: u32 = 0;
pub const GPIO_LCKR_LCK0_Msk: u32 = 0x1 << GPIO_LCKR_LCK0_Pos;
pub const GPIO_LCKR_LCK0: u32 = GPIO_LCKR_LCK0_Msk;
pub const GPIO_LCKR_LCK1_Pos: u32 = 1;
pub const GPIO_LCKR_LCK1_Msk: u32 = 0x1 << GPIO_LCKR_LCK1_Pos;
pub const GPIO_LCKR_LCK1: u32 = GPIO_LCKR_LCK1_Msk;
pub const GPIO_LCKR_LCK2_Pos: u32 = 2;
pub const GPIO_LCKR_LCK2_Msk: u32 = 0x1 << GPIO_LCKR_LCK2_Pos;
pub const GPIO_LCKR_LCK2: u32 = GPIO_LCKR_LCK2_Msk;
pub const GPIO_LCKR_LCK3_Pos: u32 = 3;
pub const GPIO_LCKR_LCK3_Msk: u32 = 0x1 << GPIO_LCKR_LCK3_Pos;
pub const GPIO_LCKR_LCK3: u32 = GPIO_LCKR_LCK3_Msk;
pub const GPIO_LCKR_LCK4_Pos: u32 = 4;
pub const GPIO_LCKR_LCK4_Msk: u32 = 0x1 << GPIO_LCKR_LCK4_Pos;
pub const GPIO_LCKR_LCK4: u32 = GPIO_LCKR_LCK4_Msk;
pub const GPIO_LCKR_LCK5_Pos: u32 = 5;
pub const GPIO_LCKR_LCK5_Msk: u32 = 0x1 << GPIO_LCKR_LCK5_Pos;
pub const GPIO_LCKR_LCK5: u32 = GPIO_LCKR_LCK5_Msk;
pub const GPIO_LCKR_LCK6_Pos: u32 = 6;
pub const GPIO_LCKR_LCK6_Msk: u32 = 0x1 << GPIO_LCKR_LCK6_Pos;
pub const GPIO_LCKR_LCK6: u32 = GPIO_LCKR_LCK6_Msk;
pub const GPIO_LCKR_LCK7_Pos: u32 = 7;
pub const GPIO_LCKR_LCK7_Msk: u32 = 0x1 << GPIO_LCKR_LCK7_Pos;
pub const GPIO_LCKR_LCK7: u32 = GPIO_LCKR_LCK7_Msk;
pub const GPIO_LCKR_LCK8_Pos: u32 = 8;
pub const GPIO_LCKR_LCK8_Msk: u32 = 0x1 << GPIO_LCKR_LCK8_Pos;
pub const GPIO_LCKR_LCK8: u32 = GPIO_LCKR_LCK8_Msk;
pub const GPIO_LCKR_LCK9_Pos: u32 = 9;
pub const GPIO_LCKR_LCK9_Msk: u32 = 0x1 << GPIO_LCKR_LCK9_Pos;
pub const GPIO_LCKR_LCK9: u32 = GPIO_LCKR_LCK9_Msk;
pub const GPIO_LCKR_LCK10_Pos: u32 = 10;
pub const GPIO_LCKR_LCK10_Msk: u32 = 0x1 << GPIO_LCKR_LCK10_Pos;
pub const GPIO_LCKR_LCK10: u32 = GPIO_LCKR_LCK10_Msk;
pub const GPIO_LCKR_LCK11_Pos: u32 = 11;
pub const GPIO_LCKR_LCK11_Msk: u32 = 0x1 << GPIO_LCKR_LCK11_Pos;
pub const GPIO_LCKR_LCK11: u32 = GPIO_LCKR_LCK11_Msk;
pub const GPIO_LCKR_LCK12_Pos: u32 = 12;
pub const GPIO_LCKR_LCK12_Msk: u32 = 0x1 << GPIO_LCKR_LCK12_Pos;
pub const GPIO_LCKR_LCK12: u32 = GPIO_LCKR_LCK12_Msk;
pub const GPIO_LCKR_LCK13_Pos: u32 = 13;
pub const GPIO_LCKR_LCK13_Msk: u32 = 0x1 << GPIO_LCKR_LCK13_Pos;
pub const GPIO_LCKR_LCK13: u32 = GPIO_LCKR_LCK13_Msk;
pub const GPIO_LCKR_LCK14_Pos: u32 = 14;
pub const GPIO_LCKR_LCK14_Msk: u32 = 0x1 << GPIO_LCKR_LCK14_Pos;
pub const GPIO_LCKR_LCK14: u32 = GPIO_LCKR_LCK14_Msk;
pub const GPIO_LCKR_LCK15_Pos: u32 = 15;
pub const GPIO_LCKR_LCK15_Msk: u32 = 0x1 << GPIO_LCKR_LCK15_Pos;
pub const GPIO_LCKR_LCK15: u32 = GPIO_LCKR_LCK15_Msk;
pub const GPIO_LCKR_LCKK_Pos: u32 = 16;
pub const GPIO_LCKR_LCKK_Msk: u32 = 0x1 << GPIO_LCKR_LCKK_Pos;
pub const GPIO_LCKR_LCKK: u32 = GPIO_LCKR_LCKK_Msk;
pub const GPIO_AFRL_AFSEL0_Pos: u32 = 0;
pub const GPIO_AFRL_AFSEL0_Msk: u32 = 0xF << GPIO_AFRL_AFSEL0_Pos;
pub const GPIO_AFRL_AFSEL0: u32 = GPIO_AFRL_AFSEL0_Msk;
pub const GPIO_AFRL_AFSEL1_Pos: u32 = 4;
pub const GPIO_AFRL_AFSEL1_Msk: u32 = 0xF << GPIO_AFRL_AFSEL1_Pos;
pub const GPIO_AFRL_AFSEL1: u32 = GPIO_AFRL_AFSEL1_Msk;
pub const GPIO_AFRL_AFSEL2_Pos: u32 = 8;
pub const GPIO_AFRL_AFSEL2_Msk: u32 = 0xF << GPIO_AFRL_AFSEL2_Pos;
pub const GPIO_AFRL_AFSEL2: u32 = GPIO_AFRL_AFSEL2_Msk;
pub const GPIO_AFRL_AFSEL3_Pos: u32 = 12;
pub const GPIO_AFRL_AFSEL3_Msk: u32 = 0xF << GPIO_AFRL_AFSEL3_Pos;
pub const GPIO_AFRL_AFSEL3: u32 = GPIO_AFRL_AFSEL3_Msk;
pub const GPIO_AFRL_AFSEL4_Pos: u32 = 16;
pub const GPIO_AFRL_AFSEL4_Msk: u32 = 0xF << GPIO_AFRL_AFSEL4_Pos;
pub const GPIO_AFRL_AFSEL4: u32 = GPIO_AFRL_AFSEL4_Msk;
pub const GPIO_AFRL_AFSEL5_Pos: u32 = 20;
pub const GPIO_AFRL_AFSEL5_Msk: u32 = 0xF << GPIO_AFRL_AFSEL5_Pos;
pub const GPIO_AFRL_AFSEL5: u32 = GPIO_AFRL_AFSEL5_Msk;
pub const GPIO_AFRL_AFSEL6_Pos: u32 = 24;
pub const GPIO_AFRL_AFSEL6_Msk: u32 = 0xF << GPIO_AFRL_AFSEL6_Pos;
pub const GPIO_AFRL_AFSEL6: u32 = GPIO_AFRL_AFSEL6_Msk;
pub const GPIO_AFRL_AFSEL7_Pos: u32 = 28;
pub const GPIO_AFRL_AFSEL7_Msk: u32 = 0xF << GPIO_AFRL_AFSEL7_Pos;
pub const GPIO_AFRL_AFSEL7: u32 = GPIO_AFRL_AFSEL7_Msk;
pub const GPIO_AFRH_AFSEL8_Pos: u32 = 0;
pub const GPIO_AFRH_AFSEL8_Msk: u32 = 0xF << GPIO_AFRH_AFSEL8_Pos;
pub const GPIO_AFRH_AFSEL8: u32 = GPIO_AFRH_AFSEL8_Msk;
pub const GPIO_AFRH_AFSEL9_Pos: u32 = 4;
pub const GPIO_AFRH_AFSEL9_Msk: u32 = 0xF << GPIO_AFRH_AFSEL9_Pos;
pub const GPIO_AFRH_AFSEL9: u32 = GPIO_AFRH_AFSEL9_Msk;
pub const GPIO_AFRH_AFSEL10_Pos: u32 = 8;
pub const GPIO_AFRH_AFSEL10_Msk: u32 = 0xF << GPIO_AFRH_AFSEL10_Pos;
pub const GPIO_AFRH_AFSEL10: u32 = GPIO_AFRH_AFSEL10_Msk;
pub const GPIO_AFRH_AFSEL11_Pos: u32 = 12;
pub const GPIO_AFRH_AFSEL11_Msk: u32 = 0xF << GPIO_AFRH_AFSEL11_Pos;
pub const GPIO_AFRH_AFSEL11: u32 = GPIO_AFRH_AFSEL11_Msk;
pub const GPIO_AFRH_AFSEL12_Pos: u32 = 16;
pub const GPIO_AFRH_AFSEL12_Msk: u32 = 0xF << GPIO_AFRH_AFSEL12_Pos;
pub const GPIO_AFRH_AFSEL12: u32 = GPIO_AFRH_AFSEL12_Msk;
pub const GPIO_AFRH_AFSEL13_Pos: u32 = 20;
pub const GPIO_AFRH_AFSEL13_Msk: u32 = 0xF << GPIO_AFRH_AFSEL13_Pos;
pub const GPIO_AFRH_AFSEL13: u32 = GPIO_AFRH_AFSEL13_Msk;
pub const GPIO_AFRH_AFSEL14_Pos: u32 = 24;
pub const GPIO_AFRH_AFSEL14_Msk: u32 = 0xF << GPIO_AFRH_AFSEL14_Pos;
pub const GPIO_AFRH_AFSEL14: u32 = GPIO_AFRH_AFSEL14_Msk;
pub const GPIO_AFRH_AFSEL15_Pos: u32 = 28;
pub const GPIO_AFRH_AFSEL15_Msk: u32 = 0xF << GPIO_AFRH_AFSEL15_Pos;
pub const GPIO_AFRH_AFSEL15: u32 = GPIO_AFRH_AFSEL15_Msk;
pub const GPIO_BRR_BR_0: u32 = 0x00000001;
pub const GPIO_BRR_BR_1: u32 = 0x00000002;
pub const GPIO_BRR_BR_2: u32 = 0x00000004;
pub const GPIO_BRR_BR_3: u32 = 0x00000008;
pub const GPIO_BRR_BR_4: u32 = 0x00000010;
pub const GPIO_BRR_BR_5: u32 = 0x00000020;
pub const GPIO_BRR_BR_6: u32 = 0x00000040;
pub const GPIO_BRR_BR_7: u32 = 0x00000080;
pub const GPIO_BRR_BR_8: u32 = 0x00000100;
pub const GPIO_BRR_BR_9: u32 = 0x00000200;
pub const GPIO_BRR_BR_10: u32 = 0x00000400;
pub const GPIO_BRR_BR_11: u32 = 0x00000800;
pub const GPIO_BRR_BR_12: u32 = 0x00001000;
pub const GPIO_BRR_BR_13: u32 = 0x00002000;
pub const GPIO_BRR_BR_14: u32 = 0x00004000;
pub const GPIO_BRR_BR_15: u32 = 0x00008000;
pub const I2C_CR1_PE_Pos: u32 = 0;
pub const I2C_CR1_PE_Msk: u32 = 0x1 << I2C_CR1_PE_Pos;
pub const I2C_CR1_PE: u32 = I2C_CR1_PE_Msk;
pub const I2C_CR1_SMBUS_Pos: u32 = 1;
pub const I2C_CR1_SMBUS_Msk: u32 = 0x1 << I2C_CR1_SMBUS_Pos;
pub const I2C_CR1_SMBUS: u32 = I2C_CR1_SMBUS_Msk;
pub const I2C_CR1_SMBTYPE_Pos: u32 = 3;
pub const I2C_CR1_SMBTYPE_Msk: u32 = 0x1 << I2C_CR1_SMBTYPE_Pos;
pub const I2C_CR1_SMBTYPE: u32 = I2C_CR1_SMBTYPE_Msk;
pub const I2C_CR1_ENARP_Pos: u32 = 4;
pub const I2C_CR1_ENARP_Msk: u32 = 0x1 << I2C_CR1_ENARP_Pos;
pub const I2C_CR1_ENARP: u32 = I2C_CR1_ENARP_Msk;
pub const I2C_CR1_ENPEC_Pos: u32 = 5;
pub const I2C_CR1_ENPEC_Msk: u32 = 0x1 << I2C_CR1_ENPEC_Pos;
pub const I2C_CR1_ENPEC: u32 = I2C_CR1_ENPEC_Msk;
pub const I2C_CR1_ENGC_Pos: u32 = 6;
pub const I2C_CR1_ENGC_Msk: u32 = 0x1 << I2C_CR1_ENGC_Pos;
pub const I2C_CR1_ENGC: u32 = I2C_CR1_ENGC_Msk;
pub const I2C_CR1_NOSTRETCH_Pos: u32 = 7;
pub const I2C_CR1_NOSTRETCH_Msk: u32 = 0x1 << I2C_CR1_NOSTRETCH_Pos;
pub const I2C_CR1_NOSTRETCH: u32 = I2C_CR1_NOSTRETCH_Msk;
pub const I2C_CR1_START_Pos: u32 = 8;
pub const I2C_CR1_START_Msk: u32 = 0x1 << I2C_CR1_START_Pos;
pub const I2C_CR1_START: u32 = I2C_CR1_START_Msk;
pub const I2C_CR1_STOP_Pos: u32 = 9;
pub const I2C_CR1_STOP_Msk: u32 = 0x1 << I2C_CR1_STOP_Pos;
pub const I2C_CR1_STOP: u32 = I2C_CR1_STOP_Msk;
pub const I2C_CR1_ACK_Pos: u32 = 10;
pub const I2C_CR1_ACK_Msk: u32 = 0x1 << I2C_CR1_ACK_Pos;
pub const I2C_CR1_ACK: u32 = I2C_CR1_ACK_Msk;
pub const I2C_CR1_POS_Pos: u32 = 11;
pub const I2C_CR1_POS_Msk: u32 = 0x1 << I2C_CR1_POS_Pos;
pub const I2C_CR1_POS: u32 = I2C_CR1_POS_Msk;
pub const I2C_CR1_PEC_Pos: u32 = 12;
pub const I2C_CR1_PEC_Msk: u32 = 0x1 << I2C_CR1_PEC_Pos;
pub const I2C_CR1_PEC: u32 = I2C_CR1_PEC_Msk;
pub const I2C_CR1_ALERT_Pos: u32 = 13;
pub const I2C_CR1_ALERT_Msk: u32 = 0x1 << I2C_CR1_ALERT_Pos;
pub const I2C_CR1_ALERT: u32 = I2C_CR1_ALERT_Msk;
pub const I2C_CR1_SWRST_Pos: u32 = 15;
pub const I2C_CR1_SWRST_Msk: u32 = 0x1 << I2C_CR1_SWRST_Pos;
pub const I2C_CR1_SWRST: u32 = I2C_CR1_SWRST_Msk;
pub const I2C_CR2_FREQ_Pos: u32 = 0;
pub const I2C_CR2_FREQ_Msk: u32 = 0x3F << I2C_CR2_FREQ_Pos;
pub const I2C_CR2_FREQ: u32 = I2C_CR2_FREQ_Msk;
pub const I2C_CR2_FREQ_0: u32 = 0x01 << I2C_CR2_FREQ_Pos;
pub const I2C_CR2_FREQ_1: u32 = 0x02 << I2C_CR2_FREQ_Pos;
pub const I2C_CR2_FREQ_2: u32 = 0x04 << I2C_CR2_FREQ_Pos;
pub const I2C_CR2_FREQ_3: u32 = 0x08 << I2C_CR2_FREQ_Pos;
pub const I2C_CR2_FREQ_4: u32 = 0x10 << I2C_CR2_FREQ_Pos;
pub const I2C_CR2_FREQ_5: u32 = 0x20 << I2C_CR2_FREQ_Pos;
pub const I2C_CR2_ITERREN_Pos: u32 = 8;
pub const I2C_CR2_ITERREN_Msk: u32 = 0x1 << I2C_CR2_ITERREN_Pos;
pub const I2C_CR2_ITERREN: u32 = I2C_CR2_ITERREN_Msk;
pub const I2C_CR2_ITEVTEN_Pos: u32 = 9;
pub const I2C_CR2_ITEVTEN_Msk: u32 = 0x1 << I2C_CR2_ITEVTEN_Pos;
pub const I2C_CR2_ITEVTEN: u32 = I2C_CR2_ITEVTEN_Msk;
pub const I2C_CR2_ITBUFEN_Pos: u32 = 10;
pub const I2C_CR2_ITBUFEN_Msk: u32 = 0x1 << I2C_CR2_ITBUFEN_Pos;
pub const I2C_CR2_ITBUFEN: u32 = I2C_CR2_ITBUFEN_Msk;
pub const I2C_CR2_DMAEN_Pos: u32 = 11;
pub const I2C_CR2_DMAEN_Msk: u32 = 0x1 << I2C_CR2_DMAEN_Pos;
pub const I2C_CR2_DMAEN: u32 = I2C_CR2_DMAEN_Msk;
pub const I2C_CR2_LAST_Pos: u32 = 12;
pub const I2C_CR2_LAST_Msk: u32 = 0x1 << I2C_CR2_LAST_Pos;
pub const I2C_CR2_LAST: u32 = I2C_CR2_LAST_Msk;
pub const I2C_OAR1_ADD1_7: u32 = 0x000000FE;
pub const I2C_OAR1_ADD8_9: u32 = 0x00000300;
pub const I2C_OAR1_ADD0_Pos: u32 = 0;
pub const I2C_OAR1_ADD0_Msk: u32 = 0x1 << I2C_OAR1_ADD0_Pos;
pub const I2C_OAR1_ADD0: u32 = I2C_OAR1_ADD0_Msk;
pub const I2C_OAR1_ADD1_Pos: u32 = 1;
pub const I2C_OAR1_ADD1_Msk: u32 = 0x1 << I2C_OAR1_ADD1_Pos;
pub const I2C_OAR1_ADD1: u32 = I2C_OAR1_ADD1_Msk;
pub const I2C_OAR1_ADD2_Pos: u32 = 2;
pub const I2C_OAR1_ADD2_Msk: u32 = 0x1 << I2C_OAR1_ADD2_Pos;
pub const I2C_OAR1_ADD2: u32 = I2C_OAR1_ADD2_Msk;
pub const I2C_OAR1_ADD3_Pos: u32 = 3;
pub const I2C_OAR1_ADD3_Msk: u32 = 0x1 << I2C_OAR1_ADD3_Pos;
pub const I2C_OAR1_ADD3: u32 = I2C_OAR1_ADD3_Msk;
pub const I2C_OAR1_ADD4_Pos: u32 = 4;
pub const I2C_OAR1_ADD4_Msk: u32 = 0x1 << I2C_OAR1_ADD4_Pos;
pub const I2C_OAR1_ADD4: u32 = I2C_OAR1_ADD4_Msk;
pub const I2C_OAR1_ADD5_Pos: u32 = 5;
pub const I2C_OAR1_ADD5_Msk: u32 = 0x1 << I2C_OAR1_ADD5_Pos;
pub const I2C_OAR1_ADD5: u32 = I2C_OAR1_ADD5_Msk;
pub const I2C_OAR1_ADD6_Pos: u32 = 6;
pub const I2C_OAR1_ADD6_Msk: u32 = 0x1 << I2C_OAR1_ADD6_Pos;
pub const I2C_OAR1_ADD6: u32 = I2C_OAR1_ADD6_Msk;
pub const I2C_OAR1_ADD7_Pos: u32 = 7;
pub const I2C_OAR1_ADD7_Msk: u32 = 0x1 << I2C_OAR1_ADD7_Pos;
pub const I2C_OAR1_ADD7: u32 = I2C_OAR1_ADD7_Msk;
pub const I2C_OAR1_ADD8_Pos: u32 = 8;
pub const I2C_OAR1_ADD8_Msk: u32 = 0x1 << I2C_OAR1_ADD8_Pos;
pub const I2C_OAR1_ADD8: u32 = I2C_OAR1_ADD8_Msk;
pub const I2C_OAR1_ADD9_Pos: u32 = 9;
pub const I2C_OAR1_ADD9_Msk: u32 = 0x1 << I2C_OAR1_ADD9_Pos;
pub const I2C_OAR1_ADD9: u32 = I2C_OAR1_ADD9_Msk;
pub const I2C_OAR1_ADDMODE_Pos: u32 = 15;
pub const I2C_OAR1_ADDMODE_Msk: u32 = 0x1 << I2C_OAR1_ADDMODE_Pos;
pub const I2C_OAR1_ADDMODE: u32 = I2C_OAR1_ADDMODE_Msk;
pub const I2C_OAR2_ENDUAL_Pos: u32 = 0;
pub const I2C_OAR2_ENDUAL_Msk: u32 = 0x1 << I2C_OAR2_ENDUAL_Pos;
pub const I2C_OAR2_ENDUAL: u32 = I2C_OAR2_ENDUAL_Msk;
pub const I2C_OAR2_ADD2_Pos: u32 = 1;
pub const I2C_OAR2_ADD2_Msk: u32 = 0x7F << I2C_OAR2_ADD2_Pos;
pub const I2C_OAR2_ADD2: u32 = I2C_OAR2_ADD2_Msk;
pub const I2C_DR_DR_Pos: u32 = 0;
pub const I2C_DR_DR_Msk: u32 = 0xFF << I2C_DR_DR_Pos;
pub const I2C_DR_DR: u32 = I2C_DR_DR_Msk;
pub const I2C_SR1_SB_Pos: u32 = 0;
pub const I2C_SR1_SB_Msk: u32 = 0x1 << I2C_SR1_SB_Pos;
pub const I2C_SR1_SB: u32 = I2C_SR1_SB_Msk;
pub const I2C_SR1_ADDR_Pos: u32 = 1;
pub const I2C_SR1_ADDR_Msk: u32 = 0x1 << I2C_SR1_ADDR_Pos;
pub const I2C_SR1_ADDR: u32 = I2C_SR1_ADDR_Msk;
pub const I2C_SR1_BTF_Pos: u32 = 2;
pub const I2C_SR1_BTF_Msk: u32 = 0x1 << I2C_SR1_BTF_Pos;
pub const I2C_SR1_BTF: u32 = I2C_SR1_BTF_Msk;
pub const I2C_SR1_ADD10_Pos: u32 = 3;
pub const I2C_SR1_ADD10_Msk: u32 = 0x1 << I2C_SR1_ADD10_Pos;
pub const I2C_SR1_ADD10: u32 = I2C_SR1_ADD10_Msk;
pub const I2C_SR1_STOPF_Pos: u32 = 4;
pub const I2C_SR1_STOPF_Msk: u32 = 0x1 << I2C_SR1_STOPF_Pos;
pub const I2C_SR1_STOPF: u32 = I2C_SR1_STOPF_Msk;
pub const I2C_SR1_RXNE_Pos: u32 = 6;
pub const I2C_SR1_RXNE_Msk: u32 = 0x1 << I2C_SR1_RXNE_Pos;
pub const I2C_SR1_RXNE: u32 = I2C_SR1_RXNE_Msk;
pub const I2C_SR1_TXE_Pos: u32 = 7;
pub const I2C_SR1_TXE_Msk: u32 = 0x1 << I2C_SR1_TXE_Pos;
pub const I2C_SR1_TXE: u32 = I2C_SR1_TXE_Msk;
pub const I2C_SR1_BERR_Pos: u32 = 8;
pub const I2C_SR1_BERR_Msk: u32 = 0x1 << I2C_SR1_BERR_Pos;
pub const I2C_SR1_BERR: u32 = I2C_SR1_BERR_Msk;
pub const I2C_SR1_ARLO_Pos: u32 = 9;
pub const I2C_SR1_ARLO_Msk: u32 = 0x1 << I2C_SR1_ARLO_Pos;
pub const I2C_SR1_ARLO: u32 = I2C_SR1_ARLO_Msk;
pub const I2C_SR1_AF_Pos: u32 = 10;
pub const I2C_SR1_AF_Msk: u32 = 0x1 << I2C_SR1_AF_Pos;
pub const I2C_SR1_AF: u32 = I2C_SR1_AF_Msk;
pub const I2C_SR1_OVR_Pos: u32 = 11;
pub const I2C_SR1_OVR_Msk: u32 = 0x1 << I2C_SR1_OVR_Pos;
pub const I2C_SR1_OVR: u32 = I2C_SR1_OVR_Msk;
pub const I2C_SR1_PECERR_Pos: u32 = 12;
pub const I2C_SR1_PECERR_Msk: u32 = 0x1 << I2C_SR1_PECERR_Pos;
pub const I2C_SR1_PECERR: u32 = I2C_SR1_PECERR_Msk;
pub const I2C_SR1_TIMEOUT_Pos: u32 = 14;
pub const I2C_SR1_TIMEOUT_Msk: u32 = 0x1 << I2C_SR1_TIMEOUT_Pos;
pub const I2C_SR1_TIMEOUT: u32 = I2C_SR1_TIMEOUT_Msk;
pub const I2C_SR1_SMBALERT_Pos: u32 = 15;
pub const I2C_SR1_SMBALERT_Msk: u32 = 0x1 << I2C_SR1_SMBALERT_Pos;
pub const I2C_SR1_SMBALERT: u32 = I2C_SR1_SMBALERT_Msk;
pub const I2C_SR2_MSL_Pos: u32 = 0;
pub const I2C_SR2_MSL_Msk: u32 = 0x1 << I2C_SR2_MSL_Pos;
pub const I2C_SR2_MSL: u32 = I2C_SR2_MSL_Msk;
pub const I2C_SR2_BUSY_Pos: u32 = 1;
pub const I2C_SR2_BUSY_Msk: u32 = 0x1 << I2C_SR2_BUSY_Pos;
pub const I2C_SR2_BUSY: u32 = I2C_SR2_BUSY_Msk;
pub const I2C_SR2_TRA_Pos: u32 = 2;
pub const I2C_SR2_TRA_Msk: u32 = 0x1 << I2C_SR2_TRA_Pos;
pub const I2C_SR2_TRA: u32 = I2C_SR2_TRA_Msk;
pub const I2C_SR2_GENCALL_Pos: u32 = 4;
pub const I2C_SR2_GENCALL_Msk: u32 = 0x1 << I2C_SR2_GENCALL_Pos;
pub const I2C_SR2_GENCALL: u32 = I2C_SR2_GENCALL_Msk;
pub const I2C_SR2_SMBDEFAULT_Pos: u32 = 5;
pub const I2C_SR2_SMBDEFAULT_Msk: u32 = 0x1 << I2C_SR2_SMBDEFAULT_Pos;
pub const I2C_SR2_SMBDEFAULT: u32 = I2C_SR2_SMBDEFAULT_Msk;
pub const I2C_SR2_SMBHOST_Pos: u32 = 6;
pub const I2C_SR2_SMBHOST_Msk: u32 = 0x1 << I2C_SR2_SMBHOST_Pos;
pub const I2C_SR2_SMBHOST: u32 = I2C_SR2_SMBHOST_Msk;
pub const I2C_SR2_DUALF_Pos: u32 = 7;
pub const I2C_SR2_DUALF_Msk: u32 = 0x1 << I2C_SR2_DUALF_Pos;
pub const I2C_SR2_DUALF: u32 = I2C_SR2_DUALF_Msk;
pub const I2C_SR2_PEC_Pos: u32 = 8;
pub const I2C_SR2_PEC_Msk: u32 = 0xFF << I2C_SR2_PEC_Pos;
pub const I2C_SR2_PEC: u32 = I2C_SR2_PEC_Msk;
pub const I2C_CCR_CCR_Pos: u32 = 0;
pub const I2C_CCR_CCR_Msk: u32 = 0xFFF << I2C_CCR_CCR_Pos;
pub const I2C_CCR_CCR: u32 = I2C_CCR_CCR_Msk;
pub const I2C_CCR_DUTY_Pos: u32 = 14;
pub const I2C_CCR_DUTY_Msk: u32 = 0x1 << I2C_CCR_DUTY_Pos;
pub const I2C_CCR_DUTY: u32 = I2C_CCR_DUTY_Msk;
pub const I2C_CCR_FS_Pos: u32 = 15;
pub const I2C_CCR_FS_Msk: u32 = 0x1 << I2C_CCR_FS_Pos;
pub const I2C_CCR_FS: u32 = I2C_CCR_FS_Msk;
pub const I2C_TRISE_TRISE_Pos: u32 = 0;
pub const I2C_TRISE_TRISE_Msk: u32 = 0x3F << I2C_TRISE_TRISE_Pos;
pub const I2C_TRISE_TRISE: u32 = I2C_TRISE_TRISE_Msk;
pub const IWDG_KR_KEY_Pos: u32 = 0;
pub const IWDG_KR_KEY_Msk: u32 = 0xFFFF << IWDG_KR_KEY_Pos;
pub const IWDG_KR_KEY: u32 = IWDG_KR_KEY_Msk;
pub const IWDG_PR_PR_Pos: u32 = 0;
pub const IWDG_PR_PR_Msk: u32 = 0x7 << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR: u32 = IWDG_PR_PR_Msk;
pub const IWDG_PR_PR_0: u32 = 0x1 << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR_1: u32 = 0x2 << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR_2: u32 = 0x4 << IWDG_PR_PR_Pos;
pub const IWDG_RLR_RL_Pos: u32 = 0;
pub const IWDG_RLR_RL_Msk: u32 = 0xFFF << IWDG_RLR_RL_Pos;
pub const IWDG_RLR_RL: u32 = IWDG_RLR_RL_Msk;
pub const IWDG_SR_PVU_Pos: u32 = 0;
pub const IWDG_SR_PVU_Msk: u32 = 0x1 << IWDG_SR_PVU_Pos;
pub const IWDG_SR_PVU: u32 = IWDG_SR_PVU_Msk;
pub const IWDG_SR_RVU_Pos: u32 = 1;
pub const IWDG_SR_RVU_Msk: u32 = 0x1 << IWDG_SR_RVU_Pos;
pub const IWDG_SR_RVU: u32 = IWDG_SR_RVU_Msk;
pub const LCD_CR_LCDEN_Pos: u32 = 0;
pub const LCD_CR_LCDEN_Msk: u32 = 0x1 << LCD_CR_LCDEN_Pos;
pub const LCD_CR_LCDEN: u32 = LCD_CR_LCDEN_Msk;
pub const LCD_CR_VSEL_Pos: u32 = 1;
pub const LCD_CR_VSEL_Msk: u32 = 0x1 << LCD_CR_VSEL_Pos;
pub const LCD_CR_VSEL: u32 = LCD_CR_VSEL_Msk;
pub const LCD_CR_DUTY_Pos: u32 = 2;
pub const LCD_CR_DUTY_Msk: u32 = 0x7 << LCD_CR_DUTY_Pos;
pub const LCD_CR_DUTY: u32 = LCD_CR_DUTY_Msk;
pub const LCD_CR_DUTY_0: u32 = 0x1 << LCD_CR_DUTY_Pos;
pub const LCD_CR_DUTY_1: u32 = 0x2 << LCD_CR_DUTY_Pos;
pub const LCD_CR_DUTY_2: u32 = 0x4 << LCD_CR_DUTY_Pos;
pub const LCD_CR_BIAS_Pos: u32 = 5;
pub const LCD_CR_BIAS_Msk: u32 = 0x3 << LCD_CR_BIAS_Pos;
pub const LCD_CR_BIAS: u32 = LCD_CR_BIAS_Msk;
pub const LCD_CR_BIAS_0: u32 = 0x1 << LCD_CR_BIAS_Pos;
pub const LCD_CR_BIAS_1: u32 = 0x2 << LCD_CR_BIAS_Pos;
pub const LCD_CR_MUX_SEG_Pos: u32 = 7;
pub const LCD_CR_MUX_SEG_Msk: u32 = 0x1 << LCD_CR_MUX_SEG_Pos;
pub const LCD_CR_MUX_SEG: u32 = LCD_CR_MUX_SEG_Msk;
pub const LCD_FCR_HD_Pos: u32 = 0;
pub const LCD_FCR_HD_Msk: u32 = 0x1 << LCD_FCR_HD_Pos;
pub const LCD_FCR_HD: u32 = LCD_FCR_HD_Msk;
pub const LCD_FCR_SOFIE_Pos: u32 = 1;
pub const LCD_FCR_SOFIE_Msk: u32 = 0x1 << LCD_FCR_SOFIE_Pos;
pub const LCD_FCR_SOFIE: u32 = LCD_FCR_SOFIE_Msk;
pub const LCD_FCR_UDDIE_Pos: u32 = 3;
pub const LCD_FCR_UDDIE_Msk: u32 = 0x1 << LCD_FCR_UDDIE_Pos;
pub const LCD_FCR_UDDIE: u32 = LCD_FCR_UDDIE_Msk;
pub const LCD_FCR_PON_Pos: u32 = 4;
pub const LCD_FCR_PON_Msk: u32 = 0x7 << LCD_FCR_PON_Pos;
pub const LCD_FCR_PON: u32 = LCD_FCR_PON_Msk;
pub const LCD_FCR_PON_0: u32 = 0x1 << LCD_FCR_PON_Pos;
pub const LCD_FCR_PON_1: u32 = 0x2 << LCD_FCR_PON_Pos;
pub const LCD_FCR_PON_2: u32 = 0x4 << LCD_FCR_PON_Pos;
pub const LCD_FCR_DEAD_Pos: u32 = 7;
pub const LCD_FCR_DEAD_Msk: u32 = 0x7 << LCD_FCR_DEAD_Pos;
pub const LCD_FCR_DEAD: u32 = LCD_FCR_DEAD_Msk;
pub const LCD_FCR_DEAD_0: u32 = 0x1 << LCD_FCR_DEAD_Pos;
pub const LCD_FCR_DEAD_1: u32 = 0x2 << LCD_FCR_DEAD_Pos;
pub const LCD_FCR_DEAD_2: u32 = 0x4 << LCD_FCR_DEAD_Pos;
pub const LCD_FCR_CC_Pos: u32 = 10;
pub const LCD_FCR_CC_Msk: u32 = 0x7 << LCD_FCR_CC_Pos;
pub const LCD_FCR_CC: u32 = LCD_FCR_CC_Msk;
pub const LCD_FCR_CC_0: u32 = 0x1 << LCD_FCR_CC_Pos;
pub const LCD_FCR_CC_1: u32 = 0x2 << LCD_FCR_CC_Pos;
pub const LCD_FCR_CC_2: u32 = 0x4 << LCD_FCR_CC_Pos;
pub const LCD_FCR_BLINKF_Pos: u32 = 13;
pub const LCD_FCR_BLINKF_Msk: u32 = 0x7 << LCD_FCR_BLINKF_Pos;
pub const LCD_FCR_BLINKF: u32 = LCD_FCR_BLINKF_Msk;
pub const LCD_FCR_BLINKF_0: u32 = 0x1 << LCD_FCR_BLINKF_Pos;
pub const LCD_FCR_BLINKF_1: u32 = 0x2 << LCD_FCR_BLINKF_Pos;
pub const LCD_FCR_BLINKF_2: u32 = 0x4 << LCD_FCR_BLINKF_Pos;
pub const LCD_FCR_BLINK_Pos: u32 = 16;
pub const LCD_FCR_BLINK_Msk: u32 = 0x3 << LCD_FCR_BLINK_Pos;
pub const LCD_FCR_BLINK: u32 = LCD_FCR_BLINK_Msk;
pub const LCD_FCR_BLINK_0: u32 = 0x1 << LCD_FCR_BLINK_Pos;
pub const LCD_FCR_BLINK_1: u32 = 0x2 << LCD_FCR_BLINK_Pos;
pub const LCD_FCR_DIV_Pos: u32 = 18;
pub const LCD_FCR_DIV_Msk: u32 = 0xF << LCD_FCR_DIV_Pos;
pub const LCD_FCR_DIV: u32 = LCD_FCR_DIV_Msk;
pub const LCD_FCR_PS_Pos: u32 = 22;
pub const LCD_FCR_PS_Msk: u32 = 0xF << LCD_FCR_PS_Pos;
pub const LCD_FCR_PS: u32 = LCD_FCR_PS_Msk;
pub const LCD_SR_ENS_Pos: u32 = 0;
pub const LCD_SR_ENS_Msk: u32 = 0x1 << LCD_SR_ENS_Pos;
pub const LCD_SR_ENS: u32 = LCD_SR_ENS_Msk;
pub const LCD_SR_SOF_Pos: u32 = 1;
pub const LCD_SR_SOF_Msk: u32 = 0x1 << LCD_SR_SOF_Pos;
pub const LCD_SR_SOF: u32 = LCD_SR_SOF_Msk;
pub const LCD_SR_UDR_Pos: u32 = 2;
pub const LCD_SR_UDR_Msk: u32 = 0x1 << LCD_SR_UDR_Pos;
pub const LCD_SR_UDR: u32 = LCD_SR_UDR_Msk;
pub const LCD_SR_UDD_Pos: u32 = 3;
pub const LCD_SR_UDD_Msk: u32 = 0x1 << LCD_SR_UDD_Pos;
pub const LCD_SR_UDD: u32 = LCD_SR_UDD_Msk;
pub const LCD_SR_RDY_Pos: u32 = 4;
pub const LCD_SR_RDY_Msk: u32 = 0x1 << LCD_SR_RDY_Pos;
pub const LCD_SR_RDY: u32 = LCD_SR_RDY_Msk;
pub const LCD_SR_FCRSR_Pos: u32 = 5;
pub const LCD_SR_FCRSR_Msk: u32 = 0x1 << LCD_SR_FCRSR_Pos;
pub const LCD_SR_FCRSR: u32 = LCD_SR_FCRSR_Msk;
pub const LCD_CLR_SOFC_Pos: u32 = 1;
pub const LCD_CLR_SOFC_Msk: u32 = 0x1 << LCD_CLR_SOFC_Pos;
pub const LCD_CLR_SOFC: u32 = LCD_CLR_SOFC_Msk;
pub const LCD_CLR_UDDC_Pos: u32 = 3;
pub const LCD_CLR_UDDC_Msk: u32 = 0x1 << LCD_CLR_UDDC_Pos;
pub const LCD_CLR_UDDC: u32 = LCD_CLR_UDDC_Msk;
pub const LCD_RAM_SEGMENT_DATA_Pos: u32 = 0;
pub const LCD_RAM_SEGMENT_DATA_Msk: u32 = 0xFFFFFFFF << LCD_RAM_SEGMENT_DATA_Pos;
pub const LCD_RAM_SEGMENT_DATA: u32 = LCD_RAM_SEGMENT_DATA_Msk;
pub const PWR_CR_LPSDSR_Pos: u32 = 0;
pub const PWR_CR_LPSDSR_Msk: u32 = 0x1 << PWR_CR_LPSDSR_Pos;
pub const PWR_CR_LPSDSR: u32 = PWR_CR_LPSDSR_Msk;
pub const PWR_CR_PDDS_Pos: u32 = 1;
pub const PWR_CR_PDDS_Msk: u32 = 0x1 << PWR_CR_PDDS_Pos;
pub const PWR_CR_PDDS: u32 = PWR_CR_PDDS_Msk;
pub const PWR_CR_CWUF_Pos: u32 = 2;
pub const PWR_CR_CWUF_Msk: u32 = 0x1 << PWR_CR_CWUF_Pos;
pub const PWR_CR_CWUF: u32 = PWR_CR_CWUF_Msk;
pub const PWR_CR_CSBF_Pos: u32 = 3;
pub const PWR_CR_CSBF_Msk: u32 = 0x1 << PWR_CR_CSBF_Pos;
pub const PWR_CR_CSBF: u32 = PWR_CR_CSBF_Msk;
pub const PWR_CR_PVDE_Pos: u32 = 4;
pub const PWR_CR_PVDE_Msk: u32 = 0x1 << PWR_CR_PVDE_Pos;
pub const PWR_CR_PVDE: u32 = PWR_CR_PVDE_Msk;
pub const PWR_CR_PLS_Pos: u32 = 5;
pub const PWR_CR_PLS_Msk: u32 = 0x7 << PWR_CR_PLS_Pos;
pub const PWR_CR_PLS: u32 = PWR_CR_PLS_Msk;
pub const PWR_CR_PLS_0: u32 = 0x1 << PWR_CR_PLS_Pos;
pub const PWR_CR_PLS_1: u32 = 0x2 << PWR_CR_PLS_Pos;
pub const PWR_CR_PLS_2: u32 = 0x4 << PWR_CR_PLS_Pos;
pub const PWR_CR_PLS_LEV0: u32 = 0x00000000;
pub const PWR_CR_PLS_LEV1: u32 = 0x00000020;
pub const PWR_CR_PLS_LEV2: u32 = 0x00000040;
pub const PWR_CR_PLS_LEV3: u32 = 0x00000060;
pub const PWR_CR_PLS_LEV4: u32 = 0x00000080;
pub const PWR_CR_PLS_LEV5: u32 = 0x000000A0;
pub const PWR_CR_PLS_LEV6: u32 = 0x000000C0;
pub const PWR_CR_PLS_LEV7: u32 = 0x000000E0;
pub const PWR_CR_DBP_Pos: u32 = 8;
pub const PWR_CR_DBP_Msk: u32 = 0x1 << PWR_CR_DBP_Pos;
pub const PWR_CR_DBP: u32 = PWR_CR_DBP_Msk;
pub const PWR_CR_ULP_Pos: u32 = 9;
pub const PWR_CR_ULP_Msk: u32 = 0x1 << PWR_CR_ULP_Pos;
pub const PWR_CR_ULP: u32 = PWR_CR_ULP_Msk;
pub const PWR_CR_FWU_Pos: u32 = 10;
pub const PWR_CR_FWU_Msk: u32 = 0x1 << PWR_CR_FWU_Pos;
pub const PWR_CR_FWU: u32 = PWR_CR_FWU_Msk;
pub const PWR_CR_VOS_Pos: u32 = 11;
pub const PWR_CR_VOS_Msk: u32 = 0x3 << PWR_CR_VOS_Pos;
pub const PWR_CR_VOS: u32 = PWR_CR_VOS_Msk;
pub const PWR_CR_VOS_0: u32 = 0x1 << PWR_CR_VOS_Pos;
pub const PWR_CR_VOS_1: u32 = 0x2 << PWR_CR_VOS_Pos;
pub const PWR_CR_LPRUN_Pos: u32 = 14;
pub const PWR_CR_LPRUN_Msk: u32 = 0x1 << PWR_CR_LPRUN_Pos;
pub const PWR_CR_LPRUN: u32 = PWR_CR_LPRUN_Msk;
pub const PWR_CSR_WUF_Pos: u32 = 0;
pub const PWR_CSR_WUF_Msk: u32 = 0x1 << PWR_CSR_WUF_Pos;
pub const PWR_CSR_WUF: u32 = PWR_CSR_WUF_Msk;
pub const PWR_CSR_SBF_Pos: u32 = 1;
pub const PWR_CSR_SBF_Msk: u32 = 0x1 << PWR_CSR_SBF_Pos;
pub const PWR_CSR_SBF: u32 = PWR_CSR_SBF_Msk;
pub const PWR_CSR_PVDO_Pos: u32 = 2;
pub const PWR_CSR_PVDO_Msk: u32 = 0x1 << PWR_CSR_PVDO_Pos;
pub const PWR_CSR_PVDO: u32 = PWR_CSR_PVDO_Msk;
pub const PWR_CSR_VREFINTRDYF_Pos: u32 = 3;
pub const PWR_CSR_VREFINTRDYF_Msk: u32 = 0x1 << PWR_CSR_VREFINTRDYF_Pos;
pub const PWR_CSR_VREFINTRDYF: u32 = PWR_CSR_VREFINTRDYF_Msk;
pub const PWR_CSR_VOSF_Pos: u32 = 4;
pub const PWR_CSR_VOSF_Msk: u32 = 0x1 << PWR_CSR_VOSF_Pos;
pub const PWR_CSR_VOSF: u32 = PWR_CSR_VOSF_Msk;
pub const PWR_CSR_REGLPF_Pos: u32 = 5;
pub const PWR_CSR_REGLPF_Msk: u32 = 0x1 << PWR_CSR_REGLPF_Pos;
pub const PWR_CSR_REGLPF: u32 = PWR_CSR_REGLPF_Msk;
pub const PWR_CSR_EWUP1_Pos: u32 = 8;
pub const PWR_CSR_EWUP1_Msk: u32 = 0x1 << PWR_CSR_EWUP1_Pos;
pub const PWR_CSR_EWUP1: u32 = PWR_CSR_EWUP1_Msk;
pub const PWR_CSR_EWUP2_Pos: u32 = 9;
pub const PWR_CSR_EWUP2_Msk: u32 = 0x1 << PWR_CSR_EWUP2_Pos;
pub const PWR_CSR_EWUP2: u32 = PWR_CSR_EWUP2_Msk;
pub const PWR_CSR_EWUP3_Pos: u32 = 10;
pub const PWR_CSR_EWUP3_Msk: u32 = 0x1 << PWR_CSR_EWUP3_Pos;
pub const PWR_CSR_EWUP3: u32 = PWR_CSR_EWUP3_Msk;
pub const RCC_CR_HSION_Pos: u32 = 0;
pub const RCC_CR_HSION_Msk: u32 = 0x1 << RCC_CR_HSION_Pos;
pub const RCC_CR_HSION: u32 = RCC_CR_HSION_Msk;
pub const RCC_CR_HSIRDY_Pos: u32 = 1;
pub const RCC_CR_HSIRDY_Msk: u32 = 0x1 << RCC_CR_HSIRDY_Pos;
pub const RCC_CR_HSIRDY: u32 = RCC_CR_HSIRDY_Msk;
pub const RCC_CR_MSION_Pos: u32 = 8;
pub const RCC_CR_MSION_Msk: u32 = 0x1 << RCC_CR_MSION_Pos;
pub const RCC_CR_MSION: u32 = RCC_CR_MSION_Msk;
pub const RCC_CR_MSIRDY_Pos: u32 = 9;
pub const RCC_CR_MSIRDY_Msk: u32 = 0x1 << RCC_CR_MSIRDY_Pos;
pub const RCC_CR_MSIRDY: u32 = RCC_CR_MSIRDY_Msk;
pub const RCC_CR_HSEON_Pos: u32 = 16;
pub const RCC_CR_HSEON_Msk: u32 = 0x1 << RCC_CR_HSEON_Pos;
pub const RCC_CR_HSEON: u32 = RCC_CR_HSEON_Msk;
pub const RCC_CR_HSERDY_Pos: u32 = 17;
pub const RCC_CR_HSERDY_Msk: u32 = 0x1 << RCC_CR_HSERDY_Pos;
pub const RCC_CR_HSERDY: u32 = RCC_CR_HSERDY_Msk;
pub const RCC_CR_HSEBYP_Pos: u32 = 18;
pub const RCC_CR_HSEBYP_Msk: u32 = 0x1 << RCC_CR_HSEBYP_Pos;
pub const RCC_CR_HSEBYP: u32 = RCC_CR_HSEBYP_Msk;
pub const RCC_CR_PLLON_Pos: u32 = 24;
pub const RCC_CR_PLLON_Msk: u32 = 0x1 << RCC_CR_PLLON_Pos;
pub const RCC_CR_PLLON: u32 = RCC_CR_PLLON_Msk;
pub const RCC_CR_PLLRDY_Pos: u32 = 25;
pub const RCC_CR_PLLRDY_Msk: u32 = 0x1 << RCC_CR_PLLRDY_Pos;
pub const RCC_CR_PLLRDY: u32 = RCC_CR_PLLRDY_Msk;
pub const RCC_CR_CSSON_Pos: u32 = 28;
pub const RCC_CR_CSSON_Msk: u32 = 0x1 << RCC_CR_CSSON_Pos;
pub const RCC_CR_CSSON: u32 = RCC_CR_CSSON_Msk;
pub const RCC_CR_RTCPRE_Pos: u32 = 29;
pub const RCC_CR_RTCPRE_Msk: u32 = 0x3 << RCC_CR_RTCPRE_Pos;
pub const RCC_CR_RTCPRE: u32 = RCC_CR_RTCPRE_Msk;
pub const RCC_CR_RTCPRE_0: u32 = 0x20000000;
pub const RCC_CR_RTCPRE_1: u32 = 0x40000000;
pub const RCC_ICSCR_HSICAL_Pos: u32 = 0;
pub const RCC_ICSCR_HSICAL_Msk: u32 = 0xFF << RCC_ICSCR_HSICAL_Pos;
pub const RCC_ICSCR_HSICAL: u32 = RCC_ICSCR_HSICAL_Msk;
pub const RCC_ICSCR_HSITRIM_Pos: u32 = 8;
pub const RCC_ICSCR_HSITRIM_Msk: u32 = 0x1F << RCC_ICSCR_HSITRIM_Pos;
pub const RCC_ICSCR_HSITRIM: u32 = RCC_ICSCR_HSITRIM_Msk;
pub const RCC_ICSCR_MSIRANGE_Pos: u32 = 13;
pub const RCC_ICSCR_MSIRANGE_Msk: u32 = 0x7 << RCC_ICSCR_MSIRANGE_Pos;
pub const RCC_ICSCR_MSIRANGE: u32 = RCC_ICSCR_MSIRANGE_Msk;
pub const RCC_ICSCR_MSIRANGE_0: u32 = 0x0 << RCC_ICSCR_MSIRANGE_Pos;
pub const RCC_ICSCR_MSIRANGE_1: u32 = 0x1 << RCC_ICSCR_MSIRANGE_Pos;
pub const RCC_ICSCR_MSIRANGE_2: u32 = 0x2 << RCC_ICSCR_MSIRANGE_Pos;
pub const RCC_ICSCR_MSIRANGE_3: u32 = 0x3 << RCC_ICSCR_MSIRANGE_Pos;
pub const RCC_ICSCR_MSIRANGE_4: u32 = 0x4 << RCC_ICSCR_MSIRANGE_Pos;
pub const RCC_ICSCR_MSIRANGE_5: u32 = 0x5 << RCC_ICSCR_MSIRANGE_Pos;
pub const RCC_ICSCR_MSIRANGE_6: u32 = 0x6 << RCC_ICSCR_MSIRANGE_Pos;
pub const RCC_ICSCR_MSICAL_Pos: u32 = 16;
pub const RCC_ICSCR_MSICAL_Msk: u32 = 0xFF << RCC_ICSCR_MSICAL_Pos;
pub const RCC_ICSCR_MSICAL: u32 = RCC_ICSCR_MSICAL_Msk;
pub const RCC_ICSCR_MSITRIM_Pos: u32 = 24;
pub const RCC_ICSCR_MSITRIM_Msk: u32 = 0xFF << RCC_ICSCR_MSITRIM_Pos;
pub const RCC_ICSCR_MSITRIM: u32 = RCC_ICSCR_MSITRIM_Msk;
pub const RCC_CFGR_SW_Pos: u32 = 0;
pub const RCC_CFGR_SW_Msk: u32 = 0x3 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SW: u32 = RCC_CFGR_SW_Msk;
pub const RCC_CFGR_SW_0: u32 = 0x1 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SW_1: u32 = 0x2 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SW_MSI: u32 = 0x00000000;
pub const RCC_CFGR_SW_HSI: u32 = 0x00000001;
pub const RCC_CFGR_SW_HSE: u32 = 0x00000002;
pub const RCC_CFGR_SW_PLL: u32 = 0x00000003;
pub const RCC_CFGR_SWS_Pos: u32 = 2;
pub const RCC_CFGR_SWS_Msk: u32 = 0x3 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_SWS: u32 = RCC_CFGR_SWS_Msk;
pub const RCC_CFGR_SWS_0: u32 = 0x1 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_SWS_1: u32 = 0x2 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_SWS_MSI: u32 = 0x00000000;
pub const RCC_CFGR_SWS_HSI: u32 = 0x00000004;
pub const RCC_CFGR_SWS_HSE: u32 = 0x00000008;
pub const RCC_CFGR_SWS_PLL: u32 = 0x0000000C;
pub const RCC_CFGR_HPRE_Pos: u32 = 4;
pub const RCC_CFGR_HPRE_Msk: u32 = 0xF << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE: u32 = RCC_CFGR_HPRE_Msk;
pub const RCC_CFGR_HPRE_0: u32 = 0x1 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_1: u32 = 0x2 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_2: u32 = 0x4 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_3: u32 = 0x8 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_DIV1: u32 = 0x00000000;
pub const RCC_CFGR_HPRE_DIV2: u32 = 0x00000080;
pub const RCC_CFGR_HPRE_DIV4: u32 = 0x00000090;
pub const RCC_CFGR_HPRE_DIV8: u32 = 0x000000A0;
pub const RCC_CFGR_HPRE_DIV16: u32 = 0x000000B0;
pub const RCC_CFGR_HPRE_DIV64: u32 = 0x000000C0;
pub const RCC_CFGR_HPRE_DIV128: u32 = 0x000000D0;
pub const RCC_CFGR_HPRE_DIV256: u32 = 0x000000E0;
pub const RCC_CFGR_HPRE_DIV512: u32 = 0x000000F0;
pub const RCC_CFGR_PPRE1_Pos: u32 = 8;
pub const RCC_CFGR_PPRE1_Msk: u32 = 0x7 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1: u32 = RCC_CFGR_PPRE1_Msk;
pub const RCC_CFGR_PPRE1_0: u32 = 0x1 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1_1: u32 = 0x2 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1_2: u32 = 0x4 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1_DIV1: u32 = 0x00000000;
pub const RCC_CFGR_PPRE1_DIV2: u32 = 0x00000400;
pub const RCC_CFGR_PPRE1_DIV4: u32 = 0x00000500;
pub const RCC_CFGR_PPRE1_DIV8: u32 = 0x00000600;
pub const RCC_CFGR_PPRE1_DIV16: u32 = 0x00000700;
pub const RCC_CFGR_PPRE2_Pos: u32 = 11;
pub const RCC_CFGR_PPRE2_Msk: u32 = 0x7 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2: u32 = RCC_CFGR_PPRE2_Msk;
pub const RCC_CFGR_PPRE2_0: u32 = 0x1 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2_1: u32 = 0x2 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2_2: u32 = 0x4 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2_DIV1: u32 = 0x00000000;
pub const RCC_CFGR_PPRE2_DIV2: u32 = 0x00002000;
pub const RCC_CFGR_PPRE2_DIV4: u32 = 0x00002800;
pub const RCC_CFGR_PPRE2_DIV8: u32 = 0x00003000;
pub const RCC_CFGR_PPRE2_DIV16: u32 = 0x00003800;
pub const RCC_CFGR_PLLSRC_Pos: u32 = 16;
pub const RCC_CFGR_PLLSRC_Msk: u32 = 0x1 << RCC_CFGR_PLLSRC_Pos;
pub const RCC_CFGR_PLLSRC: u32 = RCC_CFGR_PLLSRC_Msk;
pub const RCC_CFGR_PLLSRC_HSI: u32 = 0x00000000;
pub const RCC_CFGR_PLLSRC_HSE: u32 = 0x00010000;
pub const RCC_CFGR_PLLMUL_Pos: u32 = 18;
pub const RCC_CFGR_PLLMUL_Msk: u32 = 0xF << RCC_CFGR_PLLMUL_Pos;
pub const RCC_CFGR_PLLMUL: u32 = RCC_CFGR_PLLMUL_Msk;
pub const RCC_CFGR_PLLMUL_0: u32 = 0x1 << RCC_CFGR_PLLMUL_Pos;
pub const RCC_CFGR_PLLMUL_1: u32 = 0x2 << RCC_CFGR_PLLMUL_Pos;
pub const RCC_CFGR_PLLMUL_2: u32 = 0x4 << RCC_CFGR_PLLMUL_Pos;
pub const RCC_CFGR_PLLMUL_3: u32 = 0x8 << RCC_CFGR_PLLMUL_Pos;
pub const RCC_CFGR_PLLMUL3: u32 = 0x00000000;
pub const RCC_CFGR_PLLMUL4: u32 = 0x00040000;
pub const RCC_CFGR_PLLMUL6: u32 = 0x00080000;
pub const RCC_CFGR_PLLMUL8: u32 = 0x000C0000;
pub const RCC_CFGR_PLLMUL12: u32 = 0x00100000;
pub const RCC_CFGR_PLLMUL16: u32 = 0x00140000;
pub const RCC_CFGR_PLLMUL24: u32 = 0x00180000;
pub const RCC_CFGR_PLLMUL32: u32 = 0x001C0000;
pub const RCC_CFGR_PLLMUL48: u32 = 0x00200000;
pub const RCC_CFGR_PLLDIV_Pos: u32 = 22;
pub const RCC_CFGR_PLLDIV_Msk: u32 = 0x3 << RCC_CFGR_PLLDIV_Pos;
pub const RCC_CFGR_PLLDIV: u32 = RCC_CFGR_PLLDIV_Msk;
pub const RCC_CFGR_PLLDIV_0: u32 = 0x1 << RCC_CFGR_PLLDIV_Pos;
pub const RCC_CFGR_PLLDIV_1: u32 = 0x2 << RCC_CFGR_PLLDIV_Pos;
pub const RCC_CFGR_PLLDIV1: u32 = 0x00000000;
pub const RCC_CFGR_PLLDIV2_Pos: u32 = 22;
pub const RCC_CFGR_PLLDIV2_Msk: u32 = 0x1 << RCC_CFGR_PLLDIV2_Pos;
pub const RCC_CFGR_PLLDIV2: u32 = RCC_CFGR_PLLDIV2_Msk;
pub const RCC_CFGR_PLLDIV3_Pos: u32 = 23;
pub const RCC_CFGR_PLLDIV3_Msk: u32 = 0x1 << RCC_CFGR_PLLDIV3_Pos;
pub const RCC_CFGR_PLLDIV3: u32 = RCC_CFGR_PLLDIV3_Msk;
pub const RCC_CFGR_PLLDIV4_Pos: u32 = 22;
pub const RCC_CFGR_PLLDIV4_Msk: u32 = 0x3 << RCC_CFGR_PLLDIV4_Pos;
pub const RCC_CFGR_PLLDIV4: u32 = RCC_CFGR_PLLDIV4_Msk;
pub const RCC_CFGR_MCOSEL_Pos: u32 = 24;
pub const RCC_CFGR_MCOSEL_Msk: u32 = 0x7 << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOSEL: u32 = RCC_CFGR_MCOSEL_Msk;
pub const RCC_CFGR_MCOSEL_0: u32 = 0x1 << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOSEL_1: u32 = 0x2 << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOSEL_2: u32 = 0x4 << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOSEL_NOCLOCK: u32 = 0x00000000;
pub const RCC_CFGR_MCOSEL_SYSCLK_Pos: u32 = 24;
pub const RCC_CFGR_MCOSEL_SYSCLK_Msk: u32 = 0x1 << RCC_CFGR_MCOSEL_SYSCLK_Pos;
pub const RCC_CFGR_MCOSEL_SYSCLK: u32 = RCC_CFGR_MCOSEL_SYSCLK_Msk;
pub const RCC_CFGR_MCOSEL_HSI_Pos: u32 = 25;
pub const RCC_CFGR_MCOSEL_HSI_Msk: u32 = 0x1 << RCC_CFGR_MCOSEL_HSI_Pos;
pub const RCC_CFGR_MCOSEL_HSI: u32 = RCC_CFGR_MCOSEL_HSI_Msk;
pub const RCC_CFGR_MCOSEL_MSI_Pos: u32 = 24;
pub const RCC_CFGR_MCOSEL_MSI_Msk: u32 = 0x3 << RCC_CFGR_MCOSEL_MSI_Pos;
pub const RCC_CFGR_MCOSEL_MSI: u32 = RCC_CFGR_MCOSEL_MSI_Msk;
pub const RCC_CFGR_MCOSEL_HSE_Pos: u32 = 26;
pub const RCC_CFGR_MCOSEL_HSE_Msk: u32 = 0x1 << RCC_CFGR_MCOSEL_HSE_Pos;
pub const RCC_CFGR_MCOSEL_HSE: u32 = RCC_CFGR_MCOSEL_HSE_Msk;
pub const RCC_CFGR_MCOSEL_PLL_Pos: u32 = 24;
pub const RCC_CFGR_MCOSEL_PLL_Msk: u32 = 0x5 << RCC_CFGR_MCOSEL_PLL_Pos;
pub const RCC_CFGR_MCOSEL_PLL: u32 = RCC_CFGR_MCOSEL_PLL_Msk;
pub const RCC_CFGR_MCOSEL_LSI_Pos: u32 = 25;
pub const RCC_CFGR_MCOSEL_LSI_Msk: u32 = 0x3 << RCC_CFGR_MCOSEL_LSI_Pos;
pub const RCC_CFGR_MCOSEL_LSI: u32 = RCC_CFGR_MCOSEL_LSI_Msk;
pub const RCC_CFGR_MCOSEL_LSE_Pos: u32 = 24;
pub const RCC_CFGR_MCOSEL_LSE_Msk: u32 = 0x7 << RCC_CFGR_MCOSEL_LSE_Pos;
pub const RCC_CFGR_MCOSEL_LSE: u32 = RCC_CFGR_MCOSEL_LSE_Msk;
pub const RCC_CFGR_MCOPRE_Pos: u32 = 28;
pub const RCC_CFGR_MCOPRE_Msk: u32 = 0x7 << RCC_CFGR_MCOPRE_Pos;
pub const RCC_CFGR_MCOPRE: u32 = RCC_CFGR_MCOPRE_Msk;
pub const RCC_CFGR_MCOPRE_0: u32 = 0x1 << RCC_CFGR_MCOPRE_Pos;
pub const RCC_CFGR_MCOPRE_1: u32 = 0x2 << RCC_CFGR_MCOPRE_Pos;
pub const RCC_CFGR_MCOPRE_2: u32 = 0x4 << RCC_CFGR_MCOPRE_Pos;
pub const RCC_CFGR_MCOPRE_DIV1: u32 = 0x00000000;
pub const RCC_CFGR_MCOPRE_DIV2: u32 = 0x10000000;
pub const RCC_CFGR_MCOPRE_DIV4: u32 = 0x20000000;
pub const RCC_CFGR_MCOPRE_DIV8: u32 = 0x30000000;
pub const RCC_CFGR_MCOPRE_DIV16: u32 = 0x40000000;
pub const RCC_CFGR_MCO_DIV1: u32 = RCC_CFGR_MCOPRE_DIV1;
pub const RCC_CFGR_MCO_DIV2: u32 = RCC_CFGR_MCOPRE_DIV2;
pub const RCC_CFGR_MCO_DIV4: u32 = RCC_CFGR_MCOPRE_DIV4;
pub const RCC_CFGR_MCO_DIV8: u32 = RCC_CFGR_MCOPRE_DIV8;
pub const RCC_CFGR_MCO_DIV16: u32 = RCC_CFGR_MCOPRE_DIV16;
pub const RCC_CFGR_MCO_NOCLOCK: u32 = RCC_CFGR_MCOSEL_NOCLOCK;
pub const RCC_CFGR_MCO_SYSCLK: u32 = RCC_CFGR_MCOSEL_SYSCLK;
pub const RCC_CFGR_MCO_HSI: u32 = RCC_CFGR_MCOSEL_HSI;
pub const RCC_CFGR_MCO_MSI: u32 = RCC_CFGR_MCOSEL_MSI;
pub const RCC_CFGR_MCO_HSE: u32 = RCC_CFGR_MCOSEL_HSE;
pub const RCC_CFGR_MCO_PLL: u32 = RCC_CFGR_MCOSEL_PLL;
pub const RCC_CFGR_MCO_LSI: u32 = RCC_CFGR_MCOSEL_LSI;
pub const RCC_CFGR_MCO_LSE: u32 = RCC_CFGR_MCOSEL_LSE;
pub const RCC_CIR_LSIRDYF_Pos: u32 = 0;
pub const RCC_CIR_LSIRDYF_Msk: u32 = 0x1 << RCC_CIR_LSIRDYF_Pos;
pub const RCC_CIR_LSIRDYF: u32 = RCC_CIR_LSIRDYF_Msk;
pub const RCC_CIR_LSERDYF_Pos: u32 = 1;
pub const RCC_CIR_LSERDYF_Msk: u32 = 0x1 << RCC_CIR_LSERDYF_Pos;
pub const RCC_CIR_LSERDYF: u32 = RCC_CIR_LSERDYF_Msk;
pub const RCC_CIR_HSIRDYF_Pos: u32 = 2;
pub const RCC_CIR_HSIRDYF_Msk: u32 = 0x1 << RCC_CIR_HSIRDYF_Pos;
pub const RCC_CIR_HSIRDYF: u32 = RCC_CIR_HSIRDYF_Msk;
pub const RCC_CIR_HSERDYF_Pos: u32 = 3;
pub const RCC_CIR_HSERDYF_Msk: u32 = 0x1 << RCC_CIR_HSERDYF_Pos;
pub const RCC_CIR_HSERDYF: u32 = RCC_CIR_HSERDYF_Msk;
pub const RCC_CIR_PLLRDYF_Pos: u32 = 4;
pub const RCC_CIR_PLLRDYF_Msk: u32 = 0x1 << RCC_CIR_PLLRDYF_Pos;
pub const RCC_CIR_PLLRDYF: u32 = RCC_CIR_PLLRDYF_Msk;
pub const RCC_CIR_MSIRDYF_Pos: u32 = 5;
pub const RCC_CIR_MSIRDYF_Msk: u32 = 0x1 << RCC_CIR_MSIRDYF_Pos;
pub const RCC_CIR_MSIRDYF: u32 = RCC_CIR_MSIRDYF_Msk;
pub const RCC_CIR_LSECSSF_Pos: u32 = 6;
pub const RCC_CIR_LSECSSF_Msk: u32 = 0x1 << RCC_CIR_LSECSSF_Pos;
pub const RCC_CIR_LSECSSF: u32 = RCC_CIR_LSECSSF_Msk;
pub const RCC_CIR_CSSF_Pos: u32 = 7;
pub const RCC_CIR_CSSF_Msk: u32 = 0x1 << RCC_CIR_CSSF_Pos;
pub const RCC_CIR_CSSF: u32 = RCC_CIR_CSSF_Msk;
pub const RCC_CIR_LSIRDYIE_Pos: u32 = 8;
pub const RCC_CIR_LSIRDYIE_Msk: u32 = 0x1 << RCC_CIR_LSIRDYIE_Pos;
pub const RCC_CIR_LSIRDYIE: u32 = RCC_CIR_LSIRDYIE_Msk;
pub const RCC_CIR_LSERDYIE_Pos: u32 = 9;
pub const RCC_CIR_LSERDYIE_Msk: u32 = 0x1 << RCC_CIR_LSERDYIE_Pos;
pub const RCC_CIR_LSERDYIE: u32 = RCC_CIR_LSERDYIE_Msk;
pub const RCC_CIR_HSIRDYIE_Pos: u32 = 10;
pub const RCC_CIR_HSIRDYIE_Msk: u32 = 0x1 << RCC_CIR_HSIRDYIE_Pos;
pub const RCC_CIR_HSIRDYIE: u32 = RCC_CIR_HSIRDYIE_Msk;
pub const RCC_CIR_HSERDYIE_Pos: u32 = 11;
pub const RCC_CIR_HSERDYIE_Msk: u32 = 0x1 << RCC_CIR_HSERDYIE_Pos;
pub const RCC_CIR_HSERDYIE: u32 = RCC_CIR_HSERDYIE_Msk;
pub const RCC_CIR_PLLRDYIE_Pos: u32 = 12;
pub const RCC_CIR_PLLRDYIE_Msk: u32 = 0x1 << RCC_CIR_PLLRDYIE_Pos;
pub const RCC_CIR_PLLRDYIE: u32 = RCC_CIR_PLLRDYIE_Msk;
pub const RCC_CIR_MSIRDYIE_Pos: u32 = 13;
pub const RCC_CIR_MSIRDYIE_Msk: u32 = 0x1 << RCC_CIR_MSIRDYIE_Pos;
pub const RCC_CIR_MSIRDYIE: u32 = RCC_CIR_MSIRDYIE_Msk;
pub const RCC_CIR_LSECSSIE_Pos: u32 = 14;
pub const RCC_CIR_LSECSSIE_Msk: u32 = 0x1 << RCC_CIR_LSECSSIE_Pos;
pub const RCC_CIR_LSECSSIE: u32 = RCC_CIR_LSECSSIE_Msk;
pub const RCC_CIR_LSIRDYC_Pos: u32 = 16;
pub const RCC_CIR_LSIRDYC_Msk: u32 = 0x1 << RCC_CIR_LSIRDYC_Pos;
pub const RCC_CIR_LSIRDYC: u32 = RCC_CIR_LSIRDYC_Msk;
pub const RCC_CIR_LSERDYC_Pos: u32 = 17;
pub const RCC_CIR_LSERDYC_Msk: u32 = 0x1 << RCC_CIR_LSERDYC_Pos;
pub const RCC_CIR_LSERDYC: u32 = RCC_CIR_LSERDYC_Msk;
pub const RCC_CIR_HSIRDYC_Pos: u32 = 18;
pub const RCC_CIR_HSIRDYC_Msk: u32 = 0x1 << RCC_CIR_HSIRDYC_Pos;
pub const RCC_CIR_HSIRDYC: u32 = RCC_CIR_HSIRDYC_Msk;
pub const RCC_CIR_HSERDYC_Pos: u32 = 19;
pub const RCC_CIR_HSERDYC_Msk: u32 = 0x1 << RCC_CIR_HSERDYC_Pos;
pub const RCC_CIR_HSERDYC: u32 = RCC_CIR_HSERDYC_Msk;
pub const RCC_CIR_PLLRDYC_Pos: u32 = 20;
pub const RCC_CIR_PLLRDYC_Msk: u32 = 0x1 << RCC_CIR_PLLRDYC_Pos;
pub const RCC_CIR_PLLRDYC: u32 = RCC_CIR_PLLRDYC_Msk;
pub const RCC_CIR_MSIRDYC_Pos: u32 = 21;
pub const RCC_CIR_MSIRDYC_Msk: u32 = 0x1 << RCC_CIR_MSIRDYC_Pos;
pub const RCC_CIR_MSIRDYC: u32 = RCC_CIR_MSIRDYC_Msk;
pub const RCC_CIR_LSECSSC_Pos: u32 = 22;
pub const RCC_CIR_LSECSSC_Msk: u32 = 0x1 << RCC_CIR_LSECSSC_Pos;
pub const RCC_CIR_LSECSSC: u32 = RCC_CIR_LSECSSC_Msk;
pub const RCC_CIR_CSSC_Pos: u32 = 23;
pub const RCC_CIR_CSSC_Msk: u32 = 0x1 << RCC_CIR_CSSC_Pos;
pub const RCC_CIR_CSSC: u32 = RCC_CIR_CSSC_Msk;
pub const RCC_AHBRSTR_GPIOARST_Pos: u32 = 0;
pub const RCC_AHBRSTR_GPIOARST_Msk: u32 = 0x1 << RCC_AHBRSTR_GPIOARST_Pos;
pub const RCC_AHBRSTR_GPIOARST: u32 = RCC_AHBRSTR_GPIOARST_Msk;
pub const RCC_AHBRSTR_GPIOBRST_Pos: u32 = 1;
pub const RCC_AHBRSTR_GPIOBRST_Msk: u32 = 0x1 << RCC_AHBRSTR_GPIOBRST_Pos;
pub const RCC_AHBRSTR_GPIOBRST: u32 = RCC_AHBRSTR_GPIOBRST_Msk;
pub const RCC_AHBRSTR_GPIOCRST_Pos: u32 = 2;
pub const RCC_AHBRSTR_GPIOCRST_Msk: u32 = 0x1 << RCC_AHBRSTR_GPIOCRST_Pos;
pub const RCC_AHBRSTR_GPIOCRST: u32 = RCC_AHBRSTR_GPIOCRST_Msk;
pub const RCC_AHBRSTR_GPIODRST_Pos: u32 = 3;
pub const RCC_AHBRSTR_GPIODRST_Msk: u32 = 0x1 << RCC_AHBRSTR_GPIODRST_Pos;
pub const RCC_AHBRSTR_GPIODRST: u32 = RCC_AHBRSTR_GPIODRST_Msk;
pub const RCC_AHBRSTR_GPIOERST_Pos: u32 = 4;
pub const RCC_AHBRSTR_GPIOERST_Msk: u32 = 0x1 << RCC_AHBRSTR_GPIOERST_Pos;
pub const RCC_AHBRSTR_GPIOERST: u32 = RCC_AHBRSTR_GPIOERST_Msk;
pub const RCC_AHBRSTR_GPIOHRST_Pos: u32 = 5;
pub const RCC_AHBRSTR_GPIOHRST_Msk: u32 = 0x1 << RCC_AHBRSTR_GPIOHRST_Pos;
pub const RCC_AHBRSTR_GPIOHRST: u32 = RCC_AHBRSTR_GPIOHRST_Msk;
pub const RCC_AHBRSTR_GPIOFRST_Pos: u32 = 6;
pub const RCC_AHBRSTR_GPIOFRST_Msk: u32 = 0x1 << RCC_AHBRSTR_GPIOFRST_Pos;
pub const RCC_AHBRSTR_GPIOFRST: u32 = RCC_AHBRSTR_GPIOFRST_Msk;
pub const RCC_AHBRSTR_GPIOGRST_Pos: u32 = 7;
pub const RCC_AHBRSTR_GPIOGRST_Msk: u32 = 0x1 << RCC_AHBRSTR_GPIOGRST_Pos;
pub const RCC_AHBRSTR_GPIOGRST: u32 = RCC_AHBRSTR_GPIOGRST_Msk;
pub const RCC_AHBRSTR_CRCRST_Pos: u32 = 12;
pub const RCC_AHBRSTR_CRCRST_Msk: u32 = 0x1 << RCC_AHBRSTR_CRCRST_Pos;
pub const RCC_AHBRSTR_CRCRST: u32 = RCC_AHBRSTR_CRCRST_Msk;
pub const RCC_AHBRSTR_FLITFRST_Pos: u32 = 15;
pub const RCC_AHBRSTR_FLITFRST_Msk: u32 = 0x1 << RCC_AHBRSTR_FLITFRST_Pos;
pub const RCC_AHBRSTR_FLITFRST: u32 = RCC_AHBRSTR_FLITFRST_Msk;
pub const RCC_AHBRSTR_DMA1RST_Pos: u32 = 24;
pub const RCC_AHBRSTR_DMA1RST_Msk: u32 = 0x1 << RCC_AHBRSTR_DMA1RST_Pos;
pub const RCC_AHBRSTR_DMA1RST: u32 = RCC_AHBRSTR_DMA1RST_Msk;
pub const RCC_AHBRSTR_DMA2RST_Pos: u32 = 25;
pub const RCC_AHBRSTR_DMA2RST_Msk: u32 = 0x1 << RCC_AHBRSTR_DMA2RST_Pos;
pub const RCC_AHBRSTR_DMA2RST: u32 = RCC_AHBRSTR_DMA2RST_Msk;
pub const RCC_APB2RSTR_SYSCFGRST_Pos: u32 = 0;
pub const RCC_APB2RSTR_SYSCFGRST_Msk: u32 = 0x1 << RCC_APB2RSTR_SYSCFGRST_Pos;
pub const RCC_APB2RSTR_SYSCFGRST: u32 = RCC_APB2RSTR_SYSCFGRST_Msk;
pub const RCC_APB2RSTR_TIM9RST_Pos: u32 = 2;
pub const RCC_APB2RSTR_TIM9RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM9RST_Pos;
pub const RCC_APB2RSTR_TIM9RST: u32 = RCC_APB2RSTR_TIM9RST_Msk;
pub const RCC_APB2RSTR_TIM10RST_Pos: u32 = 3;
pub const RCC_APB2RSTR_TIM10RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM10RST_Pos;
pub const RCC_APB2RSTR_TIM10RST: u32 = RCC_APB2RSTR_TIM10RST_Msk;
pub const RCC_APB2RSTR_TIM11RST_Pos: u32 = 4;
pub const RCC_APB2RSTR_TIM11RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM11RST_Pos;
pub const RCC_APB2RSTR_TIM11RST: u32 = RCC_APB2RSTR_TIM11RST_Msk;
pub const RCC_APB2RSTR_ADC1RST_Pos: u32 = 9;
pub const RCC_APB2RSTR_ADC1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_ADC1RST_Pos;
pub const RCC_APB2RSTR_ADC1RST: u32 = RCC_APB2RSTR_ADC1RST_Msk;
pub const RCC_APB2RSTR_SPI1RST_Pos: u32 = 12;
pub const RCC_APB2RSTR_SPI1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_SPI1RST_Pos;
pub const RCC_APB2RSTR_SPI1RST: u32 = RCC_APB2RSTR_SPI1RST_Msk;
pub const RCC_APB2RSTR_USART1RST_Pos: u32 = 14;
pub const RCC_APB2RSTR_USART1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_USART1RST_Pos;
pub const RCC_APB2RSTR_USART1RST: u32 = RCC_APB2RSTR_USART1RST_Msk;
pub const RCC_APB1RSTR_TIM2RST_Pos: u32 = 0;
pub const RCC_APB1RSTR_TIM2RST_Msk: u32 = 0x1 << RCC_APB1RSTR_TIM2RST_Pos;
pub const RCC_APB1RSTR_TIM2RST: u32 = RCC_APB1RSTR_TIM2RST_Msk;
pub const RCC_APB1RSTR_TIM3RST_Pos: u32 = 1;
pub const RCC_APB1RSTR_TIM3RST_Msk: u32 = 0x1 << RCC_APB1RSTR_TIM3RST_Pos;
pub const RCC_APB1RSTR_TIM3RST: u32 = RCC_APB1RSTR_TIM3RST_Msk;
pub const RCC_APB1RSTR_TIM4RST_Pos: u32 = 2;
pub const RCC_APB1RSTR_TIM4RST_Msk: u32 = 0x1 << RCC_APB1RSTR_TIM4RST_Pos;
pub const RCC_APB1RSTR_TIM4RST: u32 = RCC_APB1RSTR_TIM4RST_Msk;
pub const RCC_APB1RSTR_TIM5RST_Pos: u32 = 3;
pub const RCC_APB1RSTR_TIM5RST_Msk: u32 = 0x1 << RCC_APB1RSTR_TIM5RST_Pos;
pub const RCC_APB1RSTR_TIM5RST: u32 = RCC_APB1RSTR_TIM5RST_Msk;
pub const RCC_APB1RSTR_TIM6RST_Pos: u32 = 4;
pub const RCC_APB1RSTR_TIM6RST_Msk: u32 = 0x1 << RCC_APB1RSTR_TIM6RST_Pos;
pub const RCC_APB1RSTR_TIM6RST: u32 = RCC_APB1RSTR_TIM6RST_Msk;
pub const RCC_APB1RSTR_TIM7RST_Pos: u32 = 5;
pub const RCC_APB1RSTR_TIM7RST_Msk: u32 = 0x1 << RCC_APB1RSTR_TIM7RST_Pos;
pub const RCC_APB1RSTR_TIM7RST: u32 = RCC_APB1RSTR_TIM7RST_Msk;
pub const RCC_APB1RSTR_LCDRST_Pos: u32 = 9;
pub const RCC_APB1RSTR_LCDRST_Msk: u32 = 0x1 << RCC_APB1RSTR_LCDRST_Pos;
pub const RCC_APB1RSTR_LCDRST: u32 = RCC_APB1RSTR_LCDRST_Msk;
pub const RCC_APB1RSTR_WWDGRST_Pos: u32 = 11;
pub const RCC_APB1RSTR_WWDGRST_Msk: u32 = 0x1 << RCC_APB1RSTR_WWDGRST_Pos;
pub const RCC_APB1RSTR_WWDGRST: u32 = RCC_APB1RSTR_WWDGRST_Msk;
pub const RCC_APB1RSTR_SPI2RST_Pos: u32 = 14;
pub const RCC_APB1RSTR_SPI2RST_Msk: u32 = 0x1 << RCC_APB1RSTR_SPI2RST_Pos;
pub const RCC_APB1RSTR_SPI2RST: u32 = RCC_APB1RSTR_SPI2RST_Msk;
pub const RCC_APB1RSTR_SPI3RST_Pos: u32 = 15;
pub const RCC_APB1RSTR_SPI3RST_Msk: u32 = 0x1 << RCC_APB1RSTR_SPI3RST_Pos;
pub const RCC_APB1RSTR_SPI3RST: u32 = RCC_APB1RSTR_SPI3RST_Msk;
pub const RCC_APB1RSTR_USART2RST_Pos: u32 = 17;
pub const RCC_APB1RSTR_USART2RST_Msk: u32 = 0x1 << RCC_APB1RSTR_USART2RST_Pos;
pub const RCC_APB1RSTR_USART2RST: u32 = RCC_APB1RSTR_USART2RST_Msk;
pub const RCC_APB1RSTR_USART3RST_Pos: u32 = 18;
pub const RCC_APB1RSTR_USART3RST_Msk: u32 = 0x1 << RCC_APB1RSTR_USART3RST_Pos;
pub const RCC_APB1RSTR_USART3RST: u32 = RCC_APB1RSTR_USART3RST_Msk;
pub const RCC_APB1RSTR_UART4RST_Pos: u32 = 19;
pub const RCC_APB1RSTR_UART4RST_Msk: u32 = 0x1 << RCC_APB1RSTR_UART4RST_Pos;
pub const RCC_APB1RSTR_UART4RST: u32 = RCC_APB1RSTR_UART4RST_Msk;
pub const RCC_APB1RSTR_UART5RST_Pos: u32 = 20;
pub const RCC_APB1RSTR_UART5RST_Msk: u32 = 0x1 << RCC_APB1RSTR_UART5RST_Pos;
pub const RCC_APB1RSTR_UART5RST: u32 = RCC_APB1RSTR_UART5RST_Msk;
pub const RCC_APB1RSTR_I2C1RST_Pos: u32 = 21;
pub const RCC_APB1RSTR_I2C1RST_Msk: u32 = 0x1 << RCC_APB1RSTR_I2C1RST_Pos;
pub const RCC_APB1RSTR_I2C1RST: u32 = RCC_APB1RSTR_I2C1RST_Msk;
pub const RCC_APB1RSTR_I2C2RST_Pos: u32 = 22;
pub const RCC_APB1RSTR_I2C2RST_Msk: u32 = 0x1 << RCC_APB1RSTR_I2C2RST_Pos;
pub const RCC_APB1RSTR_I2C2RST: u32 = RCC_APB1RSTR_I2C2RST_Msk;
pub const RCC_APB1RSTR_USBRST_Pos: u32 = 23;
pub const RCC_APB1RSTR_USBRST_Msk: u32 = 0x1 << RCC_APB1RSTR_USBRST_Pos;
pub const RCC_APB1RSTR_USBRST: u32 = RCC_APB1RSTR_USBRST_Msk;
pub const RCC_APB1RSTR_PWRRST_Pos: u32 = 28;
pub const RCC_APB1RSTR_PWRRST_Msk: u32 = 0x1 << RCC_APB1RSTR_PWRRST_Pos;
pub const RCC_APB1RSTR_PWRRST: u32 = RCC_APB1RSTR_PWRRST_Msk;
pub const RCC_APB1RSTR_DACRST_Pos: u32 = 29;
pub const RCC_APB1RSTR_DACRST_Msk: u32 = 0x1 << RCC_APB1RSTR_DACRST_Pos;
pub const RCC_APB1RSTR_DACRST: u32 = RCC_APB1RSTR_DACRST_Msk;
pub const RCC_APB1RSTR_COMPRST_Pos: u32 = 31;
pub const RCC_APB1RSTR_COMPRST_Msk: u32 = 0x1 << RCC_APB1RSTR_COMPRST_Pos;
pub const RCC_APB1RSTR_COMPRST: u32 = RCC_APB1RSTR_COMPRST_Msk;
pub const RCC_AHBENR_GPIOAEN_Pos: u32 = 0;
pub const RCC_AHBENR_GPIOAEN_Msk: u32 = 0x1 << RCC_AHBENR_GPIOAEN_Pos;
pub const RCC_AHBENR_GPIOAEN: u32 = RCC_AHBENR_GPIOAEN_Msk;
pub const RCC_AHBENR_GPIOBEN_Pos: u32 = 1;
pub const RCC_AHBENR_GPIOBEN_Msk: u32 = 0x1 << RCC_AHBENR_GPIOBEN_Pos;
pub const RCC_AHBENR_GPIOBEN: u32 = RCC_AHBENR_GPIOBEN_Msk;
pub const RCC_AHBENR_GPIOCEN_Pos: u32 = 2;
pub const RCC_AHBENR_GPIOCEN_Msk: u32 = 0x1 << RCC_AHBENR_GPIOCEN_Pos;
pub const RCC_AHBENR_GPIOCEN: u32 = RCC_AHBENR_GPIOCEN_Msk;
pub const RCC_AHBENR_GPIODEN_Pos: u32 = 3;
pub const RCC_AHBENR_GPIODEN_Msk: u32 = 0x1 << RCC_AHBENR_GPIODEN_Pos;
pub const RCC_AHBENR_GPIODEN: u32 = RCC_AHBENR_GPIODEN_Msk;
pub const RCC_AHBENR_GPIOEEN_Pos: u32 = 4;
pub const RCC_AHBENR_GPIOEEN_Msk: u32 = 0x1 << RCC_AHBENR_GPIOEEN_Pos;
pub const RCC_AHBENR_GPIOEEN: u32 = RCC_AHBENR_GPIOEEN_Msk;
pub const RCC_AHBENR_GPIOHEN_Pos: u32 = 5;
pub const RCC_AHBENR_GPIOHEN_Msk: u32 = 0x1 << RCC_AHBENR_GPIOHEN_Pos;
pub const RCC_AHBENR_GPIOHEN: u32 = RCC_AHBENR_GPIOHEN_Msk;
pub const RCC_AHBENR_GPIOFEN_Pos: u32 = 6;
pub const RCC_AHBENR_GPIOFEN_Msk: u32 = 0x1 << RCC_AHBENR_GPIOFEN_Pos;
pub const RCC_AHBENR_GPIOFEN: u32 = RCC_AHBENR_GPIOFEN_Msk;
pub const RCC_AHBENR_GPIOGEN_Pos: u32 = 7;
pub const RCC_AHBENR_GPIOGEN_Msk: u32 = 0x1 << RCC_AHBENR_GPIOGEN_Pos;
pub const RCC_AHBENR_GPIOGEN: u32 = RCC_AHBENR_GPIOGEN_Msk;
pub const RCC_AHBENR_CRCEN_Pos: u32 = 12;
pub const RCC_AHBENR_CRCEN_Msk: u32 = 0x1 << RCC_AHBENR_CRCEN_Pos;
pub const RCC_AHBENR_CRCEN: u32 = RCC_AHBENR_CRCEN_Msk;
pub const RCC_AHBENR_FLITFEN_Pos: u32 = 15;
pub const RCC_AHBENR_FLITFEN_Msk: u32 = 0x1 << RCC_AHBENR_FLITFEN_Pos;
pub const RCC_AHBENR_FLITFEN: u32 = RCC_AHBENR_FLITFEN_Msk;
pub const RCC_AHBENR_DMA1EN_Pos: u32 = 24;
pub const RCC_AHBENR_DMA1EN_Msk: u32 = 0x1 << RCC_AHBENR_DMA1EN_Pos;
pub const RCC_AHBENR_DMA1EN: u32 = RCC_AHBENR_DMA1EN_Msk;
pub const RCC_AHBENR_DMA2EN_Pos: u32 = 25;
pub const RCC_AHBENR_DMA2EN_Msk: u32 = 0x1 << RCC_AHBENR_DMA2EN_Pos;
pub const RCC_AHBENR_DMA2EN: u32 = RCC_AHBENR_DMA2EN_Msk;
pub const RCC_APB2ENR_SYSCFGEN_Pos: u32 = 0;
pub const RCC_APB2ENR_SYSCFGEN_Msk: u32 = 0x1 << RCC_APB2ENR_SYSCFGEN_Pos;
pub const RCC_APB2ENR_SYSCFGEN: u32 = RCC_APB2ENR_SYSCFGEN_Msk;
pub const RCC_APB2ENR_TIM9EN_Pos: u32 = 2;
pub const RCC_APB2ENR_TIM9EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM9EN_Pos;
pub const RCC_APB2ENR_TIM9EN: u32 = RCC_APB2ENR_TIM9EN_Msk;
pub const RCC_APB2ENR_TIM10EN_Pos: u32 = 3;
pub const RCC_APB2ENR_TIM10EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM10EN_Pos;
pub const RCC_APB2ENR_TIM10EN: u32 = RCC_APB2ENR_TIM10EN_Msk;
pub const RCC_APB2ENR_TIM11EN_Pos: u32 = 4;
pub const RCC_APB2ENR_TIM11EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM11EN_Pos;
pub const RCC_APB2ENR_TIM11EN: u32 = RCC_APB2ENR_TIM11EN_Msk;
pub const RCC_APB2ENR_ADC1EN_Pos: u32 = 9;
pub const RCC_APB2ENR_ADC1EN_Msk: u32 = 0x1 << RCC_APB2ENR_ADC1EN_Pos;
pub const RCC_APB2ENR_ADC1EN: u32 = RCC_APB2ENR_ADC1EN_Msk;
pub const RCC_APB2ENR_SPI1EN_Pos: u32 = 12;
pub const RCC_APB2ENR_SPI1EN_Msk: u32 = 0x1 << RCC_APB2ENR_SPI1EN_Pos;
pub const RCC_APB2ENR_SPI1EN: u32 = RCC_APB2ENR_SPI1EN_Msk;
pub const RCC_APB2ENR_USART1EN_Pos: u32 = 14;
pub const RCC_APB2ENR_USART1EN_Msk: u32 = 0x1 << RCC_APB2ENR_USART1EN_Pos;
pub const RCC_APB2ENR_USART1EN: u32 = RCC_APB2ENR_USART1EN_Msk;
pub const RCC_APB1ENR_TIM2EN_Pos: u32 = 0;
pub const RCC_APB1ENR_TIM2EN_Msk: u32 = 0x1 << RCC_APB1ENR_TIM2EN_Pos;
pub const RCC_APB1ENR_TIM2EN: u32 = RCC_APB1ENR_TIM2EN_Msk;
pub const RCC_APB1ENR_TIM3EN_Pos: u32 = 1;
pub const RCC_APB1ENR_TIM3EN_Msk: u32 = 0x1 << RCC_APB1ENR_TIM3EN_Pos;
pub const RCC_APB1ENR_TIM3EN: u32 = RCC_APB1ENR_TIM3EN_Msk;
pub const RCC_APB1ENR_TIM4EN_Pos: u32 = 2;
pub const RCC_APB1ENR_TIM4EN_Msk: u32 = 0x1 << RCC_APB1ENR_TIM4EN_Pos;
pub const RCC_APB1ENR_TIM4EN: u32 = RCC_APB1ENR_TIM4EN_Msk;
pub const RCC_APB1ENR_TIM5EN_Pos: u32 = 3;
pub const RCC_APB1ENR_TIM5EN_Msk: u32 = 0x1 << RCC_APB1ENR_TIM5EN_Pos;
pub const RCC_APB1ENR_TIM5EN: u32 = RCC_APB1ENR_TIM5EN_Msk;
pub const RCC_APB1ENR_TIM6EN_Pos: u32 = 4;
pub const RCC_APB1ENR_TIM6EN_Msk: u32 = 0x1 << RCC_APB1ENR_TIM6EN_Pos;
pub const RCC_APB1ENR_TIM6EN: u32 = RCC_APB1ENR_TIM6EN_Msk;
pub const RCC_APB1ENR_TIM7EN_Pos: u32 = 5;
pub const RCC_APB1ENR_TIM7EN_Msk: u32 = 0x1 << RCC_APB1ENR_TIM7EN_Pos;
pub const RCC_APB1ENR_TIM7EN: u32 = RCC_APB1ENR_TIM7EN_Msk;
pub const RCC_APB1ENR_LCDEN_Pos: u32 = 9;
pub const RCC_APB1ENR_LCDEN_Msk: u32 = 0x1 << RCC_APB1ENR_LCDEN_Pos;
pub const RCC_APB1ENR_LCDEN: u32 = RCC_APB1ENR_LCDEN_Msk;
pub const RCC_APB1ENR_WWDGEN_Pos: u32 = 11;
pub const RCC_APB1ENR_WWDGEN_Msk: u32 = 0x1 << RCC_APB1ENR_WWDGEN_Pos;
pub const RCC_APB1ENR_WWDGEN: u32 = RCC_APB1ENR_WWDGEN_Msk;
pub const RCC_APB1ENR_SPI2EN_Pos: u32 = 14;
pub const RCC_APB1ENR_SPI2EN_Msk: u32 = 0x1 << RCC_APB1ENR_SPI2EN_Pos;
pub const RCC_APB1ENR_SPI2EN: u32 = RCC_APB1ENR_SPI2EN_Msk;
pub const RCC_APB1ENR_SPI3EN_Pos: u32 = 15;
pub const RCC_APB1ENR_SPI3EN_Msk: u32 = 0x1 << RCC_APB1ENR_SPI3EN_Pos;
pub const RCC_APB1ENR_SPI3EN: u32 = RCC_APB1ENR_SPI3EN_Msk;
pub const RCC_APB1ENR_USART2EN_Pos: u32 = 17;
pub const RCC_APB1ENR_USART2EN_Msk: u32 = 0x1 << RCC_APB1ENR_USART2EN_Pos;
pub const RCC_APB1ENR_USART2EN: u32 = RCC_APB1ENR_USART2EN_Msk;
pub const RCC_APB1ENR_USART3EN_Pos: u32 = 18;
pub const RCC_APB1ENR_USART3EN_Msk: u32 = 0x1 << RCC_APB1ENR_USART3EN_Pos;
pub const RCC_APB1ENR_USART3EN: u32 = RCC_APB1ENR_USART3EN_Msk;
pub const RCC_APB1ENR_UART4EN_Pos: u32 = 19;
pub const RCC_APB1ENR_UART4EN_Msk: u32 = 0x1 << RCC_APB1ENR_UART4EN_Pos;
pub const RCC_APB1ENR_UART4EN: u32 = RCC_APB1ENR_UART4EN_Msk;
pub const RCC_APB1ENR_UART5EN_Pos: u32 = 20;
pub const RCC_APB1ENR_UART5EN_Msk: u32 = 0x1 << RCC_APB1ENR_UART5EN_Pos;
pub const RCC_APB1ENR_UART5EN: u32 = RCC_APB1ENR_UART5EN_Msk;
pub const RCC_APB1ENR_I2C1EN_Pos: u32 = 21;
pub const RCC_APB1ENR_I2C1EN_Msk: u32 = 0x1 << RCC_APB1ENR_I2C1EN_Pos;
pub const RCC_APB1ENR_I2C1EN: u32 = RCC_APB1ENR_I2C1EN_Msk;
pub const RCC_APB1ENR_I2C2EN_Pos: u32 = 22;
pub const RCC_APB1ENR_I2C2EN_Msk: u32 = 0x1 << RCC_APB1ENR_I2C2EN_Pos;
pub const RCC_APB1ENR_I2C2EN: u32 = RCC_APB1ENR_I2C2EN_Msk;
pub const RCC_APB1ENR_USBEN_Pos: u32 = 23;
pub const RCC_APB1ENR_USBEN_Msk: u32 = 0x1 << RCC_APB1ENR_USBEN_Pos;
pub const RCC_APB1ENR_USBEN: u32 = RCC_APB1ENR_USBEN_Msk;
pub const RCC_APB1ENR_PWREN_Pos: u32 = 28;
pub const RCC_APB1ENR_PWREN_Msk: u32 = 0x1 << RCC_APB1ENR_PWREN_Pos;
pub const RCC_APB1ENR_PWREN: u32 = RCC_APB1ENR_PWREN_Msk;
pub const RCC_APB1ENR_DACEN_Pos: u32 = 29;
pub const RCC_APB1ENR_DACEN_Msk: u32 = 0x1 << RCC_APB1ENR_DACEN_Pos;
pub const RCC_APB1ENR_DACEN: u32 = RCC_APB1ENR_DACEN_Msk;
pub const RCC_APB1ENR_COMPEN_Pos: u32 = 31;
pub const RCC_APB1ENR_COMPEN_Msk: u32 = 0x1 << RCC_APB1ENR_COMPEN_Pos;
pub const RCC_APB1ENR_COMPEN: u32 = RCC_APB1ENR_COMPEN_Msk;
pub const RCC_AHBLPENR_GPIOALPEN_Pos: u32 = 0;
pub const RCC_AHBLPENR_GPIOALPEN_Msk: u32 = 0x1 << RCC_AHBLPENR_GPIOALPEN_Pos;
pub const RCC_AHBLPENR_GPIOALPEN: u32 = RCC_AHBLPENR_GPIOALPEN_Msk;
pub const RCC_AHBLPENR_GPIOBLPEN_Pos: u32 = 1;
pub const RCC_AHBLPENR_GPIOBLPEN_Msk: u32 = 0x1 << RCC_AHBLPENR_GPIOBLPEN_Pos;
pub const RCC_AHBLPENR_GPIOBLPEN: u32 = RCC_AHBLPENR_GPIOBLPEN_Msk;
pub const RCC_AHBLPENR_GPIOCLPEN_Pos: u32 = 2;
pub const RCC_AHBLPENR_GPIOCLPEN_Msk: u32 = 0x1 << RCC_AHBLPENR_GPIOCLPEN_Pos;
pub const RCC_AHBLPENR_GPIOCLPEN: u32 = RCC_AHBLPENR_GPIOCLPEN_Msk;
pub const RCC_AHBLPENR_GPIODLPEN_Pos: u32 = 3;
pub const RCC_AHBLPENR_GPIODLPEN_Msk: u32 = 0x1 << RCC_AHBLPENR_GPIODLPEN_Pos;
pub const RCC_AHBLPENR_GPIODLPEN: u32 = RCC_AHBLPENR_GPIODLPEN_Msk;
pub const RCC_AHBLPENR_GPIOELPEN_Pos: u32 = 4;
pub const RCC_AHBLPENR_GPIOELPEN_Msk: u32 = 0x1 << RCC_AHBLPENR_GPIOELPEN_Pos;
pub const RCC_AHBLPENR_GPIOELPEN: u32 = RCC_AHBLPENR_GPIOELPEN_Msk;
pub const RCC_AHBLPENR_GPIOHLPEN_Pos: u32 = 5;
pub const RCC_AHBLPENR_GPIOHLPEN_Msk: u32 = 0x1 << RCC_AHBLPENR_GPIOHLPEN_Pos;
pub const RCC_AHBLPENR_GPIOHLPEN: u32 = RCC_AHBLPENR_GPIOHLPEN_Msk;
pub const RCC_AHBLPENR_GPIOFLPEN_Pos: u32 = 6;
pub const RCC_AHBLPENR_GPIOFLPEN_Msk: u32 = 0x1 << RCC_AHBLPENR_GPIOFLPEN_Pos;
pub const RCC_AHBLPENR_GPIOFLPEN: u32 = RCC_AHBLPENR_GPIOFLPEN_Msk;
pub const RCC_AHBLPENR_GPIOGLPEN_Pos: u32 = 7;
pub const RCC_AHBLPENR_GPIOGLPEN_Msk: u32 = 0x1 << RCC_AHBLPENR_GPIOGLPEN_Pos;
pub const RCC_AHBLPENR_GPIOGLPEN: u32 = RCC_AHBLPENR_GPIOGLPEN_Msk;
pub const RCC_AHBLPENR_CRCLPEN_Pos: u32 = 12;
pub const RCC_AHBLPENR_CRCLPEN_Msk: u32 = 0x1 << RCC_AHBLPENR_CRCLPEN_Pos;
pub const RCC_AHBLPENR_CRCLPEN: u32 = RCC_AHBLPENR_CRCLPEN_Msk;
pub const RCC_AHBLPENR_FLITFLPEN_Pos: u32 = 15;
pub const RCC_AHBLPENR_FLITFLPEN_Msk: u32 = 0x1 << RCC_AHBLPENR_FLITFLPEN_Pos;
pub const RCC_AHBLPENR_FLITFLPEN: u32 = RCC_AHBLPENR_FLITFLPEN_Msk;
pub const RCC_AHBLPENR_SRAMLPEN_Pos: u32 = 16;
pub const RCC_AHBLPENR_SRAMLPEN_Msk: u32 = 0x1 << RCC_AHBLPENR_SRAMLPEN_Pos;
pub const RCC_AHBLPENR_SRAMLPEN: u32 = RCC_AHBLPENR_SRAMLPEN_Msk;
pub const RCC_AHBLPENR_DMA1LPEN_Pos: u32 = 24;
pub const RCC_AHBLPENR_DMA1LPEN_Msk: u32 = 0x1 << RCC_AHBLPENR_DMA1LPEN_Pos;
pub const RCC_AHBLPENR_DMA1LPEN: u32 = RCC_AHBLPENR_DMA1LPEN_Msk;
pub const RCC_AHBLPENR_DMA2LPEN_Pos: u32 = 25;
pub const RCC_AHBLPENR_DMA2LPEN_Msk: u32 = 0x1 << RCC_AHBLPENR_DMA2LPEN_Pos;
pub const RCC_AHBLPENR_DMA2LPEN: u32 = RCC_AHBLPENR_DMA2LPEN_Msk;
pub const RCC_APB2LPENR_SYSCFGLPEN_Pos: u32 = 0;
pub const RCC_APB2LPENR_SYSCFGLPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_SYSCFGLPEN_Pos;
pub const RCC_APB2LPENR_SYSCFGLPEN: u32 = RCC_APB2LPENR_SYSCFGLPEN_Msk;
pub const RCC_APB2LPENR_TIM9LPEN_Pos: u32 = 2;
pub const RCC_APB2LPENR_TIM9LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_TIM9LPEN_Pos;
pub const RCC_APB2LPENR_TIM9LPEN: u32 = RCC_APB2LPENR_TIM9LPEN_Msk;
pub const RCC_APB2LPENR_TIM10LPEN_Pos: u32 = 3;
pub const RCC_APB2LPENR_TIM10LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_TIM10LPEN_Pos;
pub const RCC_APB2LPENR_TIM10LPEN: u32 = RCC_APB2LPENR_TIM10LPEN_Msk;
pub const RCC_APB2LPENR_TIM11LPEN_Pos: u32 = 4;
pub const RCC_APB2LPENR_TIM11LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_TIM11LPEN_Pos;
pub const RCC_APB2LPENR_TIM11LPEN: u32 = RCC_APB2LPENR_TIM11LPEN_Msk;
pub const RCC_APB2LPENR_ADC1LPEN_Pos: u32 = 9;
pub const RCC_APB2LPENR_ADC1LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_ADC1LPEN_Pos;
pub const RCC_APB2LPENR_ADC1LPEN: u32 = RCC_APB2LPENR_ADC1LPEN_Msk;
pub const RCC_APB2LPENR_SPI1LPEN_Pos: u32 = 12;
pub const RCC_APB2LPENR_SPI1LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_SPI1LPEN_Pos;
pub const RCC_APB2LPENR_SPI1LPEN: u32 = RCC_APB2LPENR_SPI1LPEN_Msk;
pub const RCC_APB2LPENR_USART1LPEN_Pos: u32 = 14;
pub const RCC_APB2LPENR_USART1LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_USART1LPEN_Pos;
pub const RCC_APB2LPENR_USART1LPEN: u32 = RCC_APB2LPENR_USART1LPEN_Msk;
pub const RCC_APB1LPENR_TIM2LPEN_Pos: u32 = 0;
pub const RCC_APB1LPENR_TIM2LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_TIM2LPEN_Pos;
pub const RCC_APB1LPENR_TIM2LPEN: u32 = RCC_APB1LPENR_TIM2LPEN_Msk;
pub const RCC_APB1LPENR_TIM3LPEN_Pos: u32 = 1;
pub const RCC_APB1LPENR_TIM3LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_TIM3LPEN_Pos;
pub const RCC_APB1LPENR_TIM3LPEN: u32 = RCC_APB1LPENR_TIM3LPEN_Msk;
pub const RCC_APB1LPENR_TIM4LPEN_Pos: u32 = 2;
pub const RCC_APB1LPENR_TIM4LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_TIM4LPEN_Pos;
pub const RCC_APB1LPENR_TIM4LPEN: u32 = RCC_APB1LPENR_TIM4LPEN_Msk;
pub const RCC_APB1LPENR_TIM5LPEN_Pos: u32 = 3;
pub const RCC_APB1LPENR_TIM5LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_TIM5LPEN_Pos;
pub const RCC_APB1LPENR_TIM5LPEN: u32 = RCC_APB1LPENR_TIM5LPEN_Msk;
pub const RCC_APB1LPENR_TIM6LPEN_Pos: u32 = 4;
pub const RCC_APB1LPENR_TIM6LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_TIM6LPEN_Pos;
pub const RCC_APB1LPENR_TIM6LPEN: u32 = RCC_APB1LPENR_TIM6LPEN_Msk;
pub const RCC_APB1LPENR_TIM7LPEN_Pos: u32 = 5;
pub const RCC_APB1LPENR_TIM7LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_TIM7LPEN_Pos;
pub const RCC_APB1LPENR_TIM7LPEN: u32 = RCC_APB1LPENR_TIM7LPEN_Msk;
pub const RCC_APB1LPENR_LCDLPEN_Pos: u32 = 9;
pub const RCC_APB1LPENR_LCDLPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_LCDLPEN_Pos;
pub const RCC_APB1LPENR_LCDLPEN: u32 = RCC_APB1LPENR_LCDLPEN_Msk;
pub const RCC_APB1LPENR_WWDGLPEN_Pos: u32 = 11;
pub const RCC_APB1LPENR_WWDGLPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_WWDGLPEN_Pos;
pub const RCC_APB1LPENR_WWDGLPEN: u32 = RCC_APB1LPENR_WWDGLPEN_Msk;
pub const RCC_APB1LPENR_SPI2LPEN_Pos: u32 = 14;
pub const RCC_APB1LPENR_SPI2LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_SPI2LPEN_Pos;
pub const RCC_APB1LPENR_SPI2LPEN: u32 = RCC_APB1LPENR_SPI2LPEN_Msk;
pub const RCC_APB1LPENR_SPI3LPEN_Pos: u32 = 15;
pub const RCC_APB1LPENR_SPI3LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_SPI3LPEN_Pos;
pub const RCC_APB1LPENR_SPI3LPEN: u32 = RCC_APB1LPENR_SPI3LPEN_Msk;
pub const RCC_APB1LPENR_USART2LPEN_Pos: u32 = 17;
pub const RCC_APB1LPENR_USART2LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_USART2LPEN_Pos;
pub const RCC_APB1LPENR_USART2LPEN: u32 = RCC_APB1LPENR_USART2LPEN_Msk;
pub const RCC_APB1LPENR_USART3LPEN_Pos: u32 = 18;
pub const RCC_APB1LPENR_USART3LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_USART3LPEN_Pos;
pub const RCC_APB1LPENR_USART3LPEN: u32 = RCC_APB1LPENR_USART3LPEN_Msk;
pub const RCC_APB1LPENR_UART4LPEN_Pos: u32 = 19;
pub const RCC_APB1LPENR_UART4LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_UART4LPEN_Pos;
pub const RCC_APB1LPENR_UART4LPEN: u32 = RCC_APB1LPENR_UART4LPEN_Msk;
pub const RCC_APB1LPENR_UART5LPEN_Pos: u32 = 20;
pub const RCC_APB1LPENR_UART5LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_UART5LPEN_Pos;
pub const RCC_APB1LPENR_UART5LPEN: u32 = RCC_APB1LPENR_UART5LPEN_Msk;
pub const RCC_APB1LPENR_I2C1LPEN_Pos: u32 = 21;
pub const RCC_APB1LPENR_I2C1LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_I2C1LPEN_Pos;
pub const RCC_APB1LPENR_I2C1LPEN: u32 = RCC_APB1LPENR_I2C1LPEN_Msk;
pub const RCC_APB1LPENR_I2C2LPEN_Pos: u32 = 22;
pub const RCC_APB1LPENR_I2C2LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_I2C2LPEN_Pos;
pub const RCC_APB1LPENR_I2C2LPEN: u32 = RCC_APB1LPENR_I2C2LPEN_Msk;
pub const RCC_APB1LPENR_USBLPEN_Pos: u32 = 23;
pub const RCC_APB1LPENR_USBLPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_USBLPEN_Pos;
pub const RCC_APB1LPENR_USBLPEN: u32 = RCC_APB1LPENR_USBLPEN_Msk;
pub const RCC_APB1LPENR_PWRLPEN_Pos: u32 = 28;
pub const RCC_APB1LPENR_PWRLPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_PWRLPEN_Pos;
pub const RCC_APB1LPENR_PWRLPEN: u32 = RCC_APB1LPENR_PWRLPEN_Msk;
pub const RCC_APB1LPENR_DACLPEN_Pos: u32 = 29;
pub const RCC_APB1LPENR_DACLPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_DACLPEN_Pos;
pub const RCC_APB1LPENR_DACLPEN: u32 = RCC_APB1LPENR_DACLPEN_Msk;
pub const RCC_APB1LPENR_COMPLPEN_Pos: u32 = 31;
pub const RCC_APB1LPENR_COMPLPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_COMPLPEN_Pos;
pub const RCC_APB1LPENR_COMPLPEN: u32 = RCC_APB1LPENR_COMPLPEN_Msk;
pub const RCC_CSR_LSION_Pos: u32 = 0;
pub const RCC_CSR_LSION_Msk: u32 = 0x1 << RCC_CSR_LSION_Pos;
pub const RCC_CSR_LSION: u32 = RCC_CSR_LSION_Msk;
pub const RCC_CSR_LSIRDY_Pos: u32 = 1;
pub const RCC_CSR_LSIRDY_Msk: u32 = 0x1 << RCC_CSR_LSIRDY_Pos;
pub const RCC_CSR_LSIRDY: u32 = RCC_CSR_LSIRDY_Msk;
pub const RCC_CSR_LSEON_Pos: u32 = 8;
pub const RCC_CSR_LSEON_Msk: u32 = 0x1 << RCC_CSR_LSEON_Pos;
pub const RCC_CSR_LSEON: u32 = RCC_CSR_LSEON_Msk;
pub const RCC_CSR_LSERDY_Pos: u32 = 9;
pub const RCC_CSR_LSERDY_Msk: u32 = 0x1 << RCC_CSR_LSERDY_Pos;
pub const RCC_CSR_LSERDY: u32 = RCC_CSR_LSERDY_Msk;
pub const RCC_CSR_LSEBYP_Pos: u32 = 10;
pub const RCC_CSR_LSEBYP_Msk: u32 = 0x1 << RCC_CSR_LSEBYP_Pos;
pub const RCC_CSR_LSEBYP: u32 = RCC_CSR_LSEBYP_Msk;
pub const RCC_CSR_LSECSSON_Pos: u32 = 11;
pub const RCC_CSR_LSECSSON_Msk: u32 = 0x1 << RCC_CSR_LSECSSON_Pos;
pub const RCC_CSR_LSECSSON: u32 = RCC_CSR_LSECSSON_Msk;
pub const RCC_CSR_LSECSSD_Pos: u32 = 12;
pub const RCC_CSR_LSECSSD_Msk: u32 = 0x1 << RCC_CSR_LSECSSD_Pos;
pub const RCC_CSR_LSECSSD: u32 = RCC_CSR_LSECSSD_Msk;
pub const RCC_CSR_RTCSEL_Pos: u32 = 16;
pub const RCC_CSR_RTCSEL_Msk: u32 = 0x3 << RCC_CSR_RTCSEL_Pos;
pub const RCC_CSR_RTCSEL: u32 = RCC_CSR_RTCSEL_Msk;
pub const RCC_CSR_RTCSEL_0: u32 = 0x1 << RCC_CSR_RTCSEL_Pos;
pub const RCC_CSR_RTCSEL_1: u32 = 0x2 << RCC_CSR_RTCSEL_Pos;
pub const RCC_CSR_RTCSEL_NOCLOCK: u32 = 0x00000000;
pub const RCC_CSR_RTCSEL_LSE_Pos: u32 = 16;
pub const RCC_CSR_RTCSEL_LSE_Msk: u32 = 0x1 << RCC_CSR_RTCSEL_LSE_Pos;
pub const RCC_CSR_RTCSEL_LSE: u32 = RCC_CSR_RTCSEL_LSE_Msk;
pub const RCC_CSR_RTCSEL_LSI_Pos: u32 = 17;
pub const RCC_CSR_RTCSEL_LSI_Msk: u32 = 0x1 << RCC_CSR_RTCSEL_LSI_Pos;
pub const RCC_CSR_RTCSEL_LSI: u32 = RCC_CSR_RTCSEL_LSI_Msk;
pub const RCC_CSR_RTCSEL_HSE_Pos: u32 = 16;
pub const RCC_CSR_RTCSEL_HSE_Msk: u32 = 0x3 << RCC_CSR_RTCSEL_HSE_Pos;
pub const RCC_CSR_RTCSEL_HSE: u32 = RCC_CSR_RTCSEL_HSE_Msk;
pub const RCC_CSR_RTCEN_Pos: u32 = 22;
pub const RCC_CSR_RTCEN_Msk: u32 = 0x1 << RCC_CSR_RTCEN_Pos;
pub const RCC_CSR_RTCEN: u32 = RCC_CSR_RTCEN_Msk;
pub const RCC_CSR_RTCRST_Pos: u32 = 23;
pub const RCC_CSR_RTCRST_Msk: u32 = 0x1 << RCC_CSR_RTCRST_Pos;
pub const RCC_CSR_RTCRST: u32 = RCC_CSR_RTCRST_Msk;
pub const RCC_CSR_RMVF_Pos: u32 = 24;
pub const RCC_CSR_RMVF_Msk: u32 = 0x1 << RCC_CSR_RMVF_Pos;
pub const RCC_CSR_RMVF: u32 = RCC_CSR_RMVF_Msk;
pub const RCC_CSR_OBLRSTF_Pos: u32 = 25;
pub const RCC_CSR_OBLRSTF_Msk: u32 = 0x1 << RCC_CSR_OBLRSTF_Pos;
pub const RCC_CSR_OBLRSTF: u32 = RCC_CSR_OBLRSTF_Msk;
pub const RCC_CSR_PINRSTF_Pos: u32 = 26;
pub const RCC_CSR_PINRSTF_Msk: u32 = 0x1 << RCC_CSR_PINRSTF_Pos;
pub const RCC_CSR_PINRSTF: u32 = RCC_CSR_PINRSTF_Msk;
pub const RCC_CSR_PORRSTF_Pos: u32 = 27;
pub const RCC_CSR_PORRSTF_Msk: u32 = 0x1 << RCC_CSR_PORRSTF_Pos;
pub const RCC_CSR_PORRSTF: u32 = RCC_CSR_PORRSTF_Msk;
pub const RCC_CSR_SFTRSTF_Pos: u32 = 28;
pub const RCC_CSR_SFTRSTF_Msk: u32 = 0x1 << RCC_CSR_SFTRSTF_Pos;
pub const RCC_CSR_SFTRSTF: u32 = RCC_CSR_SFTRSTF_Msk;
pub const RCC_CSR_IWDGRSTF_Pos: u32 = 29;
pub const RCC_CSR_IWDGRSTF_Msk: u32 = 0x1 << RCC_CSR_IWDGRSTF_Pos;
pub const RCC_CSR_IWDGRSTF: u32 = RCC_CSR_IWDGRSTF_Msk;
pub const RCC_CSR_WWDGRSTF_Pos: u32 = 30;
pub const RCC_CSR_WWDGRSTF_Msk: u32 = 0x1 << RCC_CSR_WWDGRSTF_Pos;
pub const RCC_CSR_WWDGRSTF: u32 = RCC_CSR_WWDGRSTF_Msk;
pub const RCC_CSR_LPWRRSTF_Pos: u32 = 31;
pub const RCC_CSR_LPWRRSTF_Msk: u32 = 0x1 << RCC_CSR_LPWRRSTF_Pos;
pub const RCC_CSR_LPWRRSTF: u32 = RCC_CSR_LPWRRSTF_Msk;
pub const RTC_TR_PM_Pos: u32 = 22;
pub const RTC_TR_PM_Msk: u32 = 0x1 << RTC_TR_PM_Pos;
pub const RTC_TR_PM: u32 = RTC_TR_PM_Msk;
pub const RTC_TR_HT_Pos: u32 = 20;
pub const RTC_TR_HT_Msk: u32 = 0x3 << RTC_TR_HT_Pos;
pub const RTC_TR_HT: u32 = RTC_TR_HT_Msk;
pub const RTC_TR_HT_0: u32 = 0x1 << RTC_TR_HT_Pos;
pub const RTC_TR_HT_1: u32 = 0x2 << RTC_TR_HT_Pos;
pub const RTC_TR_HU_Pos: u32 = 16;
pub const RTC_TR_HU_Msk: u32 = 0xF << RTC_TR_HU_Pos;
pub const RTC_TR_HU: u32 = RTC_TR_HU_Msk;
pub const RTC_TR_HU_0: u32 = 0x1 << RTC_TR_HU_Pos;
pub const RTC_TR_HU_1: u32 = 0x2 << RTC_TR_HU_Pos;
pub const RTC_TR_HU_2: u32 = 0x4 << RTC_TR_HU_Pos;
pub const RTC_TR_HU_3: u32 = 0x8 << RTC_TR_HU_Pos;
pub const RTC_TR_MNT_Pos: u32 = 12;
pub const RTC_TR_MNT_Msk: u32 = 0x7 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNT: u32 = RTC_TR_MNT_Msk;
pub const RTC_TR_MNT_0: u32 = 0x1 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNT_1: u32 = 0x2 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNT_2: u32 = 0x4 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNU_Pos: u32 = 8;
pub const RTC_TR_MNU_Msk: u32 = 0xF << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU: u32 = RTC_TR_MNU_Msk;
pub const RTC_TR_MNU_0: u32 = 0x1 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU_1: u32 = 0x2 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU_2: u32 = 0x4 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU_3: u32 = 0x8 << RTC_TR_MNU_Pos;
pub const RTC_TR_ST_Pos: u32 = 4;
pub const RTC_TR_ST_Msk: u32 = 0x7 << RTC_TR_ST_Pos;
pub const RTC_TR_ST: u32 = RTC_TR_ST_Msk;
pub const RTC_TR_ST_0: u32 = 0x1 << RTC_TR_ST_Pos;
pub const RTC_TR_ST_1: u32 = 0x2 << RTC_TR_ST_Pos;
pub const RTC_TR_ST_2: u32 = 0x4 << RTC_TR_ST_Pos;
pub const RTC_TR_SU_Pos: u32 = 0;
pub const RTC_TR_SU_Msk: u32 = 0xF << RTC_TR_SU_Pos;
pub const RTC_TR_SU: u32 = RTC_TR_SU_Msk;
pub const RTC_TR_SU_0: u32 = 0x1 << RTC_TR_SU_Pos;
pub const RTC_TR_SU_1: u32 = 0x2 << RTC_TR_SU_Pos;
pub const RTC_TR_SU_2: u32 = 0x4 << RTC_TR_SU_Pos;
pub const RTC_TR_SU_3: u32 = 0x8 << RTC_TR_SU_Pos;
pub const RTC_DR_YT_Pos: u32 = 20;
pub const RTC_DR_YT_Msk: u32 = 0xF << RTC_DR_YT_Pos;
pub const RTC_DR_YT: u32 = RTC_DR_YT_Msk;
pub const RTC_DR_YT_0: u32 = 0x1 << RTC_DR_YT_Pos;
pub const RTC_DR_YT_1: u32 = 0x2 << RTC_DR_YT_Pos;
pub const RTC_DR_YT_2: u32 = 0x4 << RTC_DR_YT_Pos;
pub const RTC_DR_YT_3: u32 = 0x8 << RTC_DR_YT_Pos;
pub const RTC_DR_YU_Pos: u32 = 16;
pub const RTC_DR_YU_Msk: u32 = 0xF << RTC_DR_YU_Pos;
pub const RTC_DR_YU: u32 = RTC_DR_YU_Msk;
pub const RTC_DR_YU_0: u32 = 0x1 << RTC_DR_YU_Pos;
pub const RTC_DR_YU_1: u32 = 0x2 << RTC_DR_YU_Pos;
pub const RTC_DR_YU_2: u32 = 0x4 << RTC_DR_YU_Pos;
pub const RTC_DR_YU_3: u32 = 0x8 << RTC_DR_YU_Pos;
pub const RTC_DR_WDU_Pos: u32 = 13;
pub const RTC_DR_WDU_Msk: u32 = 0x7 << RTC_DR_WDU_Pos;
pub const RTC_DR_WDU: u32 = RTC_DR_WDU_Msk;
pub const RTC_DR_WDU_0: u32 = 0x1 << RTC_DR_WDU_Pos;
pub const RTC_DR_WDU_1: u32 = 0x2 << RTC_DR_WDU_Pos;
pub const RTC_DR_WDU_2: u32 = 0x4 << RTC_DR_WDU_Pos;
pub const RTC_DR_MT_Pos: u32 = 12;
pub const RTC_DR_MT_Msk: u32 = 0x1 << RTC_DR_MT_Pos;
pub const RTC_DR_MT: u32 = RTC_DR_MT_Msk;
pub const RTC_DR_MU_Pos: u32 = 8;
pub const RTC_DR_MU_Msk: u32 = 0xF << RTC_DR_MU_Pos;
pub const RTC_DR_MU: u32 = RTC_DR_MU_Msk;
pub const RTC_DR_MU_0: u32 = 0x1 << RTC_DR_MU_Pos;
pub const RTC_DR_MU_1: u32 = 0x2 << RTC_DR_MU_Pos;
pub const RTC_DR_MU_2: u32 = 0x4 << RTC_DR_MU_Pos;
pub const RTC_DR_MU_3: u32 = 0x8 << RTC_DR_MU_Pos;
pub const RTC_DR_DT_Pos: u32 = 4;
pub const RTC_DR_DT_Msk: u32 = 0x3 << RTC_DR_DT_Pos;
pub const RTC_DR_DT: u32 = RTC_DR_DT_Msk;
pub const RTC_DR_DT_0: u32 = 0x1 << RTC_DR_DT_Pos;
pub const RTC_DR_DT_1: u32 = 0x2 << RTC_DR_DT_Pos;
pub const RTC_DR_DU_Pos: u32 = 0;
pub const RTC_DR_DU_Msk: u32 = 0xF << RTC_DR_DU_Pos;
pub const RTC_DR_DU: u32 = RTC_DR_DU_Msk;
pub const RTC_DR_DU_0: u32 = 0x1 << RTC_DR_DU_Pos;
pub const RTC_DR_DU_1: u32 = 0x2 << RTC_DR_DU_Pos;
pub const RTC_DR_DU_2: u32 = 0x4 << RTC_DR_DU_Pos;
pub const RTC_DR_DU_3: u32 = 0x8 << RTC_DR_DU_Pos;
pub const RTC_CR_COE_Pos: u32 = 23;
pub const RTC_CR_COE_Msk: u32 = 0x1 << RTC_CR_COE_Pos;
pub const RTC_CR_COE: u32 = RTC_CR_COE_Msk;
pub const RTC_CR_OSEL_Pos: u32 = 21;
pub const RTC_CR_OSEL_Msk: u32 = 0x3 << RTC_CR_OSEL_Pos;
pub const RTC_CR_OSEL: u32 = RTC_CR_OSEL_Msk;
pub const RTC_CR_OSEL_0: u32 = 0x1 << RTC_CR_OSEL_Pos;
pub const RTC_CR_OSEL_1: u32 = 0x2 << RTC_CR_OSEL_Pos;
pub const RTC_CR_POL_Pos: u32 = 20;
pub const RTC_CR_POL_Msk: u32 = 0x1 << RTC_CR_POL_Pos;
pub const RTC_CR_POL: u32 = RTC_CR_POL_Msk;
pub const RTC_CR_COSEL_Pos: u32 = 19;
pub const RTC_CR_COSEL_Msk: u32 = 0x1 << RTC_CR_COSEL_Pos;
pub const RTC_CR_COSEL: u32 = RTC_CR_COSEL_Msk;
pub const RTC_CR_BKP_Pos: u32 = 18;
pub const RTC_CR_BKP_Msk: u32 = 0x1 << RTC_CR_BKP_Pos;
pub const RTC_CR_BKP: u32 = RTC_CR_BKP_Msk;
pub const RTC_CR_SUB1H_Pos: u32 = 17;
pub const RTC_CR_SUB1H_Msk: u32 = 0x1 << RTC_CR_SUB1H_Pos;
pub const RTC_CR_SUB1H: u32 = RTC_CR_SUB1H_Msk;
pub const RTC_CR_ADD1H_Pos: u32 = 16;
pub const RTC_CR_ADD1H_Msk: u32 = 0x1 << RTC_CR_ADD1H_Pos;
pub const RTC_CR_ADD1H: u32 = RTC_CR_ADD1H_Msk;
pub const RTC_CR_TSIE_Pos: u32 = 15;
pub const RTC_CR_TSIE_Msk: u32 = 0x1 << RTC_CR_TSIE_Pos;
pub const RTC_CR_TSIE: u32 = RTC_CR_TSIE_Msk;
pub const RTC_CR_WUTIE_Pos: u32 = 14;
pub const RTC_CR_WUTIE_Msk: u32 = 0x1 << RTC_CR_WUTIE_Pos;
pub const RTC_CR_WUTIE: u32 = RTC_CR_WUTIE_Msk;
pub const RTC_CR_ALRBIE_Pos: u32 = 13;
pub const RTC_CR_ALRBIE_Msk: u32 = 0x1 << RTC_CR_ALRBIE_Pos;
pub const RTC_CR_ALRBIE: u32 = RTC_CR_ALRBIE_Msk;
pub const RTC_CR_ALRAIE_Pos: u32 = 12;
pub const RTC_CR_ALRAIE_Msk: u32 = 0x1 << RTC_CR_ALRAIE_Pos;
pub const RTC_CR_ALRAIE: u32 = RTC_CR_ALRAIE_Msk;
pub const RTC_CR_TSE_Pos: u32 = 11;
pub const RTC_CR_TSE_Msk: u32 = 0x1 << RTC_CR_TSE_Pos;
pub const RTC_CR_TSE: u32 = RTC_CR_TSE_Msk;
pub const RTC_CR_WUTE_Pos: u32 = 10;
pub const RTC_CR_WUTE_Msk: u32 = 0x1 << RTC_CR_WUTE_Pos;
pub const RTC_CR_WUTE: u32 = RTC_CR_WUTE_Msk;
pub const RTC_CR_ALRBE_Pos: u32 = 9;
pub const RTC_CR_ALRBE_Msk: u32 = 0x1 << RTC_CR_ALRBE_Pos;
pub const RTC_CR_ALRBE: u32 = RTC_CR_ALRBE_Msk;
pub const RTC_CR_ALRAE_Pos: u32 = 8;
pub const RTC_CR_ALRAE_Msk: u32 = 0x1 << RTC_CR_ALRAE_Pos;
pub const RTC_CR_ALRAE: u32 = RTC_CR_ALRAE_Msk;
pub const RTC_CR_DCE_Pos: u32 = 7;
pub const RTC_CR_DCE_Msk: u32 = 0x1 << RTC_CR_DCE_Pos;
pub const RTC_CR_DCE: u32 = RTC_CR_DCE_Msk;
pub const RTC_CR_FMT_Pos: u32 = 6;
pub const RTC_CR_FMT_Msk: u32 = 0x1 << RTC_CR_FMT_Pos;
pub const RTC_CR_FMT: u32 = RTC_CR_FMT_Msk;
pub const RTC_CR_BYPSHAD_Pos: u32 = 5;
pub const RTC_CR_BYPSHAD_Msk: u32 = 0x1 << RTC_CR_BYPSHAD_Pos;
pub const RTC_CR_BYPSHAD: u32 = RTC_CR_BYPSHAD_Msk;
pub const RTC_CR_REFCKON_Pos: u32 = 4;
pub const RTC_CR_REFCKON_Msk: u32 = 0x1 << RTC_CR_REFCKON_Pos;
pub const RTC_CR_REFCKON: u32 = RTC_CR_REFCKON_Msk;
pub const RTC_CR_TSEDGE_Pos: u32 = 3;
pub const RTC_CR_TSEDGE_Msk: u32 = 0x1 << RTC_CR_TSEDGE_Pos;
pub const RTC_CR_TSEDGE: u32 = RTC_CR_TSEDGE_Msk;
pub const RTC_CR_WUCKSEL_Pos: u32 = 0;
pub const RTC_CR_WUCKSEL_Msk: u32 = 0x7 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_WUCKSEL: u32 = RTC_CR_WUCKSEL_Msk;
pub const RTC_CR_WUCKSEL_0: u32 = 0x1 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_WUCKSEL_1: u32 = 0x2 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_WUCKSEL_2: u32 = 0x4 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_BCK_Pos: u32 = RTC_CR_BKP_Pos;
pub const RTC_CR_BCK_Msk: u32 = RTC_CR_BKP_Msk;
pub const RTC_CR_BCK: u32 = RTC_CR_BKP;
pub const RTC_ISR_RECALPF_Pos: u32 = 16;
pub const RTC_ISR_RECALPF_Msk: u32 = 0x1 << RTC_ISR_RECALPF_Pos;
pub const RTC_ISR_RECALPF: u32 = RTC_ISR_RECALPF_Msk;
pub const RTC_ISR_TAMP3F_Pos: u32 = 15;
pub const RTC_ISR_TAMP3F_Msk: u32 = 0x1 << RTC_ISR_TAMP3F_Pos;
pub const RTC_ISR_TAMP3F: u32 = RTC_ISR_TAMP3F_Msk;
pub const RTC_ISR_TAMP2F_Pos: u32 = 14;
pub const RTC_ISR_TAMP2F_Msk: u32 = 0x1 << RTC_ISR_TAMP2F_Pos;
pub const RTC_ISR_TAMP2F: u32 = RTC_ISR_TAMP2F_Msk;
pub const RTC_ISR_TAMP1F_Pos: u32 = 13;
pub const RTC_ISR_TAMP1F_Msk: u32 = 0x1 << RTC_ISR_TAMP1F_Pos;
pub const RTC_ISR_TAMP1F: u32 = RTC_ISR_TAMP1F_Msk;
pub const RTC_ISR_TSOVF_Pos: u32 = 12;
pub const RTC_ISR_TSOVF_Msk: u32 = 0x1 << RTC_ISR_TSOVF_Pos;
pub const RTC_ISR_TSOVF: u32 = RTC_ISR_TSOVF_Msk;
pub const RTC_ISR_TSF_Pos: u32 = 11;
pub const RTC_ISR_TSF_Msk: u32 = 0x1 << RTC_ISR_TSF_Pos;
pub const RTC_ISR_TSF: u32 = RTC_ISR_TSF_Msk;
pub const RTC_ISR_WUTF_Pos: u32 = 10;
pub const RTC_ISR_WUTF_Msk: u32 = 0x1 << RTC_ISR_WUTF_Pos;
pub const RTC_ISR_WUTF: u32 = RTC_ISR_WUTF_Msk;
pub const RTC_ISR_ALRBF_Pos: u32 = 9;
pub const RTC_ISR_ALRBF_Msk: u32 = 0x1 << RTC_ISR_ALRBF_Pos;
pub const RTC_ISR_ALRBF: u32 = RTC_ISR_ALRBF_Msk;
pub const RTC_ISR_ALRAF_Pos: u32 = 8;
pub const RTC_ISR_ALRAF_Msk: u32 = 0x1 << RTC_ISR_ALRAF_Pos;
pub const RTC_ISR_ALRAF: u32 = RTC_ISR_ALRAF_Msk;
pub const RTC_ISR_INIT_Pos: u32 = 7;
pub const RTC_ISR_INIT_Msk: u32 = 0x1 << RTC_ISR_INIT_Pos;
pub const RTC_ISR_INIT: u32 = RTC_ISR_INIT_Msk;
pub const RTC_ISR_INITF_Pos: u32 = 6;
pub const RTC_ISR_INITF_Msk: u32 = 0x1 << RTC_ISR_INITF_Pos;
pub const RTC_ISR_INITF: u32 = RTC_ISR_INITF_Msk;
pub const RTC_ISR_RSF_Pos: u32 = 5;
pub const RTC_ISR_RSF_Msk: u32 = 0x1 << RTC_ISR_RSF_Pos;
pub const RTC_ISR_RSF: u32 = RTC_ISR_RSF_Msk;
pub const RTC_ISR_INITS_Pos: u32 = 4;
pub const RTC_ISR_INITS_Msk: u32 = 0x1 << RTC_ISR_INITS_Pos;
pub const RTC_ISR_INITS: u32 = RTC_ISR_INITS_Msk;
pub const RTC_ISR_SHPF_Pos: u32 = 3;
pub const RTC_ISR_SHPF_Msk: u32 = 0x1 << RTC_ISR_SHPF_Pos;
pub const RTC_ISR_SHPF: u32 = RTC_ISR_SHPF_Msk;
pub const RTC_ISR_WUTWF_Pos: u32 = 2;
pub const RTC_ISR_WUTWF_Msk: u32 = 0x1 << RTC_ISR_WUTWF_Pos;
pub const RTC_ISR_WUTWF: u32 = RTC_ISR_WUTWF_Msk;
pub const RTC_ISR_ALRBWF_Pos: u32 = 1;
pub const RTC_ISR_ALRBWF_Msk: u32 = 0x1 << RTC_ISR_ALRBWF_Pos;
pub const RTC_ISR_ALRBWF: u32 = RTC_ISR_ALRBWF_Msk;
pub const RTC_ISR_ALRAWF_Pos: u32 = 0;
pub const RTC_ISR_ALRAWF_Msk: u32 = 0x1 << RTC_ISR_ALRAWF_Pos;
pub const RTC_ISR_ALRAWF: u32 = RTC_ISR_ALRAWF_Msk;
pub const RTC_PRER_PREDIV_A_Pos: u32 = 16;
pub const RTC_PRER_PREDIV_A_Msk: u32 = 0x7F << RTC_PRER_PREDIV_A_Pos;
pub const RTC_PRER_PREDIV_A: u32 = RTC_PRER_PREDIV_A_Msk;
pub const RTC_PRER_PREDIV_S_Pos: u32 = 0;
pub const RTC_PRER_PREDIV_S_Msk: u32 = 0x7FFF << RTC_PRER_PREDIV_S_Pos;
pub const RTC_PRER_PREDIV_S: u32 = RTC_PRER_PREDIV_S_Msk;
pub const RTC_WUTR_WUT_Pos: u32 = 0;
pub const RTC_WUTR_WUT_Msk: u32 = 0xFFFF << RTC_WUTR_WUT_Pos;
pub const RTC_WUTR_WUT: u32 = RTC_WUTR_WUT_Msk;
pub const RTC_CALIBR_DCS_Pos: u32 = 7;
pub const RTC_CALIBR_DCS_Msk: u32 = 0x1 << RTC_CALIBR_DCS_Pos;
pub const RTC_CALIBR_DCS: u32 = RTC_CALIBR_DCS_Msk;
pub const RTC_CALIBR_DC_Pos: u32 = 0;
pub const RTC_CALIBR_DC_Msk: u32 = 0x1F << RTC_CALIBR_DC_Pos;
pub const RTC_CALIBR_DC: u32 = RTC_CALIBR_DC_Msk;
pub const RTC_ALRMAR_MSK4_Pos: u32 = 31;
pub const RTC_ALRMAR_MSK4_Msk: u32 = 0x1 << RTC_ALRMAR_MSK4_Pos;
pub const RTC_ALRMAR_MSK4: u32 = RTC_ALRMAR_MSK4_Msk;
pub const RTC_ALRMAR_WDSEL_Pos: u32 = 30;
pub const RTC_ALRMAR_WDSEL_Msk: u32 = 0x1 << RTC_ALRMAR_WDSEL_Pos;
pub const RTC_ALRMAR_WDSEL: u32 = RTC_ALRMAR_WDSEL_Msk;
pub const RTC_ALRMAR_DT_Pos: u32 = 28;
pub const RTC_ALRMAR_DT_Msk: u32 = 0x3 << RTC_ALRMAR_DT_Pos;
pub const RTC_ALRMAR_DT: u32 = RTC_ALRMAR_DT_Msk;
pub const RTC_ALRMAR_DT_0: u32 = 0x1 << RTC_ALRMAR_DT_Pos;
pub const RTC_ALRMAR_DT_1: u32 = 0x2 << RTC_ALRMAR_DT_Pos;
pub const RTC_ALRMAR_DU_Pos: u32 = 24;
pub const RTC_ALRMAR_DU_Msk: u32 = 0xF << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU: u32 = RTC_ALRMAR_DU_Msk;
pub const RTC_ALRMAR_DU_0: u32 = 0x1 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU_1: u32 = 0x2 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU_2: u32 = 0x4 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU_3: u32 = 0x8 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_MSK3_Pos: u32 = 23;
pub const RTC_ALRMAR_MSK3_Msk: u32 = 0x1 << RTC_ALRMAR_MSK3_Pos;
pub const RTC_ALRMAR_MSK3: u32 = RTC_ALRMAR_MSK3_Msk;
pub const RTC_ALRMAR_PM_Pos: u32 = 22;
pub const RTC_ALRMAR_PM_Msk: u32 = 0x1 << RTC_ALRMAR_PM_Pos;
pub const RTC_ALRMAR_PM: u32 = RTC_ALRMAR_PM_Msk;
pub const RTC_ALRMAR_HT_Pos: u32 = 20;
pub const RTC_ALRMAR_HT_Msk: u32 = 0x3 << RTC_ALRMAR_HT_Pos;
pub const RTC_ALRMAR_HT: u32 = RTC_ALRMAR_HT_Msk;
pub const RTC_ALRMAR_HT_0: u32 = 0x1 << RTC_ALRMAR_HT_Pos;
pub const RTC_ALRMAR_HT_1: u32 = 0x2 << RTC_ALRMAR_HT_Pos;
pub const RTC_ALRMAR_HU_Pos: u32 = 16;
pub const RTC_ALRMAR_HU_Msk: u32 = 0xF << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU: u32 = RTC_ALRMAR_HU_Msk;
pub const RTC_ALRMAR_HU_0: u32 = 0x1 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU_1: u32 = 0x2 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU_2: u32 = 0x4 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU_3: u32 = 0x8 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_MSK2_Pos: u32 = 15;
pub const RTC_ALRMAR_MSK2_Msk: u32 = 0x1 << RTC_ALRMAR_MSK2_Pos;
pub const RTC_ALRMAR_MSK2: u32 = RTC_ALRMAR_MSK2_Msk;
pub const RTC_ALRMAR_MNT_Pos: u32 = 12;
pub const RTC_ALRMAR_MNT_Msk: u32 = 0x7 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNT: u32 = RTC_ALRMAR_MNT_Msk;
pub const RTC_ALRMAR_MNT_0: u32 = 0x1 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNT_1: u32 = 0x2 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNT_2: u32 = 0x4 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNU_Pos: u32 = 8;
pub const RTC_ALRMAR_MNU_Msk: u32 = 0xF << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU: u32 = RTC_ALRMAR_MNU_Msk;
pub const RTC_ALRMAR_MNU_0: u32 = 0x1 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU_1: u32 = 0x2 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU_2: u32 = 0x4 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU_3: u32 = 0x8 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MSK1_Pos: u32 = 7;
pub const RTC_ALRMAR_MSK1_Msk: u32 = 0x1 << RTC_ALRMAR_MSK1_Pos;
pub const RTC_ALRMAR_MSK1: u32 = RTC_ALRMAR_MSK1_Msk;
pub const RTC_ALRMAR_ST_Pos: u32 = 4;
pub const RTC_ALRMAR_ST_Msk: u32 = 0x7 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_ST: u32 = RTC_ALRMAR_ST_Msk;
pub const RTC_ALRMAR_ST_0: u32 = 0x1 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_ST_1: u32 = 0x2 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_ST_2: u32 = 0x4 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_SU_Pos: u32 = 0;
pub const RTC_ALRMAR_SU_Msk: u32 = 0xF << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU: u32 = RTC_ALRMAR_SU_Msk;
pub const RTC_ALRMAR_SU_0: u32 = 0x1 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU_1: u32 = 0x2 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU_2: u32 = 0x4 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU_3: u32 = 0x8 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMBR_MSK4_Pos: u32 = 31;
pub const RTC_ALRMBR_MSK4_Msk: u32 = 0x1 << RTC_ALRMBR_MSK4_Pos;
pub const RTC_ALRMBR_MSK4: u32 = RTC_ALRMBR_MSK4_Msk;
pub const RTC_ALRMBR_WDSEL_Pos: u32 = 30;
pub const RTC_ALRMBR_WDSEL_Msk: u32 = 0x1 << RTC_ALRMBR_WDSEL_Pos;
pub const RTC_ALRMBR_WDSEL: u32 = RTC_ALRMBR_WDSEL_Msk;
pub const RTC_ALRMBR_DT_Pos: u32 = 28;
pub const RTC_ALRMBR_DT_Msk: u32 = 0x3 << RTC_ALRMBR_DT_Pos;
pub const RTC_ALRMBR_DT: u32 = RTC_ALRMBR_DT_Msk;
pub const RTC_ALRMBR_DT_0: u32 = 0x1 << RTC_ALRMBR_DT_Pos;
pub const RTC_ALRMBR_DT_1: u32 = 0x2 << RTC_ALRMBR_DT_Pos;
pub const RTC_ALRMBR_DU_Pos: u32 = 24;
pub const RTC_ALRMBR_DU_Msk: u32 = 0xF << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU: u32 = RTC_ALRMBR_DU_Msk;
pub const RTC_ALRMBR_DU_0: u32 = 0x1 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU_1: u32 = 0x2 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU_2: u32 = 0x4 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU_3: u32 = 0x8 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_MSK3_Pos: u32 = 23;
pub const RTC_ALRMBR_MSK3_Msk: u32 = 0x1 << RTC_ALRMBR_MSK3_Pos;
pub const RTC_ALRMBR_MSK3: u32 = RTC_ALRMBR_MSK3_Msk;
pub const RTC_ALRMBR_PM_Pos: u32 = 22;
pub const RTC_ALRMBR_PM_Msk: u32 = 0x1 << RTC_ALRMBR_PM_Pos;
pub const RTC_ALRMBR_PM: u32 = RTC_ALRMBR_PM_Msk;
pub const RTC_ALRMBR_HT_Pos: u32 = 20;
pub const RTC_ALRMBR_HT_Msk: u32 = 0x3 << RTC_ALRMBR_HT_Pos;
pub const RTC_ALRMBR_HT: u32 = RTC_ALRMBR_HT_Msk;
pub const RTC_ALRMBR_HT_0: u32 = 0x1 << RTC_ALRMBR_HT_Pos;
pub const RTC_ALRMBR_HT_1: u32 = 0x2 << RTC_ALRMBR_HT_Pos;
pub const RTC_ALRMBR_HU_Pos: u32 = 16;
pub const RTC_ALRMBR_HU_Msk: u32 = 0xF << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU: u32 = RTC_ALRMBR_HU_Msk;
pub const RTC_ALRMBR_HU_0: u32 = 0x1 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU_1: u32 = 0x2 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU_2: u32 = 0x4 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU_3: u32 = 0x8 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_MSK2_Pos: u32 = 15;
pub const RTC_ALRMBR_MSK2_Msk: u32 = 0x1 << RTC_ALRMBR_MSK2_Pos;
pub const RTC_ALRMBR_MSK2: u32 = RTC_ALRMBR_MSK2_Msk;
pub const RTC_ALRMBR_MNT_Pos: u32 = 12;
pub const RTC_ALRMBR_MNT_Msk: u32 = 0x7 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNT: u32 = RTC_ALRMBR_MNT_Msk;
pub const RTC_ALRMBR_MNT_0: u32 = 0x1 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNT_1: u32 = 0x2 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNT_2: u32 = 0x4 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNU_Pos: u32 = 8;
pub const RTC_ALRMBR_MNU_Msk: u32 = 0xF << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU: u32 = RTC_ALRMBR_MNU_Msk;
pub const RTC_ALRMBR_MNU_0: u32 = 0x1 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU_1: u32 = 0x2 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU_2: u32 = 0x4 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU_3: u32 = 0x8 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MSK1_Pos: u32 = 7;
pub const RTC_ALRMBR_MSK1_Msk: u32 = 0x1 << RTC_ALRMBR_MSK1_Pos;
pub const RTC_ALRMBR_MSK1: u32 = RTC_ALRMBR_MSK1_Msk;
pub const RTC_ALRMBR_ST_Pos: u32 = 4;
pub const RTC_ALRMBR_ST_Msk: u32 = 0x7 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_ST: u32 = RTC_ALRMBR_ST_Msk;
pub const RTC_ALRMBR_ST_0: u32 = 0x1 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_ST_1: u32 = 0x2 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_ST_2: u32 = 0x4 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_SU_Pos: u32 = 0;
pub const RTC_ALRMBR_SU_Msk: u32 = 0xF << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU: u32 = RTC_ALRMBR_SU_Msk;
pub const RTC_ALRMBR_SU_0: u32 = 0x1 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU_1: u32 = 0x2 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU_2: u32 = 0x4 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU_3: u32 = 0x8 << RTC_ALRMBR_SU_Pos;
pub const RTC_WPR_KEY_Pos: u32 = 0;
pub const RTC_WPR_KEY_Msk: u32 = 0xFF << RTC_WPR_KEY_Pos;
pub const RTC_WPR_KEY: u32 = RTC_WPR_KEY_Msk;
pub const RTC_SSR_SS_Pos: u32 = 0;
pub const RTC_SSR_SS_Msk: u32 = 0xFFFF << RTC_SSR_SS_Pos;
pub const RTC_SSR_SS: u32 = RTC_SSR_SS_Msk;
pub const RTC_SHIFTR_SUBFS_Pos: u32 = 0;
pub const RTC_SHIFTR_SUBFS_Msk: u32 = 0x7FFF << RTC_SHIFTR_SUBFS_Pos;
pub const RTC_SHIFTR_SUBFS: u32 = RTC_SHIFTR_SUBFS_Msk;
pub const RTC_SHIFTR_ADD1S_Pos: u32 = 31;
pub const RTC_SHIFTR_ADD1S_Msk: u32 = 0x1 << RTC_SHIFTR_ADD1S_Pos;
pub const RTC_SHIFTR_ADD1S: u32 = RTC_SHIFTR_ADD1S_Msk;
pub const RTC_TSTR_PM_Pos: u32 = 22;
pub const RTC_TSTR_PM_Msk: u32 = 0x1 << RTC_TSTR_PM_Pos;
pub const RTC_TSTR_PM: u32 = RTC_TSTR_PM_Msk;
pub const RTC_TSTR_HT_Pos: u32 = 20;
pub const RTC_TSTR_HT_Msk: u32 = 0x3 << RTC_TSTR_HT_Pos;
pub const RTC_TSTR_HT: u32 = RTC_TSTR_HT_Msk;
pub const RTC_TSTR_HT_0: u32 = 0x1 << RTC_TSTR_HT_Pos;
pub const RTC_TSTR_HT_1: u32 = 0x2 << RTC_TSTR_HT_Pos;
pub const RTC_TSTR_HU_Pos: u32 = 16;
pub const RTC_TSTR_HU_Msk: u32 = 0xF << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU: u32 = RTC_TSTR_HU_Msk;
pub const RTC_TSTR_HU_0: u32 = 0x1 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU_1: u32 = 0x2 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU_2: u32 = 0x4 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU_3: u32 = 0x8 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_MNT_Pos: u32 = 12;
pub const RTC_TSTR_MNT_Msk: u32 = 0x7 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNT: u32 = RTC_TSTR_MNT_Msk;
pub const RTC_TSTR_MNT_0: u32 = 0x1 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNT_1: u32 = 0x2 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNT_2: u32 = 0x4 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNU_Pos: u32 = 8;
pub const RTC_TSTR_MNU_Msk: u32 = 0xF << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU: u32 = RTC_TSTR_MNU_Msk;
pub const RTC_TSTR_MNU_0: u32 = 0x1 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU_1: u32 = 0x2 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU_2: u32 = 0x4 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU_3: u32 = 0x8 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_ST_Pos: u32 = 4;
pub const RTC_TSTR_ST_Msk: u32 = 0x7 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_ST: u32 = RTC_TSTR_ST_Msk;
pub const RTC_TSTR_ST_0: u32 = 0x1 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_ST_1: u32 = 0x2 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_ST_2: u32 = 0x4 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_SU_Pos: u32 = 0;
pub const RTC_TSTR_SU_Msk: u32 = 0xF << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU: u32 = RTC_TSTR_SU_Msk;
pub const RTC_TSTR_SU_0: u32 = 0x1 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU_1: u32 = 0x2 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU_2: u32 = 0x4 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU_3: u32 = 0x8 << RTC_TSTR_SU_Pos;
pub const RTC_TSDR_WDU_Pos: u32 = 13;
pub const RTC_TSDR_WDU_Msk: u32 = 0x7 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_WDU: u32 = RTC_TSDR_WDU_Msk;
pub const RTC_TSDR_WDU_0: u32 = 0x1 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_WDU_1: u32 = 0x2 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_WDU_2: u32 = 0x4 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_MT_Pos: u32 = 12;
pub const RTC_TSDR_MT_Msk: u32 = 0x1 << RTC_TSDR_MT_Pos;
pub const RTC_TSDR_MT: u32 = RTC_TSDR_MT_Msk;
pub const RTC_TSDR_MU_Pos: u32 = 8;
pub const RTC_TSDR_MU_Msk: u32 = 0xF << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU: u32 = RTC_TSDR_MU_Msk;
pub const RTC_TSDR_MU_0: u32 = 0x1 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU_1: u32 = 0x2 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU_2: u32 = 0x4 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU_3: u32 = 0x8 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_DT_Pos: u32 = 4;
pub const RTC_TSDR_DT_Msk: u32 = 0x3 << RTC_TSDR_DT_Pos;
pub const RTC_TSDR_DT: u32 = RTC_TSDR_DT_Msk;
pub const RTC_TSDR_DT_0: u32 = 0x1 << RTC_TSDR_DT_Pos;
pub const RTC_TSDR_DT_1: u32 = 0x2 << RTC_TSDR_DT_Pos;
pub const RTC_TSDR_DU_Pos: u32 = 0;
pub const RTC_TSDR_DU_Msk: u32 = 0xF << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU: u32 = RTC_TSDR_DU_Msk;
pub const RTC_TSDR_DU_0: u32 = 0x1 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU_1: u32 = 0x2 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU_2: u32 = 0x4 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU_3: u32 = 0x8 << RTC_TSDR_DU_Pos;
pub const RTC_TSSSR_SS_Pos: u32 = 0;
pub const RTC_TSSSR_SS_Msk: u32 = 0xFFFF << RTC_TSSSR_SS_Pos;
pub const RTC_TSSSR_SS: u32 = RTC_TSSSR_SS_Msk;
pub const RTC_CALR_CALP_Pos: u32 = 15;
pub const RTC_CALR_CALP_Msk: u32 = 0x1 << RTC_CALR_CALP_Pos;
pub const RTC_CALR_CALP: u32 = RTC_CALR_CALP_Msk;
pub const RTC_CALR_CALW8_Pos: u32 = 14;
pub const RTC_CALR_CALW8_Msk: u32 = 0x1 << RTC_CALR_CALW8_Pos;
pub const RTC_CALR_CALW8: u32 = RTC_CALR_CALW8_Msk;
pub const RTC_CALR_CALW16_Pos: u32 = 13;
pub const RTC_CALR_CALW16_Msk: u32 = 0x1 << RTC_CALR_CALW16_Pos;
pub const RTC_CALR_CALW16: u32 = RTC_CALR_CALW16_Msk;
pub const RTC_CALR_CALM_Pos: u32 = 0;
pub const RTC_CALR_CALM_Msk: u32 = 0x1FF << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM: u32 = RTC_CALR_CALM_Msk;
pub const RTC_CALR_CALM_0: u32 = 0x001 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_1: u32 = 0x002 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_2: u32 = 0x004 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_3: u32 = 0x008 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_4: u32 = 0x010 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_5: u32 = 0x020 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_6: u32 = 0x040 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_7: u32 = 0x080 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_8: u32 = 0x100 << RTC_CALR_CALM_Pos;
pub const RTC_TAFCR_ALARMOUTTYPE_Pos: u32 = 18;
pub const RTC_TAFCR_ALARMOUTTYPE_Msk: u32 = 0x1 << RTC_TAFCR_ALARMOUTTYPE_Pos;
pub const RTC_TAFCR_ALARMOUTTYPE: u32 = RTC_TAFCR_ALARMOUTTYPE_Msk;
pub const RTC_TAFCR_TAMPPUDIS_Pos: u32 = 15;
pub const RTC_TAFCR_TAMPPUDIS_Msk: u32 = 0x1 << RTC_TAFCR_TAMPPUDIS_Pos;
pub const RTC_TAFCR_TAMPPUDIS: u32 = RTC_TAFCR_TAMPPUDIS_Msk;
pub const RTC_TAFCR_TAMPPRCH_Pos: u32 = 13;
pub const RTC_TAFCR_TAMPPRCH_Msk: u32 = 0x3 << RTC_TAFCR_TAMPPRCH_Pos;
pub const RTC_TAFCR_TAMPPRCH: u32 = RTC_TAFCR_TAMPPRCH_Msk;
pub const RTC_TAFCR_TAMPPRCH_0: u32 = 0x1 << RTC_TAFCR_TAMPPRCH_Pos;
pub const RTC_TAFCR_TAMPPRCH_1: u32 = 0x2 << RTC_TAFCR_TAMPPRCH_Pos;
pub const RTC_TAFCR_TAMPFLT_Pos: u32 = 11;
pub const RTC_TAFCR_TAMPFLT_Msk: u32 = 0x3 << RTC_TAFCR_TAMPFLT_Pos;
pub const RTC_TAFCR_TAMPFLT: u32 = RTC_TAFCR_TAMPFLT_Msk;
pub const RTC_TAFCR_TAMPFLT_0: u32 = 0x1 << RTC_TAFCR_TAMPFLT_Pos;
pub const RTC_TAFCR_TAMPFLT_1: u32 = 0x2 << RTC_TAFCR_TAMPFLT_Pos;
pub const RTC_TAFCR_TAMPFREQ_Pos: u32 = 8;
pub const RTC_TAFCR_TAMPFREQ_Msk: u32 = 0x7 << RTC_TAFCR_TAMPFREQ_Pos;
pub const RTC_TAFCR_TAMPFREQ: u32 = RTC_TAFCR_TAMPFREQ_Msk;
pub const RTC_TAFCR_TAMPFREQ_0: u32 = 0x1 << RTC_TAFCR_TAMPFREQ_Pos;
pub const RTC_TAFCR_TAMPFREQ_1: u32 = 0x2 << RTC_TAFCR_TAMPFREQ_Pos;
pub const RTC_TAFCR_TAMPFREQ_2: u32 = 0x4 << RTC_TAFCR_TAMPFREQ_Pos;
pub const RTC_TAFCR_TAMPTS_Pos: u32 = 7;
pub const RTC_TAFCR_TAMPTS_Msk: u32 = 0x1 << RTC_TAFCR_TAMPTS_Pos;
pub const RTC_TAFCR_TAMPTS: u32 = RTC_TAFCR_TAMPTS_Msk;
pub const RTC_TAFCR_TAMP3TRG_Pos: u32 = 6;
pub const RTC_TAFCR_TAMP3TRG_Msk: u32 = 0x1 << RTC_TAFCR_TAMP3TRG_Pos;
pub const RTC_TAFCR_TAMP3TRG: u32 = RTC_TAFCR_TAMP3TRG_Msk;
pub const RTC_TAFCR_TAMP3E_Pos: u32 = 5;
pub const RTC_TAFCR_TAMP3E_Msk: u32 = 0x1 << RTC_TAFCR_TAMP3E_Pos;
pub const RTC_TAFCR_TAMP3E: u32 = RTC_TAFCR_TAMP3E_Msk;
pub const RTC_TAFCR_TAMP2TRG_Pos: u32 = 4;
pub const RTC_TAFCR_TAMP2TRG_Msk: u32 = 0x1 << RTC_TAFCR_TAMP2TRG_Pos;
pub const RTC_TAFCR_TAMP2TRG: u32 = RTC_TAFCR_TAMP2TRG_Msk;
pub const RTC_TAFCR_TAMP2E_Pos: u32 = 3;
pub const RTC_TAFCR_TAMP2E_Msk: u32 = 0x1 << RTC_TAFCR_TAMP2E_Pos;
pub const RTC_TAFCR_TAMP2E: u32 = RTC_TAFCR_TAMP2E_Msk;
pub const RTC_TAFCR_TAMPIE_Pos: u32 = 2;
pub const RTC_TAFCR_TAMPIE_Msk: u32 = 0x1 << RTC_TAFCR_TAMPIE_Pos;
pub const RTC_TAFCR_TAMPIE: u32 = RTC_TAFCR_TAMPIE_Msk;
pub const RTC_TAFCR_TAMP1TRG_Pos: u32 = 1;
pub const RTC_TAFCR_TAMP1TRG_Msk: u32 = 0x1 << RTC_TAFCR_TAMP1TRG_Pos;
pub const RTC_TAFCR_TAMP1TRG: u32 = RTC_TAFCR_TAMP1TRG_Msk;
pub const RTC_TAFCR_TAMP1E_Pos: u32 = 0;
pub const RTC_TAFCR_TAMP1E_Msk: u32 = 0x1 << RTC_TAFCR_TAMP1E_Pos;
pub const RTC_TAFCR_TAMP1E: u32 = RTC_TAFCR_TAMP1E_Msk;
pub const RTC_ALRMASSR_MASKSS_Pos: u32 = 24;
pub const RTC_ALRMASSR_MASKSS_Msk: u32 = 0xF << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS: u32 = RTC_ALRMASSR_MASKSS_Msk;
pub const RTC_ALRMASSR_MASKSS_0: u32 = 0x1 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_1: u32 = 0x2 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_2: u32 = 0x4 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_3: u32 = 0x8 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_SS_Pos: u32 = 0;
pub const RTC_ALRMASSR_SS_Msk: u32 = 0x7FFF << RTC_ALRMASSR_SS_Pos;
pub const RTC_ALRMASSR_SS: u32 = RTC_ALRMASSR_SS_Msk;
pub const RTC_ALRMBSSR_MASKSS_Pos: u32 = 24;
pub const RTC_ALRMBSSR_MASKSS_Msk: u32 = 0xF << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS: u32 = RTC_ALRMBSSR_MASKSS_Msk;
pub const RTC_ALRMBSSR_MASKSS_0: u32 = 0x1 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_1: u32 = 0x2 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_2: u32 = 0x4 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_3: u32 = 0x8 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_SS_Pos: u32 = 0;
pub const RTC_ALRMBSSR_SS_Msk: u32 = 0x7FFF << RTC_ALRMBSSR_SS_Pos;
pub const RTC_ALRMBSSR_SS: u32 = RTC_ALRMBSSR_SS_Msk;
pub const RTC_BKP0R_Pos: u32 = 0;
pub const RTC_BKP0R_Msk: u32 = 0xFFFFFFFF << RTC_BKP0R_Pos;
pub const RTC_BKP0R: u32 = RTC_BKP0R_Msk;
pub const RTC_BKP1R_Pos: u32 = 0;
pub const RTC_BKP1R_Msk: u32 = 0xFFFFFFFF << RTC_BKP1R_Pos;
pub const RTC_BKP1R: u32 = RTC_BKP1R_Msk;
pub const RTC_BKP2R_Pos: u32 = 0;
pub const RTC_BKP2R_Msk: u32 = 0xFFFFFFFF << RTC_BKP2R_Pos;
pub const RTC_BKP2R: u32 = RTC_BKP2R_Msk;
pub const RTC_BKP3R_Pos: u32 = 0;
pub const RTC_BKP3R_Msk: u32 = 0xFFFFFFFF << RTC_BKP3R_Pos;
pub const RTC_BKP3R: u32 = RTC_BKP3R_Msk;
pub const RTC_BKP4R_Pos: u32 = 0;
pub const RTC_BKP4R_Msk: u32 = 0xFFFFFFFF << RTC_BKP4R_Pos;
pub const RTC_BKP4R: u32 = RTC_BKP4R_Msk;
pub const RTC_BKP5R_Pos: u32 = 0;
pub const RTC_BKP5R_Msk: u32 = 0xFFFFFFFF << RTC_BKP5R_Pos;
pub const RTC_BKP5R: u32 = RTC_BKP5R_Msk;
pub const RTC_BKP6R_Pos: u32 = 0;
pub const RTC_BKP6R_Msk: u32 = 0xFFFFFFFF << RTC_BKP6R_Pos;
pub const RTC_BKP6R: u32 = RTC_BKP6R_Msk;
pub const RTC_BKP7R_Pos: u32 = 0;
pub const RTC_BKP7R_Msk: u32 = 0xFFFFFFFF << RTC_BKP7R_Pos;
pub const RTC_BKP7R: u32 = RTC_BKP7R_Msk;
pub const RTC_BKP8R_Pos: u32 = 0;
pub const RTC_BKP8R_Msk: u32 = 0xFFFFFFFF << RTC_BKP8R_Pos;
pub const RTC_BKP8R: u32 = RTC_BKP8R_Msk;
pub const RTC_BKP9R_Pos: u32 = 0;
pub const RTC_BKP9R_Msk: u32 = 0xFFFFFFFF << RTC_BKP9R_Pos;
pub const RTC_BKP9R: u32 = RTC_BKP9R_Msk;
pub const RTC_BKP10R_Pos: u32 = 0;
pub const RTC_BKP10R_Msk: u32 = 0xFFFFFFFF << RTC_BKP10R_Pos;
pub const RTC_BKP10R: u32 = RTC_BKP10R_Msk;
pub const RTC_BKP11R_Pos: u32 = 0;
pub const RTC_BKP11R_Msk: u32 = 0xFFFFFFFF << RTC_BKP11R_Pos;
pub const RTC_BKP11R: u32 = RTC_BKP11R_Msk;
pub const RTC_BKP12R_Pos: u32 = 0;
pub const RTC_BKP12R_Msk: u32 = 0xFFFFFFFF << RTC_BKP12R_Pos;
pub const RTC_BKP12R: u32 = RTC_BKP12R_Msk;
pub const RTC_BKP13R_Pos: u32 = 0;
pub const RTC_BKP13R_Msk: u32 = 0xFFFFFFFF << RTC_BKP13R_Pos;
pub const RTC_BKP13R: u32 = RTC_BKP13R_Msk;
pub const RTC_BKP14R_Pos: u32 = 0;
pub const RTC_BKP14R_Msk: u32 = 0xFFFFFFFF << RTC_BKP14R_Pos;
pub const RTC_BKP14R: u32 = RTC_BKP14R_Msk;
pub const RTC_BKP15R_Pos: u32 = 0;
pub const RTC_BKP15R_Msk: u32 = 0xFFFFFFFF << RTC_BKP15R_Pos;
pub const RTC_BKP15R: u32 = RTC_BKP15R_Msk;
pub const RTC_BKP16R_Pos: u32 = 0;
pub const RTC_BKP16R_Msk: u32 = 0xFFFFFFFF << RTC_BKP16R_Pos;
pub const RTC_BKP16R: u32 = RTC_BKP16R_Msk;
pub const RTC_BKP17R_Pos: u32 = 0;
pub const RTC_BKP17R_Msk: u32 = 0xFFFFFFFF << RTC_BKP17R_Pos;
pub const RTC_BKP17R: u32 = RTC_BKP17R_Msk;
pub const RTC_BKP18R_Pos: u32 = 0;
pub const RTC_BKP18R_Msk: u32 = 0xFFFFFFFF << RTC_BKP18R_Pos;
pub const RTC_BKP18R: u32 = RTC_BKP18R_Msk;
pub const RTC_BKP19R_Pos: u32 = 0;
pub const RTC_BKP19R_Msk: u32 = 0xFFFFFFFF << RTC_BKP19R_Pos;
pub const RTC_BKP19R: u32 = RTC_BKP19R_Msk;
pub const RTC_BKP20R_Pos: u32 = 0;
pub const RTC_BKP20R_Msk: u32 = 0xFFFFFFFF << RTC_BKP20R_Pos;
pub const RTC_BKP20R: u32 = RTC_BKP20R_Msk;
pub const RTC_BKP21R_Pos: u32 = 0;
pub const RTC_BKP21R_Msk: u32 = 0xFFFFFFFF << RTC_BKP21R_Pos;
pub const RTC_BKP21R: u32 = RTC_BKP21R_Msk;
pub const RTC_BKP22R_Pos: u32 = 0;
pub const RTC_BKP22R_Msk: u32 = 0xFFFFFFFF << RTC_BKP22R_Pos;
pub const RTC_BKP22R: u32 = RTC_BKP22R_Msk;
pub const RTC_BKP23R_Pos: u32 = 0;
pub const RTC_BKP23R_Msk: u32 = 0xFFFFFFFF << RTC_BKP23R_Pos;
pub const RTC_BKP23R: u32 = RTC_BKP23R_Msk;
pub const RTC_BKP24R_Pos: u32 = 0;
pub const RTC_BKP24R_Msk: u32 = 0xFFFFFFFF << RTC_BKP24R_Pos;
pub const RTC_BKP24R: u32 = RTC_BKP24R_Msk;
pub const RTC_BKP25R_Pos: u32 = 0;
pub const RTC_BKP25R_Msk: u32 = 0xFFFFFFFF << RTC_BKP25R_Pos;
pub const RTC_BKP25R: u32 = RTC_BKP25R_Msk;
pub const RTC_BKP26R_Pos: u32 = 0;
pub const RTC_BKP26R_Msk: u32 = 0xFFFFFFFF << RTC_BKP26R_Pos;
pub const RTC_BKP26R: u32 = RTC_BKP26R_Msk;
pub const RTC_BKP27R_Pos: u32 = 0;
pub const RTC_BKP27R_Msk: u32 = 0xFFFFFFFF << RTC_BKP27R_Pos;
pub const RTC_BKP27R: u32 = RTC_BKP27R_Msk;
pub const RTC_BKP28R_Pos: u32 = 0;
pub const RTC_BKP28R_Msk: u32 = 0xFFFFFFFF << RTC_BKP28R_Pos;
pub const RTC_BKP28R: u32 = RTC_BKP28R_Msk;
pub const RTC_BKP29R_Pos: u32 = 0;
pub const RTC_BKP29R_Msk: u32 = 0xFFFFFFFF << RTC_BKP29R_Pos;
pub const RTC_BKP29R: u32 = RTC_BKP29R_Msk;
pub const RTC_BKP30R_Pos: u32 = 0;
pub const RTC_BKP30R_Msk: u32 = 0xFFFFFFFF << RTC_BKP30R_Pos;
pub const RTC_BKP30R: u32 = RTC_BKP30R_Msk;
pub const RTC_BKP31R_Pos: u32 = 0;
pub const RTC_BKP31R_Msk: u32 = 0xFFFFFFFF << RTC_BKP31R_Pos;
pub const RTC_BKP31R: u32 = RTC_BKP31R_Msk;
pub const RTC_BKP_NUMBER: u32 = 32;
pub const SPI_CR1_CPHA_Pos: u32 = 0;
pub const SPI_CR1_CPHA_Msk: u32 = 0x1 << SPI_CR1_CPHA_Pos;
pub const SPI_CR1_CPHA: u32 = SPI_CR1_CPHA_Msk;
pub const SPI_CR1_CPOL_Pos: u32 = 1;
pub const SPI_CR1_CPOL_Msk: u32 = 0x1 << SPI_CR1_CPOL_Pos;
pub const SPI_CR1_CPOL: u32 = SPI_CR1_CPOL_Msk;
pub const SPI_CR1_MSTR_Pos: u32 = 2;
pub const SPI_CR1_MSTR_Msk: u32 = 0x1 << SPI_CR1_MSTR_Pos;
pub const SPI_CR1_MSTR: u32 = SPI_CR1_MSTR_Msk;
pub const SPI_CR1_BR_Pos: u32 = 3;
pub const SPI_CR1_BR_Msk: u32 = 0x7 << SPI_CR1_BR_Pos;
pub const SPI_CR1_BR: u32 = SPI_CR1_BR_Msk;
pub const SPI_CR1_BR_0: u32 = 0x1 << SPI_CR1_BR_Pos;
pub const SPI_CR1_BR_1: u32 = 0x2 << SPI_CR1_BR_Pos;
pub const SPI_CR1_BR_2: u32 = 0x4 << SPI_CR1_BR_Pos;
pub const SPI_CR1_SPE_Pos: u32 = 6;
pub const SPI_CR1_SPE_Msk: u32 = 0x1 << SPI_CR1_SPE_Pos;
pub const SPI_CR1_SPE: u32 = SPI_CR1_SPE_Msk;
pub const SPI_CR1_LSBFIRST_Pos: u32 = 7;
pub const SPI_CR1_LSBFIRST_Msk: u32 = 0x1 << SPI_CR1_LSBFIRST_Pos;
pub const SPI_CR1_LSBFIRST: u32 = SPI_CR1_LSBFIRST_Msk;
pub const SPI_CR1_SSI_Pos: u32 = 8;
pub const SPI_CR1_SSI_Msk: u32 = 0x1 << SPI_CR1_SSI_Pos;
pub const SPI_CR1_SSI: u32 = SPI_CR1_SSI_Msk;
pub const SPI_CR1_SSM_Pos: u32 = 9;
pub const SPI_CR1_SSM_Msk: u32 = 0x1 << SPI_CR1_SSM_Pos;
pub const SPI_CR1_SSM: u32 = SPI_CR1_SSM_Msk;
pub const SPI_CR1_RXONLY_Pos: u32 = 10;
pub const SPI_CR1_RXONLY_Msk: u32 = 0x1 << SPI_CR1_RXONLY_Pos;
pub const SPI_CR1_RXONLY: u32 = SPI_CR1_RXONLY_Msk;
pub const SPI_CR1_DFF_Pos: u32 = 11;
pub const SPI_CR1_DFF_Msk: u32 = 0x1 << SPI_CR1_DFF_Pos;
pub const SPI_CR1_DFF: u32 = SPI_CR1_DFF_Msk;
pub const SPI_CR1_CRCNEXT_Pos: u32 = 12;
pub const SPI_CR1_CRCNEXT_Msk: u32 = 0x1 << SPI_CR1_CRCNEXT_Pos;
pub const SPI_CR1_CRCNEXT: u32 = SPI_CR1_CRCNEXT_Msk;
pub const SPI_CR1_CRCEN_Pos: u32 = 13;
pub const SPI_CR1_CRCEN_Msk: u32 = 0x1 << SPI_CR1_CRCEN_Pos;
pub const SPI_CR1_CRCEN: u32 = SPI_CR1_CRCEN_Msk;
pub const SPI_CR1_BIDIOE_Pos: u32 = 14;
pub const SPI_CR1_BIDIOE_Msk: u32 = 0x1 << SPI_CR1_BIDIOE_Pos;
pub const SPI_CR1_BIDIOE: u32 = SPI_CR1_BIDIOE_Msk;
pub const SPI_CR1_BIDIMODE_Pos: u32 = 15;
pub const SPI_CR1_BIDIMODE_Msk: u32 = 0x1 << SPI_CR1_BIDIMODE_Pos;
pub const SPI_CR1_BIDIMODE: u32 = SPI_CR1_BIDIMODE_Msk;
pub const SPI_CR2_RXDMAEN_Pos: u32 = 0;
pub const SPI_CR2_RXDMAEN_Msk: u32 = 0x1 << SPI_CR2_RXDMAEN_Pos;
pub const SPI_CR2_RXDMAEN: u32 = SPI_CR2_RXDMAEN_Msk;
pub const SPI_CR2_TXDMAEN_Pos: u32 = 1;
pub const SPI_CR2_TXDMAEN_Msk: u32 = 0x1 << SPI_CR2_TXDMAEN_Pos;
pub const SPI_CR2_TXDMAEN: u32 = SPI_CR2_TXDMAEN_Msk;
pub const SPI_CR2_SSOE_Pos: u32 = 2;
pub const SPI_CR2_SSOE_Msk: u32 = 0x1 << SPI_CR2_SSOE_Pos;
pub const SPI_CR2_SSOE: u32 = SPI_CR2_SSOE_Msk;
pub const SPI_CR2_FRF_Pos: u32 = 4;
pub const SPI_CR2_FRF_Msk: u32 = 0x1 << SPI_CR2_FRF_Pos;
pub const SPI_CR2_FRF: u32 = SPI_CR2_FRF_Msk;
pub const SPI_CR2_ERRIE_Pos: u32 = 5;
pub const SPI_CR2_ERRIE_Msk: u32 = 0x1 << SPI_CR2_ERRIE_Pos;
pub const SPI_CR2_ERRIE: u32 = SPI_CR2_ERRIE_Msk;
pub const SPI_CR2_RXNEIE_Pos: u32 = 6;
pub const SPI_CR2_RXNEIE_Msk: u32 = 0x1 << SPI_CR2_RXNEIE_Pos;
pub const SPI_CR2_RXNEIE: u32 = SPI_CR2_RXNEIE_Msk;
pub const SPI_CR2_TXEIE_Pos: u32 = 7;
pub const SPI_CR2_TXEIE_Msk: u32 = 0x1 << SPI_CR2_TXEIE_Pos;
pub const SPI_CR2_TXEIE: u32 = SPI_CR2_TXEIE_Msk;
pub const SPI_SR_RXNE_Pos: u32 = 0;
pub const SPI_SR_RXNE_Msk: u32 = 0x1 << SPI_SR_RXNE_Pos;
pub const SPI_SR_RXNE: u32 = SPI_SR_RXNE_Msk;
pub const SPI_SR_TXE_Pos: u32 = 1;
pub const SPI_SR_TXE_Msk: u32 = 0x1 << SPI_SR_TXE_Pos;
pub const SPI_SR_TXE: u32 = SPI_SR_TXE_Msk;
pub const SPI_SR_CHSIDE_Pos: u32 = 2;
pub const SPI_SR_CHSIDE_Msk: u32 = 0x1 << SPI_SR_CHSIDE_Pos;
pub const SPI_SR_CHSIDE: u32 = SPI_SR_CHSIDE_Msk;
pub const SPI_SR_UDR_Pos: u32 = 3;
pub const SPI_SR_UDR_Msk: u32 = 0x1 << SPI_SR_UDR_Pos;
pub const SPI_SR_UDR: u32 = SPI_SR_UDR_Msk;
pub const SPI_SR_CRCERR_Pos: u32 = 4;
pub const SPI_SR_CRCERR_Msk: u32 = 0x1 << SPI_SR_CRCERR_Pos;
pub const SPI_SR_CRCERR: u32 = SPI_SR_CRCERR_Msk;
pub const SPI_SR_MODF_Pos: u32 = 5;
pub const SPI_SR_MODF_Msk: u32 = 0x1 << SPI_SR_MODF_Pos;
pub const SPI_SR_MODF: u32 = SPI_SR_MODF_Msk;
pub const SPI_SR_OVR_Pos: u32 = 6;
pub const SPI_SR_OVR_Msk: u32 = 0x1 << SPI_SR_OVR_Pos;
pub const SPI_SR_OVR: u32 = SPI_SR_OVR_Msk;
pub const SPI_SR_BSY_Pos: u32 = 7;
pub const SPI_SR_BSY_Msk: u32 = 0x1 << SPI_SR_BSY_Pos;
pub const SPI_SR_BSY: u32 = SPI_SR_BSY_Msk;
pub const SPI_SR_FRE_Pos: u32 = 8;
pub const SPI_SR_FRE_Msk: u32 = 0x1 << SPI_SR_FRE_Pos;
pub const SPI_SR_FRE: u32 = SPI_SR_FRE_Msk;
pub const SPI_DR_DR_Pos: u32 = 0;
pub const SPI_DR_DR_Msk: u32 = 0xFFFF << SPI_DR_DR_Pos;
pub const SPI_DR_DR: u32 = SPI_DR_DR_Msk;
pub const SPI_CRCPR_CRCPOLY_Pos: u32 = 0;
pub const SPI_CRCPR_CRCPOLY_Msk: u32 = 0xFFFF << SPI_CRCPR_CRCPOLY_Pos;
pub const SPI_CRCPR_CRCPOLY: u32 = SPI_CRCPR_CRCPOLY_Msk;
pub const SPI_RXCRCR_RXCRC_Pos: u32 = 0;
pub const SPI_RXCRCR_RXCRC_Msk: u32 = 0xFFFF << SPI_RXCRCR_RXCRC_Pos;
pub const SPI_RXCRCR_RXCRC: u32 = SPI_RXCRCR_RXCRC_Msk;
pub const SPI_TXCRCR_TXCRC_Pos: u32 = 0;
pub const SPI_TXCRCR_TXCRC_Msk: u32 = 0xFFFF << SPI_TXCRCR_TXCRC_Pos;
pub const SPI_TXCRCR_TXCRC: u32 = SPI_TXCRCR_TXCRC_Msk;
pub const SPI_I2SCFGR_CHLEN_Pos: u32 = 0;
pub const SPI_I2SCFGR_CHLEN_Msk: u32 = 0x1 << SPI_I2SCFGR_CHLEN_Pos;
pub const SPI_I2SCFGR_CHLEN: u32 = SPI_I2SCFGR_CHLEN_Msk;
pub const SPI_I2SCFGR_DATLEN_Pos: u32 = 1;
pub const SPI_I2SCFGR_DATLEN_Msk: u32 = 0x3 << SPI_I2SCFGR_DATLEN_Pos;
pub const SPI_I2SCFGR_DATLEN: u32 = SPI_I2SCFGR_DATLEN_Msk;
pub const SPI_I2SCFGR_DATLEN_0: u32 = 0x1 << SPI_I2SCFGR_DATLEN_Pos;
pub const SPI_I2SCFGR_DATLEN_1: u32 = 0x2 << SPI_I2SCFGR_DATLEN_Pos;
pub const SPI_I2SCFGR_CKPOL_Pos: u32 = 3;
pub const SPI_I2SCFGR_CKPOL_Msk: u32 = 0x1 << SPI_I2SCFGR_CKPOL_Pos;
pub const SPI_I2SCFGR_CKPOL: u32 = SPI_I2SCFGR_CKPOL_Msk;
pub const SPI_I2SCFGR_I2SSTD_Pos: u32 = 4;
pub const SPI_I2SCFGR_I2SSTD_Msk: u32 = 0x3 << SPI_I2SCFGR_I2SSTD_Pos;
pub const SPI_I2SCFGR_I2SSTD: u32 = SPI_I2SCFGR_I2SSTD_Msk;
pub const SPI_I2SCFGR_I2SSTD_0: u32 = 0x1 << SPI_I2SCFGR_I2SSTD_Pos;
pub const SPI_I2SCFGR_I2SSTD_1: u32 = 0x2 << SPI_I2SCFGR_I2SSTD_Pos;
pub const SPI_I2SCFGR_PCMSYNC_Pos: u32 = 7;
pub const SPI_I2SCFGR_PCMSYNC_Msk: u32 = 0x1 << SPI_I2SCFGR_PCMSYNC_Pos;
pub const SPI_I2SCFGR_PCMSYNC: u32 = SPI_I2SCFGR_PCMSYNC_Msk;
pub const SPI_I2SCFGR_I2SCFG_Pos: u32 = 8;
pub const SPI_I2SCFGR_I2SCFG_Msk: u32 = 0x3 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SCFG: u32 = SPI_I2SCFGR_I2SCFG_Msk;
pub const SPI_I2SCFGR_I2SCFG_0: u32 = 0x1 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SCFG_1: u32 = 0x2 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SE_Pos: u32 = 10;
pub const SPI_I2SCFGR_I2SE_Msk: u32 = 0x1 << SPI_I2SCFGR_I2SE_Pos;
pub const SPI_I2SCFGR_I2SE: u32 = SPI_I2SCFGR_I2SE_Msk;
pub const SPI_I2SCFGR_I2SMOD_Pos: u32 = 11;
pub const SPI_I2SCFGR_I2SMOD_Msk: u32 = 0x1 << SPI_I2SCFGR_I2SMOD_Pos;
pub const SPI_I2SCFGR_I2SMOD: u32 = SPI_I2SCFGR_I2SMOD_Msk;
pub const SPI_I2SPR_I2SDIV_Pos: u32 = 0;
pub const SPI_I2SPR_I2SDIV_Msk: u32 = 0xFF << SPI_I2SPR_I2SDIV_Pos;
pub const SPI_I2SPR_I2SDIV: u32 = SPI_I2SPR_I2SDIV_Msk;
pub const SPI_I2SPR_ODD_Pos: u32 = 8;
pub const SPI_I2SPR_ODD_Msk: u32 = 0x1 << SPI_I2SPR_ODD_Pos;
pub const SPI_I2SPR_ODD: u32 = SPI_I2SPR_ODD_Msk;
pub const SPI_I2SPR_MCKOE_Pos: u32 = 9;
pub const SPI_I2SPR_MCKOE_Msk: u32 = 0x1 << SPI_I2SPR_MCKOE_Pos;
pub const SPI_I2SPR_MCKOE: u32 = SPI_I2SPR_MCKOE_Msk;
pub const SYSCFG_MEMRMP_MEM_MODE_Pos: u32 = 0;
pub const SYSCFG_MEMRMP_MEM_MODE_Msk: u32 = 0x3 << SYSCFG_MEMRMP_MEM_MODE_Pos;
pub const SYSCFG_MEMRMP_MEM_MODE: u32 = SYSCFG_MEMRMP_MEM_MODE_Msk;
pub const SYSCFG_MEMRMP_MEM_MODE_0: u32 = 0x1 << SYSCFG_MEMRMP_MEM_MODE_Pos;
pub const SYSCFG_MEMRMP_MEM_MODE_1: u32 = 0x2 << SYSCFG_MEMRMP_MEM_MODE_Pos;
pub const SYSCFG_MEMRMP_BOOT_MODE_Pos: u32 = 8;
pub const SYSCFG_MEMRMP_BOOT_MODE_Msk: u32 = 0x3 << SYSCFG_MEMRMP_BOOT_MODE_Pos;
pub const SYSCFG_MEMRMP_BOOT_MODE: u32 = SYSCFG_MEMRMP_BOOT_MODE_Msk;
pub const SYSCFG_MEMRMP_BOOT_MODE_0: u32 = 0x1 << SYSCFG_MEMRMP_BOOT_MODE_Pos;
pub const SYSCFG_MEMRMP_BOOT_MODE_1: u32 = 0x2 << SYSCFG_MEMRMP_BOOT_MODE_Pos;
pub const SYSCFG_PMC_USB_PU_Pos: u32 = 0;
pub const SYSCFG_PMC_USB_PU_Msk: u32 = 0x1 << SYSCFG_PMC_USB_PU_Pos;
pub const SYSCFG_PMC_USB_PU: u32 = SYSCFG_PMC_USB_PU_Msk;
pub const SYSCFG_PMC_LCD_CAPA_Pos: u32 = 1;
pub const SYSCFG_PMC_LCD_CAPA_Msk: u32 = 0x1F << SYSCFG_PMC_LCD_CAPA_Pos;
pub const SYSCFG_PMC_LCD_CAPA: u32 = SYSCFG_PMC_LCD_CAPA_Msk;
pub const SYSCFG_PMC_LCD_CAPA_0: u32 = 0x01 << SYSCFG_PMC_LCD_CAPA_Pos;
pub const SYSCFG_PMC_LCD_CAPA_1: u32 = 0x02 << SYSCFG_PMC_LCD_CAPA_Pos;
pub const SYSCFG_PMC_LCD_CAPA_2: u32 = 0x04 << SYSCFG_PMC_LCD_CAPA_Pos;
pub const SYSCFG_PMC_LCD_CAPA_3: u32 = 0x08 << SYSCFG_PMC_LCD_CAPA_Pos;
pub const SYSCFG_PMC_LCD_CAPA_4: u32 = 0x10 << SYSCFG_PMC_LCD_CAPA_Pos;
pub const SYSCFG_EXTICR1_EXTI0_Pos: u32 = 0;
pub const SYSCFG_EXTICR1_EXTI0_Msk: u32 = 0xF << SYSCFG_EXTICR1_EXTI0_Pos;
pub const SYSCFG_EXTICR1_EXTI0: u32 = SYSCFG_EXTICR1_EXTI0_Msk;
pub const SYSCFG_EXTICR1_EXTI1_Pos: u32 = 4;
pub const SYSCFG_EXTICR1_EXTI1_Msk: u32 = 0xF << SYSCFG_EXTICR1_EXTI1_Pos;
pub const SYSCFG_EXTICR1_EXTI1: u32 = SYSCFG_EXTICR1_EXTI1_Msk;
pub const SYSCFG_EXTICR1_EXTI2_Pos: u32 = 8;
pub const SYSCFG_EXTICR1_EXTI2_Msk: u32 = 0xF << SYSCFG_EXTICR1_EXTI2_Pos;
pub const SYSCFG_EXTICR1_EXTI2: u32 = SYSCFG_EXTICR1_EXTI2_Msk;
pub const SYSCFG_EXTICR1_EXTI3_Pos: u32 = 12;
pub const SYSCFG_EXTICR1_EXTI3_Msk: u32 = 0xF << SYSCFG_EXTICR1_EXTI3_Pos;
pub const SYSCFG_EXTICR1_EXTI3: u32 = SYSCFG_EXTICR1_EXTI3_Msk;
pub const SYSCFG_EXTICR1_EXTI0_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR1_EXTI0_PB: u32 = 0x00000001;
pub const SYSCFG_EXTICR1_EXTI0_PC: u32 = 0x00000002;
pub const SYSCFG_EXTICR1_EXTI0_PD: u32 = 0x00000003;
pub const SYSCFG_EXTICR1_EXTI0_PE: u32 = 0x00000004;
pub const SYSCFG_EXTICR1_EXTI0_PH: u32 = 0x00000005;
pub const SYSCFG_EXTICR1_EXTI0_PF: u32 = 0x00000006;
pub const SYSCFG_EXTICR1_EXTI0_PG: u32 = 0x00000007;
pub const SYSCFG_EXTICR1_EXTI1_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR1_EXTI1_PB: u32 = 0x00000010;
pub const SYSCFG_EXTICR1_EXTI1_PC: u32 = 0x00000020;
pub const SYSCFG_EXTICR1_EXTI1_PD: u32 = 0x00000030;
pub const SYSCFG_EXTICR1_EXTI1_PE: u32 = 0x00000040;
pub const SYSCFG_EXTICR1_EXTI1_PH: u32 = 0x00000050;
pub const SYSCFG_EXTICR1_EXTI1_PF: u32 = 0x00000060;
pub const SYSCFG_EXTICR1_EXTI1_PG: u32 = 0x00000070;
pub const SYSCFG_EXTICR1_EXTI2_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR1_EXTI2_PB: u32 = 0x00000100;
pub const SYSCFG_EXTICR1_EXTI2_PC: u32 = 0x00000200;
pub const SYSCFG_EXTICR1_EXTI2_PD: u32 = 0x00000300;
pub const SYSCFG_EXTICR1_EXTI2_PE: u32 = 0x00000400;
pub const SYSCFG_EXTICR1_EXTI2_PH: u32 = 0x00000500;
pub const SYSCFG_EXTICR1_EXTI2_PF: u32 = 0x00000600;
pub const SYSCFG_EXTICR1_EXTI2_PG: u32 = 0x00000700;
pub const SYSCFG_EXTICR1_EXTI3_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR1_EXTI3_PB: u32 = 0x00001000;
pub const SYSCFG_EXTICR1_EXTI3_PC: u32 = 0x00002000;
pub const SYSCFG_EXTICR1_EXTI3_PD: u32 = 0x00003000;
pub const SYSCFG_EXTICR1_EXTI3_PE: u32 = 0x00004000;
pub const SYSCFG_EXTICR1_EXTI3_PF: u32 = 0x00006000;
pub const SYSCFG_EXTICR1_EXTI3_PG: u32 = 0x00007000;
pub const SYSCFG_EXTICR2_EXTI4_Pos: u32 = 0;
pub const SYSCFG_EXTICR2_EXTI4_Msk: u32 = 0xF << SYSCFG_EXTICR2_EXTI4_Pos;
pub const SYSCFG_EXTICR2_EXTI4: u32 = SYSCFG_EXTICR2_EXTI4_Msk;
pub const SYSCFG_EXTICR2_EXTI5_Pos: u32 = 4;
pub const SYSCFG_EXTICR2_EXTI5_Msk: u32 = 0xF << SYSCFG_EXTICR2_EXTI5_Pos;
pub const SYSCFG_EXTICR2_EXTI5: u32 = SYSCFG_EXTICR2_EXTI5_Msk;
pub const SYSCFG_EXTICR2_EXTI6_Pos: u32 = 8;
pub const SYSCFG_EXTICR2_EXTI6_Msk: u32 = 0xF << SYSCFG_EXTICR2_EXTI6_Pos;
pub const SYSCFG_EXTICR2_EXTI6: u32 = SYSCFG_EXTICR2_EXTI6_Msk;
pub const SYSCFG_EXTICR2_EXTI7_Pos: u32 = 12;
pub const SYSCFG_EXTICR2_EXTI7_Msk: u32 = 0xF << SYSCFG_EXTICR2_EXTI7_Pos;
pub const SYSCFG_EXTICR2_EXTI7: u32 = SYSCFG_EXTICR2_EXTI7_Msk;
pub const SYSCFG_EXTICR2_EXTI4_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR2_EXTI4_PB: u32 = 0x00000001;
pub const SYSCFG_EXTICR2_EXTI4_PC: u32 = 0x00000002;
pub const SYSCFG_EXTICR2_EXTI4_PD: u32 = 0x00000003;
pub const SYSCFG_EXTICR2_EXTI4_PE: u32 = 0x00000004;
pub const SYSCFG_EXTICR2_EXTI4_PF: u32 = 0x00000006;
pub const SYSCFG_EXTICR2_EXTI4_PG: u32 = 0x00000007;
pub const SYSCFG_EXTICR2_EXTI5_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR2_EXTI5_PB: u32 = 0x00000010;
pub const SYSCFG_EXTICR2_EXTI5_PC: u32 = 0x00000020;
pub const SYSCFG_EXTICR2_EXTI5_PD: u32 = 0x00000030;
pub const SYSCFG_EXTICR2_EXTI5_PE: u32 = 0x00000040;
pub const SYSCFG_EXTICR2_EXTI5_PF: u32 = 0x00000060;
pub const SYSCFG_EXTICR2_EXTI5_PG: u32 = 0x00000070;
pub const SYSCFG_EXTICR2_EXTI6_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR2_EXTI6_PB: u32 = 0x00000100;
pub const SYSCFG_EXTICR2_EXTI6_PC: u32 = 0x00000200;
pub const SYSCFG_EXTICR2_EXTI6_PD: u32 = 0x00000300;
pub const SYSCFG_EXTICR2_EXTI6_PE: u32 = 0x00000400;
pub const SYSCFG_EXTICR2_EXTI6_PF: u32 = 0x00000600;
pub const SYSCFG_EXTICR2_EXTI6_PG: u32 = 0x00000700;
pub const SYSCFG_EXTICR2_EXTI7_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR2_EXTI7_PB: u32 = 0x00001000;
pub const SYSCFG_EXTICR2_EXTI7_PC: u32 = 0x00002000;
pub const SYSCFG_EXTICR2_EXTI7_PD: u32 = 0x00003000;
pub const SYSCFG_EXTICR2_EXTI7_PE: u32 = 0x00004000;
pub const SYSCFG_EXTICR2_EXTI7_PF: u32 = 0x00006000;
pub const SYSCFG_EXTICR2_EXTI7_PG: u32 = 0x00007000;
pub const SYSCFG_EXTICR3_EXTI8_Pos: u32 = 0;
pub const SYSCFG_EXTICR3_EXTI8_Msk: u32 = 0xF << SYSCFG_EXTICR3_EXTI8_Pos;
pub const SYSCFG_EXTICR3_EXTI8: u32 = SYSCFG_EXTICR3_EXTI8_Msk;
pub const SYSCFG_EXTICR3_EXTI9_Pos: u32 = 4;
pub const SYSCFG_EXTICR3_EXTI9_Msk: u32 = 0xF << SYSCFG_EXTICR3_EXTI9_Pos;
pub const SYSCFG_EXTICR3_EXTI9: u32 = SYSCFG_EXTICR3_EXTI9_Msk;
pub const SYSCFG_EXTICR3_EXTI10_Pos: u32 = 8;
pub const SYSCFG_EXTICR3_EXTI10_Msk: u32 = 0xF << SYSCFG_EXTICR3_EXTI10_Pos;
pub const SYSCFG_EXTICR3_EXTI10: u32 = SYSCFG_EXTICR3_EXTI10_Msk;
pub const SYSCFG_EXTICR3_EXTI11_Pos: u32 = 12;
pub const SYSCFG_EXTICR3_EXTI11_Msk: u32 = 0xF << SYSCFG_EXTICR3_EXTI11_Pos;
pub const SYSCFG_EXTICR3_EXTI11: u32 = SYSCFG_EXTICR3_EXTI11_Msk;
pub const SYSCFG_EXTICR3_EXTI8_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR3_EXTI8_PB: u32 = 0x00000001;
pub const SYSCFG_EXTICR3_EXTI8_PC: u32 = 0x00000002;
pub const SYSCFG_EXTICR3_EXTI8_PD: u32 = 0x00000003;
pub const SYSCFG_EXTICR3_EXTI8_PE: u32 = 0x00000004;
pub const SYSCFG_EXTICR3_EXTI8_PF: u32 = 0x00000006;
pub const SYSCFG_EXTICR3_EXTI8_PG: u32 = 0x00000007;
pub const SYSCFG_EXTICR3_EXTI9_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR3_EXTI9_PB: u32 = 0x00000010;
pub const SYSCFG_EXTICR3_EXTI9_PC: u32 = 0x00000020;
pub const SYSCFG_EXTICR3_EXTI9_PD: u32 = 0x00000030;
pub const SYSCFG_EXTICR3_EXTI9_PE: u32 = 0x00000040;
pub const SYSCFG_EXTICR3_EXTI9_PF: u32 = 0x00000060;
pub const SYSCFG_EXTICR3_EXTI9_PG: u32 = 0x00000070;
pub const SYSCFG_EXTICR3_EXTI10_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR3_EXTI10_PB: u32 = 0x00000100;
pub const SYSCFG_EXTICR3_EXTI10_PC: u32 = 0x00000200;
pub const SYSCFG_EXTICR3_EXTI10_PD: u32 = 0x00000300;
pub const SYSCFG_EXTICR3_EXTI10_PE: u32 = 0x00000400;
pub const SYSCFG_EXTICR3_EXTI10_PF: u32 = 0x00000600;
pub const SYSCFG_EXTICR3_EXTI10_PG: u32 = 0x00000700;
pub const SYSCFG_EXTICR3_EXTI11_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR3_EXTI11_PB: u32 = 0x00001000;
pub const SYSCFG_EXTICR3_EXTI11_PC: u32 = 0x00002000;
pub const SYSCFG_EXTICR3_EXTI11_PD: u32 = 0x00003000;
pub const SYSCFG_EXTICR3_EXTI11_PE: u32 = 0x00004000;
pub const SYSCFG_EXTICR3_EXTI11_PF: u32 = 0x00006000;
pub const SYSCFG_EXTICR3_EXTI11_PG: u32 = 0x00007000;
pub const SYSCFG_EXTICR4_EXTI12_Pos: u32 = 0;
pub const SYSCFG_EXTICR4_EXTI12_Msk: u32 = 0xF << SYSCFG_EXTICR4_EXTI12_Pos;
pub const SYSCFG_EXTICR4_EXTI12: u32 = SYSCFG_EXTICR4_EXTI12_Msk;
pub const SYSCFG_EXTICR4_EXTI13_Pos: u32 = 4;
pub const SYSCFG_EXTICR4_EXTI13_Msk: u32 = 0xF << SYSCFG_EXTICR4_EXTI13_Pos;
pub const SYSCFG_EXTICR4_EXTI13: u32 = SYSCFG_EXTICR4_EXTI13_Msk;
pub const SYSCFG_EXTICR4_EXTI14_Pos: u32 = 8;
pub const SYSCFG_EXTICR4_EXTI14_Msk: u32 = 0xF << SYSCFG_EXTICR4_EXTI14_Pos;
pub const SYSCFG_EXTICR4_EXTI14: u32 = SYSCFG_EXTICR4_EXTI14_Msk;
pub const SYSCFG_EXTICR4_EXTI15_Pos: u32 = 12;
pub const SYSCFG_EXTICR4_EXTI15_Msk: u32 = 0xF << SYSCFG_EXTICR4_EXTI15_Pos;
pub const SYSCFG_EXTICR4_EXTI15: u32 = SYSCFG_EXTICR4_EXTI15_Msk;
pub const SYSCFG_EXTICR4_EXTI12_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR4_EXTI12_PB: u32 = 0x00000001;
pub const SYSCFG_EXTICR4_EXTI12_PC: u32 = 0x00000002;
pub const SYSCFG_EXTICR4_EXTI12_PD: u32 = 0x00000003;
pub const SYSCFG_EXTICR4_EXTI12_PE: u32 = 0x00000004;
pub const SYSCFG_EXTICR4_EXTI12_PF: u32 = 0x00000006;
pub const SYSCFG_EXTICR4_EXTI12_PG: u32 = 0x00000007;
pub const SYSCFG_EXTICR4_EXTI13_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR4_EXTI13_PB: u32 = 0x00000010;
pub const SYSCFG_EXTICR4_EXTI13_PC: u32 = 0x00000020;
pub const SYSCFG_EXTICR4_EXTI13_PD: u32 = 0x00000030;
pub const SYSCFG_EXTICR4_EXTI13_PE: u32 = 0x00000040;
pub const SYSCFG_EXTICR4_EXTI13_PF: u32 = 0x00000060;
pub const SYSCFG_EXTICR4_EXTI13_PG: u32 = 0x00000070;
pub const SYSCFG_EXTICR4_EXTI14_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR4_EXTI14_PB: u32 = 0x00000100;
pub const SYSCFG_EXTICR4_EXTI14_PC: u32 = 0x00000200;
pub const SYSCFG_EXTICR4_EXTI14_PD: u32 = 0x00000300;
pub const SYSCFG_EXTICR4_EXTI14_PE: u32 = 0x00000400;
pub const SYSCFG_EXTICR4_EXTI14_PF: u32 = 0x00000600;
pub const SYSCFG_EXTICR4_EXTI14_PG: u32 = 0x00000700;
pub const SYSCFG_EXTICR4_EXTI15_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR4_EXTI15_PB: u32 = 0x00001000;
pub const SYSCFG_EXTICR4_EXTI15_PC: u32 = 0x00002000;
pub const SYSCFG_EXTICR4_EXTI15_PD: u32 = 0x00003000;
pub const SYSCFG_EXTICR4_EXTI15_PE: u32 = 0x00004000;
pub const SYSCFG_EXTICR4_EXTI15_PF: u32 = 0x00006000;
pub const SYSCFG_EXTICR4_EXTI15_PG: u32 = 0x00007000;
pub const RI_ICR_IC1OS_Pos: u32 = 0;
pub const RI_ICR_IC1OS_Msk: u32 = 0xF << RI_ICR_IC1OS_Pos;
pub const RI_ICR_IC1OS: u32 = RI_ICR_IC1OS_Msk;
pub const RI_ICR_IC1OS_0: u32 = 0x1 << RI_ICR_IC1OS_Pos;
pub const RI_ICR_IC1OS_1: u32 = 0x2 << RI_ICR_IC1OS_Pos;
pub const RI_ICR_IC1OS_2: u32 = 0x4 << RI_ICR_IC1OS_Pos;
pub const RI_ICR_IC1OS_3: u32 = 0x8 << RI_ICR_IC1OS_Pos;
pub const RI_ICR_IC2OS_Pos: u32 = 4;
pub const RI_ICR_IC2OS_Msk: u32 = 0xF << RI_ICR_IC2OS_Pos;
pub const RI_ICR_IC2OS: u32 = RI_ICR_IC2OS_Msk;
pub const RI_ICR_IC2OS_0: u32 = 0x1 << RI_ICR_IC2OS_Pos;
pub const RI_ICR_IC2OS_1: u32 = 0x2 << RI_ICR_IC2OS_Pos;
pub const RI_ICR_IC2OS_2: u32 = 0x4 << RI_ICR_IC2OS_Pos;
pub const RI_ICR_IC2OS_3: u32 = 0x8 << RI_ICR_IC2OS_Pos;
pub const RI_ICR_IC3OS_Pos: u32 = 8;
pub const RI_ICR_IC3OS_Msk: u32 = 0xF << RI_ICR_IC3OS_Pos;
pub const RI_ICR_IC3OS: u32 = RI_ICR_IC3OS_Msk;
pub const RI_ICR_IC3OS_0: u32 = 0x1 << RI_ICR_IC3OS_Pos;
pub const RI_ICR_IC3OS_1: u32 = 0x2 << RI_ICR_IC3OS_Pos;
pub const RI_ICR_IC3OS_2: u32 = 0x4 << RI_ICR_IC3OS_Pos;
pub const RI_ICR_IC3OS_3: u32 = 0x8 << RI_ICR_IC3OS_Pos;
pub const RI_ICR_IC4OS_Pos: u32 = 12;
pub const RI_ICR_IC4OS_Msk: u32 = 0xF << RI_ICR_IC4OS_Pos;
pub const RI_ICR_IC4OS: u32 = RI_ICR_IC4OS_Msk;
pub const RI_ICR_IC4OS_0: u32 = 0x1 << RI_ICR_IC4OS_Pos;
pub const RI_ICR_IC4OS_1: u32 = 0x2 << RI_ICR_IC4OS_Pos;
pub const RI_ICR_IC4OS_2: u32 = 0x4 << RI_ICR_IC4OS_Pos;
pub const RI_ICR_IC4OS_3: u32 = 0x8 << RI_ICR_IC4OS_Pos;
pub const RI_ICR_TIM_Pos: u32 = 16;
pub const RI_ICR_TIM_Msk: u32 = 0x3 << RI_ICR_TIM_Pos;
pub const RI_ICR_TIM: u32 = RI_ICR_TIM_Msk;
pub const RI_ICR_TIM_0: u32 = 0x1 << RI_ICR_TIM_Pos;
pub const RI_ICR_TIM_1: u32 = 0x2 << RI_ICR_TIM_Pos;
pub const RI_ICR_IC1_Pos: u32 = 18;
pub const RI_ICR_IC1_Msk: u32 = 0x1 << RI_ICR_IC1_Pos;
pub const RI_ICR_IC1: u32 = RI_ICR_IC1_Msk;
pub const RI_ICR_IC2_Pos: u32 = 19;
pub const RI_ICR_IC2_Msk: u32 = 0x1 << RI_ICR_IC2_Pos;
pub const RI_ICR_IC2: u32 = RI_ICR_IC2_Msk;
pub const RI_ICR_IC3_Pos: u32 = 20;
pub const RI_ICR_IC3_Msk: u32 = 0x1 << RI_ICR_IC3_Pos;
pub const RI_ICR_IC3: u32 = RI_ICR_IC3_Msk;
pub const RI_ICR_IC4_Pos: u32 = 21;
pub const RI_ICR_IC4_Msk: u32 = 0x1 << RI_ICR_IC4_Pos;
pub const RI_ICR_IC4: u32 = RI_ICR_IC4_Msk;
pub const RI_ASCR1_CH_Pos: u32 = 0;
pub const RI_ASCR1_CH_Msk: u32 = 0x7BFDFFFF << RI_ASCR1_CH_Pos;
pub const RI_ASCR1_CH: u32 = RI_ASCR1_CH_Msk;
pub const RI_ASCR1_CH_0: u32 = 0x00000001;
pub const RI_ASCR1_CH_1: u32 = 0x00000002;
pub const RI_ASCR1_CH_2: u32 = 0x00000004;
pub const RI_ASCR1_CH_3: u32 = 0x00000008;
pub const RI_ASCR1_CH_4: u32 = 0x00000010;
pub const RI_ASCR1_CH_5: u32 = 0x00000020;
pub const RI_ASCR1_CH_6: u32 = 0x00000040;
pub const RI_ASCR1_CH_7: u32 = 0x00000080;
pub const RI_ASCR1_CH_8: u32 = 0x00000100;
pub const RI_ASCR1_CH_9: u32 = 0x00000200;
pub const RI_ASCR1_CH_10: u32 = 0x00000400;
pub const RI_ASCR1_CH_11: u32 = 0x00000800;
pub const RI_ASCR1_CH_12: u32 = 0x00001000;
pub const RI_ASCR1_CH_13: u32 = 0x00002000;
pub const RI_ASCR1_CH_14: u32 = 0x00004000;
pub const RI_ASCR1_CH_15: u32 = 0x00008000;
pub const RI_ASCR1_CH_31: u32 = 0x00010000;
pub const RI_ASCR1_CH_18: u32 = 0x00040000;
pub const RI_ASCR1_CH_19: u32 = 0x00080000;
pub const RI_ASCR1_CH_20: u32 = 0x00100000;
pub const RI_ASCR1_CH_21: u32 = 0x00200000;
pub const RI_ASCR1_CH_22: u32 = 0x00400000;
pub const RI_ASCR1_CH_23: u32 = 0x00800000;
pub const RI_ASCR1_CH_24: u32 = 0x01000000;
pub const RI_ASCR1_CH_25: u32 = 0x02000000;
pub const RI_ASCR1_VCOMP_Pos: u32 = 26;
pub const RI_ASCR1_VCOMP_Msk: u32 = 0x1 << RI_ASCR1_VCOMP_Pos;
pub const RI_ASCR1_VCOMP: u32 = RI_ASCR1_VCOMP_Msk;
pub const RI_ASCR1_CH_27: u32 = 0x08000000;
pub const RI_ASCR1_CH_28: u32 = 0x10000000;
pub const RI_ASCR1_CH_29: u32 = 0x20000000;
pub const RI_ASCR1_CH_30: u32 = 0x40000000;
pub const RI_ASCR1_SCM_Pos: u32 = 31;
pub const RI_ASCR1_SCM_Msk: u32 = 0x1 << RI_ASCR1_SCM_Pos;
pub const RI_ASCR1_SCM: u32 = RI_ASCR1_SCM_Msk;
pub const RI_ASCR2_GR10_1: u32 = 0x00000001;
pub const RI_ASCR2_GR10_2: u32 = 0x00000002;
pub const RI_ASCR2_GR10_3: u32 = 0x00000004;
pub const RI_ASCR2_GR10_4: u32 = 0x00000008;
pub const RI_ASCR2_GR6_Pos: u32 = 4;
pub const RI_ASCR2_GR6_Msk: u32 = 0x1800003 << RI_ASCR2_GR6_Pos;
pub const RI_ASCR2_GR6: u32 = RI_ASCR2_GR6_Msk;
pub const RI_ASCR2_GR6_1: u32 = 0x0000001 << RI_ASCR2_GR6_Pos;
pub const RI_ASCR2_GR6_2: u32 = 0x0000002 << RI_ASCR2_GR6_Pos;
pub const RI_ASCR2_GR6_3: u32 = 0x0800000 << RI_ASCR2_GR6_Pos;
pub const RI_ASCR2_GR6_4: u32 = 0x1000000 << RI_ASCR2_GR6_Pos;
pub const RI_ASCR2_GR5_1: u32 = 0x00000040;
pub const RI_ASCR2_GR5_2: u32 = 0x00000080;
pub const RI_ASCR2_GR5_3: u32 = 0x00000100;
pub const RI_ASCR2_GR4_1: u32 = 0x00000200;
pub const RI_ASCR2_GR4_2: u32 = 0x00000400;
pub const RI_ASCR2_GR4_3: u32 = 0x00000800;
pub const RI_ASCR2_GR4_4: u32 = 0x00008000;
pub const RI_ASCR2_CH0b_Pos: u32 = 16;
pub const RI_ASCR2_CH0b_Msk: u32 = 0x1 << RI_ASCR2_CH0b_Pos;
pub const RI_ASCR2_CH0b: u32 = RI_ASCR2_CH0b_Msk;
pub const RI_ASCR2_CH1b_Pos: u32 = 17;
pub const RI_ASCR2_CH1b_Msk: u32 = 0x1 << RI_ASCR2_CH1b_Pos;
pub const RI_ASCR2_CH1b: u32 = RI_ASCR2_CH1b_Msk;
pub const RI_ASCR2_CH2b_Pos: u32 = 18;
pub const RI_ASCR2_CH2b_Msk: u32 = 0x1 << RI_ASCR2_CH2b_Pos;
pub const RI_ASCR2_CH2b: u32 = RI_ASCR2_CH2b_Msk;
pub const RI_ASCR2_CH3b_Pos: u32 = 19;
pub const RI_ASCR2_CH3b_Msk: u32 = 0x1 << RI_ASCR2_CH3b_Pos;
pub const RI_ASCR2_CH3b: u32 = RI_ASCR2_CH3b_Msk;
pub const RI_ASCR2_CH6b_Pos: u32 = 20;
pub const RI_ASCR2_CH6b_Msk: u32 = 0x1 << RI_ASCR2_CH6b_Pos;
pub const RI_ASCR2_CH6b: u32 = RI_ASCR2_CH6b_Msk;
pub const RI_ASCR2_CH7b_Pos: u32 = 21;
pub const RI_ASCR2_CH7b_Msk: u32 = 0x1 << RI_ASCR2_CH7b_Pos;
pub const RI_ASCR2_CH7b: u32 = RI_ASCR2_CH7b_Msk;
pub const RI_ASCR2_CH8b_Pos: u32 = 22;
pub const RI_ASCR2_CH8b_Msk: u32 = 0x1 << RI_ASCR2_CH8b_Pos;
pub const RI_ASCR2_CH8b: u32 = RI_ASCR2_CH8b_Msk;
pub const RI_ASCR2_CH9b_Pos: u32 = 23;
pub const RI_ASCR2_CH9b_Msk: u32 = 0x1 << RI_ASCR2_CH9b_Pos;
pub const RI_ASCR2_CH9b: u32 = RI_ASCR2_CH9b_Msk;
pub const RI_ASCR2_CH10b_Pos: u32 = 24;
pub const RI_ASCR2_CH10b_Msk: u32 = 0x1 << RI_ASCR2_CH10b_Pos;
pub const RI_ASCR2_CH10b: u32 = RI_ASCR2_CH10b_Msk;
pub const RI_ASCR2_CH11b_Pos: u32 = 25;
pub const RI_ASCR2_CH11b_Msk: u32 = 0x1 << RI_ASCR2_CH11b_Pos;
pub const RI_ASCR2_CH11b: u32 = RI_ASCR2_CH11b_Msk;
pub const RI_ASCR2_CH12b_Pos: u32 = 26;
pub const RI_ASCR2_CH12b_Msk: u32 = 0x1 << RI_ASCR2_CH12b_Pos;
pub const RI_ASCR2_CH12b: u32 = RI_ASCR2_CH12b_Msk;
pub const RI_HYSCR1_PA_Pos: u32 = 0;
pub const RI_HYSCR1_PA_Msk: u32 = 0xFFFF << RI_HYSCR1_PA_Pos;
pub const RI_HYSCR1_PA: u32 = RI_HYSCR1_PA_Msk;
pub const RI_HYSCR1_PA_0: u32 = 0x0001 << RI_HYSCR1_PA_Pos;
pub const RI_HYSCR1_PA_1: u32 = 0x0002 << RI_HYSCR1_PA_Pos;
pub const RI_HYSCR1_PA_2: u32 = 0x0004 << RI_HYSCR1_PA_Pos;
pub const RI_HYSCR1_PA_3: u32 = 0x0008 << RI_HYSCR1_PA_Pos;
pub const RI_HYSCR1_PA_4: u32 = 0x0010 << RI_HYSCR1_PA_Pos;
pub const RI_HYSCR1_PA_5: u32 = 0x0020 << RI_HYSCR1_PA_Pos;
pub const RI_HYSCR1_PA_6: u32 = 0x0040 << RI_HYSCR1_PA_Pos;
pub const RI_HYSCR1_PA_7: u32 = 0x0080 << RI_HYSCR1_PA_Pos;
pub const RI_HYSCR1_PA_8: u32 = 0x0100 << RI_HYSCR1_PA_Pos;
pub const RI_HYSCR1_PA_9: u32 = 0x0200 << RI_HYSCR1_PA_Pos;
pub const RI_HYSCR1_PA_10: u32 = 0x0400 << RI_HYSCR1_PA_Pos;
pub const RI_HYSCR1_PA_11: u32 = 0x0800 << RI_HYSCR1_PA_Pos;
pub const RI_HYSCR1_PA_12: u32 = 0x1000 << RI_HYSCR1_PA_Pos;
pub const RI_HYSCR1_PA_13: u32 = 0x2000 << RI_HYSCR1_PA_Pos;
pub const RI_HYSCR1_PA_14: u32 = 0x4000 << RI_HYSCR1_PA_Pos;
pub const RI_HYSCR1_PA_15: u32 = 0x8000 << RI_HYSCR1_PA_Pos;
pub const RI_HYSCR1_PB_Pos: u32 = 16;
pub const RI_HYSCR1_PB_Msk: u32 = 0xFFFF << RI_HYSCR1_PB_Pos;
pub const RI_HYSCR1_PB: u32 = RI_HYSCR1_PB_Msk;
pub const RI_HYSCR1_PB_0: u32 = 0x0001 << RI_HYSCR1_PB_Pos;
pub const RI_HYSCR1_PB_1: u32 = 0x0002 << RI_HYSCR1_PB_Pos;
pub const RI_HYSCR1_PB_2: u32 = 0x0004 << RI_HYSCR1_PB_Pos;
pub const RI_HYSCR1_PB_3: u32 = 0x0008 << RI_HYSCR1_PB_Pos;
pub const RI_HYSCR1_PB_4: u32 = 0x0010 << RI_HYSCR1_PB_Pos;
pub const RI_HYSCR1_PB_5: u32 = 0x0020 << RI_HYSCR1_PB_Pos;
pub const RI_HYSCR1_PB_6: u32 = 0x0040 << RI_HYSCR1_PB_Pos;
pub const RI_HYSCR1_PB_7: u32 = 0x0080 << RI_HYSCR1_PB_Pos;
pub const RI_HYSCR1_PB_8: u32 = 0x0100 << RI_HYSCR1_PB_Pos;
pub const RI_HYSCR1_PB_9: u32 = 0x0200 << RI_HYSCR1_PB_Pos;
pub const RI_HYSCR1_PB_10: u32 = 0x0400 << RI_HYSCR1_PB_Pos;
pub const RI_HYSCR1_PB_11: u32 = 0x0800 << RI_HYSCR1_PB_Pos;
pub const RI_HYSCR1_PB_12: u32 = 0x1000 << RI_HYSCR1_PB_Pos;
pub const RI_HYSCR1_PB_13: u32 = 0x2000 << RI_HYSCR1_PB_Pos;
pub const RI_HYSCR1_PB_14: u32 = 0x4000 << RI_HYSCR1_PB_Pos;
pub const RI_HYSCR1_PB_15: u32 = 0x8000 << RI_HYSCR1_PB_Pos;
pub const RI_HYSCR2_PC_Pos: u32 = 0;
pub const RI_HYSCR2_PC_Msk: u32 = 0xFFFF << RI_HYSCR2_PC_Pos;
pub const RI_HYSCR2_PC: u32 = RI_HYSCR2_PC_Msk;
pub const RI_HYSCR2_PC_0: u32 = 0x0001 << RI_HYSCR2_PC_Pos;
pub const RI_HYSCR2_PC_1: u32 = 0x0002 << RI_HYSCR2_PC_Pos;
pub const RI_HYSCR2_PC_2: u32 = 0x0004 << RI_HYSCR2_PC_Pos;
pub const RI_HYSCR2_PC_3: u32 = 0x0008 << RI_HYSCR2_PC_Pos;
pub const RI_HYSCR2_PC_4: u32 = 0x0010 << RI_HYSCR2_PC_Pos;
pub const RI_HYSCR2_PC_5: u32 = 0x0020 << RI_HYSCR2_PC_Pos;
pub const RI_HYSCR2_PC_6: u32 = 0x0040 << RI_HYSCR2_PC_Pos;
pub const RI_HYSCR2_PC_7: u32 = 0x0080 << RI_HYSCR2_PC_Pos;
pub const RI_HYSCR2_PC_8: u32 = 0x0100 << RI_HYSCR2_PC_Pos;
pub const RI_HYSCR2_PC_9: u32 = 0x0200 << RI_HYSCR2_PC_Pos;
pub const RI_HYSCR2_PC_10: u32 = 0x0400 << RI_HYSCR2_PC_Pos;
pub const RI_HYSCR2_PC_11: u32 = 0x0800 << RI_HYSCR2_PC_Pos;
pub const RI_HYSCR2_PC_12: u32 = 0x1000 << RI_HYSCR2_PC_Pos;
pub const RI_HYSCR2_PC_13: u32 = 0x2000 << RI_HYSCR2_PC_Pos;
pub const RI_HYSCR2_PC_14: u32 = 0x4000 << RI_HYSCR2_PC_Pos;
pub const RI_HYSCR2_PC_15: u32 = 0x8000 << RI_HYSCR2_PC_Pos;
pub const RI_HYSCR2_PD_Pos: u32 = 16;
pub const RI_HYSCR2_PD_Msk: u32 = 0xFFFF << RI_HYSCR2_PD_Pos;
pub const RI_HYSCR2_PD: u32 = RI_HYSCR2_PD_Msk;
pub const RI_HYSCR2_PD_0: u32 = 0x0001 << RI_HYSCR2_PD_Pos;
pub const RI_HYSCR2_PD_1: u32 = 0x0002 << RI_HYSCR2_PD_Pos;
pub const RI_HYSCR2_PD_2: u32 = 0x0004 << RI_HYSCR2_PD_Pos;
pub const RI_HYSCR2_PD_3: u32 = 0x0008 << RI_HYSCR2_PD_Pos;
pub const RI_HYSCR2_PD_4: u32 = 0x0010 << RI_HYSCR2_PD_Pos;
pub const RI_HYSCR2_PD_5: u32 = 0x0020 << RI_HYSCR2_PD_Pos;
pub const RI_HYSCR2_PD_6: u32 = 0x0040 << RI_HYSCR2_PD_Pos;
pub const RI_HYSCR2_PD_7: u32 = 0x0080 << RI_HYSCR2_PD_Pos;
pub const RI_HYSCR2_PD_8: u32 = 0x0100 << RI_HYSCR2_PD_Pos;
pub const RI_HYSCR2_PD_9: u32 = 0x0200 << RI_HYSCR2_PD_Pos;
pub const RI_HYSCR2_PD_10: u32 = 0x0400 << RI_HYSCR2_PD_Pos;
pub const RI_HYSCR2_PD_11: u32 = 0x0800 << RI_HYSCR2_PD_Pos;
pub const RI_HYSCR2_PD_12: u32 = 0x1000 << RI_HYSCR2_PD_Pos;
pub const RI_HYSCR2_PD_13: u32 = 0x2000 << RI_HYSCR2_PD_Pos;
pub const RI_HYSCR2_PD_14: u32 = 0x4000 << RI_HYSCR2_PD_Pos;
pub const RI_HYSCR2_PD_15: u32 = 0x8000 << RI_HYSCR2_PD_Pos;
pub const RI_HYSCR3_PE_Pos: u32 = 0;
pub const RI_HYSCR3_PE_Msk: u32 = 0xFFFF << RI_HYSCR3_PE_Pos;
pub const RI_HYSCR3_PE: u32 = RI_HYSCR3_PE_Msk;
pub const RI_HYSCR3_PE_0: u32 = 0x0001 << RI_HYSCR3_PE_Pos;
pub const RI_HYSCR3_PE_1: u32 = 0x0002 << RI_HYSCR3_PE_Pos;
pub const RI_HYSCR3_PE_2: u32 = 0x0004 << RI_HYSCR3_PE_Pos;
pub const RI_HYSCR3_PE_3: u32 = 0x0008 << RI_HYSCR3_PE_Pos;
pub const RI_HYSCR3_PE_4: u32 = 0x0010 << RI_HYSCR3_PE_Pos;
pub const RI_HYSCR3_PE_5: u32 = 0x0020 << RI_HYSCR3_PE_Pos;
pub const RI_HYSCR3_PE_6: u32 = 0x0040 << RI_HYSCR3_PE_Pos;
pub const RI_HYSCR3_PE_7: u32 = 0x0080 << RI_HYSCR3_PE_Pos;
pub const RI_HYSCR3_PE_8: u32 = 0x0100 << RI_HYSCR3_PE_Pos;
pub const RI_HYSCR3_PE_9: u32 = 0x0200 << RI_HYSCR3_PE_Pos;
pub const RI_HYSCR3_PE_10: u32 = 0x0400 << RI_HYSCR3_PE_Pos;
pub const RI_HYSCR3_PE_11: u32 = 0x0800 << RI_HYSCR3_PE_Pos;
pub const RI_HYSCR3_PE_12: u32 = 0x1000 << RI_HYSCR3_PE_Pos;
pub const RI_HYSCR3_PE_13: u32 = 0x2000 << RI_HYSCR3_PE_Pos;
pub const RI_HYSCR3_PE_14: u32 = 0x4000 << RI_HYSCR3_PE_Pos;
pub const RI_HYSCR3_PE_15: u32 = 0x8000 << RI_HYSCR3_PE_Pos;
pub const RI_HYSCR3_PF_Pos: u32 = 16;
pub const RI_HYSCR3_PF_Msk: u32 = 0xFFFF << RI_HYSCR3_PF_Pos;
pub const RI_HYSCR3_PF: u32 = RI_HYSCR3_PF_Msk;
pub const RI_HYSCR3_PF_0: u32 = 0x0001 << RI_HYSCR3_PF_Pos;
pub const RI_HYSCR3_PF_1: u32 = 0x0002 << RI_HYSCR3_PF_Pos;
pub const RI_HYSCR3_PF_2: u32 = 0x0004 << RI_HYSCR3_PF_Pos;
pub const RI_HYSCR3_PF_3: u32 = 0x0008 << RI_HYSCR3_PF_Pos;
pub const RI_HYSCR3_PF_4: u32 = 0x0010 << RI_HYSCR3_PF_Pos;
pub const RI_HYSCR3_PF_5: u32 = 0x0020 << RI_HYSCR3_PF_Pos;
pub const RI_HYSCR3_PF_6: u32 = 0x0040 << RI_HYSCR3_PF_Pos;
pub const RI_HYSCR3_PF_7: u32 = 0x0080 << RI_HYSCR3_PF_Pos;
pub const RI_HYSCR3_PF_8: u32 = 0x0100 << RI_HYSCR3_PF_Pos;
pub const RI_HYSCR3_PF_9: u32 = 0x0200 << RI_HYSCR3_PF_Pos;
pub const RI_HYSCR3_PF_10: u32 = 0x0400 << RI_HYSCR3_PF_Pos;
pub const RI_HYSCR3_PF_11: u32 = 0x0800 << RI_HYSCR3_PF_Pos;
pub const RI_HYSCR3_PF_12: u32 = 0x1000 << RI_HYSCR3_PF_Pos;
pub const RI_HYSCR3_PF_13: u32 = 0x2000 << RI_HYSCR3_PF_Pos;
pub const RI_HYSCR3_PF_14: u32 = 0x4000 << RI_HYSCR3_PF_Pos;
pub const RI_HYSCR3_PF_15: u32 = 0x8000 << RI_HYSCR3_PF_Pos;
pub const RI_HYSCR4_PG_Pos: u32 = 0;
pub const RI_HYSCR4_PG_Msk: u32 = 0xFFFF << RI_HYSCR4_PG_Pos;
pub const RI_HYSCR4_PG: u32 = RI_HYSCR4_PG_Msk;
pub const RI_HYSCR4_PG_0: u32 = 0x0001 << RI_HYSCR4_PG_Pos;
pub const RI_HYSCR4_PG_1: u32 = 0x0002 << RI_HYSCR4_PG_Pos;
pub const RI_HYSCR4_PG_2: u32 = 0x0004 << RI_HYSCR4_PG_Pos;
pub const RI_HYSCR4_PG_3: u32 = 0x0008 << RI_HYSCR4_PG_Pos;
pub const RI_HYSCR4_PG_4: u32 = 0x0010 << RI_HYSCR4_PG_Pos;
pub const RI_HYSCR4_PG_5: u32 = 0x0020 << RI_HYSCR4_PG_Pos;
pub const RI_HYSCR4_PG_6: u32 = 0x0040 << RI_HYSCR4_PG_Pos;
pub const RI_HYSCR4_PG_7: u32 = 0x0080 << RI_HYSCR4_PG_Pos;
pub const RI_HYSCR4_PG_8: u32 = 0x0100 << RI_HYSCR4_PG_Pos;
pub const RI_HYSCR4_PG_9: u32 = 0x0200 << RI_HYSCR4_PG_Pos;
pub const RI_HYSCR4_PG_10: u32 = 0x0400 << RI_HYSCR4_PG_Pos;
pub const RI_HYSCR4_PG_11: u32 = 0x0800 << RI_HYSCR4_PG_Pos;
pub const RI_HYSCR4_PG_12: u32 = 0x1000 << RI_HYSCR4_PG_Pos;
pub const RI_HYSCR4_PG_13: u32 = 0x2000 << RI_HYSCR4_PG_Pos;
pub const RI_HYSCR4_PG_14: u32 = 0x4000 << RI_HYSCR4_PG_Pos;
pub const RI_HYSCR4_PG_15: u32 = 0x8000 << RI_HYSCR4_PG_Pos;
pub const RI_ASMR1_PA_Pos: u32 = 0;
pub const RI_ASMR1_PA_Msk: u32 = 0xFFFF << RI_ASMR1_PA_Pos;
pub const RI_ASMR1_PA: u32 = RI_ASMR1_PA_Msk;
pub const RI_ASMR1_PA_0: u32 = 0x0001 << RI_ASMR1_PA_Pos;
pub const RI_ASMR1_PA_1: u32 = 0x0002 << RI_ASMR1_PA_Pos;
pub const RI_ASMR1_PA_2: u32 = 0x0004 << RI_ASMR1_PA_Pos;
pub const RI_ASMR1_PA_3: u32 = 0x0008 << RI_ASMR1_PA_Pos;
pub const RI_ASMR1_PA_4: u32 = 0x0010 << RI_ASMR1_PA_Pos;
pub const RI_ASMR1_PA_5: u32 = 0x0020 << RI_ASMR1_PA_Pos;
pub const RI_ASMR1_PA_6: u32 = 0x0040 << RI_ASMR1_PA_Pos;
pub const RI_ASMR1_PA_7: u32 = 0x0080 << RI_ASMR1_PA_Pos;
pub const RI_ASMR1_PA_8: u32 = 0x0100 << RI_ASMR1_PA_Pos;
pub const RI_ASMR1_PA_9: u32 = 0x0200 << RI_ASMR1_PA_Pos;
pub const RI_ASMR1_PA_10: u32 = 0x0400 << RI_ASMR1_PA_Pos;
pub const RI_ASMR1_PA_11: u32 = 0x0800 << RI_ASMR1_PA_Pos;
pub const RI_ASMR1_PA_12: u32 = 0x1000 << RI_ASMR1_PA_Pos;
pub const RI_ASMR1_PA_13: u32 = 0x2000 << RI_ASMR1_PA_Pos;
pub const RI_ASMR1_PA_14: u32 = 0x4000 << RI_ASMR1_PA_Pos;
pub const RI_ASMR1_PA_15: u32 = 0x8000 << RI_ASMR1_PA_Pos;
pub const RI_CMR1_PA_Pos: u32 = 0;
pub const RI_CMR1_PA_Msk: u32 = 0xFFFF << RI_CMR1_PA_Pos;
pub const RI_CMR1_PA: u32 = RI_CMR1_PA_Msk;
pub const RI_CMR1_PA_0: u32 = 0x0001 << RI_CMR1_PA_Pos;
pub const RI_CMR1_PA_1: u32 = 0x0002 << RI_CMR1_PA_Pos;
pub const RI_CMR1_PA_2: u32 = 0x0004 << RI_CMR1_PA_Pos;
pub const RI_CMR1_PA_3: u32 = 0x0008 << RI_CMR1_PA_Pos;
pub const RI_CMR1_PA_4: u32 = 0x0010 << RI_CMR1_PA_Pos;
pub const RI_CMR1_PA_5: u32 = 0x0020 << RI_CMR1_PA_Pos;
pub const RI_CMR1_PA_6: u32 = 0x0040 << RI_CMR1_PA_Pos;
pub const RI_CMR1_PA_7: u32 = 0x0080 << RI_CMR1_PA_Pos;
pub const RI_CMR1_PA_8: u32 = 0x0100 << RI_CMR1_PA_Pos;
pub const RI_CMR1_PA_9: u32 = 0x0200 << RI_CMR1_PA_Pos;
pub const RI_CMR1_PA_10: u32 = 0x0400 << RI_CMR1_PA_Pos;
pub const RI_CMR1_PA_11: u32 = 0x0800 << RI_CMR1_PA_Pos;
pub const RI_CMR1_PA_12: u32 = 0x1000 << RI_CMR1_PA_Pos;
pub const RI_CMR1_PA_13: u32 = 0x2000 << RI_CMR1_PA_Pos;
pub const RI_CMR1_PA_14: u32 = 0x4000 << RI_CMR1_PA_Pos;
pub const RI_CMR1_PA_15: u32 = 0x8000 << RI_CMR1_PA_Pos;
pub const RI_CICR1_PA_Pos: u32 = 0;
pub const RI_CICR1_PA_Msk: u32 = 0xFFFF << RI_CICR1_PA_Pos;
pub const RI_CICR1_PA: u32 = RI_CICR1_PA_Msk;
pub const RI_CICR1_PA_0: u32 = 0x0001 << RI_CICR1_PA_Pos;
pub const RI_CICR1_PA_1: u32 = 0x0002 << RI_CICR1_PA_Pos;
pub const RI_CICR1_PA_2: u32 = 0x0004 << RI_CICR1_PA_Pos;
pub const RI_CICR1_PA_3: u32 = 0x0008 << RI_CICR1_PA_Pos;
pub const RI_CICR1_PA_4: u32 = 0x0010 << RI_CICR1_PA_Pos;
pub const RI_CICR1_PA_5: u32 = 0x0020 << RI_CICR1_PA_Pos;
pub const RI_CICR1_PA_6: u32 = 0x0040 << RI_CICR1_PA_Pos;
pub const RI_CICR1_PA_7: u32 = 0x0080 << RI_CICR1_PA_Pos;
pub const RI_CICR1_PA_8: u32 = 0x0100 << RI_CICR1_PA_Pos;
pub const RI_CICR1_PA_9: u32 = 0x0200 << RI_CICR1_PA_Pos;
pub const RI_CICR1_PA_10: u32 = 0x0400 << RI_CICR1_PA_Pos;
pub const RI_CICR1_PA_11: u32 = 0x0800 << RI_CICR1_PA_Pos;
pub const RI_CICR1_PA_12: u32 = 0x1000 << RI_CICR1_PA_Pos;
pub const RI_CICR1_PA_13: u32 = 0x2000 << RI_CICR1_PA_Pos;
pub const RI_CICR1_PA_14: u32 = 0x4000 << RI_CICR1_PA_Pos;
pub const RI_CICR1_PA_15: u32 = 0x8000 << RI_CICR1_PA_Pos;
pub const RI_ASMR2_PB_Pos: u32 = 0;
pub const RI_ASMR2_PB_Msk: u32 = 0xFFFF << RI_ASMR2_PB_Pos;
pub const RI_ASMR2_PB: u32 = RI_ASMR2_PB_Msk;
pub const RI_ASMR2_PB_0: u32 = 0x0001 << RI_ASMR2_PB_Pos;
pub const RI_ASMR2_PB_1: u32 = 0x0002 << RI_ASMR2_PB_Pos;
pub const RI_ASMR2_PB_2: u32 = 0x0004 << RI_ASMR2_PB_Pos;
pub const RI_ASMR2_PB_3: u32 = 0x0008 << RI_ASMR2_PB_Pos;
pub const RI_ASMR2_PB_4: u32 = 0x0010 << RI_ASMR2_PB_Pos;
pub const RI_ASMR2_PB_5: u32 = 0x0020 << RI_ASMR2_PB_Pos;
pub const RI_ASMR2_PB_6: u32 = 0x0040 << RI_ASMR2_PB_Pos;
pub const RI_ASMR2_PB_7: u32 = 0x0080 << RI_ASMR2_PB_Pos;
pub const RI_ASMR2_PB_8: u32 = 0x0100 << RI_ASMR2_PB_Pos;
pub const RI_ASMR2_PB_9: u32 = 0x0200 << RI_ASMR2_PB_Pos;
pub const RI_ASMR2_PB_10: u32 = 0x0400 << RI_ASMR2_PB_Pos;
pub const RI_ASMR2_PB_11: u32 = 0x0800 << RI_ASMR2_PB_Pos;
pub const RI_ASMR2_PB_12: u32 = 0x1000 << RI_ASMR2_PB_Pos;
pub const RI_ASMR2_PB_13: u32 = 0x2000 << RI_ASMR2_PB_Pos;
pub const RI_ASMR2_PB_14: u32 = 0x4000 << RI_ASMR2_PB_Pos;
pub const RI_ASMR2_PB_15: u32 = 0x8000 << RI_ASMR2_PB_Pos;
pub const RI_CMR2_PB_Pos: u32 = 0;
pub const RI_CMR2_PB_Msk: u32 = 0xFFFF << RI_CMR2_PB_Pos;
pub const RI_CMR2_PB: u32 = RI_CMR2_PB_Msk;
pub const RI_CMR2_PB_0: u32 = 0x0001 << RI_CMR2_PB_Pos;
pub const RI_CMR2_PB_1: u32 = 0x0002 << RI_CMR2_PB_Pos;
pub const RI_CMR2_PB_2: u32 = 0x0004 << RI_CMR2_PB_Pos;
pub const RI_CMR2_PB_3: u32 = 0x0008 << RI_CMR2_PB_Pos;
pub const RI_CMR2_PB_4: u32 = 0x0010 << RI_CMR2_PB_Pos;
pub const RI_CMR2_PB_5: u32 = 0x0020 << RI_CMR2_PB_Pos;
pub const RI_CMR2_PB_6: u32 = 0x0040 << RI_CMR2_PB_Pos;
pub const RI_CMR2_PB_7: u32 = 0x0080 << RI_CMR2_PB_Pos;
pub const RI_CMR2_PB_8: u32 = 0x0100 << RI_CMR2_PB_Pos;
pub const RI_CMR2_PB_9: u32 = 0x0200 << RI_CMR2_PB_Pos;
pub const RI_CMR2_PB_10: u32 = 0x0400 << RI_CMR2_PB_Pos;
pub const RI_CMR2_PB_11: u32 = 0x0800 << RI_CMR2_PB_Pos;
pub const RI_CMR2_PB_12: u32 = 0x1000 << RI_CMR2_PB_Pos;
pub const RI_CMR2_PB_13: u32 = 0x2000 << RI_CMR2_PB_Pos;
pub const RI_CMR2_PB_14: u32 = 0x4000 << RI_CMR2_PB_Pos;
pub const RI_CMR2_PB_15: u32 = 0x8000 << RI_CMR2_PB_Pos;
pub const RI_CICR2_PB_Pos: u32 = 0;
pub const RI_CICR2_PB_Msk: u32 = 0xFFFF << RI_CICR2_PB_Pos;
pub const RI_CICR2_PB: u32 = RI_CICR2_PB_Msk;
pub const RI_CICR2_PB_0: u32 = 0x0001 << RI_CICR2_PB_Pos;
pub const RI_CICR2_PB_1: u32 = 0x0002 << RI_CICR2_PB_Pos;
pub const RI_CICR2_PB_2: u32 = 0x0004 << RI_CICR2_PB_Pos;
pub const RI_CICR2_PB_3: u32 = 0x0008 << RI_CICR2_PB_Pos;
pub const RI_CICR2_PB_4: u32 = 0x0010 << RI_CICR2_PB_Pos;
pub const RI_CICR2_PB_5: u32 = 0x0020 << RI_CICR2_PB_Pos;
pub const RI_CICR2_PB_6: u32 = 0x0040 << RI_CICR2_PB_Pos;
pub const RI_CICR2_PB_7: u32 = 0x0080 << RI_CICR2_PB_Pos;
pub const RI_CICR2_PB_8: u32 = 0x0100 << RI_CICR2_PB_Pos;
pub const RI_CICR2_PB_9: u32 = 0x0200 << RI_CICR2_PB_Pos;
pub const RI_CICR2_PB_10: u32 = 0x0400 << RI_CICR2_PB_Pos;
pub const RI_CICR2_PB_11: u32 = 0x0800 << RI_CICR2_PB_Pos;
pub const RI_CICR2_PB_12: u32 = 0x1000 << RI_CICR2_PB_Pos;
pub const RI_CICR2_PB_13: u32 = 0x2000 << RI_CICR2_PB_Pos;
pub const RI_CICR2_PB_14: u32 = 0x4000 << RI_CICR2_PB_Pos;
pub const RI_CICR2_PB_15: u32 = 0x8000 << RI_CICR2_PB_Pos;
pub const RI_ASMR3_PC_Pos: u32 = 0;
pub const RI_ASMR3_PC_Msk: u32 = 0xFFFF << RI_ASMR3_PC_Pos;
pub const RI_ASMR3_PC: u32 = RI_ASMR3_PC_Msk;
pub const RI_ASMR3_PC_0: u32 = 0x0001 << RI_ASMR3_PC_Pos;
pub const RI_ASMR3_PC_1: u32 = 0x0002 << RI_ASMR3_PC_Pos;
pub const RI_ASMR3_PC_2: u32 = 0x0004 << RI_ASMR3_PC_Pos;
pub const RI_ASMR3_PC_3: u32 = 0x0008 << RI_ASMR3_PC_Pos;
pub const RI_ASMR3_PC_4: u32 = 0x0010 << RI_ASMR3_PC_Pos;
pub const RI_ASMR3_PC_5: u32 = 0x0020 << RI_ASMR3_PC_Pos;
pub const RI_ASMR3_PC_6: u32 = 0x0040 << RI_ASMR3_PC_Pos;
pub const RI_ASMR3_PC_7: u32 = 0x0080 << RI_ASMR3_PC_Pos;
pub const RI_ASMR3_PC_8: u32 = 0x0100 << RI_ASMR3_PC_Pos;
pub const RI_ASMR3_PC_9: u32 = 0x0200 << RI_ASMR3_PC_Pos;
pub const RI_ASMR3_PC_10: u32 = 0x0400 << RI_ASMR3_PC_Pos;
pub const RI_ASMR3_PC_11: u32 = 0x0800 << RI_ASMR3_PC_Pos;
pub const RI_ASMR3_PC_12: u32 = 0x1000 << RI_ASMR3_PC_Pos;
pub const RI_ASMR3_PC_13: u32 = 0x2000 << RI_ASMR3_PC_Pos;
pub const RI_ASMR3_PC_14: u32 = 0x4000 << RI_ASMR3_PC_Pos;
pub const RI_ASMR3_PC_15: u32 = 0x8000 << RI_ASMR3_PC_Pos;
pub const RI_CMR3_PC_Pos: u32 = 0;
pub const RI_CMR3_PC_Msk: u32 = 0xFFFF << RI_CMR3_PC_Pos;
pub const RI_CMR3_PC: u32 = RI_CMR3_PC_Msk;
pub const RI_CMR3_PC_0: u32 = 0x0001 << RI_CMR3_PC_Pos;
pub const RI_CMR3_PC_1: u32 = 0x0002 << RI_CMR3_PC_Pos;
pub const RI_CMR3_PC_2: u32 = 0x0004 << RI_CMR3_PC_Pos;
pub const RI_CMR3_PC_3: u32 = 0x0008 << RI_CMR3_PC_Pos;
pub const RI_CMR3_PC_4: u32 = 0x0010 << RI_CMR3_PC_Pos;
pub const RI_CMR3_PC_5: u32 = 0x0020 << RI_CMR3_PC_Pos;
pub const RI_CMR3_PC_6: u32 = 0x0040 << RI_CMR3_PC_Pos;
pub const RI_CMR3_PC_7: u32 = 0x0080 << RI_CMR3_PC_Pos;
pub const RI_CMR3_PC_8: u32 = 0x0100 << RI_CMR3_PC_Pos;
pub const RI_CMR3_PC_9: u32 = 0x0200 << RI_CMR3_PC_Pos;
pub const RI_CMR3_PC_10: u32 = 0x0400 << RI_CMR3_PC_Pos;
pub const RI_CMR3_PC_11: u32 = 0x0800 << RI_CMR3_PC_Pos;
pub const RI_CMR3_PC_12: u32 = 0x1000 << RI_CMR3_PC_Pos;
pub const RI_CMR3_PC_13: u32 = 0x2000 << RI_CMR3_PC_Pos;
pub const RI_CMR3_PC_14: u32 = 0x4000 << RI_CMR3_PC_Pos;
pub const RI_CMR3_PC_15: u32 = 0x8000 << RI_CMR3_PC_Pos;
pub const RI_CICR3_PC_Pos: u32 = 0;
pub const RI_CICR3_PC_Msk: u32 = 0xFFFF << RI_CICR3_PC_Pos;
pub const RI_CICR3_PC: u32 = RI_CICR3_PC_Msk;
pub const RI_CICR3_PC_0: u32 = 0x0001 << RI_CICR3_PC_Pos;
pub const RI_CICR3_PC_1: u32 = 0x0002 << RI_CICR3_PC_Pos;
pub const RI_CICR3_PC_2: u32 = 0x0004 << RI_CICR3_PC_Pos;
pub const RI_CICR3_PC_3: u32 = 0x0008 << RI_CICR3_PC_Pos;
pub const RI_CICR3_PC_4: u32 = 0x0010 << RI_CICR3_PC_Pos;
pub const RI_CICR3_PC_5: u32 = 0x0020 << RI_CICR3_PC_Pos;
pub const RI_CICR3_PC_6: u32 = 0x0040 << RI_CICR3_PC_Pos;
pub const RI_CICR3_PC_7: u32 = 0x0080 << RI_CICR3_PC_Pos;
pub const RI_CICR3_PC_8: u32 = 0x0100 << RI_CICR3_PC_Pos;
pub const RI_CICR3_PC_9: u32 = 0x0200 << RI_CICR3_PC_Pos;
pub const RI_CICR3_PC_10: u32 = 0x0400 << RI_CICR3_PC_Pos;
pub const RI_CICR3_PC_11: u32 = 0x0800 << RI_CICR3_PC_Pos;
pub const RI_CICR3_PC_12: u32 = 0x1000 << RI_CICR3_PC_Pos;
pub const RI_CICR3_PC_13: u32 = 0x2000 << RI_CICR3_PC_Pos;
pub const RI_CICR3_PC_14: u32 = 0x4000 << RI_CICR3_PC_Pos;
pub const RI_CICR3_PC_15: u32 = 0x8000 << RI_CICR3_PC_Pos;
pub const RI_ASMR4_PF_Pos: u32 = 0;
pub const RI_ASMR4_PF_Msk: u32 = 0xFFFF << RI_ASMR4_PF_Pos;
pub const RI_ASMR4_PF: u32 = RI_ASMR4_PF_Msk;
pub const RI_ASMR4_PF_0: u32 = 0x0001 << RI_ASMR4_PF_Pos;
pub const RI_ASMR4_PF_1: u32 = 0x0002 << RI_ASMR4_PF_Pos;
pub const RI_ASMR4_PF_2: u32 = 0x0004 << RI_ASMR4_PF_Pos;
pub const RI_ASMR4_PF_3: u32 = 0x0008 << RI_ASMR4_PF_Pos;
pub const RI_ASMR4_PF_4: u32 = 0x0010 << RI_ASMR4_PF_Pos;
pub const RI_ASMR4_PF_5: u32 = 0x0020 << RI_ASMR4_PF_Pos;
pub const RI_ASMR4_PF_6: u32 = 0x0040 << RI_ASMR4_PF_Pos;
pub const RI_ASMR4_PF_7: u32 = 0x0080 << RI_ASMR4_PF_Pos;
pub const RI_ASMR4_PF_8: u32 = 0x0100 << RI_ASMR4_PF_Pos;
pub const RI_ASMR4_PF_9: u32 = 0x0200 << RI_ASMR4_PF_Pos;
pub const RI_ASMR4_PF_10: u32 = 0x0400 << RI_ASMR4_PF_Pos;
pub const RI_ASMR4_PF_11: u32 = 0x0800 << RI_ASMR4_PF_Pos;
pub const RI_ASMR4_PF_12: u32 = 0x1000 << RI_ASMR4_PF_Pos;
pub const RI_ASMR4_PF_13: u32 = 0x2000 << RI_ASMR4_PF_Pos;
pub const RI_ASMR4_PF_14: u32 = 0x4000 << RI_ASMR4_PF_Pos;
pub const RI_ASMR4_PF_15: u32 = 0x8000 << RI_ASMR4_PF_Pos;
pub const RI_CMR4_PF_Pos: u32 = 0;
pub const RI_CMR4_PF_Msk: u32 = 0xFFFF << RI_CMR4_PF_Pos;
pub const RI_CMR4_PF: u32 = RI_CMR4_PF_Msk;
pub const RI_CMR4_PF_0: u32 = 0x0001 << RI_CMR4_PF_Pos;
pub const RI_CMR4_PF_1: u32 = 0x0002 << RI_CMR4_PF_Pos;
pub const RI_CMR4_PF_2: u32 = 0x0004 << RI_CMR4_PF_Pos;
pub const RI_CMR4_PF_3: u32 = 0x0008 << RI_CMR4_PF_Pos;
pub const RI_CMR4_PF_4: u32 = 0x0010 << RI_CMR4_PF_Pos;
pub const RI_CMR4_PF_5: u32 = 0x0020 << RI_CMR4_PF_Pos;
pub const RI_CMR4_PF_6: u32 = 0x0040 << RI_CMR4_PF_Pos;
pub const RI_CMR4_PF_7: u32 = 0x0080 << RI_CMR4_PF_Pos;
pub const RI_CMR4_PF_8: u32 = 0x0100 << RI_CMR4_PF_Pos;
pub const RI_CMR4_PF_9: u32 = 0x0200 << RI_CMR4_PF_Pos;
pub const RI_CMR4_PF_10: u32 = 0x0400 << RI_CMR4_PF_Pos;
pub const RI_CMR4_PF_11: u32 = 0x0800 << RI_CMR4_PF_Pos;
pub const RI_CMR4_PF_12: u32 = 0x1000 << RI_CMR4_PF_Pos;
pub const RI_CMR4_PF_13: u32 = 0x2000 << RI_CMR4_PF_Pos;
pub const RI_CMR4_PF_14: u32 = 0x4000 << RI_CMR4_PF_Pos;
pub const RI_CMR4_PF_15: u32 = 0x8000 << RI_CMR4_PF_Pos;
pub const RI_CICR4_PF_Pos: u32 = 0;
pub const RI_CICR4_PF_Msk: u32 = 0xFFFF << RI_CICR4_PF_Pos;
pub const RI_CICR4_PF: u32 = RI_CICR4_PF_Msk;
pub const RI_CICR4_PF_0: u32 = 0x0001 << RI_CICR4_PF_Pos;
pub const RI_CICR4_PF_1: u32 = 0x0002 << RI_CICR4_PF_Pos;
pub const RI_CICR4_PF_2: u32 = 0x0004 << RI_CICR4_PF_Pos;
pub const RI_CICR4_PF_3: u32 = 0x0008 << RI_CICR4_PF_Pos;
pub const RI_CICR4_PF_4: u32 = 0x0010 << RI_CICR4_PF_Pos;
pub const RI_CICR4_PF_5: u32 = 0x0020 << RI_CICR4_PF_Pos;
pub const RI_CICR4_PF_6: u32 = 0x0040 << RI_CICR4_PF_Pos;
pub const RI_CICR4_PF_7: u32 = 0x0080 << RI_CICR4_PF_Pos;
pub const RI_CICR4_PF_8: u32 = 0x0100 << RI_CICR4_PF_Pos;
pub const RI_CICR4_PF_9: u32 = 0x0200 << RI_CICR4_PF_Pos;
pub const RI_CICR4_PF_10: u32 = 0x0400 << RI_CICR4_PF_Pos;
pub const RI_CICR4_PF_11: u32 = 0x0800 << RI_CICR4_PF_Pos;
pub const RI_CICR4_PF_12: u32 = 0x1000 << RI_CICR4_PF_Pos;
pub const RI_CICR4_PF_13: u32 = 0x2000 << RI_CICR4_PF_Pos;
pub const RI_CICR4_PF_14: u32 = 0x4000 << RI_CICR4_PF_Pos;
pub const RI_CICR4_PF_15: u32 = 0x8000 << RI_CICR4_PF_Pos;
pub const RI_ASMR5_PG_Pos: u32 = 0;
pub const RI_ASMR5_PG_Msk: u32 = 0xFFFF << RI_ASMR5_PG_Pos;
pub const RI_ASMR5_PG: u32 = RI_ASMR5_PG_Msk;
pub const RI_ASMR5_PG_0: u32 = 0x0001 << RI_ASMR5_PG_Pos;
pub const RI_ASMR5_PG_1: u32 = 0x0002 << RI_ASMR5_PG_Pos;
pub const RI_ASMR5_PG_2: u32 = 0x0004 << RI_ASMR5_PG_Pos;
pub const RI_ASMR5_PG_3: u32 = 0x0008 << RI_ASMR5_PG_Pos;
pub const RI_ASMR5_PG_4: u32 = 0x0010 << RI_ASMR5_PG_Pos;
pub const RI_ASMR5_PG_5: u32 = 0x0020 << RI_ASMR5_PG_Pos;
pub const RI_ASMR5_PG_6: u32 = 0x0040 << RI_ASMR5_PG_Pos;
pub const RI_ASMR5_PG_7: u32 = 0x0080 << RI_ASMR5_PG_Pos;
pub const RI_ASMR5_PG_8: u32 = 0x0100 << RI_ASMR5_PG_Pos;
pub const RI_ASMR5_PG_9: u32 = 0x0200 << RI_ASMR5_PG_Pos;
pub const RI_ASMR5_PG_10: u32 = 0x0400 << RI_ASMR5_PG_Pos;
pub const RI_ASMR5_PG_11: u32 = 0x0800 << RI_ASMR5_PG_Pos;
pub const RI_ASMR5_PG_12: u32 = 0x1000 << RI_ASMR5_PG_Pos;
pub const RI_ASMR5_PG_13: u32 = 0x2000 << RI_ASMR5_PG_Pos;
pub const RI_ASMR5_PG_14: u32 = 0x4000 << RI_ASMR5_PG_Pos;
pub const RI_ASMR5_PG_15: u32 = 0x8000 << RI_ASMR5_PG_Pos;
pub const RI_CMR5_PG_Pos: u32 = 0;
pub const RI_CMR5_PG_Msk: u32 = 0xFFFF << RI_CMR5_PG_Pos;
pub const RI_CMR5_PG: u32 = RI_CMR5_PG_Msk;
pub const RI_CMR5_PG_0: u32 = 0x0001 << RI_CMR5_PG_Pos;
pub const RI_CMR5_PG_1: u32 = 0x0002 << RI_CMR5_PG_Pos;
pub const RI_CMR5_PG_2: u32 = 0x0004 << RI_CMR5_PG_Pos;
pub const RI_CMR5_PG_3: u32 = 0x0008 << RI_CMR5_PG_Pos;
pub const RI_CMR5_PG_4: u32 = 0x0010 << RI_CMR5_PG_Pos;
pub const RI_CMR5_PG_5: u32 = 0x0020 << RI_CMR5_PG_Pos;
pub const RI_CMR5_PG_6: u32 = 0x0040 << RI_CMR5_PG_Pos;
pub const RI_CMR5_PG_7: u32 = 0x0080 << RI_CMR5_PG_Pos;
pub const RI_CMR5_PG_8: u32 = 0x0100 << RI_CMR5_PG_Pos;
pub const RI_CMR5_PG_9: u32 = 0x0200 << RI_CMR5_PG_Pos;
pub const RI_CMR5_PG_10: u32 = 0x0400 << RI_CMR5_PG_Pos;
pub const RI_CMR5_PG_11: u32 = 0x0800 << RI_CMR5_PG_Pos;
pub const RI_CMR5_PG_12: u32 = 0x1000 << RI_CMR5_PG_Pos;
pub const RI_CMR5_PG_13: u32 = 0x2000 << RI_CMR5_PG_Pos;
pub const RI_CMR5_PG_14: u32 = 0x4000 << RI_CMR5_PG_Pos;
pub const RI_CMR5_PG_15: u32 = 0x8000 << RI_CMR5_PG_Pos;
pub const RI_CICR5_PG_Pos: u32 = 0;
pub const RI_CICR5_PG_Msk: u32 = 0xFFFF << RI_CICR5_PG_Pos;
pub const RI_CICR5_PG: u32 = RI_CICR5_PG_Msk;
pub const RI_CICR5_PG_0: u32 = 0x0001 << RI_CICR5_PG_Pos;
pub const RI_CICR5_PG_1: u32 = 0x0002 << RI_CICR5_PG_Pos;
pub const RI_CICR5_PG_2: u32 = 0x0004 << RI_CICR5_PG_Pos;
pub const RI_CICR5_PG_3: u32 = 0x0008 << RI_CICR5_PG_Pos;
pub const RI_CICR5_PG_4: u32 = 0x0010 << RI_CICR5_PG_Pos;
pub const RI_CICR5_PG_5: u32 = 0x0020 << RI_CICR5_PG_Pos;
pub const RI_CICR5_PG_6: u32 = 0x0040 << RI_CICR5_PG_Pos;
pub const RI_CICR5_PG_7: u32 = 0x0080 << RI_CICR5_PG_Pos;
pub const RI_CICR5_PG_8: u32 = 0x0100 << RI_CICR5_PG_Pos;
pub const RI_CICR5_PG_9: u32 = 0x0200 << RI_CICR5_PG_Pos;
pub const RI_CICR5_PG_10: u32 = 0x0400 << RI_CICR5_PG_Pos;
pub const RI_CICR5_PG_11: u32 = 0x0800 << RI_CICR5_PG_Pos;
pub const RI_CICR5_PG_12: u32 = 0x1000 << RI_CICR5_PG_Pos;
pub const RI_CICR5_PG_13: u32 = 0x2000 << RI_CICR5_PG_Pos;
pub const RI_CICR5_PG_14: u32 = 0x4000 << RI_CICR5_PG_Pos;
pub const RI_CICR5_PG_15: u32 = 0x8000 << RI_CICR5_PG_Pos;
pub const TIM_CR1_CEN_Pos: u32 = 0;
pub const TIM_CR1_CEN_Msk: u32 = 0x1 << TIM_CR1_CEN_Pos;
pub const TIM_CR1_CEN: u32 = TIM_CR1_CEN_Msk;
pub const TIM_CR1_UDIS_Pos: u32 = 1;
pub const TIM_CR1_UDIS_Msk: u32 = 0x1 << TIM_CR1_UDIS_Pos;
pub const TIM_CR1_UDIS: u32 = TIM_CR1_UDIS_Msk;
pub const TIM_CR1_URS_Pos: u32 = 2;
pub const TIM_CR1_URS_Msk: u32 = 0x1 << TIM_CR1_URS_Pos;
pub const TIM_CR1_URS: u32 = TIM_CR1_URS_Msk;
pub const TIM_CR1_OPM_Pos: u32 = 3;
pub const TIM_CR1_OPM_Msk: u32 = 0x1 << TIM_CR1_OPM_Pos;
pub const TIM_CR1_OPM: u32 = TIM_CR1_OPM_Msk;
pub const TIM_CR1_DIR_Pos: u32 = 4;
pub const TIM_CR1_DIR_Msk: u32 = 0x1 << TIM_CR1_DIR_Pos;
pub const TIM_CR1_DIR: u32 = TIM_CR1_DIR_Msk;
pub const TIM_CR1_CMS_Pos: u32 = 5;
pub const TIM_CR1_CMS_Msk: u32 = 0x3 << TIM_CR1_CMS_Pos;
pub const TIM_CR1_CMS: u32 = TIM_CR1_CMS_Msk;
pub const TIM_CR1_CMS_0: u32 = 0x1 << TIM_CR1_CMS_Pos;
pub const TIM_CR1_CMS_1: u32 = 0x2 << TIM_CR1_CMS_Pos;
pub const TIM_CR1_ARPE_Pos: u32 = 7;
pub const TIM_CR1_ARPE_Msk: u32 = 0x1 << TIM_CR1_ARPE_Pos;
pub const TIM_CR1_ARPE: u32 = TIM_CR1_ARPE_Msk;
pub const TIM_CR1_CKD_Pos: u32 = 8;
pub const TIM_CR1_CKD_Msk: u32 = 0x3 << TIM_CR1_CKD_Pos;
pub const TIM_CR1_CKD: u32 = TIM_CR1_CKD_Msk;
pub const TIM_CR1_CKD_0: u32 = 0x1 << TIM_CR1_CKD_Pos;
pub const TIM_CR1_CKD_1: u32 = 0x2 << TIM_CR1_CKD_Pos;
pub const TIM_CR2_CCDS_Pos: u32 = 3;
pub const TIM_CR2_CCDS_Msk: u32 = 0x1 << TIM_CR2_CCDS_Pos;
pub const TIM_CR2_CCDS: u32 = TIM_CR2_CCDS_Msk;
pub const TIM_CR2_MMS_Pos: u32 = 4;
pub const TIM_CR2_MMS_Msk: u32 = 0x7 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS: u32 = TIM_CR2_MMS_Msk;
pub const TIM_CR2_MMS_0: u32 = 0x1 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS_1: u32 = 0x2 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS_2: u32 = 0x4 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_TI1S_Pos: u32 = 7;
pub const TIM_CR2_TI1S_Msk: u32 = 0x1 << TIM_CR2_TI1S_Pos;
pub const TIM_CR2_TI1S: u32 = TIM_CR2_TI1S_Msk;
pub const TIM_SMCR_SMS_Pos: u32 = 0;
pub const TIM_SMCR_SMS_Msk: u32 = 0x7 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS: u32 = TIM_SMCR_SMS_Msk;
pub const TIM_SMCR_SMS_0: u32 = 0x1 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS_1: u32 = 0x2 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS_2: u32 = 0x4 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_OCCS_Pos: u32 = 3;
pub const TIM_SMCR_OCCS_Msk: u32 = 0x1 << TIM_SMCR_OCCS_Pos;
pub const TIM_SMCR_OCCS: u32 = TIM_SMCR_OCCS_Msk;
pub const TIM_SMCR_TS_Pos: u32 = 4;
pub const TIM_SMCR_TS_Msk: u32 = 0x7 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS: u32 = TIM_SMCR_TS_Msk;
pub const TIM_SMCR_TS_0: u32 = 0x1 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS_1: u32 = 0x2 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS_2: u32 = 0x4 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_MSM_Pos: u32 = 7;
pub const TIM_SMCR_MSM_Msk: u32 = 0x1 << TIM_SMCR_MSM_Pos;
pub const TIM_SMCR_MSM: u32 = TIM_SMCR_MSM_Msk;
pub const TIM_SMCR_ETF_Pos: u32 = 8;
pub const TIM_SMCR_ETF_Msk: u32 = 0xF << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF: u32 = TIM_SMCR_ETF_Msk;
pub const TIM_SMCR_ETF_0: u32 = 0x1 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF_1: u32 = 0x2 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF_2: u32 = 0x4 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF_3: u32 = 0x8 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETPS_Pos: u32 = 12;
pub const TIM_SMCR_ETPS_Msk: u32 = 0x3 << TIM_SMCR_ETPS_Pos;
pub const TIM_SMCR_ETPS: u32 = TIM_SMCR_ETPS_Msk;
pub const TIM_SMCR_ETPS_0: u32 = 0x1 << TIM_SMCR_ETPS_Pos;
pub const TIM_SMCR_ETPS_1: u32 = 0x2 << TIM_SMCR_ETPS_Pos;
pub const TIM_SMCR_ECE_Pos: u32 = 14;
pub const TIM_SMCR_ECE_Msk: u32 = 0x1 << TIM_SMCR_ECE_Pos;
pub const TIM_SMCR_ECE: u32 = TIM_SMCR_ECE_Msk;
pub const TIM_SMCR_ETP_Pos: u32 = 15;
pub const TIM_SMCR_ETP_Msk: u32 = 0x1 << TIM_SMCR_ETP_Pos;
pub const TIM_SMCR_ETP: u32 = TIM_SMCR_ETP_Msk;
pub const TIM_DIER_UIE_Pos: u32 = 0;
pub const TIM_DIER_UIE_Msk: u32 = 0x1 << TIM_DIER_UIE_Pos;
pub const TIM_DIER_UIE: u32 = TIM_DIER_UIE_Msk;
pub const TIM_DIER_CC1IE_Pos: u32 = 1;
pub const TIM_DIER_CC1IE_Msk: u32 = 0x1 << TIM_DIER_CC1IE_Pos;
pub const TIM_DIER_CC1IE: u32 = TIM_DIER_CC1IE_Msk;
pub const TIM_DIER_CC2IE_Pos: u32 = 2;
pub const TIM_DIER_CC2IE_Msk: u32 = 0x1 << TIM_DIER_CC2IE_Pos;
pub const TIM_DIER_CC2IE: u32 = TIM_DIER_CC2IE_Msk;
pub const TIM_DIER_CC3IE_Pos: u32 = 3;
pub const TIM_DIER_CC3IE_Msk: u32 = 0x1 << TIM_DIER_CC3IE_Pos;
pub const TIM_DIER_CC3IE: u32 = TIM_DIER_CC3IE_Msk;
pub const TIM_DIER_CC4IE_Pos: u32 = 4;
pub const TIM_DIER_CC4IE_Msk: u32 = 0x1 << TIM_DIER_CC4IE_Pos;
pub const TIM_DIER_CC4IE: u32 = TIM_DIER_CC4IE_Msk;
pub const TIM_DIER_TIE_Pos: u32 = 6;
pub const TIM_DIER_TIE_Msk: u32 = 0x1 << TIM_DIER_TIE_Pos;
pub const TIM_DIER_TIE: u32 = TIM_DIER_TIE_Msk;
pub const TIM_DIER_UDE_Pos: u32 = 8;
pub const TIM_DIER_UDE_Msk: u32 = 0x1 << TIM_DIER_UDE_Pos;
pub const TIM_DIER_UDE: u32 = TIM_DIER_UDE_Msk;
pub const TIM_DIER_CC1DE_Pos: u32 = 9;
pub const TIM_DIER_CC1DE_Msk: u32 = 0x1 << TIM_DIER_CC1DE_Pos;
pub const TIM_DIER_CC1DE: u32 = TIM_DIER_CC1DE_Msk;
pub const TIM_DIER_CC2DE_Pos: u32 = 10;
pub const TIM_DIER_CC2DE_Msk: u32 = 0x1 << TIM_DIER_CC2DE_Pos;
pub const TIM_DIER_CC2DE: u32 = TIM_DIER_CC2DE_Msk;
pub const TIM_DIER_CC3DE_Pos: u32 = 11;
pub const TIM_DIER_CC3DE_Msk: u32 = 0x1 << TIM_DIER_CC3DE_Pos;
pub const TIM_DIER_CC3DE: u32 = TIM_DIER_CC3DE_Msk;
pub const TIM_DIER_CC4DE_Pos: u32 = 12;
pub const TIM_DIER_CC4DE_Msk: u32 = 0x1 << TIM_DIER_CC4DE_Pos;
pub const TIM_DIER_CC4DE: u32 = TIM_DIER_CC4DE_Msk;
pub const TIM_DIER_COMDE: u32 = 0x2000;
pub const TIM_DIER_TDE_Pos: u32 = 14;
pub const TIM_DIER_TDE_Msk: u32 = 0x1 << TIM_DIER_TDE_Pos;
pub const TIM_DIER_TDE: u32 = TIM_DIER_TDE_Msk;
pub const TIM_SR_UIF_Pos: u32 = 0;
pub const TIM_SR_UIF_Msk: u32 = 0x1 << TIM_SR_UIF_Pos;
pub const TIM_SR_UIF: u32 = TIM_SR_UIF_Msk;
pub const TIM_SR_CC1IF_Pos: u32 = 1;
pub const TIM_SR_CC1IF_Msk: u32 = 0x1 << TIM_SR_CC1IF_Pos;
pub const TIM_SR_CC1IF: u32 = TIM_SR_CC1IF_Msk;
pub const TIM_SR_CC2IF_Pos: u32 = 2;
pub const TIM_SR_CC2IF_Msk: u32 = 0x1 << TIM_SR_CC2IF_Pos;
pub const TIM_SR_CC2IF: u32 = TIM_SR_CC2IF_Msk;
pub const TIM_SR_CC3IF_Pos: u32 = 3;
pub const TIM_SR_CC3IF_Msk: u32 = 0x1 << TIM_SR_CC3IF_Pos;
pub const TIM_SR_CC3IF: u32 = TIM_SR_CC3IF_Msk;
pub const TIM_SR_CC4IF_Pos: u32 = 4;
pub const TIM_SR_CC4IF_Msk: u32 = 0x1 << TIM_SR_CC4IF_Pos;
pub const TIM_SR_CC4IF: u32 = TIM_SR_CC4IF_Msk;
pub const TIM_SR_TIF_Pos: u32 = 6;
pub const TIM_SR_TIF_Msk: u32 = 0x1 << TIM_SR_TIF_Pos;
pub const TIM_SR_TIF: u32 = TIM_SR_TIF_Msk;
pub const TIM_SR_CC1OF_Pos: u32 = 9;
pub const TIM_SR_CC1OF_Msk: u32 = 0x1 << TIM_SR_CC1OF_Pos;
pub const TIM_SR_CC1OF: u32 = TIM_SR_CC1OF_Msk;
pub const TIM_SR_CC2OF_Pos: u32 = 10;
pub const TIM_SR_CC2OF_Msk: u32 = 0x1 << TIM_SR_CC2OF_Pos;
pub const TIM_SR_CC2OF: u32 = TIM_SR_CC2OF_Msk;
pub const TIM_SR_CC3OF_Pos: u32 = 11;
pub const TIM_SR_CC3OF_Msk: u32 = 0x1 << TIM_SR_CC3OF_Pos;
pub const TIM_SR_CC3OF: u32 = TIM_SR_CC3OF_Msk;
pub const TIM_SR_CC4OF_Pos: u32 = 12;
pub const TIM_SR_CC4OF_Msk: u32 = 0x1 << TIM_SR_CC4OF_Pos;
pub const TIM_SR_CC4OF: u32 = TIM_SR_CC4OF_Msk;
pub const TIM_EGR_UG_Pos: u32 = 0;
pub const TIM_EGR_UG_Msk: u32 = 0x1 << TIM_EGR_UG_Pos;
pub const TIM_EGR_UG: u32 = TIM_EGR_UG_Msk;
pub const TIM_EGR_CC1G_Pos: u32 = 1;
pub const TIM_EGR_CC1G_Msk: u32 = 0x1 << TIM_EGR_CC1G_Pos;
pub const TIM_EGR_CC1G: u32 = TIM_EGR_CC1G_Msk;
pub const TIM_EGR_CC2G_Pos: u32 = 2;
pub const TIM_EGR_CC2G_Msk: u32 = 0x1 << TIM_EGR_CC2G_Pos;
pub const TIM_EGR_CC2G: u32 = TIM_EGR_CC2G_Msk;
pub const TIM_EGR_CC3G_Pos: u32 = 3;
pub const TIM_EGR_CC3G_Msk: u32 = 0x1 << TIM_EGR_CC3G_Pos;
pub const TIM_EGR_CC3G: u32 = TIM_EGR_CC3G_Msk;
pub const TIM_EGR_CC4G_Pos: u32 = 4;
pub const TIM_EGR_CC4G_Msk: u32 = 0x1 << TIM_EGR_CC4G_Pos;
pub const TIM_EGR_CC4G: u32 = TIM_EGR_CC4G_Msk;
pub const TIM_EGR_TG_Pos: u32 = 6;
pub const TIM_EGR_TG_Msk: u32 = 0x1 << TIM_EGR_TG_Pos;
pub const TIM_EGR_TG: u32 = TIM_EGR_TG_Msk;
pub const TIM_CCMR1_CC1S_Pos: u32 = 0;
pub const TIM_CCMR1_CC1S_Msk: u32 = 0x3 << TIM_CCMR1_CC1S_Pos;
pub const TIM_CCMR1_CC1S: u32 = TIM_CCMR1_CC1S_Msk;
pub const TIM_CCMR1_CC1S_0: u32 = 0x1 << TIM_CCMR1_CC1S_Pos;
pub const TIM_CCMR1_CC1S_1: u32 = 0x2 << TIM_CCMR1_CC1S_Pos;
pub const TIM_CCMR1_OC1FE_Pos: u32 = 2;
pub const TIM_CCMR1_OC1FE_Msk: u32 = 0x1 << TIM_CCMR1_OC1FE_Pos;
pub const TIM_CCMR1_OC1FE: u32 = TIM_CCMR1_OC1FE_Msk;
pub const TIM_CCMR1_OC1PE_Pos: u32 = 3;
pub const TIM_CCMR1_OC1PE_Msk: u32 = 0x1 << TIM_CCMR1_OC1PE_Pos;
pub const TIM_CCMR1_OC1PE: u32 = TIM_CCMR1_OC1PE_Msk;
pub const TIM_CCMR1_OC1M_Pos: u32 = 4;
pub const TIM_CCMR1_OC1M_Msk: u32 = 0x7 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M: u32 = TIM_CCMR1_OC1M_Msk;
pub const TIM_CCMR1_OC1M_0: u32 = 0x1 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M_1: u32 = 0x2 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M_2: u32 = 0x4 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1CE_Pos: u32 = 7;
pub const TIM_CCMR1_OC1CE_Msk: u32 = 0x1 << TIM_CCMR1_OC1CE_Pos;
pub const TIM_CCMR1_OC1CE: u32 = TIM_CCMR1_OC1CE_Msk;
pub const TIM_CCMR1_CC2S_Pos: u32 = 8;
pub const TIM_CCMR1_CC2S_Msk: u32 = 0x3 << TIM_CCMR1_CC2S_Pos;
pub const TIM_CCMR1_CC2S: u32 = TIM_CCMR1_CC2S_Msk;
pub const TIM_CCMR1_CC2S_0: u32 = 0x1 << TIM_CCMR1_CC2S_Pos;
pub const TIM_CCMR1_CC2S_1: u32 = 0x2 << TIM_CCMR1_CC2S_Pos;
pub const TIM_CCMR1_OC2FE_Pos: u32 = 10;
pub const TIM_CCMR1_OC2FE_Msk: u32 = 0x1 << TIM_CCMR1_OC2FE_Pos;
pub const TIM_CCMR1_OC2FE: u32 = TIM_CCMR1_OC2FE_Msk;
pub const TIM_CCMR1_OC2PE_Pos: u32 = 11;
pub const TIM_CCMR1_OC2PE_Msk: u32 = 0x1 << TIM_CCMR1_OC2PE_Pos;
pub const TIM_CCMR1_OC2PE: u32 = TIM_CCMR1_OC2PE_Msk;
pub const TIM_CCMR1_OC2M_Pos: u32 = 12;
pub const TIM_CCMR1_OC2M_Msk: u32 = 0x7 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M: u32 = TIM_CCMR1_OC2M_Msk;
pub const TIM_CCMR1_OC2M_0: u32 = 0x1 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M_1: u32 = 0x2 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M_2: u32 = 0x4 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2CE_Pos: u32 = 15;
pub const TIM_CCMR1_OC2CE_Msk: u32 = 0x1 << TIM_CCMR1_OC2CE_Pos;
pub const TIM_CCMR1_OC2CE: u32 = TIM_CCMR1_OC2CE_Msk;
pub const TIM_CCMR1_IC1PSC_Pos: u32 = 2;
pub const TIM_CCMR1_IC1PSC_Msk: u32 = 0x3 << TIM_CCMR1_IC1PSC_Pos;
pub const TIM_CCMR1_IC1PSC: u32 = TIM_CCMR1_IC1PSC_Msk;
pub const TIM_CCMR1_IC1PSC_0: u32 = 0x1 << TIM_CCMR1_IC1PSC_Pos;
pub const TIM_CCMR1_IC1PSC_1: u32 = 0x2 << TIM_CCMR1_IC1PSC_Pos;
pub const TIM_CCMR1_IC1F_Pos: u32 = 4;
pub const TIM_CCMR1_IC1F_Msk: u32 = 0xF << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F: u32 = TIM_CCMR1_IC1F_Msk;
pub const TIM_CCMR1_IC1F_0: u32 = 0x1 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F_1: u32 = 0x2 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F_2: u32 = 0x4 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F_3: u32 = 0x8 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC2PSC_Pos: u32 = 10;
pub const TIM_CCMR1_IC2PSC_Msk: u32 = 0x3 << TIM_CCMR1_IC2PSC_Pos;
pub const TIM_CCMR1_IC2PSC: u32 = TIM_CCMR1_IC2PSC_Msk;
pub const TIM_CCMR1_IC2PSC_0: u32 = 0x1 << TIM_CCMR1_IC2PSC_Pos;
pub const TIM_CCMR1_IC2PSC_1: u32 = 0x2 << TIM_CCMR1_IC2PSC_Pos;
pub const TIM_CCMR1_IC2F_Pos: u32 = 12;
pub const TIM_CCMR1_IC2F_Msk: u32 = 0xF << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F: u32 = TIM_CCMR1_IC2F_Msk;
pub const TIM_CCMR1_IC2F_0: u32 = 0x1 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F_1: u32 = 0x2 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F_2: u32 = 0x4 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F_3: u32 = 0x8 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR2_CC3S_Pos: u32 = 0;
pub const TIM_CCMR2_CC3S_Msk: u32 = 0x3 << TIM_CCMR2_CC3S_Pos;
pub const TIM_CCMR2_CC3S: u32 = TIM_CCMR2_CC3S_Msk;
pub const TIM_CCMR2_CC3S_0: u32 = 0x1 << TIM_CCMR2_CC3S_Pos;
pub const TIM_CCMR2_CC3S_1: u32 = 0x2 << TIM_CCMR2_CC3S_Pos;
pub const TIM_CCMR2_OC3FE_Pos: u32 = 2;
pub const TIM_CCMR2_OC3FE_Msk: u32 = 0x1 << TIM_CCMR2_OC3FE_Pos;
pub const TIM_CCMR2_OC3FE: u32 = TIM_CCMR2_OC3FE_Msk;
pub const TIM_CCMR2_OC3PE_Pos: u32 = 3;
pub const TIM_CCMR2_OC3PE_Msk: u32 = 0x1 << TIM_CCMR2_OC3PE_Pos;
pub const TIM_CCMR2_OC3PE: u32 = TIM_CCMR2_OC3PE_Msk;
pub const TIM_CCMR2_OC3M_Pos: u32 = 4;
pub const TIM_CCMR2_OC3M_Msk: u32 = 0x7 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M: u32 = TIM_CCMR2_OC3M_Msk;
pub const TIM_CCMR2_OC3M_0: u32 = 0x1 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M_1: u32 = 0x2 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M_2: u32 = 0x4 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3CE_Pos: u32 = 7;
pub const TIM_CCMR2_OC3CE_Msk: u32 = 0x1 << TIM_CCMR2_OC3CE_Pos;
pub const TIM_CCMR2_OC3CE: u32 = TIM_CCMR2_OC3CE_Msk;
pub const TIM_CCMR2_CC4S_Pos: u32 = 8;
pub const TIM_CCMR2_CC4S_Msk: u32 = 0x3 << TIM_CCMR2_CC4S_Pos;
pub const TIM_CCMR2_CC4S: u32 = TIM_CCMR2_CC4S_Msk;
pub const TIM_CCMR2_CC4S_0: u32 = 0x1 << TIM_CCMR2_CC4S_Pos;
pub const TIM_CCMR2_CC4S_1: u32 = 0x2 << TIM_CCMR2_CC4S_Pos;
pub const TIM_CCMR2_OC4FE_Pos: u32 = 10;
pub const TIM_CCMR2_OC4FE_Msk: u32 = 0x1 << TIM_CCMR2_OC4FE_Pos;
pub const TIM_CCMR2_OC4FE: u32 = TIM_CCMR2_OC4FE_Msk;
pub const TIM_CCMR2_OC4PE_Pos: u32 = 11;
pub const TIM_CCMR2_OC4PE_Msk: u32 = 0x1 << TIM_CCMR2_OC4PE_Pos;
pub const TIM_CCMR2_OC4PE: u32 = TIM_CCMR2_OC4PE_Msk;
pub const TIM_CCMR2_OC4M_Pos: u32 = 12;
pub const TIM_CCMR2_OC4M_Msk: u32 = 0x7 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M: u32 = TIM_CCMR2_OC4M_Msk;
pub const TIM_CCMR2_OC4M_0: u32 = 0x1 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M_1: u32 = 0x2 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M_2: u32 = 0x4 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4CE_Pos: u32 = 15;
pub const TIM_CCMR2_OC4CE_Msk: u32 = 0x1 << TIM_CCMR2_OC4CE_Pos;
pub const TIM_CCMR2_OC4CE: u32 = TIM_CCMR2_OC4CE_Msk;
pub const TIM_CCMR2_IC3PSC_Pos: u32 = 2;
pub const TIM_CCMR2_IC3PSC_Msk: u32 = 0x3 << TIM_CCMR2_IC3PSC_Pos;
pub const TIM_CCMR2_IC3PSC: u32 = TIM_CCMR2_IC3PSC_Msk;
pub const TIM_CCMR2_IC3PSC_0: u32 = 0x1 << TIM_CCMR2_IC3PSC_Pos;
pub const TIM_CCMR2_IC3PSC_1: u32 = 0x2 << TIM_CCMR2_IC3PSC_Pos;
pub const TIM_CCMR2_IC3F_Pos: u32 = 4;
pub const TIM_CCMR2_IC3F_Msk: u32 = 0xF << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F: u32 = TIM_CCMR2_IC3F_Msk;
pub const TIM_CCMR2_IC3F_0: u32 = 0x1 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F_1: u32 = 0x2 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F_2: u32 = 0x4 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F_3: u32 = 0x8 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC4PSC_Pos: u32 = 10;
pub const TIM_CCMR2_IC4PSC_Msk: u32 = 0x3 << TIM_CCMR2_IC4PSC_Pos;
pub const TIM_CCMR2_IC4PSC: u32 = TIM_CCMR2_IC4PSC_Msk;
pub const TIM_CCMR2_IC4PSC_0: u32 = 0x1 << TIM_CCMR2_IC4PSC_Pos;
pub const TIM_CCMR2_IC4PSC_1: u32 = 0x2 << TIM_CCMR2_IC4PSC_Pos;
pub const TIM_CCMR2_IC4F_Pos: u32 = 12;
pub const TIM_CCMR2_IC4F_Msk: u32 = 0xF << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F: u32 = TIM_CCMR2_IC4F_Msk;
pub const TIM_CCMR2_IC4F_0: u32 = 0x1 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F_1: u32 = 0x2 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F_2: u32 = 0x4 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F_3: u32 = 0x8 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCER_CC1E_Pos: u32 = 0;
pub const TIM_CCER_CC1E_Msk: u32 = 0x1 << TIM_CCER_CC1E_Pos;
pub const TIM_CCER_CC1E: u32 = TIM_CCER_CC1E_Msk;
pub const TIM_CCER_CC1P_Pos: u32 = 1;
pub const TIM_CCER_CC1P_Msk: u32 = 0x1 << TIM_CCER_CC1P_Pos;
pub const TIM_CCER_CC1P: u32 = TIM_CCER_CC1P_Msk;
pub const TIM_CCER_CC1NP_Pos: u32 = 3;
pub const TIM_CCER_CC1NP_Msk: u32 = 0x1 << TIM_CCER_CC1NP_Pos;
pub const TIM_CCER_CC1NP: u32 = TIM_CCER_CC1NP_Msk;
pub const TIM_CCER_CC2E_Pos: u32 = 4;
pub const TIM_CCER_CC2E_Msk: u32 = 0x1 << TIM_CCER_CC2E_Pos;
pub const TIM_CCER_CC2E: u32 = TIM_CCER_CC2E_Msk;
pub const TIM_CCER_CC2P_Pos: u32 = 5;
pub const TIM_CCER_CC2P_Msk: u32 = 0x1 << TIM_CCER_CC2P_Pos;
pub const TIM_CCER_CC2P: u32 = TIM_CCER_CC2P_Msk;
pub const TIM_CCER_CC2NP_Pos: u32 = 7;
pub const TIM_CCER_CC2NP_Msk: u32 = 0x1 << TIM_CCER_CC2NP_Pos;
pub const TIM_CCER_CC2NP: u32 = TIM_CCER_CC2NP_Msk;
pub const TIM_CCER_CC3E_Pos: u32 = 8;
pub const TIM_CCER_CC3E_Msk: u32 = 0x1 << TIM_CCER_CC3E_Pos;
pub const TIM_CCER_CC3E: u32 = TIM_CCER_CC3E_Msk;
pub const TIM_CCER_CC3P_Pos: u32 = 9;
pub const TIM_CCER_CC3P_Msk: u32 = 0x1 << TIM_CCER_CC3P_Pos;
pub const TIM_CCER_CC3P: u32 = TIM_CCER_CC3P_Msk;
pub const TIM_CCER_CC3NP_Pos: u32 = 11;
pub const TIM_CCER_CC3NP_Msk: u32 = 0x1 << TIM_CCER_CC3NP_Pos;
pub const TIM_CCER_CC3NP: u32 = TIM_CCER_CC3NP_Msk;
pub const TIM_CCER_CC4E_Pos: u32 = 12;
pub const TIM_CCER_CC4E_Msk: u32 = 0x1 << TIM_CCER_CC4E_Pos;
pub const TIM_CCER_CC4E: u32 = TIM_CCER_CC4E_Msk;
pub const TIM_CCER_CC4P_Pos: u32 = 13;
pub const TIM_CCER_CC4P_Msk: u32 = 0x1 << TIM_CCER_CC4P_Pos;
pub const TIM_CCER_CC4P: u32 = TIM_CCER_CC4P_Msk;
pub const TIM_CCER_CC4NP_Pos: u32 = 15;
pub const TIM_CCER_CC4NP_Msk: u32 = 0x1 << TIM_CCER_CC4NP_Pos;
pub const TIM_CCER_CC4NP: u32 = TIM_CCER_CC4NP_Msk;
pub const TIM_CNT_CNT_Pos: u32 = 0;
pub const TIM_CNT_CNT_Msk: u32 = 0xFFFFFFFF << TIM_CNT_CNT_Pos;
pub const TIM_CNT_CNT: u32 = TIM_CNT_CNT_Msk;
pub const TIM_PSC_PSC_Pos: u32 = 0;
pub const TIM_PSC_PSC_Msk: u32 = 0xFFFF << TIM_PSC_PSC_Pos;
pub const TIM_PSC_PSC: u32 = TIM_PSC_PSC_Msk;
pub const TIM_ARR_ARR_Pos: u32 = 0;
pub const TIM_ARR_ARR_Msk: u32 = 0xFFFFFFFF << TIM_ARR_ARR_Pos;
pub const TIM_ARR_ARR: u32 = TIM_ARR_ARR_Msk;
pub const TIM_CCR1_CCR1_Pos: u32 = 0;
pub const TIM_CCR1_CCR1_Msk: u32 = 0xFFFF << TIM_CCR1_CCR1_Pos;
pub const TIM_CCR1_CCR1: u32 = TIM_CCR1_CCR1_Msk;
pub const TIM_CCR2_CCR2_Pos: u32 = 0;
pub const TIM_CCR2_CCR2_Msk: u32 = 0xFFFF << TIM_CCR2_CCR2_Pos;
pub const TIM_CCR2_CCR2: u32 = TIM_CCR2_CCR2_Msk;
pub const TIM_CCR3_CCR3_Pos: u32 = 0;
pub const TIM_CCR3_CCR3_Msk: u32 = 0xFFFF << TIM_CCR3_CCR3_Pos;
pub const TIM_CCR3_CCR3: u32 = TIM_CCR3_CCR3_Msk;
pub const TIM_CCR4_CCR4_Pos: u32 = 0;
pub const TIM_CCR4_CCR4_Msk: u32 = 0xFFFF << TIM_CCR4_CCR4_Pos;
pub const TIM_CCR4_CCR4: u32 = TIM_CCR4_CCR4_Msk;
pub const TIM_DCR_DBA_Pos: u32 = 0;
pub const TIM_DCR_DBA_Msk: u32 = 0x1F << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA: u32 = TIM_DCR_DBA_Msk;
pub const TIM_DCR_DBA_0: u32 = 0x01 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_1: u32 = 0x02 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_2: u32 = 0x04 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_3: u32 = 0x08 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_4: u32 = 0x10 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBL_Pos: u32 = 8;
pub const TIM_DCR_DBL_Msk: u32 = 0x1F << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL: u32 = TIM_DCR_DBL_Msk;
pub const TIM_DCR_DBL_0: u32 = 0x01 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_1: u32 = 0x02 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_2: u32 = 0x04 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_3: u32 = 0x08 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_4: u32 = 0x10 << TIM_DCR_DBL_Pos;
pub const TIM_DMAR_DMAB_Pos: u32 = 0;
pub const TIM_DMAR_DMAB_Msk: u32 = 0xFFFF << TIM_DMAR_DMAB_Pos;
pub const TIM_DMAR_DMAB: u32 = TIM_DMAR_DMAB_Msk;
pub const TIM_OR_TI1RMP_Pos: u32 = 0;
pub const TIM_OR_TI1RMP_Msk: u32 = 0x3 << TIM_OR_TI1RMP_Pos;
pub const TIM_OR_TI1RMP: u32 = TIM_OR_TI1RMP_Msk;
pub const TIM_OR_TI1RMP_0: u32 = 0x1 << TIM_OR_TI1RMP_Pos;
pub const TIM_OR_TI1RMP_1: u32 = 0x2 << TIM_OR_TI1RMP_Pos;
pub const TIM_OR_ETR_RMP_Pos: u32 = 2;
pub const TIM_OR_ETR_RMP_Msk: u32 = 0x1 << TIM_OR_ETR_RMP_Pos;
pub const TIM_OR_ETR_RMP: u32 = TIM_OR_ETR_RMP_Msk;
pub const TIM_OR_TI1_RMP_RI_Pos: u32 = 3;
pub const TIM_OR_TI1_RMP_RI_Msk: u32 = 0x1 << TIM_OR_TI1_RMP_RI_Pos;
pub const TIM_OR_TI1_RMP_RI: u32 = TIM_OR_TI1_RMP_RI_Msk;
pub const TIM9_OR_ITR1_RMP_Pos: u32 = 2;
pub const TIM9_OR_ITR1_RMP_Msk: u32 = 0x1 << TIM9_OR_ITR1_RMP_Pos;
pub const TIM9_OR_ITR1_RMP: u32 = TIM9_OR_ITR1_RMP_Msk;
pub const TIM2_OR_ITR1_RMP_Pos: u32 = 0;
pub const TIM2_OR_ITR1_RMP_Msk: u32 = 0x1 << TIM2_OR_ITR1_RMP_Pos;
pub const TIM2_OR_ITR1_RMP: u32 = TIM2_OR_ITR1_RMP_Msk;
pub const TIM3_OR_ITR2_RMP_Pos: u32 = 0;
pub const TIM3_OR_ITR2_RMP_Msk: u32 = 0x1 << TIM3_OR_ITR2_RMP_Pos;
pub const TIM3_OR_ITR2_RMP: u32 = TIM3_OR_ITR2_RMP_Msk;
pub const USART_SR_PE_Pos: u32 = 0;
pub const USART_SR_PE_Msk: u32 = 0x1 << USART_SR_PE_Pos;
pub const USART_SR_PE: u32 = USART_SR_PE_Msk;
pub const USART_SR_FE_Pos: u32 = 1;
pub const USART_SR_FE_Msk: u32 = 0x1 << USART_SR_FE_Pos;
pub const USART_SR_FE: u32 = USART_SR_FE_Msk;
pub const USART_SR_NE_Pos: u32 = 2;
pub const USART_SR_NE_Msk: u32 = 0x1 << USART_SR_NE_Pos;
pub const USART_SR_NE: u32 = USART_SR_NE_Msk;
pub const USART_SR_ORE_Pos: u32 = 3;
pub const USART_SR_ORE_Msk: u32 = 0x1 << USART_SR_ORE_Pos;
pub const USART_SR_ORE: u32 = USART_SR_ORE_Msk;
pub const USART_SR_IDLE_Pos: u32 = 4;
pub const USART_SR_IDLE_Msk: u32 = 0x1 << USART_SR_IDLE_Pos;
pub const USART_SR_IDLE: u32 = USART_SR_IDLE_Msk;
pub const USART_SR_RXNE_Pos: u32 = 5;
pub const USART_SR_RXNE_Msk: u32 = 0x1 << USART_SR_RXNE_Pos;
pub const USART_SR_RXNE: u32 = USART_SR_RXNE_Msk;
pub const USART_SR_TC_Pos: u32 = 6;
pub const USART_SR_TC_Msk: u32 = 0x1 << USART_SR_TC_Pos;
pub const USART_SR_TC: u32 = USART_SR_TC_Msk;
pub const USART_SR_TXE_Pos: u32 = 7;
pub const USART_SR_TXE_Msk: u32 = 0x1 << USART_SR_TXE_Pos;
pub const USART_SR_TXE: u32 = USART_SR_TXE_Msk;
pub const USART_SR_LBD_Pos: u32 = 8;
pub const USART_SR_LBD_Msk: u32 = 0x1 << USART_SR_LBD_Pos;
pub const USART_SR_LBD: u32 = USART_SR_LBD_Msk;
pub const USART_SR_CTS_Pos: u32 = 9;
pub const USART_SR_CTS_Msk: u32 = 0x1 << USART_SR_CTS_Pos;
pub const USART_SR_CTS: u32 = USART_SR_CTS_Msk;
pub const USART_DR_DR_Pos: u32 = 0;
pub const USART_DR_DR_Msk: u32 = 0x1FF << USART_DR_DR_Pos;
pub const USART_DR_DR: u32 = USART_DR_DR_Msk;
pub const USART_BRR_DIV_Fraction_Pos: u32 = 0;
pub const USART_BRR_DIV_Fraction_Msk: u32 = 0xF << USART_BRR_DIV_Fraction_Pos;
pub const USART_BRR_DIV_Fraction: u32 = USART_BRR_DIV_Fraction_Msk;
pub const USART_BRR_DIV_Mantissa_Pos: u32 = 4;
pub const USART_BRR_DIV_Mantissa_Msk: u32 = 0xFFF << USART_BRR_DIV_Mantissa_Pos;
pub const USART_BRR_DIV_Mantissa: u32 = USART_BRR_DIV_Mantissa_Msk;
pub const USART_BRR_DIV_FRACTION_Pos: u32 = USART_BRR_DIV_Fraction_Pos;
pub const USART_BRR_DIV_FRACTION_Msk: u32 = USART_BRR_DIV_Fraction_Msk;
pub const USART_BRR_DIV_FRACTION: u32 = USART_BRR_DIV_Fraction;
pub const USART_BRR_DIV_MANTISSA_Pos: u32 = USART_BRR_DIV_Mantissa_Pos;
pub const USART_BRR_DIV_MANTISSA_Msk: u32 = USART_BRR_DIV_Mantissa_Msk;
pub const USART_BRR_DIV_MANTISSA: u32 = USART_BRR_DIV_Mantissa;
pub const USART_CR1_SBK_Pos: u32 = 0;
pub const USART_CR1_SBK_Msk: u32 = 0x1 << USART_CR1_SBK_Pos;
pub const USART_CR1_SBK: u32 = USART_CR1_SBK_Msk;
pub const USART_CR1_RWU_Pos: u32 = 1;
pub const USART_CR1_RWU_Msk: u32 = 0x1 << USART_CR1_RWU_Pos;
pub const USART_CR1_RWU: u32 = USART_CR1_RWU_Msk;
pub const USART_CR1_RE_Pos: u32 = 2;
pub const USART_CR1_RE_Msk: u32 = 0x1 << USART_CR1_RE_Pos;
pub const USART_CR1_RE: u32 = USART_CR1_RE_Msk;
pub const USART_CR1_TE_Pos: u32 = 3;
pub const USART_CR1_TE_Msk: u32 = 0x1 << USART_CR1_TE_Pos;
pub const USART_CR1_TE: u32 = USART_CR1_TE_Msk;
pub const USART_CR1_IDLEIE_Pos: u32 = 4;
pub const USART_CR1_IDLEIE_Msk: u32 = 0x1 << USART_CR1_IDLEIE_Pos;
pub const USART_CR1_IDLEIE: u32 = USART_CR1_IDLEIE_Msk;
pub const USART_CR1_RXNEIE_Pos: u32 = 5;
pub const USART_CR1_RXNEIE_Msk: u32 = 0x1 << USART_CR1_RXNEIE_Pos;
pub const USART_CR1_RXNEIE: u32 = USART_CR1_RXNEIE_Msk;
pub const USART_CR1_TCIE_Pos: u32 = 6;
pub const USART_CR1_TCIE_Msk: u32 = 0x1 << USART_CR1_TCIE_Pos;
pub const USART_CR1_TCIE: u32 = USART_CR1_TCIE_Msk;
pub const USART_CR1_TXEIE_Pos: u32 = 7;
pub const USART_CR1_TXEIE_Msk: u32 = 0x1 << USART_CR1_TXEIE_Pos;
pub const USART_CR1_TXEIE: u32 = USART_CR1_TXEIE_Msk;
pub const USART_CR1_PEIE_Pos: u32 = 8;
pub const USART_CR1_PEIE_Msk: u32 = 0x1 << USART_CR1_PEIE_Pos;
pub const USART_CR1_PEIE: u32 = USART_CR1_PEIE_Msk;
pub const USART_CR1_PS_Pos: u32 = 9;
pub const USART_CR1_PS_Msk: u32 = 0x1 << USART_CR1_PS_Pos;
pub const USART_CR1_PS: u32 = USART_CR1_PS_Msk;
pub const USART_CR1_PCE_Pos: u32 = 10;
pub const USART_CR1_PCE_Msk: u32 = 0x1 << USART_CR1_PCE_Pos;
pub const USART_CR1_PCE: u32 = USART_CR1_PCE_Msk;
pub const USART_CR1_WAKE_Pos: u32 = 11;
pub const USART_CR1_WAKE_Msk: u32 = 0x1 << USART_CR1_WAKE_Pos;
pub const USART_CR1_WAKE: u32 = USART_CR1_WAKE_Msk;
pub const USART_CR1_M_Pos: u32 = 12;
pub const USART_CR1_M_Msk: u32 = 0x1 << USART_CR1_M_Pos;
pub const USART_CR1_M: u32 = USART_CR1_M_Msk;
pub const USART_CR1_UE_Pos: u32 = 13;
pub const USART_CR1_UE_Msk: u32 = 0x1 << USART_CR1_UE_Pos;
pub const USART_CR1_UE: u32 = USART_CR1_UE_Msk;
pub const USART_CR1_OVER8_Pos: u32 = 15;
pub const USART_CR1_OVER8_Msk: u32 = 0x1 << USART_CR1_OVER8_Pos;
pub const USART_CR1_OVER8: u32 = USART_CR1_OVER8_Msk;
pub const USART_CR2_ADD_Pos: u32 = 0;
pub const USART_CR2_ADD_Msk: u32 = 0xF << USART_CR2_ADD_Pos;
pub const USART_CR2_ADD: u32 = USART_CR2_ADD_Msk;
pub const USART_CR2_LBDL_Pos: u32 = 5;
pub const USART_CR2_LBDL_Msk: u32 = 0x1 << USART_CR2_LBDL_Pos;
pub const USART_CR2_LBDL: u32 = USART_CR2_LBDL_Msk;
pub const USART_CR2_LBDIE_Pos: u32 = 6;
pub const USART_CR2_LBDIE_Msk: u32 = 0x1 << USART_CR2_LBDIE_Pos;
pub const USART_CR2_LBDIE: u32 = USART_CR2_LBDIE_Msk;
pub const USART_CR2_LBCL_Pos: u32 = 8;
pub const USART_CR2_LBCL_Msk: u32 = 0x1 << USART_CR2_LBCL_Pos;
pub const USART_CR2_LBCL: u32 = USART_CR2_LBCL_Msk;
pub const USART_CR2_CPHA_Pos: u32 = 9;
pub const USART_CR2_CPHA_Msk: u32 = 0x1 << USART_CR2_CPHA_Pos;
pub const USART_CR2_CPHA: u32 = USART_CR2_CPHA_Msk;
pub const USART_CR2_CPOL_Pos: u32 = 10;
pub const USART_CR2_CPOL_Msk: u32 = 0x1 << USART_CR2_CPOL_Pos;
pub const USART_CR2_CPOL: u32 = USART_CR2_CPOL_Msk;
pub const USART_CR2_CLKEN_Pos: u32 = 11;
pub const USART_CR2_CLKEN_Msk: u32 = 0x1 << USART_CR2_CLKEN_Pos;
pub const USART_CR2_CLKEN: u32 = USART_CR2_CLKEN_Msk;
pub const USART_CR2_STOP_Pos: u32 = 12;
pub const USART_CR2_STOP_Msk: u32 = 0x3 << USART_CR2_STOP_Pos;
pub const USART_CR2_STOP: u32 = USART_CR2_STOP_Msk;
pub const USART_CR2_STOP_0: u32 = 0x1 << USART_CR2_STOP_Pos;
pub const USART_CR2_STOP_1: u32 = 0x2 << USART_CR2_STOP_Pos;
pub const USART_CR2_LINEN_Pos: u32 = 14;
pub const USART_CR2_LINEN_Msk: u32 = 0x1 << USART_CR2_LINEN_Pos;
pub const USART_CR2_LINEN: u32 = USART_CR2_LINEN_Msk;
pub const USART_CR3_EIE_Pos: u32 = 0;
pub const USART_CR3_EIE_Msk: u32 = 0x1 << USART_CR3_EIE_Pos;
pub const USART_CR3_EIE: u32 = USART_CR3_EIE_Msk;
pub const USART_CR3_IREN_Pos: u32 = 1;
pub const USART_CR3_IREN_Msk: u32 = 0x1 << USART_CR3_IREN_Pos;
pub const USART_CR3_IREN: u32 = USART_CR3_IREN_Msk;
pub const USART_CR3_IRLP_Pos: u32 = 2;
pub const USART_CR3_IRLP_Msk: u32 = 0x1 << USART_CR3_IRLP_Pos;
pub const USART_CR3_IRLP: u32 = USART_CR3_IRLP_Msk;
pub const USART_CR3_HDSEL_Pos: u32 = 3;
pub const USART_CR3_HDSEL_Msk: u32 = 0x1 << USART_CR3_HDSEL_Pos;
pub const USART_CR3_HDSEL: u32 = USART_CR3_HDSEL_Msk;
pub const USART_CR3_NACK_Pos: u32 = 4;
pub const USART_CR3_NACK_Msk: u32 = 0x1 << USART_CR3_NACK_Pos;
pub const USART_CR3_NACK: u32 = USART_CR3_NACK_Msk;
pub const USART_CR3_SCEN_Pos: u32 = 5;
pub const USART_CR3_SCEN_Msk: u32 = 0x1 << USART_CR3_SCEN_Pos;
pub const USART_CR3_SCEN: u32 = USART_CR3_SCEN_Msk;
pub const USART_CR3_DMAR_Pos: u32 = 6;
pub const USART_CR3_DMAR_Msk: u32 = 0x1 << USART_CR3_DMAR_Pos;
pub const USART_CR3_DMAR: u32 = USART_CR3_DMAR_Msk;
pub const USART_CR3_DMAT_Pos: u32 = 7;
pub const USART_CR3_DMAT_Msk: u32 = 0x1 << USART_CR3_DMAT_Pos;
pub const USART_CR3_DMAT: u32 = USART_CR3_DMAT_Msk;
pub const USART_CR3_RTSE_Pos: u32 = 8;
pub const USART_CR3_RTSE_Msk: u32 = 0x1 << USART_CR3_RTSE_Pos;
pub const USART_CR3_RTSE: u32 = USART_CR3_RTSE_Msk;
pub const USART_CR3_CTSE_Pos: u32 = 9;
pub const USART_CR3_CTSE_Msk: u32 = 0x1 << USART_CR3_CTSE_Pos;
pub const USART_CR3_CTSE: u32 = USART_CR3_CTSE_Msk;
pub const USART_CR3_CTSIE_Pos: u32 = 10;
pub const USART_CR3_CTSIE_Msk: u32 = 0x1 << USART_CR3_CTSIE_Pos;
pub const USART_CR3_CTSIE: u32 = USART_CR3_CTSIE_Msk;
pub const USART_CR3_ONEBIT_Pos: u32 = 11;
pub const USART_CR3_ONEBIT_Msk: u32 = 0x1 << USART_CR3_ONEBIT_Pos;
pub const USART_CR3_ONEBIT: u32 = USART_CR3_ONEBIT_Msk;
pub const USART_GTPR_PSC_Pos: u32 = 0;
pub const USART_GTPR_PSC_Msk: u32 = 0xFF << USART_GTPR_PSC_Pos;
pub const USART_GTPR_PSC: u32 = USART_GTPR_PSC_Msk;
pub const USART_GTPR_PSC_0: u32 = 0x01 << USART_GTPR_PSC_Pos;
pub const USART_GTPR_PSC_1: u32 = 0x02 << USART_GTPR_PSC_Pos;
pub const USART_GTPR_PSC_2: u32 = 0x04 << USART_GTPR_PSC_Pos;
pub const USART_GTPR_PSC_3: u32 = 0x08 << USART_GTPR_PSC_Pos;
pub const USART_GTPR_PSC_4: u32 = 0x10 << USART_GTPR_PSC_Pos;
pub const USART_GTPR_PSC_5: u32 = 0x20 << USART_GTPR_PSC_Pos;
pub const USART_GTPR_PSC_6: u32 = 0x40 << USART_GTPR_PSC_Pos;
pub const USART_GTPR_PSC_7: u32 = 0x80 << USART_GTPR_PSC_Pos;
pub const USART_GTPR_GT_Pos: u32 = 8;
pub const USART_GTPR_GT_Msk: u32 = 0xFF << USART_GTPR_GT_Pos;
pub const USART_GTPR_GT: u32 = USART_GTPR_GT_Msk;
pub const USB_EP0R: u32 = USB_BASE;
pub const USB_EP1R: u32 = USB_BASE + 0x00000004;
pub const USB_EP2R: u32 = USB_BASE + 0x00000008;
pub const USB_EP3R: u32 = USB_BASE + 0x0000000C;
pub const USB_EP4R: u32 = USB_BASE + 0x00000010;
pub const USB_EP5R: u32 = USB_BASE + 0x00000014;
pub const USB_EP6R: u32 = USB_BASE + 0x00000018;
pub const USB_EP7R: u32 = USB_BASE + 0x0000001C;
pub const USB_EP_CTR_RX_Pos: u32 = 15;
pub const USB_EP_CTR_RX_Msk: u32 = 0x1 << USB_EP_CTR_RX_Pos;
pub const USB_EP_CTR_RX: u32 = USB_EP_CTR_RX_Msk;
pub const USB_EP_DTOG_RX_Pos: u32 = 14;
pub const USB_EP_DTOG_RX_Msk: u32 = 0x1 << USB_EP_DTOG_RX_Pos;
pub const USB_EP_DTOG_RX: u32 = USB_EP_DTOG_RX_Msk;
pub const USB_EPRX_STAT_Pos: u32 = 12;
pub const USB_EPRX_STAT_Msk: u32 = 0x3 << USB_EPRX_STAT_Pos;
pub const USB_EPRX_STAT: u32 = USB_EPRX_STAT_Msk;
pub const USB_EP_SETUP_Pos: u32 = 11;
pub const USB_EP_SETUP_Msk: u32 = 0x1 << USB_EP_SETUP_Pos;
pub const USB_EP_SETUP: u32 = USB_EP_SETUP_Msk;
pub const USB_EP_T_FIELD_Pos: u32 = 9;
pub const USB_EP_T_FIELD_Msk: u32 = 0x3 << USB_EP_T_FIELD_Pos;
pub const USB_EP_T_FIELD: u32 = USB_EP_T_FIELD_Msk;
pub const USB_EP_KIND_Pos: u32 = 8;
pub const USB_EP_KIND_Msk: u32 = 0x1 << USB_EP_KIND_Pos;
pub const USB_EP_KIND: u32 = USB_EP_KIND_Msk;
pub const USB_EP_CTR_TX_Pos: u32 = 7;
pub const USB_EP_CTR_TX_Msk: u32 = 0x1 << USB_EP_CTR_TX_Pos;
pub const USB_EP_CTR_TX: u32 = USB_EP_CTR_TX_Msk;
pub const USB_EP_DTOG_TX_Pos: u32 = 6;
pub const USB_EP_DTOG_TX_Msk: u32 = 0x1 << USB_EP_DTOG_TX_Pos;
pub const USB_EP_DTOG_TX: u32 = USB_EP_DTOG_TX_Msk;
pub const USB_EPTX_STAT_Pos: u32 = 4;
pub const USB_EPTX_STAT_Msk: u32 = 0x3 << USB_EPTX_STAT_Pos;
pub const USB_EPTX_STAT: u32 = USB_EPTX_STAT_Msk;
pub const USB_EPADDR_FIELD_Pos: u32 = 0;
pub const USB_EPADDR_FIELD_Msk: u32 = 0xF << USB_EPADDR_FIELD_Pos;
pub const USB_EPADDR_FIELD: u32 = USB_EPADDR_FIELD_Msk;
pub const USB_EPREG_MASK: u32 =
    USB_EP_CTR_RX | USB_EP_SETUP | USB_EP_T_FIELD | USB_EP_KIND | USB_EP_CTR_TX | USB_EPADDR_FIELD;
pub const USB_EP_TYPE_MASK_Pos: u32 = 9;
pub const USB_EP_TYPE_MASK_Msk: u32 = 0x3 << USB_EP_TYPE_MASK_Pos;
pub const USB_EP_TYPE_MASK: u32 = USB_EP_TYPE_MASK_Msk;
pub const USB_EP_BULK: u32 = 0x00000000;
pub const USB_EP_CONTROL: u32 = 0x00000200;
pub const USB_EP_ISOCHRONOUS: u32 = 0x00000400;
pub const USB_EP_INTERRUPT: u32 = 0x00000600;
pub const USB_EP_T_MASK: u32 = !USB_EP_T_FIELD & USB_EPREG_MASK;
pub const USB_EPKIND_MASK: u32 = !USB_EP_KIND & USB_EPREG_MASK;
pub const USB_EP_TX_DIS: u32 = 0x00000000;
pub const USB_EP_TX_STALL: u32 = 0x00000010;
pub const USB_EP_TX_NAK: u32 = 0x00000020;
pub const USB_EP_TX_VALID: u32 = 0x00000030;
pub const USB_EPTX_DTOG1: u32 = 0x00000010;
pub const USB_EPTX_DTOG2: u32 = 0x00000020;
pub const USB_EPTX_DTOGMASK: u32 = USB_EPTX_STAT | USB_EPREG_MASK;
pub const USB_EP_RX_DIS: u32 = 0x00000000;
pub const USB_EP_RX_STALL: u32 = 0x00001000;
pub const USB_EP_RX_NAK: u32 = 0x00002000;
pub const USB_EP_RX_VALID: u32 = 0x00003000;
pub const USB_EPRX_DTOG1: u32 = 0x00001000;
pub const USB_EPRX_DTOG2: u32 = 0x00002000;
pub const USB_EPRX_DTOGMASK: u32 = USB_EPRX_STAT | USB_EPREG_MASK;
pub const USB_EP0R_EA_Pos: u32 = 0;
pub const USB_EP0R_EA_Msk: u32 = 0xF << USB_EP0R_EA_Pos;
pub const USB_EP0R_EA: u32 = USB_EP0R_EA_Msk;
pub const USB_EP0R_STAT_TX_Pos: u32 = 4;
pub const USB_EP0R_STAT_TX_Msk: u32 = 0x3 << USB_EP0R_STAT_TX_Pos;
pub const USB_EP0R_STAT_TX: u32 = USB_EP0R_STAT_TX_Msk;
pub const USB_EP0R_STAT_TX_0: u32 = 0x1 << USB_EP0R_STAT_TX_Pos;
pub const USB_EP0R_STAT_TX_1: u32 = 0x2 << USB_EP0R_STAT_TX_Pos;
pub const USB_EP0R_DTOG_TX_Pos: u32 = 6;
pub const USB_EP0R_DTOG_TX_Msk: u32 = 0x1 << USB_EP0R_DTOG_TX_Pos;
pub const USB_EP0R_DTOG_TX: u32 = USB_EP0R_DTOG_TX_Msk;
pub const USB_EP0R_CTR_TX_Pos: u32 = 7;
pub const USB_EP0R_CTR_TX_Msk: u32 = 0x1 << USB_EP0R_CTR_TX_Pos;
pub const USB_EP0R_CTR_TX: u32 = USB_EP0R_CTR_TX_Msk;
pub const USB_EP0R_EP_KIND_Pos: u32 = 8;
pub const USB_EP0R_EP_KIND_Msk: u32 = 0x1 << USB_EP0R_EP_KIND_Pos;
pub const USB_EP0R_EP_KIND: u32 = USB_EP0R_EP_KIND_Msk;
pub const USB_EP0R_EP_TYPE_Pos: u32 = 9;
pub const USB_EP0R_EP_TYPE_Msk: u32 = 0x3 << USB_EP0R_EP_TYPE_Pos;
pub const USB_EP0R_EP_TYPE: u32 = USB_EP0R_EP_TYPE_Msk;
pub const USB_EP0R_EP_TYPE_0: u32 = 0x1 << USB_EP0R_EP_TYPE_Pos;
pub const USB_EP0R_EP_TYPE_1: u32 = 0x2 << USB_EP0R_EP_TYPE_Pos;
pub const USB_EP0R_SETUP_Pos: u32 = 11;
pub const USB_EP0R_SETUP_Msk: u32 = 0x1 << USB_EP0R_SETUP_Pos;
pub const USB_EP0R_SETUP: u32 = USB_EP0R_SETUP_Msk;
pub const USB_EP0R_STAT_RX_Pos: u32 = 12;
pub const USB_EP0R_STAT_RX_Msk: u32 = 0x3 << USB_EP0R_STAT_RX_Pos;
pub const USB_EP0R_STAT_RX: u32 = USB_EP0R_STAT_RX_Msk;
pub const USB_EP0R_STAT_RX_0: u32 = 0x1 << USB_EP0R_STAT_RX_Pos;
pub const USB_EP0R_STAT_RX_1: u32 = 0x2 << USB_EP0R_STAT_RX_Pos;
pub const USB_EP0R_DTOG_RX_Pos: u32 = 14;
pub const USB_EP0R_DTOG_RX_Msk: u32 = 0x1 << USB_EP0R_DTOG_RX_Pos;
pub const USB_EP0R_DTOG_RX: u32 = USB_EP0R_DTOG_RX_Msk;
pub const USB_EP0R_CTR_RX_Pos: u32 = 15;
pub const USB_EP0R_CTR_RX_Msk: u32 = 0x1 << USB_EP0R_CTR_RX_Pos;
pub const USB_EP0R_CTR_RX: u32 = USB_EP0R_CTR_RX_Msk;
pub const USB_EP1R_EA_Pos: u32 = 0;
pub const USB_EP1R_EA_Msk: u32 = 0xF << USB_EP1R_EA_Pos;
pub const USB_EP1R_EA: u32 = USB_EP1R_EA_Msk;
pub const USB_EP1R_STAT_TX_Pos: u32 = 4;
pub const USB_EP1R_STAT_TX_Msk: u32 = 0x3 << USB_EP1R_STAT_TX_Pos;
pub const USB_EP1R_STAT_TX: u32 = USB_EP1R_STAT_TX_Msk;
pub const USB_EP1R_STAT_TX_0: u32 = 0x1 << USB_EP1R_STAT_TX_Pos;
pub const USB_EP1R_STAT_TX_1: u32 = 0x2 << USB_EP1R_STAT_TX_Pos;
pub const USB_EP1R_DTOG_TX_Pos: u32 = 6;
pub const USB_EP1R_DTOG_TX_Msk: u32 = 0x1 << USB_EP1R_DTOG_TX_Pos;
pub const USB_EP1R_DTOG_TX: u32 = USB_EP1R_DTOG_TX_Msk;
pub const USB_EP1R_CTR_TX_Pos: u32 = 7;
pub const USB_EP1R_CTR_TX_Msk: u32 = 0x1 << USB_EP1R_CTR_TX_Pos;
pub const USB_EP1R_CTR_TX: u32 = USB_EP1R_CTR_TX_Msk;
pub const USB_EP1R_EP_KIND_Pos: u32 = 8;
pub const USB_EP1R_EP_KIND_Msk: u32 = 0x1 << USB_EP1R_EP_KIND_Pos;
pub const USB_EP1R_EP_KIND: u32 = USB_EP1R_EP_KIND_Msk;
pub const USB_EP1R_EP_TYPE_Pos: u32 = 9;
pub const USB_EP1R_EP_TYPE_Msk: u32 = 0x3 << USB_EP1R_EP_TYPE_Pos;
pub const USB_EP1R_EP_TYPE: u32 = USB_EP1R_EP_TYPE_Msk;
pub const USB_EP1R_EP_TYPE_0: u32 = 0x1 << USB_EP1R_EP_TYPE_Pos;
pub const USB_EP1R_EP_TYPE_1: u32 = 0x2 << USB_EP1R_EP_TYPE_Pos;
pub const USB_EP1R_SETUP_Pos: u32 = 11;
pub const USB_EP1R_SETUP_Msk: u32 = 0x1 << USB_EP1R_SETUP_Pos;
pub const USB_EP1R_SETUP: u32 = USB_EP1R_SETUP_Msk;
pub const USB_EP1R_STAT_RX_Pos: u32 = 12;
pub const USB_EP1R_STAT_RX_Msk: u32 = 0x3 << USB_EP1R_STAT_RX_Pos;
pub const USB_EP1R_STAT_RX: u32 = USB_EP1R_STAT_RX_Msk;
pub const USB_EP1R_STAT_RX_0: u32 = 0x1 << USB_EP1R_STAT_RX_Pos;
pub const USB_EP1R_STAT_RX_1: u32 = 0x2 << USB_EP1R_STAT_RX_Pos;
pub const USB_EP1R_DTOG_RX_Pos: u32 = 14;
pub const USB_EP1R_DTOG_RX_Msk: u32 = 0x1 << USB_EP1R_DTOG_RX_Pos;
pub const USB_EP1R_DTOG_RX: u32 = USB_EP1R_DTOG_RX_Msk;
pub const USB_EP1R_CTR_RX_Pos: u32 = 15;
pub const USB_EP1R_CTR_RX_Msk: u32 = 0x1 << USB_EP1R_CTR_RX_Pos;
pub const USB_EP1R_CTR_RX: u32 = USB_EP1R_CTR_RX_Msk;
pub const USB_EP2R_EA_Pos: u32 = 0;
pub const USB_EP2R_EA_Msk: u32 = 0xF << USB_EP2R_EA_Pos;
pub const USB_EP2R_EA: u32 = USB_EP2R_EA_Msk;
pub const USB_EP2R_STAT_TX_Pos: u32 = 4;
pub const USB_EP2R_STAT_TX_Msk: u32 = 0x3 << USB_EP2R_STAT_TX_Pos;
pub const USB_EP2R_STAT_TX: u32 = USB_EP2R_STAT_TX_Msk;
pub const USB_EP2R_STAT_TX_0: u32 = 0x1 << USB_EP2R_STAT_TX_Pos;
pub const USB_EP2R_STAT_TX_1: u32 = 0x2 << USB_EP2R_STAT_TX_Pos;
pub const USB_EP2R_DTOG_TX_Pos: u32 = 6;
pub const USB_EP2R_DTOG_TX_Msk: u32 = 0x1 << USB_EP2R_DTOG_TX_Pos;
pub const USB_EP2R_DTOG_TX: u32 = USB_EP2R_DTOG_TX_Msk;
pub const USB_EP2R_CTR_TX_Pos: u32 = 7;
pub const USB_EP2R_CTR_TX_Msk: u32 = 0x1 << USB_EP2R_CTR_TX_Pos;
pub const USB_EP2R_CTR_TX: u32 = USB_EP2R_CTR_TX_Msk;
pub const USB_EP2R_EP_KIND_Pos: u32 = 8;
pub const USB_EP2R_EP_KIND_Msk: u32 = 0x1 << USB_EP2R_EP_KIND_Pos;
pub const USB_EP2R_EP_KIND: u32 = USB_EP2R_EP_KIND_Msk;
pub const USB_EP2R_EP_TYPE_Pos: u32 = 9;
pub const USB_EP2R_EP_TYPE_Msk: u32 = 0x3 << USB_EP2R_EP_TYPE_Pos;
pub const USB_EP2R_EP_TYPE: u32 = USB_EP2R_EP_TYPE_Msk;
pub const USB_EP2R_EP_TYPE_0: u32 = 0x1 << USB_EP2R_EP_TYPE_Pos;
pub const USB_EP2R_EP_TYPE_1: u32 = 0x2 << USB_EP2R_EP_TYPE_Pos;
pub const USB_EP2R_SETUP_Pos: u32 = 11;
pub const USB_EP2R_SETUP_Msk: u32 = 0x1 << USB_EP2R_SETUP_Pos;
pub const USB_EP2R_SETUP: u32 = USB_EP2R_SETUP_Msk;
pub const USB_EP2R_STAT_RX_Pos: u32 = 12;
pub const USB_EP2R_STAT_RX_Msk: u32 = 0x3 << USB_EP2R_STAT_RX_Pos;
pub const USB_EP2R_STAT_RX: u32 = USB_EP2R_STAT_RX_Msk;
pub const USB_EP2R_STAT_RX_0: u32 = 0x1 << USB_EP2R_STAT_RX_Pos;
pub const USB_EP2R_STAT_RX_1: u32 = 0x2 << USB_EP2R_STAT_RX_Pos;
pub const USB_EP2R_DTOG_RX_Pos: u32 = 14;
pub const USB_EP2R_DTOG_RX_Msk: u32 = 0x1 << USB_EP2R_DTOG_RX_Pos;
pub const USB_EP2R_DTOG_RX: u32 = USB_EP2R_DTOG_RX_Msk;
pub const USB_EP2R_CTR_RX_Pos: u32 = 15;
pub const USB_EP2R_CTR_RX_Msk: u32 = 0x1 << USB_EP2R_CTR_RX_Pos;
pub const USB_EP2R_CTR_RX: u32 = USB_EP2R_CTR_RX_Msk;
pub const USB_EP3R_EA_Pos: u32 = 0;
pub const USB_EP3R_EA_Msk: u32 = 0xF << USB_EP3R_EA_Pos;
pub const USB_EP3R_EA: u32 = USB_EP3R_EA_Msk;
pub const USB_EP3R_STAT_TX_Pos: u32 = 4;
pub const USB_EP3R_STAT_TX_Msk: u32 = 0x3 << USB_EP3R_STAT_TX_Pos;
pub const USB_EP3R_STAT_TX: u32 = USB_EP3R_STAT_TX_Msk;
pub const USB_EP3R_STAT_TX_0: u32 = 0x1 << USB_EP3R_STAT_TX_Pos;
pub const USB_EP3R_STAT_TX_1: u32 = 0x2 << USB_EP3R_STAT_TX_Pos;
pub const USB_EP3R_DTOG_TX_Pos: u32 = 6;
pub const USB_EP3R_DTOG_TX_Msk: u32 = 0x1 << USB_EP3R_DTOG_TX_Pos;
pub const USB_EP3R_DTOG_TX: u32 = USB_EP3R_DTOG_TX_Msk;
pub const USB_EP3R_CTR_TX_Pos: u32 = 7;
pub const USB_EP3R_CTR_TX_Msk: u32 = 0x1 << USB_EP3R_CTR_TX_Pos;
pub const USB_EP3R_CTR_TX: u32 = USB_EP3R_CTR_TX_Msk;
pub const USB_EP3R_EP_KIND_Pos: u32 = 8;
pub const USB_EP3R_EP_KIND_Msk: u32 = 0x1 << USB_EP3R_EP_KIND_Pos;
pub const USB_EP3R_EP_KIND: u32 = USB_EP3R_EP_KIND_Msk;
pub const USB_EP3R_EP_TYPE_Pos: u32 = 9;
pub const USB_EP3R_EP_TYPE_Msk: u32 = 0x3 << USB_EP3R_EP_TYPE_Pos;
pub const USB_EP3R_EP_TYPE: u32 = USB_EP3R_EP_TYPE_Msk;
pub const USB_EP3R_EP_TYPE_0: u32 = 0x1 << USB_EP3R_EP_TYPE_Pos;
pub const USB_EP3R_EP_TYPE_1: u32 = 0x2 << USB_EP3R_EP_TYPE_Pos;
pub const USB_EP3R_SETUP_Pos: u32 = 11;
pub const USB_EP3R_SETUP_Msk: u32 = 0x1 << USB_EP3R_SETUP_Pos;
pub const USB_EP3R_SETUP: u32 = USB_EP3R_SETUP_Msk;
pub const USB_EP3R_STAT_RX_Pos: u32 = 12;
pub const USB_EP3R_STAT_RX_Msk: u32 = 0x3 << USB_EP3R_STAT_RX_Pos;
pub const USB_EP3R_STAT_RX: u32 = USB_EP3R_STAT_RX_Msk;
pub const USB_EP3R_STAT_RX_0: u32 = 0x1 << USB_EP3R_STAT_RX_Pos;
pub const USB_EP3R_STAT_RX_1: u32 = 0x2 << USB_EP3R_STAT_RX_Pos;
pub const USB_EP3R_DTOG_RX_Pos: u32 = 14;
pub const USB_EP3R_DTOG_RX_Msk: u32 = 0x1 << USB_EP3R_DTOG_RX_Pos;
pub const USB_EP3R_DTOG_RX: u32 = USB_EP3R_DTOG_RX_Msk;
pub const USB_EP3R_CTR_RX_Pos: u32 = 15;
pub const USB_EP3R_CTR_RX_Msk: u32 = 0x1 << USB_EP3R_CTR_RX_Pos;
pub const USB_EP3R_CTR_RX: u32 = USB_EP3R_CTR_RX_Msk;
pub const USB_EP4R_EA_Pos: u32 = 0;
pub const USB_EP4R_EA_Msk: u32 = 0xF << USB_EP4R_EA_Pos;
pub const USB_EP4R_EA: u32 = USB_EP4R_EA_Msk;
pub const USB_EP4R_STAT_TX_Pos: u32 = 4;
pub const USB_EP4R_STAT_TX_Msk: u32 = 0x3 << USB_EP4R_STAT_TX_Pos;
pub const USB_EP4R_STAT_TX: u32 = USB_EP4R_STAT_TX_Msk;
pub const USB_EP4R_STAT_TX_0: u32 = 0x1 << USB_EP4R_STAT_TX_Pos;
pub const USB_EP4R_STAT_TX_1: u32 = 0x2 << USB_EP4R_STAT_TX_Pos;
pub const USB_EP4R_DTOG_TX_Pos: u32 = 6;
pub const USB_EP4R_DTOG_TX_Msk: u32 = 0x1 << USB_EP4R_DTOG_TX_Pos;
pub const USB_EP4R_DTOG_TX: u32 = USB_EP4R_DTOG_TX_Msk;
pub const USB_EP4R_CTR_TX_Pos: u32 = 7;
pub const USB_EP4R_CTR_TX_Msk: u32 = 0x1 << USB_EP4R_CTR_TX_Pos;
pub const USB_EP4R_CTR_TX: u32 = USB_EP4R_CTR_TX_Msk;
pub const USB_EP4R_EP_KIND_Pos: u32 = 8;
pub const USB_EP4R_EP_KIND_Msk: u32 = 0x1 << USB_EP4R_EP_KIND_Pos;
pub const USB_EP4R_EP_KIND: u32 = USB_EP4R_EP_KIND_Msk;
pub const USB_EP4R_EP_TYPE_Pos: u32 = 9;
pub const USB_EP4R_EP_TYPE_Msk: u32 = 0x3 << USB_EP4R_EP_TYPE_Pos;
pub const USB_EP4R_EP_TYPE: u32 = USB_EP4R_EP_TYPE_Msk;
pub const USB_EP4R_EP_TYPE_0: u32 = 0x1 << USB_EP4R_EP_TYPE_Pos;
pub const USB_EP4R_EP_TYPE_1: u32 = 0x2 << USB_EP4R_EP_TYPE_Pos;
pub const USB_EP4R_SETUP_Pos: u32 = 11;
pub const USB_EP4R_SETUP_Msk: u32 = 0x1 << USB_EP4R_SETUP_Pos;
pub const USB_EP4R_SETUP: u32 = USB_EP4R_SETUP_Msk;
pub const USB_EP4R_STAT_RX_Pos: u32 = 12;
pub const USB_EP4R_STAT_RX_Msk: u32 = 0x3 << USB_EP4R_STAT_RX_Pos;
pub const USB_EP4R_STAT_RX: u32 = USB_EP4R_STAT_RX_Msk;
pub const USB_EP4R_STAT_RX_0: u32 = 0x1 << USB_EP4R_STAT_RX_Pos;
pub const USB_EP4R_STAT_RX_1: u32 = 0x2 << USB_EP4R_STAT_RX_Pos;
pub const USB_EP4R_DTOG_RX_Pos: u32 = 14;
pub const USB_EP4R_DTOG_RX_Msk: u32 = 0x1 << USB_EP4R_DTOG_RX_Pos;
pub const USB_EP4R_DTOG_RX: u32 = USB_EP4R_DTOG_RX_Msk;
pub const USB_EP4R_CTR_RX_Pos: u32 = 15;
pub const USB_EP4R_CTR_RX_Msk: u32 = 0x1 << USB_EP4R_CTR_RX_Pos;
pub const USB_EP4R_CTR_RX: u32 = USB_EP4R_CTR_RX_Msk;
pub const USB_EP5R_EA_Pos: u32 = 0;
pub const USB_EP5R_EA_Msk: u32 = 0xF << USB_EP5R_EA_Pos;
pub const USB_EP5R_EA: u32 = USB_EP5R_EA_Msk;
pub const USB_EP5R_STAT_TX_Pos: u32 = 4;
pub const USB_EP5R_STAT_TX_Msk: u32 = 0x3 << USB_EP5R_STAT_TX_Pos;
pub const USB_EP5R_STAT_TX: u32 = USB_EP5R_STAT_TX_Msk;
pub const USB_EP5R_STAT_TX_0: u32 = 0x1 << USB_EP5R_STAT_TX_Pos;
pub const USB_EP5R_STAT_TX_1: u32 = 0x2 << USB_EP5R_STAT_TX_Pos;
pub const USB_EP5R_DTOG_TX_Pos: u32 = 6;
pub const USB_EP5R_DTOG_TX_Msk: u32 = 0x1 << USB_EP5R_DTOG_TX_Pos;
pub const USB_EP5R_DTOG_TX: u32 = USB_EP5R_DTOG_TX_Msk;
pub const USB_EP5R_CTR_TX_Pos: u32 = 7;
pub const USB_EP5R_CTR_TX_Msk: u32 = 0x1 << USB_EP5R_CTR_TX_Pos;
pub const USB_EP5R_CTR_TX: u32 = USB_EP5R_CTR_TX_Msk;
pub const USB_EP5R_EP_KIND_Pos: u32 = 8;
pub const USB_EP5R_EP_KIND_Msk: u32 = 0x1 << USB_EP5R_EP_KIND_Pos;
pub const USB_EP5R_EP_KIND: u32 = USB_EP5R_EP_KIND_Msk;
pub const USB_EP5R_EP_TYPE_Pos: u32 = 9;
pub const USB_EP5R_EP_TYPE_Msk: u32 = 0x3 << USB_EP5R_EP_TYPE_Pos;
pub const USB_EP5R_EP_TYPE: u32 = USB_EP5R_EP_TYPE_Msk;
pub const USB_EP5R_EP_TYPE_0: u32 = 0x1 << USB_EP5R_EP_TYPE_Pos;
pub const USB_EP5R_EP_TYPE_1: u32 = 0x2 << USB_EP5R_EP_TYPE_Pos;
pub const USB_EP5R_SETUP_Pos: u32 = 11;
pub const USB_EP5R_SETUP_Msk: u32 = 0x1 << USB_EP5R_SETUP_Pos;
pub const USB_EP5R_SETUP: u32 = USB_EP5R_SETUP_Msk;
pub const USB_EP5R_STAT_RX_Pos: u32 = 12;
pub const USB_EP5R_STAT_RX_Msk: u32 = 0x3 << USB_EP5R_STAT_RX_Pos;
pub const USB_EP5R_STAT_RX: u32 = USB_EP5R_STAT_RX_Msk;
pub const USB_EP5R_STAT_RX_0: u32 = 0x1 << USB_EP5R_STAT_RX_Pos;
pub const USB_EP5R_STAT_RX_1: u32 = 0x2 << USB_EP5R_STAT_RX_Pos;
pub const USB_EP5R_DTOG_RX_Pos: u32 = 14;
pub const USB_EP5R_DTOG_RX_Msk: u32 = 0x1 << USB_EP5R_DTOG_RX_Pos;
pub const USB_EP5R_DTOG_RX: u32 = USB_EP5R_DTOG_RX_Msk;
pub const USB_EP5R_CTR_RX_Pos: u32 = 15;
pub const USB_EP5R_CTR_RX_Msk: u32 = 0x1 << USB_EP5R_CTR_RX_Pos;
pub const USB_EP5R_CTR_RX: u32 = USB_EP5R_CTR_RX_Msk;
pub const USB_EP6R_EA_Pos: u32 = 0;
pub const USB_EP6R_EA_Msk: u32 = 0xF << USB_EP6R_EA_Pos;
pub const USB_EP6R_EA: u32 = USB_EP6R_EA_Msk;
pub const USB_EP6R_STAT_TX_Pos: u32 = 4;
pub const USB_EP6R_STAT_TX_Msk: u32 = 0x3 << USB_EP6R_STAT_TX_Pos;
pub const USB_EP6R_STAT_TX: u32 = USB_EP6R_STAT_TX_Msk;
pub const USB_EP6R_STAT_TX_0: u32 = 0x1 << USB_EP6R_STAT_TX_Pos;
pub const USB_EP6R_STAT_TX_1: u32 = 0x2 << USB_EP6R_STAT_TX_Pos;
pub const USB_EP6R_DTOG_TX_Pos: u32 = 6;
pub const USB_EP6R_DTOG_TX_Msk: u32 = 0x1 << USB_EP6R_DTOG_TX_Pos;
pub const USB_EP6R_DTOG_TX: u32 = USB_EP6R_DTOG_TX_Msk;
pub const USB_EP6R_CTR_TX_Pos: u32 = 7;
pub const USB_EP6R_CTR_TX_Msk: u32 = 0x1 << USB_EP6R_CTR_TX_Pos;
pub const USB_EP6R_CTR_TX: u32 = USB_EP6R_CTR_TX_Msk;
pub const USB_EP6R_EP_KIND_Pos: u32 = 8;
pub const USB_EP6R_EP_KIND_Msk: u32 = 0x1 << USB_EP6R_EP_KIND_Pos;
pub const USB_EP6R_EP_KIND: u32 = USB_EP6R_EP_KIND_Msk;
pub const USB_EP6R_EP_TYPE_Pos: u32 = 9;
pub const USB_EP6R_EP_TYPE_Msk: u32 = 0x3 << USB_EP6R_EP_TYPE_Pos;
pub const USB_EP6R_EP_TYPE: u32 = USB_EP6R_EP_TYPE_Msk;
pub const USB_EP6R_EP_TYPE_0: u32 = 0x1 << USB_EP6R_EP_TYPE_Pos;
pub const USB_EP6R_EP_TYPE_1: u32 = 0x2 << USB_EP6R_EP_TYPE_Pos;
pub const USB_EP6R_SETUP_Pos: u32 = 11;
pub const USB_EP6R_SETUP_Msk: u32 = 0x1 << USB_EP6R_SETUP_Pos;
pub const USB_EP6R_SETUP: u32 = USB_EP6R_SETUP_Msk;
pub const USB_EP6R_STAT_RX_Pos: u32 = 12;
pub const USB_EP6R_STAT_RX_Msk: u32 = 0x3 << USB_EP6R_STAT_RX_Pos;
pub const USB_EP6R_STAT_RX: u32 = USB_EP6R_STAT_RX_Msk;
pub const USB_EP6R_STAT_RX_0: u32 = 0x1 << USB_EP6R_STAT_RX_Pos;
pub const USB_EP6R_STAT_RX_1: u32 = 0x2 << USB_EP6R_STAT_RX_Pos;
pub const USB_EP6R_DTOG_RX_Pos: u32 = 14;
pub const USB_EP6R_DTOG_RX_Msk: u32 = 0x1 << USB_EP6R_DTOG_RX_Pos;
pub const USB_EP6R_DTOG_RX: u32 = USB_EP6R_DTOG_RX_Msk;
pub const USB_EP6R_CTR_RX_Pos: u32 = 15;
pub const USB_EP6R_CTR_RX_Msk: u32 = 0x1 << USB_EP6R_CTR_RX_Pos;
pub const USB_EP6R_CTR_RX: u32 = USB_EP6R_CTR_RX_Msk;
pub const USB_EP7R_EA_Pos: u32 = 0;
pub const USB_EP7R_EA_Msk: u32 = 0xF << USB_EP7R_EA_Pos;
pub const USB_EP7R_EA: u32 = USB_EP7R_EA_Msk;
pub const USB_EP7R_STAT_TX_Pos: u32 = 4;
pub const USB_EP7R_STAT_TX_Msk: u32 = 0x3 << USB_EP7R_STAT_TX_Pos;
pub const USB_EP7R_STAT_TX: u32 = USB_EP7R_STAT_TX_Msk;
pub const USB_EP7R_STAT_TX_0: u32 = 0x1 << USB_EP7R_STAT_TX_Pos;
pub const USB_EP7R_STAT_TX_1: u32 = 0x2 << USB_EP7R_STAT_TX_Pos;
pub const USB_EP7R_DTOG_TX_Pos: u32 = 6;
pub const USB_EP7R_DTOG_TX_Msk: u32 = 0x1 << USB_EP7R_DTOG_TX_Pos;
pub const USB_EP7R_DTOG_TX: u32 = USB_EP7R_DTOG_TX_Msk;
pub const USB_EP7R_CTR_TX_Pos: u32 = 7;
pub const USB_EP7R_CTR_TX_Msk: u32 = 0x1 << USB_EP7R_CTR_TX_Pos;
pub const USB_EP7R_CTR_TX: u32 = USB_EP7R_CTR_TX_Msk;
pub const USB_EP7R_EP_KIND_Pos: u32 = 8;
pub const USB_EP7R_EP_KIND_Msk: u32 = 0x1 << USB_EP7R_EP_KIND_Pos;
pub const USB_EP7R_EP_KIND: u32 = USB_EP7R_EP_KIND_Msk;
pub const USB_EP7R_EP_TYPE_Pos: u32 = 9;
pub const USB_EP7R_EP_TYPE_Msk: u32 = 0x3 << USB_EP7R_EP_TYPE_Pos;
pub const USB_EP7R_EP_TYPE: u32 = USB_EP7R_EP_TYPE_Msk;
pub const USB_EP7R_EP_TYPE_0: u32 = 0x1 << USB_EP7R_EP_TYPE_Pos;
pub const USB_EP7R_EP_TYPE_1: u32 = 0x2 << USB_EP7R_EP_TYPE_Pos;
pub const USB_EP7R_SETUP_Pos: u32 = 11;
pub const USB_EP7R_SETUP_Msk: u32 = 0x1 << USB_EP7R_SETUP_Pos;
pub const USB_EP7R_SETUP: u32 = USB_EP7R_SETUP_Msk;
pub const USB_EP7R_STAT_RX_Pos: u32 = 12;
pub const USB_EP7R_STAT_RX_Msk: u32 = 0x3 << USB_EP7R_STAT_RX_Pos;
pub const USB_EP7R_STAT_RX: u32 = USB_EP7R_STAT_RX_Msk;
pub const USB_EP7R_STAT_RX_0: u32 = 0x1 << USB_EP7R_STAT_RX_Pos;
pub const USB_EP7R_STAT_RX_1: u32 = 0x2 << USB_EP7R_STAT_RX_Pos;
pub const USB_EP7R_DTOG_RX_Pos: u32 = 14;
pub const USB_EP7R_DTOG_RX_Msk: u32 = 0x1 << USB_EP7R_DTOG_RX_Pos;
pub const USB_EP7R_DTOG_RX: u32 = USB_EP7R_DTOG_RX_Msk;
pub const USB_EP7R_CTR_RX_Pos: u32 = 15;
pub const USB_EP7R_CTR_RX_Msk: u32 = 0x1 << USB_EP7R_CTR_RX_Pos;
pub const USB_EP7R_CTR_RX: u32 = USB_EP7R_CTR_RX_Msk;
pub const USB_CNTR: u32 = USB_BASE + 0x00000040;
pub const USB_ISTR: u32 = USB_BASE + 0x00000044;
pub const USB_FNR: u32 = USB_BASE + 0x00000048;
pub const USB_DADDR: u32 = USB_BASE + 0x0000004C;
pub const USB_BTABLE: u32 = USB_BASE + 0x00000050;
pub const USB_CNTR_FRES_Pos: u32 = 0;
pub const USB_CNTR_FRES_Msk: u32 = 0x1 << USB_CNTR_FRES_Pos;
pub const USB_CNTR_FRES: u32 = USB_CNTR_FRES_Msk;
pub const USB_CNTR_PDWN_Pos: u32 = 1;
pub const USB_CNTR_PDWN_Msk: u32 = 0x1 << USB_CNTR_PDWN_Pos;
pub const USB_CNTR_PDWN: u32 = USB_CNTR_PDWN_Msk;
pub const USB_CNTR_LPMODE_Pos: u32 = 2;
pub const USB_CNTR_LPMODE_Msk: u32 = 0x1 << USB_CNTR_LPMODE_Pos;
pub const USB_CNTR_LPMODE: u32 = USB_CNTR_LPMODE_Msk;
pub const USB_CNTR_FSUSP_Pos: u32 = 3;
pub const USB_CNTR_FSUSP_Msk: u32 = 0x1 << USB_CNTR_FSUSP_Pos;
pub const USB_CNTR_FSUSP: u32 = USB_CNTR_FSUSP_Msk;
pub const USB_CNTR_RESUME_Pos: u32 = 4;
pub const USB_CNTR_RESUME_Msk: u32 = 0x1 << USB_CNTR_RESUME_Pos;
pub const USB_CNTR_RESUME: u32 = USB_CNTR_RESUME_Msk;
pub const USB_CNTR_ESOFM_Pos: u32 = 8;
pub const USB_CNTR_ESOFM_Msk: u32 = 0x1 << USB_CNTR_ESOFM_Pos;
pub const USB_CNTR_ESOFM: u32 = USB_CNTR_ESOFM_Msk;
pub const USB_CNTR_SOFM_Pos: u32 = 9;
pub const USB_CNTR_SOFM_Msk: u32 = 0x1 << USB_CNTR_SOFM_Pos;
pub const USB_CNTR_SOFM: u32 = USB_CNTR_SOFM_Msk;
pub const USB_CNTR_RESETM_Pos: u32 = 10;
pub const USB_CNTR_RESETM_Msk: u32 = 0x1 << USB_CNTR_RESETM_Pos;
pub const USB_CNTR_RESETM: u32 = USB_CNTR_RESETM_Msk;
pub const USB_CNTR_SUSPM_Pos: u32 = 11;
pub const USB_CNTR_SUSPM_Msk: u32 = 0x1 << USB_CNTR_SUSPM_Pos;
pub const USB_CNTR_SUSPM: u32 = USB_CNTR_SUSPM_Msk;
pub const USB_CNTR_WKUPM_Pos: u32 = 12;
pub const USB_CNTR_WKUPM_Msk: u32 = 0x1 << USB_CNTR_WKUPM_Pos;
pub const USB_CNTR_WKUPM: u32 = USB_CNTR_WKUPM_Msk;
pub const USB_CNTR_ERRM_Pos: u32 = 13;
pub const USB_CNTR_ERRM_Msk: u32 = 0x1 << USB_CNTR_ERRM_Pos;
pub const USB_CNTR_ERRM: u32 = USB_CNTR_ERRM_Msk;
pub const USB_CNTR_PMAOVRM_Pos: u32 = 14;
pub const USB_CNTR_PMAOVRM_Msk: u32 = 0x1 << USB_CNTR_PMAOVRM_Pos;
pub const USB_CNTR_PMAOVRM: u32 = USB_CNTR_PMAOVRM_Msk;
pub const USB_CNTR_CTRM_Pos: u32 = 15;
pub const USB_CNTR_CTRM_Msk: u32 = 0x1 << USB_CNTR_CTRM_Pos;
pub const USB_CNTR_CTRM: u32 = USB_CNTR_CTRM_Msk;
pub const USB_ISTR_EP_ID_Pos: u32 = 0;
pub const USB_ISTR_EP_ID_Msk: u32 = 0xF << USB_ISTR_EP_ID_Pos;
pub const USB_ISTR_EP_ID: u32 = USB_ISTR_EP_ID_Msk;
pub const USB_ISTR_DIR_Pos: u32 = 4;
pub const USB_ISTR_DIR_Msk: u32 = 0x1 << USB_ISTR_DIR_Pos;
pub const USB_ISTR_DIR: u32 = USB_ISTR_DIR_Msk;
pub const USB_ISTR_ESOF_Pos: u32 = 8;
pub const USB_ISTR_ESOF_Msk: u32 = 0x1 << USB_ISTR_ESOF_Pos;
pub const USB_ISTR_ESOF: u32 = USB_ISTR_ESOF_Msk;
pub const USB_ISTR_SOF_Pos: u32 = 9;
pub const USB_ISTR_SOF_Msk: u32 = 0x1 << USB_ISTR_SOF_Pos;
pub const USB_ISTR_SOF: u32 = USB_ISTR_SOF_Msk;
pub const USB_ISTR_RESET_Pos: u32 = 10;
pub const USB_ISTR_RESET_Msk: u32 = 0x1 << USB_ISTR_RESET_Pos;
pub const USB_ISTR_RESET: u32 = USB_ISTR_RESET_Msk;
pub const USB_ISTR_SUSP_Pos: u32 = 11;
pub const USB_ISTR_SUSP_Msk: u32 = 0x1 << USB_ISTR_SUSP_Pos;
pub const USB_ISTR_SUSP: u32 = USB_ISTR_SUSP_Msk;
pub const USB_ISTR_WKUP_Pos: u32 = 12;
pub const USB_ISTR_WKUP_Msk: u32 = 0x1 << USB_ISTR_WKUP_Pos;
pub const USB_ISTR_WKUP: u32 = USB_ISTR_WKUP_Msk;
pub const USB_ISTR_ERR_Pos: u32 = 13;
pub const USB_ISTR_ERR_Msk: u32 = 0x1 << USB_ISTR_ERR_Pos;
pub const USB_ISTR_ERR: u32 = USB_ISTR_ERR_Msk;
pub const USB_ISTR_PMAOVR_Pos: u32 = 14;
pub const USB_ISTR_PMAOVR_Msk: u32 = 0x1 << USB_ISTR_PMAOVR_Pos;
pub const USB_ISTR_PMAOVR: u32 = USB_ISTR_PMAOVR_Msk;
pub const USB_ISTR_CTR_Pos: u32 = 15;
pub const USB_ISTR_CTR_Msk: u32 = 0x1 << USB_ISTR_CTR_Pos;
pub const USB_ISTR_CTR: u32 = USB_ISTR_CTR_Msk;
pub const USB_CLR_CTR: u32 = !USB_ISTR_CTR;
pub const USB_CLR_PMAOVRM: u32 = !USB_ISTR_PMAOVR;
pub const USB_CLR_ERR: u32 = !USB_ISTR_ERR;
pub const USB_CLR_WKUP: u32 = !USB_ISTR_WKUP;
pub const USB_CLR_SUSP: u32 = !USB_ISTR_SUSP;
pub const USB_CLR_RESET: u32 = !USB_ISTR_RESET;
pub const USB_CLR_SOF: u32 = !USB_ISTR_SOF;
pub const USB_CLR_ESOF: u32 = !USB_ISTR_ESOF;
pub const USB_FNR_FN_Pos: u32 = 0;
pub const USB_FNR_FN_Msk: u32 = 0x7FF << USB_FNR_FN_Pos;
pub const USB_FNR_FN: u32 = USB_FNR_FN_Msk;
pub const USB_FNR_LSOF_Pos: u32 = 11;
pub const USB_FNR_LSOF_Msk: u32 = 0x3 << USB_FNR_LSOF_Pos;
pub const USB_FNR_LSOF: u32 = USB_FNR_LSOF_Msk;
pub const USB_FNR_LCK_Pos: u32 = 13;
pub const USB_FNR_LCK_Msk: u32 = 0x1 << USB_FNR_LCK_Pos;
pub const USB_FNR_LCK: u32 = USB_FNR_LCK_Msk;
pub const USB_FNR_RXDM_Pos: u32 = 14;
pub const USB_FNR_RXDM_Msk: u32 = 0x1 << USB_FNR_RXDM_Pos;
pub const USB_FNR_RXDM: u32 = USB_FNR_RXDM_Msk;
pub const USB_FNR_RXDP_Pos: u32 = 15;
pub const USB_FNR_RXDP_Msk: u32 = 0x1 << USB_FNR_RXDP_Pos;
pub const USB_FNR_RXDP: u32 = USB_FNR_RXDP_Msk;
pub const USB_DADDR_ADD_Pos: u32 = 0;
pub const USB_DADDR_ADD_Msk: u32 = 0x7F << USB_DADDR_ADD_Pos;
pub const USB_DADDR_ADD: u32 = USB_DADDR_ADD_Msk;
pub const USB_DADDR_ADD0_Pos: u32 = 0;
pub const USB_DADDR_ADD0_Msk: u32 = 0x1 << USB_DADDR_ADD0_Pos;
pub const USB_DADDR_ADD0: u32 = USB_DADDR_ADD0_Msk;
pub const USB_DADDR_ADD1_Pos: u32 = 1;
pub const USB_DADDR_ADD1_Msk: u32 = 0x1 << USB_DADDR_ADD1_Pos;
pub const USB_DADDR_ADD1: u32 = USB_DADDR_ADD1_Msk;
pub const USB_DADDR_ADD2_Pos: u32 = 2;
pub const USB_DADDR_ADD2_Msk: u32 = 0x1 << USB_DADDR_ADD2_Pos;
pub const USB_DADDR_ADD2: u32 = USB_DADDR_ADD2_Msk;
pub const USB_DADDR_ADD3_Pos: u32 = 3;
pub const USB_DADDR_ADD3_Msk: u32 = 0x1 << USB_DADDR_ADD3_Pos;
pub const USB_DADDR_ADD3: u32 = USB_DADDR_ADD3_Msk;
pub const USB_DADDR_ADD4_Pos: u32 = 4;
pub const USB_DADDR_ADD4_Msk: u32 = 0x1 << USB_DADDR_ADD4_Pos;
pub const USB_DADDR_ADD4: u32 = USB_DADDR_ADD4_Msk;
pub const USB_DADDR_ADD5_Pos: u32 = 5;
pub const USB_DADDR_ADD5_Msk: u32 = 0x1 << USB_DADDR_ADD5_Pos;
pub const USB_DADDR_ADD5: u32 = USB_DADDR_ADD5_Msk;
pub const USB_DADDR_ADD6_Pos: u32 = 6;
pub const USB_DADDR_ADD6_Msk: u32 = 0x1 << USB_DADDR_ADD6_Pos;
pub const USB_DADDR_ADD6: u32 = USB_DADDR_ADD6_Msk;
pub const USB_DADDR_EF_Pos: u32 = 7;
pub const USB_DADDR_EF_Msk: u32 = 0x1 << USB_DADDR_EF_Pos;
pub const USB_DADDR_EF: u32 = USB_DADDR_EF_Msk;
pub const USB_BTABLE_BTABLE_Pos: u32 = 3;
pub const USB_BTABLE_BTABLE_Msk: u32 = 0x1FFF << USB_BTABLE_BTABLE_Pos;
pub const USB_BTABLE_BTABLE: u32 = USB_BTABLE_BTABLE_Msk;
pub const USB_ADDR0_TX_ADDR0_TX_Pos: u32 = 1;
pub const USB_ADDR0_TX_ADDR0_TX_Msk: u32 = 0x7FFF << USB_ADDR0_TX_ADDR0_TX_Pos;
pub const USB_ADDR0_TX_ADDR0_TX: u32 = USB_ADDR0_TX_ADDR0_TX_Msk;
pub const USB_ADDR1_TX_ADDR1_TX_Pos: u32 = 1;
pub const USB_ADDR1_TX_ADDR1_TX_Msk: u32 = 0x7FFF << USB_ADDR1_TX_ADDR1_TX_Pos;
pub const USB_ADDR1_TX_ADDR1_TX: u32 = USB_ADDR1_TX_ADDR1_TX_Msk;
pub const USB_ADDR2_TX_ADDR2_TX_Pos: u32 = 1;
pub const USB_ADDR2_TX_ADDR2_TX_Msk: u32 = 0x7FFF << USB_ADDR2_TX_ADDR2_TX_Pos;
pub const USB_ADDR2_TX_ADDR2_TX: u32 = USB_ADDR2_TX_ADDR2_TX_Msk;
pub const USB_ADDR3_TX_ADDR3_TX_Pos: u32 = 1;
pub const USB_ADDR3_TX_ADDR3_TX_Msk: u32 = 0x7FFF << USB_ADDR3_TX_ADDR3_TX_Pos;
pub const USB_ADDR3_TX_ADDR3_TX: u32 = USB_ADDR3_TX_ADDR3_TX_Msk;
pub const USB_ADDR4_TX_ADDR4_TX_Pos: u32 = 1;
pub const USB_ADDR4_TX_ADDR4_TX_Msk: u32 = 0x7FFF << USB_ADDR4_TX_ADDR4_TX_Pos;
pub const USB_ADDR4_TX_ADDR4_TX: u32 = USB_ADDR4_TX_ADDR4_TX_Msk;
pub const USB_ADDR5_TX_ADDR5_TX_Pos: u32 = 1;
pub const USB_ADDR5_TX_ADDR5_TX_Msk: u32 = 0x7FFF << USB_ADDR5_TX_ADDR5_TX_Pos;
pub const USB_ADDR5_TX_ADDR5_TX: u32 = USB_ADDR5_TX_ADDR5_TX_Msk;
pub const USB_ADDR6_TX_ADDR6_TX_Pos: u32 = 1;
pub const USB_ADDR6_TX_ADDR6_TX_Msk: u32 = 0x7FFF << USB_ADDR6_TX_ADDR6_TX_Pos;
pub const USB_ADDR6_TX_ADDR6_TX: u32 = USB_ADDR6_TX_ADDR6_TX_Msk;
pub const USB_ADDR7_TX_ADDR7_TX_Pos: u32 = 1;
pub const USB_ADDR7_TX_ADDR7_TX_Msk: u32 = 0x7FFF << USB_ADDR7_TX_ADDR7_TX_Pos;
pub const USB_ADDR7_TX_ADDR7_TX: u32 = USB_ADDR7_TX_ADDR7_TX_Msk;
pub const USB_COUNT0_TX_COUNT0_TX_Pos: u32 = 0;
pub const USB_COUNT0_TX_COUNT0_TX_Msk: u32 = 0x3FF << USB_COUNT0_TX_COUNT0_TX_Pos;
pub const USB_COUNT0_TX_COUNT0_TX: u32 = USB_COUNT0_TX_COUNT0_TX_Msk;
pub const USB_COUNT1_TX_COUNT1_TX_Pos: u32 = 0;
pub const USB_COUNT1_TX_COUNT1_TX_Msk: u32 = 0x3FF << USB_COUNT1_TX_COUNT1_TX_Pos;
pub const USB_COUNT1_TX_COUNT1_TX: u32 = USB_COUNT1_TX_COUNT1_TX_Msk;
pub const USB_COUNT2_TX_COUNT2_TX_Pos: u32 = 0;
pub const USB_COUNT2_TX_COUNT2_TX_Msk: u32 = 0x3FF << USB_COUNT2_TX_COUNT2_TX_Pos;
pub const USB_COUNT2_TX_COUNT2_TX: u32 = USB_COUNT2_TX_COUNT2_TX_Msk;
pub const USB_COUNT3_TX_COUNT3_TX_Pos: u32 = 0;
pub const USB_COUNT3_TX_COUNT3_TX_Msk: u32 = 0x3FF << USB_COUNT3_TX_COUNT3_TX_Pos;
pub const USB_COUNT3_TX_COUNT3_TX: u32 = USB_COUNT3_TX_COUNT3_TX_Msk;
pub const USB_COUNT4_TX_COUNT4_TX_Pos: u32 = 0;
pub const USB_COUNT4_TX_COUNT4_TX_Msk: u32 = 0x3FF << USB_COUNT4_TX_COUNT4_TX_Pos;
pub const USB_COUNT4_TX_COUNT4_TX: u32 = USB_COUNT4_TX_COUNT4_TX_Msk;
pub const USB_COUNT5_TX_COUNT5_TX_Pos: u32 = 0;
pub const USB_COUNT5_TX_COUNT5_TX_Msk: u32 = 0x3FF << USB_COUNT5_TX_COUNT5_TX_Pos;
pub const USB_COUNT5_TX_COUNT5_TX: u32 = USB_COUNT5_TX_COUNT5_TX_Msk;
pub const USB_COUNT6_TX_COUNT6_TX_Pos: u32 = 0;
pub const USB_COUNT6_TX_COUNT6_TX_Msk: u32 = 0x3FF << USB_COUNT6_TX_COUNT6_TX_Pos;
pub const USB_COUNT6_TX_COUNT6_TX: u32 = USB_COUNT6_TX_COUNT6_TX_Msk;
pub const USB_COUNT7_TX_COUNT7_TX_Pos: u32 = 0;
pub const USB_COUNT7_TX_COUNT7_TX_Msk: u32 = 0x3FF << USB_COUNT7_TX_COUNT7_TX_Pos;
pub const USB_COUNT7_TX_COUNT7_TX: u32 = USB_COUNT7_TX_COUNT7_TX_Msk;
pub const USB_COUNT0_TX_0_COUNT0_TX_0: u32 = 0x000003FF;
pub const USB_COUNT0_TX_1_COUNT0_TX_1: u32 = 0x03FF0000;
pub const USB_COUNT1_TX_0_COUNT1_TX_0: u32 = 0x000003FF;
pub const USB_COUNT1_TX_1_COUNT1_TX_1: u32 = 0x03FF0000;
pub const USB_COUNT2_TX_0_COUNT2_TX_0: u32 = 0x000003FF;
pub const USB_COUNT2_TX_1_COUNT2_TX_1: u32 = 0x03FF0000;
pub const USB_COUNT3_TX_0_COUNT3_TX_0: u32 = 0x000003FF;
pub const USB_COUNT3_TX_1_COUNT3_TX_1: u32 = 0x03FF0000;
pub const USB_COUNT4_TX_0_COUNT4_TX_0: u32 = 0x000003FF;
pub const USB_COUNT4_TX_1_COUNT4_TX_1: u32 = 0x03FF0000;
pub const USB_COUNT5_TX_0_COUNT5_TX_0: u32 = 0x000003FF;
pub const USB_COUNT5_TX_1_COUNT5_TX_1: u32 = 0x03FF0000;
pub const USB_COUNT6_TX_0_COUNT6_TX_0: u32 = 0x000003FF;
pub const USB_COUNT6_TX_1_COUNT6_TX_1: u32 = 0x03FF0000;
pub const USB_COUNT7_TX_0_COUNT7_TX_0: u32 = 0x000003FF;
pub const USB_COUNT7_TX_1_COUNT7_TX_1: u32 = 0x03FF0000;
pub const USB_ADDR0_RX_ADDR0_RX_Pos: u32 = 1;
pub const USB_ADDR0_RX_ADDR0_RX_Msk: u32 = 0x7FFF << USB_ADDR0_RX_ADDR0_RX_Pos;
pub const USB_ADDR0_RX_ADDR0_RX: u32 = USB_ADDR0_RX_ADDR0_RX_Msk;
pub const USB_ADDR1_RX_ADDR1_RX_Pos: u32 = 1;
pub const USB_ADDR1_RX_ADDR1_RX_Msk: u32 = 0x7FFF << USB_ADDR1_RX_ADDR1_RX_Pos;
pub const USB_ADDR1_RX_ADDR1_RX: u32 = USB_ADDR1_RX_ADDR1_RX_Msk;
pub const USB_ADDR2_RX_ADDR2_RX_Pos: u32 = 1;
pub const USB_ADDR2_RX_ADDR2_RX_Msk: u32 = 0x7FFF << USB_ADDR2_RX_ADDR2_RX_Pos;
pub const USB_ADDR2_RX_ADDR2_RX: u32 = USB_ADDR2_RX_ADDR2_RX_Msk;
pub const USB_ADDR3_RX_ADDR3_RX_Pos: u32 = 1;
pub const USB_ADDR3_RX_ADDR3_RX_Msk: u32 = 0x7FFF << USB_ADDR3_RX_ADDR3_RX_Pos;
pub const USB_ADDR3_RX_ADDR3_RX: u32 = USB_ADDR3_RX_ADDR3_RX_Msk;
pub const USB_ADDR4_RX_ADDR4_RX_Pos: u32 = 1;
pub const USB_ADDR4_RX_ADDR4_RX_Msk: u32 = 0x7FFF << USB_ADDR4_RX_ADDR4_RX_Pos;
pub const USB_ADDR4_RX_ADDR4_RX: u32 = USB_ADDR4_RX_ADDR4_RX_Msk;
pub const USB_ADDR5_RX_ADDR5_RX_Pos: u32 = 1;
pub const USB_ADDR5_RX_ADDR5_RX_Msk: u32 = 0x7FFF << USB_ADDR5_RX_ADDR5_RX_Pos;
pub const USB_ADDR5_RX_ADDR5_RX: u32 = USB_ADDR5_RX_ADDR5_RX_Msk;
pub const USB_ADDR6_RX_ADDR6_RX_Pos: u32 = 1;
pub const USB_ADDR6_RX_ADDR6_RX_Msk: u32 = 0x7FFF << USB_ADDR6_RX_ADDR6_RX_Pos;
pub const USB_ADDR6_RX_ADDR6_RX: u32 = USB_ADDR6_RX_ADDR6_RX_Msk;
pub const USB_ADDR7_RX_ADDR7_RX_Pos: u32 = 1;
pub const USB_ADDR7_RX_ADDR7_RX_Msk: u32 = 0x7FFF << USB_ADDR7_RX_ADDR7_RX_Pos;
pub const USB_ADDR7_RX_ADDR7_RX: u32 = USB_ADDR7_RX_ADDR7_RX_Msk;
pub const USB_COUNT0_RX_COUNT0_RX_Pos: u32 = 0;
pub const USB_COUNT0_RX_COUNT0_RX_Msk: u32 = 0x3FF << USB_COUNT0_RX_COUNT0_RX_Pos;
pub const USB_COUNT0_RX_COUNT0_RX: u32 = USB_COUNT0_RX_COUNT0_RX_Msk;
pub const USB_COUNT0_RX_NUM_BLOCK_Pos: u32 = 10;
pub const USB_COUNT0_RX_NUM_BLOCK_Msk: u32 = 0x1F << USB_COUNT0_RX_NUM_BLOCK_Pos;
pub const USB_COUNT0_RX_NUM_BLOCK: u32 = USB_COUNT0_RX_NUM_BLOCK_Msk;
pub const USB_COUNT0_RX_NUM_BLOCK_0: u32 = 0x01 << USB_COUNT0_RX_NUM_BLOCK_Pos;
pub const USB_COUNT0_RX_NUM_BLOCK_1: u32 = 0x02 << USB_COUNT0_RX_NUM_BLOCK_Pos;
pub const USB_COUNT0_RX_NUM_BLOCK_2: u32 = 0x04 << USB_COUNT0_RX_NUM_BLOCK_Pos;
pub const USB_COUNT0_RX_NUM_BLOCK_3: u32 = 0x08 << USB_COUNT0_RX_NUM_BLOCK_Pos;
pub const USB_COUNT0_RX_NUM_BLOCK_4: u32 = 0x10 << USB_COUNT0_RX_NUM_BLOCK_Pos;
pub const USB_COUNT0_RX_BLSIZE_Pos: u32 = 15;
pub const USB_COUNT0_RX_BLSIZE_Msk: u32 = 0x1 << USB_COUNT0_RX_BLSIZE_Pos;
pub const USB_COUNT0_RX_BLSIZE: u32 = USB_COUNT0_RX_BLSIZE_Msk;
pub const USB_COUNT1_RX_COUNT1_RX_Pos: u32 = 0;
pub const USB_COUNT1_RX_COUNT1_RX_Msk: u32 = 0x3FF << USB_COUNT1_RX_COUNT1_RX_Pos;
pub const USB_COUNT1_RX_COUNT1_RX: u32 = USB_COUNT1_RX_COUNT1_RX_Msk;
pub const USB_COUNT1_RX_NUM_BLOCK_Pos: u32 = 10;
pub const USB_COUNT1_RX_NUM_BLOCK_Msk: u32 = 0x1F << USB_COUNT1_RX_NUM_BLOCK_Pos;
pub const USB_COUNT1_RX_NUM_BLOCK: u32 = USB_COUNT1_RX_NUM_BLOCK_Msk;
pub const USB_COUNT1_RX_NUM_BLOCK_0: u32 = 0x01 << USB_COUNT1_RX_NUM_BLOCK_Pos;
pub const USB_COUNT1_RX_NUM_BLOCK_1: u32 = 0x02 << USB_COUNT1_RX_NUM_BLOCK_Pos;
pub const USB_COUNT1_RX_NUM_BLOCK_2: u32 = 0x04 << USB_COUNT1_RX_NUM_BLOCK_Pos;
pub const USB_COUNT1_RX_NUM_BLOCK_3: u32 = 0x08 << USB_COUNT1_RX_NUM_BLOCK_Pos;
pub const USB_COUNT1_RX_NUM_BLOCK_4: u32 = 0x10 << USB_COUNT1_RX_NUM_BLOCK_Pos;
pub const USB_COUNT1_RX_BLSIZE_Pos: u32 = 15;
pub const USB_COUNT1_RX_BLSIZE_Msk: u32 = 0x1 << USB_COUNT1_RX_BLSIZE_Pos;
pub const USB_COUNT1_RX_BLSIZE: u32 = USB_COUNT1_RX_BLSIZE_Msk;
pub const USB_COUNT2_RX_COUNT2_RX_Pos: u32 = 0;
pub const USB_COUNT2_RX_COUNT2_RX_Msk: u32 = 0x3FF << USB_COUNT2_RX_COUNT2_RX_Pos;
pub const USB_COUNT2_RX_COUNT2_RX: u32 = USB_COUNT2_RX_COUNT2_RX_Msk;
pub const USB_COUNT2_RX_NUM_BLOCK_Pos: u32 = 10;
pub const USB_COUNT2_RX_NUM_BLOCK_Msk: u32 = 0x1F << USB_COUNT2_RX_NUM_BLOCK_Pos;
pub const USB_COUNT2_RX_NUM_BLOCK: u32 = USB_COUNT2_RX_NUM_BLOCK_Msk;
pub const USB_COUNT2_RX_NUM_BLOCK_0: u32 = 0x01 << USB_COUNT2_RX_NUM_BLOCK_Pos;
pub const USB_COUNT2_RX_NUM_BLOCK_1: u32 = 0x02 << USB_COUNT2_RX_NUM_BLOCK_Pos;
pub const USB_COUNT2_RX_NUM_BLOCK_2: u32 = 0x04 << USB_COUNT2_RX_NUM_BLOCK_Pos;
pub const USB_COUNT2_RX_NUM_BLOCK_3: u32 = 0x08 << USB_COUNT2_RX_NUM_BLOCK_Pos;
pub const USB_COUNT2_RX_NUM_BLOCK_4: u32 = 0x10 << USB_COUNT2_RX_NUM_BLOCK_Pos;
pub const USB_COUNT2_RX_BLSIZE_Pos: u32 = 15;
pub const USB_COUNT2_RX_BLSIZE_Msk: u32 = 0x1 << USB_COUNT2_RX_BLSIZE_Pos;
pub const USB_COUNT2_RX_BLSIZE: u32 = USB_COUNT2_RX_BLSIZE_Msk;
pub const USB_COUNT3_RX_COUNT3_RX_Pos: u32 = 0;
pub const USB_COUNT3_RX_COUNT3_RX_Msk: u32 = 0x3FF << USB_COUNT3_RX_COUNT3_RX_Pos;
pub const USB_COUNT3_RX_COUNT3_RX: u32 = USB_COUNT3_RX_COUNT3_RX_Msk;
pub const USB_COUNT3_RX_NUM_BLOCK_Pos: u32 = 10;
pub const USB_COUNT3_RX_NUM_BLOCK_Msk: u32 = 0x1F << USB_COUNT3_RX_NUM_BLOCK_Pos;
pub const USB_COUNT3_RX_NUM_BLOCK: u32 = USB_COUNT3_RX_NUM_BLOCK_Msk;
pub const USB_COUNT3_RX_NUM_BLOCK_0: u32 = 0x01 << USB_COUNT3_RX_NUM_BLOCK_Pos;
pub const USB_COUNT3_RX_NUM_BLOCK_1: u32 = 0x02 << USB_COUNT3_RX_NUM_BLOCK_Pos;
pub const USB_COUNT3_RX_NUM_BLOCK_2: u32 = 0x04 << USB_COUNT3_RX_NUM_BLOCK_Pos;
pub const USB_COUNT3_RX_NUM_BLOCK_3: u32 = 0x08 << USB_COUNT3_RX_NUM_BLOCK_Pos;
pub const USB_COUNT3_RX_NUM_BLOCK_4: u32 = 0x10 << USB_COUNT3_RX_NUM_BLOCK_Pos;
pub const USB_COUNT3_RX_BLSIZE_Pos: u32 = 15;
pub const USB_COUNT3_RX_BLSIZE_Msk: u32 = 0x1 << USB_COUNT3_RX_BLSIZE_Pos;
pub const USB_COUNT3_RX_BLSIZE: u32 = USB_COUNT3_RX_BLSIZE_Msk;
pub const USB_COUNT4_RX_COUNT4_RX_Pos: u32 = 0;
pub const USB_COUNT4_RX_COUNT4_RX_Msk: u32 = 0x3FF << USB_COUNT4_RX_COUNT4_RX_Pos;
pub const USB_COUNT4_RX_COUNT4_RX: u32 = USB_COUNT4_RX_COUNT4_RX_Msk;
pub const USB_COUNT4_RX_NUM_BLOCK_Pos: u32 = 10;
pub const USB_COUNT4_RX_NUM_BLOCK_Msk: u32 = 0x1F << USB_COUNT4_RX_NUM_BLOCK_Pos;
pub const USB_COUNT4_RX_NUM_BLOCK: u32 = USB_COUNT4_RX_NUM_BLOCK_Msk;
pub const USB_COUNT4_RX_NUM_BLOCK_0: u32 = 0x01 << USB_COUNT4_RX_NUM_BLOCK_Pos;
pub const USB_COUNT4_RX_NUM_BLOCK_1: u32 = 0x02 << USB_COUNT4_RX_NUM_BLOCK_Pos;
pub const USB_COUNT4_RX_NUM_BLOCK_2: u32 = 0x04 << USB_COUNT4_RX_NUM_BLOCK_Pos;
pub const USB_COUNT4_RX_NUM_BLOCK_3: u32 = 0x08 << USB_COUNT4_RX_NUM_BLOCK_Pos;
pub const USB_COUNT4_RX_NUM_BLOCK_4: u32 = 0x10 << USB_COUNT4_RX_NUM_BLOCK_Pos;
pub const USB_COUNT4_RX_BLSIZE_Pos: u32 = 15;
pub const USB_COUNT4_RX_BLSIZE_Msk: u32 = 0x1 << USB_COUNT4_RX_BLSIZE_Pos;
pub const USB_COUNT4_RX_BLSIZE: u32 = USB_COUNT4_RX_BLSIZE_Msk;
pub const USB_COUNT5_RX_COUNT5_RX_Pos: u32 = 0;
pub const USB_COUNT5_RX_COUNT5_RX_Msk: u32 = 0x3FF << USB_COUNT5_RX_COUNT5_RX_Pos;
pub const USB_COUNT5_RX_COUNT5_RX: u32 = USB_COUNT5_RX_COUNT5_RX_Msk;
pub const USB_COUNT5_RX_NUM_BLOCK_Pos: u32 = 10;
pub const USB_COUNT5_RX_NUM_BLOCK_Msk: u32 = 0x1F << USB_COUNT5_RX_NUM_BLOCK_Pos;
pub const USB_COUNT5_RX_NUM_BLOCK: u32 = USB_COUNT5_RX_NUM_BLOCK_Msk;
pub const USB_COUNT5_RX_NUM_BLOCK_0: u32 = 0x01 << USB_COUNT5_RX_NUM_BLOCK_Pos;
pub const USB_COUNT5_RX_NUM_BLOCK_1: u32 = 0x02 << USB_COUNT5_RX_NUM_BLOCK_Pos;
pub const USB_COUNT5_RX_NUM_BLOCK_2: u32 = 0x04 << USB_COUNT5_RX_NUM_BLOCK_Pos;
pub const USB_COUNT5_RX_NUM_BLOCK_3: u32 = 0x08 << USB_COUNT5_RX_NUM_BLOCK_Pos;
pub const USB_COUNT5_RX_NUM_BLOCK_4: u32 = 0x10 << USB_COUNT5_RX_NUM_BLOCK_Pos;
pub const USB_COUNT5_RX_BLSIZE_Pos: u32 = 15;
pub const USB_COUNT5_RX_BLSIZE_Msk: u32 = 0x1 << USB_COUNT5_RX_BLSIZE_Pos;
pub const USB_COUNT5_RX_BLSIZE: u32 = USB_COUNT5_RX_BLSIZE_Msk;
pub const USB_COUNT6_RX_COUNT6_RX_Pos: u32 = 0;
pub const USB_COUNT6_RX_COUNT6_RX_Msk: u32 = 0x3FF << USB_COUNT6_RX_COUNT6_RX_Pos;
pub const USB_COUNT6_RX_COUNT6_RX: u32 = USB_COUNT6_RX_COUNT6_RX_Msk;
pub const USB_COUNT6_RX_NUM_BLOCK_Pos: u32 = 10;
pub const USB_COUNT6_RX_NUM_BLOCK_Msk: u32 = 0x1F << USB_COUNT6_RX_NUM_BLOCK_Pos;
pub const USB_COUNT6_RX_NUM_BLOCK: u32 = USB_COUNT6_RX_NUM_BLOCK_Msk;
pub const USB_COUNT6_RX_NUM_BLOCK_0: u32 = 0x01 << USB_COUNT6_RX_NUM_BLOCK_Pos;
pub const USB_COUNT6_RX_NUM_BLOCK_1: u32 = 0x02 << USB_COUNT6_RX_NUM_BLOCK_Pos;
pub const USB_COUNT6_RX_NUM_BLOCK_2: u32 = 0x04 << USB_COUNT6_RX_NUM_BLOCK_Pos;
pub const USB_COUNT6_RX_NUM_BLOCK_3: u32 = 0x08 << USB_COUNT6_RX_NUM_BLOCK_Pos;
pub const USB_COUNT6_RX_NUM_BLOCK_4: u32 = 0x10 << USB_COUNT6_RX_NUM_BLOCK_Pos;
pub const USB_COUNT6_RX_BLSIZE_Pos: u32 = 15;
pub const USB_COUNT6_RX_BLSIZE_Msk: u32 = 0x1 << USB_COUNT6_RX_BLSIZE_Pos;
pub const USB_COUNT6_RX_BLSIZE: u32 = USB_COUNT6_RX_BLSIZE_Msk;
pub const USB_COUNT7_RX_COUNT7_RX_Pos: u32 = 0;
pub const USB_COUNT7_RX_COUNT7_RX_Msk: u32 = 0x3FF << USB_COUNT7_RX_COUNT7_RX_Pos;
pub const USB_COUNT7_RX_COUNT7_RX: u32 = USB_COUNT7_RX_COUNT7_RX_Msk;
pub const USB_COUNT7_RX_NUM_BLOCK_Pos: u32 = 10;
pub const USB_COUNT7_RX_NUM_BLOCK_Msk: u32 = 0x1F << USB_COUNT7_RX_NUM_BLOCK_Pos;
pub const USB_COUNT7_RX_NUM_BLOCK: u32 = USB_COUNT7_RX_NUM_BLOCK_Msk;
pub const USB_COUNT7_RX_NUM_BLOCK_0: u32 = 0x01 << USB_COUNT7_RX_NUM_BLOCK_Pos;
pub const USB_COUNT7_RX_NUM_BLOCK_1: u32 = 0x02 << USB_COUNT7_RX_NUM_BLOCK_Pos;
pub const USB_COUNT7_RX_NUM_BLOCK_2: u32 = 0x04 << USB_COUNT7_RX_NUM_BLOCK_Pos;
pub const USB_COUNT7_RX_NUM_BLOCK_3: u32 = 0x08 << USB_COUNT7_RX_NUM_BLOCK_Pos;
pub const USB_COUNT7_RX_NUM_BLOCK_4: u32 = 0x10 << USB_COUNT7_RX_NUM_BLOCK_Pos;
pub const USB_COUNT7_RX_BLSIZE_Pos: u32 = 15;
pub const USB_COUNT7_RX_BLSIZE_Msk: u32 = 0x1 << USB_COUNT7_RX_BLSIZE_Pos;
pub const USB_COUNT7_RX_BLSIZE: u32 = USB_COUNT7_RX_BLSIZE_Msk;
pub const USB_COUNT0_RX_0_COUNT0_RX_0: u32 = 0x000003FF;
pub const USB_COUNT0_RX_0_NUM_BLOCK_0: u32 = 0x00007C00;
pub const USB_COUNT0_RX_0_NUM_BLOCK_0_0: u32 = 0x00000400;
pub const USB_COUNT0_RX_0_NUM_BLOCK_0_1: u32 = 0x00000800;
pub const USB_COUNT0_RX_0_NUM_BLOCK_0_2: u32 = 0x00001000;
pub const USB_COUNT0_RX_0_NUM_BLOCK_0_3: u32 = 0x00002000;
pub const USB_COUNT0_RX_0_NUM_BLOCK_0_4: u32 = 0x00004000;
pub const USB_COUNT0_RX_0_BLSIZE_0: u32 = 0x00008000;
pub const USB_COUNT0_RX_1_COUNT0_RX_1: u32 = 0x03FF0000;
pub const USB_COUNT0_RX_1_NUM_BLOCK_1: u32 = 0x7C000000;
pub const USB_COUNT0_RX_1_NUM_BLOCK_1_0: u32 = 0x04000000;
pub const USB_COUNT0_RX_1_NUM_BLOCK_1_1: u32 = 0x08000000;
pub const USB_COUNT0_RX_1_NUM_BLOCK_1_2: u32 = 0x10000000;
pub const USB_COUNT0_RX_1_NUM_BLOCK_1_3: u32 = 0x20000000;
pub const USB_COUNT0_RX_1_NUM_BLOCK_1_4: u32 = 0x40000000;
pub const USB_COUNT0_RX_1_BLSIZE_1: u32 = 0x80000000;
pub const USB_COUNT1_RX_0_COUNT1_RX_0: u32 = 0x000003FF;
pub const USB_COUNT1_RX_0_NUM_BLOCK_0: u32 = 0x00007C00;
pub const USB_COUNT1_RX_0_NUM_BLOCK_0_0: u32 = 0x00000400;
pub const USB_COUNT1_RX_0_NUM_BLOCK_0_1: u32 = 0x00000800;
pub const USB_COUNT1_RX_0_NUM_BLOCK_0_2: u32 = 0x00001000;
pub const USB_COUNT1_RX_0_NUM_BLOCK_0_3: u32 = 0x00002000;
pub const USB_COUNT1_RX_0_NUM_BLOCK_0_4: u32 = 0x00004000;
pub const USB_COUNT1_RX_0_BLSIZE_0: u32 = 0x00008000;
pub const USB_COUNT1_RX_1_COUNT1_RX_1: u32 = 0x03FF0000;
pub const USB_COUNT1_RX_1_NUM_BLOCK_1: u32 = 0x7C000000;
pub const USB_COUNT1_RX_1_NUM_BLOCK_1_0: u32 = 0x04000000;
pub const USB_COUNT1_RX_1_NUM_BLOCK_1_1: u32 = 0x08000000;
pub const USB_COUNT1_RX_1_NUM_BLOCK_1_2: u32 = 0x10000000;
pub const USB_COUNT1_RX_1_NUM_BLOCK_1_3: u32 = 0x20000000;
pub const USB_COUNT1_RX_1_NUM_BLOCK_1_4: u32 = 0x40000000;
pub const USB_COUNT1_RX_1_BLSIZE_1: u32 = 0x80000000;
pub const USB_COUNT2_RX_0_COUNT2_RX_0: u32 = 0x000003FF;
pub const USB_COUNT2_RX_0_NUM_BLOCK_0: u32 = 0x00007C00;
pub const USB_COUNT2_RX_0_NUM_BLOCK_0_0: u32 = 0x00000400;
pub const USB_COUNT2_RX_0_NUM_BLOCK_0_1: u32 = 0x00000800;
pub const USB_COUNT2_RX_0_NUM_BLOCK_0_2: u32 = 0x00001000;
pub const USB_COUNT2_RX_0_NUM_BLOCK_0_3: u32 = 0x00002000;
pub const USB_COUNT2_RX_0_NUM_BLOCK_0_4: u32 = 0x00004000;
pub const USB_COUNT2_RX_0_BLSIZE_0: u32 = 0x00008000;
pub const USB_COUNT2_RX_1_COUNT2_RX_1: u32 = 0x03FF0000;
pub const USB_COUNT2_RX_1_NUM_BLOCK_1: u32 = 0x7C000000;
pub const USB_COUNT2_RX_1_NUM_BLOCK_1_0: u32 = 0x04000000;
pub const USB_COUNT2_RX_1_NUM_BLOCK_1_1: u32 = 0x08000000;
pub const USB_COUNT2_RX_1_NUM_BLOCK_1_2: u32 = 0x10000000;
pub const USB_COUNT2_RX_1_NUM_BLOCK_1_3: u32 = 0x20000000;
pub const USB_COUNT2_RX_1_NUM_BLOCK_1_4: u32 = 0x40000000;
pub const USB_COUNT2_RX_1_BLSIZE_1: u32 = 0x80000000;
pub const USB_COUNT3_RX_0_COUNT3_RX_0: u32 = 0x000003FF;
pub const USB_COUNT3_RX_0_NUM_BLOCK_0: u32 = 0x00007C00;
pub const USB_COUNT3_RX_0_NUM_BLOCK_0_0: u32 = 0x00000400;
pub const USB_COUNT3_RX_0_NUM_BLOCK_0_1: u32 = 0x00000800;
pub const USB_COUNT3_RX_0_NUM_BLOCK_0_2: u32 = 0x00001000;
pub const USB_COUNT3_RX_0_NUM_BLOCK_0_3: u32 = 0x00002000;
pub const USB_COUNT3_RX_0_NUM_BLOCK_0_4: u32 = 0x00004000;
pub const USB_COUNT3_RX_0_BLSIZE_0: u32 = 0x00008000;
pub const USB_COUNT3_RX_1_COUNT3_RX_1: u32 = 0x03FF0000;
pub const USB_COUNT3_RX_1_NUM_BLOCK_1: u32 = 0x7C000000;
pub const USB_COUNT3_RX_1_NUM_BLOCK_1_0: u32 = 0x04000000;
pub const USB_COUNT3_RX_1_NUM_BLOCK_1_1: u32 = 0x08000000;
pub const USB_COUNT3_RX_1_NUM_BLOCK_1_2: u32 = 0x10000000;
pub const USB_COUNT3_RX_1_NUM_BLOCK_1_3: u32 = 0x20000000;
pub const USB_COUNT3_RX_1_NUM_BLOCK_1_4: u32 = 0x40000000;
pub const USB_COUNT3_RX_1_BLSIZE_1: u32 = 0x80000000;
pub const USB_COUNT4_RX_0_COUNT4_RX_0: u32 = 0x000003FF;
pub const USB_COUNT4_RX_0_NUM_BLOCK_0: u32 = 0x00007C00;
pub const USB_COUNT4_RX_0_NUM_BLOCK_0_0: u32 = 0x00000400;
pub const USB_COUNT4_RX_0_NUM_BLOCK_0_1: u32 = 0x00000800;
pub const USB_COUNT4_RX_0_NUM_BLOCK_0_2: u32 = 0x00001000;
pub const USB_COUNT4_RX_0_NUM_BLOCK_0_3: u32 = 0x00002000;
pub const USB_COUNT4_RX_0_NUM_BLOCK_0_4: u32 = 0x00004000;
pub const USB_COUNT4_RX_0_BLSIZE_0: u32 = 0x00008000;
pub const USB_COUNT4_RX_1_COUNT4_RX_1: u32 = 0x03FF0000;
pub const USB_COUNT4_RX_1_NUM_BLOCK_1: u32 = 0x7C000000;
pub const USB_COUNT4_RX_1_NUM_BLOCK_1_0: u32 = 0x04000000;
pub const USB_COUNT4_RX_1_NUM_BLOCK_1_1: u32 = 0x08000000;
pub const USB_COUNT4_RX_1_NUM_BLOCK_1_2: u32 = 0x10000000;
pub const USB_COUNT4_RX_1_NUM_BLOCK_1_3: u32 = 0x20000000;
pub const USB_COUNT4_RX_1_NUM_BLOCK_1_4: u32 = 0x40000000;
pub const USB_COUNT4_RX_1_BLSIZE_1: u32 = 0x80000000;
pub const USB_COUNT5_RX_0_COUNT5_RX_0: u32 = 0x000003FF;
pub const USB_COUNT5_RX_0_NUM_BLOCK_0: u32 = 0x00007C00;
pub const USB_COUNT5_RX_0_NUM_BLOCK_0_0: u32 = 0x00000400;
pub const USB_COUNT5_RX_0_NUM_BLOCK_0_1: u32 = 0x00000800;
pub const USB_COUNT5_RX_0_NUM_BLOCK_0_2: u32 = 0x00001000;
pub const USB_COUNT5_RX_0_NUM_BLOCK_0_3: u32 = 0x00002000;
pub const USB_COUNT5_RX_0_NUM_BLOCK_0_4: u32 = 0x00004000;
pub const USB_COUNT5_RX_0_BLSIZE_0: u32 = 0x00008000;
pub const USB_COUNT5_RX_1_COUNT5_RX_1: u32 = 0x03FF0000;
pub const USB_COUNT5_RX_1_NUM_BLOCK_1: u32 = 0x7C000000;
pub const USB_COUNT5_RX_1_NUM_BLOCK_1_0: u32 = 0x04000000;
pub const USB_COUNT5_RX_1_NUM_BLOCK_1_1: u32 = 0x08000000;
pub const USB_COUNT5_RX_1_NUM_BLOCK_1_2: u32 = 0x10000000;
pub const USB_COUNT5_RX_1_NUM_BLOCK_1_3: u32 = 0x20000000;
pub const USB_COUNT5_RX_1_NUM_BLOCK_1_4: u32 = 0x40000000;
pub const USB_COUNT5_RX_1_BLSIZE_1: u32 = 0x80000000;
pub const USB_COUNT6_RX_0_COUNT6_RX_0: u32 = 0x000003FF;
pub const USB_COUNT6_RX_0_NUM_BLOCK_0: u32 = 0x00007C00;
pub const USB_COUNT6_RX_0_NUM_BLOCK_0_0: u32 = 0x00000400;
pub const USB_COUNT6_RX_0_NUM_BLOCK_0_1: u32 = 0x00000800;
pub const USB_COUNT6_RX_0_NUM_BLOCK_0_2: u32 = 0x00001000;
pub const USB_COUNT6_RX_0_NUM_BLOCK_0_3: u32 = 0x00002000;
pub const USB_COUNT6_RX_0_NUM_BLOCK_0_4: u32 = 0x00004000;
pub const USB_COUNT6_RX_0_BLSIZE_0: u32 = 0x00008000;
pub const USB_COUNT6_RX_1_COUNT6_RX_1: u32 = 0x03FF0000;
pub const USB_COUNT6_RX_1_NUM_BLOCK_1: u32 = 0x7C000000;
pub const USB_COUNT6_RX_1_NUM_BLOCK_1_0: u32 = 0x04000000;
pub const USB_COUNT6_RX_1_NUM_BLOCK_1_1: u32 = 0x08000000;
pub const USB_COUNT6_RX_1_NUM_BLOCK_1_2: u32 = 0x10000000;
pub const USB_COUNT6_RX_1_NUM_BLOCK_1_3: u32 = 0x20000000;
pub const USB_COUNT6_RX_1_NUM_BLOCK_1_4: u32 = 0x40000000;
pub const USB_COUNT6_RX_1_BLSIZE_1: u32 = 0x80000000;
pub const USB_COUNT7_RX_0_COUNT7_RX_0: u32 = 0x000003FF;
pub const USB_COUNT7_RX_0_NUM_BLOCK_0: u32 = 0x00007C00;
pub const USB_COUNT7_RX_0_NUM_BLOCK_0_0: u32 = 0x00000400;
pub const USB_COUNT7_RX_0_NUM_BLOCK_0_1: u32 = 0x00000800;
pub const USB_COUNT7_RX_0_NUM_BLOCK_0_2: u32 = 0x00001000;
pub const USB_COUNT7_RX_0_NUM_BLOCK_0_3: u32 = 0x00002000;
pub const USB_COUNT7_RX_0_NUM_BLOCK_0_4: u32 = 0x00004000;
pub const USB_COUNT7_RX_0_BLSIZE_0: u32 = 0x00008000;
pub const USB_COUNT7_RX_1_COUNT7_RX_1: u32 = 0x03FF0000;
pub const USB_COUNT7_RX_1_NUM_BLOCK_1: u32 = 0x7C000000;
pub const USB_COUNT7_RX_1_NUM_BLOCK_1_0: u32 = 0x04000000;
pub const USB_COUNT7_RX_1_NUM_BLOCK_1_1: u32 = 0x08000000;
pub const USB_COUNT7_RX_1_NUM_BLOCK_1_2: u32 = 0x10000000;
pub const USB_COUNT7_RX_1_NUM_BLOCK_1_3: u32 = 0x20000000;
pub const USB_COUNT7_RX_1_NUM_BLOCK_1_4: u32 = 0x40000000;
pub const USB_COUNT7_RX_1_BLSIZE_1: u32 = 0x80000000;
pub const WWDG_CR_T_Pos: u32 = 0;
pub const WWDG_CR_T_Msk: u32 = 0x7F << WWDG_CR_T_Pos;
pub const WWDG_CR_T: u32 = WWDG_CR_T_Msk;
pub const WWDG_CR_T_0: u32 = 0x01 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_1: u32 = 0x02 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_2: u32 = 0x04 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_3: u32 = 0x08 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_4: u32 = 0x10 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_5: u32 = 0x20 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_6: u32 = 0x40 << WWDG_CR_T_Pos;
pub const WWDG_CR_T0: u32 = WWDG_CR_T_0;
pub const WWDG_CR_T1: u32 = WWDG_CR_T_1;
pub const WWDG_CR_T2: u32 = WWDG_CR_T_2;
pub const WWDG_CR_T3: u32 = WWDG_CR_T_3;
pub const WWDG_CR_T4: u32 = WWDG_CR_T_4;
pub const WWDG_CR_T5: u32 = WWDG_CR_T_5;
pub const WWDG_CR_T6: u32 = WWDG_CR_T_6;
pub const WWDG_CR_WDGA_Pos: u32 = 7;
pub const WWDG_CR_WDGA_Msk: u32 = 0x1 << WWDG_CR_WDGA_Pos;
pub const WWDG_CR_WDGA: u32 = WWDG_CR_WDGA_Msk;
pub const WWDG_CFR_W_Pos: u32 = 0;
pub const WWDG_CFR_W_Msk: u32 = 0x7F << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W: u32 = WWDG_CFR_W_Msk;
pub const WWDG_CFR_W_0: u32 = 0x01 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_1: u32 = 0x02 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_2: u32 = 0x04 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_3: u32 = 0x08 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_4: u32 = 0x10 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_5: u32 = 0x20 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_6: u32 = 0x40 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W0: u32 = WWDG_CFR_W_0;
pub const WWDG_CFR_W1: u32 = WWDG_CFR_W_1;
pub const WWDG_CFR_W2: u32 = WWDG_CFR_W_2;
pub const WWDG_CFR_W3: u32 = WWDG_CFR_W_3;
pub const WWDG_CFR_W4: u32 = WWDG_CFR_W_4;
pub const WWDG_CFR_W5: u32 = WWDG_CFR_W_5;
pub const WWDG_CFR_W6: u32 = WWDG_CFR_W_6;
pub const WWDG_CFR_WDGTB_Pos: u32 = 7;
pub const WWDG_CFR_WDGTB_Msk: u32 = 0x3 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_WDGTB: u32 = WWDG_CFR_WDGTB_Msk;
pub const WWDG_CFR_WDGTB_0: u32 = 0x1 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_WDGTB_1: u32 = 0x2 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_WDGTB0: u32 = WWDG_CFR_WDGTB_0;
pub const WWDG_CFR_WDGTB1: u32 = WWDG_CFR_WDGTB_1;
pub const WWDG_CFR_EWI_Pos: u32 = 9;
pub const WWDG_CFR_EWI_Msk: u32 = 0x1 << WWDG_CFR_EWI_Pos;
pub const WWDG_CFR_EWI: u32 = WWDG_CFR_EWI_Msk;
pub const WWDG_SR_EWIF_Pos: u32 = 0;
pub const WWDG_SR_EWIF_Msk: u32 = 0x1 << WWDG_SR_EWIF_Pos;
pub const WWDG_SR_EWIF: u32 = WWDG_SR_EWIF_Msk;
