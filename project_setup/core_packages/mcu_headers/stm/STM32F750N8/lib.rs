#![no_std]
#![allow(non_camel_case_types, non_snake_case, non_upper_case_globals)]
#[repr(i32)]
pub enum IRQn_Type {
    NonMaskableInt_IRQn = -14,
    MemoryManagement_IRQn = -12,
    BusFault_IRQn = -11,
    UsageFault_IRQn = -10,
    SVCall_IRQn = -5,
    DebugMonitor_IRQn = -4,
    PendSV_IRQn = -2,
    SysTick_IRQn = -1,
    WWDG_IRQn = 0,
    PVD_IRQn = 1,
    TAMP_STAMP_IRQn = 2,
    RTC_WKUP_IRQn = 3,
    FLASH_IRQn = 4,
    RCC_IRQn = 5,
    EXTI0_IRQn = 6,
    EXTI1_IRQn = 7,
    EXTI2_IRQn = 8,
    EXTI3_IRQn = 9,
    EXTI4_IRQn = 10,
    DMA1_Stream0_IRQn = 11,
    DMA1_Stream1_IRQn = 12,
    DMA1_Stream2_IRQn = 13,
    DMA1_Stream3_IRQn = 14,
    DMA1_Stream4_IRQn = 15,
    DMA1_Stream5_IRQn = 16,
    DMA1_Stream6_IRQn = 17,
    ADC_IRQn = 18,
    CAN1_TX_IRQn = 19,
    CAN1_RX0_IRQn = 20,
    CAN1_RX1_IRQn = 21,
    CAN1_SCE_IRQn = 22,
    EXTI9_5_IRQn = 23,
    TIM1_BRK_TIM9_IRQn = 24,
    TIM1_UP_TIM10_IRQn = 25,
    TIM1_TRG_COM_TIM11_IRQn = 26,
    TIM1_CC_IRQn = 27,
    TIM2_IRQn = 28,
    TIM3_IRQn = 29,
    TIM4_IRQn = 30,
    I2C1_EV_IRQn = 31,
    I2C1_ER_IRQn = 32,
    I2C2_EV_IRQn = 33,
    I2C2_ER_IRQn = 34,
    SPI1_IRQn = 35,
    SPI2_IRQn = 36,
    USART1_IRQn = 37,
    USART2_IRQn = 38,
    USART3_IRQn = 39,
    EXTI15_10_IRQn = 40,
    RTC_Alarm_IRQn = 41,
    OTG_FS_WKUP_IRQn = 42,
    TIM8_BRK_TIM12_IRQn = 43,
    TIM8_UP_TIM13_IRQn = 44,
    TIM8_TRG_COM_TIM14_IRQn = 45,
    TIM8_CC_IRQn = 46,
    DMA1_Stream7_IRQn = 47,
    FMC_IRQn = 48,
    SDMMC1_IRQn = 49,
    TIM5_IRQn = 50,
    SPI3_IRQn = 51,
    UART4_IRQn = 52,
    UART5_IRQn = 53,
    TIM6_DAC_IRQn = 54,
    TIM7_IRQn = 55,
    DMA2_Stream0_IRQn = 56,
    DMA2_Stream1_IRQn = 57,
    DMA2_Stream2_IRQn = 58,
    DMA2_Stream3_IRQn = 59,
    DMA2_Stream4_IRQn = 60,
    ETH_IRQn = 61,
    ETH_WKUP_IRQn = 62,
    CAN2_TX_IRQn = 63,
    CAN2_RX0_IRQn = 64,
    CAN2_RX1_IRQn = 65,
    CAN2_SCE_IRQn = 66,
    OTG_FS_IRQn = 67,
    DMA2_Stream5_IRQn = 68,
    DMA2_Stream6_IRQn = 69,
    DMA2_Stream7_IRQn = 70,
    USART6_IRQn = 71,
    I2C3_EV_IRQn = 72,
    I2C3_ER_IRQn = 73,
    OTG_HS_EP1_OUT_IRQn = 74,
    OTG_HS_EP1_IN_IRQn = 75,
    OTG_HS_WKUP_IRQn = 76,
    OTG_HS_IRQn = 77,
    DCMI_IRQn = 78,
    CRYP_IRQn = 79,
    HASH_RNG_IRQn = 80,
    FPU_IRQn = 81,
    UART7_IRQn = 82,
    UART8_IRQn = 83,
    SPI4_IRQn = 84,
    SPI5_IRQn = 85,
    SPI6_IRQn = 86,
    SAI1_IRQn = 87,
    LTDC_IRQn = 88,
    LTDC_ER_IRQn = 89,
    DMA2D_IRQn = 90,
    SAI2_IRQn = 91,
    QUADSPI_IRQn = 92,
    LPTIM1_IRQn = 93,
    CEC_IRQn = 94,
    I2C4_EV_IRQn = 95,
    I2C4_ER_IRQn = 96,
    SPDIF_RX_IRQn = 97,
}
#[repr(C)]
pub struct ADC_TypeDef {
    pub SR: u32,
    pub CR1: u32,
    pub CR2: u32,
    pub SMPR1: u32,
    pub SMPR2: u32,
    pub JOFR1: u32,
    pub JOFR2: u32,
    pub JOFR3: u32,
    pub JOFR4: u32,
    pub HTR: u32,
    pub LTR: u32,
    pub SQR1: u32,
    pub SQR2: u32,
    pub SQR3: u32,
    pub JSQR: u32,
    pub JDR1: u32,
    pub JDR2: u32,
    pub JDR3: u32,
    pub JDR4: u32,
    pub DR: u32,
}
#[repr(C)]
pub struct ADC_Common_TypeDef {
    pub CSR: u32,
    pub CCR: u32,
    pub CDR: u32,
}
#[repr(C)]
pub struct CAN_TxMailBox_TypeDef {
    pub TIR: u32,
    pub TDTR: u32,
    pub TDLR: u32,
    pub TDHR: u32,
}
#[repr(C)]
pub struct CAN_FIFOMailBox_TypeDef {
    pub RIR: u32,
    pub RDTR: u32,
    pub RDLR: u32,
    pub RDHR: u32,
}
#[repr(C)]
pub struct CAN_FilterRegister_TypeDef {
    pub FR1: u32,
    pub FR2: u32,
}
#[repr(C)]
pub struct CAN_TypeDef {
    pub MCR: u32,
    pub MSR: u32,
    pub TSR: u32,
    pub RF0R: u32,
    pub RF1R: u32,
    pub IER: u32,
    pub ESR: u32,
    pub BTR: u32,
    pub RESERVED0: [u32; 88],
    pub sTxMailBox: [u32; 3],
    pub sFIFOMailBox: [u32; 2],
    pub RESERVED1: [u32; 12],
    pub FMR: u32,
    pub FM1R: u32,
    pub RESERVED2: u32,
    pub FS1R: u32,
    pub RESERVED3: u32,
    pub FFA1R: u32,
    pub RESERVED4: u32,
    pub FA1R: u32,
    pub RESERVED5: [u32; 8],
    pub sFilterRegister: [u32; 28],
}
#[repr(C)]
pub struct CEC_TypeDef {
    pub CR: u32,
    pub CFGR: u32,
    pub TXDR: u32,
    pub RXDR: u32,
    pub ISR: u32,
    pub IER: u32,
}
#[repr(C)]
pub struct CRC_TypeDef {
    pub DR: u32,
    pub IDR: u32,
    pub RESERVED0: u32,
    pub RESERVED1: u32,
    pub CR: u32,
    pub RESERVED2: u32,
    pub INIT: u32,
    pub POL: u32,
}
#[repr(C)]
pub struct DAC_TypeDef {
    pub CR: u32,
    pub SWTRIGR: u32,
    pub DHR12R1: u32,
    pub DHR12L1: u32,
    pub DHR8R1: u32,
    pub DHR12R2: u32,
    pub DHR12L2: u32,
    pub DHR8R2: u32,
    pub DHR12RD: u32,
    pub DHR12LD: u32,
    pub DHR8RD: u32,
    pub DOR1: u32,
    pub DOR2: u32,
    pub SR: u32,
}
#[repr(C)]
pub struct DBGMCU_TypeDef {
    pub IDCODE: u32,
    pub CR: u32,
    pub APB1FZ: u32,
    pub APB2FZ: u32,
}
#[repr(C)]
pub struct DCMI_TypeDef {
    pub CR: u32,
    pub SR: u32,
    pub RISR: u32,
    pub IER: u32,
    pub MISR: u32,
    pub ICR: u32,
    pub ESCR: u32,
    pub ESUR: u32,
    pub CWSTRTR: u32,
    pub CWSIZER: u32,
    pub DR: u32,
}
#[repr(C)]
pub struct DMA_Stream_TypeDef {
    pub CR: u32,
    pub NDTR: u32,
    pub PAR: u32,
    pub M0AR: u32,
    pub M1AR: u32,
    pub FCR: u32,
}
#[repr(C)]
pub struct DMA_TypeDef {
    pub LISR: u32,
    pub HISR: u32,
    pub LIFCR: u32,
    pub HIFCR: u32,
}
#[repr(C)]
pub struct DMA2D_TypeDef {
    pub CR: u32,
    pub ISR: u32,
    pub IFCR: u32,
    pub FGMAR: u32,
    pub FGOR: u32,
    pub BGMAR: u32,
    pub BGOR: u32,
    pub FGPFCCR: u32,
    pub FGCOLR: u32,
    pub BGPFCCR: u32,
    pub BGCOLR: u32,
    pub FGCMAR: u32,
    pub BGCMAR: u32,
    pub OPFCCR: u32,
    pub OCOLR: u32,
    pub OMAR: u32,
    pub OOR: u32,
    pub NLR: u32,
    pub LWR: u32,
    pub AMTCR: u32,
    pub RESERVED: [u32; 236],
    pub FGCLUT: [u32; 256],
    pub BGCLUT: [u32; 256],
}
#[repr(C)]
pub struct ETH_TypeDef {
    pub MACCR: u32,
    pub MACFFR: u32,
    pub MACHTHR: u32,
    pub MACHTLR: u32,
    pub MACMIIAR: u32,
    pub MACMIIDR: u32,
    pub MACFCR: u32,
    pub MACVLANTR: u32,
    pub RESERVED0: [u32; 2],
    pub MACRWUFFR: u32,
    pub MACPMTCSR: u32,
    pub RESERVED1: u32,
    pub MACDBGR: u32,
    pub MACSR: u32,
    pub MACIMR: u32,
    pub MACA0HR: u32,
    pub MACA0LR: u32,
    pub MACA1HR: u32,
    pub MACA1LR: u32,
    pub MACA2HR: u32,
    pub MACA2LR: u32,
    pub MACA3HR: u32,
    pub MACA3LR: u32,
    pub RESERVED2: [u32; 40],
    pub MMCCR: u32,
    pub MMCRIR: u32,
    pub MMCTIR: u32,
    pub MMCRIMR: u32,
    pub MMCTIMR: u32,
    pub RESERVED3: [u32; 14],
    pub MMCTGFSCCR: u32,
    pub MMCTGFMSCCR: u32,
    pub RESERVED4: [u32; 5],
    pub MMCTGFCR: u32,
    pub RESERVED5: [u32; 10],
    pub MMCRFCECR: u32,
    pub MMCRFAECR: u32,
    pub RESERVED6: [u32; 10],
    pub MMCRGUFCR: u32,
    pub RESERVED7: [u32; 334],
    pub PTPTSCR: u32,
    pub PTPSSIR: u32,
    pub PTPTSHR: u32,
    pub PTPTSLR: u32,
    pub PTPTSHUR: u32,
    pub PTPTSLUR: u32,
    pub PTPTSAR: u32,
    pub PTPTTHR: u32,
    pub PTPTTLR: u32,
    pub RESERVED8: u32,
    pub PTPTSSR: u32,
    pub PTPPPSCR: u32,
    pub RESERVED9: [u32; 564],
    pub DMABMR: u32,
    pub DMATPDR: u32,
    pub DMARPDR: u32,
    pub DMARDLAR: u32,
    pub DMATDLAR: u32,
    pub DMASR: u32,
    pub DMAOMR: u32,
    pub DMAIER: u32,
    pub DMAMFBOCR: u32,
    pub DMARSWTR: u32,
    pub RESERVED10: [u32; 8],
    pub DMACHTDR: u32,
    pub DMACHRDR: u32,
    pub DMACHTBAR: u32,
    pub DMACHRBAR: u32,
}
#[repr(C)]
pub struct EXTI_TypeDef {
    pub IMR: u32,
    pub EMR: u32,
    pub RTSR: u32,
    pub FTSR: u32,
    pub SWIER: u32,
    pub PR: u32,
}
#[repr(C)]
pub struct FLASH_TypeDef {
    pub ACR: u32,
    pub KEYR: u32,
    pub OPTKEYR: u32,
    pub SR: u32,
    pub CR: u32,
    pub OPTCR: u32,
    pub OPTCR1: u32,
}
#[repr(C)]
pub struct FMC_Bank1_TypeDef {
    pub BTCR: [u32; 8],
}
#[repr(C)]
pub struct FMC_Bank1E_TypeDef {
    pub BWTR: [u32; 7],
}
#[repr(C)]
pub struct FMC_Bank3_TypeDef {
    pub PCR: u32,
    pub SR: u32,
    pub PMEM: u32,
    pub PATT: u32,
    pub RESERVED0: u32,
    pub ECCR: u32,
}
#[repr(C)]
pub struct FMC_Bank5_6_TypeDef {
    pub SDCR: [u32; 2],
    pub SDTR: [u32; 2],
    pub SDCMR: u32,
    pub SDRTR: u32,
    pub SDSR: u32,
}
#[repr(C)]
pub struct GPIO_TypeDef {
    pub MODER: u32,
    pub OTYPER: u32,
    pub OSPEEDR: u32,
    pub PUPDR: u32,
    pub IDR: u32,
    pub ODR: u32,
    pub BSRR: u32,
    pub LCKR: u32,
    pub AFR: [u32; 2],
}
#[repr(C)]
pub struct SYSCFG_TypeDef {
    pub MEMRMP: u32,
    pub PMC: u32,
    pub EXTICR: [u32; 4],
    pub RESERVED: [u32; 2],
    pub CMPCR: u32,
}
#[repr(C)]
pub struct I2C_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub OAR1: u32,
    pub OAR2: u32,
    pub TIMINGR: u32,
    pub TIMEOUTR: u32,
    pub ISR: u32,
    pub ICR: u32,
    pub PECR: u32,
    pub RXDR: u32,
    pub TXDR: u32,
}
#[repr(C)]
pub struct IWDG_TypeDef {
    pub KR: u32,
    pub PR: u32,
    pub RLR: u32,
    pub SR: u32,
    pub WINR: u32,
}
#[repr(C)]
pub struct LTDC_TypeDef {
    pub RESERVED0: [u32; 2],
    pub SSCR: u32,
    pub BPCR: u32,
    pub AWCR: u32,
    pub TWCR: u32,
    pub GCR: u32,
    pub RESERVED1: [u32; 2],
    pub SRCR: u32,
    pub RESERVED2: [u32; 1],
    pub BCCR: u32,
    pub RESERVED3: [u32; 1],
    pub IER: u32,
    pub ISR: u32,
    pub ICR: u32,
    pub LIPCR: u32,
    pub CPSR: u32,
    pub CDSR: u32,
}
#[repr(C)]
pub struct LTDC_Layer_TypeDef {
    pub CR: u32,
    pub WHPCR: u32,
    pub WVPCR: u32,
    pub CKCR: u32,
    pub PFCR: u32,
    pub CACR: u32,
    pub DCCR: u32,
    pub BFCR: u32,
    pub RESERVED0: [u32; 2],
    pub CFBAR: u32,
    pub CFBLR: u32,
    pub CFBLNR: u32,
    pub RESERVED1: [u32; 3],
    pub CLUTWR: u32,
}
#[repr(C)]
pub struct PWR_TypeDef {
    pub CR1: u32,
    pub CSR1: u32,
    pub CR2: u32,
    pub CSR2: u32,
}
#[repr(C)]
pub struct RCC_TypeDef {
    pub CR: u32,
    pub PLLCFGR: u32,
    pub CFGR: u32,
    pub CIR: u32,
    pub AHB1RSTR: u32,
    pub AHB2RSTR: u32,
    pub AHB3RSTR: u32,
    pub RESERVED0: u32,
    pub APB1RSTR: u32,
    pub APB2RSTR: u32,
    pub RESERVED1: [u32; 2],
    pub AHB1ENR: u32,
    pub AHB2ENR: u32,
    pub AHB3ENR: u32,
    pub RESERVED2: u32,
    pub APB1ENR: u32,
    pub APB2ENR: u32,
    pub RESERVED3: [u32; 2],
    pub AHB1LPENR: u32,
    pub AHB2LPENR: u32,
    pub AHB3LPENR: u32,
    pub RESERVED4: u32,
    pub APB1LPENR: u32,
    pub APB2LPENR: u32,
    pub RESERVED5: [u32; 2],
    pub BDCR: u32,
    pub CSR: u32,
    pub RESERVED6: [u32; 2],
    pub SSCGR: u32,
    pub PLLI2SCFGR: u32,
    pub PLLSAICFGR: u32,
    pub DCKCFGR1: u32,
    pub DCKCFGR2: u32,
}
#[repr(C)]
pub struct RTC_TypeDef {
    pub TR: u32,
    pub DR: u32,
    pub CR: u32,
    pub ISR: u32,
    pub PRER: u32,
    pub WUTR: u32,
    pub reserved: u32,
    pub ALRMAR: u32,
    pub ALRMBR: u32,
    pub WPR: u32,
    pub SSR: u32,
    pub SHIFTR: u32,
    pub TSTR: u32,
    pub TSDR: u32,
    pub TSSSR: u32,
    pub CALR: u32,
    pub TAMPCR: u32,
    pub ALRMASSR: u32,
    pub ALRMBSSR: u32,
    pub OR: u32,
    pub BKP0R: u32,
    pub BKP1R: u32,
    pub BKP2R: u32,
    pub BKP3R: u32,
    pub BKP4R: u32,
    pub BKP5R: u32,
    pub BKP6R: u32,
    pub BKP7R: u32,
    pub BKP8R: u32,
    pub BKP9R: u32,
    pub BKP10R: u32,
    pub BKP11R: u32,
    pub BKP12R: u32,
    pub BKP13R: u32,
    pub BKP14R: u32,
    pub BKP15R: u32,
    pub BKP16R: u32,
    pub BKP17R: u32,
    pub BKP18R: u32,
    pub BKP19R: u32,
    pub BKP20R: u32,
    pub BKP21R: u32,
    pub BKP22R: u32,
    pub BKP23R: u32,
    pub BKP24R: u32,
    pub BKP25R: u32,
    pub BKP26R: u32,
    pub BKP27R: u32,
    pub BKP28R: u32,
    pub BKP29R: u32,
    pub BKP30R: u32,
    pub BKP31R: u32,
}
#[repr(C)]
pub struct SAI_TypeDef {
    pub GCR: u32,
}
#[repr(C)]
pub struct SAI_Block_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub FRCR: u32,
    pub SLOTR: u32,
    pub IMR: u32,
    pub SR: u32,
    pub CLRFR: u32,
    pub DR: u32,
}
#[repr(C)]
pub struct SPDIFRX_TypeDef {
    pub CR: u32,
    pub IMR: u32,
    pub SR: u32,
    pub IFCR: u32,
    pub DR: u32,
    pub CSR: u32,
    pub DIR: u32,
}
#[repr(C)]
pub struct SDMMC_TypeDef {
    pub POWER: u32,
    pub CLKCR: u32,
    pub ARG: u32,
    pub CMD: u32,
    pub RESPCMD: u32,
    pub RESP1: u32,
    pub RESP2: u32,
    pub RESP3: u32,
    pub RESP4: u32,
    pub DTIMER: u32,
    pub DLEN: u32,
    pub DCTRL: u32,
    pub DCOUNT: u32,
    pub STA: u32,
    pub ICR: u32,
    pub MASK: u32,
    pub RESERVED0: [u32; 2],
    pub FIFOCNT: u32,
    pub RESERVED1: [u32; 13],
    pub FIFO: u32,
}
#[repr(C)]
pub struct SPI_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub SR: u32,
    pub DR: u32,
    pub CRCPR: u32,
    pub RXCRCR: u32,
    pub TXCRCR: u32,
    pub I2SCFGR: u32,
    pub I2SPR: u32,
}
#[repr(C)]
pub struct QUADSPI_TypeDef {
    pub CR: u32,
    pub DCR: u32,
    pub SR: u32,
    pub FCR: u32,
    pub DLR: u32,
    pub CCR: u32,
    pub AR: u32,
    pub ABR: u32,
    pub DR: u32,
    pub PSMKR: u32,
    pub PSMAR: u32,
    pub PIR: u32,
    pub LPTR: u32,
}
#[repr(C)]
pub struct TIM_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub SMCR: u32,
    pub DIER: u32,
    pub SR: u32,
    pub EGR: u32,
    pub CCMR1: u32,
    pub CCMR2: u32,
    pub CCER: u32,
    pub CNT: u32,
    pub PSC: u32,
    pub ARR: u32,
    pub RCR: u32,
    pub CCR1: u32,
    pub CCR2: u32,
    pub CCR3: u32,
    pub CCR4: u32,
    pub BDTR: u32,
    pub DCR: u32,
    pub DMAR: u32,
    pub OR: u32,
    pub CCMR3: u32,
    pub CCR5: u32,
    pub CCR6: u32,
}
#[repr(C)]
pub struct LPTIM_TypeDef {
    pub ISR: u32,
    pub ICR: u32,
    pub IER: u32,
    pub CFGR: u32,
    pub CR: u32,
    pub CMP: u32,
    pub ARR: u32,
    pub CNT: u32,
}
#[repr(C)]
pub struct USART_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub CR3: u32,
    pub BRR: u32,
    pub GTPR: u32,
    pub RTOR: u32,
    pub RQR: u32,
    pub ISR: u32,
    pub ICR: u32,
    pub RDR: u32,
    pub TDR: u32,
}
#[repr(C)]
pub struct WWDG_TypeDef {
    pub CR: u32,
    pub CFR: u32,
    pub SR: u32,
}
#[repr(C)]
pub struct CRYP_TypeDef {
    pub CR: u32,
    pub SR: u32,
    pub DIN: u32,
    pub DOUT: u32,
    pub DMACR: u32,
    pub IMSCR: u32,
    pub RISR: u32,
    pub MISR: u32,
    pub K0LR: u32,
    pub K0RR: u32,
    pub K1LR: u32,
    pub K1RR: u32,
    pub K2LR: u32,
    pub K2RR: u32,
    pub K3LR: u32,
    pub K3RR: u32,
    pub IV0LR: u32,
    pub IV0RR: u32,
    pub IV1LR: u32,
    pub IV1RR: u32,
    pub CSGCMCCM0R: u32,
    pub CSGCMCCM1R: u32,
    pub CSGCMCCM2R: u32,
    pub CSGCMCCM3R: u32,
    pub CSGCMCCM4R: u32,
    pub CSGCMCCM5R: u32,
    pub CSGCMCCM6R: u32,
    pub CSGCMCCM7R: u32,
    pub CSGCM0R: u32,
    pub CSGCM1R: u32,
    pub CSGCM2R: u32,
    pub CSGCM3R: u32,
    pub CSGCM4R: u32,
    pub CSGCM5R: u32,
    pub CSGCM6R: u32,
    pub CSGCM7R: u32,
}
#[repr(C)]
pub struct HASH_TypeDef {
    pub CR: u32,
    pub DIN: u32,
    pub STR: u32,
    pub HR: [u32; 5],
    pub IMR: u32,
    pub SR: u32,
    pub RESERVED: [u32; 52],
    pub CSR: [u32; 54],
}
#[repr(C)]
pub struct HASH_DIGEST_TypeDef {
    pub HR: [u32; 8],
}
#[repr(C)]
pub struct RNG_TypeDef {
    pub CR: u32,
    pub SR: u32,
    pub DR: u32,
}
#[repr(C)]
pub struct USB_OTG_GlobalTypeDef {
    pub GOTGCTL: u32,
    pub GOTGINT: u32,
    pub GAHBCFG: u32,
    pub GUSBCFG: u32,
    pub GRSTCTL: u32,
    pub GINTSTS: u32,
    pub GINTMSK: u32,
    pub GRXSTSR: u32,
    pub GRXSTSP: u32,
    pub GRXFSIZ: u32,
    pub DIEPTXF0_HNPTXFSIZ: u32,
    pub HNPTXSTS: u32,
    pub Reserved30: [u32; 2],
    pub GCCFG: u32,
    pub CID: u32,
    pub Reserved5: [u32; 3],
    pub GHWCFG3: u32,
    pub Reserved6: u32,
    pub GLPMCFG: u32,
    pub Reserved7: u32,
    pub GDFIFOCFG: u32,
    pub Reserved43: [u32; 40],
    pub HPTXFSIZ: u32,
    pub DIEPTXF: [u32; 0x0F],
}
#[repr(C)]
pub struct USB_OTG_DeviceTypeDef {
    pub DCFG: u32,
    pub DCTL: u32,
    pub DSTS: u32,
    pub Reserved0C: u32,
    pub DIEPMSK: u32,
    pub DOEPMSK: u32,
    pub DAINT: u32,
    pub DAINTMSK: u32,
    pub Reserved20: u32,
    pub Reserved9: u32,
    pub DVBUSDIS: u32,
    pub DVBUSPULSE: u32,
    pub DTHRCTL: u32,
    pub DIEPEMPMSK: u32,
    pub DEACHINT: u32,
    pub DEACHMSK: u32,
    pub Reserved40: u32,
    pub DINEP1MSK: u32,
    pub Reserved44: [u32; 15],
    pub DOUTEP1MSK: u32,
}
#[repr(C)]
pub struct USB_OTG_INEndpointTypeDef {
    pub DIEPCTL: u32,
    pub Reserved04: u32,
    pub DIEPINT: u32,
    pub Reserved0C: u32,
    pub DIEPTSIZ: u32,
    pub DIEPDMA: u32,
    pub DTXFSTS: u32,
    pub Reserved18: u32,
}
#[repr(C)]
pub struct USB_OTG_OUTEndpointTypeDef {
    pub DOEPCTL: u32,
    pub Reserved04: u32,
    pub DOEPINT: u32,
    pub Reserved0C: u32,
    pub DOEPTSIZ: u32,
    pub DOEPDMA: u32,
    pub Reserved18: [u32; 2],
}
#[repr(C)]
pub struct USB_OTG_HostTypeDef {
    pub HCFG: u32,
    pub HFIR: u32,
    pub HFNUM: u32,
    pub Reserved40C: u32,
    pub HPTXSTS: u32,
    pub HAINT: u32,
    pub HAINTMSK: u32,
}
#[repr(C)]
pub struct USB_OTG_HostChannelTypeDef {
    pub HCCHAR: u32,
    pub HCSPLT: u32,
    pub HCINT: u32,
    pub HCINTMSK: u32,
    pub HCTSIZ: u32,
    pub HCDMA: u32,
    pub Reserved: [u32; 2],
}
pub const __CM7_REV: u32 = 0x0001;
pub const __MPU_PRESENT: u32 = 1;
pub const __NVIC_PRIO_BITS: u32 = 4;
pub const __Vendor_SysTickConfig: u32 = 0;
pub const __FPU_PRESENT: u32 = 1;
pub const __DCACHE_PRESENT: u32 = 1;
pub const RAMITCM_BASE: u32 = 0x00000000;
pub const FLASHITCM_BASE: u32 = 0x00200000;
pub const FLASHAXI_BASE: u32 = 0x08000000;
pub const RAMDTCM_BASE: u32 = 0x20000000;
pub const PERIPH_BASE: u32 = 0x40000000;
pub const BKPSRAM_BASE: u32 = 0x40024000;
pub const QSPI_BASE: u32 = 0x90000000;
pub const FMC_R_BASE: u32 = 0xA0000000;
pub const QSPI_R_BASE: u32 = 0xA0001000;
pub const SRAM1_BASE: u32 = 0x20010000;
pub const SRAM2_BASE: u32 = 0x2004C000;
pub const FLASH_END: u32 = 0x0800FFFF;
pub const FLASH_OTP_BASE: u32 = 0x1FF0F000;
pub const FLASH_OTP_END: u32 = 0x1FF0F41F;
pub const FLASH_BASE: u32 = FLASHAXI_BASE;
pub const APB1PERIPH_BASE: u32 = PERIPH_BASE;
pub const APB2PERIPH_BASE: u32 = PERIPH_BASE + 0x00010000;
pub const AHB1PERIPH_BASE: u32 = PERIPH_BASE + 0x00020000;
pub const AHB2PERIPH_BASE: u32 = PERIPH_BASE + 0x10000000;
pub const TIM2_BASE: u32 = APB1PERIPH_BASE + 0x0000;
pub const TIM3_BASE: u32 = APB1PERIPH_BASE + 0x0400;
pub const TIM4_BASE: u32 = APB1PERIPH_BASE + 0x0800;
pub const TIM5_BASE: u32 = APB1PERIPH_BASE + 0x0C00;
pub const TIM6_BASE: u32 = APB1PERIPH_BASE + 0x1000;
pub const TIM7_BASE: u32 = APB1PERIPH_BASE + 0x1400;
pub const TIM12_BASE: u32 = APB1PERIPH_BASE + 0x1800;
pub const TIM13_BASE: u32 = APB1PERIPH_BASE + 0x1C00;
pub const TIM14_BASE: u32 = APB1PERIPH_BASE + 0x2000;
pub const LPTIM1_BASE: u32 = APB1PERIPH_BASE + 0x2400;
pub const RTC_BASE: u32 = APB1PERIPH_BASE + 0x2800;
pub const WWDG_BASE: u32 = APB1PERIPH_BASE + 0x2C00;
pub const IWDG_BASE: u32 = APB1PERIPH_BASE + 0x3000;
pub const SPI2_BASE: u32 = APB1PERIPH_BASE + 0x3800;
pub const SPI3_BASE: u32 = APB1PERIPH_BASE + 0x3C00;
pub const SPDIFRX_BASE: u32 = APB1PERIPH_BASE + 0x4000;
pub const USART2_BASE: u32 = APB1PERIPH_BASE + 0x4400;
pub const USART3_BASE: u32 = APB1PERIPH_BASE + 0x4800;
pub const UART4_BASE: u32 = APB1PERIPH_BASE + 0x4C00;
pub const UART5_BASE: u32 = APB1PERIPH_BASE + 0x5000;
pub const I2C1_BASE: u32 = APB1PERIPH_BASE + 0x5400;
pub const I2C2_BASE: u32 = APB1PERIPH_BASE + 0x5800;
pub const I2C3_BASE: u32 = APB1PERIPH_BASE + 0x5C00;
pub const I2C4_BASE: u32 = APB1PERIPH_BASE + 0x6000;
pub const CAN1_BASE: u32 = APB1PERIPH_BASE + 0x6400;
pub const CAN2_BASE: u32 = APB1PERIPH_BASE + 0x6800;
pub const CEC_BASE: u32 = APB1PERIPH_BASE + 0x6C00;
pub const PWR_BASE: u32 = APB1PERIPH_BASE + 0x7000;
pub const DAC_BASE: u32 = APB1PERIPH_BASE + 0x7400;
pub const UART7_BASE: u32 = APB1PERIPH_BASE + 0x7800;
pub const UART8_BASE: u32 = APB1PERIPH_BASE + 0x7C00;
pub const TIM1_BASE: u32 = APB2PERIPH_BASE + 0x0000;
pub const TIM8_BASE: u32 = APB2PERIPH_BASE + 0x0400;
pub const USART1_BASE: u32 = APB2PERIPH_BASE + 0x1000;
pub const USART6_BASE: u32 = APB2PERIPH_BASE + 0x1400;
pub const ADC1_BASE: u32 = APB2PERIPH_BASE + 0x2000;
pub const ADC2_BASE: u32 = APB2PERIPH_BASE + 0x2100;
pub const ADC3_BASE: u32 = APB2PERIPH_BASE + 0x2200;
pub const ADC_BASE: u32 = APB2PERIPH_BASE + 0x2300;
pub const SDMMC1_BASE: u32 = APB2PERIPH_BASE + 0x2C00;
pub const SPI1_BASE: u32 = APB2PERIPH_BASE + 0x3000;
pub const SPI4_BASE: u32 = APB2PERIPH_BASE + 0x3400;
pub const SYSCFG_BASE: u32 = APB2PERIPH_BASE + 0x3800;
pub const EXTI_BASE: u32 = APB2PERIPH_BASE + 0x3C00;
pub const TIM9_BASE: u32 = APB2PERIPH_BASE + 0x4000;
pub const TIM10_BASE: u32 = APB2PERIPH_BASE + 0x4400;
pub const TIM11_BASE: u32 = APB2PERIPH_BASE + 0x4800;
pub const SPI5_BASE: u32 = APB2PERIPH_BASE + 0x5000;
pub const SPI6_BASE: u32 = APB2PERIPH_BASE + 0x5400;
pub const SAI1_BASE: u32 = APB2PERIPH_BASE + 0x5800;
pub const SAI2_BASE: u32 = APB2PERIPH_BASE + 0x5C00;
pub const SAI1_Block_A_BASE: u32 = SAI1_BASE + 0x004;
pub const SAI1_Block_B_BASE: u32 = SAI1_BASE + 0x024;
pub const SAI2_Block_A_BASE: u32 = SAI2_BASE + 0x004;
pub const SAI2_Block_B_BASE: u32 = SAI2_BASE + 0x024;
pub const LTDC_BASE: u32 = APB2PERIPH_BASE + 0x6800;
pub const LTDC_Layer1_BASE: u32 = LTDC_BASE + 0x0084;
pub const LTDC_Layer2_BASE: u32 = LTDC_BASE + 0x0104;
pub const GPIOA_BASE: u32 = AHB1PERIPH_BASE + 0x0000;
pub const GPIOB_BASE: u32 = AHB1PERIPH_BASE + 0x0400;
pub const GPIOC_BASE: u32 = AHB1PERIPH_BASE + 0x0800;
pub const GPIOD_BASE: u32 = AHB1PERIPH_BASE + 0x0C00;
pub const GPIOE_BASE: u32 = AHB1PERIPH_BASE + 0x1000;
pub const GPIOF_BASE: u32 = AHB1PERIPH_BASE + 0x1400;
pub const GPIOG_BASE: u32 = AHB1PERIPH_BASE + 0x1800;
pub const GPIOH_BASE: u32 = AHB1PERIPH_BASE + 0x1C00;
pub const GPIOI_BASE: u32 = AHB1PERIPH_BASE + 0x2000;
pub const GPIOJ_BASE: u32 = AHB1PERIPH_BASE + 0x2400;
pub const GPIOK_BASE: u32 = AHB1PERIPH_BASE + 0x2800;
pub const CRC_BASE: u32 = AHB1PERIPH_BASE + 0x3000;
pub const RCC_BASE: u32 = AHB1PERIPH_BASE + 0x3800;
pub const FLASH_R_BASE: u32 = AHB1PERIPH_BASE + 0x3C00;
pub const UID_BASE: u32 = 0x1FF0F420;
pub const FLASHSIZE_BASE: u32 = 0x1FF0F442;
pub const PACKAGE_BASE: u32 = 0x1FF0F7E0;
pub const PACKAGESIZE_BASE: u32 = PACKAGE_BASE;
pub const DMA1_BASE: u32 = AHB1PERIPH_BASE + 0x6000;
pub const DMA1_Stream0_BASE: u32 = DMA1_BASE + 0x010;
pub const DMA1_Stream1_BASE: u32 = DMA1_BASE + 0x028;
pub const DMA1_Stream2_BASE: u32 = DMA1_BASE + 0x040;
pub const DMA1_Stream3_BASE: u32 = DMA1_BASE + 0x058;
pub const DMA1_Stream4_BASE: u32 = DMA1_BASE + 0x070;
pub const DMA1_Stream5_BASE: u32 = DMA1_BASE + 0x088;
pub const DMA1_Stream6_BASE: u32 = DMA1_BASE + 0x0A0;
pub const DMA1_Stream7_BASE: u32 = DMA1_BASE + 0x0B8;
pub const DMA2_BASE: u32 = AHB1PERIPH_BASE + 0x6400;
pub const DMA2_Stream0_BASE: u32 = DMA2_BASE + 0x010;
pub const DMA2_Stream1_BASE: u32 = DMA2_BASE + 0x028;
pub const DMA2_Stream2_BASE: u32 = DMA2_BASE + 0x040;
pub const DMA2_Stream3_BASE: u32 = DMA2_BASE + 0x058;
pub const DMA2_Stream4_BASE: u32 = DMA2_BASE + 0x070;
pub const DMA2_Stream5_BASE: u32 = DMA2_BASE + 0x088;
pub const DMA2_Stream6_BASE: u32 = DMA2_BASE + 0x0A0;
pub const DMA2_Stream7_BASE: u32 = DMA2_BASE + 0x0B8;
pub const ETH_BASE: u32 = AHB1PERIPH_BASE + 0x8000;
pub const ETH_MAC_BASE: u32 = ETH_BASE;
pub const ETH_MMC_BASE: u32 = ETH_BASE + 0x0100;
pub const ETH_PTP_BASE: u32 = ETH_BASE + 0x0700;
pub const ETH_DMA_BASE: u32 = ETH_BASE + 0x1000;
pub const DMA2D_BASE: u32 = AHB1PERIPH_BASE + 0xB000;
pub const DCMI_BASE: u32 = AHB2PERIPH_BASE + 0x50000;
pub const CRYP_BASE: u32 = AHB2PERIPH_BASE + 0x60000;
pub const HASH_BASE: u32 = AHB2PERIPH_BASE + 0x60400;
pub const HASH_DIGEST_BASE: u32 = AHB2PERIPH_BASE + 0x60710;
pub const RNG_BASE: u32 = AHB2PERIPH_BASE + 0x60800;
pub const FMC_Bank1_R_BASE: u32 = FMC_R_BASE + 0x0000;
pub const FMC_Bank1E_R_BASE: u32 = FMC_R_BASE + 0x0104;
pub const FMC_Bank3_R_BASE: u32 = FMC_R_BASE + 0x0080;
pub const FMC_Bank5_6_R_BASE: u32 = FMC_R_BASE + 0x0140;
pub const DBGMCU_BASE: u32 = 0xE0042000;
pub const USB_OTG_HS_PERIPH_BASE: u32 = 0x40040000;
pub const USB_OTG_FS_PERIPH_BASE: u32 = 0x50000000;
pub const USB_OTG_GLOBAL_BASE: u32 = 0x0000;
pub const USB_OTG_DEVICE_BASE: u32 = 0x0800;
pub const USB_OTG_IN_ENDPOINT_BASE: u32 = 0x0900;
pub const USB_OTG_OUT_ENDPOINT_BASE: u32 = 0x0B00;
pub const USB_OTG_EP_REG_SIZE: u32 = 0x0020;
pub const USB_OTG_HOST_BASE: u32 = 0x0400;
pub const USB_OTG_HOST_PORT_BASE: u32 = 0x0440;
pub const USB_OTG_HOST_CHANNEL_BASE: u32 = 0x0500;
pub const USB_OTG_HOST_CHANNEL_SIZE: u32 = 0x0020;
pub const USB_OTG_PCGCCTL_BASE: u32 = 0x0E00;
pub const USB_OTG_FIFO_BASE: u32 = 0x1000;
pub const USB_OTG_FIFO_SIZE: u32 = 0x1000;
pub const LSI_STARTUP_TIME: u32 = 40;
pub const ADC_SR_AWD_Pos: u32 = 0;
pub const ADC_SR_AWD_Msk: u32 = 0x1 << ADC_SR_AWD_Pos;
pub const ADC_SR_AWD: u32 = ADC_SR_AWD_Msk;
pub const ADC_SR_EOC_Pos: u32 = 1;
pub const ADC_SR_EOC_Msk: u32 = 0x1 << ADC_SR_EOC_Pos;
pub const ADC_SR_EOC: u32 = ADC_SR_EOC_Msk;
pub const ADC_SR_JEOC_Pos: u32 = 2;
pub const ADC_SR_JEOC_Msk: u32 = 0x1 << ADC_SR_JEOC_Pos;
pub const ADC_SR_JEOC: u32 = ADC_SR_JEOC_Msk;
pub const ADC_SR_JSTRT_Pos: u32 = 3;
pub const ADC_SR_JSTRT_Msk: u32 = 0x1 << ADC_SR_JSTRT_Pos;
pub const ADC_SR_JSTRT: u32 = ADC_SR_JSTRT_Msk;
pub const ADC_SR_STRT_Pos: u32 = 4;
pub const ADC_SR_STRT_Msk: u32 = 0x1 << ADC_SR_STRT_Pos;
pub const ADC_SR_STRT: u32 = ADC_SR_STRT_Msk;
pub const ADC_SR_OVR_Pos: u32 = 5;
pub const ADC_SR_OVR_Msk: u32 = 0x1 << ADC_SR_OVR_Pos;
pub const ADC_SR_OVR: u32 = ADC_SR_OVR_Msk;
pub const ADC_CR1_AWDCH_Pos: u32 = 0;
pub const ADC_CR1_AWDCH_Msk: u32 = 0x1F << ADC_CR1_AWDCH_Pos;
pub const ADC_CR1_AWDCH: u32 = ADC_CR1_AWDCH_Msk;
pub const ADC_CR1_AWDCH_0: u32 = 0x01 << ADC_CR1_AWDCH_Pos;
pub const ADC_CR1_AWDCH_1: u32 = 0x02 << ADC_CR1_AWDCH_Pos;
pub const ADC_CR1_AWDCH_2: u32 = 0x04 << ADC_CR1_AWDCH_Pos;
pub const ADC_CR1_AWDCH_3: u32 = 0x08 << ADC_CR1_AWDCH_Pos;
pub const ADC_CR1_AWDCH_4: u32 = 0x10 << ADC_CR1_AWDCH_Pos;
pub const ADC_CR1_EOCIE_Pos: u32 = 5;
pub const ADC_CR1_EOCIE_Msk: u32 = 0x1 << ADC_CR1_EOCIE_Pos;
pub const ADC_CR1_EOCIE: u32 = ADC_CR1_EOCIE_Msk;
pub const ADC_CR1_AWDIE_Pos: u32 = 6;
pub const ADC_CR1_AWDIE_Msk: u32 = 0x1 << ADC_CR1_AWDIE_Pos;
pub const ADC_CR1_AWDIE: u32 = ADC_CR1_AWDIE_Msk;
pub const ADC_CR1_JEOCIE_Pos: u32 = 7;
pub const ADC_CR1_JEOCIE_Msk: u32 = 0x1 << ADC_CR1_JEOCIE_Pos;
pub const ADC_CR1_JEOCIE: u32 = ADC_CR1_JEOCIE_Msk;
pub const ADC_CR1_SCAN_Pos: u32 = 8;
pub const ADC_CR1_SCAN_Msk: u32 = 0x1 << ADC_CR1_SCAN_Pos;
pub const ADC_CR1_SCAN: u32 = ADC_CR1_SCAN_Msk;
pub const ADC_CR1_AWDSGL_Pos: u32 = 9;
pub const ADC_CR1_AWDSGL_Msk: u32 = 0x1 << ADC_CR1_AWDSGL_Pos;
pub const ADC_CR1_AWDSGL: u32 = ADC_CR1_AWDSGL_Msk;
pub const ADC_CR1_JAUTO_Pos: u32 = 10;
pub const ADC_CR1_JAUTO_Msk: u32 = 0x1 << ADC_CR1_JAUTO_Pos;
pub const ADC_CR1_JAUTO: u32 = ADC_CR1_JAUTO_Msk;
pub const ADC_CR1_DISCEN_Pos: u32 = 11;
pub const ADC_CR1_DISCEN_Msk: u32 = 0x1 << ADC_CR1_DISCEN_Pos;
pub const ADC_CR1_DISCEN: u32 = ADC_CR1_DISCEN_Msk;
pub const ADC_CR1_JDISCEN_Pos: u32 = 12;
pub const ADC_CR1_JDISCEN_Msk: u32 = 0x1 << ADC_CR1_JDISCEN_Pos;
pub const ADC_CR1_JDISCEN: u32 = ADC_CR1_JDISCEN_Msk;
pub const ADC_CR1_DISCNUM_Pos: u32 = 13;
pub const ADC_CR1_DISCNUM_Msk: u32 = 0x7 << ADC_CR1_DISCNUM_Pos;
pub const ADC_CR1_DISCNUM: u32 = ADC_CR1_DISCNUM_Msk;
pub const ADC_CR1_DISCNUM_0: u32 = 0x1 << ADC_CR1_DISCNUM_Pos;
pub const ADC_CR1_DISCNUM_1: u32 = 0x2 << ADC_CR1_DISCNUM_Pos;
pub const ADC_CR1_DISCNUM_2: u32 = 0x4 << ADC_CR1_DISCNUM_Pos;
pub const ADC_CR1_JAWDEN_Pos: u32 = 22;
pub const ADC_CR1_JAWDEN_Msk: u32 = 0x1 << ADC_CR1_JAWDEN_Pos;
pub const ADC_CR1_JAWDEN: u32 = ADC_CR1_JAWDEN_Msk;
pub const ADC_CR1_AWDEN_Pos: u32 = 23;
pub const ADC_CR1_AWDEN_Msk: u32 = 0x1 << ADC_CR1_AWDEN_Pos;
pub const ADC_CR1_AWDEN: u32 = ADC_CR1_AWDEN_Msk;
pub const ADC_CR1_RES_Pos: u32 = 24;
pub const ADC_CR1_RES_Msk: u32 = 0x3 << ADC_CR1_RES_Pos;
pub const ADC_CR1_RES: u32 = ADC_CR1_RES_Msk;
pub const ADC_CR1_RES_0: u32 = 0x1 << ADC_CR1_RES_Pos;
pub const ADC_CR1_RES_1: u32 = 0x2 << ADC_CR1_RES_Pos;
pub const ADC_CR1_OVRIE_Pos: u32 = 26;
pub const ADC_CR1_OVRIE_Msk: u32 = 0x1 << ADC_CR1_OVRIE_Pos;
pub const ADC_CR1_OVRIE: u32 = ADC_CR1_OVRIE_Msk;
pub const ADC_CR2_ADON_Pos: u32 = 0;
pub const ADC_CR2_ADON_Msk: u32 = 0x1 << ADC_CR2_ADON_Pos;
pub const ADC_CR2_ADON: u32 = ADC_CR2_ADON_Msk;
pub const ADC_CR2_CONT_Pos: u32 = 1;
pub const ADC_CR2_CONT_Msk: u32 = 0x1 << ADC_CR2_CONT_Pos;
pub const ADC_CR2_CONT: u32 = ADC_CR2_CONT_Msk;
pub const ADC_CR2_DMA_Pos: u32 = 8;
pub const ADC_CR2_DMA_Msk: u32 = 0x1 << ADC_CR2_DMA_Pos;
pub const ADC_CR2_DMA: u32 = ADC_CR2_DMA_Msk;
pub const ADC_CR2_DDS_Pos: u32 = 9;
pub const ADC_CR2_DDS_Msk: u32 = 0x1 << ADC_CR2_DDS_Pos;
pub const ADC_CR2_DDS: u32 = ADC_CR2_DDS_Msk;
pub const ADC_CR2_EOCS_Pos: u32 = 10;
pub const ADC_CR2_EOCS_Msk: u32 = 0x1 << ADC_CR2_EOCS_Pos;
pub const ADC_CR2_EOCS: u32 = ADC_CR2_EOCS_Msk;
pub const ADC_CR2_ALIGN_Pos: u32 = 11;
pub const ADC_CR2_ALIGN_Msk: u32 = 0x1 << ADC_CR2_ALIGN_Pos;
pub const ADC_CR2_ALIGN: u32 = ADC_CR2_ALIGN_Msk;
pub const ADC_CR2_JEXTSEL_Pos: u32 = 16;
pub const ADC_CR2_JEXTSEL_Msk: u32 = 0xF << ADC_CR2_JEXTSEL_Pos;
pub const ADC_CR2_JEXTSEL: u32 = ADC_CR2_JEXTSEL_Msk;
pub const ADC_CR2_JEXTSEL_0: u32 = 0x1 << ADC_CR2_JEXTSEL_Pos;
pub const ADC_CR2_JEXTSEL_1: u32 = 0x2 << ADC_CR2_JEXTSEL_Pos;
pub const ADC_CR2_JEXTSEL_2: u32 = 0x4 << ADC_CR2_JEXTSEL_Pos;
pub const ADC_CR2_JEXTSEL_3: u32 = 0x8 << ADC_CR2_JEXTSEL_Pos;
pub const ADC_CR2_JEXTEN_Pos: u32 = 20;
pub const ADC_CR2_JEXTEN_Msk: u32 = 0x3 << ADC_CR2_JEXTEN_Pos;
pub const ADC_CR2_JEXTEN: u32 = ADC_CR2_JEXTEN_Msk;
pub const ADC_CR2_JEXTEN_0: u32 = 0x1 << ADC_CR2_JEXTEN_Pos;
pub const ADC_CR2_JEXTEN_1: u32 = 0x2 << ADC_CR2_JEXTEN_Pos;
pub const ADC_CR2_JSWSTART_Pos: u32 = 22;
pub const ADC_CR2_JSWSTART_Msk: u32 = 0x1 << ADC_CR2_JSWSTART_Pos;
pub const ADC_CR2_JSWSTART: u32 = ADC_CR2_JSWSTART_Msk;
pub const ADC_CR2_EXTSEL_Pos: u32 = 24;
pub const ADC_CR2_EXTSEL_Msk: u32 = 0xF << ADC_CR2_EXTSEL_Pos;
pub const ADC_CR2_EXTSEL: u32 = ADC_CR2_EXTSEL_Msk;
pub const ADC_CR2_EXTSEL_0: u32 = 0x1 << ADC_CR2_EXTSEL_Pos;
pub const ADC_CR2_EXTSEL_1: u32 = 0x2 << ADC_CR2_EXTSEL_Pos;
pub const ADC_CR2_EXTSEL_2: u32 = 0x4 << ADC_CR2_EXTSEL_Pos;
pub const ADC_CR2_EXTSEL_3: u32 = 0x8 << ADC_CR2_EXTSEL_Pos;
pub const ADC_CR2_EXTEN_Pos: u32 = 28;
pub const ADC_CR2_EXTEN_Msk: u32 = 0x3 << ADC_CR2_EXTEN_Pos;
pub const ADC_CR2_EXTEN: u32 = ADC_CR2_EXTEN_Msk;
pub const ADC_CR2_EXTEN_0: u32 = 0x1 << ADC_CR2_EXTEN_Pos;
pub const ADC_CR2_EXTEN_1: u32 = 0x2 << ADC_CR2_EXTEN_Pos;
pub const ADC_CR2_SWSTART_Pos: u32 = 30;
pub const ADC_CR2_SWSTART_Msk: u32 = 0x1 << ADC_CR2_SWSTART_Pos;
pub const ADC_CR2_SWSTART: u32 = ADC_CR2_SWSTART_Msk;
pub const ADC_SMPR1_SMP10_Pos: u32 = 0;
pub const ADC_SMPR1_SMP10_Msk: u32 = 0x7 << ADC_SMPR1_SMP10_Pos;
pub const ADC_SMPR1_SMP10: u32 = ADC_SMPR1_SMP10_Msk;
pub const ADC_SMPR1_SMP10_0: u32 = 0x1 << ADC_SMPR1_SMP10_Pos;
pub const ADC_SMPR1_SMP10_1: u32 = 0x2 << ADC_SMPR1_SMP10_Pos;
pub const ADC_SMPR1_SMP10_2: u32 = 0x4 << ADC_SMPR1_SMP10_Pos;
pub const ADC_SMPR1_SMP11_Pos: u32 = 3;
pub const ADC_SMPR1_SMP11_Msk: u32 = 0x7 << ADC_SMPR1_SMP11_Pos;
pub const ADC_SMPR1_SMP11: u32 = ADC_SMPR1_SMP11_Msk;
pub const ADC_SMPR1_SMP11_0: u32 = 0x1 << ADC_SMPR1_SMP11_Pos;
pub const ADC_SMPR1_SMP11_1: u32 = 0x2 << ADC_SMPR1_SMP11_Pos;
pub const ADC_SMPR1_SMP11_2: u32 = 0x4 << ADC_SMPR1_SMP11_Pos;
pub const ADC_SMPR1_SMP12_Pos: u32 = 6;
pub const ADC_SMPR1_SMP12_Msk: u32 = 0x7 << ADC_SMPR1_SMP12_Pos;
pub const ADC_SMPR1_SMP12: u32 = ADC_SMPR1_SMP12_Msk;
pub const ADC_SMPR1_SMP12_0: u32 = 0x1 << ADC_SMPR1_SMP12_Pos;
pub const ADC_SMPR1_SMP12_1: u32 = 0x2 << ADC_SMPR1_SMP12_Pos;
pub const ADC_SMPR1_SMP12_2: u32 = 0x4 << ADC_SMPR1_SMP12_Pos;
pub const ADC_SMPR1_SMP13_Pos: u32 = 9;
pub const ADC_SMPR1_SMP13_Msk: u32 = 0x7 << ADC_SMPR1_SMP13_Pos;
pub const ADC_SMPR1_SMP13: u32 = ADC_SMPR1_SMP13_Msk;
pub const ADC_SMPR1_SMP13_0: u32 = 0x1 << ADC_SMPR1_SMP13_Pos;
pub const ADC_SMPR1_SMP13_1: u32 = 0x2 << ADC_SMPR1_SMP13_Pos;
pub const ADC_SMPR1_SMP13_2: u32 = 0x4 << ADC_SMPR1_SMP13_Pos;
pub const ADC_SMPR1_SMP14_Pos: u32 = 12;
pub const ADC_SMPR1_SMP14_Msk: u32 = 0x7 << ADC_SMPR1_SMP14_Pos;
pub const ADC_SMPR1_SMP14: u32 = ADC_SMPR1_SMP14_Msk;
pub const ADC_SMPR1_SMP14_0: u32 = 0x1 << ADC_SMPR1_SMP14_Pos;
pub const ADC_SMPR1_SMP14_1: u32 = 0x2 << ADC_SMPR1_SMP14_Pos;
pub const ADC_SMPR1_SMP14_2: u32 = 0x4 << ADC_SMPR1_SMP14_Pos;
pub const ADC_SMPR1_SMP15_Pos: u32 = 15;
pub const ADC_SMPR1_SMP15_Msk: u32 = 0x7 << ADC_SMPR1_SMP15_Pos;
pub const ADC_SMPR1_SMP15: u32 = ADC_SMPR1_SMP15_Msk;
pub const ADC_SMPR1_SMP15_0: u32 = 0x1 << ADC_SMPR1_SMP15_Pos;
pub const ADC_SMPR1_SMP15_1: u32 = 0x2 << ADC_SMPR1_SMP15_Pos;
pub const ADC_SMPR1_SMP15_2: u32 = 0x4 << ADC_SMPR1_SMP15_Pos;
pub const ADC_SMPR1_SMP16_Pos: u32 = 18;
pub const ADC_SMPR1_SMP16_Msk: u32 = 0x7 << ADC_SMPR1_SMP16_Pos;
pub const ADC_SMPR1_SMP16: u32 = ADC_SMPR1_SMP16_Msk;
pub const ADC_SMPR1_SMP16_0: u32 = 0x1 << ADC_SMPR1_SMP16_Pos;
pub const ADC_SMPR1_SMP16_1: u32 = 0x2 << ADC_SMPR1_SMP16_Pos;
pub const ADC_SMPR1_SMP16_2: u32 = 0x4 << ADC_SMPR1_SMP16_Pos;
pub const ADC_SMPR1_SMP17_Pos: u32 = 21;
pub const ADC_SMPR1_SMP17_Msk: u32 = 0x7 << ADC_SMPR1_SMP17_Pos;
pub const ADC_SMPR1_SMP17: u32 = ADC_SMPR1_SMP17_Msk;
pub const ADC_SMPR1_SMP17_0: u32 = 0x1 << ADC_SMPR1_SMP17_Pos;
pub const ADC_SMPR1_SMP17_1: u32 = 0x2 << ADC_SMPR1_SMP17_Pos;
pub const ADC_SMPR1_SMP17_2: u32 = 0x4 << ADC_SMPR1_SMP17_Pos;
pub const ADC_SMPR1_SMP18_Pos: u32 = 24;
pub const ADC_SMPR1_SMP18_Msk: u32 = 0x7 << ADC_SMPR1_SMP18_Pos;
pub const ADC_SMPR1_SMP18: u32 = ADC_SMPR1_SMP18_Msk;
pub const ADC_SMPR1_SMP18_0: u32 = 0x1 << ADC_SMPR1_SMP18_Pos;
pub const ADC_SMPR1_SMP18_1: u32 = 0x2 << ADC_SMPR1_SMP18_Pos;
pub const ADC_SMPR1_SMP18_2: u32 = 0x4 << ADC_SMPR1_SMP18_Pos;
pub const ADC_SMPR2_SMP0_Pos: u32 = 0;
pub const ADC_SMPR2_SMP0_Msk: u32 = 0x7 << ADC_SMPR2_SMP0_Pos;
pub const ADC_SMPR2_SMP0: u32 = ADC_SMPR2_SMP0_Msk;
pub const ADC_SMPR2_SMP0_0: u32 = 0x1 << ADC_SMPR2_SMP0_Pos;
pub const ADC_SMPR2_SMP0_1: u32 = 0x2 << ADC_SMPR2_SMP0_Pos;
pub const ADC_SMPR2_SMP0_2: u32 = 0x4 << ADC_SMPR2_SMP0_Pos;
pub const ADC_SMPR2_SMP1_Pos: u32 = 3;
pub const ADC_SMPR2_SMP1_Msk: u32 = 0x7 << ADC_SMPR2_SMP1_Pos;
pub const ADC_SMPR2_SMP1: u32 = ADC_SMPR2_SMP1_Msk;
pub const ADC_SMPR2_SMP1_0: u32 = 0x1 << ADC_SMPR2_SMP1_Pos;
pub const ADC_SMPR2_SMP1_1: u32 = 0x2 << ADC_SMPR2_SMP1_Pos;
pub const ADC_SMPR2_SMP1_2: u32 = 0x4 << ADC_SMPR2_SMP1_Pos;
pub const ADC_SMPR2_SMP2_Pos: u32 = 6;
pub const ADC_SMPR2_SMP2_Msk: u32 = 0x7 << ADC_SMPR2_SMP2_Pos;
pub const ADC_SMPR2_SMP2: u32 = ADC_SMPR2_SMP2_Msk;
pub const ADC_SMPR2_SMP2_0: u32 = 0x1 << ADC_SMPR2_SMP2_Pos;
pub const ADC_SMPR2_SMP2_1: u32 = 0x2 << ADC_SMPR2_SMP2_Pos;
pub const ADC_SMPR2_SMP2_2: u32 = 0x4 << ADC_SMPR2_SMP2_Pos;
pub const ADC_SMPR2_SMP3_Pos: u32 = 9;
pub const ADC_SMPR2_SMP3_Msk: u32 = 0x7 << ADC_SMPR2_SMP3_Pos;
pub const ADC_SMPR2_SMP3: u32 = ADC_SMPR2_SMP3_Msk;
pub const ADC_SMPR2_SMP3_0: u32 = 0x1 << ADC_SMPR2_SMP3_Pos;
pub const ADC_SMPR2_SMP3_1: u32 = 0x2 << ADC_SMPR2_SMP3_Pos;
pub const ADC_SMPR2_SMP3_2: u32 = 0x4 << ADC_SMPR2_SMP3_Pos;
pub const ADC_SMPR2_SMP4_Pos: u32 = 12;
pub const ADC_SMPR2_SMP4_Msk: u32 = 0x7 << ADC_SMPR2_SMP4_Pos;
pub const ADC_SMPR2_SMP4: u32 = ADC_SMPR2_SMP4_Msk;
pub const ADC_SMPR2_SMP4_0: u32 = 0x1 << ADC_SMPR2_SMP4_Pos;
pub const ADC_SMPR2_SMP4_1: u32 = 0x2 << ADC_SMPR2_SMP4_Pos;
pub const ADC_SMPR2_SMP4_2: u32 = 0x4 << ADC_SMPR2_SMP4_Pos;
pub const ADC_SMPR2_SMP5_Pos: u32 = 15;
pub const ADC_SMPR2_SMP5_Msk: u32 = 0x7 << ADC_SMPR2_SMP5_Pos;
pub const ADC_SMPR2_SMP5: u32 = ADC_SMPR2_SMP5_Msk;
pub const ADC_SMPR2_SMP5_0: u32 = 0x1 << ADC_SMPR2_SMP5_Pos;
pub const ADC_SMPR2_SMP5_1: u32 = 0x2 << ADC_SMPR2_SMP5_Pos;
pub const ADC_SMPR2_SMP5_2: u32 = 0x4 << ADC_SMPR2_SMP5_Pos;
pub const ADC_SMPR2_SMP6_Pos: u32 = 18;
pub const ADC_SMPR2_SMP6_Msk: u32 = 0x7 << ADC_SMPR2_SMP6_Pos;
pub const ADC_SMPR2_SMP6: u32 = ADC_SMPR2_SMP6_Msk;
pub const ADC_SMPR2_SMP6_0: u32 = 0x1 << ADC_SMPR2_SMP6_Pos;
pub const ADC_SMPR2_SMP6_1: u32 = 0x2 << ADC_SMPR2_SMP6_Pos;
pub const ADC_SMPR2_SMP6_2: u32 = 0x4 << ADC_SMPR2_SMP6_Pos;
pub const ADC_SMPR2_SMP7_Pos: u32 = 21;
pub const ADC_SMPR2_SMP7_Msk: u32 = 0x7 << ADC_SMPR2_SMP7_Pos;
pub const ADC_SMPR2_SMP7: u32 = ADC_SMPR2_SMP7_Msk;
pub const ADC_SMPR2_SMP7_0: u32 = 0x1 << ADC_SMPR2_SMP7_Pos;
pub const ADC_SMPR2_SMP7_1: u32 = 0x2 << ADC_SMPR2_SMP7_Pos;
pub const ADC_SMPR2_SMP7_2: u32 = 0x4 << ADC_SMPR2_SMP7_Pos;
pub const ADC_SMPR2_SMP8_Pos: u32 = 24;
pub const ADC_SMPR2_SMP8_Msk: u32 = 0x7 << ADC_SMPR2_SMP8_Pos;
pub const ADC_SMPR2_SMP8: u32 = ADC_SMPR2_SMP8_Msk;
pub const ADC_SMPR2_SMP8_0: u32 = 0x1 << ADC_SMPR2_SMP8_Pos;
pub const ADC_SMPR2_SMP8_1: u32 = 0x2 << ADC_SMPR2_SMP8_Pos;
pub const ADC_SMPR2_SMP8_2: u32 = 0x4 << ADC_SMPR2_SMP8_Pos;
pub const ADC_SMPR2_SMP9_Pos: u32 = 27;
pub const ADC_SMPR2_SMP9_Msk: u32 = 0x7 << ADC_SMPR2_SMP9_Pos;
pub const ADC_SMPR2_SMP9: u32 = ADC_SMPR2_SMP9_Msk;
pub const ADC_SMPR2_SMP9_0: u32 = 0x1 << ADC_SMPR2_SMP9_Pos;
pub const ADC_SMPR2_SMP9_1: u32 = 0x2 << ADC_SMPR2_SMP9_Pos;
pub const ADC_SMPR2_SMP9_2: u32 = 0x4 << ADC_SMPR2_SMP9_Pos;
pub const ADC_JOFR1_JOFFSET1_Pos: u32 = 0;
pub const ADC_JOFR1_JOFFSET1_Msk: u32 = 0xFFF << ADC_JOFR1_JOFFSET1_Pos;
pub const ADC_JOFR1_JOFFSET1: u32 = ADC_JOFR1_JOFFSET1_Msk;
pub const ADC_JOFR2_JOFFSET2_Pos: u32 = 0;
pub const ADC_JOFR2_JOFFSET2_Msk: u32 = 0xFFF << ADC_JOFR2_JOFFSET2_Pos;
pub const ADC_JOFR2_JOFFSET2: u32 = ADC_JOFR2_JOFFSET2_Msk;
pub const ADC_JOFR3_JOFFSET3_Pos: u32 = 0;
pub const ADC_JOFR3_JOFFSET3_Msk: u32 = 0xFFF << ADC_JOFR3_JOFFSET3_Pos;
pub const ADC_JOFR3_JOFFSET3: u32 = ADC_JOFR3_JOFFSET3_Msk;
pub const ADC_JOFR4_JOFFSET4_Pos: u32 = 0;
pub const ADC_JOFR4_JOFFSET4_Msk: u32 = 0xFFF << ADC_JOFR4_JOFFSET4_Pos;
pub const ADC_JOFR4_JOFFSET4: u32 = ADC_JOFR4_JOFFSET4_Msk;
pub const ADC_HTR_HT_Pos: u32 = 0;
pub const ADC_HTR_HT_Msk: u32 = 0xFFF << ADC_HTR_HT_Pos;
pub const ADC_HTR_HT: u32 = ADC_HTR_HT_Msk;
pub const ADC_LTR_LT_Pos: u32 = 0;
pub const ADC_LTR_LT_Msk: u32 = 0xFFF << ADC_LTR_LT_Pos;
pub const ADC_LTR_LT: u32 = ADC_LTR_LT_Msk;
pub const ADC_SQR1_SQ13_Pos: u32 = 0;
pub const ADC_SQR1_SQ13_Msk: u32 = 0x1F << ADC_SQR1_SQ13_Pos;
pub const ADC_SQR1_SQ13: u32 = ADC_SQR1_SQ13_Msk;
pub const ADC_SQR1_SQ13_0: u32 = 0x01 << ADC_SQR1_SQ13_Pos;
pub const ADC_SQR1_SQ13_1: u32 = 0x02 << ADC_SQR1_SQ13_Pos;
pub const ADC_SQR1_SQ13_2: u32 = 0x04 << ADC_SQR1_SQ13_Pos;
pub const ADC_SQR1_SQ13_3: u32 = 0x08 << ADC_SQR1_SQ13_Pos;
pub const ADC_SQR1_SQ13_4: u32 = 0x10 << ADC_SQR1_SQ13_Pos;
pub const ADC_SQR1_SQ14_Pos: u32 = 5;
pub const ADC_SQR1_SQ14_Msk: u32 = 0x1F << ADC_SQR1_SQ14_Pos;
pub const ADC_SQR1_SQ14: u32 = ADC_SQR1_SQ14_Msk;
pub const ADC_SQR1_SQ14_0: u32 = 0x01 << ADC_SQR1_SQ14_Pos;
pub const ADC_SQR1_SQ14_1: u32 = 0x02 << ADC_SQR1_SQ14_Pos;
pub const ADC_SQR1_SQ14_2: u32 = 0x04 << ADC_SQR1_SQ14_Pos;
pub const ADC_SQR1_SQ14_3: u32 = 0x08 << ADC_SQR1_SQ14_Pos;
pub const ADC_SQR1_SQ14_4: u32 = 0x10 << ADC_SQR1_SQ14_Pos;
pub const ADC_SQR1_SQ15_Pos: u32 = 10;
pub const ADC_SQR1_SQ15_Msk: u32 = 0x1F << ADC_SQR1_SQ15_Pos;
pub const ADC_SQR1_SQ15: u32 = ADC_SQR1_SQ15_Msk;
pub const ADC_SQR1_SQ15_0: u32 = 0x01 << ADC_SQR1_SQ15_Pos;
pub const ADC_SQR1_SQ15_1: u32 = 0x02 << ADC_SQR1_SQ15_Pos;
pub const ADC_SQR1_SQ15_2: u32 = 0x04 << ADC_SQR1_SQ15_Pos;
pub const ADC_SQR1_SQ15_3: u32 = 0x08 << ADC_SQR1_SQ15_Pos;
pub const ADC_SQR1_SQ15_4: u32 = 0x10 << ADC_SQR1_SQ15_Pos;
pub const ADC_SQR1_SQ16_Pos: u32 = 15;
pub const ADC_SQR1_SQ16_Msk: u32 = 0x1F << ADC_SQR1_SQ16_Pos;
pub const ADC_SQR1_SQ16: u32 = ADC_SQR1_SQ16_Msk;
pub const ADC_SQR1_SQ16_0: u32 = 0x01 << ADC_SQR1_SQ16_Pos;
pub const ADC_SQR1_SQ16_1: u32 = 0x02 << ADC_SQR1_SQ16_Pos;
pub const ADC_SQR1_SQ16_2: u32 = 0x04 << ADC_SQR1_SQ16_Pos;
pub const ADC_SQR1_SQ16_3: u32 = 0x08 << ADC_SQR1_SQ16_Pos;
pub const ADC_SQR1_SQ16_4: u32 = 0x10 << ADC_SQR1_SQ16_Pos;
pub const ADC_SQR1_L_Pos: u32 = 20;
pub const ADC_SQR1_L_Msk: u32 = 0xF << ADC_SQR1_L_Pos;
pub const ADC_SQR1_L: u32 = ADC_SQR1_L_Msk;
pub const ADC_SQR1_L_0: u32 = 0x1 << ADC_SQR1_L_Pos;
pub const ADC_SQR1_L_1: u32 = 0x2 << ADC_SQR1_L_Pos;
pub const ADC_SQR1_L_2: u32 = 0x4 << ADC_SQR1_L_Pos;
pub const ADC_SQR1_L_3: u32 = 0x8 << ADC_SQR1_L_Pos;
pub const ADC_SQR2_SQ7_Pos: u32 = 0;
pub const ADC_SQR2_SQ7_Msk: u32 = 0x1F << ADC_SQR2_SQ7_Pos;
pub const ADC_SQR2_SQ7: u32 = ADC_SQR2_SQ7_Msk;
pub const ADC_SQR2_SQ7_0: u32 = 0x01 << ADC_SQR2_SQ7_Pos;
pub const ADC_SQR2_SQ7_1: u32 = 0x02 << ADC_SQR2_SQ7_Pos;
pub const ADC_SQR2_SQ7_2: u32 = 0x04 << ADC_SQR2_SQ7_Pos;
pub const ADC_SQR2_SQ7_3: u32 = 0x08 << ADC_SQR2_SQ7_Pos;
pub const ADC_SQR2_SQ7_4: u32 = 0x10 << ADC_SQR2_SQ7_Pos;
pub const ADC_SQR2_SQ8_Pos: u32 = 5;
pub const ADC_SQR2_SQ8_Msk: u32 = 0x1F << ADC_SQR2_SQ8_Pos;
pub const ADC_SQR2_SQ8: u32 = ADC_SQR2_SQ8_Msk;
pub const ADC_SQR2_SQ8_0: u32 = 0x01 << ADC_SQR2_SQ8_Pos;
pub const ADC_SQR2_SQ8_1: u32 = 0x02 << ADC_SQR2_SQ8_Pos;
pub const ADC_SQR2_SQ8_2: u32 = 0x04 << ADC_SQR2_SQ8_Pos;
pub const ADC_SQR2_SQ8_3: u32 = 0x08 << ADC_SQR2_SQ8_Pos;
pub const ADC_SQR2_SQ8_4: u32 = 0x10 << ADC_SQR2_SQ8_Pos;
pub const ADC_SQR2_SQ9_Pos: u32 = 10;
pub const ADC_SQR2_SQ9_Msk: u32 = 0x1F << ADC_SQR2_SQ9_Pos;
pub const ADC_SQR2_SQ9: u32 = ADC_SQR2_SQ9_Msk;
pub const ADC_SQR2_SQ9_0: u32 = 0x01 << ADC_SQR2_SQ9_Pos;
pub const ADC_SQR2_SQ9_1: u32 = 0x02 << ADC_SQR2_SQ9_Pos;
pub const ADC_SQR2_SQ9_2: u32 = 0x04 << ADC_SQR2_SQ9_Pos;
pub const ADC_SQR2_SQ9_3: u32 = 0x08 << ADC_SQR2_SQ9_Pos;
pub const ADC_SQR2_SQ9_4: u32 = 0x10 << ADC_SQR2_SQ9_Pos;
pub const ADC_SQR2_SQ10_Pos: u32 = 15;
pub const ADC_SQR2_SQ10_Msk: u32 = 0x1F << ADC_SQR2_SQ10_Pos;
pub const ADC_SQR2_SQ10: u32 = ADC_SQR2_SQ10_Msk;
pub const ADC_SQR2_SQ10_0: u32 = 0x01 << ADC_SQR2_SQ10_Pos;
pub const ADC_SQR2_SQ10_1: u32 = 0x02 << ADC_SQR2_SQ10_Pos;
pub const ADC_SQR2_SQ10_2: u32 = 0x04 << ADC_SQR2_SQ10_Pos;
pub const ADC_SQR2_SQ10_3: u32 = 0x08 << ADC_SQR2_SQ10_Pos;
pub const ADC_SQR2_SQ10_4: u32 = 0x10 << ADC_SQR2_SQ10_Pos;
pub const ADC_SQR2_SQ11_Pos: u32 = 20;
pub const ADC_SQR2_SQ11_Msk: u32 = 0x1F << ADC_SQR2_SQ11_Pos;
pub const ADC_SQR2_SQ11: u32 = ADC_SQR2_SQ11_Msk;
pub const ADC_SQR2_SQ11_0: u32 = 0x01 << ADC_SQR2_SQ11_Pos;
pub const ADC_SQR2_SQ11_1: u32 = 0x02 << ADC_SQR2_SQ11_Pos;
pub const ADC_SQR2_SQ11_2: u32 = 0x04 << ADC_SQR2_SQ11_Pos;
pub const ADC_SQR2_SQ11_3: u32 = 0x08 << ADC_SQR2_SQ11_Pos;
pub const ADC_SQR2_SQ11_4: u32 = 0x10 << ADC_SQR2_SQ11_Pos;
pub const ADC_SQR2_SQ12_Pos: u32 = 25;
pub const ADC_SQR2_SQ12_Msk: u32 = 0x1F << ADC_SQR2_SQ12_Pos;
pub const ADC_SQR2_SQ12: u32 = ADC_SQR2_SQ12_Msk;
pub const ADC_SQR2_SQ12_0: u32 = 0x01 << ADC_SQR2_SQ12_Pos;
pub const ADC_SQR2_SQ12_1: u32 = 0x02 << ADC_SQR2_SQ12_Pos;
pub const ADC_SQR2_SQ12_2: u32 = 0x04 << ADC_SQR2_SQ12_Pos;
pub const ADC_SQR2_SQ12_3: u32 = 0x08 << ADC_SQR2_SQ12_Pos;
pub const ADC_SQR2_SQ12_4: u32 = 0x10 << ADC_SQR2_SQ12_Pos;
pub const ADC_SQR3_SQ1_Pos: u32 = 0;
pub const ADC_SQR3_SQ1_Msk: u32 = 0x1F << ADC_SQR3_SQ1_Pos;
pub const ADC_SQR3_SQ1: u32 = ADC_SQR3_SQ1_Msk;
pub const ADC_SQR3_SQ1_0: u32 = 0x01 << ADC_SQR3_SQ1_Pos;
pub const ADC_SQR3_SQ1_1: u32 = 0x02 << ADC_SQR3_SQ1_Pos;
pub const ADC_SQR3_SQ1_2: u32 = 0x04 << ADC_SQR3_SQ1_Pos;
pub const ADC_SQR3_SQ1_3: u32 = 0x08 << ADC_SQR3_SQ1_Pos;
pub const ADC_SQR3_SQ1_4: u32 = 0x10 << ADC_SQR3_SQ1_Pos;
pub const ADC_SQR3_SQ2_Pos: u32 = 5;
pub const ADC_SQR3_SQ2_Msk: u32 = 0x1F << ADC_SQR3_SQ2_Pos;
pub const ADC_SQR3_SQ2: u32 = ADC_SQR3_SQ2_Msk;
pub const ADC_SQR3_SQ2_0: u32 = 0x01 << ADC_SQR3_SQ2_Pos;
pub const ADC_SQR3_SQ2_1: u32 = 0x02 << ADC_SQR3_SQ2_Pos;
pub const ADC_SQR3_SQ2_2: u32 = 0x04 << ADC_SQR3_SQ2_Pos;
pub const ADC_SQR3_SQ2_3: u32 = 0x08 << ADC_SQR3_SQ2_Pos;
pub const ADC_SQR3_SQ2_4: u32 = 0x10 << ADC_SQR3_SQ2_Pos;
pub const ADC_SQR3_SQ3_Pos: u32 = 10;
pub const ADC_SQR3_SQ3_Msk: u32 = 0x1F << ADC_SQR3_SQ3_Pos;
pub const ADC_SQR3_SQ3: u32 = ADC_SQR3_SQ3_Msk;
pub const ADC_SQR3_SQ3_0: u32 = 0x01 << ADC_SQR3_SQ3_Pos;
pub const ADC_SQR3_SQ3_1: u32 = 0x02 << ADC_SQR3_SQ3_Pos;
pub const ADC_SQR3_SQ3_2: u32 = 0x04 << ADC_SQR3_SQ3_Pos;
pub const ADC_SQR3_SQ3_3: u32 = 0x08 << ADC_SQR3_SQ3_Pos;
pub const ADC_SQR3_SQ3_4: u32 = 0x10 << ADC_SQR3_SQ3_Pos;
pub const ADC_SQR3_SQ4_Pos: u32 = 15;
pub const ADC_SQR3_SQ4_Msk: u32 = 0x1F << ADC_SQR3_SQ4_Pos;
pub const ADC_SQR3_SQ4: u32 = ADC_SQR3_SQ4_Msk;
pub const ADC_SQR3_SQ4_0: u32 = 0x01 << ADC_SQR3_SQ4_Pos;
pub const ADC_SQR3_SQ4_1: u32 = 0x02 << ADC_SQR3_SQ4_Pos;
pub const ADC_SQR3_SQ4_2: u32 = 0x04 << ADC_SQR3_SQ4_Pos;
pub const ADC_SQR3_SQ4_3: u32 = 0x08 << ADC_SQR3_SQ4_Pos;
pub const ADC_SQR3_SQ4_4: u32 = 0x10 << ADC_SQR3_SQ4_Pos;
pub const ADC_SQR3_SQ5_Pos: u32 = 20;
pub const ADC_SQR3_SQ5_Msk: u32 = 0x1F << ADC_SQR3_SQ5_Pos;
pub const ADC_SQR3_SQ5: u32 = ADC_SQR3_SQ5_Msk;
pub const ADC_SQR3_SQ5_0: u32 = 0x01 << ADC_SQR3_SQ5_Pos;
pub const ADC_SQR3_SQ5_1: u32 = 0x02 << ADC_SQR3_SQ5_Pos;
pub const ADC_SQR3_SQ5_2: u32 = 0x04 << ADC_SQR3_SQ5_Pos;
pub const ADC_SQR3_SQ5_3: u32 = 0x08 << ADC_SQR3_SQ5_Pos;
pub const ADC_SQR3_SQ5_4: u32 = 0x10 << ADC_SQR3_SQ5_Pos;
pub const ADC_SQR3_SQ6_Pos: u32 = 25;
pub const ADC_SQR3_SQ6_Msk: u32 = 0x1F << ADC_SQR3_SQ6_Pos;
pub const ADC_SQR3_SQ6: u32 = ADC_SQR3_SQ6_Msk;
pub const ADC_SQR3_SQ6_0: u32 = 0x01 << ADC_SQR3_SQ6_Pos;
pub const ADC_SQR3_SQ6_1: u32 = 0x02 << ADC_SQR3_SQ6_Pos;
pub const ADC_SQR3_SQ6_2: u32 = 0x04 << ADC_SQR3_SQ6_Pos;
pub const ADC_SQR3_SQ6_3: u32 = 0x08 << ADC_SQR3_SQ6_Pos;
pub const ADC_SQR3_SQ6_4: u32 = 0x10 << ADC_SQR3_SQ6_Pos;
pub const ADC_JSQR_JSQ1_Pos: u32 = 0;
pub const ADC_JSQR_JSQ1_Msk: u32 = 0x1F << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1: u32 = ADC_JSQR_JSQ1_Msk;
pub const ADC_JSQR_JSQ1_0: u32 = 0x01 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1_1: u32 = 0x02 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1_2: u32 = 0x04 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1_3: u32 = 0x08 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1_4: u32 = 0x10 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ2_Pos: u32 = 5;
pub const ADC_JSQR_JSQ2_Msk: u32 = 0x1F << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2: u32 = ADC_JSQR_JSQ2_Msk;
pub const ADC_JSQR_JSQ2_0: u32 = 0x01 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2_1: u32 = 0x02 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2_2: u32 = 0x04 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2_3: u32 = 0x08 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2_4: u32 = 0x10 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ3_Pos: u32 = 10;
pub const ADC_JSQR_JSQ3_Msk: u32 = 0x1F << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3: u32 = ADC_JSQR_JSQ3_Msk;
pub const ADC_JSQR_JSQ3_0: u32 = 0x01 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3_1: u32 = 0x02 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3_2: u32 = 0x04 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3_3: u32 = 0x08 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3_4: u32 = 0x10 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ4_Pos: u32 = 15;
pub const ADC_JSQR_JSQ4_Msk: u32 = 0x1F << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4: u32 = ADC_JSQR_JSQ4_Msk;
pub const ADC_JSQR_JSQ4_0: u32 = 0x01 << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4_1: u32 = 0x02 << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4_2: u32 = 0x04 << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4_3: u32 = 0x08 << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4_4: u32 = 0x10 << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JL_Pos: u32 = 20;
pub const ADC_JSQR_JL_Msk: u32 = 0x3 << ADC_JSQR_JL_Pos;
pub const ADC_JSQR_JL: u32 = ADC_JSQR_JL_Msk;
pub const ADC_JSQR_JL_0: u32 = 0x1 << ADC_JSQR_JL_Pos;
pub const ADC_JSQR_JL_1: u32 = 0x2 << ADC_JSQR_JL_Pos;
pub const ADC_JDR1_JDATA: u32 = 0xFFFF;
pub const ADC_JDR2_JDATA: u32 = 0xFFFF;
pub const ADC_JDR3_JDATA: u32 = 0xFFFF;
pub const ADC_JDR4_JDATA: u32 = 0xFFFF;
pub const ADC_DR_DATA_Pos: u32 = 0;
pub const ADC_DR_DATA_Msk: u32 = 0xFFFF << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA: u32 = ADC_DR_DATA_Msk;
pub const ADC_DR_ADC2DATA_Pos: u32 = 16;
pub const ADC_DR_ADC2DATA_Msk: u32 = 0xFFFF << ADC_DR_ADC2DATA_Pos;
pub const ADC_DR_ADC2DATA: u32 = ADC_DR_ADC2DATA_Msk;
pub const ADC_CSR_AWD1_Pos: u32 = 0;
pub const ADC_CSR_AWD1_Msk: u32 = 0x1 << ADC_CSR_AWD1_Pos;
pub const ADC_CSR_AWD1: u32 = ADC_CSR_AWD1_Msk;
pub const ADC_CSR_EOC1_Pos: u32 = 1;
pub const ADC_CSR_EOC1_Msk: u32 = 0x1 << ADC_CSR_EOC1_Pos;
pub const ADC_CSR_EOC1: u32 = ADC_CSR_EOC1_Msk;
pub const ADC_CSR_JEOC1_Pos: u32 = 2;
pub const ADC_CSR_JEOC1_Msk: u32 = 0x1 << ADC_CSR_JEOC1_Pos;
pub const ADC_CSR_JEOC1: u32 = ADC_CSR_JEOC1_Msk;
pub const ADC_CSR_JSTRT1_Pos: u32 = 3;
pub const ADC_CSR_JSTRT1_Msk: u32 = 0x1 << ADC_CSR_JSTRT1_Pos;
pub const ADC_CSR_JSTRT1: u32 = ADC_CSR_JSTRT1_Msk;
pub const ADC_CSR_STRT1_Pos: u32 = 4;
pub const ADC_CSR_STRT1_Msk: u32 = 0x1 << ADC_CSR_STRT1_Pos;
pub const ADC_CSR_STRT1: u32 = ADC_CSR_STRT1_Msk;
pub const ADC_CSR_OVR1_Pos: u32 = 5;
pub const ADC_CSR_OVR1_Msk: u32 = 0x1 << ADC_CSR_OVR1_Pos;
pub const ADC_CSR_OVR1: u32 = ADC_CSR_OVR1_Msk;
pub const ADC_CSR_AWD2_Pos: u32 = 8;
pub const ADC_CSR_AWD2_Msk: u32 = 0x1 << ADC_CSR_AWD2_Pos;
pub const ADC_CSR_AWD2: u32 = ADC_CSR_AWD2_Msk;
pub const ADC_CSR_EOC2_Pos: u32 = 9;
pub const ADC_CSR_EOC2_Msk: u32 = 0x1 << ADC_CSR_EOC2_Pos;
pub const ADC_CSR_EOC2: u32 = ADC_CSR_EOC2_Msk;
pub const ADC_CSR_JEOC2_Pos: u32 = 10;
pub const ADC_CSR_JEOC2_Msk: u32 = 0x1 << ADC_CSR_JEOC2_Pos;
pub const ADC_CSR_JEOC2: u32 = ADC_CSR_JEOC2_Msk;
pub const ADC_CSR_JSTRT2_Pos: u32 = 11;
pub const ADC_CSR_JSTRT2_Msk: u32 = 0x1 << ADC_CSR_JSTRT2_Pos;
pub const ADC_CSR_JSTRT2: u32 = ADC_CSR_JSTRT2_Msk;
pub const ADC_CSR_STRT2_Pos: u32 = 12;
pub const ADC_CSR_STRT2_Msk: u32 = 0x1 << ADC_CSR_STRT2_Pos;
pub const ADC_CSR_STRT2: u32 = ADC_CSR_STRT2_Msk;
pub const ADC_CSR_OVR2_Pos: u32 = 13;
pub const ADC_CSR_OVR2_Msk: u32 = 0x1 << ADC_CSR_OVR2_Pos;
pub const ADC_CSR_OVR2: u32 = ADC_CSR_OVR2_Msk;
pub const ADC_CSR_AWD3_Pos: u32 = 16;
pub const ADC_CSR_AWD3_Msk: u32 = 0x1 << ADC_CSR_AWD3_Pos;
pub const ADC_CSR_AWD3: u32 = ADC_CSR_AWD3_Msk;
pub const ADC_CSR_EOC3_Pos: u32 = 17;
pub const ADC_CSR_EOC3_Msk: u32 = 0x1 << ADC_CSR_EOC3_Pos;
pub const ADC_CSR_EOC3: u32 = ADC_CSR_EOC3_Msk;
pub const ADC_CSR_JEOC3_Pos: u32 = 18;
pub const ADC_CSR_JEOC3_Msk: u32 = 0x1 << ADC_CSR_JEOC3_Pos;
pub const ADC_CSR_JEOC3: u32 = ADC_CSR_JEOC3_Msk;
pub const ADC_CSR_JSTRT3_Pos: u32 = 19;
pub const ADC_CSR_JSTRT3_Msk: u32 = 0x1 << ADC_CSR_JSTRT3_Pos;
pub const ADC_CSR_JSTRT3: u32 = ADC_CSR_JSTRT3_Msk;
pub const ADC_CSR_STRT3_Pos: u32 = 20;
pub const ADC_CSR_STRT3_Msk: u32 = 0x1 << ADC_CSR_STRT3_Pos;
pub const ADC_CSR_STRT3: u32 = ADC_CSR_STRT3_Msk;
pub const ADC_CSR_OVR3_Pos: u32 = 21;
pub const ADC_CSR_OVR3_Msk: u32 = 0x1 << ADC_CSR_OVR3_Pos;
pub const ADC_CSR_OVR3: u32 = ADC_CSR_OVR3_Msk;
pub const ADC_CSR_DOVR1: u32 = ADC_CSR_OVR1;
pub const ADC_CSR_DOVR2: u32 = ADC_CSR_OVR2;
pub const ADC_CSR_DOVR3: u32 = ADC_CSR_OVR3;
pub const ADC_CCR_MULTI_Pos: u32 = 0;
pub const ADC_CCR_MULTI_Msk: u32 = 0x1F << ADC_CCR_MULTI_Pos;
pub const ADC_CCR_MULTI: u32 = ADC_CCR_MULTI_Msk;
pub const ADC_CCR_MULTI_0: u32 = 0x01 << ADC_CCR_MULTI_Pos;
pub const ADC_CCR_MULTI_1: u32 = 0x02 << ADC_CCR_MULTI_Pos;
pub const ADC_CCR_MULTI_2: u32 = 0x04 << ADC_CCR_MULTI_Pos;
pub const ADC_CCR_MULTI_3: u32 = 0x08 << ADC_CCR_MULTI_Pos;
pub const ADC_CCR_MULTI_4: u32 = 0x10 << ADC_CCR_MULTI_Pos;
pub const ADC_CCR_DELAY_Pos: u32 = 8;
pub const ADC_CCR_DELAY_Msk: u32 = 0xF << ADC_CCR_DELAY_Pos;
pub const ADC_CCR_DELAY: u32 = ADC_CCR_DELAY_Msk;
pub const ADC_CCR_DELAY_0: u32 = 0x1 << ADC_CCR_DELAY_Pos;
pub const ADC_CCR_DELAY_1: u32 = 0x2 << ADC_CCR_DELAY_Pos;
pub const ADC_CCR_DELAY_2: u32 = 0x4 << ADC_CCR_DELAY_Pos;
pub const ADC_CCR_DELAY_3: u32 = 0x8 << ADC_CCR_DELAY_Pos;
pub const ADC_CCR_DDS_Pos: u32 = 13;
pub const ADC_CCR_DDS_Msk: u32 = 0x1 << ADC_CCR_DDS_Pos;
pub const ADC_CCR_DDS: u32 = ADC_CCR_DDS_Msk;
pub const ADC_CCR_DMA_Pos: u32 = 14;
pub const ADC_CCR_DMA_Msk: u32 = 0x3 << ADC_CCR_DMA_Pos;
pub const ADC_CCR_DMA: u32 = ADC_CCR_DMA_Msk;
pub const ADC_CCR_DMA_0: u32 = 0x1 << ADC_CCR_DMA_Pos;
pub const ADC_CCR_DMA_1: u32 = 0x2 << ADC_CCR_DMA_Pos;
pub const ADC_CCR_ADCPRE_Pos: u32 = 16;
pub const ADC_CCR_ADCPRE_Msk: u32 = 0x3 << ADC_CCR_ADCPRE_Pos;
pub const ADC_CCR_ADCPRE: u32 = ADC_CCR_ADCPRE_Msk;
pub const ADC_CCR_ADCPRE_0: u32 = 0x1 << ADC_CCR_ADCPRE_Pos;
pub const ADC_CCR_ADCPRE_1: u32 = 0x2 << ADC_CCR_ADCPRE_Pos;
pub const ADC_CCR_VBATE_Pos: u32 = 22;
pub const ADC_CCR_VBATE_Msk: u32 = 0x1 << ADC_CCR_VBATE_Pos;
pub const ADC_CCR_VBATE: u32 = ADC_CCR_VBATE_Msk;
pub const ADC_CCR_TSVREFE_Pos: u32 = 23;
pub const ADC_CCR_TSVREFE_Msk: u32 = 0x1 << ADC_CCR_TSVREFE_Pos;
pub const ADC_CCR_TSVREFE: u32 = ADC_CCR_TSVREFE_Msk;
pub const ADC_CDR_DATA1_Pos: u32 = 0;
pub const ADC_CDR_DATA1_Msk: u32 = 0xFFFF << ADC_CDR_DATA1_Pos;
pub const ADC_CDR_DATA1: u32 = ADC_CDR_DATA1_Msk;
pub const ADC_CDR_DATA2_Pos: u32 = 16;
pub const ADC_CDR_DATA2_Msk: u32 = 0xFFFF << ADC_CDR_DATA2_Pos;
pub const ADC_CDR_DATA2: u32 = ADC_CDR_DATA2_Msk;
pub const ADC_CDR_RDATA_MST: u32 = ADC_CDR_DATA1;
pub const ADC_CDR_RDATA_SLV: u32 = ADC_CDR_DATA2;
pub const CAN_MCR_INRQ_Pos: u32 = 0;
pub const CAN_MCR_INRQ_Msk: u32 = 0x1 << CAN_MCR_INRQ_Pos;
pub const CAN_MCR_INRQ: u32 = CAN_MCR_INRQ_Msk;
pub const CAN_MCR_SLEEP_Pos: u32 = 1;
pub const CAN_MCR_SLEEP_Msk: u32 = 0x1 << CAN_MCR_SLEEP_Pos;
pub const CAN_MCR_SLEEP: u32 = CAN_MCR_SLEEP_Msk;
pub const CAN_MCR_TXFP_Pos: u32 = 2;
pub const CAN_MCR_TXFP_Msk: u32 = 0x1 << CAN_MCR_TXFP_Pos;
pub const CAN_MCR_TXFP: u32 = CAN_MCR_TXFP_Msk;
pub const CAN_MCR_RFLM_Pos: u32 = 3;
pub const CAN_MCR_RFLM_Msk: u32 = 0x1 << CAN_MCR_RFLM_Pos;
pub const CAN_MCR_RFLM: u32 = CAN_MCR_RFLM_Msk;
pub const CAN_MCR_NART_Pos: u32 = 4;
pub const CAN_MCR_NART_Msk: u32 = 0x1 << CAN_MCR_NART_Pos;
pub const CAN_MCR_NART: u32 = CAN_MCR_NART_Msk;
pub const CAN_MCR_AWUM_Pos: u32 = 5;
pub const CAN_MCR_AWUM_Msk: u32 = 0x1 << CAN_MCR_AWUM_Pos;
pub const CAN_MCR_AWUM: u32 = CAN_MCR_AWUM_Msk;
pub const CAN_MCR_ABOM_Pos: u32 = 6;
pub const CAN_MCR_ABOM_Msk: u32 = 0x1 << CAN_MCR_ABOM_Pos;
pub const CAN_MCR_ABOM: u32 = CAN_MCR_ABOM_Msk;
pub const CAN_MCR_TTCM_Pos: u32 = 7;
pub const CAN_MCR_TTCM_Msk: u32 = 0x1 << CAN_MCR_TTCM_Pos;
pub const CAN_MCR_TTCM: u32 = CAN_MCR_TTCM_Msk;
pub const CAN_MCR_RESET_Pos: u32 = 15;
pub const CAN_MCR_RESET_Msk: u32 = 0x1 << CAN_MCR_RESET_Pos;
pub const CAN_MCR_RESET: u32 = CAN_MCR_RESET_Msk;
pub const CAN_MSR_INAK_Pos: u32 = 0;
pub const CAN_MSR_INAK_Msk: u32 = 0x1 << CAN_MSR_INAK_Pos;
pub const CAN_MSR_INAK: u32 = CAN_MSR_INAK_Msk;
pub const CAN_MSR_SLAK_Pos: u32 = 1;
pub const CAN_MSR_SLAK_Msk: u32 = 0x1 << CAN_MSR_SLAK_Pos;
pub const CAN_MSR_SLAK: u32 = CAN_MSR_SLAK_Msk;
pub const CAN_MSR_ERRI_Pos: u32 = 2;
pub const CAN_MSR_ERRI_Msk: u32 = 0x1 << CAN_MSR_ERRI_Pos;
pub const CAN_MSR_ERRI: u32 = CAN_MSR_ERRI_Msk;
pub const CAN_MSR_WKUI_Pos: u32 = 3;
pub const CAN_MSR_WKUI_Msk: u32 = 0x1 << CAN_MSR_WKUI_Pos;
pub const CAN_MSR_WKUI: u32 = CAN_MSR_WKUI_Msk;
pub const CAN_MSR_SLAKI_Pos: u32 = 4;
pub const CAN_MSR_SLAKI_Msk: u32 = 0x1 << CAN_MSR_SLAKI_Pos;
pub const CAN_MSR_SLAKI: u32 = CAN_MSR_SLAKI_Msk;
pub const CAN_MSR_TXM_Pos: u32 = 8;
pub const CAN_MSR_TXM_Msk: u32 = 0x1 << CAN_MSR_TXM_Pos;
pub const CAN_MSR_TXM: u32 = CAN_MSR_TXM_Msk;
pub const CAN_MSR_RXM_Pos: u32 = 9;
pub const CAN_MSR_RXM_Msk: u32 = 0x1 << CAN_MSR_RXM_Pos;
pub const CAN_MSR_RXM: u32 = CAN_MSR_RXM_Msk;
pub const CAN_MSR_SAMP_Pos: u32 = 10;
pub const CAN_MSR_SAMP_Msk: u32 = 0x1 << CAN_MSR_SAMP_Pos;
pub const CAN_MSR_SAMP: u32 = CAN_MSR_SAMP_Msk;
pub const CAN_MSR_RX_Pos: u32 = 11;
pub const CAN_MSR_RX_Msk: u32 = 0x1 << CAN_MSR_RX_Pos;
pub const CAN_MSR_RX: u32 = CAN_MSR_RX_Msk;
pub const CAN_TSR_RQCP0_Pos: u32 = 0;
pub const CAN_TSR_RQCP0_Msk: u32 = 0x1 << CAN_TSR_RQCP0_Pos;
pub const CAN_TSR_RQCP0: u32 = CAN_TSR_RQCP0_Msk;
pub const CAN_TSR_TXOK0_Pos: u32 = 1;
pub const CAN_TSR_TXOK0_Msk: u32 = 0x1 << CAN_TSR_TXOK0_Pos;
pub const CAN_TSR_TXOK0: u32 = CAN_TSR_TXOK0_Msk;
pub const CAN_TSR_ALST0_Pos: u32 = 2;
pub const CAN_TSR_ALST0_Msk: u32 = 0x1 << CAN_TSR_ALST0_Pos;
pub const CAN_TSR_ALST0: u32 = CAN_TSR_ALST0_Msk;
pub const CAN_TSR_TERR0_Pos: u32 = 3;
pub const CAN_TSR_TERR0_Msk: u32 = 0x1 << CAN_TSR_TERR0_Pos;
pub const CAN_TSR_TERR0: u32 = CAN_TSR_TERR0_Msk;
pub const CAN_TSR_ABRQ0_Pos: u32 = 7;
pub const CAN_TSR_ABRQ0_Msk: u32 = 0x1 << CAN_TSR_ABRQ0_Pos;
pub const CAN_TSR_ABRQ0: u32 = CAN_TSR_ABRQ0_Msk;
pub const CAN_TSR_RQCP1_Pos: u32 = 8;
pub const CAN_TSR_RQCP1_Msk: u32 = 0x1 << CAN_TSR_RQCP1_Pos;
pub const CAN_TSR_RQCP1: u32 = CAN_TSR_RQCP1_Msk;
pub const CAN_TSR_TXOK1_Pos: u32 = 9;
pub const CAN_TSR_TXOK1_Msk: u32 = 0x1 << CAN_TSR_TXOK1_Pos;
pub const CAN_TSR_TXOK1: u32 = CAN_TSR_TXOK1_Msk;
pub const CAN_TSR_ALST1_Pos: u32 = 10;
pub const CAN_TSR_ALST1_Msk: u32 = 0x1 << CAN_TSR_ALST1_Pos;
pub const CAN_TSR_ALST1: u32 = CAN_TSR_ALST1_Msk;
pub const CAN_TSR_TERR1_Pos: u32 = 11;
pub const CAN_TSR_TERR1_Msk: u32 = 0x1 << CAN_TSR_TERR1_Pos;
pub const CAN_TSR_TERR1: u32 = CAN_TSR_TERR1_Msk;
pub const CAN_TSR_ABRQ1_Pos: u32 = 15;
pub const CAN_TSR_ABRQ1_Msk: u32 = 0x1 << CAN_TSR_ABRQ1_Pos;
pub const CAN_TSR_ABRQ1: u32 = CAN_TSR_ABRQ1_Msk;
pub const CAN_TSR_RQCP2_Pos: u32 = 16;
pub const CAN_TSR_RQCP2_Msk: u32 = 0x1 << CAN_TSR_RQCP2_Pos;
pub const CAN_TSR_RQCP2: u32 = CAN_TSR_RQCP2_Msk;
pub const CAN_TSR_TXOK2_Pos: u32 = 17;
pub const CAN_TSR_TXOK2_Msk: u32 = 0x1 << CAN_TSR_TXOK2_Pos;
pub const CAN_TSR_TXOK2: u32 = CAN_TSR_TXOK2_Msk;
pub const CAN_TSR_ALST2_Pos: u32 = 18;
pub const CAN_TSR_ALST2_Msk: u32 = 0x1 << CAN_TSR_ALST2_Pos;
pub const CAN_TSR_ALST2: u32 = CAN_TSR_ALST2_Msk;
pub const CAN_TSR_TERR2_Pos: u32 = 19;
pub const CAN_TSR_TERR2_Msk: u32 = 0x1 << CAN_TSR_TERR2_Pos;
pub const CAN_TSR_TERR2: u32 = CAN_TSR_TERR2_Msk;
pub const CAN_TSR_ABRQ2_Pos: u32 = 23;
pub const CAN_TSR_ABRQ2_Msk: u32 = 0x1 << CAN_TSR_ABRQ2_Pos;
pub const CAN_TSR_ABRQ2: u32 = CAN_TSR_ABRQ2_Msk;
pub const CAN_TSR_CODE_Pos: u32 = 24;
pub const CAN_TSR_CODE_Msk: u32 = 0x3 << CAN_TSR_CODE_Pos;
pub const CAN_TSR_CODE: u32 = CAN_TSR_CODE_Msk;
pub const CAN_TSR_TME_Pos: u32 = 26;
pub const CAN_TSR_TME_Msk: u32 = 0x7 << CAN_TSR_TME_Pos;
pub const CAN_TSR_TME: u32 = CAN_TSR_TME_Msk;
pub const CAN_TSR_TME0_Pos: u32 = 26;
pub const CAN_TSR_TME0_Msk: u32 = 0x1 << CAN_TSR_TME0_Pos;
pub const CAN_TSR_TME0: u32 = CAN_TSR_TME0_Msk;
pub const CAN_TSR_TME1_Pos: u32 = 27;
pub const CAN_TSR_TME1_Msk: u32 = 0x1 << CAN_TSR_TME1_Pos;
pub const CAN_TSR_TME1: u32 = CAN_TSR_TME1_Msk;
pub const CAN_TSR_TME2_Pos: u32 = 28;
pub const CAN_TSR_TME2_Msk: u32 = 0x1 << CAN_TSR_TME2_Pos;
pub const CAN_TSR_TME2: u32 = CAN_TSR_TME2_Msk;
pub const CAN_TSR_LOW_Pos: u32 = 29;
pub const CAN_TSR_LOW_Msk: u32 = 0x7 << CAN_TSR_LOW_Pos;
pub const CAN_TSR_LOW: u32 = CAN_TSR_LOW_Msk;
pub const CAN_TSR_LOW0_Pos: u32 = 29;
pub const CAN_TSR_LOW0_Msk: u32 = 0x1 << CAN_TSR_LOW0_Pos;
pub const CAN_TSR_LOW0: u32 = CAN_TSR_LOW0_Msk;
pub const CAN_TSR_LOW1_Pos: u32 = 30;
pub const CAN_TSR_LOW1_Msk: u32 = 0x1 << CAN_TSR_LOW1_Pos;
pub const CAN_TSR_LOW1: u32 = CAN_TSR_LOW1_Msk;
pub const CAN_TSR_LOW2_Pos: u32 = 31;
pub const CAN_TSR_LOW2_Msk: u32 = 0x1 << CAN_TSR_LOW2_Pos;
pub const CAN_TSR_LOW2: u32 = CAN_TSR_LOW2_Msk;
pub const CAN_RF0R_FMP0_Pos: u32 = 0;
pub const CAN_RF0R_FMP0_Msk: u32 = 0x3 << CAN_RF0R_FMP0_Pos;
pub const CAN_RF0R_FMP0: u32 = CAN_RF0R_FMP0_Msk;
pub const CAN_RF0R_FULL0_Pos: u32 = 3;
pub const CAN_RF0R_FULL0_Msk: u32 = 0x1 << CAN_RF0R_FULL0_Pos;
pub const CAN_RF0R_FULL0: u32 = CAN_RF0R_FULL0_Msk;
pub const CAN_RF0R_FOVR0_Pos: u32 = 4;
pub const CAN_RF0R_FOVR0_Msk: u32 = 0x1 << CAN_RF0R_FOVR0_Pos;
pub const CAN_RF0R_FOVR0: u32 = CAN_RF0R_FOVR0_Msk;
pub const CAN_RF0R_RFOM0_Pos: u32 = 5;
pub const CAN_RF0R_RFOM0_Msk: u32 = 0x1 << CAN_RF0R_RFOM0_Pos;
pub const CAN_RF0R_RFOM0: u32 = CAN_RF0R_RFOM0_Msk;
pub const CAN_RF1R_FMP1_Pos: u32 = 0;
pub const CAN_RF1R_FMP1_Msk: u32 = 0x3 << CAN_RF1R_FMP1_Pos;
pub const CAN_RF1R_FMP1: u32 = CAN_RF1R_FMP1_Msk;
pub const CAN_RF1R_FULL1_Pos: u32 = 3;
pub const CAN_RF1R_FULL1_Msk: u32 = 0x1 << CAN_RF1R_FULL1_Pos;
pub const CAN_RF1R_FULL1: u32 = CAN_RF1R_FULL1_Msk;
pub const CAN_RF1R_FOVR1_Pos: u32 = 4;
pub const CAN_RF1R_FOVR1_Msk: u32 = 0x1 << CAN_RF1R_FOVR1_Pos;
pub const CAN_RF1R_FOVR1: u32 = CAN_RF1R_FOVR1_Msk;
pub const CAN_RF1R_RFOM1_Pos: u32 = 5;
pub const CAN_RF1R_RFOM1_Msk: u32 = 0x1 << CAN_RF1R_RFOM1_Pos;
pub const CAN_RF1R_RFOM1: u32 = CAN_RF1R_RFOM1_Msk;
pub const CAN_IER_TMEIE_Pos: u32 = 0;
pub const CAN_IER_TMEIE_Msk: u32 = 0x1 << CAN_IER_TMEIE_Pos;
pub const CAN_IER_TMEIE: u32 = CAN_IER_TMEIE_Msk;
pub const CAN_IER_FMPIE0_Pos: u32 = 1;
pub const CAN_IER_FMPIE0_Msk: u32 = 0x1 << CAN_IER_FMPIE0_Pos;
pub const CAN_IER_FMPIE0: u32 = CAN_IER_FMPIE0_Msk;
pub const CAN_IER_FFIE0_Pos: u32 = 2;
pub const CAN_IER_FFIE0_Msk: u32 = 0x1 << CAN_IER_FFIE0_Pos;
pub const CAN_IER_FFIE0: u32 = CAN_IER_FFIE0_Msk;
pub const CAN_IER_FOVIE0_Pos: u32 = 3;
pub const CAN_IER_FOVIE0_Msk: u32 = 0x1 << CAN_IER_FOVIE0_Pos;
pub const CAN_IER_FOVIE0: u32 = CAN_IER_FOVIE0_Msk;
pub const CAN_IER_FMPIE1_Pos: u32 = 4;
pub const CAN_IER_FMPIE1_Msk: u32 = 0x1 << CAN_IER_FMPIE1_Pos;
pub const CAN_IER_FMPIE1: u32 = CAN_IER_FMPIE1_Msk;
pub const CAN_IER_FFIE1_Pos: u32 = 5;
pub const CAN_IER_FFIE1_Msk: u32 = 0x1 << CAN_IER_FFIE1_Pos;
pub const CAN_IER_FFIE1: u32 = CAN_IER_FFIE1_Msk;
pub const CAN_IER_FOVIE1_Pos: u32 = 6;
pub const CAN_IER_FOVIE1_Msk: u32 = 0x1 << CAN_IER_FOVIE1_Pos;
pub const CAN_IER_FOVIE1: u32 = CAN_IER_FOVIE1_Msk;
pub const CAN_IER_EWGIE_Pos: u32 = 8;
pub const CAN_IER_EWGIE_Msk: u32 = 0x1 << CAN_IER_EWGIE_Pos;
pub const CAN_IER_EWGIE: u32 = CAN_IER_EWGIE_Msk;
pub const CAN_IER_EPVIE_Pos: u32 = 9;
pub const CAN_IER_EPVIE_Msk: u32 = 0x1 << CAN_IER_EPVIE_Pos;
pub const CAN_IER_EPVIE: u32 = CAN_IER_EPVIE_Msk;
pub const CAN_IER_BOFIE_Pos: u32 = 10;
pub const CAN_IER_BOFIE_Msk: u32 = 0x1 << CAN_IER_BOFIE_Pos;
pub const CAN_IER_BOFIE: u32 = CAN_IER_BOFIE_Msk;
pub const CAN_IER_LECIE_Pos: u32 = 11;
pub const CAN_IER_LECIE_Msk: u32 = 0x1 << CAN_IER_LECIE_Pos;
pub const CAN_IER_LECIE: u32 = CAN_IER_LECIE_Msk;
pub const CAN_IER_ERRIE_Pos: u32 = 15;
pub const CAN_IER_ERRIE_Msk: u32 = 0x1 << CAN_IER_ERRIE_Pos;
pub const CAN_IER_ERRIE: u32 = CAN_IER_ERRIE_Msk;
pub const CAN_IER_WKUIE_Pos: u32 = 16;
pub const CAN_IER_WKUIE_Msk: u32 = 0x1 << CAN_IER_WKUIE_Pos;
pub const CAN_IER_WKUIE: u32 = CAN_IER_WKUIE_Msk;
pub const CAN_IER_SLKIE_Pos: u32 = 17;
pub const CAN_IER_SLKIE_Msk: u32 = 0x1 << CAN_IER_SLKIE_Pos;
pub const CAN_IER_SLKIE: u32 = CAN_IER_SLKIE_Msk;
pub const CAN_ESR_EWGF_Pos: u32 = 0;
pub const CAN_ESR_EWGF_Msk: u32 = 0x1 << CAN_ESR_EWGF_Pos;
pub const CAN_ESR_EWGF: u32 = CAN_ESR_EWGF_Msk;
pub const CAN_ESR_EPVF_Pos: u32 = 1;
pub const CAN_ESR_EPVF_Msk: u32 = 0x1 << CAN_ESR_EPVF_Pos;
pub const CAN_ESR_EPVF: u32 = CAN_ESR_EPVF_Msk;
pub const CAN_ESR_BOFF_Pos: u32 = 2;
pub const CAN_ESR_BOFF_Msk: u32 = 0x1 << CAN_ESR_BOFF_Pos;
pub const CAN_ESR_BOFF: u32 = CAN_ESR_BOFF_Msk;
pub const CAN_ESR_LEC_Pos: u32 = 4;
pub const CAN_ESR_LEC_Msk: u32 = 0x7 << CAN_ESR_LEC_Pos;
pub const CAN_ESR_LEC: u32 = CAN_ESR_LEC_Msk;
pub const CAN_ESR_LEC_0: u32 = 0x1 << CAN_ESR_LEC_Pos;
pub const CAN_ESR_LEC_1: u32 = 0x2 << CAN_ESR_LEC_Pos;
pub const CAN_ESR_LEC_2: u32 = 0x4 << CAN_ESR_LEC_Pos;
pub const CAN_ESR_TEC_Pos: u32 = 16;
pub const CAN_ESR_TEC_Msk: u32 = 0xFF << CAN_ESR_TEC_Pos;
pub const CAN_ESR_TEC: u32 = CAN_ESR_TEC_Msk;
pub const CAN_ESR_REC_Pos: u32 = 24;
pub const CAN_ESR_REC_Msk: u32 = 0xFF << CAN_ESR_REC_Pos;
pub const CAN_ESR_REC: u32 = CAN_ESR_REC_Msk;
pub const CAN_BTR_BRP_Pos: u32 = 0;
pub const CAN_BTR_BRP_Msk: u32 = 0x3FF << CAN_BTR_BRP_Pos;
pub const CAN_BTR_BRP: u32 = CAN_BTR_BRP_Msk;
pub const CAN_BTR_TS1_Pos: u32 = 16;
pub const CAN_BTR_TS1_Msk: u32 = 0xF << CAN_BTR_TS1_Pos;
pub const CAN_BTR_TS1: u32 = CAN_BTR_TS1_Msk;
pub const CAN_BTR_TS1_0: u32 = 0x1 << CAN_BTR_TS1_Pos;
pub const CAN_BTR_TS1_1: u32 = 0x2 << CAN_BTR_TS1_Pos;
pub const CAN_BTR_TS1_2: u32 = 0x4 << CAN_BTR_TS1_Pos;
pub const CAN_BTR_TS1_3: u32 = 0x8 << CAN_BTR_TS1_Pos;
pub const CAN_BTR_TS2_Pos: u32 = 20;
pub const CAN_BTR_TS2_Msk: u32 = 0x7 << CAN_BTR_TS2_Pos;
pub const CAN_BTR_TS2: u32 = CAN_BTR_TS2_Msk;
pub const CAN_BTR_TS2_0: u32 = 0x1 << CAN_BTR_TS2_Pos;
pub const CAN_BTR_TS2_1: u32 = 0x2 << CAN_BTR_TS2_Pos;
pub const CAN_BTR_TS2_2: u32 = 0x4 << CAN_BTR_TS2_Pos;
pub const CAN_BTR_SJW_Pos: u32 = 24;
pub const CAN_BTR_SJW_Msk: u32 = 0x3 << CAN_BTR_SJW_Pos;
pub const CAN_BTR_SJW: u32 = CAN_BTR_SJW_Msk;
pub const CAN_BTR_SJW_0: u32 = 0x1 << CAN_BTR_SJW_Pos;
pub const CAN_BTR_SJW_1: u32 = 0x2 << CAN_BTR_SJW_Pos;
pub const CAN_BTR_LBKM_Pos: u32 = 30;
pub const CAN_BTR_LBKM_Msk: u32 = 0x1 << CAN_BTR_LBKM_Pos;
pub const CAN_BTR_LBKM: u32 = CAN_BTR_LBKM_Msk;
pub const CAN_BTR_SILM_Pos: u32 = 31;
pub const CAN_BTR_SILM_Msk: u32 = 0x1 << CAN_BTR_SILM_Pos;
pub const CAN_BTR_SILM: u32 = CAN_BTR_SILM_Msk;
pub const CAN_TI0R_TXRQ_Pos: u32 = 0;
pub const CAN_TI0R_TXRQ_Msk: u32 = 0x1 << CAN_TI0R_TXRQ_Pos;
pub const CAN_TI0R_TXRQ: u32 = CAN_TI0R_TXRQ_Msk;
pub const CAN_TI0R_RTR_Pos: u32 = 1;
pub const CAN_TI0R_RTR_Msk: u32 = 0x1 << CAN_TI0R_RTR_Pos;
pub const CAN_TI0R_RTR: u32 = CAN_TI0R_RTR_Msk;
pub const CAN_TI0R_IDE_Pos: u32 = 2;
pub const CAN_TI0R_IDE_Msk: u32 = 0x1 << CAN_TI0R_IDE_Pos;
pub const CAN_TI0R_IDE: u32 = CAN_TI0R_IDE_Msk;
pub const CAN_TI0R_EXID_Pos: u32 = 3;
pub const CAN_TI0R_EXID_Msk: u32 = 0x3FFFF << CAN_TI0R_EXID_Pos;
pub const CAN_TI0R_EXID: u32 = CAN_TI0R_EXID_Msk;
pub const CAN_TI0R_STID_Pos: u32 = 21;
pub const CAN_TI0R_STID_Msk: u32 = 0x7FF << CAN_TI0R_STID_Pos;
pub const CAN_TI0R_STID: u32 = CAN_TI0R_STID_Msk;
pub const CAN_TDT0R_DLC_Pos: u32 = 0;
pub const CAN_TDT0R_DLC_Msk: u32 = 0xF << CAN_TDT0R_DLC_Pos;
pub const CAN_TDT0R_DLC: u32 = CAN_TDT0R_DLC_Msk;
pub const CAN_TDT0R_TGT_Pos: u32 = 8;
pub const CAN_TDT0R_TGT_Msk: u32 = 0x1 << CAN_TDT0R_TGT_Pos;
pub const CAN_TDT0R_TGT: u32 = CAN_TDT0R_TGT_Msk;
pub const CAN_TDT0R_TIME_Pos: u32 = 16;
pub const CAN_TDT0R_TIME_Msk: u32 = 0xFFFF << CAN_TDT0R_TIME_Pos;
pub const CAN_TDT0R_TIME: u32 = CAN_TDT0R_TIME_Msk;
pub const CAN_TDL0R_DATA0_Pos: u32 = 0;
pub const CAN_TDL0R_DATA0_Msk: u32 = 0xFF << CAN_TDL0R_DATA0_Pos;
pub const CAN_TDL0R_DATA0: u32 = CAN_TDL0R_DATA0_Msk;
pub const CAN_TDL0R_DATA1_Pos: u32 = 8;
pub const CAN_TDL0R_DATA1_Msk: u32 = 0xFF << CAN_TDL0R_DATA1_Pos;
pub const CAN_TDL0R_DATA1: u32 = CAN_TDL0R_DATA1_Msk;
pub const CAN_TDL0R_DATA2_Pos: u32 = 16;
pub const CAN_TDL0R_DATA2_Msk: u32 = 0xFF << CAN_TDL0R_DATA2_Pos;
pub const CAN_TDL0R_DATA2: u32 = CAN_TDL0R_DATA2_Msk;
pub const CAN_TDL0R_DATA3_Pos: u32 = 24;
pub const CAN_TDL0R_DATA3_Msk: u32 = 0xFF << CAN_TDL0R_DATA3_Pos;
pub const CAN_TDL0R_DATA3: u32 = CAN_TDL0R_DATA3_Msk;
pub const CAN_TDH0R_DATA4_Pos: u32 = 0;
pub const CAN_TDH0R_DATA4_Msk: u32 = 0xFF << CAN_TDH0R_DATA4_Pos;
pub const CAN_TDH0R_DATA4: u32 = CAN_TDH0R_DATA4_Msk;
pub const CAN_TDH0R_DATA5_Pos: u32 = 8;
pub const CAN_TDH0R_DATA5_Msk: u32 = 0xFF << CAN_TDH0R_DATA5_Pos;
pub const CAN_TDH0R_DATA5: u32 = CAN_TDH0R_DATA5_Msk;
pub const CAN_TDH0R_DATA6_Pos: u32 = 16;
pub const CAN_TDH0R_DATA6_Msk: u32 = 0xFF << CAN_TDH0R_DATA6_Pos;
pub const CAN_TDH0R_DATA6: u32 = CAN_TDH0R_DATA6_Msk;
pub const CAN_TDH0R_DATA7_Pos: u32 = 24;
pub const CAN_TDH0R_DATA7_Msk: u32 = 0xFF << CAN_TDH0R_DATA7_Pos;
pub const CAN_TDH0R_DATA7: u32 = CAN_TDH0R_DATA7_Msk;
pub const CAN_TI1R_TXRQ_Pos: u32 = 0;
pub const CAN_TI1R_TXRQ_Msk: u32 = 0x1 << CAN_TI1R_TXRQ_Pos;
pub const CAN_TI1R_TXRQ: u32 = CAN_TI1R_TXRQ_Msk;
pub const CAN_TI1R_RTR_Pos: u32 = 1;
pub const CAN_TI1R_RTR_Msk: u32 = 0x1 << CAN_TI1R_RTR_Pos;
pub const CAN_TI1R_RTR: u32 = CAN_TI1R_RTR_Msk;
pub const CAN_TI1R_IDE_Pos: u32 = 2;
pub const CAN_TI1R_IDE_Msk: u32 = 0x1 << CAN_TI1R_IDE_Pos;
pub const CAN_TI1R_IDE: u32 = CAN_TI1R_IDE_Msk;
pub const CAN_TI1R_EXID_Pos: u32 = 3;
pub const CAN_TI1R_EXID_Msk: u32 = 0x3FFFF << CAN_TI1R_EXID_Pos;
pub const CAN_TI1R_EXID: u32 = CAN_TI1R_EXID_Msk;
pub const CAN_TI1R_STID_Pos: u32 = 21;
pub const CAN_TI1R_STID_Msk: u32 = 0x7FF << CAN_TI1R_STID_Pos;
pub const CAN_TI1R_STID: u32 = CAN_TI1R_STID_Msk;
pub const CAN_TDT1R_DLC_Pos: u32 = 0;
pub const CAN_TDT1R_DLC_Msk: u32 = 0xF << CAN_TDT1R_DLC_Pos;
pub const CAN_TDT1R_DLC: u32 = CAN_TDT1R_DLC_Msk;
pub const CAN_TDT1R_TGT_Pos: u32 = 8;
pub const CAN_TDT1R_TGT_Msk: u32 = 0x1 << CAN_TDT1R_TGT_Pos;
pub const CAN_TDT1R_TGT: u32 = CAN_TDT1R_TGT_Msk;
pub const CAN_TDT1R_TIME_Pos: u32 = 16;
pub const CAN_TDT1R_TIME_Msk: u32 = 0xFFFF << CAN_TDT1R_TIME_Pos;
pub const CAN_TDT1R_TIME: u32 = CAN_TDT1R_TIME_Msk;
pub const CAN_TDL1R_DATA0_Pos: u32 = 0;
pub const CAN_TDL1R_DATA0_Msk: u32 = 0xFF << CAN_TDL1R_DATA0_Pos;
pub const CAN_TDL1R_DATA0: u32 = CAN_TDL1R_DATA0_Msk;
pub const CAN_TDL1R_DATA1_Pos: u32 = 8;
pub const CAN_TDL1R_DATA1_Msk: u32 = 0xFF << CAN_TDL1R_DATA1_Pos;
pub const CAN_TDL1R_DATA1: u32 = CAN_TDL1R_DATA1_Msk;
pub const CAN_TDL1R_DATA2_Pos: u32 = 16;
pub const CAN_TDL1R_DATA2_Msk: u32 = 0xFF << CAN_TDL1R_DATA2_Pos;
pub const CAN_TDL1R_DATA2: u32 = CAN_TDL1R_DATA2_Msk;
pub const CAN_TDL1R_DATA3_Pos: u32 = 24;
pub const CAN_TDL1R_DATA3_Msk: u32 = 0xFF << CAN_TDL1R_DATA3_Pos;
pub const CAN_TDL1R_DATA3: u32 = CAN_TDL1R_DATA3_Msk;
pub const CAN_TDH1R_DATA4_Pos: u32 = 0;
pub const CAN_TDH1R_DATA4_Msk: u32 = 0xFF << CAN_TDH1R_DATA4_Pos;
pub const CAN_TDH1R_DATA4: u32 = CAN_TDH1R_DATA4_Msk;
pub const CAN_TDH1R_DATA5_Pos: u32 = 8;
pub const CAN_TDH1R_DATA5_Msk: u32 = 0xFF << CAN_TDH1R_DATA5_Pos;
pub const CAN_TDH1R_DATA5: u32 = CAN_TDH1R_DATA5_Msk;
pub const CAN_TDH1R_DATA6_Pos: u32 = 16;
pub const CAN_TDH1R_DATA6_Msk: u32 = 0xFF << CAN_TDH1R_DATA6_Pos;
pub const CAN_TDH1R_DATA6: u32 = CAN_TDH1R_DATA6_Msk;
pub const CAN_TDH1R_DATA7_Pos: u32 = 24;
pub const CAN_TDH1R_DATA7_Msk: u32 = 0xFF << CAN_TDH1R_DATA7_Pos;
pub const CAN_TDH1R_DATA7: u32 = CAN_TDH1R_DATA7_Msk;
pub const CAN_TI2R_TXRQ_Pos: u32 = 0;
pub const CAN_TI2R_TXRQ_Msk: u32 = 0x1 << CAN_TI2R_TXRQ_Pos;
pub const CAN_TI2R_TXRQ: u32 = CAN_TI2R_TXRQ_Msk;
pub const CAN_TI2R_RTR_Pos: u32 = 1;
pub const CAN_TI2R_RTR_Msk: u32 = 0x1 << CAN_TI2R_RTR_Pos;
pub const CAN_TI2R_RTR: u32 = CAN_TI2R_RTR_Msk;
pub const CAN_TI2R_IDE_Pos: u32 = 2;
pub const CAN_TI2R_IDE_Msk: u32 = 0x1 << CAN_TI2R_IDE_Pos;
pub const CAN_TI2R_IDE: u32 = CAN_TI2R_IDE_Msk;
pub const CAN_TI2R_EXID_Pos: u32 = 3;
pub const CAN_TI2R_EXID_Msk: u32 = 0x3FFFF << CAN_TI2R_EXID_Pos;
pub const CAN_TI2R_EXID: u32 = CAN_TI2R_EXID_Msk;
pub const CAN_TI2R_STID_Pos: u32 = 21;
pub const CAN_TI2R_STID_Msk: u32 = 0x7FF << CAN_TI2R_STID_Pos;
pub const CAN_TI2R_STID: u32 = CAN_TI2R_STID_Msk;
pub const CAN_TDT2R_DLC_Pos: u32 = 0;
pub const CAN_TDT2R_DLC_Msk: u32 = 0xF << CAN_TDT2R_DLC_Pos;
pub const CAN_TDT2R_DLC: u32 = CAN_TDT2R_DLC_Msk;
pub const CAN_TDT2R_TGT_Pos: u32 = 8;
pub const CAN_TDT2R_TGT_Msk: u32 = 0x1 << CAN_TDT2R_TGT_Pos;
pub const CAN_TDT2R_TGT: u32 = CAN_TDT2R_TGT_Msk;
pub const CAN_TDT2R_TIME_Pos: u32 = 16;
pub const CAN_TDT2R_TIME_Msk: u32 = 0xFFFF << CAN_TDT2R_TIME_Pos;
pub const CAN_TDT2R_TIME: u32 = CAN_TDT2R_TIME_Msk;
pub const CAN_TDL2R_DATA0_Pos: u32 = 0;
pub const CAN_TDL2R_DATA0_Msk: u32 = 0xFF << CAN_TDL2R_DATA0_Pos;
pub const CAN_TDL2R_DATA0: u32 = CAN_TDL2R_DATA0_Msk;
pub const CAN_TDL2R_DATA1_Pos: u32 = 8;
pub const CAN_TDL2R_DATA1_Msk: u32 = 0xFF << CAN_TDL2R_DATA1_Pos;
pub const CAN_TDL2R_DATA1: u32 = CAN_TDL2R_DATA1_Msk;
pub const CAN_TDL2R_DATA2_Pos: u32 = 16;
pub const CAN_TDL2R_DATA2_Msk: u32 = 0xFF << CAN_TDL2R_DATA2_Pos;
pub const CAN_TDL2R_DATA2: u32 = CAN_TDL2R_DATA2_Msk;
pub const CAN_TDL2R_DATA3_Pos: u32 = 24;
pub const CAN_TDL2R_DATA3_Msk: u32 = 0xFF << CAN_TDL2R_DATA3_Pos;
pub const CAN_TDL2R_DATA3: u32 = CAN_TDL2R_DATA3_Msk;
pub const CAN_TDH2R_DATA4_Pos: u32 = 0;
pub const CAN_TDH2R_DATA4_Msk: u32 = 0xFF << CAN_TDH2R_DATA4_Pos;
pub const CAN_TDH2R_DATA4: u32 = CAN_TDH2R_DATA4_Msk;
pub const CAN_TDH2R_DATA5_Pos: u32 = 8;
pub const CAN_TDH2R_DATA5_Msk: u32 = 0xFF << CAN_TDH2R_DATA5_Pos;
pub const CAN_TDH2R_DATA5: u32 = CAN_TDH2R_DATA5_Msk;
pub const CAN_TDH2R_DATA6_Pos: u32 = 16;
pub const CAN_TDH2R_DATA6_Msk: u32 = 0xFF << CAN_TDH2R_DATA6_Pos;
pub const CAN_TDH2R_DATA6: u32 = CAN_TDH2R_DATA6_Msk;
pub const CAN_TDH2R_DATA7_Pos: u32 = 24;
pub const CAN_TDH2R_DATA7_Msk: u32 = 0xFF << CAN_TDH2R_DATA7_Pos;
pub const CAN_TDH2R_DATA7: u32 = CAN_TDH2R_DATA7_Msk;
pub const CAN_RI0R_RTR_Pos: u32 = 1;
pub const CAN_RI0R_RTR_Msk: u32 = 0x1 << CAN_RI0R_RTR_Pos;
pub const CAN_RI0R_RTR: u32 = CAN_RI0R_RTR_Msk;
pub const CAN_RI0R_IDE_Pos: u32 = 2;
pub const CAN_RI0R_IDE_Msk: u32 = 0x1 << CAN_RI0R_IDE_Pos;
pub const CAN_RI0R_IDE: u32 = CAN_RI0R_IDE_Msk;
pub const CAN_RI0R_EXID_Pos: u32 = 3;
pub const CAN_RI0R_EXID_Msk: u32 = 0x3FFFF << CAN_RI0R_EXID_Pos;
pub const CAN_RI0R_EXID: u32 = CAN_RI0R_EXID_Msk;
pub const CAN_RI0R_STID_Pos: u32 = 21;
pub const CAN_RI0R_STID_Msk: u32 = 0x7FF << CAN_RI0R_STID_Pos;
pub const CAN_RI0R_STID: u32 = CAN_RI0R_STID_Msk;
pub const CAN_RDT0R_DLC_Pos: u32 = 0;
pub const CAN_RDT0R_DLC_Msk: u32 = 0xF << CAN_RDT0R_DLC_Pos;
pub const CAN_RDT0R_DLC: u32 = CAN_RDT0R_DLC_Msk;
pub const CAN_RDT0R_FMI_Pos: u32 = 8;
pub const CAN_RDT0R_FMI_Msk: u32 = 0xFF << CAN_RDT0R_FMI_Pos;
pub const CAN_RDT0R_FMI: u32 = CAN_RDT0R_FMI_Msk;
pub const CAN_RDT0R_TIME_Pos: u32 = 16;
pub const CAN_RDT0R_TIME_Msk: u32 = 0xFFFF << CAN_RDT0R_TIME_Pos;
pub const CAN_RDT0R_TIME: u32 = CAN_RDT0R_TIME_Msk;
pub const CAN_RDL0R_DATA0_Pos: u32 = 0;
pub const CAN_RDL0R_DATA0_Msk: u32 = 0xFF << CAN_RDL0R_DATA0_Pos;
pub const CAN_RDL0R_DATA0: u32 = CAN_RDL0R_DATA0_Msk;
pub const CAN_RDL0R_DATA1_Pos: u32 = 8;
pub const CAN_RDL0R_DATA1_Msk: u32 = 0xFF << CAN_RDL0R_DATA1_Pos;
pub const CAN_RDL0R_DATA1: u32 = CAN_RDL0R_DATA1_Msk;
pub const CAN_RDL0R_DATA2_Pos: u32 = 16;
pub const CAN_RDL0R_DATA2_Msk: u32 = 0xFF << CAN_RDL0R_DATA2_Pos;
pub const CAN_RDL0R_DATA2: u32 = CAN_RDL0R_DATA2_Msk;
pub const CAN_RDL0R_DATA3_Pos: u32 = 24;
pub const CAN_RDL0R_DATA3_Msk: u32 = 0xFF << CAN_RDL0R_DATA3_Pos;
pub const CAN_RDL0R_DATA3: u32 = CAN_RDL0R_DATA3_Msk;
pub const CAN_RDH0R_DATA4_Pos: u32 = 0;
pub const CAN_RDH0R_DATA4_Msk: u32 = 0xFF << CAN_RDH0R_DATA4_Pos;
pub const CAN_RDH0R_DATA4: u32 = CAN_RDH0R_DATA4_Msk;
pub const CAN_RDH0R_DATA5_Pos: u32 = 8;
pub const CAN_RDH0R_DATA5_Msk: u32 = 0xFF << CAN_RDH0R_DATA5_Pos;
pub const CAN_RDH0R_DATA5: u32 = CAN_RDH0R_DATA5_Msk;
pub const CAN_RDH0R_DATA6_Pos: u32 = 16;
pub const CAN_RDH0R_DATA6_Msk: u32 = 0xFF << CAN_RDH0R_DATA6_Pos;
pub const CAN_RDH0R_DATA6: u32 = CAN_RDH0R_DATA6_Msk;
pub const CAN_RDH0R_DATA7_Pos: u32 = 24;
pub const CAN_RDH0R_DATA7_Msk: u32 = 0xFF << CAN_RDH0R_DATA7_Pos;
pub const CAN_RDH0R_DATA7: u32 = CAN_RDH0R_DATA7_Msk;
pub const CAN_RI1R_RTR_Pos: u32 = 1;
pub const CAN_RI1R_RTR_Msk: u32 = 0x1 << CAN_RI1R_RTR_Pos;
pub const CAN_RI1R_RTR: u32 = CAN_RI1R_RTR_Msk;
pub const CAN_RI1R_IDE_Pos: u32 = 2;
pub const CAN_RI1R_IDE_Msk: u32 = 0x1 << CAN_RI1R_IDE_Pos;
pub const CAN_RI1R_IDE: u32 = CAN_RI1R_IDE_Msk;
pub const CAN_RI1R_EXID_Pos: u32 = 3;
pub const CAN_RI1R_EXID_Msk: u32 = 0x3FFFF << CAN_RI1R_EXID_Pos;
pub const CAN_RI1R_EXID: u32 = CAN_RI1R_EXID_Msk;
pub const CAN_RI1R_STID_Pos: u32 = 21;
pub const CAN_RI1R_STID_Msk: u32 = 0x7FF << CAN_RI1R_STID_Pos;
pub const CAN_RI1R_STID: u32 = CAN_RI1R_STID_Msk;
pub const CAN_RDT1R_DLC_Pos: u32 = 0;
pub const CAN_RDT1R_DLC_Msk: u32 = 0xF << CAN_RDT1R_DLC_Pos;
pub const CAN_RDT1R_DLC: u32 = CAN_RDT1R_DLC_Msk;
pub const CAN_RDT1R_FMI_Pos: u32 = 8;
pub const CAN_RDT1R_FMI_Msk: u32 = 0xFF << CAN_RDT1R_FMI_Pos;
pub const CAN_RDT1R_FMI: u32 = CAN_RDT1R_FMI_Msk;
pub const CAN_RDT1R_TIME_Pos: u32 = 16;
pub const CAN_RDT1R_TIME_Msk: u32 = 0xFFFF << CAN_RDT1R_TIME_Pos;
pub const CAN_RDT1R_TIME: u32 = CAN_RDT1R_TIME_Msk;
pub const CAN_RDL1R_DATA0_Pos: u32 = 0;
pub const CAN_RDL1R_DATA0_Msk: u32 = 0xFF << CAN_RDL1R_DATA0_Pos;
pub const CAN_RDL1R_DATA0: u32 = CAN_RDL1R_DATA0_Msk;
pub const CAN_RDL1R_DATA1_Pos: u32 = 8;
pub const CAN_RDL1R_DATA1_Msk: u32 = 0xFF << CAN_RDL1R_DATA1_Pos;
pub const CAN_RDL1R_DATA1: u32 = CAN_RDL1R_DATA1_Msk;
pub const CAN_RDL1R_DATA2_Pos: u32 = 16;
pub const CAN_RDL1R_DATA2_Msk: u32 = 0xFF << CAN_RDL1R_DATA2_Pos;
pub const CAN_RDL1R_DATA2: u32 = CAN_RDL1R_DATA2_Msk;
pub const CAN_RDL1R_DATA3_Pos: u32 = 24;
pub const CAN_RDL1R_DATA3_Msk: u32 = 0xFF << CAN_RDL1R_DATA3_Pos;
pub const CAN_RDL1R_DATA3: u32 = CAN_RDL1R_DATA3_Msk;
pub const CAN_RDH1R_DATA4_Pos: u32 = 0;
pub const CAN_RDH1R_DATA4_Msk: u32 = 0xFF << CAN_RDH1R_DATA4_Pos;
pub const CAN_RDH1R_DATA4: u32 = CAN_RDH1R_DATA4_Msk;
pub const CAN_RDH1R_DATA5_Pos: u32 = 8;
pub const CAN_RDH1R_DATA5_Msk: u32 = 0xFF << CAN_RDH1R_DATA5_Pos;
pub const CAN_RDH1R_DATA5: u32 = CAN_RDH1R_DATA5_Msk;
pub const CAN_RDH1R_DATA6_Pos: u32 = 16;
pub const CAN_RDH1R_DATA6_Msk: u32 = 0xFF << CAN_RDH1R_DATA6_Pos;
pub const CAN_RDH1R_DATA6: u32 = CAN_RDH1R_DATA6_Msk;
pub const CAN_RDH1R_DATA7_Pos: u32 = 24;
pub const CAN_RDH1R_DATA7_Msk: u32 = 0xFF << CAN_RDH1R_DATA7_Pos;
pub const CAN_RDH1R_DATA7: u32 = CAN_RDH1R_DATA7_Msk;
pub const CAN_FMR_FINIT: u32 = uint8_t0x01;
pub const CAN_FMR_CAN2SB_Pos: u32 = 8;
pub const CAN_FMR_CAN2SB_Msk: u32 = 0x3F << CAN_FMR_CAN2SB_Pos;
pub const CAN_FMR_CAN2SB: u32 = CAN_FMR_CAN2SB_Msk;
pub const CAN_FM1R_FBM_Pos: u32 = 0;
pub const CAN_FM1R_FBM_Msk: u32 = 0x3FFF << CAN_FM1R_FBM_Pos;
pub const CAN_FM1R_FBM: u32 = CAN_FM1R_FBM_Msk;
pub const CAN_FM1R_FBM0_Pos: u32 = 0;
pub const CAN_FM1R_FBM0_Msk: u32 = 0x1 << CAN_FM1R_FBM0_Pos;
pub const CAN_FM1R_FBM0: u32 = CAN_FM1R_FBM0_Msk;
pub const CAN_FM1R_FBM1_Pos: u32 = 1;
pub const CAN_FM1R_FBM1_Msk: u32 = 0x1 << CAN_FM1R_FBM1_Pos;
pub const CAN_FM1R_FBM1: u32 = CAN_FM1R_FBM1_Msk;
pub const CAN_FM1R_FBM2_Pos: u32 = 2;
pub const CAN_FM1R_FBM2_Msk: u32 = 0x1 << CAN_FM1R_FBM2_Pos;
pub const CAN_FM1R_FBM2: u32 = CAN_FM1R_FBM2_Msk;
pub const CAN_FM1R_FBM3_Pos: u32 = 3;
pub const CAN_FM1R_FBM3_Msk: u32 = 0x1 << CAN_FM1R_FBM3_Pos;
pub const CAN_FM1R_FBM3: u32 = CAN_FM1R_FBM3_Msk;
pub const CAN_FM1R_FBM4_Pos: u32 = 4;
pub const CAN_FM1R_FBM4_Msk: u32 = 0x1 << CAN_FM1R_FBM4_Pos;
pub const CAN_FM1R_FBM4: u32 = CAN_FM1R_FBM4_Msk;
pub const CAN_FM1R_FBM5_Pos: u32 = 5;
pub const CAN_FM1R_FBM5_Msk: u32 = 0x1 << CAN_FM1R_FBM5_Pos;
pub const CAN_FM1R_FBM5: u32 = CAN_FM1R_FBM5_Msk;
pub const CAN_FM1R_FBM6_Pos: u32 = 6;
pub const CAN_FM1R_FBM6_Msk: u32 = 0x1 << CAN_FM1R_FBM6_Pos;
pub const CAN_FM1R_FBM6: u32 = CAN_FM1R_FBM6_Msk;
pub const CAN_FM1R_FBM7_Pos: u32 = 7;
pub const CAN_FM1R_FBM7_Msk: u32 = 0x1 << CAN_FM1R_FBM7_Pos;
pub const CAN_FM1R_FBM7: u32 = CAN_FM1R_FBM7_Msk;
pub const CAN_FM1R_FBM8_Pos: u32 = 8;
pub const CAN_FM1R_FBM8_Msk: u32 = 0x1 << CAN_FM1R_FBM8_Pos;
pub const CAN_FM1R_FBM8: u32 = CAN_FM1R_FBM8_Msk;
pub const CAN_FM1R_FBM9_Pos: u32 = 9;
pub const CAN_FM1R_FBM9_Msk: u32 = 0x1 << CAN_FM1R_FBM9_Pos;
pub const CAN_FM1R_FBM9: u32 = CAN_FM1R_FBM9_Msk;
pub const CAN_FM1R_FBM10_Pos: u32 = 10;
pub const CAN_FM1R_FBM10_Msk: u32 = 0x1 << CAN_FM1R_FBM10_Pos;
pub const CAN_FM1R_FBM10: u32 = CAN_FM1R_FBM10_Msk;
pub const CAN_FM1R_FBM11_Pos: u32 = 11;
pub const CAN_FM1R_FBM11_Msk: u32 = 0x1 << CAN_FM1R_FBM11_Pos;
pub const CAN_FM1R_FBM11: u32 = CAN_FM1R_FBM11_Msk;
pub const CAN_FM1R_FBM12_Pos: u32 = 12;
pub const CAN_FM1R_FBM12_Msk: u32 = 0x1 << CAN_FM1R_FBM12_Pos;
pub const CAN_FM1R_FBM12: u32 = CAN_FM1R_FBM12_Msk;
pub const CAN_FM1R_FBM13_Pos: u32 = 13;
pub const CAN_FM1R_FBM13_Msk: u32 = 0x1 << CAN_FM1R_FBM13_Pos;
pub const CAN_FM1R_FBM13: u32 = CAN_FM1R_FBM13_Msk;
pub const CAN_FS1R_FSC_Pos: u32 = 0;
pub const CAN_FS1R_FSC_Msk: u32 = 0x3FFF << CAN_FS1R_FSC_Pos;
pub const CAN_FS1R_FSC: u32 = CAN_FS1R_FSC_Msk;
pub const CAN_FS1R_FSC0_Pos: u32 = 0;
pub const CAN_FS1R_FSC0_Msk: u32 = 0x1 << CAN_FS1R_FSC0_Pos;
pub const CAN_FS1R_FSC0: u32 = CAN_FS1R_FSC0_Msk;
pub const CAN_FS1R_FSC1_Pos: u32 = 1;
pub const CAN_FS1R_FSC1_Msk: u32 = 0x1 << CAN_FS1R_FSC1_Pos;
pub const CAN_FS1R_FSC1: u32 = CAN_FS1R_FSC1_Msk;
pub const CAN_FS1R_FSC2_Pos: u32 = 2;
pub const CAN_FS1R_FSC2_Msk: u32 = 0x1 << CAN_FS1R_FSC2_Pos;
pub const CAN_FS1R_FSC2: u32 = CAN_FS1R_FSC2_Msk;
pub const CAN_FS1R_FSC3_Pos: u32 = 3;
pub const CAN_FS1R_FSC3_Msk: u32 = 0x1 << CAN_FS1R_FSC3_Pos;
pub const CAN_FS1R_FSC3: u32 = CAN_FS1R_FSC3_Msk;
pub const CAN_FS1R_FSC4_Pos: u32 = 4;
pub const CAN_FS1R_FSC4_Msk: u32 = 0x1 << CAN_FS1R_FSC4_Pos;
pub const CAN_FS1R_FSC4: u32 = CAN_FS1R_FSC4_Msk;
pub const CAN_FS1R_FSC5_Pos: u32 = 5;
pub const CAN_FS1R_FSC5_Msk: u32 = 0x1 << CAN_FS1R_FSC5_Pos;
pub const CAN_FS1R_FSC5: u32 = CAN_FS1R_FSC5_Msk;
pub const CAN_FS1R_FSC6_Pos: u32 = 6;
pub const CAN_FS1R_FSC6_Msk: u32 = 0x1 << CAN_FS1R_FSC6_Pos;
pub const CAN_FS1R_FSC6: u32 = CAN_FS1R_FSC6_Msk;
pub const CAN_FS1R_FSC7_Pos: u32 = 7;
pub const CAN_FS1R_FSC7_Msk: u32 = 0x1 << CAN_FS1R_FSC7_Pos;
pub const CAN_FS1R_FSC7: u32 = CAN_FS1R_FSC7_Msk;
pub const CAN_FS1R_FSC8_Pos: u32 = 8;
pub const CAN_FS1R_FSC8_Msk: u32 = 0x1 << CAN_FS1R_FSC8_Pos;
pub const CAN_FS1R_FSC8: u32 = CAN_FS1R_FSC8_Msk;
pub const CAN_FS1R_FSC9_Pos: u32 = 9;
pub const CAN_FS1R_FSC9_Msk: u32 = 0x1 << CAN_FS1R_FSC9_Pos;
pub const CAN_FS1R_FSC9: u32 = CAN_FS1R_FSC9_Msk;
pub const CAN_FS1R_FSC10_Pos: u32 = 10;
pub const CAN_FS1R_FSC10_Msk: u32 = 0x1 << CAN_FS1R_FSC10_Pos;
pub const CAN_FS1R_FSC10: u32 = CAN_FS1R_FSC10_Msk;
pub const CAN_FS1R_FSC11_Pos: u32 = 11;
pub const CAN_FS1R_FSC11_Msk: u32 = 0x1 << CAN_FS1R_FSC11_Pos;
pub const CAN_FS1R_FSC11: u32 = CAN_FS1R_FSC11_Msk;
pub const CAN_FS1R_FSC12_Pos: u32 = 12;
pub const CAN_FS1R_FSC12_Msk: u32 = 0x1 << CAN_FS1R_FSC12_Pos;
pub const CAN_FS1R_FSC12: u32 = CAN_FS1R_FSC12_Msk;
pub const CAN_FS1R_FSC13_Pos: u32 = 13;
pub const CAN_FS1R_FSC13_Msk: u32 = 0x1 << CAN_FS1R_FSC13_Pos;
pub const CAN_FS1R_FSC13: u32 = CAN_FS1R_FSC13_Msk;
pub const CAN_FFA1R_FFA_Pos: u32 = 0;
pub const CAN_FFA1R_FFA_Msk: u32 = 0x3FFF << CAN_FFA1R_FFA_Pos;
pub const CAN_FFA1R_FFA: u32 = CAN_FFA1R_FFA_Msk;
pub const CAN_FFA1R_FFA0_Pos: u32 = 0;
pub const CAN_FFA1R_FFA0_Msk: u32 = 0x1 << CAN_FFA1R_FFA0_Pos;
pub const CAN_FFA1R_FFA0: u32 = CAN_FFA1R_FFA0_Msk;
pub const CAN_FFA1R_FFA1_Pos: u32 = 1;
pub const CAN_FFA1R_FFA1_Msk: u32 = 0x1 << CAN_FFA1R_FFA1_Pos;
pub const CAN_FFA1R_FFA1: u32 = CAN_FFA1R_FFA1_Msk;
pub const CAN_FFA1R_FFA2_Pos: u32 = 2;
pub const CAN_FFA1R_FFA2_Msk: u32 = 0x1 << CAN_FFA1R_FFA2_Pos;
pub const CAN_FFA1R_FFA2: u32 = CAN_FFA1R_FFA2_Msk;
pub const CAN_FFA1R_FFA3_Pos: u32 = 3;
pub const CAN_FFA1R_FFA3_Msk: u32 = 0x1 << CAN_FFA1R_FFA3_Pos;
pub const CAN_FFA1R_FFA3: u32 = CAN_FFA1R_FFA3_Msk;
pub const CAN_FFA1R_FFA4_Pos: u32 = 4;
pub const CAN_FFA1R_FFA4_Msk: u32 = 0x1 << CAN_FFA1R_FFA4_Pos;
pub const CAN_FFA1R_FFA4: u32 = CAN_FFA1R_FFA4_Msk;
pub const CAN_FFA1R_FFA5_Pos: u32 = 5;
pub const CAN_FFA1R_FFA5_Msk: u32 = 0x1 << CAN_FFA1R_FFA5_Pos;
pub const CAN_FFA1R_FFA5: u32 = CAN_FFA1R_FFA5_Msk;
pub const CAN_FFA1R_FFA6_Pos: u32 = 6;
pub const CAN_FFA1R_FFA6_Msk: u32 = 0x1 << CAN_FFA1R_FFA6_Pos;
pub const CAN_FFA1R_FFA6: u32 = CAN_FFA1R_FFA6_Msk;
pub const CAN_FFA1R_FFA7_Pos: u32 = 7;
pub const CAN_FFA1R_FFA7_Msk: u32 = 0x1 << CAN_FFA1R_FFA7_Pos;
pub const CAN_FFA1R_FFA7: u32 = CAN_FFA1R_FFA7_Msk;
pub const CAN_FFA1R_FFA8_Pos: u32 = 8;
pub const CAN_FFA1R_FFA8_Msk: u32 = 0x1 << CAN_FFA1R_FFA8_Pos;
pub const CAN_FFA1R_FFA8: u32 = CAN_FFA1R_FFA8_Msk;
pub const CAN_FFA1R_FFA9_Pos: u32 = 9;
pub const CAN_FFA1R_FFA9_Msk: u32 = 0x1 << CAN_FFA1R_FFA9_Pos;
pub const CAN_FFA1R_FFA9: u32 = CAN_FFA1R_FFA9_Msk;
pub const CAN_FFA1R_FFA10_Pos: u32 = 10;
pub const CAN_FFA1R_FFA10_Msk: u32 = 0x1 << CAN_FFA1R_FFA10_Pos;
pub const CAN_FFA1R_FFA10: u32 = CAN_FFA1R_FFA10_Msk;
pub const CAN_FFA1R_FFA11_Pos: u32 = 11;
pub const CAN_FFA1R_FFA11_Msk: u32 = 0x1 << CAN_FFA1R_FFA11_Pos;
pub const CAN_FFA1R_FFA11: u32 = CAN_FFA1R_FFA11_Msk;
pub const CAN_FFA1R_FFA12_Pos: u32 = 12;
pub const CAN_FFA1R_FFA12_Msk: u32 = 0x1 << CAN_FFA1R_FFA12_Pos;
pub const CAN_FFA1R_FFA12: u32 = CAN_FFA1R_FFA12_Msk;
pub const CAN_FFA1R_FFA13_Pos: u32 = 13;
pub const CAN_FFA1R_FFA13_Msk: u32 = 0x1 << CAN_FFA1R_FFA13_Pos;
pub const CAN_FFA1R_FFA13: u32 = CAN_FFA1R_FFA13_Msk;
pub const CAN_FA1R_FACT_Pos: u32 = 0;
pub const CAN_FA1R_FACT_Msk: u32 = 0x3FFF << CAN_FA1R_FACT_Pos;
pub const CAN_FA1R_FACT: u32 = CAN_FA1R_FACT_Msk;
pub const CAN_FA1R_FACT0_Pos: u32 = 0;
pub const CAN_FA1R_FACT0_Msk: u32 = 0x1 << CAN_FA1R_FACT0_Pos;
pub const CAN_FA1R_FACT0: u32 = CAN_FA1R_FACT0_Msk;
pub const CAN_FA1R_FACT1_Pos: u32 = 1;
pub const CAN_FA1R_FACT1_Msk: u32 = 0x1 << CAN_FA1R_FACT1_Pos;
pub const CAN_FA1R_FACT1: u32 = CAN_FA1R_FACT1_Msk;
pub const CAN_FA1R_FACT2_Pos: u32 = 2;
pub const CAN_FA1R_FACT2_Msk: u32 = 0x1 << CAN_FA1R_FACT2_Pos;
pub const CAN_FA1R_FACT2: u32 = CAN_FA1R_FACT2_Msk;
pub const CAN_FA1R_FACT3_Pos: u32 = 3;
pub const CAN_FA1R_FACT3_Msk: u32 = 0x1 << CAN_FA1R_FACT3_Pos;
pub const CAN_FA1R_FACT3: u32 = CAN_FA1R_FACT3_Msk;
pub const CAN_FA1R_FACT4_Pos: u32 = 4;
pub const CAN_FA1R_FACT4_Msk: u32 = 0x1 << CAN_FA1R_FACT4_Pos;
pub const CAN_FA1R_FACT4: u32 = CAN_FA1R_FACT4_Msk;
pub const CAN_FA1R_FACT5_Pos: u32 = 5;
pub const CAN_FA1R_FACT5_Msk: u32 = 0x1 << CAN_FA1R_FACT5_Pos;
pub const CAN_FA1R_FACT5: u32 = CAN_FA1R_FACT5_Msk;
pub const CAN_FA1R_FACT6_Pos: u32 = 6;
pub const CAN_FA1R_FACT6_Msk: u32 = 0x1 << CAN_FA1R_FACT6_Pos;
pub const CAN_FA1R_FACT6: u32 = CAN_FA1R_FACT6_Msk;
pub const CAN_FA1R_FACT7_Pos: u32 = 7;
pub const CAN_FA1R_FACT7_Msk: u32 = 0x1 << CAN_FA1R_FACT7_Pos;
pub const CAN_FA1R_FACT7: u32 = CAN_FA1R_FACT7_Msk;
pub const CAN_FA1R_FACT8_Pos: u32 = 8;
pub const CAN_FA1R_FACT8_Msk: u32 = 0x1 << CAN_FA1R_FACT8_Pos;
pub const CAN_FA1R_FACT8: u32 = CAN_FA1R_FACT8_Msk;
pub const CAN_FA1R_FACT9_Pos: u32 = 9;
pub const CAN_FA1R_FACT9_Msk: u32 = 0x1 << CAN_FA1R_FACT9_Pos;
pub const CAN_FA1R_FACT9: u32 = CAN_FA1R_FACT9_Msk;
pub const CAN_FA1R_FACT10_Pos: u32 = 10;
pub const CAN_FA1R_FACT10_Msk: u32 = 0x1 << CAN_FA1R_FACT10_Pos;
pub const CAN_FA1R_FACT10: u32 = CAN_FA1R_FACT10_Msk;
pub const CAN_FA1R_FACT11_Pos: u32 = 11;
pub const CAN_FA1R_FACT11_Msk: u32 = 0x1 << CAN_FA1R_FACT11_Pos;
pub const CAN_FA1R_FACT11: u32 = CAN_FA1R_FACT11_Msk;
pub const CAN_FA1R_FACT12_Pos: u32 = 12;
pub const CAN_FA1R_FACT12_Msk: u32 = 0x1 << CAN_FA1R_FACT12_Pos;
pub const CAN_FA1R_FACT12: u32 = CAN_FA1R_FACT12_Msk;
pub const CAN_FA1R_FACT13_Pos: u32 = 13;
pub const CAN_FA1R_FACT13_Msk: u32 = 0x1 << CAN_FA1R_FACT13_Pos;
pub const CAN_FA1R_FACT13: u32 = CAN_FA1R_FACT13_Msk;
pub const CAN_F0R1_FB0_Pos: u32 = 0;
pub const CAN_F0R1_FB0_Msk: u32 = 0x1 << CAN_F0R1_FB0_Pos;
pub const CAN_F0R1_FB0: u32 = CAN_F0R1_FB0_Msk;
pub const CAN_F0R1_FB1_Pos: u32 = 1;
pub const CAN_F0R1_FB1_Msk: u32 = 0x1 << CAN_F0R1_FB1_Pos;
pub const CAN_F0R1_FB1: u32 = CAN_F0R1_FB1_Msk;
pub const CAN_F0R1_FB2_Pos: u32 = 2;
pub const CAN_F0R1_FB2_Msk: u32 = 0x1 << CAN_F0R1_FB2_Pos;
pub const CAN_F0R1_FB2: u32 = CAN_F0R1_FB2_Msk;
pub const CAN_F0R1_FB3_Pos: u32 = 3;
pub const CAN_F0R1_FB3_Msk: u32 = 0x1 << CAN_F0R1_FB3_Pos;
pub const CAN_F0R1_FB3: u32 = CAN_F0R1_FB3_Msk;
pub const CAN_F0R1_FB4_Pos: u32 = 4;
pub const CAN_F0R1_FB4_Msk: u32 = 0x1 << CAN_F0R1_FB4_Pos;
pub const CAN_F0R1_FB4: u32 = CAN_F0R1_FB4_Msk;
pub const CAN_F0R1_FB5_Pos: u32 = 5;
pub const CAN_F0R1_FB5_Msk: u32 = 0x1 << CAN_F0R1_FB5_Pos;
pub const CAN_F0R1_FB5: u32 = CAN_F0R1_FB5_Msk;
pub const CAN_F0R1_FB6_Pos: u32 = 6;
pub const CAN_F0R1_FB6_Msk: u32 = 0x1 << CAN_F0R1_FB6_Pos;
pub const CAN_F0R1_FB6: u32 = CAN_F0R1_FB6_Msk;
pub const CAN_F0R1_FB7_Pos: u32 = 7;
pub const CAN_F0R1_FB7_Msk: u32 = 0x1 << CAN_F0R1_FB7_Pos;
pub const CAN_F0R1_FB7: u32 = CAN_F0R1_FB7_Msk;
pub const CAN_F0R1_FB8_Pos: u32 = 8;
pub const CAN_F0R1_FB8_Msk: u32 = 0x1 << CAN_F0R1_FB8_Pos;
pub const CAN_F0R1_FB8: u32 = CAN_F0R1_FB8_Msk;
pub const CAN_F0R1_FB9_Pos: u32 = 9;
pub const CAN_F0R1_FB9_Msk: u32 = 0x1 << CAN_F0R1_FB9_Pos;
pub const CAN_F0R1_FB9: u32 = CAN_F0R1_FB9_Msk;
pub const CAN_F0R1_FB10_Pos: u32 = 10;
pub const CAN_F0R1_FB10_Msk: u32 = 0x1 << CAN_F0R1_FB10_Pos;
pub const CAN_F0R1_FB10: u32 = CAN_F0R1_FB10_Msk;
pub const CAN_F0R1_FB11_Pos: u32 = 11;
pub const CAN_F0R1_FB11_Msk: u32 = 0x1 << CAN_F0R1_FB11_Pos;
pub const CAN_F0R1_FB11: u32 = CAN_F0R1_FB11_Msk;
pub const CAN_F0R1_FB12_Pos: u32 = 12;
pub const CAN_F0R1_FB12_Msk: u32 = 0x1 << CAN_F0R1_FB12_Pos;
pub const CAN_F0R1_FB12: u32 = CAN_F0R1_FB12_Msk;
pub const CAN_F0R1_FB13_Pos: u32 = 13;
pub const CAN_F0R1_FB13_Msk: u32 = 0x1 << CAN_F0R1_FB13_Pos;
pub const CAN_F0R1_FB13: u32 = CAN_F0R1_FB13_Msk;
pub const CAN_F0R1_FB14_Pos: u32 = 14;
pub const CAN_F0R1_FB14_Msk: u32 = 0x1 << CAN_F0R1_FB14_Pos;
pub const CAN_F0R1_FB14: u32 = CAN_F0R1_FB14_Msk;
pub const CAN_F0R1_FB15_Pos: u32 = 15;
pub const CAN_F0R1_FB15_Msk: u32 = 0x1 << CAN_F0R1_FB15_Pos;
pub const CAN_F0R1_FB15: u32 = CAN_F0R1_FB15_Msk;
pub const CAN_F0R1_FB16_Pos: u32 = 16;
pub const CAN_F0R1_FB16_Msk: u32 = 0x1 << CAN_F0R1_FB16_Pos;
pub const CAN_F0R1_FB16: u32 = CAN_F0R1_FB16_Msk;
pub const CAN_F0R1_FB17_Pos: u32 = 17;
pub const CAN_F0R1_FB17_Msk: u32 = 0x1 << CAN_F0R1_FB17_Pos;
pub const CAN_F0R1_FB17: u32 = CAN_F0R1_FB17_Msk;
pub const CAN_F0R1_FB18_Pos: u32 = 18;
pub const CAN_F0R1_FB18_Msk: u32 = 0x1 << CAN_F0R1_FB18_Pos;
pub const CAN_F0R1_FB18: u32 = CAN_F0R1_FB18_Msk;
pub const CAN_F0R1_FB19_Pos: u32 = 19;
pub const CAN_F0R1_FB19_Msk: u32 = 0x1 << CAN_F0R1_FB19_Pos;
pub const CAN_F0R1_FB19: u32 = CAN_F0R1_FB19_Msk;
pub const CAN_F0R1_FB20_Pos: u32 = 20;
pub const CAN_F0R1_FB20_Msk: u32 = 0x1 << CAN_F0R1_FB20_Pos;
pub const CAN_F0R1_FB20: u32 = CAN_F0R1_FB20_Msk;
pub const CAN_F0R1_FB21_Pos: u32 = 21;
pub const CAN_F0R1_FB21_Msk: u32 = 0x1 << CAN_F0R1_FB21_Pos;
pub const CAN_F0R1_FB21: u32 = CAN_F0R1_FB21_Msk;
pub const CAN_F0R1_FB22_Pos: u32 = 22;
pub const CAN_F0R1_FB22_Msk: u32 = 0x1 << CAN_F0R1_FB22_Pos;
pub const CAN_F0R1_FB22: u32 = CAN_F0R1_FB22_Msk;
pub const CAN_F0R1_FB23_Pos: u32 = 23;
pub const CAN_F0R1_FB23_Msk: u32 = 0x1 << CAN_F0R1_FB23_Pos;
pub const CAN_F0R1_FB23: u32 = CAN_F0R1_FB23_Msk;
pub const CAN_F0R1_FB24_Pos: u32 = 24;
pub const CAN_F0R1_FB24_Msk: u32 = 0x1 << CAN_F0R1_FB24_Pos;
pub const CAN_F0R1_FB24: u32 = CAN_F0R1_FB24_Msk;
pub const CAN_F0R1_FB25_Pos: u32 = 25;
pub const CAN_F0R1_FB25_Msk: u32 = 0x1 << CAN_F0R1_FB25_Pos;
pub const CAN_F0R1_FB25: u32 = CAN_F0R1_FB25_Msk;
pub const CAN_F0R1_FB26_Pos: u32 = 26;
pub const CAN_F0R1_FB26_Msk: u32 = 0x1 << CAN_F0R1_FB26_Pos;
pub const CAN_F0R1_FB26: u32 = CAN_F0R1_FB26_Msk;
pub const CAN_F0R1_FB27_Pos: u32 = 27;
pub const CAN_F0R1_FB27_Msk: u32 = 0x1 << CAN_F0R1_FB27_Pos;
pub const CAN_F0R1_FB27: u32 = CAN_F0R1_FB27_Msk;
pub const CAN_F0R1_FB28_Pos: u32 = 28;
pub const CAN_F0R1_FB28_Msk: u32 = 0x1 << CAN_F0R1_FB28_Pos;
pub const CAN_F0R1_FB28: u32 = CAN_F0R1_FB28_Msk;
pub const CAN_F0R1_FB29_Pos: u32 = 29;
pub const CAN_F0R1_FB29_Msk: u32 = 0x1 << CAN_F0R1_FB29_Pos;
pub const CAN_F0R1_FB29: u32 = CAN_F0R1_FB29_Msk;
pub const CAN_F0R1_FB30_Pos: u32 = 30;
pub const CAN_F0R1_FB30_Msk: u32 = 0x1 << CAN_F0R1_FB30_Pos;
pub const CAN_F0R1_FB30: u32 = CAN_F0R1_FB30_Msk;
pub const CAN_F0R1_FB31_Pos: u32 = 31;
pub const CAN_F0R1_FB31_Msk: u32 = 0x1 << CAN_F0R1_FB31_Pos;
pub const CAN_F0R1_FB31: u32 = CAN_F0R1_FB31_Msk;
pub const CAN_F1R1_FB0_Pos: u32 = 0;
pub const CAN_F1R1_FB0_Msk: u32 = 0x1 << CAN_F1R1_FB0_Pos;
pub const CAN_F1R1_FB0: u32 = CAN_F1R1_FB0_Msk;
pub const CAN_F1R1_FB1_Pos: u32 = 1;
pub const CAN_F1R1_FB1_Msk: u32 = 0x1 << CAN_F1R1_FB1_Pos;
pub const CAN_F1R1_FB1: u32 = CAN_F1R1_FB1_Msk;
pub const CAN_F1R1_FB2_Pos: u32 = 2;
pub const CAN_F1R1_FB2_Msk: u32 = 0x1 << CAN_F1R1_FB2_Pos;
pub const CAN_F1R1_FB2: u32 = CAN_F1R1_FB2_Msk;
pub const CAN_F1R1_FB3_Pos: u32 = 3;
pub const CAN_F1R1_FB3_Msk: u32 = 0x1 << CAN_F1R1_FB3_Pos;
pub const CAN_F1R1_FB3: u32 = CAN_F1R1_FB3_Msk;
pub const CAN_F1R1_FB4_Pos: u32 = 4;
pub const CAN_F1R1_FB4_Msk: u32 = 0x1 << CAN_F1R1_FB4_Pos;
pub const CAN_F1R1_FB4: u32 = CAN_F1R1_FB4_Msk;
pub const CAN_F1R1_FB5_Pos: u32 = 5;
pub const CAN_F1R1_FB5_Msk: u32 = 0x1 << CAN_F1R1_FB5_Pos;
pub const CAN_F1R1_FB5: u32 = CAN_F1R1_FB5_Msk;
pub const CAN_F1R1_FB6_Pos: u32 = 6;
pub const CAN_F1R1_FB6_Msk: u32 = 0x1 << CAN_F1R1_FB6_Pos;
pub const CAN_F1R1_FB6: u32 = CAN_F1R1_FB6_Msk;
pub const CAN_F1R1_FB7_Pos: u32 = 7;
pub const CAN_F1R1_FB7_Msk: u32 = 0x1 << CAN_F1R1_FB7_Pos;
pub const CAN_F1R1_FB7: u32 = CAN_F1R1_FB7_Msk;
pub const CAN_F1R1_FB8_Pos: u32 = 8;
pub const CAN_F1R1_FB8_Msk: u32 = 0x1 << CAN_F1R1_FB8_Pos;
pub const CAN_F1R1_FB8: u32 = CAN_F1R1_FB8_Msk;
pub const CAN_F1R1_FB9_Pos: u32 = 9;
pub const CAN_F1R1_FB9_Msk: u32 = 0x1 << CAN_F1R1_FB9_Pos;
pub const CAN_F1R1_FB9: u32 = CAN_F1R1_FB9_Msk;
pub const CAN_F1R1_FB10_Pos: u32 = 10;
pub const CAN_F1R1_FB10_Msk: u32 = 0x1 << CAN_F1R1_FB10_Pos;
pub const CAN_F1R1_FB10: u32 = CAN_F1R1_FB10_Msk;
pub const CAN_F1R1_FB11_Pos: u32 = 11;
pub const CAN_F1R1_FB11_Msk: u32 = 0x1 << CAN_F1R1_FB11_Pos;
pub const CAN_F1R1_FB11: u32 = CAN_F1R1_FB11_Msk;
pub const CAN_F1R1_FB12_Pos: u32 = 12;
pub const CAN_F1R1_FB12_Msk: u32 = 0x1 << CAN_F1R1_FB12_Pos;
pub const CAN_F1R1_FB12: u32 = CAN_F1R1_FB12_Msk;
pub const CAN_F1R1_FB13_Pos: u32 = 13;
pub const CAN_F1R1_FB13_Msk: u32 = 0x1 << CAN_F1R1_FB13_Pos;
pub const CAN_F1R1_FB13: u32 = CAN_F1R1_FB13_Msk;
pub const CAN_F1R1_FB14_Pos: u32 = 14;
pub const CAN_F1R1_FB14_Msk: u32 = 0x1 << CAN_F1R1_FB14_Pos;
pub const CAN_F1R1_FB14: u32 = CAN_F1R1_FB14_Msk;
pub const CAN_F1R1_FB15_Pos: u32 = 15;
pub const CAN_F1R1_FB15_Msk: u32 = 0x1 << CAN_F1R1_FB15_Pos;
pub const CAN_F1R1_FB15: u32 = CAN_F1R1_FB15_Msk;
pub const CAN_F1R1_FB16_Pos: u32 = 16;
pub const CAN_F1R1_FB16_Msk: u32 = 0x1 << CAN_F1R1_FB16_Pos;
pub const CAN_F1R1_FB16: u32 = CAN_F1R1_FB16_Msk;
pub const CAN_F1R1_FB17_Pos: u32 = 17;
pub const CAN_F1R1_FB17_Msk: u32 = 0x1 << CAN_F1R1_FB17_Pos;
pub const CAN_F1R1_FB17: u32 = CAN_F1R1_FB17_Msk;
pub const CAN_F1R1_FB18_Pos: u32 = 18;
pub const CAN_F1R1_FB18_Msk: u32 = 0x1 << CAN_F1R1_FB18_Pos;
pub const CAN_F1R1_FB18: u32 = CAN_F1R1_FB18_Msk;
pub const CAN_F1R1_FB19_Pos: u32 = 19;
pub const CAN_F1R1_FB19_Msk: u32 = 0x1 << CAN_F1R1_FB19_Pos;
pub const CAN_F1R1_FB19: u32 = CAN_F1R1_FB19_Msk;
pub const CAN_F1R1_FB20_Pos: u32 = 20;
pub const CAN_F1R1_FB20_Msk: u32 = 0x1 << CAN_F1R1_FB20_Pos;
pub const CAN_F1R1_FB20: u32 = CAN_F1R1_FB20_Msk;
pub const CAN_F1R1_FB21_Pos: u32 = 21;
pub const CAN_F1R1_FB21_Msk: u32 = 0x1 << CAN_F1R1_FB21_Pos;
pub const CAN_F1R1_FB21: u32 = CAN_F1R1_FB21_Msk;
pub const CAN_F1R1_FB22_Pos: u32 = 22;
pub const CAN_F1R1_FB22_Msk: u32 = 0x1 << CAN_F1R1_FB22_Pos;
pub const CAN_F1R1_FB22: u32 = CAN_F1R1_FB22_Msk;
pub const CAN_F1R1_FB23_Pos: u32 = 23;
pub const CAN_F1R1_FB23_Msk: u32 = 0x1 << CAN_F1R1_FB23_Pos;
pub const CAN_F1R1_FB23: u32 = CAN_F1R1_FB23_Msk;
pub const CAN_F1R1_FB24_Pos: u32 = 24;
pub const CAN_F1R1_FB24_Msk: u32 = 0x1 << CAN_F1R1_FB24_Pos;
pub const CAN_F1R1_FB24: u32 = CAN_F1R1_FB24_Msk;
pub const CAN_F1R1_FB25_Pos: u32 = 25;
pub const CAN_F1R1_FB25_Msk: u32 = 0x1 << CAN_F1R1_FB25_Pos;
pub const CAN_F1R1_FB25: u32 = CAN_F1R1_FB25_Msk;
pub const CAN_F1R1_FB26_Pos: u32 = 26;
pub const CAN_F1R1_FB26_Msk: u32 = 0x1 << CAN_F1R1_FB26_Pos;
pub const CAN_F1R1_FB26: u32 = CAN_F1R1_FB26_Msk;
pub const CAN_F1R1_FB27_Pos: u32 = 27;
pub const CAN_F1R1_FB27_Msk: u32 = 0x1 << CAN_F1R1_FB27_Pos;
pub const CAN_F1R1_FB27: u32 = CAN_F1R1_FB27_Msk;
pub const CAN_F1R1_FB28_Pos: u32 = 28;
pub const CAN_F1R1_FB28_Msk: u32 = 0x1 << CAN_F1R1_FB28_Pos;
pub const CAN_F1R1_FB28: u32 = CAN_F1R1_FB28_Msk;
pub const CAN_F1R1_FB29_Pos: u32 = 29;
pub const CAN_F1R1_FB29_Msk: u32 = 0x1 << CAN_F1R1_FB29_Pos;
pub const CAN_F1R1_FB29: u32 = CAN_F1R1_FB29_Msk;
pub const CAN_F1R1_FB30_Pos: u32 = 30;
pub const CAN_F1R1_FB30_Msk: u32 = 0x1 << CAN_F1R1_FB30_Pos;
pub const CAN_F1R1_FB30: u32 = CAN_F1R1_FB30_Msk;
pub const CAN_F1R1_FB31_Pos: u32 = 31;
pub const CAN_F1R1_FB31_Msk: u32 = 0x1 << CAN_F1R1_FB31_Pos;
pub const CAN_F1R1_FB31: u32 = CAN_F1R1_FB31_Msk;
pub const CAN_F2R1_FB0_Pos: u32 = 0;
pub const CAN_F2R1_FB0_Msk: u32 = 0x1 << CAN_F2R1_FB0_Pos;
pub const CAN_F2R1_FB0: u32 = CAN_F2R1_FB0_Msk;
pub const CAN_F2R1_FB1_Pos: u32 = 1;
pub const CAN_F2R1_FB1_Msk: u32 = 0x1 << CAN_F2R1_FB1_Pos;
pub const CAN_F2R1_FB1: u32 = CAN_F2R1_FB1_Msk;
pub const CAN_F2R1_FB2_Pos: u32 = 2;
pub const CAN_F2R1_FB2_Msk: u32 = 0x1 << CAN_F2R1_FB2_Pos;
pub const CAN_F2R1_FB2: u32 = CAN_F2R1_FB2_Msk;
pub const CAN_F2R1_FB3_Pos: u32 = 3;
pub const CAN_F2R1_FB3_Msk: u32 = 0x1 << CAN_F2R1_FB3_Pos;
pub const CAN_F2R1_FB3: u32 = CAN_F2R1_FB3_Msk;
pub const CAN_F2R1_FB4_Pos: u32 = 4;
pub const CAN_F2R1_FB4_Msk: u32 = 0x1 << CAN_F2R1_FB4_Pos;
pub const CAN_F2R1_FB4: u32 = CAN_F2R1_FB4_Msk;
pub const CAN_F2R1_FB5_Pos: u32 = 5;
pub const CAN_F2R1_FB5_Msk: u32 = 0x1 << CAN_F2R1_FB5_Pos;
pub const CAN_F2R1_FB5: u32 = CAN_F2R1_FB5_Msk;
pub const CAN_F2R1_FB6_Pos: u32 = 6;
pub const CAN_F2R1_FB6_Msk: u32 = 0x1 << CAN_F2R1_FB6_Pos;
pub const CAN_F2R1_FB6: u32 = CAN_F2R1_FB6_Msk;
pub const CAN_F2R1_FB7_Pos: u32 = 7;
pub const CAN_F2R1_FB7_Msk: u32 = 0x1 << CAN_F2R1_FB7_Pos;
pub const CAN_F2R1_FB7: u32 = CAN_F2R1_FB7_Msk;
pub const CAN_F2R1_FB8_Pos: u32 = 8;
pub const CAN_F2R1_FB8_Msk: u32 = 0x1 << CAN_F2R1_FB8_Pos;
pub const CAN_F2R1_FB8: u32 = CAN_F2R1_FB8_Msk;
pub const CAN_F2R1_FB9_Pos: u32 = 9;
pub const CAN_F2R1_FB9_Msk: u32 = 0x1 << CAN_F2R1_FB9_Pos;
pub const CAN_F2R1_FB9: u32 = CAN_F2R1_FB9_Msk;
pub const CAN_F2R1_FB10_Pos: u32 = 10;
pub const CAN_F2R1_FB10_Msk: u32 = 0x1 << CAN_F2R1_FB10_Pos;
pub const CAN_F2R1_FB10: u32 = CAN_F2R1_FB10_Msk;
pub const CAN_F2R1_FB11_Pos: u32 = 11;
pub const CAN_F2R1_FB11_Msk: u32 = 0x1 << CAN_F2R1_FB11_Pos;
pub const CAN_F2R1_FB11: u32 = CAN_F2R1_FB11_Msk;
pub const CAN_F2R1_FB12_Pos: u32 = 12;
pub const CAN_F2R1_FB12_Msk: u32 = 0x1 << CAN_F2R1_FB12_Pos;
pub const CAN_F2R1_FB12: u32 = CAN_F2R1_FB12_Msk;
pub const CAN_F2R1_FB13_Pos: u32 = 13;
pub const CAN_F2R1_FB13_Msk: u32 = 0x1 << CAN_F2R1_FB13_Pos;
pub const CAN_F2R1_FB13: u32 = CAN_F2R1_FB13_Msk;
pub const CAN_F2R1_FB14_Pos: u32 = 14;
pub const CAN_F2R1_FB14_Msk: u32 = 0x1 << CAN_F2R1_FB14_Pos;
pub const CAN_F2R1_FB14: u32 = CAN_F2R1_FB14_Msk;
pub const CAN_F2R1_FB15_Pos: u32 = 15;
pub const CAN_F2R1_FB15_Msk: u32 = 0x1 << CAN_F2R1_FB15_Pos;
pub const CAN_F2R1_FB15: u32 = CAN_F2R1_FB15_Msk;
pub const CAN_F2R1_FB16_Pos: u32 = 16;
pub const CAN_F2R1_FB16_Msk: u32 = 0x1 << CAN_F2R1_FB16_Pos;
pub const CAN_F2R1_FB16: u32 = CAN_F2R1_FB16_Msk;
pub const CAN_F2R1_FB17_Pos: u32 = 17;
pub const CAN_F2R1_FB17_Msk: u32 = 0x1 << CAN_F2R1_FB17_Pos;
pub const CAN_F2R1_FB17: u32 = CAN_F2R1_FB17_Msk;
pub const CAN_F2R1_FB18_Pos: u32 = 18;
pub const CAN_F2R1_FB18_Msk: u32 = 0x1 << CAN_F2R1_FB18_Pos;
pub const CAN_F2R1_FB18: u32 = CAN_F2R1_FB18_Msk;
pub const CAN_F2R1_FB19_Pos: u32 = 19;
pub const CAN_F2R1_FB19_Msk: u32 = 0x1 << CAN_F2R1_FB19_Pos;
pub const CAN_F2R1_FB19: u32 = CAN_F2R1_FB19_Msk;
pub const CAN_F2R1_FB20_Pos: u32 = 20;
pub const CAN_F2R1_FB20_Msk: u32 = 0x1 << CAN_F2R1_FB20_Pos;
pub const CAN_F2R1_FB20: u32 = CAN_F2R1_FB20_Msk;
pub const CAN_F2R1_FB21_Pos: u32 = 21;
pub const CAN_F2R1_FB21_Msk: u32 = 0x1 << CAN_F2R1_FB21_Pos;
pub const CAN_F2R1_FB21: u32 = CAN_F2R1_FB21_Msk;
pub const CAN_F2R1_FB22_Pos: u32 = 22;
pub const CAN_F2R1_FB22_Msk: u32 = 0x1 << CAN_F2R1_FB22_Pos;
pub const CAN_F2R1_FB22: u32 = CAN_F2R1_FB22_Msk;
pub const CAN_F2R1_FB23_Pos: u32 = 23;
pub const CAN_F2R1_FB23_Msk: u32 = 0x1 << CAN_F2R1_FB23_Pos;
pub const CAN_F2R1_FB23: u32 = CAN_F2R1_FB23_Msk;
pub const CAN_F2R1_FB24_Pos: u32 = 24;
pub const CAN_F2R1_FB24_Msk: u32 = 0x1 << CAN_F2R1_FB24_Pos;
pub const CAN_F2R1_FB24: u32 = CAN_F2R1_FB24_Msk;
pub const CAN_F2R1_FB25_Pos: u32 = 25;
pub const CAN_F2R1_FB25_Msk: u32 = 0x1 << CAN_F2R1_FB25_Pos;
pub const CAN_F2R1_FB25: u32 = CAN_F2R1_FB25_Msk;
pub const CAN_F2R1_FB26_Pos: u32 = 26;
pub const CAN_F2R1_FB26_Msk: u32 = 0x1 << CAN_F2R1_FB26_Pos;
pub const CAN_F2R1_FB26: u32 = CAN_F2R1_FB26_Msk;
pub const CAN_F2R1_FB27_Pos: u32 = 27;
pub const CAN_F2R1_FB27_Msk: u32 = 0x1 << CAN_F2R1_FB27_Pos;
pub const CAN_F2R1_FB27: u32 = CAN_F2R1_FB27_Msk;
pub const CAN_F2R1_FB28_Pos: u32 = 28;
pub const CAN_F2R1_FB28_Msk: u32 = 0x1 << CAN_F2R1_FB28_Pos;
pub const CAN_F2R1_FB28: u32 = CAN_F2R1_FB28_Msk;
pub const CAN_F2R1_FB29_Pos: u32 = 29;
pub const CAN_F2R1_FB29_Msk: u32 = 0x1 << CAN_F2R1_FB29_Pos;
pub const CAN_F2R1_FB29: u32 = CAN_F2R1_FB29_Msk;
pub const CAN_F2R1_FB30_Pos: u32 = 30;
pub const CAN_F2R1_FB30_Msk: u32 = 0x1 << CAN_F2R1_FB30_Pos;
pub const CAN_F2R1_FB30: u32 = CAN_F2R1_FB30_Msk;
pub const CAN_F2R1_FB31_Pos: u32 = 31;
pub const CAN_F2R1_FB31_Msk: u32 = 0x1 << CAN_F2R1_FB31_Pos;
pub const CAN_F2R1_FB31: u32 = CAN_F2R1_FB31_Msk;
pub const CAN_F3R1_FB0_Pos: u32 = 0;
pub const CAN_F3R1_FB0_Msk: u32 = 0x1 << CAN_F3R1_FB0_Pos;
pub const CAN_F3R1_FB0: u32 = CAN_F3R1_FB0_Msk;
pub const CAN_F3R1_FB1_Pos: u32 = 1;
pub const CAN_F3R1_FB1_Msk: u32 = 0x1 << CAN_F3R1_FB1_Pos;
pub const CAN_F3R1_FB1: u32 = CAN_F3R1_FB1_Msk;
pub const CAN_F3R1_FB2_Pos: u32 = 2;
pub const CAN_F3R1_FB2_Msk: u32 = 0x1 << CAN_F3R1_FB2_Pos;
pub const CAN_F3R1_FB2: u32 = CAN_F3R1_FB2_Msk;
pub const CAN_F3R1_FB3_Pos: u32 = 3;
pub const CAN_F3R1_FB3_Msk: u32 = 0x1 << CAN_F3R1_FB3_Pos;
pub const CAN_F3R1_FB3: u32 = CAN_F3R1_FB3_Msk;
pub const CAN_F3R1_FB4_Pos: u32 = 4;
pub const CAN_F3R1_FB4_Msk: u32 = 0x1 << CAN_F3R1_FB4_Pos;
pub const CAN_F3R1_FB4: u32 = CAN_F3R1_FB4_Msk;
pub const CAN_F3R1_FB5_Pos: u32 = 5;
pub const CAN_F3R1_FB5_Msk: u32 = 0x1 << CAN_F3R1_FB5_Pos;
pub const CAN_F3R1_FB5: u32 = CAN_F3R1_FB5_Msk;
pub const CAN_F3R1_FB6_Pos: u32 = 6;
pub const CAN_F3R1_FB6_Msk: u32 = 0x1 << CAN_F3R1_FB6_Pos;
pub const CAN_F3R1_FB6: u32 = CAN_F3R1_FB6_Msk;
pub const CAN_F3R1_FB7_Pos: u32 = 7;
pub const CAN_F3R1_FB7_Msk: u32 = 0x1 << CAN_F3R1_FB7_Pos;
pub const CAN_F3R1_FB7: u32 = CAN_F3R1_FB7_Msk;
pub const CAN_F3R1_FB8_Pos: u32 = 8;
pub const CAN_F3R1_FB8_Msk: u32 = 0x1 << CAN_F3R1_FB8_Pos;
pub const CAN_F3R1_FB8: u32 = CAN_F3R1_FB8_Msk;
pub const CAN_F3R1_FB9_Pos: u32 = 9;
pub const CAN_F3R1_FB9_Msk: u32 = 0x1 << CAN_F3R1_FB9_Pos;
pub const CAN_F3R1_FB9: u32 = CAN_F3R1_FB9_Msk;
pub const CAN_F3R1_FB10_Pos: u32 = 10;
pub const CAN_F3R1_FB10_Msk: u32 = 0x1 << CAN_F3R1_FB10_Pos;
pub const CAN_F3R1_FB10: u32 = CAN_F3R1_FB10_Msk;
pub const CAN_F3R1_FB11_Pos: u32 = 11;
pub const CAN_F3R1_FB11_Msk: u32 = 0x1 << CAN_F3R1_FB11_Pos;
pub const CAN_F3R1_FB11: u32 = CAN_F3R1_FB11_Msk;
pub const CAN_F3R1_FB12_Pos: u32 = 12;
pub const CAN_F3R1_FB12_Msk: u32 = 0x1 << CAN_F3R1_FB12_Pos;
pub const CAN_F3R1_FB12: u32 = CAN_F3R1_FB12_Msk;
pub const CAN_F3R1_FB13_Pos: u32 = 13;
pub const CAN_F3R1_FB13_Msk: u32 = 0x1 << CAN_F3R1_FB13_Pos;
pub const CAN_F3R1_FB13: u32 = CAN_F3R1_FB13_Msk;
pub const CAN_F3R1_FB14_Pos: u32 = 14;
pub const CAN_F3R1_FB14_Msk: u32 = 0x1 << CAN_F3R1_FB14_Pos;
pub const CAN_F3R1_FB14: u32 = CAN_F3R1_FB14_Msk;
pub const CAN_F3R1_FB15_Pos: u32 = 15;
pub const CAN_F3R1_FB15_Msk: u32 = 0x1 << CAN_F3R1_FB15_Pos;
pub const CAN_F3R1_FB15: u32 = CAN_F3R1_FB15_Msk;
pub const CAN_F3R1_FB16_Pos: u32 = 16;
pub const CAN_F3R1_FB16_Msk: u32 = 0x1 << CAN_F3R1_FB16_Pos;
pub const CAN_F3R1_FB16: u32 = CAN_F3R1_FB16_Msk;
pub const CAN_F3R1_FB17_Pos: u32 = 17;
pub const CAN_F3R1_FB17_Msk: u32 = 0x1 << CAN_F3R1_FB17_Pos;
pub const CAN_F3R1_FB17: u32 = CAN_F3R1_FB17_Msk;
pub const CAN_F3R1_FB18_Pos: u32 = 18;
pub const CAN_F3R1_FB18_Msk: u32 = 0x1 << CAN_F3R1_FB18_Pos;
pub const CAN_F3R1_FB18: u32 = CAN_F3R1_FB18_Msk;
pub const CAN_F3R1_FB19_Pos: u32 = 19;
pub const CAN_F3R1_FB19_Msk: u32 = 0x1 << CAN_F3R1_FB19_Pos;
pub const CAN_F3R1_FB19: u32 = CAN_F3R1_FB19_Msk;
pub const CAN_F3R1_FB20_Pos: u32 = 20;
pub const CAN_F3R1_FB20_Msk: u32 = 0x1 << CAN_F3R1_FB20_Pos;
pub const CAN_F3R1_FB20: u32 = CAN_F3R1_FB20_Msk;
pub const CAN_F3R1_FB21_Pos: u32 = 21;
pub const CAN_F3R1_FB21_Msk: u32 = 0x1 << CAN_F3R1_FB21_Pos;
pub const CAN_F3R1_FB21: u32 = CAN_F3R1_FB21_Msk;
pub const CAN_F3R1_FB22_Pos: u32 = 22;
pub const CAN_F3R1_FB22_Msk: u32 = 0x1 << CAN_F3R1_FB22_Pos;
pub const CAN_F3R1_FB22: u32 = CAN_F3R1_FB22_Msk;
pub const CAN_F3R1_FB23_Pos: u32 = 23;
pub const CAN_F3R1_FB23_Msk: u32 = 0x1 << CAN_F3R1_FB23_Pos;
pub const CAN_F3R1_FB23: u32 = CAN_F3R1_FB23_Msk;
pub const CAN_F3R1_FB24_Pos: u32 = 24;
pub const CAN_F3R1_FB24_Msk: u32 = 0x1 << CAN_F3R1_FB24_Pos;
pub const CAN_F3R1_FB24: u32 = CAN_F3R1_FB24_Msk;
pub const CAN_F3R1_FB25_Pos: u32 = 25;
pub const CAN_F3R1_FB25_Msk: u32 = 0x1 << CAN_F3R1_FB25_Pos;
pub const CAN_F3R1_FB25: u32 = CAN_F3R1_FB25_Msk;
pub const CAN_F3R1_FB26_Pos: u32 = 26;
pub const CAN_F3R1_FB26_Msk: u32 = 0x1 << CAN_F3R1_FB26_Pos;
pub const CAN_F3R1_FB26: u32 = CAN_F3R1_FB26_Msk;
pub const CAN_F3R1_FB27_Pos: u32 = 27;
pub const CAN_F3R1_FB27_Msk: u32 = 0x1 << CAN_F3R1_FB27_Pos;
pub const CAN_F3R1_FB27: u32 = CAN_F3R1_FB27_Msk;
pub const CAN_F3R1_FB28_Pos: u32 = 28;
pub const CAN_F3R1_FB28_Msk: u32 = 0x1 << CAN_F3R1_FB28_Pos;
pub const CAN_F3R1_FB28: u32 = CAN_F3R1_FB28_Msk;
pub const CAN_F3R1_FB29_Pos: u32 = 29;
pub const CAN_F3R1_FB29_Msk: u32 = 0x1 << CAN_F3R1_FB29_Pos;
pub const CAN_F3R1_FB29: u32 = CAN_F3R1_FB29_Msk;
pub const CAN_F3R1_FB30_Pos: u32 = 30;
pub const CAN_F3R1_FB30_Msk: u32 = 0x1 << CAN_F3R1_FB30_Pos;
pub const CAN_F3R1_FB30: u32 = CAN_F3R1_FB30_Msk;
pub const CAN_F3R1_FB31_Pos: u32 = 31;
pub const CAN_F3R1_FB31_Msk: u32 = 0x1 << CAN_F3R1_FB31_Pos;
pub const CAN_F3R1_FB31: u32 = CAN_F3R1_FB31_Msk;
pub const CAN_F4R1_FB0_Pos: u32 = 0;
pub const CAN_F4R1_FB0_Msk: u32 = 0x1 << CAN_F4R1_FB0_Pos;
pub const CAN_F4R1_FB0: u32 = CAN_F4R1_FB0_Msk;
pub const CAN_F4R1_FB1_Pos: u32 = 1;
pub const CAN_F4R1_FB1_Msk: u32 = 0x1 << CAN_F4R1_FB1_Pos;
pub const CAN_F4R1_FB1: u32 = CAN_F4R1_FB1_Msk;
pub const CAN_F4R1_FB2_Pos: u32 = 2;
pub const CAN_F4R1_FB2_Msk: u32 = 0x1 << CAN_F4R1_FB2_Pos;
pub const CAN_F4R1_FB2: u32 = CAN_F4R1_FB2_Msk;
pub const CAN_F4R1_FB3_Pos: u32 = 3;
pub const CAN_F4R1_FB3_Msk: u32 = 0x1 << CAN_F4R1_FB3_Pos;
pub const CAN_F4R1_FB3: u32 = CAN_F4R1_FB3_Msk;
pub const CAN_F4R1_FB4_Pos: u32 = 4;
pub const CAN_F4R1_FB4_Msk: u32 = 0x1 << CAN_F4R1_FB4_Pos;
pub const CAN_F4R1_FB4: u32 = CAN_F4R1_FB4_Msk;
pub const CAN_F4R1_FB5_Pos: u32 = 5;
pub const CAN_F4R1_FB5_Msk: u32 = 0x1 << CAN_F4R1_FB5_Pos;
pub const CAN_F4R1_FB5: u32 = CAN_F4R1_FB5_Msk;
pub const CAN_F4R1_FB6_Pos: u32 = 6;
pub const CAN_F4R1_FB6_Msk: u32 = 0x1 << CAN_F4R1_FB6_Pos;
pub const CAN_F4R1_FB6: u32 = CAN_F4R1_FB6_Msk;
pub const CAN_F4R1_FB7_Pos: u32 = 7;
pub const CAN_F4R1_FB7_Msk: u32 = 0x1 << CAN_F4R1_FB7_Pos;
pub const CAN_F4R1_FB7: u32 = CAN_F4R1_FB7_Msk;
pub const CAN_F4R1_FB8_Pos: u32 = 8;
pub const CAN_F4R1_FB8_Msk: u32 = 0x1 << CAN_F4R1_FB8_Pos;
pub const CAN_F4R1_FB8: u32 = CAN_F4R1_FB8_Msk;
pub const CAN_F4R1_FB9_Pos: u32 = 9;
pub const CAN_F4R1_FB9_Msk: u32 = 0x1 << CAN_F4R1_FB9_Pos;
pub const CAN_F4R1_FB9: u32 = CAN_F4R1_FB9_Msk;
pub const CAN_F4R1_FB10_Pos: u32 = 10;
pub const CAN_F4R1_FB10_Msk: u32 = 0x1 << CAN_F4R1_FB10_Pos;
pub const CAN_F4R1_FB10: u32 = CAN_F4R1_FB10_Msk;
pub const CAN_F4R1_FB11_Pos: u32 = 11;
pub const CAN_F4R1_FB11_Msk: u32 = 0x1 << CAN_F4R1_FB11_Pos;
pub const CAN_F4R1_FB11: u32 = CAN_F4R1_FB11_Msk;
pub const CAN_F4R1_FB12_Pos: u32 = 12;
pub const CAN_F4R1_FB12_Msk: u32 = 0x1 << CAN_F4R1_FB12_Pos;
pub const CAN_F4R1_FB12: u32 = CAN_F4R1_FB12_Msk;
pub const CAN_F4R1_FB13_Pos: u32 = 13;
pub const CAN_F4R1_FB13_Msk: u32 = 0x1 << CAN_F4R1_FB13_Pos;
pub const CAN_F4R1_FB13: u32 = CAN_F4R1_FB13_Msk;
pub const CAN_F4R1_FB14_Pos: u32 = 14;
pub const CAN_F4R1_FB14_Msk: u32 = 0x1 << CAN_F4R1_FB14_Pos;
pub const CAN_F4R1_FB14: u32 = CAN_F4R1_FB14_Msk;
pub const CAN_F4R1_FB15_Pos: u32 = 15;
pub const CAN_F4R1_FB15_Msk: u32 = 0x1 << CAN_F4R1_FB15_Pos;
pub const CAN_F4R1_FB15: u32 = CAN_F4R1_FB15_Msk;
pub const CAN_F4R1_FB16_Pos: u32 = 16;
pub const CAN_F4R1_FB16_Msk: u32 = 0x1 << CAN_F4R1_FB16_Pos;
pub const CAN_F4R1_FB16: u32 = CAN_F4R1_FB16_Msk;
pub const CAN_F4R1_FB17_Pos: u32 = 17;
pub const CAN_F4R1_FB17_Msk: u32 = 0x1 << CAN_F4R1_FB17_Pos;
pub const CAN_F4R1_FB17: u32 = CAN_F4R1_FB17_Msk;
pub const CAN_F4R1_FB18_Pos: u32 = 18;
pub const CAN_F4R1_FB18_Msk: u32 = 0x1 << CAN_F4R1_FB18_Pos;
pub const CAN_F4R1_FB18: u32 = CAN_F4R1_FB18_Msk;
pub const CAN_F4R1_FB19_Pos: u32 = 19;
pub const CAN_F4R1_FB19_Msk: u32 = 0x1 << CAN_F4R1_FB19_Pos;
pub const CAN_F4R1_FB19: u32 = CAN_F4R1_FB19_Msk;
pub const CAN_F4R1_FB20_Pos: u32 = 20;
pub const CAN_F4R1_FB20_Msk: u32 = 0x1 << CAN_F4R1_FB20_Pos;
pub const CAN_F4R1_FB20: u32 = CAN_F4R1_FB20_Msk;
pub const CAN_F4R1_FB21_Pos: u32 = 21;
pub const CAN_F4R1_FB21_Msk: u32 = 0x1 << CAN_F4R1_FB21_Pos;
pub const CAN_F4R1_FB21: u32 = CAN_F4R1_FB21_Msk;
pub const CAN_F4R1_FB22_Pos: u32 = 22;
pub const CAN_F4R1_FB22_Msk: u32 = 0x1 << CAN_F4R1_FB22_Pos;
pub const CAN_F4R1_FB22: u32 = CAN_F4R1_FB22_Msk;
pub const CAN_F4R1_FB23_Pos: u32 = 23;
pub const CAN_F4R1_FB23_Msk: u32 = 0x1 << CAN_F4R1_FB23_Pos;
pub const CAN_F4R1_FB23: u32 = CAN_F4R1_FB23_Msk;
pub const CAN_F4R1_FB24_Pos: u32 = 24;
pub const CAN_F4R1_FB24_Msk: u32 = 0x1 << CAN_F4R1_FB24_Pos;
pub const CAN_F4R1_FB24: u32 = CAN_F4R1_FB24_Msk;
pub const CAN_F4R1_FB25_Pos: u32 = 25;
pub const CAN_F4R1_FB25_Msk: u32 = 0x1 << CAN_F4R1_FB25_Pos;
pub const CAN_F4R1_FB25: u32 = CAN_F4R1_FB25_Msk;
pub const CAN_F4R1_FB26_Pos: u32 = 26;
pub const CAN_F4R1_FB26_Msk: u32 = 0x1 << CAN_F4R1_FB26_Pos;
pub const CAN_F4R1_FB26: u32 = CAN_F4R1_FB26_Msk;
pub const CAN_F4R1_FB27_Pos: u32 = 27;
pub const CAN_F4R1_FB27_Msk: u32 = 0x1 << CAN_F4R1_FB27_Pos;
pub const CAN_F4R1_FB27: u32 = CAN_F4R1_FB27_Msk;
pub const CAN_F4R1_FB28_Pos: u32 = 28;
pub const CAN_F4R1_FB28_Msk: u32 = 0x1 << CAN_F4R1_FB28_Pos;
pub const CAN_F4R1_FB28: u32 = CAN_F4R1_FB28_Msk;
pub const CAN_F4R1_FB29_Pos: u32 = 29;
pub const CAN_F4R1_FB29_Msk: u32 = 0x1 << CAN_F4R1_FB29_Pos;
pub const CAN_F4R1_FB29: u32 = CAN_F4R1_FB29_Msk;
pub const CAN_F4R1_FB30_Pos: u32 = 30;
pub const CAN_F4R1_FB30_Msk: u32 = 0x1 << CAN_F4R1_FB30_Pos;
pub const CAN_F4R1_FB30: u32 = CAN_F4R1_FB30_Msk;
pub const CAN_F4R1_FB31_Pos: u32 = 31;
pub const CAN_F4R1_FB31_Msk: u32 = 0x1 << CAN_F4R1_FB31_Pos;
pub const CAN_F4R1_FB31: u32 = CAN_F4R1_FB31_Msk;
pub const CAN_F5R1_FB0_Pos: u32 = 0;
pub const CAN_F5R1_FB0_Msk: u32 = 0x1 << CAN_F5R1_FB0_Pos;
pub const CAN_F5R1_FB0: u32 = CAN_F5R1_FB0_Msk;
pub const CAN_F5R1_FB1_Pos: u32 = 1;
pub const CAN_F5R1_FB1_Msk: u32 = 0x1 << CAN_F5R1_FB1_Pos;
pub const CAN_F5R1_FB1: u32 = CAN_F5R1_FB1_Msk;
pub const CAN_F5R1_FB2_Pos: u32 = 2;
pub const CAN_F5R1_FB2_Msk: u32 = 0x1 << CAN_F5R1_FB2_Pos;
pub const CAN_F5R1_FB2: u32 = CAN_F5R1_FB2_Msk;
pub const CAN_F5R1_FB3_Pos: u32 = 3;
pub const CAN_F5R1_FB3_Msk: u32 = 0x1 << CAN_F5R1_FB3_Pos;
pub const CAN_F5R1_FB3: u32 = CAN_F5R1_FB3_Msk;
pub const CAN_F5R1_FB4_Pos: u32 = 4;
pub const CAN_F5R1_FB4_Msk: u32 = 0x1 << CAN_F5R1_FB4_Pos;
pub const CAN_F5R1_FB4: u32 = CAN_F5R1_FB4_Msk;
pub const CAN_F5R1_FB5_Pos: u32 = 5;
pub const CAN_F5R1_FB5_Msk: u32 = 0x1 << CAN_F5R1_FB5_Pos;
pub const CAN_F5R1_FB5: u32 = CAN_F5R1_FB5_Msk;
pub const CAN_F5R1_FB6_Pos: u32 = 6;
pub const CAN_F5R1_FB6_Msk: u32 = 0x1 << CAN_F5R1_FB6_Pos;
pub const CAN_F5R1_FB6: u32 = CAN_F5R1_FB6_Msk;
pub const CAN_F5R1_FB7_Pos: u32 = 7;
pub const CAN_F5R1_FB7_Msk: u32 = 0x1 << CAN_F5R1_FB7_Pos;
pub const CAN_F5R1_FB7: u32 = CAN_F5R1_FB7_Msk;
pub const CAN_F5R1_FB8_Pos: u32 = 8;
pub const CAN_F5R1_FB8_Msk: u32 = 0x1 << CAN_F5R1_FB8_Pos;
pub const CAN_F5R1_FB8: u32 = CAN_F5R1_FB8_Msk;
pub const CAN_F5R1_FB9_Pos: u32 = 9;
pub const CAN_F5R1_FB9_Msk: u32 = 0x1 << CAN_F5R1_FB9_Pos;
pub const CAN_F5R1_FB9: u32 = CAN_F5R1_FB9_Msk;
pub const CAN_F5R1_FB10_Pos: u32 = 10;
pub const CAN_F5R1_FB10_Msk: u32 = 0x1 << CAN_F5R1_FB10_Pos;
pub const CAN_F5R1_FB10: u32 = CAN_F5R1_FB10_Msk;
pub const CAN_F5R1_FB11_Pos: u32 = 11;
pub const CAN_F5R1_FB11_Msk: u32 = 0x1 << CAN_F5R1_FB11_Pos;
pub const CAN_F5R1_FB11: u32 = CAN_F5R1_FB11_Msk;
pub const CAN_F5R1_FB12_Pos: u32 = 12;
pub const CAN_F5R1_FB12_Msk: u32 = 0x1 << CAN_F5R1_FB12_Pos;
pub const CAN_F5R1_FB12: u32 = CAN_F5R1_FB12_Msk;
pub const CAN_F5R1_FB13_Pos: u32 = 13;
pub const CAN_F5R1_FB13_Msk: u32 = 0x1 << CAN_F5R1_FB13_Pos;
pub const CAN_F5R1_FB13: u32 = CAN_F5R1_FB13_Msk;
pub const CAN_F5R1_FB14_Pos: u32 = 14;
pub const CAN_F5R1_FB14_Msk: u32 = 0x1 << CAN_F5R1_FB14_Pos;
pub const CAN_F5R1_FB14: u32 = CAN_F5R1_FB14_Msk;
pub const CAN_F5R1_FB15_Pos: u32 = 15;
pub const CAN_F5R1_FB15_Msk: u32 = 0x1 << CAN_F5R1_FB15_Pos;
pub const CAN_F5R1_FB15: u32 = CAN_F5R1_FB15_Msk;
pub const CAN_F5R1_FB16_Pos: u32 = 16;
pub const CAN_F5R1_FB16_Msk: u32 = 0x1 << CAN_F5R1_FB16_Pos;
pub const CAN_F5R1_FB16: u32 = CAN_F5R1_FB16_Msk;
pub const CAN_F5R1_FB17_Pos: u32 = 17;
pub const CAN_F5R1_FB17_Msk: u32 = 0x1 << CAN_F5R1_FB17_Pos;
pub const CAN_F5R1_FB17: u32 = CAN_F5R1_FB17_Msk;
pub const CAN_F5R1_FB18_Pos: u32 = 18;
pub const CAN_F5R1_FB18_Msk: u32 = 0x1 << CAN_F5R1_FB18_Pos;
pub const CAN_F5R1_FB18: u32 = CAN_F5R1_FB18_Msk;
pub const CAN_F5R1_FB19_Pos: u32 = 19;
pub const CAN_F5R1_FB19_Msk: u32 = 0x1 << CAN_F5R1_FB19_Pos;
pub const CAN_F5R1_FB19: u32 = CAN_F5R1_FB19_Msk;
pub const CAN_F5R1_FB20_Pos: u32 = 20;
pub const CAN_F5R1_FB20_Msk: u32 = 0x1 << CAN_F5R1_FB20_Pos;
pub const CAN_F5R1_FB20: u32 = CAN_F5R1_FB20_Msk;
pub const CAN_F5R1_FB21_Pos: u32 = 21;
pub const CAN_F5R1_FB21_Msk: u32 = 0x1 << CAN_F5R1_FB21_Pos;
pub const CAN_F5R1_FB21: u32 = CAN_F5R1_FB21_Msk;
pub const CAN_F5R1_FB22_Pos: u32 = 22;
pub const CAN_F5R1_FB22_Msk: u32 = 0x1 << CAN_F5R1_FB22_Pos;
pub const CAN_F5R1_FB22: u32 = CAN_F5R1_FB22_Msk;
pub const CAN_F5R1_FB23_Pos: u32 = 23;
pub const CAN_F5R1_FB23_Msk: u32 = 0x1 << CAN_F5R1_FB23_Pos;
pub const CAN_F5R1_FB23: u32 = CAN_F5R1_FB23_Msk;
pub const CAN_F5R1_FB24_Pos: u32 = 24;
pub const CAN_F5R1_FB24_Msk: u32 = 0x1 << CAN_F5R1_FB24_Pos;
pub const CAN_F5R1_FB24: u32 = CAN_F5R1_FB24_Msk;
pub const CAN_F5R1_FB25_Pos: u32 = 25;
pub const CAN_F5R1_FB25_Msk: u32 = 0x1 << CAN_F5R1_FB25_Pos;
pub const CAN_F5R1_FB25: u32 = CAN_F5R1_FB25_Msk;
pub const CAN_F5R1_FB26_Pos: u32 = 26;
pub const CAN_F5R1_FB26_Msk: u32 = 0x1 << CAN_F5R1_FB26_Pos;
pub const CAN_F5R1_FB26: u32 = CAN_F5R1_FB26_Msk;
pub const CAN_F5R1_FB27_Pos: u32 = 27;
pub const CAN_F5R1_FB27_Msk: u32 = 0x1 << CAN_F5R1_FB27_Pos;
pub const CAN_F5R1_FB27: u32 = CAN_F5R1_FB27_Msk;
pub const CAN_F5R1_FB28_Pos: u32 = 28;
pub const CAN_F5R1_FB28_Msk: u32 = 0x1 << CAN_F5R1_FB28_Pos;
pub const CAN_F5R1_FB28: u32 = CAN_F5R1_FB28_Msk;
pub const CAN_F5R1_FB29_Pos: u32 = 29;
pub const CAN_F5R1_FB29_Msk: u32 = 0x1 << CAN_F5R1_FB29_Pos;
pub const CAN_F5R1_FB29: u32 = CAN_F5R1_FB29_Msk;
pub const CAN_F5R1_FB30_Pos: u32 = 30;
pub const CAN_F5R1_FB30_Msk: u32 = 0x1 << CAN_F5R1_FB30_Pos;
pub const CAN_F5R1_FB30: u32 = CAN_F5R1_FB30_Msk;
pub const CAN_F5R1_FB31_Pos: u32 = 31;
pub const CAN_F5R1_FB31_Msk: u32 = 0x1 << CAN_F5R1_FB31_Pos;
pub const CAN_F5R1_FB31: u32 = CAN_F5R1_FB31_Msk;
pub const CAN_F6R1_FB0_Pos: u32 = 0;
pub const CAN_F6R1_FB0_Msk: u32 = 0x1 << CAN_F6R1_FB0_Pos;
pub const CAN_F6R1_FB0: u32 = CAN_F6R1_FB0_Msk;
pub const CAN_F6R1_FB1_Pos: u32 = 1;
pub const CAN_F6R1_FB1_Msk: u32 = 0x1 << CAN_F6R1_FB1_Pos;
pub const CAN_F6R1_FB1: u32 = CAN_F6R1_FB1_Msk;
pub const CAN_F6R1_FB2_Pos: u32 = 2;
pub const CAN_F6R1_FB2_Msk: u32 = 0x1 << CAN_F6R1_FB2_Pos;
pub const CAN_F6R1_FB2: u32 = CAN_F6R1_FB2_Msk;
pub const CAN_F6R1_FB3_Pos: u32 = 3;
pub const CAN_F6R1_FB3_Msk: u32 = 0x1 << CAN_F6R1_FB3_Pos;
pub const CAN_F6R1_FB3: u32 = CAN_F6R1_FB3_Msk;
pub const CAN_F6R1_FB4_Pos: u32 = 4;
pub const CAN_F6R1_FB4_Msk: u32 = 0x1 << CAN_F6R1_FB4_Pos;
pub const CAN_F6R1_FB4: u32 = CAN_F6R1_FB4_Msk;
pub const CAN_F6R1_FB5_Pos: u32 = 5;
pub const CAN_F6R1_FB5_Msk: u32 = 0x1 << CAN_F6R1_FB5_Pos;
pub const CAN_F6R1_FB5: u32 = CAN_F6R1_FB5_Msk;
pub const CAN_F6R1_FB6_Pos: u32 = 6;
pub const CAN_F6R1_FB6_Msk: u32 = 0x1 << CAN_F6R1_FB6_Pos;
pub const CAN_F6R1_FB6: u32 = CAN_F6R1_FB6_Msk;
pub const CAN_F6R1_FB7_Pos: u32 = 7;
pub const CAN_F6R1_FB7_Msk: u32 = 0x1 << CAN_F6R1_FB7_Pos;
pub const CAN_F6R1_FB7: u32 = CAN_F6R1_FB7_Msk;
pub const CAN_F6R1_FB8_Pos: u32 = 8;
pub const CAN_F6R1_FB8_Msk: u32 = 0x1 << CAN_F6R1_FB8_Pos;
pub const CAN_F6R1_FB8: u32 = CAN_F6R1_FB8_Msk;
pub const CAN_F6R1_FB9_Pos: u32 = 9;
pub const CAN_F6R1_FB9_Msk: u32 = 0x1 << CAN_F6R1_FB9_Pos;
pub const CAN_F6R1_FB9: u32 = CAN_F6R1_FB9_Msk;
pub const CAN_F6R1_FB10_Pos: u32 = 10;
pub const CAN_F6R1_FB10_Msk: u32 = 0x1 << CAN_F6R1_FB10_Pos;
pub const CAN_F6R1_FB10: u32 = CAN_F6R1_FB10_Msk;
pub const CAN_F6R1_FB11_Pos: u32 = 11;
pub const CAN_F6R1_FB11_Msk: u32 = 0x1 << CAN_F6R1_FB11_Pos;
pub const CAN_F6R1_FB11: u32 = CAN_F6R1_FB11_Msk;
pub const CAN_F6R1_FB12_Pos: u32 = 12;
pub const CAN_F6R1_FB12_Msk: u32 = 0x1 << CAN_F6R1_FB12_Pos;
pub const CAN_F6R1_FB12: u32 = CAN_F6R1_FB12_Msk;
pub const CAN_F6R1_FB13_Pos: u32 = 13;
pub const CAN_F6R1_FB13_Msk: u32 = 0x1 << CAN_F6R1_FB13_Pos;
pub const CAN_F6R1_FB13: u32 = CAN_F6R1_FB13_Msk;
pub const CAN_F6R1_FB14_Pos: u32 = 14;
pub const CAN_F6R1_FB14_Msk: u32 = 0x1 << CAN_F6R1_FB14_Pos;
pub const CAN_F6R1_FB14: u32 = CAN_F6R1_FB14_Msk;
pub const CAN_F6R1_FB15_Pos: u32 = 15;
pub const CAN_F6R1_FB15_Msk: u32 = 0x1 << CAN_F6R1_FB15_Pos;
pub const CAN_F6R1_FB15: u32 = CAN_F6R1_FB15_Msk;
pub const CAN_F6R1_FB16_Pos: u32 = 16;
pub const CAN_F6R1_FB16_Msk: u32 = 0x1 << CAN_F6R1_FB16_Pos;
pub const CAN_F6R1_FB16: u32 = CAN_F6R1_FB16_Msk;
pub const CAN_F6R1_FB17_Pos: u32 = 17;
pub const CAN_F6R1_FB17_Msk: u32 = 0x1 << CAN_F6R1_FB17_Pos;
pub const CAN_F6R1_FB17: u32 = CAN_F6R1_FB17_Msk;
pub const CAN_F6R1_FB18_Pos: u32 = 18;
pub const CAN_F6R1_FB18_Msk: u32 = 0x1 << CAN_F6R1_FB18_Pos;
pub const CAN_F6R1_FB18: u32 = CAN_F6R1_FB18_Msk;
pub const CAN_F6R1_FB19_Pos: u32 = 19;
pub const CAN_F6R1_FB19_Msk: u32 = 0x1 << CAN_F6R1_FB19_Pos;
pub const CAN_F6R1_FB19: u32 = CAN_F6R1_FB19_Msk;
pub const CAN_F6R1_FB20_Pos: u32 = 20;
pub const CAN_F6R1_FB20_Msk: u32 = 0x1 << CAN_F6R1_FB20_Pos;
pub const CAN_F6R1_FB20: u32 = CAN_F6R1_FB20_Msk;
pub const CAN_F6R1_FB21_Pos: u32 = 21;
pub const CAN_F6R1_FB21_Msk: u32 = 0x1 << CAN_F6R1_FB21_Pos;
pub const CAN_F6R1_FB21: u32 = CAN_F6R1_FB21_Msk;
pub const CAN_F6R1_FB22_Pos: u32 = 22;
pub const CAN_F6R1_FB22_Msk: u32 = 0x1 << CAN_F6R1_FB22_Pos;
pub const CAN_F6R1_FB22: u32 = CAN_F6R1_FB22_Msk;
pub const CAN_F6R1_FB23_Pos: u32 = 23;
pub const CAN_F6R1_FB23_Msk: u32 = 0x1 << CAN_F6R1_FB23_Pos;
pub const CAN_F6R1_FB23: u32 = CAN_F6R1_FB23_Msk;
pub const CAN_F6R1_FB24_Pos: u32 = 24;
pub const CAN_F6R1_FB24_Msk: u32 = 0x1 << CAN_F6R1_FB24_Pos;
pub const CAN_F6R1_FB24: u32 = CAN_F6R1_FB24_Msk;
pub const CAN_F6R1_FB25_Pos: u32 = 25;
pub const CAN_F6R1_FB25_Msk: u32 = 0x1 << CAN_F6R1_FB25_Pos;
pub const CAN_F6R1_FB25: u32 = CAN_F6R1_FB25_Msk;
pub const CAN_F6R1_FB26_Pos: u32 = 26;
pub const CAN_F6R1_FB26_Msk: u32 = 0x1 << CAN_F6R1_FB26_Pos;
pub const CAN_F6R1_FB26: u32 = CAN_F6R1_FB26_Msk;
pub const CAN_F6R1_FB27_Pos: u32 = 27;
pub const CAN_F6R1_FB27_Msk: u32 = 0x1 << CAN_F6R1_FB27_Pos;
pub const CAN_F6R1_FB27: u32 = CAN_F6R1_FB27_Msk;
pub const CAN_F6R1_FB28_Pos: u32 = 28;
pub const CAN_F6R1_FB28_Msk: u32 = 0x1 << CAN_F6R1_FB28_Pos;
pub const CAN_F6R1_FB28: u32 = CAN_F6R1_FB28_Msk;
pub const CAN_F6R1_FB29_Pos: u32 = 29;
pub const CAN_F6R1_FB29_Msk: u32 = 0x1 << CAN_F6R1_FB29_Pos;
pub const CAN_F6R1_FB29: u32 = CAN_F6R1_FB29_Msk;
pub const CAN_F6R1_FB30_Pos: u32 = 30;
pub const CAN_F6R1_FB30_Msk: u32 = 0x1 << CAN_F6R1_FB30_Pos;
pub const CAN_F6R1_FB30: u32 = CAN_F6R1_FB30_Msk;
pub const CAN_F6R1_FB31_Pos: u32 = 31;
pub const CAN_F6R1_FB31_Msk: u32 = 0x1 << CAN_F6R1_FB31_Pos;
pub const CAN_F6R1_FB31: u32 = CAN_F6R1_FB31_Msk;
pub const CAN_F7R1_FB0_Pos: u32 = 0;
pub const CAN_F7R1_FB0_Msk: u32 = 0x1 << CAN_F7R1_FB0_Pos;
pub const CAN_F7R1_FB0: u32 = CAN_F7R1_FB0_Msk;
pub const CAN_F7R1_FB1_Pos: u32 = 1;
pub const CAN_F7R1_FB1_Msk: u32 = 0x1 << CAN_F7R1_FB1_Pos;
pub const CAN_F7R1_FB1: u32 = CAN_F7R1_FB1_Msk;
pub const CAN_F7R1_FB2_Pos: u32 = 2;
pub const CAN_F7R1_FB2_Msk: u32 = 0x1 << CAN_F7R1_FB2_Pos;
pub const CAN_F7R1_FB2: u32 = CAN_F7R1_FB2_Msk;
pub const CAN_F7R1_FB3_Pos: u32 = 3;
pub const CAN_F7R1_FB3_Msk: u32 = 0x1 << CAN_F7R1_FB3_Pos;
pub const CAN_F7R1_FB3: u32 = CAN_F7R1_FB3_Msk;
pub const CAN_F7R1_FB4_Pos: u32 = 4;
pub const CAN_F7R1_FB4_Msk: u32 = 0x1 << CAN_F7R1_FB4_Pos;
pub const CAN_F7R1_FB4: u32 = CAN_F7R1_FB4_Msk;
pub const CAN_F7R1_FB5_Pos: u32 = 5;
pub const CAN_F7R1_FB5_Msk: u32 = 0x1 << CAN_F7R1_FB5_Pos;
pub const CAN_F7R1_FB5: u32 = CAN_F7R1_FB5_Msk;
pub const CAN_F7R1_FB6_Pos: u32 = 6;
pub const CAN_F7R1_FB6_Msk: u32 = 0x1 << CAN_F7R1_FB6_Pos;
pub const CAN_F7R1_FB6: u32 = CAN_F7R1_FB6_Msk;
pub const CAN_F7R1_FB7_Pos: u32 = 7;
pub const CAN_F7R1_FB7_Msk: u32 = 0x1 << CAN_F7R1_FB7_Pos;
pub const CAN_F7R1_FB7: u32 = CAN_F7R1_FB7_Msk;
pub const CAN_F7R1_FB8_Pos: u32 = 8;
pub const CAN_F7R1_FB8_Msk: u32 = 0x1 << CAN_F7R1_FB8_Pos;
pub const CAN_F7R1_FB8: u32 = CAN_F7R1_FB8_Msk;
pub const CAN_F7R1_FB9_Pos: u32 = 9;
pub const CAN_F7R1_FB9_Msk: u32 = 0x1 << CAN_F7R1_FB9_Pos;
pub const CAN_F7R1_FB9: u32 = CAN_F7R1_FB9_Msk;
pub const CAN_F7R1_FB10_Pos: u32 = 10;
pub const CAN_F7R1_FB10_Msk: u32 = 0x1 << CAN_F7R1_FB10_Pos;
pub const CAN_F7R1_FB10: u32 = CAN_F7R1_FB10_Msk;
pub const CAN_F7R1_FB11_Pos: u32 = 11;
pub const CAN_F7R1_FB11_Msk: u32 = 0x1 << CAN_F7R1_FB11_Pos;
pub const CAN_F7R1_FB11: u32 = CAN_F7R1_FB11_Msk;
pub const CAN_F7R1_FB12_Pos: u32 = 12;
pub const CAN_F7R1_FB12_Msk: u32 = 0x1 << CAN_F7R1_FB12_Pos;
pub const CAN_F7R1_FB12: u32 = CAN_F7R1_FB12_Msk;
pub const CAN_F7R1_FB13_Pos: u32 = 13;
pub const CAN_F7R1_FB13_Msk: u32 = 0x1 << CAN_F7R1_FB13_Pos;
pub const CAN_F7R1_FB13: u32 = CAN_F7R1_FB13_Msk;
pub const CAN_F7R1_FB14_Pos: u32 = 14;
pub const CAN_F7R1_FB14_Msk: u32 = 0x1 << CAN_F7R1_FB14_Pos;
pub const CAN_F7R1_FB14: u32 = CAN_F7R1_FB14_Msk;
pub const CAN_F7R1_FB15_Pos: u32 = 15;
pub const CAN_F7R1_FB15_Msk: u32 = 0x1 << CAN_F7R1_FB15_Pos;
pub const CAN_F7R1_FB15: u32 = CAN_F7R1_FB15_Msk;
pub const CAN_F7R1_FB16_Pos: u32 = 16;
pub const CAN_F7R1_FB16_Msk: u32 = 0x1 << CAN_F7R1_FB16_Pos;
pub const CAN_F7R1_FB16: u32 = CAN_F7R1_FB16_Msk;
pub const CAN_F7R1_FB17_Pos: u32 = 17;
pub const CAN_F7R1_FB17_Msk: u32 = 0x1 << CAN_F7R1_FB17_Pos;
pub const CAN_F7R1_FB17: u32 = CAN_F7R1_FB17_Msk;
pub const CAN_F7R1_FB18_Pos: u32 = 18;
pub const CAN_F7R1_FB18_Msk: u32 = 0x1 << CAN_F7R1_FB18_Pos;
pub const CAN_F7R1_FB18: u32 = CAN_F7R1_FB18_Msk;
pub const CAN_F7R1_FB19_Pos: u32 = 19;
pub const CAN_F7R1_FB19_Msk: u32 = 0x1 << CAN_F7R1_FB19_Pos;
pub const CAN_F7R1_FB19: u32 = CAN_F7R1_FB19_Msk;
pub const CAN_F7R1_FB20_Pos: u32 = 20;
pub const CAN_F7R1_FB20_Msk: u32 = 0x1 << CAN_F7R1_FB20_Pos;
pub const CAN_F7R1_FB20: u32 = CAN_F7R1_FB20_Msk;
pub const CAN_F7R1_FB21_Pos: u32 = 21;
pub const CAN_F7R1_FB21_Msk: u32 = 0x1 << CAN_F7R1_FB21_Pos;
pub const CAN_F7R1_FB21: u32 = CAN_F7R1_FB21_Msk;
pub const CAN_F7R1_FB22_Pos: u32 = 22;
pub const CAN_F7R1_FB22_Msk: u32 = 0x1 << CAN_F7R1_FB22_Pos;
pub const CAN_F7R1_FB22: u32 = CAN_F7R1_FB22_Msk;
pub const CAN_F7R1_FB23_Pos: u32 = 23;
pub const CAN_F7R1_FB23_Msk: u32 = 0x1 << CAN_F7R1_FB23_Pos;
pub const CAN_F7R1_FB23: u32 = CAN_F7R1_FB23_Msk;
pub const CAN_F7R1_FB24_Pos: u32 = 24;
pub const CAN_F7R1_FB24_Msk: u32 = 0x1 << CAN_F7R1_FB24_Pos;
pub const CAN_F7R1_FB24: u32 = CAN_F7R1_FB24_Msk;
pub const CAN_F7R1_FB25_Pos: u32 = 25;
pub const CAN_F7R1_FB25_Msk: u32 = 0x1 << CAN_F7R1_FB25_Pos;
pub const CAN_F7R1_FB25: u32 = CAN_F7R1_FB25_Msk;
pub const CAN_F7R1_FB26_Pos: u32 = 26;
pub const CAN_F7R1_FB26_Msk: u32 = 0x1 << CAN_F7R1_FB26_Pos;
pub const CAN_F7R1_FB26: u32 = CAN_F7R1_FB26_Msk;
pub const CAN_F7R1_FB27_Pos: u32 = 27;
pub const CAN_F7R1_FB27_Msk: u32 = 0x1 << CAN_F7R1_FB27_Pos;
pub const CAN_F7R1_FB27: u32 = CAN_F7R1_FB27_Msk;
pub const CAN_F7R1_FB28_Pos: u32 = 28;
pub const CAN_F7R1_FB28_Msk: u32 = 0x1 << CAN_F7R1_FB28_Pos;
pub const CAN_F7R1_FB28: u32 = CAN_F7R1_FB28_Msk;
pub const CAN_F7R1_FB29_Pos: u32 = 29;
pub const CAN_F7R1_FB29_Msk: u32 = 0x1 << CAN_F7R1_FB29_Pos;
pub const CAN_F7R1_FB29: u32 = CAN_F7R1_FB29_Msk;
pub const CAN_F7R1_FB30_Pos: u32 = 30;
pub const CAN_F7R1_FB30_Msk: u32 = 0x1 << CAN_F7R1_FB30_Pos;
pub const CAN_F7R1_FB30: u32 = CAN_F7R1_FB30_Msk;
pub const CAN_F7R1_FB31_Pos: u32 = 31;
pub const CAN_F7R1_FB31_Msk: u32 = 0x1 << CAN_F7R1_FB31_Pos;
pub const CAN_F7R1_FB31: u32 = CAN_F7R1_FB31_Msk;
pub const CAN_F8R1_FB0_Pos: u32 = 0;
pub const CAN_F8R1_FB0_Msk: u32 = 0x1 << CAN_F8R1_FB0_Pos;
pub const CAN_F8R1_FB0: u32 = CAN_F8R1_FB0_Msk;
pub const CAN_F8R1_FB1_Pos: u32 = 1;
pub const CAN_F8R1_FB1_Msk: u32 = 0x1 << CAN_F8R1_FB1_Pos;
pub const CAN_F8R1_FB1: u32 = CAN_F8R1_FB1_Msk;
pub const CAN_F8R1_FB2_Pos: u32 = 2;
pub const CAN_F8R1_FB2_Msk: u32 = 0x1 << CAN_F8R1_FB2_Pos;
pub const CAN_F8R1_FB2: u32 = CAN_F8R1_FB2_Msk;
pub const CAN_F8R1_FB3_Pos: u32 = 3;
pub const CAN_F8R1_FB3_Msk: u32 = 0x1 << CAN_F8R1_FB3_Pos;
pub const CAN_F8R1_FB3: u32 = CAN_F8R1_FB3_Msk;
pub const CAN_F8R1_FB4_Pos: u32 = 4;
pub const CAN_F8R1_FB4_Msk: u32 = 0x1 << CAN_F8R1_FB4_Pos;
pub const CAN_F8R1_FB4: u32 = CAN_F8R1_FB4_Msk;
pub const CAN_F8R1_FB5_Pos: u32 = 5;
pub const CAN_F8R1_FB5_Msk: u32 = 0x1 << CAN_F8R1_FB5_Pos;
pub const CAN_F8R1_FB5: u32 = CAN_F8R1_FB5_Msk;
pub const CAN_F8R1_FB6_Pos: u32 = 6;
pub const CAN_F8R1_FB6_Msk: u32 = 0x1 << CAN_F8R1_FB6_Pos;
pub const CAN_F8R1_FB6: u32 = CAN_F8R1_FB6_Msk;
pub const CAN_F8R1_FB7_Pos: u32 = 7;
pub const CAN_F8R1_FB7_Msk: u32 = 0x1 << CAN_F8R1_FB7_Pos;
pub const CAN_F8R1_FB7: u32 = CAN_F8R1_FB7_Msk;
pub const CAN_F8R1_FB8_Pos: u32 = 8;
pub const CAN_F8R1_FB8_Msk: u32 = 0x1 << CAN_F8R1_FB8_Pos;
pub const CAN_F8R1_FB8: u32 = CAN_F8R1_FB8_Msk;
pub const CAN_F8R1_FB9_Pos: u32 = 9;
pub const CAN_F8R1_FB9_Msk: u32 = 0x1 << CAN_F8R1_FB9_Pos;
pub const CAN_F8R1_FB9: u32 = CAN_F8R1_FB9_Msk;
pub const CAN_F8R1_FB10_Pos: u32 = 10;
pub const CAN_F8R1_FB10_Msk: u32 = 0x1 << CAN_F8R1_FB10_Pos;
pub const CAN_F8R1_FB10: u32 = CAN_F8R1_FB10_Msk;
pub const CAN_F8R1_FB11_Pos: u32 = 11;
pub const CAN_F8R1_FB11_Msk: u32 = 0x1 << CAN_F8R1_FB11_Pos;
pub const CAN_F8R1_FB11: u32 = CAN_F8R1_FB11_Msk;
pub const CAN_F8R1_FB12_Pos: u32 = 12;
pub const CAN_F8R1_FB12_Msk: u32 = 0x1 << CAN_F8R1_FB12_Pos;
pub const CAN_F8R1_FB12: u32 = CAN_F8R1_FB12_Msk;
pub const CAN_F8R1_FB13_Pos: u32 = 13;
pub const CAN_F8R1_FB13_Msk: u32 = 0x1 << CAN_F8R1_FB13_Pos;
pub const CAN_F8R1_FB13: u32 = CAN_F8R1_FB13_Msk;
pub const CAN_F8R1_FB14_Pos: u32 = 14;
pub const CAN_F8R1_FB14_Msk: u32 = 0x1 << CAN_F8R1_FB14_Pos;
pub const CAN_F8R1_FB14: u32 = CAN_F8R1_FB14_Msk;
pub const CAN_F8R1_FB15_Pos: u32 = 15;
pub const CAN_F8R1_FB15_Msk: u32 = 0x1 << CAN_F8R1_FB15_Pos;
pub const CAN_F8R1_FB15: u32 = CAN_F8R1_FB15_Msk;
pub const CAN_F8R1_FB16_Pos: u32 = 16;
pub const CAN_F8R1_FB16_Msk: u32 = 0x1 << CAN_F8R1_FB16_Pos;
pub const CAN_F8R1_FB16: u32 = CAN_F8R1_FB16_Msk;
pub const CAN_F8R1_FB17_Pos: u32 = 17;
pub const CAN_F8R1_FB17_Msk: u32 = 0x1 << CAN_F8R1_FB17_Pos;
pub const CAN_F8R1_FB17: u32 = CAN_F8R1_FB17_Msk;
pub const CAN_F8R1_FB18_Pos: u32 = 18;
pub const CAN_F8R1_FB18_Msk: u32 = 0x1 << CAN_F8R1_FB18_Pos;
pub const CAN_F8R1_FB18: u32 = CAN_F8R1_FB18_Msk;
pub const CAN_F8R1_FB19_Pos: u32 = 19;
pub const CAN_F8R1_FB19_Msk: u32 = 0x1 << CAN_F8R1_FB19_Pos;
pub const CAN_F8R1_FB19: u32 = CAN_F8R1_FB19_Msk;
pub const CAN_F8R1_FB20_Pos: u32 = 20;
pub const CAN_F8R1_FB20_Msk: u32 = 0x1 << CAN_F8R1_FB20_Pos;
pub const CAN_F8R1_FB20: u32 = CAN_F8R1_FB20_Msk;
pub const CAN_F8R1_FB21_Pos: u32 = 21;
pub const CAN_F8R1_FB21_Msk: u32 = 0x1 << CAN_F8R1_FB21_Pos;
pub const CAN_F8R1_FB21: u32 = CAN_F8R1_FB21_Msk;
pub const CAN_F8R1_FB22_Pos: u32 = 22;
pub const CAN_F8R1_FB22_Msk: u32 = 0x1 << CAN_F8R1_FB22_Pos;
pub const CAN_F8R1_FB22: u32 = CAN_F8R1_FB22_Msk;
pub const CAN_F8R1_FB23_Pos: u32 = 23;
pub const CAN_F8R1_FB23_Msk: u32 = 0x1 << CAN_F8R1_FB23_Pos;
pub const CAN_F8R1_FB23: u32 = CAN_F8R1_FB23_Msk;
pub const CAN_F8R1_FB24_Pos: u32 = 24;
pub const CAN_F8R1_FB24_Msk: u32 = 0x1 << CAN_F8R1_FB24_Pos;
pub const CAN_F8R1_FB24: u32 = CAN_F8R1_FB24_Msk;
pub const CAN_F8R1_FB25_Pos: u32 = 25;
pub const CAN_F8R1_FB25_Msk: u32 = 0x1 << CAN_F8R1_FB25_Pos;
pub const CAN_F8R1_FB25: u32 = CAN_F8R1_FB25_Msk;
pub const CAN_F8R1_FB26_Pos: u32 = 26;
pub const CAN_F8R1_FB26_Msk: u32 = 0x1 << CAN_F8R1_FB26_Pos;
pub const CAN_F8R1_FB26: u32 = CAN_F8R1_FB26_Msk;
pub const CAN_F8R1_FB27_Pos: u32 = 27;
pub const CAN_F8R1_FB27_Msk: u32 = 0x1 << CAN_F8R1_FB27_Pos;
pub const CAN_F8R1_FB27: u32 = CAN_F8R1_FB27_Msk;
pub const CAN_F8R1_FB28_Pos: u32 = 28;
pub const CAN_F8R1_FB28_Msk: u32 = 0x1 << CAN_F8R1_FB28_Pos;
pub const CAN_F8R1_FB28: u32 = CAN_F8R1_FB28_Msk;
pub const CAN_F8R1_FB29_Pos: u32 = 29;
pub const CAN_F8R1_FB29_Msk: u32 = 0x1 << CAN_F8R1_FB29_Pos;
pub const CAN_F8R1_FB29: u32 = CAN_F8R1_FB29_Msk;
pub const CAN_F8R1_FB30_Pos: u32 = 30;
pub const CAN_F8R1_FB30_Msk: u32 = 0x1 << CAN_F8R1_FB30_Pos;
pub const CAN_F8R1_FB30: u32 = CAN_F8R1_FB30_Msk;
pub const CAN_F8R1_FB31_Pos: u32 = 31;
pub const CAN_F8R1_FB31_Msk: u32 = 0x1 << CAN_F8R1_FB31_Pos;
pub const CAN_F8R1_FB31: u32 = CAN_F8R1_FB31_Msk;
pub const CAN_F9R1_FB0_Pos: u32 = 0;
pub const CAN_F9R1_FB0_Msk: u32 = 0x1 << CAN_F9R1_FB0_Pos;
pub const CAN_F9R1_FB0: u32 = CAN_F9R1_FB0_Msk;
pub const CAN_F9R1_FB1_Pos: u32 = 1;
pub const CAN_F9R1_FB1_Msk: u32 = 0x1 << CAN_F9R1_FB1_Pos;
pub const CAN_F9R1_FB1: u32 = CAN_F9R1_FB1_Msk;
pub const CAN_F9R1_FB2_Pos: u32 = 2;
pub const CAN_F9R1_FB2_Msk: u32 = 0x1 << CAN_F9R1_FB2_Pos;
pub const CAN_F9R1_FB2: u32 = CAN_F9R1_FB2_Msk;
pub const CAN_F9R1_FB3_Pos: u32 = 3;
pub const CAN_F9R1_FB3_Msk: u32 = 0x1 << CAN_F9R1_FB3_Pos;
pub const CAN_F9R1_FB3: u32 = CAN_F9R1_FB3_Msk;
pub const CAN_F9R1_FB4_Pos: u32 = 4;
pub const CAN_F9R1_FB4_Msk: u32 = 0x1 << CAN_F9R1_FB4_Pos;
pub const CAN_F9R1_FB4: u32 = CAN_F9R1_FB4_Msk;
pub const CAN_F9R1_FB5_Pos: u32 = 5;
pub const CAN_F9R1_FB5_Msk: u32 = 0x1 << CAN_F9R1_FB5_Pos;
pub const CAN_F9R1_FB5: u32 = CAN_F9R1_FB5_Msk;
pub const CAN_F9R1_FB6_Pos: u32 = 6;
pub const CAN_F9R1_FB6_Msk: u32 = 0x1 << CAN_F9R1_FB6_Pos;
pub const CAN_F9R1_FB6: u32 = CAN_F9R1_FB6_Msk;
pub const CAN_F9R1_FB7_Pos: u32 = 7;
pub const CAN_F9R1_FB7_Msk: u32 = 0x1 << CAN_F9R1_FB7_Pos;
pub const CAN_F9R1_FB7: u32 = CAN_F9R1_FB7_Msk;
pub const CAN_F9R1_FB8_Pos: u32 = 8;
pub const CAN_F9R1_FB8_Msk: u32 = 0x1 << CAN_F9R1_FB8_Pos;
pub const CAN_F9R1_FB8: u32 = CAN_F9R1_FB8_Msk;
pub const CAN_F9R1_FB9_Pos: u32 = 9;
pub const CAN_F9R1_FB9_Msk: u32 = 0x1 << CAN_F9R1_FB9_Pos;
pub const CAN_F9R1_FB9: u32 = CAN_F9R1_FB9_Msk;
pub const CAN_F9R1_FB10_Pos: u32 = 10;
pub const CAN_F9R1_FB10_Msk: u32 = 0x1 << CAN_F9R1_FB10_Pos;
pub const CAN_F9R1_FB10: u32 = CAN_F9R1_FB10_Msk;
pub const CAN_F9R1_FB11_Pos: u32 = 11;
pub const CAN_F9R1_FB11_Msk: u32 = 0x1 << CAN_F9R1_FB11_Pos;
pub const CAN_F9R1_FB11: u32 = CAN_F9R1_FB11_Msk;
pub const CAN_F9R1_FB12_Pos: u32 = 12;
pub const CAN_F9R1_FB12_Msk: u32 = 0x1 << CAN_F9R1_FB12_Pos;
pub const CAN_F9R1_FB12: u32 = CAN_F9R1_FB12_Msk;
pub const CAN_F9R1_FB13_Pos: u32 = 13;
pub const CAN_F9R1_FB13_Msk: u32 = 0x1 << CAN_F9R1_FB13_Pos;
pub const CAN_F9R1_FB13: u32 = CAN_F9R1_FB13_Msk;
pub const CAN_F9R1_FB14_Pos: u32 = 14;
pub const CAN_F9R1_FB14_Msk: u32 = 0x1 << CAN_F9R1_FB14_Pos;
pub const CAN_F9R1_FB14: u32 = CAN_F9R1_FB14_Msk;
pub const CAN_F9R1_FB15_Pos: u32 = 15;
pub const CAN_F9R1_FB15_Msk: u32 = 0x1 << CAN_F9R1_FB15_Pos;
pub const CAN_F9R1_FB15: u32 = CAN_F9R1_FB15_Msk;
pub const CAN_F9R1_FB16_Pos: u32 = 16;
pub const CAN_F9R1_FB16_Msk: u32 = 0x1 << CAN_F9R1_FB16_Pos;
pub const CAN_F9R1_FB16: u32 = CAN_F9R1_FB16_Msk;
pub const CAN_F9R1_FB17_Pos: u32 = 17;
pub const CAN_F9R1_FB17_Msk: u32 = 0x1 << CAN_F9R1_FB17_Pos;
pub const CAN_F9R1_FB17: u32 = CAN_F9R1_FB17_Msk;
pub const CAN_F9R1_FB18_Pos: u32 = 18;
pub const CAN_F9R1_FB18_Msk: u32 = 0x1 << CAN_F9R1_FB18_Pos;
pub const CAN_F9R1_FB18: u32 = CAN_F9R1_FB18_Msk;
pub const CAN_F9R1_FB19_Pos: u32 = 19;
pub const CAN_F9R1_FB19_Msk: u32 = 0x1 << CAN_F9R1_FB19_Pos;
pub const CAN_F9R1_FB19: u32 = CAN_F9R1_FB19_Msk;
pub const CAN_F9R1_FB20_Pos: u32 = 20;
pub const CAN_F9R1_FB20_Msk: u32 = 0x1 << CAN_F9R1_FB20_Pos;
pub const CAN_F9R1_FB20: u32 = CAN_F9R1_FB20_Msk;
pub const CAN_F9R1_FB21_Pos: u32 = 21;
pub const CAN_F9R1_FB21_Msk: u32 = 0x1 << CAN_F9R1_FB21_Pos;
pub const CAN_F9R1_FB21: u32 = CAN_F9R1_FB21_Msk;
pub const CAN_F9R1_FB22_Pos: u32 = 22;
pub const CAN_F9R1_FB22_Msk: u32 = 0x1 << CAN_F9R1_FB22_Pos;
pub const CAN_F9R1_FB22: u32 = CAN_F9R1_FB22_Msk;
pub const CAN_F9R1_FB23_Pos: u32 = 23;
pub const CAN_F9R1_FB23_Msk: u32 = 0x1 << CAN_F9R1_FB23_Pos;
pub const CAN_F9R1_FB23: u32 = CAN_F9R1_FB23_Msk;
pub const CAN_F9R1_FB24_Pos: u32 = 24;
pub const CAN_F9R1_FB24_Msk: u32 = 0x1 << CAN_F9R1_FB24_Pos;
pub const CAN_F9R1_FB24: u32 = CAN_F9R1_FB24_Msk;
pub const CAN_F9R1_FB25_Pos: u32 = 25;
pub const CAN_F9R1_FB25_Msk: u32 = 0x1 << CAN_F9R1_FB25_Pos;
pub const CAN_F9R1_FB25: u32 = CAN_F9R1_FB25_Msk;
pub const CAN_F9R1_FB26_Pos: u32 = 26;
pub const CAN_F9R1_FB26_Msk: u32 = 0x1 << CAN_F9R1_FB26_Pos;
pub const CAN_F9R1_FB26: u32 = CAN_F9R1_FB26_Msk;
pub const CAN_F9R1_FB27_Pos: u32 = 27;
pub const CAN_F9R1_FB27_Msk: u32 = 0x1 << CAN_F9R1_FB27_Pos;
pub const CAN_F9R1_FB27: u32 = CAN_F9R1_FB27_Msk;
pub const CAN_F9R1_FB28_Pos: u32 = 28;
pub const CAN_F9R1_FB28_Msk: u32 = 0x1 << CAN_F9R1_FB28_Pos;
pub const CAN_F9R1_FB28: u32 = CAN_F9R1_FB28_Msk;
pub const CAN_F9R1_FB29_Pos: u32 = 29;
pub const CAN_F9R1_FB29_Msk: u32 = 0x1 << CAN_F9R1_FB29_Pos;
pub const CAN_F9R1_FB29: u32 = CAN_F9R1_FB29_Msk;
pub const CAN_F9R1_FB30_Pos: u32 = 30;
pub const CAN_F9R1_FB30_Msk: u32 = 0x1 << CAN_F9R1_FB30_Pos;
pub const CAN_F9R1_FB30: u32 = CAN_F9R1_FB30_Msk;
pub const CAN_F9R1_FB31_Pos: u32 = 31;
pub const CAN_F9R1_FB31_Msk: u32 = 0x1 << CAN_F9R1_FB31_Pos;
pub const CAN_F9R1_FB31: u32 = CAN_F9R1_FB31_Msk;
pub const CAN_F10R1_FB0_Pos: u32 = 0;
pub const CAN_F10R1_FB0_Msk: u32 = 0x1 << CAN_F10R1_FB0_Pos;
pub const CAN_F10R1_FB0: u32 = CAN_F10R1_FB0_Msk;
pub const CAN_F10R1_FB1_Pos: u32 = 1;
pub const CAN_F10R1_FB1_Msk: u32 = 0x1 << CAN_F10R1_FB1_Pos;
pub const CAN_F10R1_FB1: u32 = CAN_F10R1_FB1_Msk;
pub const CAN_F10R1_FB2_Pos: u32 = 2;
pub const CAN_F10R1_FB2_Msk: u32 = 0x1 << CAN_F10R1_FB2_Pos;
pub const CAN_F10R1_FB2: u32 = CAN_F10R1_FB2_Msk;
pub const CAN_F10R1_FB3_Pos: u32 = 3;
pub const CAN_F10R1_FB3_Msk: u32 = 0x1 << CAN_F10R1_FB3_Pos;
pub const CAN_F10R1_FB3: u32 = CAN_F10R1_FB3_Msk;
pub const CAN_F10R1_FB4_Pos: u32 = 4;
pub const CAN_F10R1_FB4_Msk: u32 = 0x1 << CAN_F10R1_FB4_Pos;
pub const CAN_F10R1_FB4: u32 = CAN_F10R1_FB4_Msk;
pub const CAN_F10R1_FB5_Pos: u32 = 5;
pub const CAN_F10R1_FB5_Msk: u32 = 0x1 << CAN_F10R1_FB5_Pos;
pub const CAN_F10R1_FB5: u32 = CAN_F10R1_FB5_Msk;
pub const CAN_F10R1_FB6_Pos: u32 = 6;
pub const CAN_F10R1_FB6_Msk: u32 = 0x1 << CAN_F10R1_FB6_Pos;
pub const CAN_F10R1_FB6: u32 = CAN_F10R1_FB6_Msk;
pub const CAN_F10R1_FB7_Pos: u32 = 7;
pub const CAN_F10R1_FB7_Msk: u32 = 0x1 << CAN_F10R1_FB7_Pos;
pub const CAN_F10R1_FB7: u32 = CAN_F10R1_FB7_Msk;
pub const CAN_F10R1_FB8_Pos: u32 = 8;
pub const CAN_F10R1_FB8_Msk: u32 = 0x1 << CAN_F10R1_FB8_Pos;
pub const CAN_F10R1_FB8: u32 = CAN_F10R1_FB8_Msk;
pub const CAN_F10R1_FB9_Pos: u32 = 9;
pub const CAN_F10R1_FB9_Msk: u32 = 0x1 << CAN_F10R1_FB9_Pos;
pub const CAN_F10R1_FB9: u32 = CAN_F10R1_FB9_Msk;
pub const CAN_F10R1_FB10_Pos: u32 = 10;
pub const CAN_F10R1_FB10_Msk: u32 = 0x1 << CAN_F10R1_FB10_Pos;
pub const CAN_F10R1_FB10: u32 = CAN_F10R1_FB10_Msk;
pub const CAN_F10R1_FB11_Pos: u32 = 11;
pub const CAN_F10R1_FB11_Msk: u32 = 0x1 << CAN_F10R1_FB11_Pos;
pub const CAN_F10R1_FB11: u32 = CAN_F10R1_FB11_Msk;
pub const CAN_F10R1_FB12_Pos: u32 = 12;
pub const CAN_F10R1_FB12_Msk: u32 = 0x1 << CAN_F10R1_FB12_Pos;
pub const CAN_F10R1_FB12: u32 = CAN_F10R1_FB12_Msk;
pub const CAN_F10R1_FB13_Pos: u32 = 13;
pub const CAN_F10R1_FB13_Msk: u32 = 0x1 << CAN_F10R1_FB13_Pos;
pub const CAN_F10R1_FB13: u32 = CAN_F10R1_FB13_Msk;
pub const CAN_F10R1_FB14_Pos: u32 = 14;
pub const CAN_F10R1_FB14_Msk: u32 = 0x1 << CAN_F10R1_FB14_Pos;
pub const CAN_F10R1_FB14: u32 = CAN_F10R1_FB14_Msk;
pub const CAN_F10R1_FB15_Pos: u32 = 15;
pub const CAN_F10R1_FB15_Msk: u32 = 0x1 << CAN_F10R1_FB15_Pos;
pub const CAN_F10R1_FB15: u32 = CAN_F10R1_FB15_Msk;
pub const CAN_F10R1_FB16_Pos: u32 = 16;
pub const CAN_F10R1_FB16_Msk: u32 = 0x1 << CAN_F10R1_FB16_Pos;
pub const CAN_F10R1_FB16: u32 = CAN_F10R1_FB16_Msk;
pub const CAN_F10R1_FB17_Pos: u32 = 17;
pub const CAN_F10R1_FB17_Msk: u32 = 0x1 << CAN_F10R1_FB17_Pos;
pub const CAN_F10R1_FB17: u32 = CAN_F10R1_FB17_Msk;
pub const CAN_F10R1_FB18_Pos: u32 = 18;
pub const CAN_F10R1_FB18_Msk: u32 = 0x1 << CAN_F10R1_FB18_Pos;
pub const CAN_F10R1_FB18: u32 = CAN_F10R1_FB18_Msk;
pub const CAN_F10R1_FB19_Pos: u32 = 19;
pub const CAN_F10R1_FB19_Msk: u32 = 0x1 << CAN_F10R1_FB19_Pos;
pub const CAN_F10R1_FB19: u32 = CAN_F10R1_FB19_Msk;
pub const CAN_F10R1_FB20_Pos: u32 = 20;
pub const CAN_F10R1_FB20_Msk: u32 = 0x1 << CAN_F10R1_FB20_Pos;
pub const CAN_F10R1_FB20: u32 = CAN_F10R1_FB20_Msk;
pub const CAN_F10R1_FB21_Pos: u32 = 21;
pub const CAN_F10R1_FB21_Msk: u32 = 0x1 << CAN_F10R1_FB21_Pos;
pub const CAN_F10R1_FB21: u32 = CAN_F10R1_FB21_Msk;
pub const CAN_F10R1_FB22_Pos: u32 = 22;
pub const CAN_F10R1_FB22_Msk: u32 = 0x1 << CAN_F10R1_FB22_Pos;
pub const CAN_F10R1_FB22: u32 = CAN_F10R1_FB22_Msk;
pub const CAN_F10R1_FB23_Pos: u32 = 23;
pub const CAN_F10R1_FB23_Msk: u32 = 0x1 << CAN_F10R1_FB23_Pos;
pub const CAN_F10R1_FB23: u32 = CAN_F10R1_FB23_Msk;
pub const CAN_F10R1_FB24_Pos: u32 = 24;
pub const CAN_F10R1_FB24_Msk: u32 = 0x1 << CAN_F10R1_FB24_Pos;
pub const CAN_F10R1_FB24: u32 = CAN_F10R1_FB24_Msk;
pub const CAN_F10R1_FB25_Pos: u32 = 25;
pub const CAN_F10R1_FB25_Msk: u32 = 0x1 << CAN_F10R1_FB25_Pos;
pub const CAN_F10R1_FB25: u32 = CAN_F10R1_FB25_Msk;
pub const CAN_F10R1_FB26_Pos: u32 = 26;
pub const CAN_F10R1_FB26_Msk: u32 = 0x1 << CAN_F10R1_FB26_Pos;
pub const CAN_F10R1_FB26: u32 = CAN_F10R1_FB26_Msk;
pub const CAN_F10R1_FB27_Pos: u32 = 27;
pub const CAN_F10R1_FB27_Msk: u32 = 0x1 << CAN_F10R1_FB27_Pos;
pub const CAN_F10R1_FB27: u32 = CAN_F10R1_FB27_Msk;
pub const CAN_F10R1_FB28_Pos: u32 = 28;
pub const CAN_F10R1_FB28_Msk: u32 = 0x1 << CAN_F10R1_FB28_Pos;
pub const CAN_F10R1_FB28: u32 = CAN_F10R1_FB28_Msk;
pub const CAN_F10R1_FB29_Pos: u32 = 29;
pub const CAN_F10R1_FB29_Msk: u32 = 0x1 << CAN_F10R1_FB29_Pos;
pub const CAN_F10R1_FB29: u32 = CAN_F10R1_FB29_Msk;
pub const CAN_F10R1_FB30_Pos: u32 = 30;
pub const CAN_F10R1_FB30_Msk: u32 = 0x1 << CAN_F10R1_FB30_Pos;
pub const CAN_F10R1_FB30: u32 = CAN_F10R1_FB30_Msk;
pub const CAN_F10R1_FB31_Pos: u32 = 31;
pub const CAN_F10R1_FB31_Msk: u32 = 0x1 << CAN_F10R1_FB31_Pos;
pub const CAN_F10R1_FB31: u32 = CAN_F10R1_FB31_Msk;
pub const CAN_F11R1_FB0_Pos: u32 = 0;
pub const CAN_F11R1_FB0_Msk: u32 = 0x1 << CAN_F11R1_FB0_Pos;
pub const CAN_F11R1_FB0: u32 = CAN_F11R1_FB0_Msk;
pub const CAN_F11R1_FB1_Pos: u32 = 1;
pub const CAN_F11R1_FB1_Msk: u32 = 0x1 << CAN_F11R1_FB1_Pos;
pub const CAN_F11R1_FB1: u32 = CAN_F11R1_FB1_Msk;
pub const CAN_F11R1_FB2_Pos: u32 = 2;
pub const CAN_F11R1_FB2_Msk: u32 = 0x1 << CAN_F11R1_FB2_Pos;
pub const CAN_F11R1_FB2: u32 = CAN_F11R1_FB2_Msk;
pub const CAN_F11R1_FB3_Pos: u32 = 3;
pub const CAN_F11R1_FB3_Msk: u32 = 0x1 << CAN_F11R1_FB3_Pos;
pub const CAN_F11R1_FB3: u32 = CAN_F11R1_FB3_Msk;
pub const CAN_F11R1_FB4_Pos: u32 = 4;
pub const CAN_F11R1_FB4_Msk: u32 = 0x1 << CAN_F11R1_FB4_Pos;
pub const CAN_F11R1_FB4: u32 = CAN_F11R1_FB4_Msk;
pub const CAN_F11R1_FB5_Pos: u32 = 5;
pub const CAN_F11R1_FB5_Msk: u32 = 0x1 << CAN_F11R1_FB5_Pos;
pub const CAN_F11R1_FB5: u32 = CAN_F11R1_FB5_Msk;
pub const CAN_F11R1_FB6_Pos: u32 = 6;
pub const CAN_F11R1_FB6_Msk: u32 = 0x1 << CAN_F11R1_FB6_Pos;
pub const CAN_F11R1_FB6: u32 = CAN_F11R1_FB6_Msk;
pub const CAN_F11R1_FB7_Pos: u32 = 7;
pub const CAN_F11R1_FB7_Msk: u32 = 0x1 << CAN_F11R1_FB7_Pos;
pub const CAN_F11R1_FB7: u32 = CAN_F11R1_FB7_Msk;
pub const CAN_F11R1_FB8_Pos: u32 = 8;
pub const CAN_F11R1_FB8_Msk: u32 = 0x1 << CAN_F11R1_FB8_Pos;
pub const CAN_F11R1_FB8: u32 = CAN_F11R1_FB8_Msk;
pub const CAN_F11R1_FB9_Pos: u32 = 9;
pub const CAN_F11R1_FB9_Msk: u32 = 0x1 << CAN_F11R1_FB9_Pos;
pub const CAN_F11R1_FB9: u32 = CAN_F11R1_FB9_Msk;
pub const CAN_F11R1_FB10_Pos: u32 = 10;
pub const CAN_F11R1_FB10_Msk: u32 = 0x1 << CAN_F11R1_FB10_Pos;
pub const CAN_F11R1_FB10: u32 = CAN_F11R1_FB10_Msk;
pub const CAN_F11R1_FB11_Pos: u32 = 11;
pub const CAN_F11R1_FB11_Msk: u32 = 0x1 << CAN_F11R1_FB11_Pos;
pub const CAN_F11R1_FB11: u32 = CAN_F11R1_FB11_Msk;
pub const CAN_F11R1_FB12_Pos: u32 = 12;
pub const CAN_F11R1_FB12_Msk: u32 = 0x1 << CAN_F11R1_FB12_Pos;
pub const CAN_F11R1_FB12: u32 = CAN_F11R1_FB12_Msk;
pub const CAN_F11R1_FB13_Pos: u32 = 13;
pub const CAN_F11R1_FB13_Msk: u32 = 0x1 << CAN_F11R1_FB13_Pos;
pub const CAN_F11R1_FB13: u32 = CAN_F11R1_FB13_Msk;
pub const CAN_F11R1_FB14_Pos: u32 = 14;
pub const CAN_F11R1_FB14_Msk: u32 = 0x1 << CAN_F11R1_FB14_Pos;
pub const CAN_F11R1_FB14: u32 = CAN_F11R1_FB14_Msk;
pub const CAN_F11R1_FB15_Pos: u32 = 15;
pub const CAN_F11R1_FB15_Msk: u32 = 0x1 << CAN_F11R1_FB15_Pos;
pub const CAN_F11R1_FB15: u32 = CAN_F11R1_FB15_Msk;
pub const CAN_F11R1_FB16_Pos: u32 = 16;
pub const CAN_F11R1_FB16_Msk: u32 = 0x1 << CAN_F11R1_FB16_Pos;
pub const CAN_F11R1_FB16: u32 = CAN_F11R1_FB16_Msk;
pub const CAN_F11R1_FB17_Pos: u32 = 17;
pub const CAN_F11R1_FB17_Msk: u32 = 0x1 << CAN_F11R1_FB17_Pos;
pub const CAN_F11R1_FB17: u32 = CAN_F11R1_FB17_Msk;
pub const CAN_F11R1_FB18_Pos: u32 = 18;
pub const CAN_F11R1_FB18_Msk: u32 = 0x1 << CAN_F11R1_FB18_Pos;
pub const CAN_F11R1_FB18: u32 = CAN_F11R1_FB18_Msk;
pub const CAN_F11R1_FB19_Pos: u32 = 19;
pub const CAN_F11R1_FB19_Msk: u32 = 0x1 << CAN_F11R1_FB19_Pos;
pub const CAN_F11R1_FB19: u32 = CAN_F11R1_FB19_Msk;
pub const CAN_F11R1_FB20_Pos: u32 = 20;
pub const CAN_F11R1_FB20_Msk: u32 = 0x1 << CAN_F11R1_FB20_Pos;
pub const CAN_F11R1_FB20: u32 = CAN_F11R1_FB20_Msk;
pub const CAN_F11R1_FB21_Pos: u32 = 21;
pub const CAN_F11R1_FB21_Msk: u32 = 0x1 << CAN_F11R1_FB21_Pos;
pub const CAN_F11R1_FB21: u32 = CAN_F11R1_FB21_Msk;
pub const CAN_F11R1_FB22_Pos: u32 = 22;
pub const CAN_F11R1_FB22_Msk: u32 = 0x1 << CAN_F11R1_FB22_Pos;
pub const CAN_F11R1_FB22: u32 = CAN_F11R1_FB22_Msk;
pub const CAN_F11R1_FB23_Pos: u32 = 23;
pub const CAN_F11R1_FB23_Msk: u32 = 0x1 << CAN_F11R1_FB23_Pos;
pub const CAN_F11R1_FB23: u32 = CAN_F11R1_FB23_Msk;
pub const CAN_F11R1_FB24_Pos: u32 = 24;
pub const CAN_F11R1_FB24_Msk: u32 = 0x1 << CAN_F11R1_FB24_Pos;
pub const CAN_F11R1_FB24: u32 = CAN_F11R1_FB24_Msk;
pub const CAN_F11R1_FB25_Pos: u32 = 25;
pub const CAN_F11R1_FB25_Msk: u32 = 0x1 << CAN_F11R1_FB25_Pos;
pub const CAN_F11R1_FB25: u32 = CAN_F11R1_FB25_Msk;
pub const CAN_F11R1_FB26_Pos: u32 = 26;
pub const CAN_F11R1_FB26_Msk: u32 = 0x1 << CAN_F11R1_FB26_Pos;
pub const CAN_F11R1_FB26: u32 = CAN_F11R1_FB26_Msk;
pub const CAN_F11R1_FB27_Pos: u32 = 27;
pub const CAN_F11R1_FB27_Msk: u32 = 0x1 << CAN_F11R1_FB27_Pos;
pub const CAN_F11R1_FB27: u32 = CAN_F11R1_FB27_Msk;
pub const CAN_F11R1_FB28_Pos: u32 = 28;
pub const CAN_F11R1_FB28_Msk: u32 = 0x1 << CAN_F11R1_FB28_Pos;
pub const CAN_F11R1_FB28: u32 = CAN_F11R1_FB28_Msk;
pub const CAN_F11R1_FB29_Pos: u32 = 29;
pub const CAN_F11R1_FB29_Msk: u32 = 0x1 << CAN_F11R1_FB29_Pos;
pub const CAN_F11R1_FB29: u32 = CAN_F11R1_FB29_Msk;
pub const CAN_F11R1_FB30_Pos: u32 = 30;
pub const CAN_F11R1_FB30_Msk: u32 = 0x1 << CAN_F11R1_FB30_Pos;
pub const CAN_F11R1_FB30: u32 = CAN_F11R1_FB30_Msk;
pub const CAN_F11R1_FB31_Pos: u32 = 31;
pub const CAN_F11R1_FB31_Msk: u32 = 0x1 << CAN_F11R1_FB31_Pos;
pub const CAN_F11R1_FB31: u32 = CAN_F11R1_FB31_Msk;
pub const CAN_F12R1_FB0_Pos: u32 = 0;
pub const CAN_F12R1_FB0_Msk: u32 = 0x1 << CAN_F12R1_FB0_Pos;
pub const CAN_F12R1_FB0: u32 = CAN_F12R1_FB0_Msk;
pub const CAN_F12R1_FB1_Pos: u32 = 1;
pub const CAN_F12R1_FB1_Msk: u32 = 0x1 << CAN_F12R1_FB1_Pos;
pub const CAN_F12R1_FB1: u32 = CAN_F12R1_FB1_Msk;
pub const CAN_F12R1_FB2_Pos: u32 = 2;
pub const CAN_F12R1_FB2_Msk: u32 = 0x1 << CAN_F12R1_FB2_Pos;
pub const CAN_F12R1_FB2: u32 = CAN_F12R1_FB2_Msk;
pub const CAN_F12R1_FB3_Pos: u32 = 3;
pub const CAN_F12R1_FB3_Msk: u32 = 0x1 << CAN_F12R1_FB3_Pos;
pub const CAN_F12R1_FB3: u32 = CAN_F12R1_FB3_Msk;
pub const CAN_F12R1_FB4_Pos: u32 = 4;
pub const CAN_F12R1_FB4_Msk: u32 = 0x1 << CAN_F12R1_FB4_Pos;
pub const CAN_F12R1_FB4: u32 = CAN_F12R1_FB4_Msk;
pub const CAN_F12R1_FB5_Pos: u32 = 5;
pub const CAN_F12R1_FB5_Msk: u32 = 0x1 << CAN_F12R1_FB5_Pos;
pub const CAN_F12R1_FB5: u32 = CAN_F12R1_FB5_Msk;
pub const CAN_F12R1_FB6_Pos: u32 = 6;
pub const CAN_F12R1_FB6_Msk: u32 = 0x1 << CAN_F12R1_FB6_Pos;
pub const CAN_F12R1_FB6: u32 = CAN_F12R1_FB6_Msk;
pub const CAN_F12R1_FB7_Pos: u32 = 7;
pub const CAN_F12R1_FB7_Msk: u32 = 0x1 << CAN_F12R1_FB7_Pos;
pub const CAN_F12R1_FB7: u32 = CAN_F12R1_FB7_Msk;
pub const CAN_F12R1_FB8_Pos: u32 = 8;
pub const CAN_F12R1_FB8_Msk: u32 = 0x1 << CAN_F12R1_FB8_Pos;
pub const CAN_F12R1_FB8: u32 = CAN_F12R1_FB8_Msk;
pub const CAN_F12R1_FB9_Pos: u32 = 9;
pub const CAN_F12R1_FB9_Msk: u32 = 0x1 << CAN_F12R1_FB9_Pos;
pub const CAN_F12R1_FB9: u32 = CAN_F12R1_FB9_Msk;
pub const CAN_F12R1_FB10_Pos: u32 = 10;
pub const CAN_F12R1_FB10_Msk: u32 = 0x1 << CAN_F12R1_FB10_Pos;
pub const CAN_F12R1_FB10: u32 = CAN_F12R1_FB10_Msk;
pub const CAN_F12R1_FB11_Pos: u32 = 11;
pub const CAN_F12R1_FB11_Msk: u32 = 0x1 << CAN_F12R1_FB11_Pos;
pub const CAN_F12R1_FB11: u32 = CAN_F12R1_FB11_Msk;
pub const CAN_F12R1_FB12_Pos: u32 = 12;
pub const CAN_F12R1_FB12_Msk: u32 = 0x1 << CAN_F12R1_FB12_Pos;
pub const CAN_F12R1_FB12: u32 = CAN_F12R1_FB12_Msk;
pub const CAN_F12R1_FB13_Pos: u32 = 13;
pub const CAN_F12R1_FB13_Msk: u32 = 0x1 << CAN_F12R1_FB13_Pos;
pub const CAN_F12R1_FB13: u32 = CAN_F12R1_FB13_Msk;
pub const CAN_F12R1_FB14_Pos: u32 = 14;
pub const CAN_F12R1_FB14_Msk: u32 = 0x1 << CAN_F12R1_FB14_Pos;
pub const CAN_F12R1_FB14: u32 = CAN_F12R1_FB14_Msk;
pub const CAN_F12R1_FB15_Pos: u32 = 15;
pub const CAN_F12R1_FB15_Msk: u32 = 0x1 << CAN_F12R1_FB15_Pos;
pub const CAN_F12R1_FB15: u32 = CAN_F12R1_FB15_Msk;
pub const CAN_F12R1_FB16_Pos: u32 = 16;
pub const CAN_F12R1_FB16_Msk: u32 = 0x1 << CAN_F12R1_FB16_Pos;
pub const CAN_F12R1_FB16: u32 = CAN_F12R1_FB16_Msk;
pub const CAN_F12R1_FB17_Pos: u32 = 17;
pub const CAN_F12R1_FB17_Msk: u32 = 0x1 << CAN_F12R1_FB17_Pos;
pub const CAN_F12R1_FB17: u32 = CAN_F12R1_FB17_Msk;
pub const CAN_F12R1_FB18_Pos: u32 = 18;
pub const CAN_F12R1_FB18_Msk: u32 = 0x1 << CAN_F12R1_FB18_Pos;
pub const CAN_F12R1_FB18: u32 = CAN_F12R1_FB18_Msk;
pub const CAN_F12R1_FB19_Pos: u32 = 19;
pub const CAN_F12R1_FB19_Msk: u32 = 0x1 << CAN_F12R1_FB19_Pos;
pub const CAN_F12R1_FB19: u32 = CAN_F12R1_FB19_Msk;
pub const CAN_F12R1_FB20_Pos: u32 = 20;
pub const CAN_F12R1_FB20_Msk: u32 = 0x1 << CAN_F12R1_FB20_Pos;
pub const CAN_F12R1_FB20: u32 = CAN_F12R1_FB20_Msk;
pub const CAN_F12R1_FB21_Pos: u32 = 21;
pub const CAN_F12R1_FB21_Msk: u32 = 0x1 << CAN_F12R1_FB21_Pos;
pub const CAN_F12R1_FB21: u32 = CAN_F12R1_FB21_Msk;
pub const CAN_F12R1_FB22_Pos: u32 = 22;
pub const CAN_F12R1_FB22_Msk: u32 = 0x1 << CAN_F12R1_FB22_Pos;
pub const CAN_F12R1_FB22: u32 = CAN_F12R1_FB22_Msk;
pub const CAN_F12R1_FB23_Pos: u32 = 23;
pub const CAN_F12R1_FB23_Msk: u32 = 0x1 << CAN_F12R1_FB23_Pos;
pub const CAN_F12R1_FB23: u32 = CAN_F12R1_FB23_Msk;
pub const CAN_F12R1_FB24_Pos: u32 = 24;
pub const CAN_F12R1_FB24_Msk: u32 = 0x1 << CAN_F12R1_FB24_Pos;
pub const CAN_F12R1_FB24: u32 = CAN_F12R1_FB24_Msk;
pub const CAN_F12R1_FB25_Pos: u32 = 25;
pub const CAN_F12R1_FB25_Msk: u32 = 0x1 << CAN_F12R1_FB25_Pos;
pub const CAN_F12R1_FB25: u32 = CAN_F12R1_FB25_Msk;
pub const CAN_F12R1_FB26_Pos: u32 = 26;
pub const CAN_F12R1_FB26_Msk: u32 = 0x1 << CAN_F12R1_FB26_Pos;
pub const CAN_F12R1_FB26: u32 = CAN_F12R1_FB26_Msk;
pub const CAN_F12R1_FB27_Pos: u32 = 27;
pub const CAN_F12R1_FB27_Msk: u32 = 0x1 << CAN_F12R1_FB27_Pos;
pub const CAN_F12R1_FB27: u32 = CAN_F12R1_FB27_Msk;
pub const CAN_F12R1_FB28_Pos: u32 = 28;
pub const CAN_F12R1_FB28_Msk: u32 = 0x1 << CAN_F12R1_FB28_Pos;
pub const CAN_F12R1_FB28: u32 = CAN_F12R1_FB28_Msk;
pub const CAN_F12R1_FB29_Pos: u32 = 29;
pub const CAN_F12R1_FB29_Msk: u32 = 0x1 << CAN_F12R1_FB29_Pos;
pub const CAN_F12R1_FB29: u32 = CAN_F12R1_FB29_Msk;
pub const CAN_F12R1_FB30_Pos: u32 = 30;
pub const CAN_F12R1_FB30_Msk: u32 = 0x1 << CAN_F12R1_FB30_Pos;
pub const CAN_F12R1_FB30: u32 = CAN_F12R1_FB30_Msk;
pub const CAN_F12R1_FB31_Pos: u32 = 31;
pub const CAN_F12R1_FB31_Msk: u32 = 0x1 << CAN_F12R1_FB31_Pos;
pub const CAN_F12R1_FB31: u32 = CAN_F12R1_FB31_Msk;
pub const CAN_F13R1_FB0_Pos: u32 = 0;
pub const CAN_F13R1_FB0_Msk: u32 = 0x1 << CAN_F13R1_FB0_Pos;
pub const CAN_F13R1_FB0: u32 = CAN_F13R1_FB0_Msk;
pub const CAN_F13R1_FB1_Pos: u32 = 1;
pub const CAN_F13R1_FB1_Msk: u32 = 0x1 << CAN_F13R1_FB1_Pos;
pub const CAN_F13R1_FB1: u32 = CAN_F13R1_FB1_Msk;
pub const CAN_F13R1_FB2_Pos: u32 = 2;
pub const CAN_F13R1_FB2_Msk: u32 = 0x1 << CAN_F13R1_FB2_Pos;
pub const CAN_F13R1_FB2: u32 = CAN_F13R1_FB2_Msk;
pub const CAN_F13R1_FB3_Pos: u32 = 3;
pub const CAN_F13R1_FB3_Msk: u32 = 0x1 << CAN_F13R1_FB3_Pos;
pub const CAN_F13R1_FB3: u32 = CAN_F13R1_FB3_Msk;
pub const CAN_F13R1_FB4_Pos: u32 = 4;
pub const CAN_F13R1_FB4_Msk: u32 = 0x1 << CAN_F13R1_FB4_Pos;
pub const CAN_F13R1_FB4: u32 = CAN_F13R1_FB4_Msk;
pub const CAN_F13R1_FB5_Pos: u32 = 5;
pub const CAN_F13R1_FB5_Msk: u32 = 0x1 << CAN_F13R1_FB5_Pos;
pub const CAN_F13R1_FB5: u32 = CAN_F13R1_FB5_Msk;
pub const CAN_F13R1_FB6_Pos: u32 = 6;
pub const CAN_F13R1_FB6_Msk: u32 = 0x1 << CAN_F13R1_FB6_Pos;
pub const CAN_F13R1_FB6: u32 = CAN_F13R1_FB6_Msk;
pub const CAN_F13R1_FB7_Pos: u32 = 7;
pub const CAN_F13R1_FB7_Msk: u32 = 0x1 << CAN_F13R1_FB7_Pos;
pub const CAN_F13R1_FB7: u32 = CAN_F13R1_FB7_Msk;
pub const CAN_F13R1_FB8_Pos: u32 = 8;
pub const CAN_F13R1_FB8_Msk: u32 = 0x1 << CAN_F13R1_FB8_Pos;
pub const CAN_F13R1_FB8: u32 = CAN_F13R1_FB8_Msk;
pub const CAN_F13R1_FB9_Pos: u32 = 9;
pub const CAN_F13R1_FB9_Msk: u32 = 0x1 << CAN_F13R1_FB9_Pos;
pub const CAN_F13R1_FB9: u32 = CAN_F13R1_FB9_Msk;
pub const CAN_F13R1_FB10_Pos: u32 = 10;
pub const CAN_F13R1_FB10_Msk: u32 = 0x1 << CAN_F13R1_FB10_Pos;
pub const CAN_F13R1_FB10: u32 = CAN_F13R1_FB10_Msk;
pub const CAN_F13R1_FB11_Pos: u32 = 11;
pub const CAN_F13R1_FB11_Msk: u32 = 0x1 << CAN_F13R1_FB11_Pos;
pub const CAN_F13R1_FB11: u32 = CAN_F13R1_FB11_Msk;
pub const CAN_F13R1_FB12_Pos: u32 = 12;
pub const CAN_F13R1_FB12_Msk: u32 = 0x1 << CAN_F13R1_FB12_Pos;
pub const CAN_F13R1_FB12: u32 = CAN_F13R1_FB12_Msk;
pub const CAN_F13R1_FB13_Pos: u32 = 13;
pub const CAN_F13R1_FB13_Msk: u32 = 0x1 << CAN_F13R1_FB13_Pos;
pub const CAN_F13R1_FB13: u32 = CAN_F13R1_FB13_Msk;
pub const CAN_F13R1_FB14_Pos: u32 = 14;
pub const CAN_F13R1_FB14_Msk: u32 = 0x1 << CAN_F13R1_FB14_Pos;
pub const CAN_F13R1_FB14: u32 = CAN_F13R1_FB14_Msk;
pub const CAN_F13R1_FB15_Pos: u32 = 15;
pub const CAN_F13R1_FB15_Msk: u32 = 0x1 << CAN_F13R1_FB15_Pos;
pub const CAN_F13R1_FB15: u32 = CAN_F13R1_FB15_Msk;
pub const CAN_F13R1_FB16_Pos: u32 = 16;
pub const CAN_F13R1_FB16_Msk: u32 = 0x1 << CAN_F13R1_FB16_Pos;
pub const CAN_F13R1_FB16: u32 = CAN_F13R1_FB16_Msk;
pub const CAN_F13R1_FB17_Pos: u32 = 17;
pub const CAN_F13R1_FB17_Msk: u32 = 0x1 << CAN_F13R1_FB17_Pos;
pub const CAN_F13R1_FB17: u32 = CAN_F13R1_FB17_Msk;
pub const CAN_F13R1_FB18_Pos: u32 = 18;
pub const CAN_F13R1_FB18_Msk: u32 = 0x1 << CAN_F13R1_FB18_Pos;
pub const CAN_F13R1_FB18: u32 = CAN_F13R1_FB18_Msk;
pub const CAN_F13R1_FB19_Pos: u32 = 19;
pub const CAN_F13R1_FB19_Msk: u32 = 0x1 << CAN_F13R1_FB19_Pos;
pub const CAN_F13R1_FB19: u32 = CAN_F13R1_FB19_Msk;
pub const CAN_F13R1_FB20_Pos: u32 = 20;
pub const CAN_F13R1_FB20_Msk: u32 = 0x1 << CAN_F13R1_FB20_Pos;
pub const CAN_F13R1_FB20: u32 = CAN_F13R1_FB20_Msk;
pub const CAN_F13R1_FB21_Pos: u32 = 21;
pub const CAN_F13R1_FB21_Msk: u32 = 0x1 << CAN_F13R1_FB21_Pos;
pub const CAN_F13R1_FB21: u32 = CAN_F13R1_FB21_Msk;
pub const CAN_F13R1_FB22_Pos: u32 = 22;
pub const CAN_F13R1_FB22_Msk: u32 = 0x1 << CAN_F13R1_FB22_Pos;
pub const CAN_F13R1_FB22: u32 = CAN_F13R1_FB22_Msk;
pub const CAN_F13R1_FB23_Pos: u32 = 23;
pub const CAN_F13R1_FB23_Msk: u32 = 0x1 << CAN_F13R1_FB23_Pos;
pub const CAN_F13R1_FB23: u32 = CAN_F13R1_FB23_Msk;
pub const CAN_F13R1_FB24_Pos: u32 = 24;
pub const CAN_F13R1_FB24_Msk: u32 = 0x1 << CAN_F13R1_FB24_Pos;
pub const CAN_F13R1_FB24: u32 = CAN_F13R1_FB24_Msk;
pub const CAN_F13R1_FB25_Pos: u32 = 25;
pub const CAN_F13R1_FB25_Msk: u32 = 0x1 << CAN_F13R1_FB25_Pos;
pub const CAN_F13R1_FB25: u32 = CAN_F13R1_FB25_Msk;
pub const CAN_F13R1_FB26_Pos: u32 = 26;
pub const CAN_F13R1_FB26_Msk: u32 = 0x1 << CAN_F13R1_FB26_Pos;
pub const CAN_F13R1_FB26: u32 = CAN_F13R1_FB26_Msk;
pub const CAN_F13R1_FB27_Pos: u32 = 27;
pub const CAN_F13R1_FB27_Msk: u32 = 0x1 << CAN_F13R1_FB27_Pos;
pub const CAN_F13R1_FB27: u32 = CAN_F13R1_FB27_Msk;
pub const CAN_F13R1_FB28_Pos: u32 = 28;
pub const CAN_F13R1_FB28_Msk: u32 = 0x1 << CAN_F13R1_FB28_Pos;
pub const CAN_F13R1_FB28: u32 = CAN_F13R1_FB28_Msk;
pub const CAN_F13R1_FB29_Pos: u32 = 29;
pub const CAN_F13R1_FB29_Msk: u32 = 0x1 << CAN_F13R1_FB29_Pos;
pub const CAN_F13R1_FB29: u32 = CAN_F13R1_FB29_Msk;
pub const CAN_F13R1_FB30_Pos: u32 = 30;
pub const CAN_F13R1_FB30_Msk: u32 = 0x1 << CAN_F13R1_FB30_Pos;
pub const CAN_F13R1_FB30: u32 = CAN_F13R1_FB30_Msk;
pub const CAN_F13R1_FB31_Pos: u32 = 31;
pub const CAN_F13R1_FB31_Msk: u32 = 0x1 << CAN_F13R1_FB31_Pos;
pub const CAN_F13R1_FB31: u32 = CAN_F13R1_FB31_Msk;
pub const CAN_F0R2_FB0_Pos: u32 = 0;
pub const CAN_F0R2_FB0_Msk: u32 = 0x1 << CAN_F0R2_FB0_Pos;
pub const CAN_F0R2_FB0: u32 = CAN_F0R2_FB0_Msk;
pub const CAN_F0R2_FB1_Pos: u32 = 1;
pub const CAN_F0R2_FB1_Msk: u32 = 0x1 << CAN_F0R2_FB1_Pos;
pub const CAN_F0R2_FB1: u32 = CAN_F0R2_FB1_Msk;
pub const CAN_F0R2_FB2_Pos: u32 = 2;
pub const CAN_F0R2_FB2_Msk: u32 = 0x1 << CAN_F0R2_FB2_Pos;
pub const CAN_F0R2_FB2: u32 = CAN_F0R2_FB2_Msk;
pub const CAN_F0R2_FB3_Pos: u32 = 3;
pub const CAN_F0R2_FB3_Msk: u32 = 0x1 << CAN_F0R2_FB3_Pos;
pub const CAN_F0R2_FB3: u32 = CAN_F0R2_FB3_Msk;
pub const CAN_F0R2_FB4_Pos: u32 = 4;
pub const CAN_F0R2_FB4_Msk: u32 = 0x1 << CAN_F0R2_FB4_Pos;
pub const CAN_F0R2_FB4: u32 = CAN_F0R2_FB4_Msk;
pub const CAN_F0R2_FB5_Pos: u32 = 5;
pub const CAN_F0R2_FB5_Msk: u32 = 0x1 << CAN_F0R2_FB5_Pos;
pub const CAN_F0R2_FB5: u32 = CAN_F0R2_FB5_Msk;
pub const CAN_F0R2_FB6_Pos: u32 = 6;
pub const CAN_F0R2_FB6_Msk: u32 = 0x1 << CAN_F0R2_FB6_Pos;
pub const CAN_F0R2_FB6: u32 = CAN_F0R2_FB6_Msk;
pub const CAN_F0R2_FB7_Pos: u32 = 7;
pub const CAN_F0R2_FB7_Msk: u32 = 0x1 << CAN_F0R2_FB7_Pos;
pub const CAN_F0R2_FB7: u32 = CAN_F0R2_FB7_Msk;
pub const CAN_F0R2_FB8_Pos: u32 = 8;
pub const CAN_F0R2_FB8_Msk: u32 = 0x1 << CAN_F0R2_FB8_Pos;
pub const CAN_F0R2_FB8: u32 = CAN_F0R2_FB8_Msk;
pub const CAN_F0R2_FB9_Pos: u32 = 9;
pub const CAN_F0R2_FB9_Msk: u32 = 0x1 << CAN_F0R2_FB9_Pos;
pub const CAN_F0R2_FB9: u32 = CAN_F0R2_FB9_Msk;
pub const CAN_F0R2_FB10_Pos: u32 = 10;
pub const CAN_F0R2_FB10_Msk: u32 = 0x1 << CAN_F0R2_FB10_Pos;
pub const CAN_F0R2_FB10: u32 = CAN_F0R2_FB10_Msk;
pub const CAN_F0R2_FB11_Pos: u32 = 11;
pub const CAN_F0R2_FB11_Msk: u32 = 0x1 << CAN_F0R2_FB11_Pos;
pub const CAN_F0R2_FB11: u32 = CAN_F0R2_FB11_Msk;
pub const CAN_F0R2_FB12_Pos: u32 = 12;
pub const CAN_F0R2_FB12_Msk: u32 = 0x1 << CAN_F0R2_FB12_Pos;
pub const CAN_F0R2_FB12: u32 = CAN_F0R2_FB12_Msk;
pub const CAN_F0R2_FB13_Pos: u32 = 13;
pub const CAN_F0R2_FB13_Msk: u32 = 0x1 << CAN_F0R2_FB13_Pos;
pub const CAN_F0R2_FB13: u32 = CAN_F0R2_FB13_Msk;
pub const CAN_F0R2_FB14_Pos: u32 = 14;
pub const CAN_F0R2_FB14_Msk: u32 = 0x1 << CAN_F0R2_FB14_Pos;
pub const CAN_F0R2_FB14: u32 = CAN_F0R2_FB14_Msk;
pub const CAN_F0R2_FB15_Pos: u32 = 15;
pub const CAN_F0R2_FB15_Msk: u32 = 0x1 << CAN_F0R2_FB15_Pos;
pub const CAN_F0R2_FB15: u32 = CAN_F0R2_FB15_Msk;
pub const CAN_F0R2_FB16_Pos: u32 = 16;
pub const CAN_F0R2_FB16_Msk: u32 = 0x1 << CAN_F0R2_FB16_Pos;
pub const CAN_F0R2_FB16: u32 = CAN_F0R2_FB16_Msk;
pub const CAN_F0R2_FB17_Pos: u32 = 17;
pub const CAN_F0R2_FB17_Msk: u32 = 0x1 << CAN_F0R2_FB17_Pos;
pub const CAN_F0R2_FB17: u32 = CAN_F0R2_FB17_Msk;
pub const CAN_F0R2_FB18_Pos: u32 = 18;
pub const CAN_F0R2_FB18_Msk: u32 = 0x1 << CAN_F0R2_FB18_Pos;
pub const CAN_F0R2_FB18: u32 = CAN_F0R2_FB18_Msk;
pub const CAN_F0R2_FB19_Pos: u32 = 19;
pub const CAN_F0R2_FB19_Msk: u32 = 0x1 << CAN_F0R2_FB19_Pos;
pub const CAN_F0R2_FB19: u32 = CAN_F0R2_FB19_Msk;
pub const CAN_F0R2_FB20_Pos: u32 = 20;
pub const CAN_F0R2_FB20_Msk: u32 = 0x1 << CAN_F0R2_FB20_Pos;
pub const CAN_F0R2_FB20: u32 = CAN_F0R2_FB20_Msk;
pub const CAN_F0R2_FB21_Pos: u32 = 21;
pub const CAN_F0R2_FB21_Msk: u32 = 0x1 << CAN_F0R2_FB21_Pos;
pub const CAN_F0R2_FB21: u32 = CAN_F0R2_FB21_Msk;
pub const CAN_F0R2_FB22_Pos: u32 = 22;
pub const CAN_F0R2_FB22_Msk: u32 = 0x1 << CAN_F0R2_FB22_Pos;
pub const CAN_F0R2_FB22: u32 = CAN_F0R2_FB22_Msk;
pub const CAN_F0R2_FB23_Pos: u32 = 23;
pub const CAN_F0R2_FB23_Msk: u32 = 0x1 << CAN_F0R2_FB23_Pos;
pub const CAN_F0R2_FB23: u32 = CAN_F0R2_FB23_Msk;
pub const CAN_F0R2_FB24_Pos: u32 = 24;
pub const CAN_F0R2_FB24_Msk: u32 = 0x1 << CAN_F0R2_FB24_Pos;
pub const CAN_F0R2_FB24: u32 = CAN_F0R2_FB24_Msk;
pub const CAN_F0R2_FB25_Pos: u32 = 25;
pub const CAN_F0R2_FB25_Msk: u32 = 0x1 << CAN_F0R2_FB25_Pos;
pub const CAN_F0R2_FB25: u32 = CAN_F0R2_FB25_Msk;
pub const CAN_F0R2_FB26_Pos: u32 = 26;
pub const CAN_F0R2_FB26_Msk: u32 = 0x1 << CAN_F0R2_FB26_Pos;
pub const CAN_F0R2_FB26: u32 = CAN_F0R2_FB26_Msk;
pub const CAN_F0R2_FB27_Pos: u32 = 27;
pub const CAN_F0R2_FB27_Msk: u32 = 0x1 << CAN_F0R2_FB27_Pos;
pub const CAN_F0R2_FB27: u32 = CAN_F0R2_FB27_Msk;
pub const CAN_F0R2_FB28_Pos: u32 = 28;
pub const CAN_F0R2_FB28_Msk: u32 = 0x1 << CAN_F0R2_FB28_Pos;
pub const CAN_F0R2_FB28: u32 = CAN_F0R2_FB28_Msk;
pub const CAN_F0R2_FB29_Pos: u32 = 29;
pub const CAN_F0R2_FB29_Msk: u32 = 0x1 << CAN_F0R2_FB29_Pos;
pub const CAN_F0R2_FB29: u32 = CAN_F0R2_FB29_Msk;
pub const CAN_F0R2_FB30_Pos: u32 = 30;
pub const CAN_F0R2_FB30_Msk: u32 = 0x1 << CAN_F0R2_FB30_Pos;
pub const CAN_F0R2_FB30: u32 = CAN_F0R2_FB30_Msk;
pub const CAN_F0R2_FB31_Pos: u32 = 31;
pub const CAN_F0R2_FB31_Msk: u32 = 0x1 << CAN_F0R2_FB31_Pos;
pub const CAN_F0R2_FB31: u32 = CAN_F0R2_FB31_Msk;
pub const CAN_F1R2_FB0_Pos: u32 = 0;
pub const CAN_F1R2_FB0_Msk: u32 = 0x1 << CAN_F1R2_FB0_Pos;
pub const CAN_F1R2_FB0: u32 = CAN_F1R2_FB0_Msk;
pub const CAN_F1R2_FB1_Pos: u32 = 1;
pub const CAN_F1R2_FB1_Msk: u32 = 0x1 << CAN_F1R2_FB1_Pos;
pub const CAN_F1R2_FB1: u32 = CAN_F1R2_FB1_Msk;
pub const CAN_F1R2_FB2_Pos: u32 = 2;
pub const CAN_F1R2_FB2_Msk: u32 = 0x1 << CAN_F1R2_FB2_Pos;
pub const CAN_F1R2_FB2: u32 = CAN_F1R2_FB2_Msk;
pub const CAN_F1R2_FB3_Pos: u32 = 3;
pub const CAN_F1R2_FB3_Msk: u32 = 0x1 << CAN_F1R2_FB3_Pos;
pub const CAN_F1R2_FB3: u32 = CAN_F1R2_FB3_Msk;
pub const CAN_F1R2_FB4_Pos: u32 = 4;
pub const CAN_F1R2_FB4_Msk: u32 = 0x1 << CAN_F1R2_FB4_Pos;
pub const CAN_F1R2_FB4: u32 = CAN_F1R2_FB4_Msk;
pub const CAN_F1R2_FB5_Pos: u32 = 5;
pub const CAN_F1R2_FB5_Msk: u32 = 0x1 << CAN_F1R2_FB5_Pos;
pub const CAN_F1R2_FB5: u32 = CAN_F1R2_FB5_Msk;
pub const CAN_F1R2_FB6_Pos: u32 = 6;
pub const CAN_F1R2_FB6_Msk: u32 = 0x1 << CAN_F1R2_FB6_Pos;
pub const CAN_F1R2_FB6: u32 = CAN_F1R2_FB6_Msk;
pub const CAN_F1R2_FB7_Pos: u32 = 7;
pub const CAN_F1R2_FB7_Msk: u32 = 0x1 << CAN_F1R2_FB7_Pos;
pub const CAN_F1R2_FB7: u32 = CAN_F1R2_FB7_Msk;
pub const CAN_F1R2_FB8_Pos: u32 = 8;
pub const CAN_F1R2_FB8_Msk: u32 = 0x1 << CAN_F1R2_FB8_Pos;
pub const CAN_F1R2_FB8: u32 = CAN_F1R2_FB8_Msk;
pub const CAN_F1R2_FB9_Pos: u32 = 9;
pub const CAN_F1R2_FB9_Msk: u32 = 0x1 << CAN_F1R2_FB9_Pos;
pub const CAN_F1R2_FB9: u32 = CAN_F1R2_FB9_Msk;
pub const CAN_F1R2_FB10_Pos: u32 = 10;
pub const CAN_F1R2_FB10_Msk: u32 = 0x1 << CAN_F1R2_FB10_Pos;
pub const CAN_F1R2_FB10: u32 = CAN_F1R2_FB10_Msk;
pub const CAN_F1R2_FB11_Pos: u32 = 11;
pub const CAN_F1R2_FB11_Msk: u32 = 0x1 << CAN_F1R2_FB11_Pos;
pub const CAN_F1R2_FB11: u32 = CAN_F1R2_FB11_Msk;
pub const CAN_F1R2_FB12_Pos: u32 = 12;
pub const CAN_F1R2_FB12_Msk: u32 = 0x1 << CAN_F1R2_FB12_Pos;
pub const CAN_F1R2_FB12: u32 = CAN_F1R2_FB12_Msk;
pub const CAN_F1R2_FB13_Pos: u32 = 13;
pub const CAN_F1R2_FB13_Msk: u32 = 0x1 << CAN_F1R2_FB13_Pos;
pub const CAN_F1R2_FB13: u32 = CAN_F1R2_FB13_Msk;
pub const CAN_F1R2_FB14_Pos: u32 = 14;
pub const CAN_F1R2_FB14_Msk: u32 = 0x1 << CAN_F1R2_FB14_Pos;
pub const CAN_F1R2_FB14: u32 = CAN_F1R2_FB14_Msk;
pub const CAN_F1R2_FB15_Pos: u32 = 15;
pub const CAN_F1R2_FB15_Msk: u32 = 0x1 << CAN_F1R2_FB15_Pos;
pub const CAN_F1R2_FB15: u32 = CAN_F1R2_FB15_Msk;
pub const CAN_F1R2_FB16_Pos: u32 = 16;
pub const CAN_F1R2_FB16_Msk: u32 = 0x1 << CAN_F1R2_FB16_Pos;
pub const CAN_F1R2_FB16: u32 = CAN_F1R2_FB16_Msk;
pub const CAN_F1R2_FB17_Pos: u32 = 17;
pub const CAN_F1R2_FB17_Msk: u32 = 0x1 << CAN_F1R2_FB17_Pos;
pub const CAN_F1R2_FB17: u32 = CAN_F1R2_FB17_Msk;
pub const CAN_F1R2_FB18_Pos: u32 = 18;
pub const CAN_F1R2_FB18_Msk: u32 = 0x1 << CAN_F1R2_FB18_Pos;
pub const CAN_F1R2_FB18: u32 = CAN_F1R2_FB18_Msk;
pub const CAN_F1R2_FB19_Pos: u32 = 19;
pub const CAN_F1R2_FB19_Msk: u32 = 0x1 << CAN_F1R2_FB19_Pos;
pub const CAN_F1R2_FB19: u32 = CAN_F1R2_FB19_Msk;
pub const CAN_F1R2_FB20_Pos: u32 = 20;
pub const CAN_F1R2_FB20_Msk: u32 = 0x1 << CAN_F1R2_FB20_Pos;
pub const CAN_F1R2_FB20: u32 = CAN_F1R2_FB20_Msk;
pub const CAN_F1R2_FB21_Pos: u32 = 21;
pub const CAN_F1R2_FB21_Msk: u32 = 0x1 << CAN_F1R2_FB21_Pos;
pub const CAN_F1R2_FB21: u32 = CAN_F1R2_FB21_Msk;
pub const CAN_F1R2_FB22_Pos: u32 = 22;
pub const CAN_F1R2_FB22_Msk: u32 = 0x1 << CAN_F1R2_FB22_Pos;
pub const CAN_F1R2_FB22: u32 = CAN_F1R2_FB22_Msk;
pub const CAN_F1R2_FB23_Pos: u32 = 23;
pub const CAN_F1R2_FB23_Msk: u32 = 0x1 << CAN_F1R2_FB23_Pos;
pub const CAN_F1R2_FB23: u32 = CAN_F1R2_FB23_Msk;
pub const CAN_F1R2_FB24_Pos: u32 = 24;
pub const CAN_F1R2_FB24_Msk: u32 = 0x1 << CAN_F1R2_FB24_Pos;
pub const CAN_F1R2_FB24: u32 = CAN_F1R2_FB24_Msk;
pub const CAN_F1R2_FB25_Pos: u32 = 25;
pub const CAN_F1R2_FB25_Msk: u32 = 0x1 << CAN_F1R2_FB25_Pos;
pub const CAN_F1R2_FB25: u32 = CAN_F1R2_FB25_Msk;
pub const CAN_F1R2_FB26_Pos: u32 = 26;
pub const CAN_F1R2_FB26_Msk: u32 = 0x1 << CAN_F1R2_FB26_Pos;
pub const CAN_F1R2_FB26: u32 = CAN_F1R2_FB26_Msk;
pub const CAN_F1R2_FB27_Pos: u32 = 27;
pub const CAN_F1R2_FB27_Msk: u32 = 0x1 << CAN_F1R2_FB27_Pos;
pub const CAN_F1R2_FB27: u32 = CAN_F1R2_FB27_Msk;
pub const CAN_F1R2_FB28_Pos: u32 = 28;
pub const CAN_F1R2_FB28_Msk: u32 = 0x1 << CAN_F1R2_FB28_Pos;
pub const CAN_F1R2_FB28: u32 = CAN_F1R2_FB28_Msk;
pub const CAN_F1R2_FB29_Pos: u32 = 29;
pub const CAN_F1R2_FB29_Msk: u32 = 0x1 << CAN_F1R2_FB29_Pos;
pub const CAN_F1R2_FB29: u32 = CAN_F1R2_FB29_Msk;
pub const CAN_F1R2_FB30_Pos: u32 = 30;
pub const CAN_F1R2_FB30_Msk: u32 = 0x1 << CAN_F1R2_FB30_Pos;
pub const CAN_F1R2_FB30: u32 = CAN_F1R2_FB30_Msk;
pub const CAN_F1R2_FB31_Pos: u32 = 31;
pub const CAN_F1R2_FB31_Msk: u32 = 0x1 << CAN_F1R2_FB31_Pos;
pub const CAN_F1R2_FB31: u32 = CAN_F1R2_FB31_Msk;
pub const CAN_F2R2_FB0_Pos: u32 = 0;
pub const CAN_F2R2_FB0_Msk: u32 = 0x1 << CAN_F2R2_FB0_Pos;
pub const CAN_F2R2_FB0: u32 = CAN_F2R2_FB0_Msk;
pub const CAN_F2R2_FB1_Pos: u32 = 1;
pub const CAN_F2R2_FB1_Msk: u32 = 0x1 << CAN_F2R2_FB1_Pos;
pub const CAN_F2R2_FB1: u32 = CAN_F2R2_FB1_Msk;
pub const CAN_F2R2_FB2_Pos: u32 = 2;
pub const CAN_F2R2_FB2_Msk: u32 = 0x1 << CAN_F2R2_FB2_Pos;
pub const CAN_F2R2_FB2: u32 = CAN_F2R2_FB2_Msk;
pub const CAN_F2R2_FB3_Pos: u32 = 3;
pub const CAN_F2R2_FB3_Msk: u32 = 0x1 << CAN_F2R2_FB3_Pos;
pub const CAN_F2R2_FB3: u32 = CAN_F2R2_FB3_Msk;
pub const CAN_F2R2_FB4_Pos: u32 = 4;
pub const CAN_F2R2_FB4_Msk: u32 = 0x1 << CAN_F2R2_FB4_Pos;
pub const CAN_F2R2_FB4: u32 = CAN_F2R2_FB4_Msk;
pub const CAN_F2R2_FB5_Pos: u32 = 5;
pub const CAN_F2R2_FB5_Msk: u32 = 0x1 << CAN_F2R2_FB5_Pos;
pub const CAN_F2R2_FB5: u32 = CAN_F2R2_FB5_Msk;
pub const CAN_F2R2_FB6_Pos: u32 = 6;
pub const CAN_F2R2_FB6_Msk: u32 = 0x1 << CAN_F2R2_FB6_Pos;
pub const CAN_F2R2_FB6: u32 = CAN_F2R2_FB6_Msk;
pub const CAN_F2R2_FB7_Pos: u32 = 7;
pub const CAN_F2R2_FB7_Msk: u32 = 0x1 << CAN_F2R2_FB7_Pos;
pub const CAN_F2R2_FB7: u32 = CAN_F2R2_FB7_Msk;
pub const CAN_F2R2_FB8_Pos: u32 = 8;
pub const CAN_F2R2_FB8_Msk: u32 = 0x1 << CAN_F2R2_FB8_Pos;
pub const CAN_F2R2_FB8: u32 = CAN_F2R2_FB8_Msk;
pub const CAN_F2R2_FB9_Pos: u32 = 9;
pub const CAN_F2R2_FB9_Msk: u32 = 0x1 << CAN_F2R2_FB9_Pos;
pub const CAN_F2R2_FB9: u32 = CAN_F2R2_FB9_Msk;
pub const CAN_F2R2_FB10_Pos: u32 = 10;
pub const CAN_F2R2_FB10_Msk: u32 = 0x1 << CAN_F2R2_FB10_Pos;
pub const CAN_F2R2_FB10: u32 = CAN_F2R2_FB10_Msk;
pub const CAN_F2R2_FB11_Pos: u32 = 11;
pub const CAN_F2R2_FB11_Msk: u32 = 0x1 << CAN_F2R2_FB11_Pos;
pub const CAN_F2R2_FB11: u32 = CAN_F2R2_FB11_Msk;
pub const CAN_F2R2_FB12_Pos: u32 = 12;
pub const CAN_F2R2_FB12_Msk: u32 = 0x1 << CAN_F2R2_FB12_Pos;
pub const CAN_F2R2_FB12: u32 = CAN_F2R2_FB12_Msk;
pub const CAN_F2R2_FB13_Pos: u32 = 13;
pub const CAN_F2R2_FB13_Msk: u32 = 0x1 << CAN_F2R2_FB13_Pos;
pub const CAN_F2R2_FB13: u32 = CAN_F2R2_FB13_Msk;
pub const CAN_F2R2_FB14_Pos: u32 = 14;
pub const CAN_F2R2_FB14_Msk: u32 = 0x1 << CAN_F2R2_FB14_Pos;
pub const CAN_F2R2_FB14: u32 = CAN_F2R2_FB14_Msk;
pub const CAN_F2R2_FB15_Pos: u32 = 15;
pub const CAN_F2R2_FB15_Msk: u32 = 0x1 << CAN_F2R2_FB15_Pos;
pub const CAN_F2R2_FB15: u32 = CAN_F2R2_FB15_Msk;
pub const CAN_F2R2_FB16_Pos: u32 = 16;
pub const CAN_F2R2_FB16_Msk: u32 = 0x1 << CAN_F2R2_FB16_Pos;
pub const CAN_F2R2_FB16: u32 = CAN_F2R2_FB16_Msk;
pub const CAN_F2R2_FB17_Pos: u32 = 17;
pub const CAN_F2R2_FB17_Msk: u32 = 0x1 << CAN_F2R2_FB17_Pos;
pub const CAN_F2R2_FB17: u32 = CAN_F2R2_FB17_Msk;
pub const CAN_F2R2_FB18_Pos: u32 = 18;
pub const CAN_F2R2_FB18_Msk: u32 = 0x1 << CAN_F2R2_FB18_Pos;
pub const CAN_F2R2_FB18: u32 = CAN_F2R2_FB18_Msk;
pub const CAN_F2R2_FB19_Pos: u32 = 19;
pub const CAN_F2R2_FB19_Msk: u32 = 0x1 << CAN_F2R2_FB19_Pos;
pub const CAN_F2R2_FB19: u32 = CAN_F2R2_FB19_Msk;
pub const CAN_F2R2_FB20_Pos: u32 = 20;
pub const CAN_F2R2_FB20_Msk: u32 = 0x1 << CAN_F2R2_FB20_Pos;
pub const CAN_F2R2_FB20: u32 = CAN_F2R2_FB20_Msk;
pub const CAN_F2R2_FB21_Pos: u32 = 21;
pub const CAN_F2R2_FB21_Msk: u32 = 0x1 << CAN_F2R2_FB21_Pos;
pub const CAN_F2R2_FB21: u32 = CAN_F2R2_FB21_Msk;
pub const CAN_F2R2_FB22_Pos: u32 = 22;
pub const CAN_F2R2_FB22_Msk: u32 = 0x1 << CAN_F2R2_FB22_Pos;
pub const CAN_F2R2_FB22: u32 = CAN_F2R2_FB22_Msk;
pub const CAN_F2R2_FB23_Pos: u32 = 23;
pub const CAN_F2R2_FB23_Msk: u32 = 0x1 << CAN_F2R2_FB23_Pos;
pub const CAN_F2R2_FB23: u32 = CAN_F2R2_FB23_Msk;
pub const CAN_F2R2_FB24_Pos: u32 = 24;
pub const CAN_F2R2_FB24_Msk: u32 = 0x1 << CAN_F2R2_FB24_Pos;
pub const CAN_F2R2_FB24: u32 = CAN_F2R2_FB24_Msk;
pub const CAN_F2R2_FB25_Pos: u32 = 25;
pub const CAN_F2R2_FB25_Msk: u32 = 0x1 << CAN_F2R2_FB25_Pos;
pub const CAN_F2R2_FB25: u32 = CAN_F2R2_FB25_Msk;
pub const CAN_F2R2_FB26_Pos: u32 = 26;
pub const CAN_F2R2_FB26_Msk: u32 = 0x1 << CAN_F2R2_FB26_Pos;
pub const CAN_F2R2_FB26: u32 = CAN_F2R2_FB26_Msk;
pub const CAN_F2R2_FB27_Pos: u32 = 27;
pub const CAN_F2R2_FB27_Msk: u32 = 0x1 << CAN_F2R2_FB27_Pos;
pub const CAN_F2R2_FB27: u32 = CAN_F2R2_FB27_Msk;
pub const CAN_F2R2_FB28_Pos: u32 = 28;
pub const CAN_F2R2_FB28_Msk: u32 = 0x1 << CAN_F2R2_FB28_Pos;
pub const CAN_F2R2_FB28: u32 = CAN_F2R2_FB28_Msk;
pub const CAN_F2R2_FB29_Pos: u32 = 29;
pub const CAN_F2R2_FB29_Msk: u32 = 0x1 << CAN_F2R2_FB29_Pos;
pub const CAN_F2R2_FB29: u32 = CAN_F2R2_FB29_Msk;
pub const CAN_F2R2_FB30_Pos: u32 = 30;
pub const CAN_F2R2_FB30_Msk: u32 = 0x1 << CAN_F2R2_FB30_Pos;
pub const CAN_F2R2_FB30: u32 = CAN_F2R2_FB30_Msk;
pub const CAN_F2R2_FB31_Pos: u32 = 31;
pub const CAN_F2R2_FB31_Msk: u32 = 0x1 << CAN_F2R2_FB31_Pos;
pub const CAN_F2R2_FB31: u32 = CAN_F2R2_FB31_Msk;
pub const CAN_F3R2_FB0_Pos: u32 = 0;
pub const CAN_F3R2_FB0_Msk: u32 = 0x1 << CAN_F3R2_FB0_Pos;
pub const CAN_F3R2_FB0: u32 = CAN_F3R2_FB0_Msk;
pub const CAN_F3R2_FB1_Pos: u32 = 1;
pub const CAN_F3R2_FB1_Msk: u32 = 0x1 << CAN_F3R2_FB1_Pos;
pub const CAN_F3R2_FB1: u32 = CAN_F3R2_FB1_Msk;
pub const CAN_F3R2_FB2_Pos: u32 = 2;
pub const CAN_F3R2_FB2_Msk: u32 = 0x1 << CAN_F3R2_FB2_Pos;
pub const CAN_F3R2_FB2: u32 = CAN_F3R2_FB2_Msk;
pub const CAN_F3R2_FB3_Pos: u32 = 3;
pub const CAN_F3R2_FB3_Msk: u32 = 0x1 << CAN_F3R2_FB3_Pos;
pub const CAN_F3R2_FB3: u32 = CAN_F3R2_FB3_Msk;
pub const CAN_F3R2_FB4_Pos: u32 = 4;
pub const CAN_F3R2_FB4_Msk: u32 = 0x1 << CAN_F3R2_FB4_Pos;
pub const CAN_F3R2_FB4: u32 = CAN_F3R2_FB4_Msk;
pub const CAN_F3R2_FB5_Pos: u32 = 5;
pub const CAN_F3R2_FB5_Msk: u32 = 0x1 << CAN_F3R2_FB5_Pos;
pub const CAN_F3R2_FB5: u32 = CAN_F3R2_FB5_Msk;
pub const CAN_F3R2_FB6_Pos: u32 = 6;
pub const CAN_F3R2_FB6_Msk: u32 = 0x1 << CAN_F3R2_FB6_Pos;
pub const CAN_F3R2_FB6: u32 = CAN_F3R2_FB6_Msk;
pub const CAN_F3R2_FB7_Pos: u32 = 7;
pub const CAN_F3R2_FB7_Msk: u32 = 0x1 << CAN_F3R2_FB7_Pos;
pub const CAN_F3R2_FB7: u32 = CAN_F3R2_FB7_Msk;
pub const CAN_F3R2_FB8_Pos: u32 = 8;
pub const CAN_F3R2_FB8_Msk: u32 = 0x1 << CAN_F3R2_FB8_Pos;
pub const CAN_F3R2_FB8: u32 = CAN_F3R2_FB8_Msk;
pub const CAN_F3R2_FB9_Pos: u32 = 9;
pub const CAN_F3R2_FB9_Msk: u32 = 0x1 << CAN_F3R2_FB9_Pos;
pub const CAN_F3R2_FB9: u32 = CAN_F3R2_FB9_Msk;
pub const CAN_F3R2_FB10_Pos: u32 = 10;
pub const CAN_F3R2_FB10_Msk: u32 = 0x1 << CAN_F3R2_FB10_Pos;
pub const CAN_F3R2_FB10: u32 = CAN_F3R2_FB10_Msk;
pub const CAN_F3R2_FB11_Pos: u32 = 11;
pub const CAN_F3R2_FB11_Msk: u32 = 0x1 << CAN_F3R2_FB11_Pos;
pub const CAN_F3R2_FB11: u32 = CAN_F3R2_FB11_Msk;
pub const CAN_F3R2_FB12_Pos: u32 = 12;
pub const CAN_F3R2_FB12_Msk: u32 = 0x1 << CAN_F3R2_FB12_Pos;
pub const CAN_F3R2_FB12: u32 = CAN_F3R2_FB12_Msk;
pub const CAN_F3R2_FB13_Pos: u32 = 13;
pub const CAN_F3R2_FB13_Msk: u32 = 0x1 << CAN_F3R2_FB13_Pos;
pub const CAN_F3R2_FB13: u32 = CAN_F3R2_FB13_Msk;
pub const CAN_F3R2_FB14_Pos: u32 = 14;
pub const CAN_F3R2_FB14_Msk: u32 = 0x1 << CAN_F3R2_FB14_Pos;
pub const CAN_F3R2_FB14: u32 = CAN_F3R2_FB14_Msk;
pub const CAN_F3R2_FB15_Pos: u32 = 15;
pub const CAN_F3R2_FB15_Msk: u32 = 0x1 << CAN_F3R2_FB15_Pos;
pub const CAN_F3R2_FB15: u32 = CAN_F3R2_FB15_Msk;
pub const CAN_F3R2_FB16_Pos: u32 = 16;
pub const CAN_F3R2_FB16_Msk: u32 = 0x1 << CAN_F3R2_FB16_Pos;
pub const CAN_F3R2_FB16: u32 = CAN_F3R2_FB16_Msk;
pub const CAN_F3R2_FB17_Pos: u32 = 17;
pub const CAN_F3R2_FB17_Msk: u32 = 0x1 << CAN_F3R2_FB17_Pos;
pub const CAN_F3R2_FB17: u32 = CAN_F3R2_FB17_Msk;
pub const CAN_F3R2_FB18_Pos: u32 = 18;
pub const CAN_F3R2_FB18_Msk: u32 = 0x1 << CAN_F3R2_FB18_Pos;
pub const CAN_F3R2_FB18: u32 = CAN_F3R2_FB18_Msk;
pub const CAN_F3R2_FB19_Pos: u32 = 19;
pub const CAN_F3R2_FB19_Msk: u32 = 0x1 << CAN_F3R2_FB19_Pos;
pub const CAN_F3R2_FB19: u32 = CAN_F3R2_FB19_Msk;
pub const CAN_F3R2_FB20_Pos: u32 = 20;
pub const CAN_F3R2_FB20_Msk: u32 = 0x1 << CAN_F3R2_FB20_Pos;
pub const CAN_F3R2_FB20: u32 = CAN_F3R2_FB20_Msk;
pub const CAN_F3R2_FB21_Pos: u32 = 21;
pub const CAN_F3R2_FB21_Msk: u32 = 0x1 << CAN_F3R2_FB21_Pos;
pub const CAN_F3R2_FB21: u32 = CAN_F3R2_FB21_Msk;
pub const CAN_F3R2_FB22_Pos: u32 = 22;
pub const CAN_F3R2_FB22_Msk: u32 = 0x1 << CAN_F3R2_FB22_Pos;
pub const CAN_F3R2_FB22: u32 = CAN_F3R2_FB22_Msk;
pub const CAN_F3R2_FB23_Pos: u32 = 23;
pub const CAN_F3R2_FB23_Msk: u32 = 0x1 << CAN_F3R2_FB23_Pos;
pub const CAN_F3R2_FB23: u32 = CAN_F3R2_FB23_Msk;
pub const CAN_F3R2_FB24_Pos: u32 = 24;
pub const CAN_F3R2_FB24_Msk: u32 = 0x1 << CAN_F3R2_FB24_Pos;
pub const CAN_F3R2_FB24: u32 = CAN_F3R2_FB24_Msk;
pub const CAN_F3R2_FB25_Pos: u32 = 25;
pub const CAN_F3R2_FB25_Msk: u32 = 0x1 << CAN_F3R2_FB25_Pos;
pub const CAN_F3R2_FB25: u32 = CAN_F3R2_FB25_Msk;
pub const CAN_F3R2_FB26_Pos: u32 = 26;
pub const CAN_F3R2_FB26_Msk: u32 = 0x1 << CAN_F3R2_FB26_Pos;
pub const CAN_F3R2_FB26: u32 = CAN_F3R2_FB26_Msk;
pub const CAN_F3R2_FB27_Pos: u32 = 27;
pub const CAN_F3R2_FB27_Msk: u32 = 0x1 << CAN_F3R2_FB27_Pos;
pub const CAN_F3R2_FB27: u32 = CAN_F3R2_FB27_Msk;
pub const CAN_F3R2_FB28_Pos: u32 = 28;
pub const CAN_F3R2_FB28_Msk: u32 = 0x1 << CAN_F3R2_FB28_Pos;
pub const CAN_F3R2_FB28: u32 = CAN_F3R2_FB28_Msk;
pub const CAN_F3R2_FB29_Pos: u32 = 29;
pub const CAN_F3R2_FB29_Msk: u32 = 0x1 << CAN_F3R2_FB29_Pos;
pub const CAN_F3R2_FB29: u32 = CAN_F3R2_FB29_Msk;
pub const CAN_F3R2_FB30_Pos: u32 = 30;
pub const CAN_F3R2_FB30_Msk: u32 = 0x1 << CAN_F3R2_FB30_Pos;
pub const CAN_F3R2_FB30: u32 = CAN_F3R2_FB30_Msk;
pub const CAN_F3R2_FB31_Pos: u32 = 31;
pub const CAN_F3R2_FB31_Msk: u32 = 0x1 << CAN_F3R2_FB31_Pos;
pub const CAN_F3R2_FB31: u32 = CAN_F3R2_FB31_Msk;
pub const CAN_F4R2_FB0_Pos: u32 = 0;
pub const CAN_F4R2_FB0_Msk: u32 = 0x1 << CAN_F4R2_FB0_Pos;
pub const CAN_F4R2_FB0: u32 = CAN_F4R2_FB0_Msk;
pub const CAN_F4R2_FB1_Pos: u32 = 1;
pub const CAN_F4R2_FB1_Msk: u32 = 0x1 << CAN_F4R2_FB1_Pos;
pub const CAN_F4R2_FB1: u32 = CAN_F4R2_FB1_Msk;
pub const CAN_F4R2_FB2_Pos: u32 = 2;
pub const CAN_F4R2_FB2_Msk: u32 = 0x1 << CAN_F4R2_FB2_Pos;
pub const CAN_F4R2_FB2: u32 = CAN_F4R2_FB2_Msk;
pub const CAN_F4R2_FB3_Pos: u32 = 3;
pub const CAN_F4R2_FB3_Msk: u32 = 0x1 << CAN_F4R2_FB3_Pos;
pub const CAN_F4R2_FB3: u32 = CAN_F4R2_FB3_Msk;
pub const CAN_F4R2_FB4_Pos: u32 = 4;
pub const CAN_F4R2_FB4_Msk: u32 = 0x1 << CAN_F4R2_FB4_Pos;
pub const CAN_F4R2_FB4: u32 = CAN_F4R2_FB4_Msk;
pub const CAN_F4R2_FB5_Pos: u32 = 5;
pub const CAN_F4R2_FB5_Msk: u32 = 0x1 << CAN_F4R2_FB5_Pos;
pub const CAN_F4R2_FB5: u32 = CAN_F4R2_FB5_Msk;
pub const CAN_F4R2_FB6_Pos: u32 = 6;
pub const CAN_F4R2_FB6_Msk: u32 = 0x1 << CAN_F4R2_FB6_Pos;
pub const CAN_F4R2_FB6: u32 = CAN_F4R2_FB6_Msk;
pub const CAN_F4R2_FB7_Pos: u32 = 7;
pub const CAN_F4R2_FB7_Msk: u32 = 0x1 << CAN_F4R2_FB7_Pos;
pub const CAN_F4R2_FB7: u32 = CAN_F4R2_FB7_Msk;
pub const CAN_F4R2_FB8_Pos: u32 = 8;
pub const CAN_F4R2_FB8_Msk: u32 = 0x1 << CAN_F4R2_FB8_Pos;
pub const CAN_F4R2_FB8: u32 = CAN_F4R2_FB8_Msk;
pub const CAN_F4R2_FB9_Pos: u32 = 9;
pub const CAN_F4R2_FB9_Msk: u32 = 0x1 << CAN_F4R2_FB9_Pos;
pub const CAN_F4R2_FB9: u32 = CAN_F4R2_FB9_Msk;
pub const CAN_F4R2_FB10_Pos: u32 = 10;
pub const CAN_F4R2_FB10_Msk: u32 = 0x1 << CAN_F4R2_FB10_Pos;
pub const CAN_F4R2_FB10: u32 = CAN_F4R2_FB10_Msk;
pub const CAN_F4R2_FB11_Pos: u32 = 11;
pub const CAN_F4R2_FB11_Msk: u32 = 0x1 << CAN_F4R2_FB11_Pos;
pub const CAN_F4R2_FB11: u32 = CAN_F4R2_FB11_Msk;
pub const CAN_F4R2_FB12_Pos: u32 = 12;
pub const CAN_F4R2_FB12_Msk: u32 = 0x1 << CAN_F4R2_FB12_Pos;
pub const CAN_F4R2_FB12: u32 = CAN_F4R2_FB12_Msk;
pub const CAN_F4R2_FB13_Pos: u32 = 13;
pub const CAN_F4R2_FB13_Msk: u32 = 0x1 << CAN_F4R2_FB13_Pos;
pub const CAN_F4R2_FB13: u32 = CAN_F4R2_FB13_Msk;
pub const CAN_F4R2_FB14_Pos: u32 = 14;
pub const CAN_F4R2_FB14_Msk: u32 = 0x1 << CAN_F4R2_FB14_Pos;
pub const CAN_F4R2_FB14: u32 = CAN_F4R2_FB14_Msk;
pub const CAN_F4R2_FB15_Pos: u32 = 15;
pub const CAN_F4R2_FB15_Msk: u32 = 0x1 << CAN_F4R2_FB15_Pos;
pub const CAN_F4R2_FB15: u32 = CAN_F4R2_FB15_Msk;
pub const CAN_F4R2_FB16_Pos: u32 = 16;
pub const CAN_F4R2_FB16_Msk: u32 = 0x1 << CAN_F4R2_FB16_Pos;
pub const CAN_F4R2_FB16: u32 = CAN_F4R2_FB16_Msk;
pub const CAN_F4R2_FB17_Pos: u32 = 17;
pub const CAN_F4R2_FB17_Msk: u32 = 0x1 << CAN_F4R2_FB17_Pos;
pub const CAN_F4R2_FB17: u32 = CAN_F4R2_FB17_Msk;
pub const CAN_F4R2_FB18_Pos: u32 = 18;
pub const CAN_F4R2_FB18_Msk: u32 = 0x1 << CAN_F4R2_FB18_Pos;
pub const CAN_F4R2_FB18: u32 = CAN_F4R2_FB18_Msk;
pub const CAN_F4R2_FB19_Pos: u32 = 19;
pub const CAN_F4R2_FB19_Msk: u32 = 0x1 << CAN_F4R2_FB19_Pos;
pub const CAN_F4R2_FB19: u32 = CAN_F4R2_FB19_Msk;
pub const CAN_F4R2_FB20_Pos: u32 = 20;
pub const CAN_F4R2_FB20_Msk: u32 = 0x1 << CAN_F4R2_FB20_Pos;
pub const CAN_F4R2_FB20: u32 = CAN_F4R2_FB20_Msk;
pub const CAN_F4R2_FB21_Pos: u32 = 21;
pub const CAN_F4R2_FB21_Msk: u32 = 0x1 << CAN_F4R2_FB21_Pos;
pub const CAN_F4R2_FB21: u32 = CAN_F4R2_FB21_Msk;
pub const CAN_F4R2_FB22_Pos: u32 = 22;
pub const CAN_F4R2_FB22_Msk: u32 = 0x1 << CAN_F4R2_FB22_Pos;
pub const CAN_F4R2_FB22: u32 = CAN_F4R2_FB22_Msk;
pub const CAN_F4R2_FB23_Pos: u32 = 23;
pub const CAN_F4R2_FB23_Msk: u32 = 0x1 << CAN_F4R2_FB23_Pos;
pub const CAN_F4R2_FB23: u32 = CAN_F4R2_FB23_Msk;
pub const CAN_F4R2_FB24_Pos: u32 = 24;
pub const CAN_F4R2_FB24_Msk: u32 = 0x1 << CAN_F4R2_FB24_Pos;
pub const CAN_F4R2_FB24: u32 = CAN_F4R2_FB24_Msk;
pub const CAN_F4R2_FB25_Pos: u32 = 25;
pub const CAN_F4R2_FB25_Msk: u32 = 0x1 << CAN_F4R2_FB25_Pos;
pub const CAN_F4R2_FB25: u32 = CAN_F4R2_FB25_Msk;
pub const CAN_F4R2_FB26_Pos: u32 = 26;
pub const CAN_F4R2_FB26_Msk: u32 = 0x1 << CAN_F4R2_FB26_Pos;
pub const CAN_F4R2_FB26: u32 = CAN_F4R2_FB26_Msk;
pub const CAN_F4R2_FB27_Pos: u32 = 27;
pub const CAN_F4R2_FB27_Msk: u32 = 0x1 << CAN_F4R2_FB27_Pos;
pub const CAN_F4R2_FB27: u32 = CAN_F4R2_FB27_Msk;
pub const CAN_F4R2_FB28_Pos: u32 = 28;
pub const CAN_F4R2_FB28_Msk: u32 = 0x1 << CAN_F4R2_FB28_Pos;
pub const CAN_F4R2_FB28: u32 = CAN_F4R2_FB28_Msk;
pub const CAN_F4R2_FB29_Pos: u32 = 29;
pub const CAN_F4R2_FB29_Msk: u32 = 0x1 << CAN_F4R2_FB29_Pos;
pub const CAN_F4R2_FB29: u32 = CAN_F4R2_FB29_Msk;
pub const CAN_F4R2_FB30_Pos: u32 = 30;
pub const CAN_F4R2_FB30_Msk: u32 = 0x1 << CAN_F4R2_FB30_Pos;
pub const CAN_F4R2_FB30: u32 = CAN_F4R2_FB30_Msk;
pub const CAN_F4R2_FB31_Pos: u32 = 31;
pub const CAN_F4R2_FB31_Msk: u32 = 0x1 << CAN_F4R2_FB31_Pos;
pub const CAN_F4R2_FB31: u32 = CAN_F4R2_FB31_Msk;
pub const CAN_F5R2_FB0_Pos: u32 = 0;
pub const CAN_F5R2_FB0_Msk: u32 = 0x1 << CAN_F5R2_FB0_Pos;
pub const CAN_F5R2_FB0: u32 = CAN_F5R2_FB0_Msk;
pub const CAN_F5R2_FB1_Pos: u32 = 1;
pub const CAN_F5R2_FB1_Msk: u32 = 0x1 << CAN_F5R2_FB1_Pos;
pub const CAN_F5R2_FB1: u32 = CAN_F5R2_FB1_Msk;
pub const CAN_F5R2_FB2_Pos: u32 = 2;
pub const CAN_F5R2_FB2_Msk: u32 = 0x1 << CAN_F5R2_FB2_Pos;
pub const CAN_F5R2_FB2: u32 = CAN_F5R2_FB2_Msk;
pub const CAN_F5R2_FB3_Pos: u32 = 3;
pub const CAN_F5R2_FB3_Msk: u32 = 0x1 << CAN_F5R2_FB3_Pos;
pub const CAN_F5R2_FB3: u32 = CAN_F5R2_FB3_Msk;
pub const CAN_F5R2_FB4_Pos: u32 = 4;
pub const CAN_F5R2_FB4_Msk: u32 = 0x1 << CAN_F5R2_FB4_Pos;
pub const CAN_F5R2_FB4: u32 = CAN_F5R2_FB4_Msk;
pub const CAN_F5R2_FB5_Pos: u32 = 5;
pub const CAN_F5R2_FB5_Msk: u32 = 0x1 << CAN_F5R2_FB5_Pos;
pub const CAN_F5R2_FB5: u32 = CAN_F5R2_FB5_Msk;
pub const CAN_F5R2_FB6_Pos: u32 = 6;
pub const CAN_F5R2_FB6_Msk: u32 = 0x1 << CAN_F5R2_FB6_Pos;
pub const CAN_F5R2_FB6: u32 = CAN_F5R2_FB6_Msk;
pub const CAN_F5R2_FB7_Pos: u32 = 7;
pub const CAN_F5R2_FB7_Msk: u32 = 0x1 << CAN_F5R2_FB7_Pos;
pub const CAN_F5R2_FB7: u32 = CAN_F5R2_FB7_Msk;
pub const CAN_F5R2_FB8_Pos: u32 = 8;
pub const CAN_F5R2_FB8_Msk: u32 = 0x1 << CAN_F5R2_FB8_Pos;
pub const CAN_F5R2_FB8: u32 = CAN_F5R2_FB8_Msk;
pub const CAN_F5R2_FB9_Pos: u32 = 9;
pub const CAN_F5R2_FB9_Msk: u32 = 0x1 << CAN_F5R2_FB9_Pos;
pub const CAN_F5R2_FB9: u32 = CAN_F5R2_FB9_Msk;
pub const CAN_F5R2_FB10_Pos: u32 = 10;
pub const CAN_F5R2_FB10_Msk: u32 = 0x1 << CAN_F5R2_FB10_Pos;
pub const CAN_F5R2_FB10: u32 = CAN_F5R2_FB10_Msk;
pub const CAN_F5R2_FB11_Pos: u32 = 11;
pub const CAN_F5R2_FB11_Msk: u32 = 0x1 << CAN_F5R2_FB11_Pos;
pub const CAN_F5R2_FB11: u32 = CAN_F5R2_FB11_Msk;
pub const CAN_F5R2_FB12_Pos: u32 = 12;
pub const CAN_F5R2_FB12_Msk: u32 = 0x1 << CAN_F5R2_FB12_Pos;
pub const CAN_F5R2_FB12: u32 = CAN_F5R2_FB12_Msk;
pub const CAN_F5R2_FB13_Pos: u32 = 13;
pub const CAN_F5R2_FB13_Msk: u32 = 0x1 << CAN_F5R2_FB13_Pos;
pub const CAN_F5R2_FB13: u32 = CAN_F5R2_FB13_Msk;
pub const CAN_F5R2_FB14_Pos: u32 = 14;
pub const CAN_F5R2_FB14_Msk: u32 = 0x1 << CAN_F5R2_FB14_Pos;
pub const CAN_F5R2_FB14: u32 = CAN_F5R2_FB14_Msk;
pub const CAN_F5R2_FB15_Pos: u32 = 15;
pub const CAN_F5R2_FB15_Msk: u32 = 0x1 << CAN_F5R2_FB15_Pos;
pub const CAN_F5R2_FB15: u32 = CAN_F5R2_FB15_Msk;
pub const CAN_F5R2_FB16_Pos: u32 = 16;
pub const CAN_F5R2_FB16_Msk: u32 = 0x1 << CAN_F5R2_FB16_Pos;
pub const CAN_F5R2_FB16: u32 = CAN_F5R2_FB16_Msk;
pub const CAN_F5R2_FB17_Pos: u32 = 17;
pub const CAN_F5R2_FB17_Msk: u32 = 0x1 << CAN_F5R2_FB17_Pos;
pub const CAN_F5R2_FB17: u32 = CAN_F5R2_FB17_Msk;
pub const CAN_F5R2_FB18_Pos: u32 = 18;
pub const CAN_F5R2_FB18_Msk: u32 = 0x1 << CAN_F5R2_FB18_Pos;
pub const CAN_F5R2_FB18: u32 = CAN_F5R2_FB18_Msk;
pub const CAN_F5R2_FB19_Pos: u32 = 19;
pub const CAN_F5R2_FB19_Msk: u32 = 0x1 << CAN_F5R2_FB19_Pos;
pub const CAN_F5R2_FB19: u32 = CAN_F5R2_FB19_Msk;
pub const CAN_F5R2_FB20_Pos: u32 = 20;
pub const CAN_F5R2_FB20_Msk: u32 = 0x1 << CAN_F5R2_FB20_Pos;
pub const CAN_F5R2_FB20: u32 = CAN_F5R2_FB20_Msk;
pub const CAN_F5R2_FB21_Pos: u32 = 21;
pub const CAN_F5R2_FB21_Msk: u32 = 0x1 << CAN_F5R2_FB21_Pos;
pub const CAN_F5R2_FB21: u32 = CAN_F5R2_FB21_Msk;
pub const CAN_F5R2_FB22_Pos: u32 = 22;
pub const CAN_F5R2_FB22_Msk: u32 = 0x1 << CAN_F5R2_FB22_Pos;
pub const CAN_F5R2_FB22: u32 = CAN_F5R2_FB22_Msk;
pub const CAN_F5R2_FB23_Pos: u32 = 23;
pub const CAN_F5R2_FB23_Msk: u32 = 0x1 << CAN_F5R2_FB23_Pos;
pub const CAN_F5R2_FB23: u32 = CAN_F5R2_FB23_Msk;
pub const CAN_F5R2_FB24_Pos: u32 = 24;
pub const CAN_F5R2_FB24_Msk: u32 = 0x1 << CAN_F5R2_FB24_Pos;
pub const CAN_F5R2_FB24: u32 = CAN_F5R2_FB24_Msk;
pub const CAN_F5R2_FB25_Pos: u32 = 25;
pub const CAN_F5R2_FB25_Msk: u32 = 0x1 << CAN_F5R2_FB25_Pos;
pub const CAN_F5R2_FB25: u32 = CAN_F5R2_FB25_Msk;
pub const CAN_F5R2_FB26_Pos: u32 = 26;
pub const CAN_F5R2_FB26_Msk: u32 = 0x1 << CAN_F5R2_FB26_Pos;
pub const CAN_F5R2_FB26: u32 = CAN_F5R2_FB26_Msk;
pub const CAN_F5R2_FB27_Pos: u32 = 27;
pub const CAN_F5R2_FB27_Msk: u32 = 0x1 << CAN_F5R2_FB27_Pos;
pub const CAN_F5R2_FB27: u32 = CAN_F5R2_FB27_Msk;
pub const CAN_F5R2_FB28_Pos: u32 = 28;
pub const CAN_F5R2_FB28_Msk: u32 = 0x1 << CAN_F5R2_FB28_Pos;
pub const CAN_F5R2_FB28: u32 = CAN_F5R2_FB28_Msk;
pub const CAN_F5R2_FB29_Pos: u32 = 29;
pub const CAN_F5R2_FB29_Msk: u32 = 0x1 << CAN_F5R2_FB29_Pos;
pub const CAN_F5R2_FB29: u32 = CAN_F5R2_FB29_Msk;
pub const CAN_F5R2_FB30_Pos: u32 = 30;
pub const CAN_F5R2_FB30_Msk: u32 = 0x1 << CAN_F5R2_FB30_Pos;
pub const CAN_F5R2_FB30: u32 = CAN_F5R2_FB30_Msk;
pub const CAN_F5R2_FB31_Pos: u32 = 31;
pub const CAN_F5R2_FB31_Msk: u32 = 0x1 << CAN_F5R2_FB31_Pos;
pub const CAN_F5R2_FB31: u32 = CAN_F5R2_FB31_Msk;
pub const CAN_F6R2_FB0_Pos: u32 = 0;
pub const CAN_F6R2_FB0_Msk: u32 = 0x1 << CAN_F6R2_FB0_Pos;
pub const CAN_F6R2_FB0: u32 = CAN_F6R2_FB0_Msk;
pub const CAN_F6R2_FB1_Pos: u32 = 1;
pub const CAN_F6R2_FB1_Msk: u32 = 0x1 << CAN_F6R2_FB1_Pos;
pub const CAN_F6R2_FB1: u32 = CAN_F6R2_FB1_Msk;
pub const CAN_F6R2_FB2_Pos: u32 = 2;
pub const CAN_F6R2_FB2_Msk: u32 = 0x1 << CAN_F6R2_FB2_Pos;
pub const CAN_F6R2_FB2: u32 = CAN_F6R2_FB2_Msk;
pub const CAN_F6R2_FB3_Pos: u32 = 3;
pub const CAN_F6R2_FB3_Msk: u32 = 0x1 << CAN_F6R2_FB3_Pos;
pub const CAN_F6R2_FB3: u32 = CAN_F6R2_FB3_Msk;
pub const CAN_F6R2_FB4_Pos: u32 = 4;
pub const CAN_F6R2_FB4_Msk: u32 = 0x1 << CAN_F6R2_FB4_Pos;
pub const CAN_F6R2_FB4: u32 = CAN_F6R2_FB4_Msk;
pub const CAN_F6R2_FB5_Pos: u32 = 5;
pub const CAN_F6R2_FB5_Msk: u32 = 0x1 << CAN_F6R2_FB5_Pos;
pub const CAN_F6R2_FB5: u32 = CAN_F6R2_FB5_Msk;
pub const CAN_F6R2_FB6_Pos: u32 = 6;
pub const CAN_F6R2_FB6_Msk: u32 = 0x1 << CAN_F6R2_FB6_Pos;
pub const CAN_F6R2_FB6: u32 = CAN_F6R2_FB6_Msk;
pub const CAN_F6R2_FB7_Pos: u32 = 7;
pub const CAN_F6R2_FB7_Msk: u32 = 0x1 << CAN_F6R2_FB7_Pos;
pub const CAN_F6R2_FB7: u32 = CAN_F6R2_FB7_Msk;
pub const CAN_F6R2_FB8_Pos: u32 = 8;
pub const CAN_F6R2_FB8_Msk: u32 = 0x1 << CAN_F6R2_FB8_Pos;
pub const CAN_F6R2_FB8: u32 = CAN_F6R2_FB8_Msk;
pub const CAN_F6R2_FB9_Pos: u32 = 9;
pub const CAN_F6R2_FB9_Msk: u32 = 0x1 << CAN_F6R2_FB9_Pos;
pub const CAN_F6R2_FB9: u32 = CAN_F6R2_FB9_Msk;
pub const CAN_F6R2_FB10_Pos: u32 = 10;
pub const CAN_F6R2_FB10_Msk: u32 = 0x1 << CAN_F6R2_FB10_Pos;
pub const CAN_F6R2_FB10: u32 = CAN_F6R2_FB10_Msk;
pub const CAN_F6R2_FB11_Pos: u32 = 11;
pub const CAN_F6R2_FB11_Msk: u32 = 0x1 << CAN_F6R2_FB11_Pos;
pub const CAN_F6R2_FB11: u32 = CAN_F6R2_FB11_Msk;
pub const CAN_F6R2_FB12_Pos: u32 = 12;
pub const CAN_F6R2_FB12_Msk: u32 = 0x1 << CAN_F6R2_FB12_Pos;
pub const CAN_F6R2_FB12: u32 = CAN_F6R2_FB12_Msk;
pub const CAN_F6R2_FB13_Pos: u32 = 13;
pub const CAN_F6R2_FB13_Msk: u32 = 0x1 << CAN_F6R2_FB13_Pos;
pub const CAN_F6R2_FB13: u32 = CAN_F6R2_FB13_Msk;
pub const CAN_F6R2_FB14_Pos: u32 = 14;
pub const CAN_F6R2_FB14_Msk: u32 = 0x1 << CAN_F6R2_FB14_Pos;
pub const CAN_F6R2_FB14: u32 = CAN_F6R2_FB14_Msk;
pub const CAN_F6R2_FB15_Pos: u32 = 15;
pub const CAN_F6R2_FB15_Msk: u32 = 0x1 << CAN_F6R2_FB15_Pos;
pub const CAN_F6R2_FB15: u32 = CAN_F6R2_FB15_Msk;
pub const CAN_F6R2_FB16_Pos: u32 = 16;
pub const CAN_F6R2_FB16_Msk: u32 = 0x1 << CAN_F6R2_FB16_Pos;
pub const CAN_F6R2_FB16: u32 = CAN_F6R2_FB16_Msk;
pub const CAN_F6R2_FB17_Pos: u32 = 17;
pub const CAN_F6R2_FB17_Msk: u32 = 0x1 << CAN_F6R2_FB17_Pos;
pub const CAN_F6R2_FB17: u32 = CAN_F6R2_FB17_Msk;
pub const CAN_F6R2_FB18_Pos: u32 = 18;
pub const CAN_F6R2_FB18_Msk: u32 = 0x1 << CAN_F6R2_FB18_Pos;
pub const CAN_F6R2_FB18: u32 = CAN_F6R2_FB18_Msk;
pub const CAN_F6R2_FB19_Pos: u32 = 19;
pub const CAN_F6R2_FB19_Msk: u32 = 0x1 << CAN_F6R2_FB19_Pos;
pub const CAN_F6R2_FB19: u32 = CAN_F6R2_FB19_Msk;
pub const CAN_F6R2_FB20_Pos: u32 = 20;
pub const CAN_F6R2_FB20_Msk: u32 = 0x1 << CAN_F6R2_FB20_Pos;
pub const CAN_F6R2_FB20: u32 = CAN_F6R2_FB20_Msk;
pub const CAN_F6R2_FB21_Pos: u32 = 21;
pub const CAN_F6R2_FB21_Msk: u32 = 0x1 << CAN_F6R2_FB21_Pos;
pub const CAN_F6R2_FB21: u32 = CAN_F6R2_FB21_Msk;
pub const CAN_F6R2_FB22_Pos: u32 = 22;
pub const CAN_F6R2_FB22_Msk: u32 = 0x1 << CAN_F6R2_FB22_Pos;
pub const CAN_F6R2_FB22: u32 = CAN_F6R2_FB22_Msk;
pub const CAN_F6R2_FB23_Pos: u32 = 23;
pub const CAN_F6R2_FB23_Msk: u32 = 0x1 << CAN_F6R2_FB23_Pos;
pub const CAN_F6R2_FB23: u32 = CAN_F6R2_FB23_Msk;
pub const CAN_F6R2_FB24_Pos: u32 = 24;
pub const CAN_F6R2_FB24_Msk: u32 = 0x1 << CAN_F6R2_FB24_Pos;
pub const CAN_F6R2_FB24: u32 = CAN_F6R2_FB24_Msk;
pub const CAN_F6R2_FB25_Pos: u32 = 25;
pub const CAN_F6R2_FB25_Msk: u32 = 0x1 << CAN_F6R2_FB25_Pos;
pub const CAN_F6R2_FB25: u32 = CAN_F6R2_FB25_Msk;
pub const CAN_F6R2_FB26_Pos: u32 = 26;
pub const CAN_F6R2_FB26_Msk: u32 = 0x1 << CAN_F6R2_FB26_Pos;
pub const CAN_F6R2_FB26: u32 = CAN_F6R2_FB26_Msk;
pub const CAN_F6R2_FB27_Pos: u32 = 27;
pub const CAN_F6R2_FB27_Msk: u32 = 0x1 << CAN_F6R2_FB27_Pos;
pub const CAN_F6R2_FB27: u32 = CAN_F6R2_FB27_Msk;
pub const CAN_F6R2_FB28_Pos: u32 = 28;
pub const CAN_F6R2_FB28_Msk: u32 = 0x1 << CAN_F6R2_FB28_Pos;
pub const CAN_F6R2_FB28: u32 = CAN_F6R2_FB28_Msk;
pub const CAN_F6R2_FB29_Pos: u32 = 29;
pub const CAN_F6R2_FB29_Msk: u32 = 0x1 << CAN_F6R2_FB29_Pos;
pub const CAN_F6R2_FB29: u32 = CAN_F6R2_FB29_Msk;
pub const CAN_F6R2_FB30_Pos: u32 = 30;
pub const CAN_F6R2_FB30_Msk: u32 = 0x1 << CAN_F6R2_FB30_Pos;
pub const CAN_F6R2_FB30: u32 = CAN_F6R2_FB30_Msk;
pub const CAN_F6R2_FB31_Pos: u32 = 31;
pub const CAN_F6R2_FB31_Msk: u32 = 0x1 << CAN_F6R2_FB31_Pos;
pub const CAN_F6R2_FB31: u32 = CAN_F6R2_FB31_Msk;
pub const CAN_F7R2_FB0_Pos: u32 = 0;
pub const CAN_F7R2_FB0_Msk: u32 = 0x1 << CAN_F7R2_FB0_Pos;
pub const CAN_F7R2_FB0: u32 = CAN_F7R2_FB0_Msk;
pub const CAN_F7R2_FB1_Pos: u32 = 1;
pub const CAN_F7R2_FB1_Msk: u32 = 0x1 << CAN_F7R2_FB1_Pos;
pub const CAN_F7R2_FB1: u32 = CAN_F7R2_FB1_Msk;
pub const CAN_F7R2_FB2_Pos: u32 = 2;
pub const CAN_F7R2_FB2_Msk: u32 = 0x1 << CAN_F7R2_FB2_Pos;
pub const CAN_F7R2_FB2: u32 = CAN_F7R2_FB2_Msk;
pub const CAN_F7R2_FB3_Pos: u32 = 3;
pub const CAN_F7R2_FB3_Msk: u32 = 0x1 << CAN_F7R2_FB3_Pos;
pub const CAN_F7R2_FB3: u32 = CAN_F7R2_FB3_Msk;
pub const CAN_F7R2_FB4_Pos: u32 = 4;
pub const CAN_F7R2_FB4_Msk: u32 = 0x1 << CAN_F7R2_FB4_Pos;
pub const CAN_F7R2_FB4: u32 = CAN_F7R2_FB4_Msk;
pub const CAN_F7R2_FB5_Pos: u32 = 5;
pub const CAN_F7R2_FB5_Msk: u32 = 0x1 << CAN_F7R2_FB5_Pos;
pub const CAN_F7R2_FB5: u32 = CAN_F7R2_FB5_Msk;
pub const CAN_F7R2_FB6_Pos: u32 = 6;
pub const CAN_F7R2_FB6_Msk: u32 = 0x1 << CAN_F7R2_FB6_Pos;
pub const CAN_F7R2_FB6: u32 = CAN_F7R2_FB6_Msk;
pub const CAN_F7R2_FB7_Pos: u32 = 7;
pub const CAN_F7R2_FB7_Msk: u32 = 0x1 << CAN_F7R2_FB7_Pos;
pub const CAN_F7R2_FB7: u32 = CAN_F7R2_FB7_Msk;
pub const CAN_F7R2_FB8_Pos: u32 = 8;
pub const CAN_F7R2_FB8_Msk: u32 = 0x1 << CAN_F7R2_FB8_Pos;
pub const CAN_F7R2_FB8: u32 = CAN_F7R2_FB8_Msk;
pub const CAN_F7R2_FB9_Pos: u32 = 9;
pub const CAN_F7R2_FB9_Msk: u32 = 0x1 << CAN_F7R2_FB9_Pos;
pub const CAN_F7R2_FB9: u32 = CAN_F7R2_FB9_Msk;
pub const CAN_F7R2_FB10_Pos: u32 = 10;
pub const CAN_F7R2_FB10_Msk: u32 = 0x1 << CAN_F7R2_FB10_Pos;
pub const CAN_F7R2_FB10: u32 = CAN_F7R2_FB10_Msk;
pub const CAN_F7R2_FB11_Pos: u32 = 11;
pub const CAN_F7R2_FB11_Msk: u32 = 0x1 << CAN_F7R2_FB11_Pos;
pub const CAN_F7R2_FB11: u32 = CAN_F7R2_FB11_Msk;
pub const CAN_F7R2_FB12_Pos: u32 = 12;
pub const CAN_F7R2_FB12_Msk: u32 = 0x1 << CAN_F7R2_FB12_Pos;
pub const CAN_F7R2_FB12: u32 = CAN_F7R2_FB12_Msk;
pub const CAN_F7R2_FB13_Pos: u32 = 13;
pub const CAN_F7R2_FB13_Msk: u32 = 0x1 << CAN_F7R2_FB13_Pos;
pub const CAN_F7R2_FB13: u32 = CAN_F7R2_FB13_Msk;
pub const CAN_F7R2_FB14_Pos: u32 = 14;
pub const CAN_F7R2_FB14_Msk: u32 = 0x1 << CAN_F7R2_FB14_Pos;
pub const CAN_F7R2_FB14: u32 = CAN_F7R2_FB14_Msk;
pub const CAN_F7R2_FB15_Pos: u32 = 15;
pub const CAN_F7R2_FB15_Msk: u32 = 0x1 << CAN_F7R2_FB15_Pos;
pub const CAN_F7R2_FB15: u32 = CAN_F7R2_FB15_Msk;
pub const CAN_F7R2_FB16_Pos: u32 = 16;
pub const CAN_F7R2_FB16_Msk: u32 = 0x1 << CAN_F7R2_FB16_Pos;
pub const CAN_F7R2_FB16: u32 = CAN_F7R2_FB16_Msk;
pub const CAN_F7R2_FB17_Pos: u32 = 17;
pub const CAN_F7R2_FB17_Msk: u32 = 0x1 << CAN_F7R2_FB17_Pos;
pub const CAN_F7R2_FB17: u32 = CAN_F7R2_FB17_Msk;
pub const CAN_F7R2_FB18_Pos: u32 = 18;
pub const CAN_F7R2_FB18_Msk: u32 = 0x1 << CAN_F7R2_FB18_Pos;
pub const CAN_F7R2_FB18: u32 = CAN_F7R2_FB18_Msk;
pub const CAN_F7R2_FB19_Pos: u32 = 19;
pub const CAN_F7R2_FB19_Msk: u32 = 0x1 << CAN_F7R2_FB19_Pos;
pub const CAN_F7R2_FB19: u32 = CAN_F7R2_FB19_Msk;
pub const CAN_F7R2_FB20_Pos: u32 = 20;
pub const CAN_F7R2_FB20_Msk: u32 = 0x1 << CAN_F7R2_FB20_Pos;
pub const CAN_F7R2_FB20: u32 = CAN_F7R2_FB20_Msk;
pub const CAN_F7R2_FB21_Pos: u32 = 21;
pub const CAN_F7R2_FB21_Msk: u32 = 0x1 << CAN_F7R2_FB21_Pos;
pub const CAN_F7R2_FB21: u32 = CAN_F7R2_FB21_Msk;
pub const CAN_F7R2_FB22_Pos: u32 = 22;
pub const CAN_F7R2_FB22_Msk: u32 = 0x1 << CAN_F7R2_FB22_Pos;
pub const CAN_F7R2_FB22: u32 = CAN_F7R2_FB22_Msk;
pub const CAN_F7R2_FB23_Pos: u32 = 23;
pub const CAN_F7R2_FB23_Msk: u32 = 0x1 << CAN_F7R2_FB23_Pos;
pub const CAN_F7R2_FB23: u32 = CAN_F7R2_FB23_Msk;
pub const CAN_F7R2_FB24_Pos: u32 = 24;
pub const CAN_F7R2_FB24_Msk: u32 = 0x1 << CAN_F7R2_FB24_Pos;
pub const CAN_F7R2_FB24: u32 = CAN_F7R2_FB24_Msk;
pub const CAN_F7R2_FB25_Pos: u32 = 25;
pub const CAN_F7R2_FB25_Msk: u32 = 0x1 << CAN_F7R2_FB25_Pos;
pub const CAN_F7R2_FB25: u32 = CAN_F7R2_FB25_Msk;
pub const CAN_F7R2_FB26_Pos: u32 = 26;
pub const CAN_F7R2_FB26_Msk: u32 = 0x1 << CAN_F7R2_FB26_Pos;
pub const CAN_F7R2_FB26: u32 = CAN_F7R2_FB26_Msk;
pub const CAN_F7R2_FB27_Pos: u32 = 27;
pub const CAN_F7R2_FB27_Msk: u32 = 0x1 << CAN_F7R2_FB27_Pos;
pub const CAN_F7R2_FB27: u32 = CAN_F7R2_FB27_Msk;
pub const CAN_F7R2_FB28_Pos: u32 = 28;
pub const CAN_F7R2_FB28_Msk: u32 = 0x1 << CAN_F7R2_FB28_Pos;
pub const CAN_F7R2_FB28: u32 = CAN_F7R2_FB28_Msk;
pub const CAN_F7R2_FB29_Pos: u32 = 29;
pub const CAN_F7R2_FB29_Msk: u32 = 0x1 << CAN_F7R2_FB29_Pos;
pub const CAN_F7R2_FB29: u32 = CAN_F7R2_FB29_Msk;
pub const CAN_F7R2_FB30_Pos: u32 = 30;
pub const CAN_F7R2_FB30_Msk: u32 = 0x1 << CAN_F7R2_FB30_Pos;
pub const CAN_F7R2_FB30: u32 = CAN_F7R2_FB30_Msk;
pub const CAN_F7R2_FB31_Pos: u32 = 31;
pub const CAN_F7R2_FB31_Msk: u32 = 0x1 << CAN_F7R2_FB31_Pos;
pub const CAN_F7R2_FB31: u32 = CAN_F7R2_FB31_Msk;
pub const CAN_F8R2_FB0_Pos: u32 = 0;
pub const CAN_F8R2_FB0_Msk: u32 = 0x1 << CAN_F8R2_FB0_Pos;
pub const CAN_F8R2_FB0: u32 = CAN_F8R2_FB0_Msk;
pub const CAN_F8R2_FB1_Pos: u32 = 1;
pub const CAN_F8R2_FB1_Msk: u32 = 0x1 << CAN_F8R2_FB1_Pos;
pub const CAN_F8R2_FB1: u32 = CAN_F8R2_FB1_Msk;
pub const CAN_F8R2_FB2_Pos: u32 = 2;
pub const CAN_F8R2_FB2_Msk: u32 = 0x1 << CAN_F8R2_FB2_Pos;
pub const CAN_F8R2_FB2: u32 = CAN_F8R2_FB2_Msk;
pub const CAN_F8R2_FB3_Pos: u32 = 3;
pub const CAN_F8R2_FB3_Msk: u32 = 0x1 << CAN_F8R2_FB3_Pos;
pub const CAN_F8R2_FB3: u32 = CAN_F8R2_FB3_Msk;
pub const CAN_F8R2_FB4_Pos: u32 = 4;
pub const CAN_F8R2_FB4_Msk: u32 = 0x1 << CAN_F8R2_FB4_Pos;
pub const CAN_F8R2_FB4: u32 = CAN_F8R2_FB4_Msk;
pub const CAN_F8R2_FB5_Pos: u32 = 5;
pub const CAN_F8R2_FB5_Msk: u32 = 0x1 << CAN_F8R2_FB5_Pos;
pub const CAN_F8R2_FB5: u32 = CAN_F8R2_FB5_Msk;
pub const CAN_F8R2_FB6_Pos: u32 = 6;
pub const CAN_F8R2_FB6_Msk: u32 = 0x1 << CAN_F8R2_FB6_Pos;
pub const CAN_F8R2_FB6: u32 = CAN_F8R2_FB6_Msk;
pub const CAN_F8R2_FB7_Pos: u32 = 7;
pub const CAN_F8R2_FB7_Msk: u32 = 0x1 << CAN_F8R2_FB7_Pos;
pub const CAN_F8R2_FB7: u32 = CAN_F8R2_FB7_Msk;
pub const CAN_F8R2_FB8_Pos: u32 = 8;
pub const CAN_F8R2_FB8_Msk: u32 = 0x1 << CAN_F8R2_FB8_Pos;
pub const CAN_F8R2_FB8: u32 = CAN_F8R2_FB8_Msk;
pub const CAN_F8R2_FB9_Pos: u32 = 9;
pub const CAN_F8R2_FB9_Msk: u32 = 0x1 << CAN_F8R2_FB9_Pos;
pub const CAN_F8R2_FB9: u32 = CAN_F8R2_FB9_Msk;
pub const CAN_F8R2_FB10_Pos: u32 = 10;
pub const CAN_F8R2_FB10_Msk: u32 = 0x1 << CAN_F8R2_FB10_Pos;
pub const CAN_F8R2_FB10: u32 = CAN_F8R2_FB10_Msk;
pub const CAN_F8R2_FB11_Pos: u32 = 11;
pub const CAN_F8R2_FB11_Msk: u32 = 0x1 << CAN_F8R2_FB11_Pos;
pub const CAN_F8R2_FB11: u32 = CAN_F8R2_FB11_Msk;
pub const CAN_F8R2_FB12_Pos: u32 = 12;
pub const CAN_F8R2_FB12_Msk: u32 = 0x1 << CAN_F8R2_FB12_Pos;
pub const CAN_F8R2_FB12: u32 = CAN_F8R2_FB12_Msk;
pub const CAN_F8R2_FB13_Pos: u32 = 13;
pub const CAN_F8R2_FB13_Msk: u32 = 0x1 << CAN_F8R2_FB13_Pos;
pub const CAN_F8R2_FB13: u32 = CAN_F8R2_FB13_Msk;
pub const CAN_F8R2_FB14_Pos: u32 = 14;
pub const CAN_F8R2_FB14_Msk: u32 = 0x1 << CAN_F8R2_FB14_Pos;
pub const CAN_F8R2_FB14: u32 = CAN_F8R2_FB14_Msk;
pub const CAN_F8R2_FB15_Pos: u32 = 15;
pub const CAN_F8R2_FB15_Msk: u32 = 0x1 << CAN_F8R2_FB15_Pos;
pub const CAN_F8R2_FB15: u32 = CAN_F8R2_FB15_Msk;
pub const CAN_F8R2_FB16_Pos: u32 = 16;
pub const CAN_F8R2_FB16_Msk: u32 = 0x1 << CAN_F8R2_FB16_Pos;
pub const CAN_F8R2_FB16: u32 = CAN_F8R2_FB16_Msk;
pub const CAN_F8R2_FB17_Pos: u32 = 17;
pub const CAN_F8R2_FB17_Msk: u32 = 0x1 << CAN_F8R2_FB17_Pos;
pub const CAN_F8R2_FB17: u32 = CAN_F8R2_FB17_Msk;
pub const CAN_F8R2_FB18_Pos: u32 = 18;
pub const CAN_F8R2_FB18_Msk: u32 = 0x1 << CAN_F8R2_FB18_Pos;
pub const CAN_F8R2_FB18: u32 = CAN_F8R2_FB18_Msk;
pub const CAN_F8R2_FB19_Pos: u32 = 19;
pub const CAN_F8R2_FB19_Msk: u32 = 0x1 << CAN_F8R2_FB19_Pos;
pub const CAN_F8R2_FB19: u32 = CAN_F8R2_FB19_Msk;
pub const CAN_F8R2_FB20_Pos: u32 = 20;
pub const CAN_F8R2_FB20_Msk: u32 = 0x1 << CAN_F8R2_FB20_Pos;
pub const CAN_F8R2_FB20: u32 = CAN_F8R2_FB20_Msk;
pub const CAN_F8R2_FB21_Pos: u32 = 21;
pub const CAN_F8R2_FB21_Msk: u32 = 0x1 << CAN_F8R2_FB21_Pos;
pub const CAN_F8R2_FB21: u32 = CAN_F8R2_FB21_Msk;
pub const CAN_F8R2_FB22_Pos: u32 = 22;
pub const CAN_F8R2_FB22_Msk: u32 = 0x1 << CAN_F8R2_FB22_Pos;
pub const CAN_F8R2_FB22: u32 = CAN_F8R2_FB22_Msk;
pub const CAN_F8R2_FB23_Pos: u32 = 23;
pub const CAN_F8R2_FB23_Msk: u32 = 0x1 << CAN_F8R2_FB23_Pos;
pub const CAN_F8R2_FB23: u32 = CAN_F8R2_FB23_Msk;
pub const CAN_F8R2_FB24_Pos: u32 = 24;
pub const CAN_F8R2_FB24_Msk: u32 = 0x1 << CAN_F8R2_FB24_Pos;
pub const CAN_F8R2_FB24: u32 = CAN_F8R2_FB24_Msk;
pub const CAN_F8R2_FB25_Pos: u32 = 25;
pub const CAN_F8R2_FB25_Msk: u32 = 0x1 << CAN_F8R2_FB25_Pos;
pub const CAN_F8R2_FB25: u32 = CAN_F8R2_FB25_Msk;
pub const CAN_F8R2_FB26_Pos: u32 = 26;
pub const CAN_F8R2_FB26_Msk: u32 = 0x1 << CAN_F8R2_FB26_Pos;
pub const CAN_F8R2_FB26: u32 = CAN_F8R2_FB26_Msk;
pub const CAN_F8R2_FB27_Pos: u32 = 27;
pub const CAN_F8R2_FB27_Msk: u32 = 0x1 << CAN_F8R2_FB27_Pos;
pub const CAN_F8R2_FB27: u32 = CAN_F8R2_FB27_Msk;
pub const CAN_F8R2_FB28_Pos: u32 = 28;
pub const CAN_F8R2_FB28_Msk: u32 = 0x1 << CAN_F8R2_FB28_Pos;
pub const CAN_F8R2_FB28: u32 = CAN_F8R2_FB28_Msk;
pub const CAN_F8R2_FB29_Pos: u32 = 29;
pub const CAN_F8R2_FB29_Msk: u32 = 0x1 << CAN_F8R2_FB29_Pos;
pub const CAN_F8R2_FB29: u32 = CAN_F8R2_FB29_Msk;
pub const CAN_F8R2_FB30_Pos: u32 = 30;
pub const CAN_F8R2_FB30_Msk: u32 = 0x1 << CAN_F8R2_FB30_Pos;
pub const CAN_F8R2_FB30: u32 = CAN_F8R2_FB30_Msk;
pub const CAN_F8R2_FB31_Pos: u32 = 31;
pub const CAN_F8R2_FB31_Msk: u32 = 0x1 << CAN_F8R2_FB31_Pos;
pub const CAN_F8R2_FB31: u32 = CAN_F8R2_FB31_Msk;
pub const CAN_F9R2_FB0_Pos: u32 = 0;
pub const CAN_F9R2_FB0_Msk: u32 = 0x1 << CAN_F9R2_FB0_Pos;
pub const CAN_F9R2_FB0: u32 = CAN_F9R2_FB0_Msk;
pub const CAN_F9R2_FB1_Pos: u32 = 1;
pub const CAN_F9R2_FB1_Msk: u32 = 0x1 << CAN_F9R2_FB1_Pos;
pub const CAN_F9R2_FB1: u32 = CAN_F9R2_FB1_Msk;
pub const CAN_F9R2_FB2_Pos: u32 = 2;
pub const CAN_F9R2_FB2_Msk: u32 = 0x1 << CAN_F9R2_FB2_Pos;
pub const CAN_F9R2_FB2: u32 = CAN_F9R2_FB2_Msk;
pub const CAN_F9R2_FB3_Pos: u32 = 3;
pub const CAN_F9R2_FB3_Msk: u32 = 0x1 << CAN_F9R2_FB3_Pos;
pub const CAN_F9R2_FB3: u32 = CAN_F9R2_FB3_Msk;
pub const CAN_F9R2_FB4_Pos: u32 = 4;
pub const CAN_F9R2_FB4_Msk: u32 = 0x1 << CAN_F9R2_FB4_Pos;
pub const CAN_F9R2_FB4: u32 = CAN_F9R2_FB4_Msk;
pub const CAN_F9R2_FB5_Pos: u32 = 5;
pub const CAN_F9R2_FB5_Msk: u32 = 0x1 << CAN_F9R2_FB5_Pos;
pub const CAN_F9R2_FB5: u32 = CAN_F9R2_FB5_Msk;
pub const CAN_F9R2_FB6_Pos: u32 = 6;
pub const CAN_F9R2_FB6_Msk: u32 = 0x1 << CAN_F9R2_FB6_Pos;
pub const CAN_F9R2_FB6: u32 = CAN_F9R2_FB6_Msk;
pub const CAN_F9R2_FB7_Pos: u32 = 7;
pub const CAN_F9R2_FB7_Msk: u32 = 0x1 << CAN_F9R2_FB7_Pos;
pub const CAN_F9R2_FB7: u32 = CAN_F9R2_FB7_Msk;
pub const CAN_F9R2_FB8_Pos: u32 = 8;
pub const CAN_F9R2_FB8_Msk: u32 = 0x1 << CAN_F9R2_FB8_Pos;
pub const CAN_F9R2_FB8: u32 = CAN_F9R2_FB8_Msk;
pub const CAN_F9R2_FB9_Pos: u32 = 9;
pub const CAN_F9R2_FB9_Msk: u32 = 0x1 << CAN_F9R2_FB9_Pos;
pub const CAN_F9R2_FB9: u32 = CAN_F9R2_FB9_Msk;
pub const CAN_F9R2_FB10_Pos: u32 = 10;
pub const CAN_F9R2_FB10_Msk: u32 = 0x1 << CAN_F9R2_FB10_Pos;
pub const CAN_F9R2_FB10: u32 = CAN_F9R2_FB10_Msk;
pub const CAN_F9R2_FB11_Pos: u32 = 11;
pub const CAN_F9R2_FB11_Msk: u32 = 0x1 << CAN_F9R2_FB11_Pos;
pub const CAN_F9R2_FB11: u32 = CAN_F9R2_FB11_Msk;
pub const CAN_F9R2_FB12_Pos: u32 = 12;
pub const CAN_F9R2_FB12_Msk: u32 = 0x1 << CAN_F9R2_FB12_Pos;
pub const CAN_F9R2_FB12: u32 = CAN_F9R2_FB12_Msk;
pub const CAN_F9R2_FB13_Pos: u32 = 13;
pub const CAN_F9R2_FB13_Msk: u32 = 0x1 << CAN_F9R2_FB13_Pos;
pub const CAN_F9R2_FB13: u32 = CAN_F9R2_FB13_Msk;
pub const CAN_F9R2_FB14_Pos: u32 = 14;
pub const CAN_F9R2_FB14_Msk: u32 = 0x1 << CAN_F9R2_FB14_Pos;
pub const CAN_F9R2_FB14: u32 = CAN_F9R2_FB14_Msk;
pub const CAN_F9R2_FB15_Pos: u32 = 15;
pub const CAN_F9R2_FB15_Msk: u32 = 0x1 << CAN_F9R2_FB15_Pos;
pub const CAN_F9R2_FB15: u32 = CAN_F9R2_FB15_Msk;
pub const CAN_F9R2_FB16_Pos: u32 = 16;
pub const CAN_F9R2_FB16_Msk: u32 = 0x1 << CAN_F9R2_FB16_Pos;
pub const CAN_F9R2_FB16: u32 = CAN_F9R2_FB16_Msk;
pub const CAN_F9R2_FB17_Pos: u32 = 17;
pub const CAN_F9R2_FB17_Msk: u32 = 0x1 << CAN_F9R2_FB17_Pos;
pub const CAN_F9R2_FB17: u32 = CAN_F9R2_FB17_Msk;
pub const CAN_F9R2_FB18_Pos: u32 = 18;
pub const CAN_F9R2_FB18_Msk: u32 = 0x1 << CAN_F9R2_FB18_Pos;
pub const CAN_F9R2_FB18: u32 = CAN_F9R2_FB18_Msk;
pub const CAN_F9R2_FB19_Pos: u32 = 19;
pub const CAN_F9R2_FB19_Msk: u32 = 0x1 << CAN_F9R2_FB19_Pos;
pub const CAN_F9R2_FB19: u32 = CAN_F9R2_FB19_Msk;
pub const CAN_F9R2_FB20_Pos: u32 = 20;
pub const CAN_F9R2_FB20_Msk: u32 = 0x1 << CAN_F9R2_FB20_Pos;
pub const CAN_F9R2_FB20: u32 = CAN_F9R2_FB20_Msk;
pub const CAN_F9R2_FB21_Pos: u32 = 21;
pub const CAN_F9R2_FB21_Msk: u32 = 0x1 << CAN_F9R2_FB21_Pos;
pub const CAN_F9R2_FB21: u32 = CAN_F9R2_FB21_Msk;
pub const CAN_F9R2_FB22_Pos: u32 = 22;
pub const CAN_F9R2_FB22_Msk: u32 = 0x1 << CAN_F9R2_FB22_Pos;
pub const CAN_F9R2_FB22: u32 = CAN_F9R2_FB22_Msk;
pub const CAN_F9R2_FB23_Pos: u32 = 23;
pub const CAN_F9R2_FB23_Msk: u32 = 0x1 << CAN_F9R2_FB23_Pos;
pub const CAN_F9R2_FB23: u32 = CAN_F9R2_FB23_Msk;
pub const CAN_F9R2_FB24_Pos: u32 = 24;
pub const CAN_F9R2_FB24_Msk: u32 = 0x1 << CAN_F9R2_FB24_Pos;
pub const CAN_F9R2_FB24: u32 = CAN_F9R2_FB24_Msk;
pub const CAN_F9R2_FB25_Pos: u32 = 25;
pub const CAN_F9R2_FB25_Msk: u32 = 0x1 << CAN_F9R2_FB25_Pos;
pub const CAN_F9R2_FB25: u32 = CAN_F9R2_FB25_Msk;
pub const CAN_F9R2_FB26_Pos: u32 = 26;
pub const CAN_F9R2_FB26_Msk: u32 = 0x1 << CAN_F9R2_FB26_Pos;
pub const CAN_F9R2_FB26: u32 = CAN_F9R2_FB26_Msk;
pub const CAN_F9R2_FB27_Pos: u32 = 27;
pub const CAN_F9R2_FB27_Msk: u32 = 0x1 << CAN_F9R2_FB27_Pos;
pub const CAN_F9R2_FB27: u32 = CAN_F9R2_FB27_Msk;
pub const CAN_F9R2_FB28_Pos: u32 = 28;
pub const CAN_F9R2_FB28_Msk: u32 = 0x1 << CAN_F9R2_FB28_Pos;
pub const CAN_F9R2_FB28: u32 = CAN_F9R2_FB28_Msk;
pub const CAN_F9R2_FB29_Pos: u32 = 29;
pub const CAN_F9R2_FB29_Msk: u32 = 0x1 << CAN_F9R2_FB29_Pos;
pub const CAN_F9R2_FB29: u32 = CAN_F9R2_FB29_Msk;
pub const CAN_F9R2_FB30_Pos: u32 = 30;
pub const CAN_F9R2_FB30_Msk: u32 = 0x1 << CAN_F9R2_FB30_Pos;
pub const CAN_F9R2_FB30: u32 = CAN_F9R2_FB30_Msk;
pub const CAN_F9R2_FB31_Pos: u32 = 31;
pub const CAN_F9R2_FB31_Msk: u32 = 0x1 << CAN_F9R2_FB31_Pos;
pub const CAN_F9R2_FB31: u32 = CAN_F9R2_FB31_Msk;
pub const CAN_F10R2_FB0_Pos: u32 = 0;
pub const CAN_F10R2_FB0_Msk: u32 = 0x1 << CAN_F10R2_FB0_Pos;
pub const CAN_F10R2_FB0: u32 = CAN_F10R2_FB0_Msk;
pub const CAN_F10R2_FB1_Pos: u32 = 1;
pub const CAN_F10R2_FB1_Msk: u32 = 0x1 << CAN_F10R2_FB1_Pos;
pub const CAN_F10R2_FB1: u32 = CAN_F10R2_FB1_Msk;
pub const CAN_F10R2_FB2_Pos: u32 = 2;
pub const CAN_F10R2_FB2_Msk: u32 = 0x1 << CAN_F10R2_FB2_Pos;
pub const CAN_F10R2_FB2: u32 = CAN_F10R2_FB2_Msk;
pub const CAN_F10R2_FB3_Pos: u32 = 3;
pub const CAN_F10R2_FB3_Msk: u32 = 0x1 << CAN_F10R2_FB3_Pos;
pub const CAN_F10R2_FB3: u32 = CAN_F10R2_FB3_Msk;
pub const CAN_F10R2_FB4_Pos: u32 = 4;
pub const CAN_F10R2_FB4_Msk: u32 = 0x1 << CAN_F10R2_FB4_Pos;
pub const CAN_F10R2_FB4: u32 = CAN_F10R2_FB4_Msk;
pub const CAN_F10R2_FB5_Pos: u32 = 5;
pub const CAN_F10R2_FB5_Msk: u32 = 0x1 << CAN_F10R2_FB5_Pos;
pub const CAN_F10R2_FB5: u32 = CAN_F10R2_FB5_Msk;
pub const CAN_F10R2_FB6_Pos: u32 = 6;
pub const CAN_F10R2_FB6_Msk: u32 = 0x1 << CAN_F10R2_FB6_Pos;
pub const CAN_F10R2_FB6: u32 = CAN_F10R2_FB6_Msk;
pub const CAN_F10R2_FB7_Pos: u32 = 7;
pub const CAN_F10R2_FB7_Msk: u32 = 0x1 << CAN_F10R2_FB7_Pos;
pub const CAN_F10R2_FB7: u32 = CAN_F10R2_FB7_Msk;
pub const CAN_F10R2_FB8_Pos: u32 = 8;
pub const CAN_F10R2_FB8_Msk: u32 = 0x1 << CAN_F10R2_FB8_Pos;
pub const CAN_F10R2_FB8: u32 = CAN_F10R2_FB8_Msk;
pub const CAN_F10R2_FB9_Pos: u32 = 9;
pub const CAN_F10R2_FB9_Msk: u32 = 0x1 << CAN_F10R2_FB9_Pos;
pub const CAN_F10R2_FB9: u32 = CAN_F10R2_FB9_Msk;
pub const CAN_F10R2_FB10_Pos: u32 = 10;
pub const CAN_F10R2_FB10_Msk: u32 = 0x1 << CAN_F10R2_FB10_Pos;
pub const CAN_F10R2_FB10: u32 = CAN_F10R2_FB10_Msk;
pub const CAN_F10R2_FB11_Pos: u32 = 11;
pub const CAN_F10R2_FB11_Msk: u32 = 0x1 << CAN_F10R2_FB11_Pos;
pub const CAN_F10R2_FB11: u32 = CAN_F10R2_FB11_Msk;
pub const CAN_F10R2_FB12_Pos: u32 = 12;
pub const CAN_F10R2_FB12_Msk: u32 = 0x1 << CAN_F10R2_FB12_Pos;
pub const CAN_F10R2_FB12: u32 = CAN_F10R2_FB12_Msk;
pub const CAN_F10R2_FB13_Pos: u32 = 13;
pub const CAN_F10R2_FB13_Msk: u32 = 0x1 << CAN_F10R2_FB13_Pos;
pub const CAN_F10R2_FB13: u32 = CAN_F10R2_FB13_Msk;
pub const CAN_F10R2_FB14_Pos: u32 = 14;
pub const CAN_F10R2_FB14_Msk: u32 = 0x1 << CAN_F10R2_FB14_Pos;
pub const CAN_F10R2_FB14: u32 = CAN_F10R2_FB14_Msk;
pub const CAN_F10R2_FB15_Pos: u32 = 15;
pub const CAN_F10R2_FB15_Msk: u32 = 0x1 << CAN_F10R2_FB15_Pos;
pub const CAN_F10R2_FB15: u32 = CAN_F10R2_FB15_Msk;
pub const CAN_F10R2_FB16_Pos: u32 = 16;
pub const CAN_F10R2_FB16_Msk: u32 = 0x1 << CAN_F10R2_FB16_Pos;
pub const CAN_F10R2_FB16: u32 = CAN_F10R2_FB16_Msk;
pub const CAN_F10R2_FB17_Pos: u32 = 17;
pub const CAN_F10R2_FB17_Msk: u32 = 0x1 << CAN_F10R2_FB17_Pos;
pub const CAN_F10R2_FB17: u32 = CAN_F10R2_FB17_Msk;
pub const CAN_F10R2_FB18_Pos: u32 = 18;
pub const CAN_F10R2_FB18_Msk: u32 = 0x1 << CAN_F10R2_FB18_Pos;
pub const CAN_F10R2_FB18: u32 = CAN_F10R2_FB18_Msk;
pub const CAN_F10R2_FB19_Pos: u32 = 19;
pub const CAN_F10R2_FB19_Msk: u32 = 0x1 << CAN_F10R2_FB19_Pos;
pub const CAN_F10R2_FB19: u32 = CAN_F10R2_FB19_Msk;
pub const CAN_F10R2_FB20_Pos: u32 = 20;
pub const CAN_F10R2_FB20_Msk: u32 = 0x1 << CAN_F10R2_FB20_Pos;
pub const CAN_F10R2_FB20: u32 = CAN_F10R2_FB20_Msk;
pub const CAN_F10R2_FB21_Pos: u32 = 21;
pub const CAN_F10R2_FB21_Msk: u32 = 0x1 << CAN_F10R2_FB21_Pos;
pub const CAN_F10R2_FB21: u32 = CAN_F10R2_FB21_Msk;
pub const CAN_F10R2_FB22_Pos: u32 = 22;
pub const CAN_F10R2_FB22_Msk: u32 = 0x1 << CAN_F10R2_FB22_Pos;
pub const CAN_F10R2_FB22: u32 = CAN_F10R2_FB22_Msk;
pub const CAN_F10R2_FB23_Pos: u32 = 23;
pub const CAN_F10R2_FB23_Msk: u32 = 0x1 << CAN_F10R2_FB23_Pos;
pub const CAN_F10R2_FB23: u32 = CAN_F10R2_FB23_Msk;
pub const CAN_F10R2_FB24_Pos: u32 = 24;
pub const CAN_F10R2_FB24_Msk: u32 = 0x1 << CAN_F10R2_FB24_Pos;
pub const CAN_F10R2_FB24: u32 = CAN_F10R2_FB24_Msk;
pub const CAN_F10R2_FB25_Pos: u32 = 25;
pub const CAN_F10R2_FB25_Msk: u32 = 0x1 << CAN_F10R2_FB25_Pos;
pub const CAN_F10R2_FB25: u32 = CAN_F10R2_FB25_Msk;
pub const CAN_F10R2_FB26_Pos: u32 = 26;
pub const CAN_F10R2_FB26_Msk: u32 = 0x1 << CAN_F10R2_FB26_Pos;
pub const CAN_F10R2_FB26: u32 = CAN_F10R2_FB26_Msk;
pub const CAN_F10R2_FB27_Pos: u32 = 27;
pub const CAN_F10R2_FB27_Msk: u32 = 0x1 << CAN_F10R2_FB27_Pos;
pub const CAN_F10R2_FB27: u32 = CAN_F10R2_FB27_Msk;
pub const CAN_F10R2_FB28_Pos: u32 = 28;
pub const CAN_F10R2_FB28_Msk: u32 = 0x1 << CAN_F10R2_FB28_Pos;
pub const CAN_F10R2_FB28: u32 = CAN_F10R2_FB28_Msk;
pub const CAN_F10R2_FB29_Pos: u32 = 29;
pub const CAN_F10R2_FB29_Msk: u32 = 0x1 << CAN_F10R2_FB29_Pos;
pub const CAN_F10R2_FB29: u32 = CAN_F10R2_FB29_Msk;
pub const CAN_F10R2_FB30_Pos: u32 = 30;
pub const CAN_F10R2_FB30_Msk: u32 = 0x1 << CAN_F10R2_FB30_Pos;
pub const CAN_F10R2_FB30: u32 = CAN_F10R2_FB30_Msk;
pub const CAN_F10R2_FB31_Pos: u32 = 31;
pub const CAN_F10R2_FB31_Msk: u32 = 0x1 << CAN_F10R2_FB31_Pos;
pub const CAN_F10R2_FB31: u32 = CAN_F10R2_FB31_Msk;
pub const CAN_F11R2_FB0_Pos: u32 = 0;
pub const CAN_F11R2_FB0_Msk: u32 = 0x1 << CAN_F11R2_FB0_Pos;
pub const CAN_F11R2_FB0: u32 = CAN_F11R2_FB0_Msk;
pub const CAN_F11R2_FB1_Pos: u32 = 1;
pub const CAN_F11R2_FB1_Msk: u32 = 0x1 << CAN_F11R2_FB1_Pos;
pub const CAN_F11R2_FB1: u32 = CAN_F11R2_FB1_Msk;
pub const CAN_F11R2_FB2_Pos: u32 = 2;
pub const CAN_F11R2_FB2_Msk: u32 = 0x1 << CAN_F11R2_FB2_Pos;
pub const CAN_F11R2_FB2: u32 = CAN_F11R2_FB2_Msk;
pub const CAN_F11R2_FB3_Pos: u32 = 3;
pub const CAN_F11R2_FB3_Msk: u32 = 0x1 << CAN_F11R2_FB3_Pos;
pub const CAN_F11R2_FB3: u32 = CAN_F11R2_FB3_Msk;
pub const CAN_F11R2_FB4_Pos: u32 = 4;
pub const CAN_F11R2_FB4_Msk: u32 = 0x1 << CAN_F11R2_FB4_Pos;
pub const CAN_F11R2_FB4: u32 = CAN_F11R2_FB4_Msk;
pub const CAN_F11R2_FB5_Pos: u32 = 5;
pub const CAN_F11R2_FB5_Msk: u32 = 0x1 << CAN_F11R2_FB5_Pos;
pub const CAN_F11R2_FB5: u32 = CAN_F11R2_FB5_Msk;
pub const CAN_F11R2_FB6_Pos: u32 = 6;
pub const CAN_F11R2_FB6_Msk: u32 = 0x1 << CAN_F11R2_FB6_Pos;
pub const CAN_F11R2_FB6: u32 = CAN_F11R2_FB6_Msk;
pub const CAN_F11R2_FB7_Pos: u32 = 7;
pub const CAN_F11R2_FB7_Msk: u32 = 0x1 << CAN_F11R2_FB7_Pos;
pub const CAN_F11R2_FB7: u32 = CAN_F11R2_FB7_Msk;
pub const CAN_F11R2_FB8_Pos: u32 = 8;
pub const CAN_F11R2_FB8_Msk: u32 = 0x1 << CAN_F11R2_FB8_Pos;
pub const CAN_F11R2_FB8: u32 = CAN_F11R2_FB8_Msk;
pub const CAN_F11R2_FB9_Pos: u32 = 9;
pub const CAN_F11R2_FB9_Msk: u32 = 0x1 << CAN_F11R2_FB9_Pos;
pub const CAN_F11R2_FB9: u32 = CAN_F11R2_FB9_Msk;
pub const CAN_F11R2_FB10_Pos: u32 = 10;
pub const CAN_F11R2_FB10_Msk: u32 = 0x1 << CAN_F11R2_FB10_Pos;
pub const CAN_F11R2_FB10: u32 = CAN_F11R2_FB10_Msk;
pub const CAN_F11R2_FB11_Pos: u32 = 11;
pub const CAN_F11R2_FB11_Msk: u32 = 0x1 << CAN_F11R2_FB11_Pos;
pub const CAN_F11R2_FB11: u32 = CAN_F11R2_FB11_Msk;
pub const CAN_F11R2_FB12_Pos: u32 = 12;
pub const CAN_F11R2_FB12_Msk: u32 = 0x1 << CAN_F11R2_FB12_Pos;
pub const CAN_F11R2_FB12: u32 = CAN_F11R2_FB12_Msk;
pub const CAN_F11R2_FB13_Pos: u32 = 13;
pub const CAN_F11R2_FB13_Msk: u32 = 0x1 << CAN_F11R2_FB13_Pos;
pub const CAN_F11R2_FB13: u32 = CAN_F11R2_FB13_Msk;
pub const CAN_F11R2_FB14_Pos: u32 = 14;
pub const CAN_F11R2_FB14_Msk: u32 = 0x1 << CAN_F11R2_FB14_Pos;
pub const CAN_F11R2_FB14: u32 = CAN_F11R2_FB14_Msk;
pub const CAN_F11R2_FB15_Pos: u32 = 15;
pub const CAN_F11R2_FB15_Msk: u32 = 0x1 << CAN_F11R2_FB15_Pos;
pub const CAN_F11R2_FB15: u32 = CAN_F11R2_FB15_Msk;
pub const CAN_F11R2_FB16_Pos: u32 = 16;
pub const CAN_F11R2_FB16_Msk: u32 = 0x1 << CAN_F11R2_FB16_Pos;
pub const CAN_F11R2_FB16: u32 = CAN_F11R2_FB16_Msk;
pub const CAN_F11R2_FB17_Pos: u32 = 17;
pub const CAN_F11R2_FB17_Msk: u32 = 0x1 << CAN_F11R2_FB17_Pos;
pub const CAN_F11R2_FB17: u32 = CAN_F11R2_FB17_Msk;
pub const CAN_F11R2_FB18_Pos: u32 = 18;
pub const CAN_F11R2_FB18_Msk: u32 = 0x1 << CAN_F11R2_FB18_Pos;
pub const CAN_F11R2_FB18: u32 = CAN_F11R2_FB18_Msk;
pub const CAN_F11R2_FB19_Pos: u32 = 19;
pub const CAN_F11R2_FB19_Msk: u32 = 0x1 << CAN_F11R2_FB19_Pos;
pub const CAN_F11R2_FB19: u32 = CAN_F11R2_FB19_Msk;
pub const CAN_F11R2_FB20_Pos: u32 = 20;
pub const CAN_F11R2_FB20_Msk: u32 = 0x1 << CAN_F11R2_FB20_Pos;
pub const CAN_F11R2_FB20: u32 = CAN_F11R2_FB20_Msk;
pub const CAN_F11R2_FB21_Pos: u32 = 21;
pub const CAN_F11R2_FB21_Msk: u32 = 0x1 << CAN_F11R2_FB21_Pos;
pub const CAN_F11R2_FB21: u32 = CAN_F11R2_FB21_Msk;
pub const CAN_F11R2_FB22_Pos: u32 = 22;
pub const CAN_F11R2_FB22_Msk: u32 = 0x1 << CAN_F11R2_FB22_Pos;
pub const CAN_F11R2_FB22: u32 = CAN_F11R2_FB22_Msk;
pub const CAN_F11R2_FB23_Pos: u32 = 23;
pub const CAN_F11R2_FB23_Msk: u32 = 0x1 << CAN_F11R2_FB23_Pos;
pub const CAN_F11R2_FB23: u32 = CAN_F11R2_FB23_Msk;
pub const CAN_F11R2_FB24_Pos: u32 = 24;
pub const CAN_F11R2_FB24_Msk: u32 = 0x1 << CAN_F11R2_FB24_Pos;
pub const CAN_F11R2_FB24: u32 = CAN_F11R2_FB24_Msk;
pub const CAN_F11R2_FB25_Pos: u32 = 25;
pub const CAN_F11R2_FB25_Msk: u32 = 0x1 << CAN_F11R2_FB25_Pos;
pub const CAN_F11R2_FB25: u32 = CAN_F11R2_FB25_Msk;
pub const CAN_F11R2_FB26_Pos: u32 = 26;
pub const CAN_F11R2_FB26_Msk: u32 = 0x1 << CAN_F11R2_FB26_Pos;
pub const CAN_F11R2_FB26: u32 = CAN_F11R2_FB26_Msk;
pub const CAN_F11R2_FB27_Pos: u32 = 27;
pub const CAN_F11R2_FB27_Msk: u32 = 0x1 << CAN_F11R2_FB27_Pos;
pub const CAN_F11R2_FB27: u32 = CAN_F11R2_FB27_Msk;
pub const CAN_F11R2_FB28_Pos: u32 = 28;
pub const CAN_F11R2_FB28_Msk: u32 = 0x1 << CAN_F11R2_FB28_Pos;
pub const CAN_F11R2_FB28: u32 = CAN_F11R2_FB28_Msk;
pub const CAN_F11R2_FB29_Pos: u32 = 29;
pub const CAN_F11R2_FB29_Msk: u32 = 0x1 << CAN_F11R2_FB29_Pos;
pub const CAN_F11R2_FB29: u32 = CAN_F11R2_FB29_Msk;
pub const CAN_F11R2_FB30_Pos: u32 = 30;
pub const CAN_F11R2_FB30_Msk: u32 = 0x1 << CAN_F11R2_FB30_Pos;
pub const CAN_F11R2_FB30: u32 = CAN_F11R2_FB30_Msk;
pub const CAN_F11R2_FB31_Pos: u32 = 31;
pub const CAN_F11R2_FB31_Msk: u32 = 0x1 << CAN_F11R2_FB31_Pos;
pub const CAN_F11R2_FB31: u32 = CAN_F11R2_FB31_Msk;
pub const CAN_F12R2_FB0_Pos: u32 = 0;
pub const CAN_F12R2_FB0_Msk: u32 = 0x1 << CAN_F12R2_FB0_Pos;
pub const CAN_F12R2_FB0: u32 = CAN_F12R2_FB0_Msk;
pub const CAN_F12R2_FB1_Pos: u32 = 1;
pub const CAN_F12R2_FB1_Msk: u32 = 0x1 << CAN_F12R2_FB1_Pos;
pub const CAN_F12R2_FB1: u32 = CAN_F12R2_FB1_Msk;
pub const CAN_F12R2_FB2_Pos: u32 = 2;
pub const CAN_F12R2_FB2_Msk: u32 = 0x1 << CAN_F12R2_FB2_Pos;
pub const CAN_F12R2_FB2: u32 = CAN_F12R2_FB2_Msk;
pub const CAN_F12R2_FB3_Pos: u32 = 3;
pub const CAN_F12R2_FB3_Msk: u32 = 0x1 << CAN_F12R2_FB3_Pos;
pub const CAN_F12R2_FB3: u32 = CAN_F12R2_FB3_Msk;
pub const CAN_F12R2_FB4_Pos: u32 = 4;
pub const CAN_F12R2_FB4_Msk: u32 = 0x1 << CAN_F12R2_FB4_Pos;
pub const CAN_F12R2_FB4: u32 = CAN_F12R2_FB4_Msk;
pub const CAN_F12R2_FB5_Pos: u32 = 5;
pub const CAN_F12R2_FB5_Msk: u32 = 0x1 << CAN_F12R2_FB5_Pos;
pub const CAN_F12R2_FB5: u32 = CAN_F12R2_FB5_Msk;
pub const CAN_F12R2_FB6_Pos: u32 = 6;
pub const CAN_F12R2_FB6_Msk: u32 = 0x1 << CAN_F12R2_FB6_Pos;
pub const CAN_F12R2_FB6: u32 = CAN_F12R2_FB6_Msk;
pub const CAN_F12R2_FB7_Pos: u32 = 7;
pub const CAN_F12R2_FB7_Msk: u32 = 0x1 << CAN_F12R2_FB7_Pos;
pub const CAN_F12R2_FB7: u32 = CAN_F12R2_FB7_Msk;
pub const CAN_F12R2_FB8_Pos: u32 = 8;
pub const CAN_F12R2_FB8_Msk: u32 = 0x1 << CAN_F12R2_FB8_Pos;
pub const CAN_F12R2_FB8: u32 = CAN_F12R2_FB8_Msk;
pub const CAN_F12R2_FB9_Pos: u32 = 9;
pub const CAN_F12R2_FB9_Msk: u32 = 0x1 << CAN_F12R2_FB9_Pos;
pub const CAN_F12R2_FB9: u32 = CAN_F12R2_FB9_Msk;
pub const CAN_F12R2_FB10_Pos: u32 = 10;
pub const CAN_F12R2_FB10_Msk: u32 = 0x1 << CAN_F12R2_FB10_Pos;
pub const CAN_F12R2_FB10: u32 = CAN_F12R2_FB10_Msk;
pub const CAN_F12R2_FB11_Pos: u32 = 11;
pub const CAN_F12R2_FB11_Msk: u32 = 0x1 << CAN_F12R2_FB11_Pos;
pub const CAN_F12R2_FB11: u32 = CAN_F12R2_FB11_Msk;
pub const CAN_F12R2_FB12_Pos: u32 = 12;
pub const CAN_F12R2_FB12_Msk: u32 = 0x1 << CAN_F12R2_FB12_Pos;
pub const CAN_F12R2_FB12: u32 = CAN_F12R2_FB12_Msk;
pub const CAN_F12R2_FB13_Pos: u32 = 13;
pub const CAN_F12R2_FB13_Msk: u32 = 0x1 << CAN_F12R2_FB13_Pos;
pub const CAN_F12R2_FB13: u32 = CAN_F12R2_FB13_Msk;
pub const CAN_F12R2_FB14_Pos: u32 = 14;
pub const CAN_F12R2_FB14_Msk: u32 = 0x1 << CAN_F12R2_FB14_Pos;
pub const CAN_F12R2_FB14: u32 = CAN_F12R2_FB14_Msk;
pub const CAN_F12R2_FB15_Pos: u32 = 15;
pub const CAN_F12R2_FB15_Msk: u32 = 0x1 << CAN_F12R2_FB15_Pos;
pub const CAN_F12R2_FB15: u32 = CAN_F12R2_FB15_Msk;
pub const CAN_F12R2_FB16_Pos: u32 = 16;
pub const CAN_F12R2_FB16_Msk: u32 = 0x1 << CAN_F12R2_FB16_Pos;
pub const CAN_F12R2_FB16: u32 = CAN_F12R2_FB16_Msk;
pub const CAN_F12R2_FB17_Pos: u32 = 17;
pub const CAN_F12R2_FB17_Msk: u32 = 0x1 << CAN_F12R2_FB17_Pos;
pub const CAN_F12R2_FB17: u32 = CAN_F12R2_FB17_Msk;
pub const CAN_F12R2_FB18_Pos: u32 = 18;
pub const CAN_F12R2_FB18_Msk: u32 = 0x1 << CAN_F12R2_FB18_Pos;
pub const CAN_F12R2_FB18: u32 = CAN_F12R2_FB18_Msk;
pub const CAN_F12R2_FB19_Pos: u32 = 19;
pub const CAN_F12R2_FB19_Msk: u32 = 0x1 << CAN_F12R2_FB19_Pos;
pub const CAN_F12R2_FB19: u32 = CAN_F12R2_FB19_Msk;
pub const CAN_F12R2_FB20_Pos: u32 = 20;
pub const CAN_F12R2_FB20_Msk: u32 = 0x1 << CAN_F12R2_FB20_Pos;
pub const CAN_F12R2_FB20: u32 = CAN_F12R2_FB20_Msk;
pub const CAN_F12R2_FB21_Pos: u32 = 21;
pub const CAN_F12R2_FB21_Msk: u32 = 0x1 << CAN_F12R2_FB21_Pos;
pub const CAN_F12R2_FB21: u32 = CAN_F12R2_FB21_Msk;
pub const CAN_F12R2_FB22_Pos: u32 = 22;
pub const CAN_F12R2_FB22_Msk: u32 = 0x1 << CAN_F12R2_FB22_Pos;
pub const CAN_F12R2_FB22: u32 = CAN_F12R2_FB22_Msk;
pub const CAN_F12R2_FB23_Pos: u32 = 23;
pub const CAN_F12R2_FB23_Msk: u32 = 0x1 << CAN_F12R2_FB23_Pos;
pub const CAN_F12R2_FB23: u32 = CAN_F12R2_FB23_Msk;
pub const CAN_F12R2_FB24_Pos: u32 = 24;
pub const CAN_F12R2_FB24_Msk: u32 = 0x1 << CAN_F12R2_FB24_Pos;
pub const CAN_F12R2_FB24: u32 = CAN_F12R2_FB24_Msk;
pub const CAN_F12R2_FB25_Pos: u32 = 25;
pub const CAN_F12R2_FB25_Msk: u32 = 0x1 << CAN_F12R2_FB25_Pos;
pub const CAN_F12R2_FB25: u32 = CAN_F12R2_FB25_Msk;
pub const CAN_F12R2_FB26_Pos: u32 = 26;
pub const CAN_F12R2_FB26_Msk: u32 = 0x1 << CAN_F12R2_FB26_Pos;
pub const CAN_F12R2_FB26: u32 = CAN_F12R2_FB26_Msk;
pub const CAN_F12R2_FB27_Pos: u32 = 27;
pub const CAN_F12R2_FB27_Msk: u32 = 0x1 << CAN_F12R2_FB27_Pos;
pub const CAN_F12R2_FB27: u32 = CAN_F12R2_FB27_Msk;
pub const CAN_F12R2_FB28_Pos: u32 = 28;
pub const CAN_F12R2_FB28_Msk: u32 = 0x1 << CAN_F12R2_FB28_Pos;
pub const CAN_F12R2_FB28: u32 = CAN_F12R2_FB28_Msk;
pub const CAN_F12R2_FB29_Pos: u32 = 29;
pub const CAN_F12R2_FB29_Msk: u32 = 0x1 << CAN_F12R2_FB29_Pos;
pub const CAN_F12R2_FB29: u32 = CAN_F12R2_FB29_Msk;
pub const CAN_F12R2_FB30_Pos: u32 = 30;
pub const CAN_F12R2_FB30_Msk: u32 = 0x1 << CAN_F12R2_FB30_Pos;
pub const CAN_F12R2_FB30: u32 = CAN_F12R2_FB30_Msk;
pub const CAN_F12R2_FB31_Pos: u32 = 31;
pub const CAN_F12R2_FB31_Msk: u32 = 0x1 << CAN_F12R2_FB31_Pos;
pub const CAN_F12R2_FB31: u32 = CAN_F12R2_FB31_Msk;
pub const CAN_F13R2_FB0_Pos: u32 = 0;
pub const CAN_F13R2_FB0_Msk: u32 = 0x1 << CAN_F13R2_FB0_Pos;
pub const CAN_F13R2_FB0: u32 = CAN_F13R2_FB0_Msk;
pub const CAN_F13R2_FB1_Pos: u32 = 1;
pub const CAN_F13R2_FB1_Msk: u32 = 0x1 << CAN_F13R2_FB1_Pos;
pub const CAN_F13R2_FB1: u32 = CAN_F13R2_FB1_Msk;
pub const CAN_F13R2_FB2_Pos: u32 = 2;
pub const CAN_F13R2_FB2_Msk: u32 = 0x1 << CAN_F13R2_FB2_Pos;
pub const CAN_F13R2_FB2: u32 = CAN_F13R2_FB2_Msk;
pub const CAN_F13R2_FB3_Pos: u32 = 3;
pub const CAN_F13R2_FB3_Msk: u32 = 0x1 << CAN_F13R2_FB3_Pos;
pub const CAN_F13R2_FB3: u32 = CAN_F13R2_FB3_Msk;
pub const CAN_F13R2_FB4_Pos: u32 = 4;
pub const CAN_F13R2_FB4_Msk: u32 = 0x1 << CAN_F13R2_FB4_Pos;
pub const CAN_F13R2_FB4: u32 = CAN_F13R2_FB4_Msk;
pub const CAN_F13R2_FB5_Pos: u32 = 5;
pub const CAN_F13R2_FB5_Msk: u32 = 0x1 << CAN_F13R2_FB5_Pos;
pub const CAN_F13R2_FB5: u32 = CAN_F13R2_FB5_Msk;
pub const CAN_F13R2_FB6_Pos: u32 = 6;
pub const CAN_F13R2_FB6_Msk: u32 = 0x1 << CAN_F13R2_FB6_Pos;
pub const CAN_F13R2_FB6: u32 = CAN_F13R2_FB6_Msk;
pub const CAN_F13R2_FB7_Pos: u32 = 7;
pub const CAN_F13R2_FB7_Msk: u32 = 0x1 << CAN_F13R2_FB7_Pos;
pub const CAN_F13R2_FB7: u32 = CAN_F13R2_FB7_Msk;
pub const CAN_F13R2_FB8_Pos: u32 = 8;
pub const CAN_F13R2_FB8_Msk: u32 = 0x1 << CAN_F13R2_FB8_Pos;
pub const CAN_F13R2_FB8: u32 = CAN_F13R2_FB8_Msk;
pub const CAN_F13R2_FB9_Pos: u32 = 9;
pub const CAN_F13R2_FB9_Msk: u32 = 0x1 << CAN_F13R2_FB9_Pos;
pub const CAN_F13R2_FB9: u32 = CAN_F13R2_FB9_Msk;
pub const CAN_F13R2_FB10_Pos: u32 = 10;
pub const CAN_F13R2_FB10_Msk: u32 = 0x1 << CAN_F13R2_FB10_Pos;
pub const CAN_F13R2_FB10: u32 = CAN_F13R2_FB10_Msk;
pub const CAN_F13R2_FB11_Pos: u32 = 11;
pub const CAN_F13R2_FB11_Msk: u32 = 0x1 << CAN_F13R2_FB11_Pos;
pub const CAN_F13R2_FB11: u32 = CAN_F13R2_FB11_Msk;
pub const CAN_F13R2_FB12_Pos: u32 = 12;
pub const CAN_F13R2_FB12_Msk: u32 = 0x1 << CAN_F13R2_FB12_Pos;
pub const CAN_F13R2_FB12: u32 = CAN_F13R2_FB12_Msk;
pub const CAN_F13R2_FB13_Pos: u32 = 13;
pub const CAN_F13R2_FB13_Msk: u32 = 0x1 << CAN_F13R2_FB13_Pos;
pub const CAN_F13R2_FB13: u32 = CAN_F13R2_FB13_Msk;
pub const CAN_F13R2_FB14_Pos: u32 = 14;
pub const CAN_F13R2_FB14_Msk: u32 = 0x1 << CAN_F13R2_FB14_Pos;
pub const CAN_F13R2_FB14: u32 = CAN_F13R2_FB14_Msk;
pub const CAN_F13R2_FB15_Pos: u32 = 15;
pub const CAN_F13R2_FB15_Msk: u32 = 0x1 << CAN_F13R2_FB15_Pos;
pub const CAN_F13R2_FB15: u32 = CAN_F13R2_FB15_Msk;
pub const CAN_F13R2_FB16_Pos: u32 = 16;
pub const CAN_F13R2_FB16_Msk: u32 = 0x1 << CAN_F13R2_FB16_Pos;
pub const CAN_F13R2_FB16: u32 = CAN_F13R2_FB16_Msk;
pub const CAN_F13R2_FB17_Pos: u32 = 17;
pub const CAN_F13R2_FB17_Msk: u32 = 0x1 << CAN_F13R2_FB17_Pos;
pub const CAN_F13R2_FB17: u32 = CAN_F13R2_FB17_Msk;
pub const CAN_F13R2_FB18_Pos: u32 = 18;
pub const CAN_F13R2_FB18_Msk: u32 = 0x1 << CAN_F13R2_FB18_Pos;
pub const CAN_F13R2_FB18: u32 = CAN_F13R2_FB18_Msk;
pub const CAN_F13R2_FB19_Pos: u32 = 19;
pub const CAN_F13R2_FB19_Msk: u32 = 0x1 << CAN_F13R2_FB19_Pos;
pub const CAN_F13R2_FB19: u32 = CAN_F13R2_FB19_Msk;
pub const CAN_F13R2_FB20_Pos: u32 = 20;
pub const CAN_F13R2_FB20_Msk: u32 = 0x1 << CAN_F13R2_FB20_Pos;
pub const CAN_F13R2_FB20: u32 = CAN_F13R2_FB20_Msk;
pub const CAN_F13R2_FB21_Pos: u32 = 21;
pub const CAN_F13R2_FB21_Msk: u32 = 0x1 << CAN_F13R2_FB21_Pos;
pub const CAN_F13R2_FB21: u32 = CAN_F13R2_FB21_Msk;
pub const CAN_F13R2_FB22_Pos: u32 = 22;
pub const CAN_F13R2_FB22_Msk: u32 = 0x1 << CAN_F13R2_FB22_Pos;
pub const CAN_F13R2_FB22: u32 = CAN_F13R2_FB22_Msk;
pub const CAN_F13R2_FB23_Pos: u32 = 23;
pub const CAN_F13R2_FB23_Msk: u32 = 0x1 << CAN_F13R2_FB23_Pos;
pub const CAN_F13R2_FB23: u32 = CAN_F13R2_FB23_Msk;
pub const CAN_F13R2_FB24_Pos: u32 = 24;
pub const CAN_F13R2_FB24_Msk: u32 = 0x1 << CAN_F13R2_FB24_Pos;
pub const CAN_F13R2_FB24: u32 = CAN_F13R2_FB24_Msk;
pub const CAN_F13R2_FB25_Pos: u32 = 25;
pub const CAN_F13R2_FB25_Msk: u32 = 0x1 << CAN_F13R2_FB25_Pos;
pub const CAN_F13R2_FB25: u32 = CAN_F13R2_FB25_Msk;
pub const CAN_F13R2_FB26_Pos: u32 = 26;
pub const CAN_F13R2_FB26_Msk: u32 = 0x1 << CAN_F13R2_FB26_Pos;
pub const CAN_F13R2_FB26: u32 = CAN_F13R2_FB26_Msk;
pub const CAN_F13R2_FB27_Pos: u32 = 27;
pub const CAN_F13R2_FB27_Msk: u32 = 0x1 << CAN_F13R2_FB27_Pos;
pub const CAN_F13R2_FB27: u32 = CAN_F13R2_FB27_Msk;
pub const CAN_F13R2_FB28_Pos: u32 = 28;
pub const CAN_F13R2_FB28_Msk: u32 = 0x1 << CAN_F13R2_FB28_Pos;
pub const CAN_F13R2_FB28: u32 = CAN_F13R2_FB28_Msk;
pub const CAN_F13R2_FB29_Pos: u32 = 29;
pub const CAN_F13R2_FB29_Msk: u32 = 0x1 << CAN_F13R2_FB29_Pos;
pub const CAN_F13R2_FB29: u32 = CAN_F13R2_FB29_Msk;
pub const CAN_F13R2_FB30_Pos: u32 = 30;
pub const CAN_F13R2_FB30_Msk: u32 = 0x1 << CAN_F13R2_FB30_Pos;
pub const CAN_F13R2_FB30: u32 = CAN_F13R2_FB30_Msk;
pub const CAN_F13R2_FB31_Pos: u32 = 31;
pub const CAN_F13R2_FB31_Msk: u32 = 0x1 << CAN_F13R2_FB31_Pos;
pub const CAN_F13R2_FB31: u32 = CAN_F13R2_FB31_Msk;
pub const CEC_CR_CECEN_Pos: u32 = 0;
pub const CEC_CR_CECEN_Msk: u32 = 0x1 << CEC_CR_CECEN_Pos;
pub const CEC_CR_CECEN: u32 = CEC_CR_CECEN_Msk;
pub const CEC_CR_TXSOM_Pos: u32 = 1;
pub const CEC_CR_TXSOM_Msk: u32 = 0x1 << CEC_CR_TXSOM_Pos;
pub const CEC_CR_TXSOM: u32 = CEC_CR_TXSOM_Msk;
pub const CEC_CR_TXEOM_Pos: u32 = 2;
pub const CEC_CR_TXEOM_Msk: u32 = 0x1 << CEC_CR_TXEOM_Pos;
pub const CEC_CR_TXEOM: u32 = CEC_CR_TXEOM_Msk;
pub const CEC_CFGR_SFT_Pos: u32 = 0;
pub const CEC_CFGR_SFT_Msk: u32 = 0x7 << CEC_CFGR_SFT_Pos;
pub const CEC_CFGR_SFT: u32 = CEC_CFGR_SFT_Msk;
pub const CEC_CFGR_RXTOL_Pos: u32 = 3;
pub const CEC_CFGR_RXTOL_Msk: u32 = 0x1 << CEC_CFGR_RXTOL_Pos;
pub const CEC_CFGR_RXTOL: u32 = CEC_CFGR_RXTOL_Msk;
pub const CEC_CFGR_BRESTP_Pos: u32 = 4;
pub const CEC_CFGR_BRESTP_Msk: u32 = 0x1 << CEC_CFGR_BRESTP_Pos;
pub const CEC_CFGR_BRESTP: u32 = CEC_CFGR_BRESTP_Msk;
pub const CEC_CFGR_BREGEN_Pos: u32 = 5;
pub const CEC_CFGR_BREGEN_Msk: u32 = 0x1 << CEC_CFGR_BREGEN_Pos;
pub const CEC_CFGR_BREGEN: u32 = CEC_CFGR_BREGEN_Msk;
pub const CEC_CFGR_LBPEGEN_Pos: u32 = 6;
pub const CEC_CFGR_LBPEGEN_Msk: u32 = 0x1 << CEC_CFGR_LBPEGEN_Pos;
pub const CEC_CFGR_LBPEGEN: u32 = CEC_CFGR_LBPEGEN_Msk;
pub const CEC_CFGR_BRDNOGEN_Pos: u32 = 7;
pub const CEC_CFGR_BRDNOGEN_Msk: u32 = 0x1 << CEC_CFGR_BRDNOGEN_Pos;
pub const CEC_CFGR_BRDNOGEN: u32 = CEC_CFGR_BRDNOGEN_Msk;
pub const CEC_CFGR_SFTOPT_Pos: u32 = 8;
pub const CEC_CFGR_SFTOPT_Msk: u32 = 0x1 << CEC_CFGR_SFTOPT_Pos;
pub const CEC_CFGR_SFTOPT: u32 = CEC_CFGR_SFTOPT_Msk;
pub const CEC_CFGR_OAR_Pos: u32 = 16;
pub const CEC_CFGR_OAR_Msk: u32 = 0x7FFF << CEC_CFGR_OAR_Pos;
pub const CEC_CFGR_OAR: u32 = CEC_CFGR_OAR_Msk;
pub const CEC_CFGR_LSTN_Pos: u32 = 31;
pub const CEC_CFGR_LSTN_Msk: u32 = 0x1 << CEC_CFGR_LSTN_Pos;
pub const CEC_CFGR_LSTN: u32 = CEC_CFGR_LSTN_Msk;
pub const CEC_TXDR_TXD_Pos: u32 = 0;
pub const CEC_TXDR_TXD_Msk: u32 = 0xFF << CEC_TXDR_TXD_Pos;
pub const CEC_TXDR_TXD: u32 = CEC_TXDR_TXD_Msk;
pub const CEC_RXDR_RXD_Pos: u32 = 0;
pub const CEC_RXDR_RXD_Msk: u32 = 0xFF << CEC_RXDR_RXD_Pos;
pub const CEC_RXDR_RXD: u32 = CEC_RXDR_RXD_Msk;
pub const CEC_ISR_RXBR_Pos: u32 = 0;
pub const CEC_ISR_RXBR_Msk: u32 = 0x1 << CEC_ISR_RXBR_Pos;
pub const CEC_ISR_RXBR: u32 = CEC_ISR_RXBR_Msk;
pub const CEC_ISR_RXEND_Pos: u32 = 1;
pub const CEC_ISR_RXEND_Msk: u32 = 0x1 << CEC_ISR_RXEND_Pos;
pub const CEC_ISR_RXEND: u32 = CEC_ISR_RXEND_Msk;
pub const CEC_ISR_RXOVR_Pos: u32 = 2;
pub const CEC_ISR_RXOVR_Msk: u32 = 0x1 << CEC_ISR_RXOVR_Pos;
pub const CEC_ISR_RXOVR: u32 = CEC_ISR_RXOVR_Msk;
pub const CEC_ISR_BRE_Pos: u32 = 3;
pub const CEC_ISR_BRE_Msk: u32 = 0x1 << CEC_ISR_BRE_Pos;
pub const CEC_ISR_BRE: u32 = CEC_ISR_BRE_Msk;
pub const CEC_ISR_SBPE_Pos: u32 = 4;
pub const CEC_ISR_SBPE_Msk: u32 = 0x1 << CEC_ISR_SBPE_Pos;
pub const CEC_ISR_SBPE: u32 = CEC_ISR_SBPE_Msk;
pub const CEC_ISR_LBPE_Pos: u32 = 5;
pub const CEC_ISR_LBPE_Msk: u32 = 0x1 << CEC_ISR_LBPE_Pos;
pub const CEC_ISR_LBPE: u32 = CEC_ISR_LBPE_Msk;
pub const CEC_ISR_RXACKE_Pos: u32 = 6;
pub const CEC_ISR_RXACKE_Msk: u32 = 0x1 << CEC_ISR_RXACKE_Pos;
pub const CEC_ISR_RXACKE: u32 = CEC_ISR_RXACKE_Msk;
pub const CEC_ISR_ARBLST_Pos: u32 = 7;
pub const CEC_ISR_ARBLST_Msk: u32 = 0x1 << CEC_ISR_ARBLST_Pos;
pub const CEC_ISR_ARBLST: u32 = CEC_ISR_ARBLST_Msk;
pub const CEC_ISR_TXBR_Pos: u32 = 8;
pub const CEC_ISR_TXBR_Msk: u32 = 0x1 << CEC_ISR_TXBR_Pos;
pub const CEC_ISR_TXBR: u32 = CEC_ISR_TXBR_Msk;
pub const CEC_ISR_TXEND_Pos: u32 = 9;
pub const CEC_ISR_TXEND_Msk: u32 = 0x1 << CEC_ISR_TXEND_Pos;
pub const CEC_ISR_TXEND: u32 = CEC_ISR_TXEND_Msk;
pub const CEC_ISR_TXUDR_Pos: u32 = 10;
pub const CEC_ISR_TXUDR_Msk: u32 = 0x1 << CEC_ISR_TXUDR_Pos;
pub const CEC_ISR_TXUDR: u32 = CEC_ISR_TXUDR_Msk;
pub const CEC_ISR_TXERR_Pos: u32 = 11;
pub const CEC_ISR_TXERR_Msk: u32 = 0x1 << CEC_ISR_TXERR_Pos;
pub const CEC_ISR_TXERR: u32 = CEC_ISR_TXERR_Msk;
pub const CEC_ISR_TXACKE_Pos: u32 = 12;
pub const CEC_ISR_TXACKE_Msk: u32 = 0x1 << CEC_ISR_TXACKE_Pos;
pub const CEC_ISR_TXACKE: u32 = CEC_ISR_TXACKE_Msk;
pub const CEC_IER_RXBRIE_Pos: u32 = 0;
pub const CEC_IER_RXBRIE_Msk: u32 = 0x1 << CEC_IER_RXBRIE_Pos;
pub const CEC_IER_RXBRIE: u32 = CEC_IER_RXBRIE_Msk;
pub const CEC_IER_RXENDIE_Pos: u32 = 1;
pub const CEC_IER_RXENDIE_Msk: u32 = 0x1 << CEC_IER_RXENDIE_Pos;
pub const CEC_IER_RXENDIE: u32 = CEC_IER_RXENDIE_Msk;
pub const CEC_IER_RXOVRIE_Pos: u32 = 2;
pub const CEC_IER_RXOVRIE_Msk: u32 = 0x1 << CEC_IER_RXOVRIE_Pos;
pub const CEC_IER_RXOVRIE: u32 = CEC_IER_RXOVRIE_Msk;
pub const CEC_IER_BREIE_Pos: u32 = 3;
pub const CEC_IER_BREIE_Msk: u32 = 0x1 << CEC_IER_BREIE_Pos;
pub const CEC_IER_BREIE: u32 = CEC_IER_BREIE_Msk;
pub const CEC_IER_SBPEIE_Pos: u32 = 4;
pub const CEC_IER_SBPEIE_Msk: u32 = 0x1 << CEC_IER_SBPEIE_Pos;
pub const CEC_IER_SBPEIE: u32 = CEC_IER_SBPEIE_Msk;
pub const CEC_IER_LBPEIE_Pos: u32 = 5;
pub const CEC_IER_LBPEIE_Msk: u32 = 0x1 << CEC_IER_LBPEIE_Pos;
pub const CEC_IER_LBPEIE: u32 = CEC_IER_LBPEIE_Msk;
pub const CEC_IER_RXACKEIE_Pos: u32 = 6;
pub const CEC_IER_RXACKEIE_Msk: u32 = 0x1 << CEC_IER_RXACKEIE_Pos;
pub const CEC_IER_RXACKEIE: u32 = CEC_IER_RXACKEIE_Msk;
pub const CEC_IER_ARBLSTIE_Pos: u32 = 7;
pub const CEC_IER_ARBLSTIE_Msk: u32 = 0x1 << CEC_IER_ARBLSTIE_Pos;
pub const CEC_IER_ARBLSTIE: u32 = CEC_IER_ARBLSTIE_Msk;
pub const CEC_IER_TXBRIE_Pos: u32 = 8;
pub const CEC_IER_TXBRIE_Msk: u32 = 0x1 << CEC_IER_TXBRIE_Pos;
pub const CEC_IER_TXBRIE: u32 = CEC_IER_TXBRIE_Msk;
pub const CEC_IER_TXENDIE_Pos: u32 = 9;
pub const CEC_IER_TXENDIE_Msk: u32 = 0x1 << CEC_IER_TXENDIE_Pos;
pub const CEC_IER_TXENDIE: u32 = CEC_IER_TXENDIE_Msk;
pub const CEC_IER_TXUDRIE_Pos: u32 = 10;
pub const CEC_IER_TXUDRIE_Msk: u32 = 0x1 << CEC_IER_TXUDRIE_Pos;
pub const CEC_IER_TXUDRIE: u32 = CEC_IER_TXUDRIE_Msk;
pub const CEC_IER_TXERRIE_Pos: u32 = 11;
pub const CEC_IER_TXERRIE_Msk: u32 = 0x1 << CEC_IER_TXERRIE_Pos;
pub const CEC_IER_TXERRIE: u32 = CEC_IER_TXERRIE_Msk;
pub const CEC_IER_TXACKEIE_Pos: u32 = 12;
pub const CEC_IER_TXACKEIE_Msk: u32 = 0x1 << CEC_IER_TXACKEIE_Pos;
pub const CEC_IER_TXACKEIE: u32 = CEC_IER_TXACKEIE_Msk;
pub const CRC_DR_DR_Pos: u32 = 0;
pub const CRC_DR_DR_Msk: u32 = 0xFFFFFFFF << CRC_DR_DR_Pos;
pub const CRC_DR_DR: u32 = CRC_DR_DR_Msk;
pub const CRC_IDR_IDR_Pos: u32 = 0;
pub const CRC_IDR_IDR_Msk: u32 = 0xFF << CRC_IDR_IDR_Pos;
pub const CRC_IDR_IDR: u32 = CRC_IDR_IDR_Msk;
pub const CRC_CR_RESET_Pos: u32 = 0;
pub const CRC_CR_RESET_Msk: u32 = 0x1 << CRC_CR_RESET_Pos;
pub const CRC_CR_RESET: u32 = CRC_CR_RESET_Msk;
pub const CRC_CR_POLYSIZE_Pos: u32 = 3;
pub const CRC_CR_POLYSIZE_Msk: u32 = 0x3 << CRC_CR_POLYSIZE_Pos;
pub const CRC_CR_POLYSIZE: u32 = CRC_CR_POLYSIZE_Msk;
pub const CRC_CR_POLYSIZE_0: u32 = 0x1 << CRC_CR_POLYSIZE_Pos;
pub const CRC_CR_POLYSIZE_1: u32 = 0x2 << CRC_CR_POLYSIZE_Pos;
pub const CRC_CR_REV_IN_Pos: u32 = 5;
pub const CRC_CR_REV_IN_Msk: u32 = 0x3 << CRC_CR_REV_IN_Pos;
pub const CRC_CR_REV_IN: u32 = CRC_CR_REV_IN_Msk;
pub const CRC_CR_REV_IN_0: u32 = 0x1 << CRC_CR_REV_IN_Pos;
pub const CRC_CR_REV_IN_1: u32 = 0x2 << CRC_CR_REV_IN_Pos;
pub const CRC_CR_REV_OUT_Pos: u32 = 7;
pub const CRC_CR_REV_OUT_Msk: u32 = 0x1 << CRC_CR_REV_OUT_Pos;
pub const CRC_CR_REV_OUT: u32 = CRC_CR_REV_OUT_Msk;
pub const CRC_INIT_INIT_Pos: u32 = 0;
pub const CRC_INIT_INIT_Msk: u32 = 0xFFFFFFFF << CRC_INIT_INIT_Pos;
pub const CRC_INIT_INIT: u32 = CRC_INIT_INIT_Msk;
pub const CRC_POL_POL_Pos: u32 = 0;
pub const CRC_POL_POL_Msk: u32 = 0xFFFFFFFF << CRC_POL_POL_Pos;
pub const CRC_POL_POL: u32 = CRC_POL_POL_Msk;
pub const CRYP_CR_ALGODIR_Pos: u32 = 2;
pub const CRYP_CR_ALGODIR_Msk: u32 = 0x1 << CRYP_CR_ALGODIR_Pos;
pub const CRYP_CR_ALGODIR: u32 = CRYP_CR_ALGODIR_Msk;
pub const CRYP_CR_ALGOMODE_Pos: u32 = 3;
pub const CRYP_CR_ALGOMODE_Msk: u32 = 0x10007 << CRYP_CR_ALGOMODE_Pos;
pub const CRYP_CR_ALGOMODE: u32 = CRYP_CR_ALGOMODE_Msk;
pub const CRYP_CR_ALGOMODE_0: u32 = 0x00001 << CRYP_CR_ALGOMODE_Pos;
pub const CRYP_CR_ALGOMODE_1: u32 = 0x00002 << CRYP_CR_ALGOMODE_Pos;
pub const CRYP_CR_ALGOMODE_2: u32 = 0x00004 << CRYP_CR_ALGOMODE_Pos;
pub const CRYP_CR_ALGOMODE_TDES_ECB: u32 = 0x00000000;
pub const CRYP_CR_ALGOMODE_TDES_CBC_Pos: u32 = 3;
pub const CRYP_CR_ALGOMODE_TDES_CBC_Msk: u32 = 0x1 << CRYP_CR_ALGOMODE_TDES_CBC_Pos;
pub const CRYP_CR_ALGOMODE_TDES_CBC: u32 = CRYP_CR_ALGOMODE_TDES_CBC_Msk;
pub const CRYP_CR_ALGOMODE_DES_ECB_Pos: u32 = 4;
pub const CRYP_CR_ALGOMODE_DES_ECB_Msk: u32 = 0x1 << CRYP_CR_ALGOMODE_DES_ECB_Pos;
pub const CRYP_CR_ALGOMODE_DES_ECB: u32 = CRYP_CR_ALGOMODE_DES_ECB_Msk;
pub const CRYP_CR_ALGOMODE_DES_CBC_Pos: u32 = 3;
pub const CRYP_CR_ALGOMODE_DES_CBC_Msk: u32 = 0x3 << CRYP_CR_ALGOMODE_DES_CBC_Pos;
pub const CRYP_CR_ALGOMODE_DES_CBC: u32 = CRYP_CR_ALGOMODE_DES_CBC_Msk;
pub const CRYP_CR_ALGOMODE_AES_ECB_Pos: u32 = 5;
pub const CRYP_CR_ALGOMODE_AES_ECB_Msk: u32 = 0x1 << CRYP_CR_ALGOMODE_AES_ECB_Pos;
pub const CRYP_CR_ALGOMODE_AES_ECB: u32 = CRYP_CR_ALGOMODE_AES_ECB_Msk;
pub const CRYP_CR_ALGOMODE_AES_CBC_Pos: u32 = 3;
pub const CRYP_CR_ALGOMODE_AES_CBC_Msk: u32 = 0x5 << CRYP_CR_ALGOMODE_AES_CBC_Pos;
pub const CRYP_CR_ALGOMODE_AES_CBC: u32 = CRYP_CR_ALGOMODE_AES_CBC_Msk;
pub const CRYP_CR_ALGOMODE_AES_CTR_Pos: u32 = 4;
pub const CRYP_CR_ALGOMODE_AES_CTR_Msk: u32 = 0x3 << CRYP_CR_ALGOMODE_AES_CTR_Pos;
pub const CRYP_CR_ALGOMODE_AES_CTR: u32 = CRYP_CR_ALGOMODE_AES_CTR_Msk;
pub const CRYP_CR_ALGOMODE_AES_KEY_Pos: u32 = 3;
pub const CRYP_CR_ALGOMODE_AES_KEY_Msk: u32 = 0x7 << CRYP_CR_ALGOMODE_AES_KEY_Pos;
pub const CRYP_CR_ALGOMODE_AES_KEY: u32 = CRYP_CR_ALGOMODE_AES_KEY_Msk;
pub const CRYP_CR_ALGOMODE_AES_GCM_Pos: u32 = 19;
pub const CRYP_CR_ALGOMODE_AES_GCM_Msk: u32 = 0x1 << CRYP_CR_ALGOMODE_AES_GCM_Pos;
pub const CRYP_CR_ALGOMODE_AES_GCM: u32 = CRYP_CR_ALGOMODE_AES_GCM_Msk;
pub const CRYP_CR_ALGOMODE_AES_CCM_Pos: u32 = 3;
pub const CRYP_CR_ALGOMODE_AES_CCM_Msk: u32 = 0x10001 << CRYP_CR_ALGOMODE_AES_CCM_Pos;
pub const CRYP_CR_ALGOMODE_AES_CCM: u32 = CRYP_CR_ALGOMODE_AES_CCM_Msk;
pub const CRYP_CR_DATATYPE_Pos: u32 = 6;
pub const CRYP_CR_DATATYPE_Msk: u32 = 0x3 << CRYP_CR_DATATYPE_Pos;
pub const CRYP_CR_DATATYPE: u32 = CRYP_CR_DATATYPE_Msk;
pub const CRYP_CR_DATATYPE_0: u32 = 0x1 << CRYP_CR_DATATYPE_Pos;
pub const CRYP_CR_DATATYPE_1: u32 = 0x2 << CRYP_CR_DATATYPE_Pos;
pub const CRYP_CR_KEYSIZE_Pos: u32 = 8;
pub const CRYP_CR_KEYSIZE_Msk: u32 = 0x3 << CRYP_CR_KEYSIZE_Pos;
pub const CRYP_CR_KEYSIZE: u32 = CRYP_CR_KEYSIZE_Msk;
pub const CRYP_CR_KEYSIZE_0: u32 = 0x1 << CRYP_CR_KEYSIZE_Pos;
pub const CRYP_CR_KEYSIZE_1: u32 = 0x2 << CRYP_CR_KEYSIZE_Pos;
pub const CRYP_CR_FFLUSH_Pos: u32 = 14;
pub const CRYP_CR_FFLUSH_Msk: u32 = 0x1 << CRYP_CR_FFLUSH_Pos;
pub const CRYP_CR_FFLUSH: u32 = CRYP_CR_FFLUSH_Msk;
pub const CRYP_CR_CRYPEN_Pos: u32 = 15;
pub const CRYP_CR_CRYPEN_Msk: u32 = 0x1 << CRYP_CR_CRYPEN_Pos;
pub const CRYP_CR_CRYPEN: u32 = CRYP_CR_CRYPEN_Msk;
pub const CRYP_CR_GCM_CCMPH_Pos: u32 = 16;
pub const CRYP_CR_GCM_CCMPH_Msk: u32 = 0x3 << CRYP_CR_GCM_CCMPH_Pos;
pub const CRYP_CR_GCM_CCMPH: u32 = CRYP_CR_GCM_CCMPH_Msk;
pub const CRYP_CR_GCM_CCMPH_0: u32 = 0x1 << CRYP_CR_GCM_CCMPH_Pos;
pub const CRYP_CR_GCM_CCMPH_1: u32 = 0x2 << CRYP_CR_GCM_CCMPH_Pos;
pub const CRYP_CR_ALGOMODE_3: u32 = 0x00080000;
pub const CRYP_SR_IFEM_Pos: u32 = 0;
pub const CRYP_SR_IFEM_Msk: u32 = 0x1 << CRYP_SR_IFEM_Pos;
pub const CRYP_SR_IFEM: u32 = CRYP_SR_IFEM_Msk;
pub const CRYP_SR_IFNF_Pos: u32 = 1;
pub const CRYP_SR_IFNF_Msk: u32 = 0x1 << CRYP_SR_IFNF_Pos;
pub const CRYP_SR_IFNF: u32 = CRYP_SR_IFNF_Msk;
pub const CRYP_SR_OFNE_Pos: u32 = 2;
pub const CRYP_SR_OFNE_Msk: u32 = 0x1 << CRYP_SR_OFNE_Pos;
pub const CRYP_SR_OFNE: u32 = CRYP_SR_OFNE_Msk;
pub const CRYP_SR_OFFU_Pos: u32 = 3;
pub const CRYP_SR_OFFU_Msk: u32 = 0x1 << CRYP_SR_OFFU_Pos;
pub const CRYP_SR_OFFU: u32 = CRYP_SR_OFFU_Msk;
pub const CRYP_SR_BUSY_Pos: u32 = 4;
pub const CRYP_SR_BUSY_Msk: u32 = 0x1 << CRYP_SR_BUSY_Pos;
pub const CRYP_SR_BUSY: u32 = CRYP_SR_BUSY_Msk;
pub const CRYP_DMACR_DIEN_Pos: u32 = 0;
pub const CRYP_DMACR_DIEN_Msk: u32 = 0x1 << CRYP_DMACR_DIEN_Pos;
pub const CRYP_DMACR_DIEN: u32 = CRYP_DMACR_DIEN_Msk;
pub const CRYP_DMACR_DOEN_Pos: u32 = 1;
pub const CRYP_DMACR_DOEN_Msk: u32 = 0x1 << CRYP_DMACR_DOEN_Pos;
pub const CRYP_DMACR_DOEN: u32 = CRYP_DMACR_DOEN_Msk;
pub const CRYP_IMSCR_INIM_Pos: u32 = 0;
pub const CRYP_IMSCR_INIM_Msk: u32 = 0x1 << CRYP_IMSCR_INIM_Pos;
pub const CRYP_IMSCR_INIM: u32 = CRYP_IMSCR_INIM_Msk;
pub const CRYP_IMSCR_OUTIM_Pos: u32 = 1;
pub const CRYP_IMSCR_OUTIM_Msk: u32 = 0x1 << CRYP_IMSCR_OUTIM_Pos;
pub const CRYP_IMSCR_OUTIM: u32 = CRYP_IMSCR_OUTIM_Msk;
pub const CRYP_RISR_OUTRIS_Pos: u32 = 0;
pub const CRYP_RISR_OUTRIS_Msk: u32 = 0x1 << CRYP_RISR_OUTRIS_Pos;
pub const CRYP_RISR_OUTRIS: u32 = CRYP_RISR_OUTRIS_Msk;
pub const CRYP_RISR_INRIS_Pos: u32 = 1;
pub const CRYP_RISR_INRIS_Msk: u32 = 0x1 << CRYP_RISR_INRIS_Pos;
pub const CRYP_RISR_INRIS: u32 = CRYP_RISR_INRIS_Msk;
pub const CRYP_MISR_INMIS_Pos: u32 = 0;
pub const CRYP_MISR_INMIS_Msk: u32 = 0x1 << CRYP_MISR_INMIS_Pos;
pub const CRYP_MISR_INMIS: u32 = CRYP_MISR_INMIS_Msk;
pub const CRYP_MISR_OUTMIS_Pos: u32 = 1;
pub const CRYP_MISR_OUTMIS_Msk: u32 = 0x1 << CRYP_MISR_OUTMIS_Pos;
pub const CRYP_MISR_OUTMIS: u32 = CRYP_MISR_OUTMIS_Msk;
pub const DAC_CR_EN1_Pos: u32 = 0;
pub const DAC_CR_EN1_Msk: u32 = 0x1 << DAC_CR_EN1_Pos;
pub const DAC_CR_EN1: u32 = DAC_CR_EN1_Msk;
pub const DAC_CR_BOFF1_Pos: u32 = 1;
pub const DAC_CR_BOFF1_Msk: u32 = 0x1 << DAC_CR_BOFF1_Pos;
pub const DAC_CR_BOFF1: u32 = DAC_CR_BOFF1_Msk;
pub const DAC_CR_TEN1_Pos: u32 = 2;
pub const DAC_CR_TEN1_Msk: u32 = 0x1 << DAC_CR_TEN1_Pos;
pub const DAC_CR_TEN1: u32 = DAC_CR_TEN1_Msk;
pub const DAC_CR_TSEL1_Pos: u32 = 3;
pub const DAC_CR_TSEL1_Msk: u32 = 0x7 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_TSEL1: u32 = DAC_CR_TSEL1_Msk;
pub const DAC_CR_TSEL1_0: u32 = 0x1 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_TSEL1_1: u32 = 0x2 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_TSEL1_2: u32 = 0x4 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_WAVE1_Pos: u32 = 6;
pub const DAC_CR_WAVE1_Msk: u32 = 0x3 << DAC_CR_WAVE1_Pos;
pub const DAC_CR_WAVE1: u32 = DAC_CR_WAVE1_Msk;
pub const DAC_CR_WAVE1_0: u32 = 0x1 << DAC_CR_WAVE1_Pos;
pub const DAC_CR_WAVE1_1: u32 = 0x2 << DAC_CR_WAVE1_Pos;
pub const DAC_CR_MAMP1_Pos: u32 = 8;
pub const DAC_CR_MAMP1_Msk: u32 = 0xF << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1: u32 = DAC_CR_MAMP1_Msk;
pub const DAC_CR_MAMP1_0: u32 = 0x1 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1_1: u32 = 0x2 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1_2: u32 = 0x4 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1_3: u32 = 0x8 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_DMAEN1_Pos: u32 = 12;
pub const DAC_CR_DMAEN1_Msk: u32 = 0x1 << DAC_CR_DMAEN1_Pos;
pub const DAC_CR_DMAEN1: u32 = DAC_CR_DMAEN1_Msk;
pub const DAC_CR_DMAUDRIE1_Pos: u32 = 13;
pub const DAC_CR_DMAUDRIE1_Msk: u32 = 0x1 << DAC_CR_DMAUDRIE1_Pos;
pub const DAC_CR_DMAUDRIE1: u32 = DAC_CR_DMAUDRIE1_Msk;
pub const DAC_CR_EN2_Pos: u32 = 16;
pub const DAC_CR_EN2_Msk: u32 = 0x1 << DAC_CR_EN2_Pos;
pub const DAC_CR_EN2: u32 = DAC_CR_EN2_Msk;
pub const DAC_CR_BOFF2_Pos: u32 = 17;
pub const DAC_CR_BOFF2_Msk: u32 = 0x1 << DAC_CR_BOFF2_Pos;
pub const DAC_CR_BOFF2: u32 = DAC_CR_BOFF2_Msk;
pub const DAC_CR_TEN2_Pos: u32 = 18;
pub const DAC_CR_TEN2_Msk: u32 = 0x1 << DAC_CR_TEN2_Pos;
pub const DAC_CR_TEN2: u32 = DAC_CR_TEN2_Msk;
pub const DAC_CR_TSEL2_Pos: u32 = 19;
pub const DAC_CR_TSEL2_Msk: u32 = 0x7 << DAC_CR_TSEL2_Pos;
pub const DAC_CR_TSEL2: u32 = DAC_CR_TSEL2_Msk;
pub const DAC_CR_TSEL2_0: u32 = 0x1 << DAC_CR_TSEL2_Pos;
pub const DAC_CR_TSEL2_1: u32 = 0x2 << DAC_CR_TSEL2_Pos;
pub const DAC_CR_TSEL2_2: u32 = 0x4 << DAC_CR_TSEL2_Pos;
pub const DAC_CR_WAVE2_Pos: u32 = 22;
pub const DAC_CR_WAVE2_Msk: u32 = 0x3 << DAC_CR_WAVE2_Pos;
pub const DAC_CR_WAVE2: u32 = DAC_CR_WAVE2_Msk;
pub const DAC_CR_WAVE2_0: u32 = 0x1 << DAC_CR_WAVE2_Pos;
pub const DAC_CR_WAVE2_1: u32 = 0x2 << DAC_CR_WAVE2_Pos;
pub const DAC_CR_MAMP2_Pos: u32 = 24;
pub const DAC_CR_MAMP2_Msk: u32 = 0xF << DAC_CR_MAMP2_Pos;
pub const DAC_CR_MAMP2: u32 = DAC_CR_MAMP2_Msk;
pub const DAC_CR_MAMP2_0: u32 = 0x1 << DAC_CR_MAMP2_Pos;
pub const DAC_CR_MAMP2_1: u32 = 0x2 << DAC_CR_MAMP2_Pos;
pub const DAC_CR_MAMP2_2: u32 = 0x4 << DAC_CR_MAMP2_Pos;
pub const DAC_CR_MAMP2_3: u32 = 0x8 << DAC_CR_MAMP2_Pos;
pub const DAC_CR_DMAEN2_Pos: u32 = 28;
pub const DAC_CR_DMAEN2_Msk: u32 = 0x1 << DAC_CR_DMAEN2_Pos;
pub const DAC_CR_DMAEN2: u32 = DAC_CR_DMAEN2_Msk;
pub const DAC_CR_DMAUDRIE2_Pos: u32 = 29;
pub const DAC_CR_DMAUDRIE2_Msk: u32 = 0x1 << DAC_CR_DMAUDRIE2_Pos;
pub const DAC_CR_DMAUDRIE2: u32 = DAC_CR_DMAUDRIE2_Msk;
pub const DAC_SWTRIGR_SWTRIG1_Pos: u32 = 0;
pub const DAC_SWTRIGR_SWTRIG1_Msk: u32 = 0x1 << DAC_SWTRIGR_SWTRIG1_Pos;
pub const DAC_SWTRIGR_SWTRIG1: u32 = DAC_SWTRIGR_SWTRIG1_Msk;
pub const DAC_SWTRIGR_SWTRIG2_Pos: u32 = 1;
pub const DAC_SWTRIGR_SWTRIG2_Msk: u32 = 0x1 << DAC_SWTRIGR_SWTRIG2_Pos;
pub const DAC_SWTRIGR_SWTRIG2: u32 = DAC_SWTRIGR_SWTRIG2_Msk;
pub const DAC_DHR12R1_DACC1DHR_Pos: u32 = 0;
pub const DAC_DHR12R1_DACC1DHR_Msk: u32 = 0xFFF << DAC_DHR12R1_DACC1DHR_Pos;
pub const DAC_DHR12R1_DACC1DHR: u32 = DAC_DHR12R1_DACC1DHR_Msk;
pub const DAC_DHR12L1_DACC1DHR_Pos: u32 = 4;
pub const DAC_DHR12L1_DACC1DHR_Msk: u32 = 0xFFF << DAC_DHR12L1_DACC1DHR_Pos;
pub const DAC_DHR12L1_DACC1DHR: u32 = DAC_DHR12L1_DACC1DHR_Msk;
pub const DAC_DHR8R1_DACC1DHR_Pos: u32 = 0;
pub const DAC_DHR8R1_DACC1DHR_Msk: u32 = 0xFF << DAC_DHR8R1_DACC1DHR_Pos;
pub const DAC_DHR8R1_DACC1DHR: u32 = DAC_DHR8R1_DACC1DHR_Msk;
pub const DAC_DHR12R2_DACC2DHR_Pos: u32 = 0;
pub const DAC_DHR12R2_DACC2DHR_Msk: u32 = 0xFFF << DAC_DHR12R2_DACC2DHR_Pos;
pub const DAC_DHR12R2_DACC2DHR: u32 = DAC_DHR12R2_DACC2DHR_Msk;
pub const DAC_DHR12L2_DACC2DHR_Pos: u32 = 4;
pub const DAC_DHR12L2_DACC2DHR_Msk: u32 = 0xFFF << DAC_DHR12L2_DACC2DHR_Pos;
pub const DAC_DHR12L2_DACC2DHR: u32 = DAC_DHR12L2_DACC2DHR_Msk;
pub const DAC_DHR8R2_DACC2DHR_Pos: u32 = 0;
pub const DAC_DHR8R2_DACC2DHR_Msk: u32 = 0xFF << DAC_DHR8R2_DACC2DHR_Pos;
pub const DAC_DHR8R2_DACC2DHR: u32 = DAC_DHR8R2_DACC2DHR_Msk;
pub const DAC_DHR12RD_DACC1DHR_Pos: u32 = 0;
pub const DAC_DHR12RD_DACC1DHR_Msk: u32 = 0xFFF << DAC_DHR12RD_DACC1DHR_Pos;
pub const DAC_DHR12RD_DACC1DHR: u32 = DAC_DHR12RD_DACC1DHR_Msk;
pub const DAC_DHR12RD_DACC2DHR_Pos: u32 = 16;
pub const DAC_DHR12RD_DACC2DHR_Msk: u32 = 0xFFF << DAC_DHR12RD_DACC2DHR_Pos;
pub const DAC_DHR12RD_DACC2DHR: u32 = DAC_DHR12RD_DACC2DHR_Msk;
pub const DAC_DHR12LD_DACC1DHR_Pos: u32 = 4;
pub const DAC_DHR12LD_DACC1DHR_Msk: u32 = 0xFFF << DAC_DHR12LD_DACC1DHR_Pos;
pub const DAC_DHR12LD_DACC1DHR: u32 = DAC_DHR12LD_DACC1DHR_Msk;
pub const DAC_DHR12LD_DACC2DHR_Pos: u32 = 20;
pub const DAC_DHR12LD_DACC2DHR_Msk: u32 = 0xFFF << DAC_DHR12LD_DACC2DHR_Pos;
pub const DAC_DHR12LD_DACC2DHR: u32 = DAC_DHR12LD_DACC2DHR_Msk;
pub const DAC_DHR8RD_DACC1DHR_Pos: u32 = 0;
pub const DAC_DHR8RD_DACC1DHR_Msk: u32 = 0xFF << DAC_DHR8RD_DACC1DHR_Pos;
pub const DAC_DHR8RD_DACC1DHR: u32 = DAC_DHR8RD_DACC1DHR_Msk;
pub const DAC_DHR8RD_DACC2DHR_Pos: u32 = 8;
pub const DAC_DHR8RD_DACC2DHR_Msk: u32 = 0xFF << DAC_DHR8RD_DACC2DHR_Pos;
pub const DAC_DHR8RD_DACC2DHR: u32 = DAC_DHR8RD_DACC2DHR_Msk;
pub const DAC_DOR1_DACC1DOR_Pos: u32 = 0;
pub const DAC_DOR1_DACC1DOR_Msk: u32 = 0xFFF << DAC_DOR1_DACC1DOR_Pos;
pub const DAC_DOR1_DACC1DOR: u32 = DAC_DOR1_DACC1DOR_Msk;
pub const DAC_DOR2_DACC2DOR_Pos: u32 = 0;
pub const DAC_DOR2_DACC2DOR_Msk: u32 = 0xFFF << DAC_DOR2_DACC2DOR_Pos;
pub const DAC_DOR2_DACC2DOR: u32 = DAC_DOR2_DACC2DOR_Msk;
pub const DAC_SR_DMAUDR1_Pos: u32 = 13;
pub const DAC_SR_DMAUDR1_Msk: u32 = 0x1 << DAC_SR_DMAUDR1_Pos;
pub const DAC_SR_DMAUDR1: u32 = DAC_SR_DMAUDR1_Msk;
pub const DAC_SR_DMAUDR2_Pos: u32 = 29;
pub const DAC_SR_DMAUDR2_Msk: u32 = 0x1 << DAC_SR_DMAUDR2_Pos;
pub const DAC_SR_DMAUDR2: u32 = DAC_SR_DMAUDR2_Msk;
pub const DCMI_CR_CAPTURE_Pos: u32 = 0;
pub const DCMI_CR_CAPTURE_Msk: u32 = 0x1 << DCMI_CR_CAPTURE_Pos;
pub const DCMI_CR_CAPTURE: u32 = DCMI_CR_CAPTURE_Msk;
pub const DCMI_CR_CM_Pos: u32 = 1;
pub const DCMI_CR_CM_Msk: u32 = 0x1 << DCMI_CR_CM_Pos;
pub const DCMI_CR_CM: u32 = DCMI_CR_CM_Msk;
pub const DCMI_CR_CROP_Pos: u32 = 2;
pub const DCMI_CR_CROP_Msk: u32 = 0x1 << DCMI_CR_CROP_Pos;
pub const DCMI_CR_CROP: u32 = DCMI_CR_CROP_Msk;
pub const DCMI_CR_JPEG_Pos: u32 = 3;
pub const DCMI_CR_JPEG_Msk: u32 = 0x1 << DCMI_CR_JPEG_Pos;
pub const DCMI_CR_JPEG: u32 = DCMI_CR_JPEG_Msk;
pub const DCMI_CR_ESS_Pos: u32 = 4;
pub const DCMI_CR_ESS_Msk: u32 = 0x1 << DCMI_CR_ESS_Pos;
pub const DCMI_CR_ESS: u32 = DCMI_CR_ESS_Msk;
pub const DCMI_CR_PCKPOL_Pos: u32 = 5;
pub const DCMI_CR_PCKPOL_Msk: u32 = 0x1 << DCMI_CR_PCKPOL_Pos;
pub const DCMI_CR_PCKPOL: u32 = DCMI_CR_PCKPOL_Msk;
pub const DCMI_CR_HSPOL_Pos: u32 = 6;
pub const DCMI_CR_HSPOL_Msk: u32 = 0x1 << DCMI_CR_HSPOL_Pos;
pub const DCMI_CR_HSPOL: u32 = DCMI_CR_HSPOL_Msk;
pub const DCMI_CR_VSPOL_Pos: u32 = 7;
pub const DCMI_CR_VSPOL_Msk: u32 = 0x1 << DCMI_CR_VSPOL_Pos;
pub const DCMI_CR_VSPOL: u32 = DCMI_CR_VSPOL_Msk;
pub const DCMI_CR_FCRC_0: u32 = 0x00000100;
pub const DCMI_CR_FCRC_1: u32 = 0x00000200;
pub const DCMI_CR_EDM_0: u32 = 0x00000400;
pub const DCMI_CR_EDM_1: u32 = 0x00000800;
pub const DCMI_CR_CRE_Pos: u32 = 12;
pub const DCMI_CR_CRE_Msk: u32 = 0x1 << DCMI_CR_CRE_Pos;
pub const DCMI_CR_CRE: u32 = DCMI_CR_CRE_Msk;
pub const DCMI_CR_ENABLE_Pos: u32 = 14;
pub const DCMI_CR_ENABLE_Msk: u32 = 0x1 << DCMI_CR_ENABLE_Pos;
pub const DCMI_CR_ENABLE: u32 = DCMI_CR_ENABLE_Msk;
pub const DCMI_CR_BSM_Pos: u32 = 16;
pub const DCMI_CR_BSM_Msk: u32 = 0x3 << DCMI_CR_BSM_Pos;
pub const DCMI_CR_BSM: u32 = DCMI_CR_BSM_Msk;
pub const DCMI_CR_BSM_0: u32 = 0x1 << DCMI_CR_BSM_Pos;
pub const DCMI_CR_BSM_1: u32 = 0x2 << DCMI_CR_BSM_Pos;
pub const DCMI_CR_OEBS_Pos: u32 = 18;
pub const DCMI_CR_OEBS_Msk: u32 = 0x1 << DCMI_CR_OEBS_Pos;
pub const DCMI_CR_OEBS: u32 = DCMI_CR_OEBS_Msk;
pub const DCMI_CR_LSM_Pos: u32 = 19;
pub const DCMI_CR_LSM_Msk: u32 = 0x1 << DCMI_CR_LSM_Pos;
pub const DCMI_CR_LSM: u32 = DCMI_CR_LSM_Msk;
pub const DCMI_CR_OELS_Pos: u32 = 20;
pub const DCMI_CR_OELS_Msk: u32 = 0x1 << DCMI_CR_OELS_Pos;
pub const DCMI_CR_OELS: u32 = DCMI_CR_OELS_Msk;
pub const DCMI_SR_HSYNC_Pos: u32 = 0;
pub const DCMI_SR_HSYNC_Msk: u32 = 0x1 << DCMI_SR_HSYNC_Pos;
pub const DCMI_SR_HSYNC: u32 = DCMI_SR_HSYNC_Msk;
pub const DCMI_SR_VSYNC_Pos: u32 = 1;
pub const DCMI_SR_VSYNC_Msk: u32 = 0x1 << DCMI_SR_VSYNC_Pos;
pub const DCMI_SR_VSYNC: u32 = DCMI_SR_VSYNC_Msk;
pub const DCMI_SR_FNE_Pos: u32 = 2;
pub const DCMI_SR_FNE_Msk: u32 = 0x1 << DCMI_SR_FNE_Pos;
pub const DCMI_SR_FNE: u32 = DCMI_SR_FNE_Msk;
pub const DCMI_RIS_FRAME_RIS_Pos: u32 = 0;
pub const DCMI_RIS_FRAME_RIS_Msk: u32 = 0x1 << DCMI_RIS_FRAME_RIS_Pos;
pub const DCMI_RIS_FRAME_RIS: u32 = DCMI_RIS_FRAME_RIS_Msk;
pub const DCMI_RIS_OVR_RIS_Pos: u32 = 1;
pub const DCMI_RIS_OVR_RIS_Msk: u32 = 0x1 << DCMI_RIS_OVR_RIS_Pos;
pub const DCMI_RIS_OVR_RIS: u32 = DCMI_RIS_OVR_RIS_Msk;
pub const DCMI_RIS_ERR_RIS_Pos: u32 = 2;
pub const DCMI_RIS_ERR_RIS_Msk: u32 = 0x1 << DCMI_RIS_ERR_RIS_Pos;
pub const DCMI_RIS_ERR_RIS: u32 = DCMI_RIS_ERR_RIS_Msk;
pub const DCMI_RIS_VSYNC_RIS_Pos: u32 = 3;
pub const DCMI_RIS_VSYNC_RIS_Msk: u32 = 0x1 << DCMI_RIS_VSYNC_RIS_Pos;
pub const DCMI_RIS_VSYNC_RIS: u32 = DCMI_RIS_VSYNC_RIS_Msk;
pub const DCMI_RIS_LINE_RIS_Pos: u32 = 4;
pub const DCMI_RIS_LINE_RIS_Msk: u32 = 0x1 << DCMI_RIS_LINE_RIS_Pos;
pub const DCMI_RIS_LINE_RIS: u32 = DCMI_RIS_LINE_RIS_Msk;
pub const DCMI_RISR_FRAME_RIS: u32 = DCMI_RIS_FRAME_RIS;
pub const DCMI_RISR_OVF_RIS: u32 = DCMI_RIS_OVR_RIS;
pub const DCMI_RISR_ERR_RIS: u32 = DCMI_RIS_ERR_RIS;
pub const DCMI_RISR_VSYNC_RIS: u32 = DCMI_RIS_VSYNC_RIS;
pub const DCMI_RISR_LINE_RIS: u32 = DCMI_RIS_LINE_RIS;
pub const DCMI_IER_FRAME_IE_Pos: u32 = 0;
pub const DCMI_IER_FRAME_IE_Msk: u32 = 0x1 << DCMI_IER_FRAME_IE_Pos;
pub const DCMI_IER_FRAME_IE: u32 = DCMI_IER_FRAME_IE_Msk;
pub const DCMI_IER_OVR_IE_Pos: u32 = 1;
pub const DCMI_IER_OVR_IE_Msk: u32 = 0x1 << DCMI_IER_OVR_IE_Pos;
pub const DCMI_IER_OVR_IE: u32 = DCMI_IER_OVR_IE_Msk;
pub const DCMI_IER_ERR_IE_Pos: u32 = 2;
pub const DCMI_IER_ERR_IE_Msk: u32 = 0x1 << DCMI_IER_ERR_IE_Pos;
pub const DCMI_IER_ERR_IE: u32 = DCMI_IER_ERR_IE_Msk;
pub const DCMI_IER_VSYNC_IE_Pos: u32 = 3;
pub const DCMI_IER_VSYNC_IE_Msk: u32 = 0x1 << DCMI_IER_VSYNC_IE_Pos;
pub const DCMI_IER_VSYNC_IE: u32 = DCMI_IER_VSYNC_IE_Msk;
pub const DCMI_IER_LINE_IE_Pos: u32 = 4;
pub const DCMI_IER_LINE_IE_Msk: u32 = 0x1 << DCMI_IER_LINE_IE_Pos;
pub const DCMI_IER_LINE_IE: u32 = DCMI_IER_LINE_IE_Msk;
pub const DCMI_IER_OVF_IE: u32 = DCMI_IER_OVR_IE;
pub const DCMI_MIS_FRAME_MIS_Pos: u32 = 0;
pub const DCMI_MIS_FRAME_MIS_Msk: u32 = 0x1 << DCMI_MIS_FRAME_MIS_Pos;
pub const DCMI_MIS_FRAME_MIS: u32 = DCMI_MIS_FRAME_MIS_Msk;
pub const DCMI_MIS_OVR_MIS_Pos: u32 = 1;
pub const DCMI_MIS_OVR_MIS_Msk: u32 = 0x1 << DCMI_MIS_OVR_MIS_Pos;
pub const DCMI_MIS_OVR_MIS: u32 = DCMI_MIS_OVR_MIS_Msk;
pub const DCMI_MIS_ERR_MIS_Pos: u32 = 2;
pub const DCMI_MIS_ERR_MIS_Msk: u32 = 0x1 << DCMI_MIS_ERR_MIS_Pos;
pub const DCMI_MIS_ERR_MIS: u32 = DCMI_MIS_ERR_MIS_Msk;
pub const DCMI_MIS_VSYNC_MIS_Pos: u32 = 3;
pub const DCMI_MIS_VSYNC_MIS_Msk: u32 = 0x1 << DCMI_MIS_VSYNC_MIS_Pos;
pub const DCMI_MIS_VSYNC_MIS: u32 = DCMI_MIS_VSYNC_MIS_Msk;
pub const DCMI_MIS_LINE_MIS_Pos: u32 = 4;
pub const DCMI_MIS_LINE_MIS_Msk: u32 = 0x1 << DCMI_MIS_LINE_MIS_Pos;
pub const DCMI_MIS_LINE_MIS: u32 = DCMI_MIS_LINE_MIS_Msk;
pub const DCMI_MISR_FRAME_MIS: u32 = DCMI_MIS_FRAME_MIS;
pub const DCMI_MISR_OVF_MIS: u32 = DCMI_MIS_OVR_MIS;
pub const DCMI_MISR_ERR_MIS: u32 = DCMI_MIS_ERR_MIS;
pub const DCMI_MISR_VSYNC_MIS: u32 = DCMI_MIS_VSYNC_MIS;
pub const DCMI_MISR_LINE_MIS: u32 = DCMI_MIS_LINE_MIS;
pub const DCMI_ICR_FRAME_ISC_Pos: u32 = 0;
pub const DCMI_ICR_FRAME_ISC_Msk: u32 = 0x1 << DCMI_ICR_FRAME_ISC_Pos;
pub const DCMI_ICR_FRAME_ISC: u32 = DCMI_ICR_FRAME_ISC_Msk;
pub const DCMI_ICR_OVR_ISC_Pos: u32 = 1;
pub const DCMI_ICR_OVR_ISC_Msk: u32 = 0x1 << DCMI_ICR_OVR_ISC_Pos;
pub const DCMI_ICR_OVR_ISC: u32 = DCMI_ICR_OVR_ISC_Msk;
pub const DCMI_ICR_ERR_ISC_Pos: u32 = 2;
pub const DCMI_ICR_ERR_ISC_Msk: u32 = 0x1 << DCMI_ICR_ERR_ISC_Pos;
pub const DCMI_ICR_ERR_ISC: u32 = DCMI_ICR_ERR_ISC_Msk;
pub const DCMI_ICR_VSYNC_ISC_Pos: u32 = 3;
pub const DCMI_ICR_VSYNC_ISC_Msk: u32 = 0x1 << DCMI_ICR_VSYNC_ISC_Pos;
pub const DCMI_ICR_VSYNC_ISC: u32 = DCMI_ICR_VSYNC_ISC_Msk;
pub const DCMI_ICR_LINE_ISC_Pos: u32 = 4;
pub const DCMI_ICR_LINE_ISC_Msk: u32 = 0x1 << DCMI_ICR_LINE_ISC_Pos;
pub const DCMI_ICR_LINE_ISC: u32 = DCMI_ICR_LINE_ISC_Msk;
pub const DCMI_ICR_OVF_ISC: u32 = DCMI_ICR_OVR_ISC;
pub const DCMI_ESCR_FSC_Pos: u32 = 0;
pub const DCMI_ESCR_FSC_Msk: u32 = 0xFF << DCMI_ESCR_FSC_Pos;
pub const DCMI_ESCR_FSC: u32 = DCMI_ESCR_FSC_Msk;
pub const DCMI_ESCR_LSC_Pos: u32 = 8;
pub const DCMI_ESCR_LSC_Msk: u32 = 0xFF << DCMI_ESCR_LSC_Pos;
pub const DCMI_ESCR_LSC: u32 = DCMI_ESCR_LSC_Msk;
pub const DCMI_ESCR_LEC_Pos: u32 = 16;
pub const DCMI_ESCR_LEC_Msk: u32 = 0xFF << DCMI_ESCR_LEC_Pos;
pub const DCMI_ESCR_LEC: u32 = DCMI_ESCR_LEC_Msk;
pub const DCMI_ESCR_FEC_Pos: u32 = 24;
pub const DCMI_ESCR_FEC_Msk: u32 = 0xFF << DCMI_ESCR_FEC_Pos;
pub const DCMI_ESCR_FEC: u32 = DCMI_ESCR_FEC_Msk;
pub const DCMI_ESUR_FSU_Pos: u32 = 0;
pub const DCMI_ESUR_FSU_Msk: u32 = 0xFF << DCMI_ESUR_FSU_Pos;
pub const DCMI_ESUR_FSU: u32 = DCMI_ESUR_FSU_Msk;
pub const DCMI_ESUR_LSU_Pos: u32 = 8;
pub const DCMI_ESUR_LSU_Msk: u32 = 0xFF << DCMI_ESUR_LSU_Pos;
pub const DCMI_ESUR_LSU: u32 = DCMI_ESUR_LSU_Msk;
pub const DCMI_ESUR_LEU_Pos: u32 = 16;
pub const DCMI_ESUR_LEU_Msk: u32 = 0xFF << DCMI_ESUR_LEU_Pos;
pub const DCMI_ESUR_LEU: u32 = DCMI_ESUR_LEU_Msk;
pub const DCMI_ESUR_FEU_Pos: u32 = 24;
pub const DCMI_ESUR_FEU_Msk: u32 = 0xFF << DCMI_ESUR_FEU_Pos;
pub const DCMI_ESUR_FEU: u32 = DCMI_ESUR_FEU_Msk;
pub const DCMI_CWSTRT_HOFFCNT_Pos: u32 = 0;
pub const DCMI_CWSTRT_HOFFCNT_Msk: u32 = 0x3FFF << DCMI_CWSTRT_HOFFCNT_Pos;
pub const DCMI_CWSTRT_HOFFCNT: u32 = DCMI_CWSTRT_HOFFCNT_Msk;
pub const DCMI_CWSTRT_VST_Pos: u32 = 16;
pub const DCMI_CWSTRT_VST_Msk: u32 = 0x1FFF << DCMI_CWSTRT_VST_Pos;
pub const DCMI_CWSTRT_VST: u32 = DCMI_CWSTRT_VST_Msk;
pub const DCMI_CWSIZE_CAPCNT_Pos: u32 = 0;
pub const DCMI_CWSIZE_CAPCNT_Msk: u32 = 0x3FFF << DCMI_CWSIZE_CAPCNT_Pos;
pub const DCMI_CWSIZE_CAPCNT: u32 = DCMI_CWSIZE_CAPCNT_Msk;
pub const DCMI_CWSIZE_VLINE_Pos: u32 = 16;
pub const DCMI_CWSIZE_VLINE_Msk: u32 = 0x3FFF << DCMI_CWSIZE_VLINE_Pos;
pub const DCMI_CWSIZE_VLINE: u32 = DCMI_CWSIZE_VLINE_Msk;
pub const DCMI_DR_BYTE0_Pos: u32 = 0;
pub const DCMI_DR_BYTE0_Msk: u32 = 0xFF << DCMI_DR_BYTE0_Pos;
pub const DCMI_DR_BYTE0: u32 = DCMI_DR_BYTE0_Msk;
pub const DCMI_DR_BYTE1_Pos: u32 = 8;
pub const DCMI_DR_BYTE1_Msk: u32 = 0xFF << DCMI_DR_BYTE1_Pos;
pub const DCMI_DR_BYTE1: u32 = DCMI_DR_BYTE1_Msk;
pub const DCMI_DR_BYTE2_Pos: u32 = 16;
pub const DCMI_DR_BYTE2_Msk: u32 = 0xFF << DCMI_DR_BYTE2_Pos;
pub const DCMI_DR_BYTE2: u32 = DCMI_DR_BYTE2_Msk;
pub const DCMI_DR_BYTE3_Pos: u32 = 24;
pub const DCMI_DR_BYTE3_Msk: u32 = 0xFF << DCMI_DR_BYTE3_Pos;
pub const DCMI_DR_BYTE3: u32 = DCMI_DR_BYTE3_Msk;
pub const DMA_SxCR_CHSEL_Pos: u32 = 25;
pub const DMA_SxCR_CHSEL_Msk: u32 = 0x7 << DMA_SxCR_CHSEL_Pos;
pub const DMA_SxCR_CHSEL: u32 = DMA_SxCR_CHSEL_Msk;
pub const DMA_SxCR_CHSEL_0: u32 = 0x1 << DMA_SxCR_CHSEL_Pos;
pub const DMA_SxCR_CHSEL_1: u32 = 0x2 << DMA_SxCR_CHSEL_Pos;
pub const DMA_SxCR_CHSEL_2: u32 = 0x4 << DMA_SxCR_CHSEL_Pos;
pub const DMA_SxCR_MBURST_Pos: u32 = 23;
pub const DMA_SxCR_MBURST_Msk: u32 = 0x3 << DMA_SxCR_MBURST_Pos;
pub const DMA_SxCR_MBURST: u32 = DMA_SxCR_MBURST_Msk;
pub const DMA_SxCR_MBURST_0: u32 = 0x1 << DMA_SxCR_MBURST_Pos;
pub const DMA_SxCR_MBURST_1: u32 = 0x2 << DMA_SxCR_MBURST_Pos;
pub const DMA_SxCR_PBURST_Pos: u32 = 21;
pub const DMA_SxCR_PBURST_Msk: u32 = 0x3 << DMA_SxCR_PBURST_Pos;
pub const DMA_SxCR_PBURST: u32 = DMA_SxCR_PBURST_Msk;
pub const DMA_SxCR_PBURST_0: u32 = 0x1 << DMA_SxCR_PBURST_Pos;
pub const DMA_SxCR_PBURST_1: u32 = 0x2 << DMA_SxCR_PBURST_Pos;
pub const DMA_SxCR_CT_Pos: u32 = 19;
pub const DMA_SxCR_CT_Msk: u32 = 0x1 << DMA_SxCR_CT_Pos;
pub const DMA_SxCR_CT: u32 = DMA_SxCR_CT_Msk;
pub const DMA_SxCR_DBM_Pos: u32 = 18;
pub const DMA_SxCR_DBM_Msk: u32 = 0x1 << DMA_SxCR_DBM_Pos;
pub const DMA_SxCR_DBM: u32 = DMA_SxCR_DBM_Msk;
pub const DMA_SxCR_PL_Pos: u32 = 16;
pub const DMA_SxCR_PL_Msk: u32 = 0x3 << DMA_SxCR_PL_Pos;
pub const DMA_SxCR_PL: u32 = DMA_SxCR_PL_Msk;
pub const DMA_SxCR_PL_0: u32 = 0x1 << DMA_SxCR_PL_Pos;
pub const DMA_SxCR_PL_1: u32 = 0x2 << DMA_SxCR_PL_Pos;
pub const DMA_SxCR_PINCOS_Pos: u32 = 15;
pub const DMA_SxCR_PINCOS_Msk: u32 = 0x1 << DMA_SxCR_PINCOS_Pos;
pub const DMA_SxCR_PINCOS: u32 = DMA_SxCR_PINCOS_Msk;
pub const DMA_SxCR_MSIZE_Pos: u32 = 13;
pub const DMA_SxCR_MSIZE_Msk: u32 = 0x3 << DMA_SxCR_MSIZE_Pos;
pub const DMA_SxCR_MSIZE: u32 = DMA_SxCR_MSIZE_Msk;
pub const DMA_SxCR_MSIZE_0: u32 = 0x1 << DMA_SxCR_MSIZE_Pos;
pub const DMA_SxCR_MSIZE_1: u32 = 0x2 << DMA_SxCR_MSIZE_Pos;
pub const DMA_SxCR_PSIZE_Pos: u32 = 11;
pub const DMA_SxCR_PSIZE_Msk: u32 = 0x3 << DMA_SxCR_PSIZE_Pos;
pub const DMA_SxCR_PSIZE: u32 = DMA_SxCR_PSIZE_Msk;
pub const DMA_SxCR_PSIZE_0: u32 = 0x1 << DMA_SxCR_PSIZE_Pos;
pub const DMA_SxCR_PSIZE_1: u32 = 0x2 << DMA_SxCR_PSIZE_Pos;
pub const DMA_SxCR_MINC_Pos: u32 = 10;
pub const DMA_SxCR_MINC_Msk: u32 = 0x1 << DMA_SxCR_MINC_Pos;
pub const DMA_SxCR_MINC: u32 = DMA_SxCR_MINC_Msk;
pub const DMA_SxCR_PINC_Pos: u32 = 9;
pub const DMA_SxCR_PINC_Msk: u32 = 0x1 << DMA_SxCR_PINC_Pos;
pub const DMA_SxCR_PINC: u32 = DMA_SxCR_PINC_Msk;
pub const DMA_SxCR_CIRC_Pos: u32 = 8;
pub const DMA_SxCR_CIRC_Msk: u32 = 0x1 << DMA_SxCR_CIRC_Pos;
pub const DMA_SxCR_CIRC: u32 = DMA_SxCR_CIRC_Msk;
pub const DMA_SxCR_DIR_Pos: u32 = 6;
pub const DMA_SxCR_DIR_Msk: u32 = 0x3 << DMA_SxCR_DIR_Pos;
pub const DMA_SxCR_DIR: u32 = DMA_SxCR_DIR_Msk;
pub const DMA_SxCR_DIR_0: u32 = 0x1 << DMA_SxCR_DIR_Pos;
pub const DMA_SxCR_DIR_1: u32 = 0x2 << DMA_SxCR_DIR_Pos;
pub const DMA_SxCR_PFCTRL_Pos: u32 = 5;
pub const DMA_SxCR_PFCTRL_Msk: u32 = 0x1 << DMA_SxCR_PFCTRL_Pos;
pub const DMA_SxCR_PFCTRL: u32 = DMA_SxCR_PFCTRL_Msk;
pub const DMA_SxCR_TCIE_Pos: u32 = 4;
pub const DMA_SxCR_TCIE_Msk: u32 = 0x1 << DMA_SxCR_TCIE_Pos;
pub const DMA_SxCR_TCIE: u32 = DMA_SxCR_TCIE_Msk;
pub const DMA_SxCR_HTIE_Pos: u32 = 3;
pub const DMA_SxCR_HTIE_Msk: u32 = 0x1 << DMA_SxCR_HTIE_Pos;
pub const DMA_SxCR_HTIE: u32 = DMA_SxCR_HTIE_Msk;
pub const DMA_SxCR_TEIE_Pos: u32 = 2;
pub const DMA_SxCR_TEIE_Msk: u32 = 0x1 << DMA_SxCR_TEIE_Pos;
pub const DMA_SxCR_TEIE: u32 = DMA_SxCR_TEIE_Msk;
pub const DMA_SxCR_DMEIE_Pos: u32 = 1;
pub const DMA_SxCR_DMEIE_Msk: u32 = 0x1 << DMA_SxCR_DMEIE_Pos;
pub const DMA_SxCR_DMEIE: u32 = DMA_SxCR_DMEIE_Msk;
pub const DMA_SxCR_EN_Pos: u32 = 0;
pub const DMA_SxCR_EN_Msk: u32 = 0x1 << DMA_SxCR_EN_Pos;
pub const DMA_SxCR_EN: u32 = DMA_SxCR_EN_Msk;
pub const DMA_SxNDT_Pos: u32 = 0;
pub const DMA_SxNDT_Msk: u32 = 0xFFFF << DMA_SxNDT_Pos;
pub const DMA_SxNDT: u32 = DMA_SxNDT_Msk;
pub const DMA_SxNDT_0: u32 = 0x0001 << DMA_SxNDT_Pos;
pub const DMA_SxNDT_1: u32 = 0x0002 << DMA_SxNDT_Pos;
pub const DMA_SxNDT_2: u32 = 0x0004 << DMA_SxNDT_Pos;
pub const DMA_SxNDT_3: u32 = 0x0008 << DMA_SxNDT_Pos;
pub const DMA_SxNDT_4: u32 = 0x0010 << DMA_SxNDT_Pos;
pub const DMA_SxNDT_5: u32 = 0x0020 << DMA_SxNDT_Pos;
pub const DMA_SxNDT_6: u32 = 0x0040 << DMA_SxNDT_Pos;
pub const DMA_SxNDT_7: u32 = 0x0080 << DMA_SxNDT_Pos;
pub const DMA_SxNDT_8: u32 = 0x0100 << DMA_SxNDT_Pos;
pub const DMA_SxNDT_9: u32 = 0x0200 << DMA_SxNDT_Pos;
pub const DMA_SxNDT_10: u32 = 0x0400 << DMA_SxNDT_Pos;
pub const DMA_SxNDT_11: u32 = 0x0800 << DMA_SxNDT_Pos;
pub const DMA_SxNDT_12: u32 = 0x1000 << DMA_SxNDT_Pos;
pub const DMA_SxNDT_13: u32 = 0x2000 << DMA_SxNDT_Pos;
pub const DMA_SxNDT_14: u32 = 0x4000 << DMA_SxNDT_Pos;
pub const DMA_SxNDT_15: u32 = 0x8000 << DMA_SxNDT_Pos;
pub const DMA_SxFCR_FEIE_Pos: u32 = 7;
pub const DMA_SxFCR_FEIE_Msk: u32 = 0x1 << DMA_SxFCR_FEIE_Pos;
pub const DMA_SxFCR_FEIE: u32 = DMA_SxFCR_FEIE_Msk;
pub const DMA_SxFCR_FS_Pos: u32 = 3;
pub const DMA_SxFCR_FS_Msk: u32 = 0x7 << DMA_SxFCR_FS_Pos;
pub const DMA_SxFCR_FS: u32 = DMA_SxFCR_FS_Msk;
pub const DMA_SxFCR_FS_0: u32 = 0x1 << DMA_SxFCR_FS_Pos;
pub const DMA_SxFCR_FS_1: u32 = 0x2 << DMA_SxFCR_FS_Pos;
pub const DMA_SxFCR_FS_2: u32 = 0x4 << DMA_SxFCR_FS_Pos;
pub const DMA_SxFCR_DMDIS_Pos: u32 = 2;
pub const DMA_SxFCR_DMDIS_Msk: u32 = 0x1 << DMA_SxFCR_DMDIS_Pos;
pub const DMA_SxFCR_DMDIS: u32 = DMA_SxFCR_DMDIS_Msk;
pub const DMA_SxFCR_FTH_Pos: u32 = 0;
pub const DMA_SxFCR_FTH_Msk: u32 = 0x3 << DMA_SxFCR_FTH_Pos;
pub const DMA_SxFCR_FTH: u32 = DMA_SxFCR_FTH_Msk;
pub const DMA_SxFCR_FTH_0: u32 = 0x1 << DMA_SxFCR_FTH_Pos;
pub const DMA_SxFCR_FTH_1: u32 = 0x2 << DMA_SxFCR_FTH_Pos;
pub const DMA_LISR_TCIF3_Pos: u32 = 27;
pub const DMA_LISR_TCIF3_Msk: u32 = 0x1 << DMA_LISR_TCIF3_Pos;
pub const DMA_LISR_TCIF3: u32 = DMA_LISR_TCIF3_Msk;
pub const DMA_LISR_HTIF3_Pos: u32 = 26;
pub const DMA_LISR_HTIF3_Msk: u32 = 0x1 << DMA_LISR_HTIF3_Pos;
pub const DMA_LISR_HTIF3: u32 = DMA_LISR_HTIF3_Msk;
pub const DMA_LISR_TEIF3_Pos: u32 = 25;
pub const DMA_LISR_TEIF3_Msk: u32 = 0x1 << DMA_LISR_TEIF3_Pos;
pub const DMA_LISR_TEIF3: u32 = DMA_LISR_TEIF3_Msk;
pub const DMA_LISR_DMEIF3_Pos: u32 = 24;
pub const DMA_LISR_DMEIF3_Msk: u32 = 0x1 << DMA_LISR_DMEIF3_Pos;
pub const DMA_LISR_DMEIF3: u32 = DMA_LISR_DMEIF3_Msk;
pub const DMA_LISR_FEIF3_Pos: u32 = 22;
pub const DMA_LISR_FEIF3_Msk: u32 = 0x1 << DMA_LISR_FEIF3_Pos;
pub const DMA_LISR_FEIF3: u32 = DMA_LISR_FEIF3_Msk;
pub const DMA_LISR_TCIF2_Pos: u32 = 21;
pub const DMA_LISR_TCIF2_Msk: u32 = 0x1 << DMA_LISR_TCIF2_Pos;
pub const DMA_LISR_TCIF2: u32 = DMA_LISR_TCIF2_Msk;
pub const DMA_LISR_HTIF2_Pos: u32 = 20;
pub const DMA_LISR_HTIF2_Msk: u32 = 0x1 << DMA_LISR_HTIF2_Pos;
pub const DMA_LISR_HTIF2: u32 = DMA_LISR_HTIF2_Msk;
pub const DMA_LISR_TEIF2_Pos: u32 = 19;
pub const DMA_LISR_TEIF2_Msk: u32 = 0x1 << DMA_LISR_TEIF2_Pos;
pub const DMA_LISR_TEIF2: u32 = DMA_LISR_TEIF2_Msk;
pub const DMA_LISR_DMEIF2_Pos: u32 = 18;
pub const DMA_LISR_DMEIF2_Msk: u32 = 0x1 << DMA_LISR_DMEIF2_Pos;
pub const DMA_LISR_DMEIF2: u32 = DMA_LISR_DMEIF2_Msk;
pub const DMA_LISR_FEIF2_Pos: u32 = 16;
pub const DMA_LISR_FEIF2_Msk: u32 = 0x1 << DMA_LISR_FEIF2_Pos;
pub const DMA_LISR_FEIF2: u32 = DMA_LISR_FEIF2_Msk;
pub const DMA_LISR_TCIF1_Pos: u32 = 11;
pub const DMA_LISR_TCIF1_Msk: u32 = 0x1 << DMA_LISR_TCIF1_Pos;
pub const DMA_LISR_TCIF1: u32 = DMA_LISR_TCIF1_Msk;
pub const DMA_LISR_HTIF1_Pos: u32 = 10;
pub const DMA_LISR_HTIF1_Msk: u32 = 0x1 << DMA_LISR_HTIF1_Pos;
pub const DMA_LISR_HTIF1: u32 = DMA_LISR_HTIF1_Msk;
pub const DMA_LISR_TEIF1_Pos: u32 = 9;
pub const DMA_LISR_TEIF1_Msk: u32 = 0x1 << DMA_LISR_TEIF1_Pos;
pub const DMA_LISR_TEIF1: u32 = DMA_LISR_TEIF1_Msk;
pub const DMA_LISR_DMEIF1_Pos: u32 = 8;
pub const DMA_LISR_DMEIF1_Msk: u32 = 0x1 << DMA_LISR_DMEIF1_Pos;
pub const DMA_LISR_DMEIF1: u32 = DMA_LISR_DMEIF1_Msk;
pub const DMA_LISR_FEIF1_Pos: u32 = 6;
pub const DMA_LISR_FEIF1_Msk: u32 = 0x1 << DMA_LISR_FEIF1_Pos;
pub const DMA_LISR_FEIF1: u32 = DMA_LISR_FEIF1_Msk;
pub const DMA_LISR_TCIF0_Pos: u32 = 5;
pub const DMA_LISR_TCIF0_Msk: u32 = 0x1 << DMA_LISR_TCIF0_Pos;
pub const DMA_LISR_TCIF0: u32 = DMA_LISR_TCIF0_Msk;
pub const DMA_LISR_HTIF0_Pos: u32 = 4;
pub const DMA_LISR_HTIF0_Msk: u32 = 0x1 << DMA_LISR_HTIF0_Pos;
pub const DMA_LISR_HTIF0: u32 = DMA_LISR_HTIF0_Msk;
pub const DMA_LISR_TEIF0_Pos: u32 = 3;
pub const DMA_LISR_TEIF0_Msk: u32 = 0x1 << DMA_LISR_TEIF0_Pos;
pub const DMA_LISR_TEIF0: u32 = DMA_LISR_TEIF0_Msk;
pub const DMA_LISR_DMEIF0_Pos: u32 = 2;
pub const DMA_LISR_DMEIF0_Msk: u32 = 0x1 << DMA_LISR_DMEIF0_Pos;
pub const DMA_LISR_DMEIF0: u32 = DMA_LISR_DMEIF0_Msk;
pub const DMA_LISR_FEIF0_Pos: u32 = 0;
pub const DMA_LISR_FEIF0_Msk: u32 = 0x1 << DMA_LISR_FEIF0_Pos;
pub const DMA_LISR_FEIF0: u32 = DMA_LISR_FEIF0_Msk;
pub const DMA_HISR_TCIF7_Pos: u32 = 27;
pub const DMA_HISR_TCIF7_Msk: u32 = 0x1 << DMA_HISR_TCIF7_Pos;
pub const DMA_HISR_TCIF7: u32 = DMA_HISR_TCIF7_Msk;
pub const DMA_HISR_HTIF7_Pos: u32 = 26;
pub const DMA_HISR_HTIF7_Msk: u32 = 0x1 << DMA_HISR_HTIF7_Pos;
pub const DMA_HISR_HTIF7: u32 = DMA_HISR_HTIF7_Msk;
pub const DMA_HISR_TEIF7_Pos: u32 = 25;
pub const DMA_HISR_TEIF7_Msk: u32 = 0x1 << DMA_HISR_TEIF7_Pos;
pub const DMA_HISR_TEIF7: u32 = DMA_HISR_TEIF7_Msk;
pub const DMA_HISR_DMEIF7_Pos: u32 = 24;
pub const DMA_HISR_DMEIF7_Msk: u32 = 0x1 << DMA_HISR_DMEIF7_Pos;
pub const DMA_HISR_DMEIF7: u32 = DMA_HISR_DMEIF7_Msk;
pub const DMA_HISR_FEIF7_Pos: u32 = 22;
pub const DMA_HISR_FEIF7_Msk: u32 = 0x1 << DMA_HISR_FEIF7_Pos;
pub const DMA_HISR_FEIF7: u32 = DMA_HISR_FEIF7_Msk;
pub const DMA_HISR_TCIF6_Pos: u32 = 21;
pub const DMA_HISR_TCIF6_Msk: u32 = 0x1 << DMA_HISR_TCIF6_Pos;
pub const DMA_HISR_TCIF6: u32 = DMA_HISR_TCIF6_Msk;
pub const DMA_HISR_HTIF6_Pos: u32 = 20;
pub const DMA_HISR_HTIF6_Msk: u32 = 0x1 << DMA_HISR_HTIF6_Pos;
pub const DMA_HISR_HTIF6: u32 = DMA_HISR_HTIF6_Msk;
pub const DMA_HISR_TEIF6_Pos: u32 = 19;
pub const DMA_HISR_TEIF6_Msk: u32 = 0x1 << DMA_HISR_TEIF6_Pos;
pub const DMA_HISR_TEIF6: u32 = DMA_HISR_TEIF6_Msk;
pub const DMA_HISR_DMEIF6_Pos: u32 = 18;
pub const DMA_HISR_DMEIF6_Msk: u32 = 0x1 << DMA_HISR_DMEIF6_Pos;
pub const DMA_HISR_DMEIF6: u32 = DMA_HISR_DMEIF6_Msk;
pub const DMA_HISR_FEIF6_Pos: u32 = 16;
pub const DMA_HISR_FEIF6_Msk: u32 = 0x1 << DMA_HISR_FEIF6_Pos;
pub const DMA_HISR_FEIF6: u32 = DMA_HISR_FEIF6_Msk;
pub const DMA_HISR_TCIF5_Pos: u32 = 11;
pub const DMA_HISR_TCIF5_Msk: u32 = 0x1 << DMA_HISR_TCIF5_Pos;
pub const DMA_HISR_TCIF5: u32 = DMA_HISR_TCIF5_Msk;
pub const DMA_HISR_HTIF5_Pos: u32 = 10;
pub const DMA_HISR_HTIF5_Msk: u32 = 0x1 << DMA_HISR_HTIF5_Pos;
pub const DMA_HISR_HTIF5: u32 = DMA_HISR_HTIF5_Msk;
pub const DMA_HISR_TEIF5_Pos: u32 = 9;
pub const DMA_HISR_TEIF5_Msk: u32 = 0x1 << DMA_HISR_TEIF5_Pos;
pub const DMA_HISR_TEIF5: u32 = DMA_HISR_TEIF5_Msk;
pub const DMA_HISR_DMEIF5_Pos: u32 = 8;
pub const DMA_HISR_DMEIF5_Msk: u32 = 0x1 << DMA_HISR_DMEIF5_Pos;
pub const DMA_HISR_DMEIF5: u32 = DMA_HISR_DMEIF5_Msk;
pub const DMA_HISR_FEIF5_Pos: u32 = 6;
pub const DMA_HISR_FEIF5_Msk: u32 = 0x1 << DMA_HISR_FEIF5_Pos;
pub const DMA_HISR_FEIF5: u32 = DMA_HISR_FEIF5_Msk;
pub const DMA_HISR_TCIF4_Pos: u32 = 5;
pub const DMA_HISR_TCIF4_Msk: u32 = 0x1 << DMA_HISR_TCIF4_Pos;
pub const DMA_HISR_TCIF4: u32 = DMA_HISR_TCIF4_Msk;
pub const DMA_HISR_HTIF4_Pos: u32 = 4;
pub const DMA_HISR_HTIF4_Msk: u32 = 0x1 << DMA_HISR_HTIF4_Pos;
pub const DMA_HISR_HTIF4: u32 = DMA_HISR_HTIF4_Msk;
pub const DMA_HISR_TEIF4_Pos: u32 = 3;
pub const DMA_HISR_TEIF4_Msk: u32 = 0x1 << DMA_HISR_TEIF4_Pos;
pub const DMA_HISR_TEIF4: u32 = DMA_HISR_TEIF4_Msk;
pub const DMA_HISR_DMEIF4_Pos: u32 = 2;
pub const DMA_HISR_DMEIF4_Msk: u32 = 0x1 << DMA_HISR_DMEIF4_Pos;
pub const DMA_HISR_DMEIF4: u32 = DMA_HISR_DMEIF4_Msk;
pub const DMA_HISR_FEIF4_Pos: u32 = 0;
pub const DMA_HISR_FEIF4_Msk: u32 = 0x1 << DMA_HISR_FEIF4_Pos;
pub const DMA_HISR_FEIF4: u32 = DMA_HISR_FEIF4_Msk;
pub const DMA_LIFCR_CTCIF3_Pos: u32 = 27;
pub const DMA_LIFCR_CTCIF3_Msk: u32 = 0x1 << DMA_LIFCR_CTCIF3_Pos;
pub const DMA_LIFCR_CTCIF3: u32 = DMA_LIFCR_CTCIF3_Msk;
pub const DMA_LIFCR_CHTIF3_Pos: u32 = 26;
pub const DMA_LIFCR_CHTIF3_Msk: u32 = 0x1 << DMA_LIFCR_CHTIF3_Pos;
pub const DMA_LIFCR_CHTIF3: u32 = DMA_LIFCR_CHTIF3_Msk;
pub const DMA_LIFCR_CTEIF3_Pos: u32 = 25;
pub const DMA_LIFCR_CTEIF3_Msk: u32 = 0x1 << DMA_LIFCR_CTEIF3_Pos;
pub const DMA_LIFCR_CTEIF3: u32 = DMA_LIFCR_CTEIF3_Msk;
pub const DMA_LIFCR_CDMEIF3_Pos: u32 = 24;
pub const DMA_LIFCR_CDMEIF3_Msk: u32 = 0x1 << DMA_LIFCR_CDMEIF3_Pos;
pub const DMA_LIFCR_CDMEIF3: u32 = DMA_LIFCR_CDMEIF3_Msk;
pub const DMA_LIFCR_CFEIF3_Pos: u32 = 22;
pub const DMA_LIFCR_CFEIF3_Msk: u32 = 0x1 << DMA_LIFCR_CFEIF3_Pos;
pub const DMA_LIFCR_CFEIF3: u32 = DMA_LIFCR_CFEIF3_Msk;
pub const DMA_LIFCR_CTCIF2_Pos: u32 = 21;
pub const DMA_LIFCR_CTCIF2_Msk: u32 = 0x1 << DMA_LIFCR_CTCIF2_Pos;
pub const DMA_LIFCR_CTCIF2: u32 = DMA_LIFCR_CTCIF2_Msk;
pub const DMA_LIFCR_CHTIF2_Pos: u32 = 20;
pub const DMA_LIFCR_CHTIF2_Msk: u32 = 0x1 << DMA_LIFCR_CHTIF2_Pos;
pub const DMA_LIFCR_CHTIF2: u32 = DMA_LIFCR_CHTIF2_Msk;
pub const DMA_LIFCR_CTEIF2_Pos: u32 = 19;
pub const DMA_LIFCR_CTEIF2_Msk: u32 = 0x1 << DMA_LIFCR_CTEIF2_Pos;
pub const DMA_LIFCR_CTEIF2: u32 = DMA_LIFCR_CTEIF2_Msk;
pub const DMA_LIFCR_CDMEIF2_Pos: u32 = 18;
pub const DMA_LIFCR_CDMEIF2_Msk: u32 = 0x1 << DMA_LIFCR_CDMEIF2_Pos;
pub const DMA_LIFCR_CDMEIF2: u32 = DMA_LIFCR_CDMEIF2_Msk;
pub const DMA_LIFCR_CFEIF2_Pos: u32 = 16;
pub const DMA_LIFCR_CFEIF2_Msk: u32 = 0x1 << DMA_LIFCR_CFEIF2_Pos;
pub const DMA_LIFCR_CFEIF2: u32 = DMA_LIFCR_CFEIF2_Msk;
pub const DMA_LIFCR_CTCIF1_Pos: u32 = 11;
pub const DMA_LIFCR_CTCIF1_Msk: u32 = 0x1 << DMA_LIFCR_CTCIF1_Pos;
pub const DMA_LIFCR_CTCIF1: u32 = DMA_LIFCR_CTCIF1_Msk;
pub const DMA_LIFCR_CHTIF1_Pos: u32 = 10;
pub const DMA_LIFCR_CHTIF1_Msk: u32 = 0x1 << DMA_LIFCR_CHTIF1_Pos;
pub const DMA_LIFCR_CHTIF1: u32 = DMA_LIFCR_CHTIF1_Msk;
pub const DMA_LIFCR_CTEIF1_Pos: u32 = 9;
pub const DMA_LIFCR_CTEIF1_Msk: u32 = 0x1 << DMA_LIFCR_CTEIF1_Pos;
pub const DMA_LIFCR_CTEIF1: u32 = DMA_LIFCR_CTEIF1_Msk;
pub const DMA_LIFCR_CDMEIF1_Pos: u32 = 8;
pub const DMA_LIFCR_CDMEIF1_Msk: u32 = 0x1 << DMA_LIFCR_CDMEIF1_Pos;
pub const DMA_LIFCR_CDMEIF1: u32 = DMA_LIFCR_CDMEIF1_Msk;
pub const DMA_LIFCR_CFEIF1_Pos: u32 = 6;
pub const DMA_LIFCR_CFEIF1_Msk: u32 = 0x1 << DMA_LIFCR_CFEIF1_Pos;
pub const DMA_LIFCR_CFEIF1: u32 = DMA_LIFCR_CFEIF1_Msk;
pub const DMA_LIFCR_CTCIF0_Pos: u32 = 5;
pub const DMA_LIFCR_CTCIF0_Msk: u32 = 0x1 << DMA_LIFCR_CTCIF0_Pos;
pub const DMA_LIFCR_CTCIF0: u32 = DMA_LIFCR_CTCIF0_Msk;
pub const DMA_LIFCR_CHTIF0_Pos: u32 = 4;
pub const DMA_LIFCR_CHTIF0_Msk: u32 = 0x1 << DMA_LIFCR_CHTIF0_Pos;
pub const DMA_LIFCR_CHTIF0: u32 = DMA_LIFCR_CHTIF0_Msk;
pub const DMA_LIFCR_CTEIF0_Pos: u32 = 3;
pub const DMA_LIFCR_CTEIF0_Msk: u32 = 0x1 << DMA_LIFCR_CTEIF0_Pos;
pub const DMA_LIFCR_CTEIF0: u32 = DMA_LIFCR_CTEIF0_Msk;
pub const DMA_LIFCR_CDMEIF0_Pos: u32 = 2;
pub const DMA_LIFCR_CDMEIF0_Msk: u32 = 0x1 << DMA_LIFCR_CDMEIF0_Pos;
pub const DMA_LIFCR_CDMEIF0: u32 = DMA_LIFCR_CDMEIF0_Msk;
pub const DMA_LIFCR_CFEIF0_Pos: u32 = 0;
pub const DMA_LIFCR_CFEIF0_Msk: u32 = 0x1 << DMA_LIFCR_CFEIF0_Pos;
pub const DMA_LIFCR_CFEIF0: u32 = DMA_LIFCR_CFEIF0_Msk;
pub const DMA_HIFCR_CTCIF7_Pos: u32 = 27;
pub const DMA_HIFCR_CTCIF7_Msk: u32 = 0x1 << DMA_HIFCR_CTCIF7_Pos;
pub const DMA_HIFCR_CTCIF7: u32 = DMA_HIFCR_CTCIF7_Msk;
pub const DMA_HIFCR_CHTIF7_Pos: u32 = 26;
pub const DMA_HIFCR_CHTIF7_Msk: u32 = 0x1 << DMA_HIFCR_CHTIF7_Pos;
pub const DMA_HIFCR_CHTIF7: u32 = DMA_HIFCR_CHTIF7_Msk;
pub const DMA_HIFCR_CTEIF7_Pos: u32 = 25;
pub const DMA_HIFCR_CTEIF7_Msk: u32 = 0x1 << DMA_HIFCR_CTEIF7_Pos;
pub const DMA_HIFCR_CTEIF7: u32 = DMA_HIFCR_CTEIF7_Msk;
pub const DMA_HIFCR_CDMEIF7_Pos: u32 = 24;
pub const DMA_HIFCR_CDMEIF7_Msk: u32 = 0x1 << DMA_HIFCR_CDMEIF7_Pos;
pub const DMA_HIFCR_CDMEIF7: u32 = DMA_HIFCR_CDMEIF7_Msk;
pub const DMA_HIFCR_CFEIF7_Pos: u32 = 22;
pub const DMA_HIFCR_CFEIF7_Msk: u32 = 0x1 << DMA_HIFCR_CFEIF7_Pos;
pub const DMA_HIFCR_CFEIF7: u32 = DMA_HIFCR_CFEIF7_Msk;
pub const DMA_HIFCR_CTCIF6_Pos: u32 = 21;
pub const DMA_HIFCR_CTCIF6_Msk: u32 = 0x1 << DMA_HIFCR_CTCIF6_Pos;
pub const DMA_HIFCR_CTCIF6: u32 = DMA_HIFCR_CTCIF6_Msk;
pub const DMA_HIFCR_CHTIF6_Pos: u32 = 20;
pub const DMA_HIFCR_CHTIF6_Msk: u32 = 0x1 << DMA_HIFCR_CHTIF6_Pos;
pub const DMA_HIFCR_CHTIF6: u32 = DMA_HIFCR_CHTIF6_Msk;
pub const DMA_HIFCR_CTEIF6_Pos: u32 = 19;
pub const DMA_HIFCR_CTEIF6_Msk: u32 = 0x1 << DMA_HIFCR_CTEIF6_Pos;
pub const DMA_HIFCR_CTEIF6: u32 = DMA_HIFCR_CTEIF6_Msk;
pub const DMA_HIFCR_CDMEIF6_Pos: u32 = 18;
pub const DMA_HIFCR_CDMEIF6_Msk: u32 = 0x1 << DMA_HIFCR_CDMEIF6_Pos;
pub const DMA_HIFCR_CDMEIF6: u32 = DMA_HIFCR_CDMEIF6_Msk;
pub const DMA_HIFCR_CFEIF6_Pos: u32 = 16;
pub const DMA_HIFCR_CFEIF6_Msk: u32 = 0x1 << DMA_HIFCR_CFEIF6_Pos;
pub const DMA_HIFCR_CFEIF6: u32 = DMA_HIFCR_CFEIF6_Msk;
pub const DMA_HIFCR_CTCIF5_Pos: u32 = 11;
pub const DMA_HIFCR_CTCIF5_Msk: u32 = 0x1 << DMA_HIFCR_CTCIF5_Pos;
pub const DMA_HIFCR_CTCIF5: u32 = DMA_HIFCR_CTCIF5_Msk;
pub const DMA_HIFCR_CHTIF5_Pos: u32 = 10;
pub const DMA_HIFCR_CHTIF5_Msk: u32 = 0x1 << DMA_HIFCR_CHTIF5_Pos;
pub const DMA_HIFCR_CHTIF5: u32 = DMA_HIFCR_CHTIF5_Msk;
pub const DMA_HIFCR_CTEIF5_Pos: u32 = 9;
pub const DMA_HIFCR_CTEIF5_Msk: u32 = 0x1 << DMA_HIFCR_CTEIF5_Pos;
pub const DMA_HIFCR_CTEIF5: u32 = DMA_HIFCR_CTEIF5_Msk;
pub const DMA_HIFCR_CDMEIF5_Pos: u32 = 8;
pub const DMA_HIFCR_CDMEIF5_Msk: u32 = 0x1 << DMA_HIFCR_CDMEIF5_Pos;
pub const DMA_HIFCR_CDMEIF5: u32 = DMA_HIFCR_CDMEIF5_Msk;
pub const DMA_HIFCR_CFEIF5_Pos: u32 = 6;
pub const DMA_HIFCR_CFEIF5_Msk: u32 = 0x1 << DMA_HIFCR_CFEIF5_Pos;
pub const DMA_HIFCR_CFEIF5: u32 = DMA_HIFCR_CFEIF5_Msk;
pub const DMA_HIFCR_CTCIF4_Pos: u32 = 5;
pub const DMA_HIFCR_CTCIF4_Msk: u32 = 0x1 << DMA_HIFCR_CTCIF4_Pos;
pub const DMA_HIFCR_CTCIF4: u32 = DMA_HIFCR_CTCIF4_Msk;
pub const DMA_HIFCR_CHTIF4_Pos: u32 = 4;
pub const DMA_HIFCR_CHTIF4_Msk: u32 = 0x1 << DMA_HIFCR_CHTIF4_Pos;
pub const DMA_HIFCR_CHTIF4: u32 = DMA_HIFCR_CHTIF4_Msk;
pub const DMA_HIFCR_CTEIF4_Pos: u32 = 3;
pub const DMA_HIFCR_CTEIF4_Msk: u32 = 0x1 << DMA_HIFCR_CTEIF4_Pos;
pub const DMA_HIFCR_CTEIF4: u32 = DMA_HIFCR_CTEIF4_Msk;
pub const DMA_HIFCR_CDMEIF4_Pos: u32 = 2;
pub const DMA_HIFCR_CDMEIF4_Msk: u32 = 0x1 << DMA_HIFCR_CDMEIF4_Pos;
pub const DMA_HIFCR_CDMEIF4: u32 = DMA_HIFCR_CDMEIF4_Msk;
pub const DMA_HIFCR_CFEIF4_Pos: u32 = 0;
pub const DMA_HIFCR_CFEIF4_Msk: u32 = 0x1 << DMA_HIFCR_CFEIF4_Pos;
pub const DMA_HIFCR_CFEIF4: u32 = DMA_HIFCR_CFEIF4_Msk;
pub const DMA_SxPAR_PA_Pos: u32 = 0;
pub const DMA_SxPAR_PA_Msk: u32 = 0xFFFFFFFF << DMA_SxPAR_PA_Pos;
pub const DMA_SxPAR_PA: u32 = DMA_SxPAR_PA_Msk;
pub const DMA_SxM0AR_M0A_Pos: u32 = 0;
pub const DMA_SxM0AR_M0A_Msk: u32 = 0xFFFFFFFF << DMA_SxM0AR_M0A_Pos;
pub const DMA_SxM0AR_M0A: u32 = DMA_SxM0AR_M0A_Msk;
pub const DMA_SxM1AR_M1A_Pos: u32 = 0;
pub const DMA_SxM1AR_M1A_Msk: u32 = 0xFFFFFFFF << DMA_SxM1AR_M1A_Pos;
pub const DMA_SxM1AR_M1A: u32 = DMA_SxM1AR_M1A_Msk;
pub const DMA2D_CR_START_Pos: u32 = 0;
pub const DMA2D_CR_START_Msk: u32 = 0x1 << DMA2D_CR_START_Pos;
pub const DMA2D_CR_START: u32 = DMA2D_CR_START_Msk;
pub const DMA2D_CR_SUSP_Pos: u32 = 1;
pub const DMA2D_CR_SUSP_Msk: u32 = 0x1 << DMA2D_CR_SUSP_Pos;
pub const DMA2D_CR_SUSP: u32 = DMA2D_CR_SUSP_Msk;
pub const DMA2D_CR_ABORT_Pos: u32 = 2;
pub const DMA2D_CR_ABORT_Msk: u32 = 0x1 << DMA2D_CR_ABORT_Pos;
pub const DMA2D_CR_ABORT: u32 = DMA2D_CR_ABORT_Msk;
pub const DMA2D_CR_TEIE_Pos: u32 = 8;
pub const DMA2D_CR_TEIE_Msk: u32 = 0x1 << DMA2D_CR_TEIE_Pos;
pub const DMA2D_CR_TEIE: u32 = DMA2D_CR_TEIE_Msk;
pub const DMA2D_CR_TCIE_Pos: u32 = 9;
pub const DMA2D_CR_TCIE_Msk: u32 = 0x1 << DMA2D_CR_TCIE_Pos;
pub const DMA2D_CR_TCIE: u32 = DMA2D_CR_TCIE_Msk;
pub const DMA2D_CR_TWIE_Pos: u32 = 10;
pub const DMA2D_CR_TWIE_Msk: u32 = 0x1 << DMA2D_CR_TWIE_Pos;
pub const DMA2D_CR_TWIE: u32 = DMA2D_CR_TWIE_Msk;
pub const DMA2D_CR_CAEIE_Pos: u32 = 11;
pub const DMA2D_CR_CAEIE_Msk: u32 = 0x1 << DMA2D_CR_CAEIE_Pos;
pub const DMA2D_CR_CAEIE: u32 = DMA2D_CR_CAEIE_Msk;
pub const DMA2D_CR_CTCIE_Pos: u32 = 12;
pub const DMA2D_CR_CTCIE_Msk: u32 = 0x1 << DMA2D_CR_CTCIE_Pos;
pub const DMA2D_CR_CTCIE: u32 = DMA2D_CR_CTCIE_Msk;
pub const DMA2D_CR_CEIE_Pos: u32 = 13;
pub const DMA2D_CR_CEIE_Msk: u32 = 0x1 << DMA2D_CR_CEIE_Pos;
pub const DMA2D_CR_CEIE: u32 = DMA2D_CR_CEIE_Msk;
pub const DMA2D_CR_MODE_Pos: u32 = 16;
pub const DMA2D_CR_MODE_Msk: u32 = 0x3 << DMA2D_CR_MODE_Pos;
pub const DMA2D_CR_MODE: u32 = DMA2D_CR_MODE_Msk;
pub const DMA2D_CR_MODE_0: u32 = 0x1 << DMA2D_CR_MODE_Pos;
pub const DMA2D_CR_MODE_1: u32 = 0x2 << DMA2D_CR_MODE_Pos;
pub const DMA2D_ISR_TEIF_Pos: u32 = 0;
pub const DMA2D_ISR_TEIF_Msk: u32 = 0x1 << DMA2D_ISR_TEIF_Pos;
pub const DMA2D_ISR_TEIF: u32 = DMA2D_ISR_TEIF_Msk;
pub const DMA2D_ISR_TCIF_Pos: u32 = 1;
pub const DMA2D_ISR_TCIF_Msk: u32 = 0x1 << DMA2D_ISR_TCIF_Pos;
pub const DMA2D_ISR_TCIF: u32 = DMA2D_ISR_TCIF_Msk;
pub const DMA2D_ISR_TWIF_Pos: u32 = 2;
pub const DMA2D_ISR_TWIF_Msk: u32 = 0x1 << DMA2D_ISR_TWIF_Pos;
pub const DMA2D_ISR_TWIF: u32 = DMA2D_ISR_TWIF_Msk;
pub const DMA2D_ISR_CAEIF_Pos: u32 = 3;
pub const DMA2D_ISR_CAEIF_Msk: u32 = 0x1 << DMA2D_ISR_CAEIF_Pos;
pub const DMA2D_ISR_CAEIF: u32 = DMA2D_ISR_CAEIF_Msk;
pub const DMA2D_ISR_CTCIF_Pos: u32 = 4;
pub const DMA2D_ISR_CTCIF_Msk: u32 = 0x1 << DMA2D_ISR_CTCIF_Pos;
pub const DMA2D_ISR_CTCIF: u32 = DMA2D_ISR_CTCIF_Msk;
pub const DMA2D_ISR_CEIF_Pos: u32 = 5;
pub const DMA2D_ISR_CEIF_Msk: u32 = 0x1 << DMA2D_ISR_CEIF_Pos;
pub const DMA2D_ISR_CEIF: u32 = DMA2D_ISR_CEIF_Msk;
pub const DMA2D_IFCR_CTEIF_Pos: u32 = 0;
pub const DMA2D_IFCR_CTEIF_Msk: u32 = 0x1 << DMA2D_IFCR_CTEIF_Pos;
pub const DMA2D_IFCR_CTEIF: u32 = DMA2D_IFCR_CTEIF_Msk;
pub const DMA2D_IFCR_CTCIF_Pos: u32 = 1;
pub const DMA2D_IFCR_CTCIF_Msk: u32 = 0x1 << DMA2D_IFCR_CTCIF_Pos;
pub const DMA2D_IFCR_CTCIF: u32 = DMA2D_IFCR_CTCIF_Msk;
pub const DMA2D_IFCR_CTWIF_Pos: u32 = 2;
pub const DMA2D_IFCR_CTWIF_Msk: u32 = 0x1 << DMA2D_IFCR_CTWIF_Pos;
pub const DMA2D_IFCR_CTWIF: u32 = DMA2D_IFCR_CTWIF_Msk;
pub const DMA2D_IFCR_CAECIF_Pos: u32 = 3;
pub const DMA2D_IFCR_CAECIF_Msk: u32 = 0x1 << DMA2D_IFCR_CAECIF_Pos;
pub const DMA2D_IFCR_CAECIF: u32 = DMA2D_IFCR_CAECIF_Msk;
pub const DMA2D_IFCR_CCTCIF_Pos: u32 = 4;
pub const DMA2D_IFCR_CCTCIF_Msk: u32 = 0x1 << DMA2D_IFCR_CCTCIF_Pos;
pub const DMA2D_IFCR_CCTCIF: u32 = DMA2D_IFCR_CCTCIF_Msk;
pub const DMA2D_IFCR_CCEIF_Pos: u32 = 5;
pub const DMA2D_IFCR_CCEIF_Msk: u32 = 0x1 << DMA2D_IFCR_CCEIF_Pos;
pub const DMA2D_IFCR_CCEIF: u32 = DMA2D_IFCR_CCEIF_Msk;
pub const DMA2D_IFSR_CTEIF: u32 = DMA2D_IFCR_CTEIF;
pub const DMA2D_IFSR_CTCIF: u32 = DMA2D_IFCR_CTCIF;
pub const DMA2D_IFSR_CTWIF: u32 = DMA2D_IFCR_CTWIF;
pub const DMA2D_IFSR_CCAEIF: u32 = DMA2D_IFCR_CAECIF;
pub const DMA2D_IFSR_CCTCIF: u32 = DMA2D_IFCR_CCTCIF;
pub const DMA2D_IFSR_CCEIF: u32 = DMA2D_IFCR_CCEIF;
pub const DMA2D_FGMAR_MA_Pos: u32 = 0;
pub const DMA2D_FGMAR_MA_Msk: u32 = 0xFFFFFFFF << DMA2D_FGMAR_MA_Pos;
pub const DMA2D_FGMAR_MA: u32 = DMA2D_FGMAR_MA_Msk;
pub const DMA2D_FGOR_LO_Pos: u32 = 0;
pub const DMA2D_FGOR_LO_Msk: u32 = 0x3FFF << DMA2D_FGOR_LO_Pos;
pub const DMA2D_FGOR_LO: u32 = DMA2D_FGOR_LO_Msk;
pub const DMA2D_BGMAR_MA_Pos: u32 = 0;
pub const DMA2D_BGMAR_MA_Msk: u32 = 0xFFFFFFFF << DMA2D_BGMAR_MA_Pos;
pub const DMA2D_BGMAR_MA: u32 = DMA2D_BGMAR_MA_Msk;
pub const DMA2D_BGOR_LO_Pos: u32 = 0;
pub const DMA2D_BGOR_LO_Msk: u32 = 0x3FFF << DMA2D_BGOR_LO_Pos;
pub const DMA2D_BGOR_LO: u32 = DMA2D_BGOR_LO_Msk;
pub const DMA2D_FGPFCCR_CM_Pos: u32 = 0;
pub const DMA2D_FGPFCCR_CM_Msk: u32 = 0xF << DMA2D_FGPFCCR_CM_Pos;
pub const DMA2D_FGPFCCR_CM: u32 = DMA2D_FGPFCCR_CM_Msk;
pub const DMA2D_FGPFCCR_CM_0: u32 = 0x1 << DMA2D_FGPFCCR_CM_Pos;
pub const DMA2D_FGPFCCR_CM_1: u32 = 0x2 << DMA2D_FGPFCCR_CM_Pos;
pub const DMA2D_FGPFCCR_CM_2: u32 = 0x4 << DMA2D_FGPFCCR_CM_Pos;
pub const DMA2D_FGPFCCR_CM_3: u32 = 0x8 << DMA2D_FGPFCCR_CM_Pos;
pub const DMA2D_FGPFCCR_CCM_Pos: u32 = 4;
pub const DMA2D_FGPFCCR_CCM_Msk: u32 = 0x1 << DMA2D_FGPFCCR_CCM_Pos;
pub const DMA2D_FGPFCCR_CCM: u32 = DMA2D_FGPFCCR_CCM_Msk;
pub const DMA2D_FGPFCCR_START_Pos: u32 = 5;
pub const DMA2D_FGPFCCR_START_Msk: u32 = 0x1 << DMA2D_FGPFCCR_START_Pos;
pub const DMA2D_FGPFCCR_START: u32 = DMA2D_FGPFCCR_START_Msk;
pub const DMA2D_FGPFCCR_CS_Pos: u32 = 8;
pub const DMA2D_FGPFCCR_CS_Msk: u32 = 0xFF << DMA2D_FGPFCCR_CS_Pos;
pub const DMA2D_FGPFCCR_CS: u32 = DMA2D_FGPFCCR_CS_Msk;
pub const DMA2D_FGPFCCR_AM_Pos: u32 = 16;
pub const DMA2D_FGPFCCR_AM_Msk: u32 = 0x3 << DMA2D_FGPFCCR_AM_Pos;
pub const DMA2D_FGPFCCR_AM: u32 = DMA2D_FGPFCCR_AM_Msk;
pub const DMA2D_FGPFCCR_AM_0: u32 = 0x1 << DMA2D_FGPFCCR_AM_Pos;
pub const DMA2D_FGPFCCR_AM_1: u32 = 0x2 << DMA2D_FGPFCCR_AM_Pos;
pub const DMA2D_FGPFCCR_ALPHA_Pos: u32 = 24;
pub const DMA2D_FGPFCCR_ALPHA_Msk: u32 = 0xFF << DMA2D_FGPFCCR_ALPHA_Pos;
pub const DMA2D_FGPFCCR_ALPHA: u32 = DMA2D_FGPFCCR_ALPHA_Msk;
pub const DMA2D_FGCOLR_BLUE_Pos: u32 = 0;
pub const DMA2D_FGCOLR_BLUE_Msk: u32 = 0xFF << DMA2D_FGCOLR_BLUE_Pos;
pub const DMA2D_FGCOLR_BLUE: u32 = DMA2D_FGCOLR_BLUE_Msk;
pub const DMA2D_FGCOLR_GREEN_Pos: u32 = 8;
pub const DMA2D_FGCOLR_GREEN_Msk: u32 = 0xFF << DMA2D_FGCOLR_GREEN_Pos;
pub const DMA2D_FGCOLR_GREEN: u32 = DMA2D_FGCOLR_GREEN_Msk;
pub const DMA2D_FGCOLR_RED_Pos: u32 = 16;
pub const DMA2D_FGCOLR_RED_Msk: u32 = 0xFF << DMA2D_FGCOLR_RED_Pos;
pub const DMA2D_FGCOLR_RED: u32 = DMA2D_FGCOLR_RED_Msk;
pub const DMA2D_BGPFCCR_CM_Pos: u32 = 0;
pub const DMA2D_BGPFCCR_CM_Msk: u32 = 0xF << DMA2D_BGPFCCR_CM_Pos;
pub const DMA2D_BGPFCCR_CM: u32 = DMA2D_BGPFCCR_CM_Msk;
pub const DMA2D_BGPFCCR_CM_0: u32 = 0x1 << DMA2D_BGPFCCR_CM_Pos;
pub const DMA2D_BGPFCCR_CM_1: u32 = 0x2 << DMA2D_BGPFCCR_CM_Pos;
pub const DMA2D_BGPFCCR_CM_2: u32 = 0x4 << DMA2D_BGPFCCR_CM_Pos;
pub const DMA2D_BGPFCCR_CM_3: u32 = 0x00000008;
pub const DMA2D_BGPFCCR_CCM_Pos: u32 = 4;
pub const DMA2D_BGPFCCR_CCM_Msk: u32 = 0x1 << DMA2D_BGPFCCR_CCM_Pos;
pub const DMA2D_BGPFCCR_CCM: u32 = DMA2D_BGPFCCR_CCM_Msk;
pub const DMA2D_BGPFCCR_START_Pos: u32 = 5;
pub const DMA2D_BGPFCCR_START_Msk: u32 = 0x1 << DMA2D_BGPFCCR_START_Pos;
pub const DMA2D_BGPFCCR_START: u32 = DMA2D_BGPFCCR_START_Msk;
pub const DMA2D_BGPFCCR_CS_Pos: u32 = 8;
pub const DMA2D_BGPFCCR_CS_Msk: u32 = 0xFF << DMA2D_BGPFCCR_CS_Pos;
pub const DMA2D_BGPFCCR_CS: u32 = DMA2D_BGPFCCR_CS_Msk;
pub const DMA2D_BGPFCCR_AM_Pos: u32 = 16;
pub const DMA2D_BGPFCCR_AM_Msk: u32 = 0x3 << DMA2D_BGPFCCR_AM_Pos;
pub const DMA2D_BGPFCCR_AM: u32 = DMA2D_BGPFCCR_AM_Msk;
pub const DMA2D_BGPFCCR_AM_0: u32 = 0x1 << DMA2D_BGPFCCR_AM_Pos;
pub const DMA2D_BGPFCCR_AM_1: u32 = 0x2 << DMA2D_BGPFCCR_AM_Pos;
pub const DMA2D_BGPFCCR_ALPHA_Pos: u32 = 24;
pub const DMA2D_BGPFCCR_ALPHA_Msk: u32 = 0xFF << DMA2D_BGPFCCR_ALPHA_Pos;
pub const DMA2D_BGPFCCR_ALPHA: u32 = DMA2D_BGPFCCR_ALPHA_Msk;
pub const DMA2D_BGCOLR_BLUE_Pos: u32 = 0;
pub const DMA2D_BGCOLR_BLUE_Msk: u32 = 0xFF << DMA2D_BGCOLR_BLUE_Pos;
pub const DMA2D_BGCOLR_BLUE: u32 = DMA2D_BGCOLR_BLUE_Msk;
pub const DMA2D_BGCOLR_GREEN_Pos: u32 = 8;
pub const DMA2D_BGCOLR_GREEN_Msk: u32 = 0xFF << DMA2D_BGCOLR_GREEN_Pos;
pub const DMA2D_BGCOLR_GREEN: u32 = DMA2D_BGCOLR_GREEN_Msk;
pub const DMA2D_BGCOLR_RED_Pos: u32 = 16;
pub const DMA2D_BGCOLR_RED_Msk: u32 = 0xFF << DMA2D_BGCOLR_RED_Pos;
pub const DMA2D_BGCOLR_RED: u32 = DMA2D_BGCOLR_RED_Msk;
pub const DMA2D_FGCMAR_MA_Pos: u32 = 0;
pub const DMA2D_FGCMAR_MA_Msk: u32 = 0xFFFFFFFF << DMA2D_FGCMAR_MA_Pos;
pub const DMA2D_FGCMAR_MA: u32 = DMA2D_FGCMAR_MA_Msk;
pub const DMA2D_BGCMAR_MA_Pos: u32 = 0;
pub const DMA2D_BGCMAR_MA_Msk: u32 = 0xFFFFFFFF << DMA2D_BGCMAR_MA_Pos;
pub const DMA2D_BGCMAR_MA: u32 = DMA2D_BGCMAR_MA_Msk;
pub const DMA2D_OPFCCR_CM_Pos: u32 = 0;
pub const DMA2D_OPFCCR_CM_Msk: u32 = 0x7 << DMA2D_OPFCCR_CM_Pos;
pub const DMA2D_OPFCCR_CM: u32 = DMA2D_OPFCCR_CM_Msk;
pub const DMA2D_OPFCCR_CM_0: u32 = 0x1 << DMA2D_OPFCCR_CM_Pos;
pub const DMA2D_OPFCCR_CM_1: u32 = 0x2 << DMA2D_OPFCCR_CM_Pos;
pub const DMA2D_OPFCCR_CM_2: u32 = 0x4 << DMA2D_OPFCCR_CM_Pos;
pub const DMA2D_OCOLR_BLUE_1: u32 = 0x000000FF;
pub const DMA2D_OCOLR_GREEN_1: u32 = 0x0000FF00;
pub const DMA2D_OCOLR_RED_1: u32 = 0x00FF0000;
pub const DMA2D_OCOLR_ALPHA_1: u32 = 0xFF000000;
pub const DMA2D_OCOLR_BLUE_2: u32 = 0x0000001F;
pub const DMA2D_OCOLR_GREEN_2: u32 = 0x000007E0;
pub const DMA2D_OCOLR_RED_2: u32 = 0x0000F800;
pub const DMA2D_OCOLR_BLUE_3: u32 = 0x0000001F;
pub const DMA2D_OCOLR_GREEN_3: u32 = 0x000003E0;
pub const DMA2D_OCOLR_RED_3: u32 = 0x00007C00;
pub const DMA2D_OCOLR_ALPHA_3: u32 = 0x00008000;
pub const DMA2D_OCOLR_BLUE_4: u32 = 0x0000000F;
pub const DMA2D_OCOLR_GREEN_4: u32 = 0x000000F0;
pub const DMA2D_OCOLR_RED_4: u32 = 0x00000F00;
pub const DMA2D_OCOLR_ALPHA_4: u32 = 0x0000F000;
pub const DMA2D_OMAR_MA_Pos: u32 = 0;
pub const DMA2D_OMAR_MA_Msk: u32 = 0xFFFFFFFF << DMA2D_OMAR_MA_Pos;
pub const DMA2D_OMAR_MA: u32 = DMA2D_OMAR_MA_Msk;
pub const DMA2D_OOR_LO_Pos: u32 = 0;
pub const DMA2D_OOR_LO_Msk: u32 = 0x3FFF << DMA2D_OOR_LO_Pos;
pub const DMA2D_OOR_LO: u32 = DMA2D_OOR_LO_Msk;
pub const DMA2D_NLR_NL_Pos: u32 = 0;
pub const DMA2D_NLR_NL_Msk: u32 = 0xFFFF << DMA2D_NLR_NL_Pos;
pub const DMA2D_NLR_NL: u32 = DMA2D_NLR_NL_Msk;
pub const DMA2D_NLR_PL_Pos: u32 = 16;
pub const DMA2D_NLR_PL_Msk: u32 = 0x3FFF << DMA2D_NLR_PL_Pos;
pub const DMA2D_NLR_PL: u32 = DMA2D_NLR_PL_Msk;
pub const DMA2D_LWR_LW_Pos: u32 = 0;
pub const DMA2D_LWR_LW_Msk: u32 = 0xFFFF << DMA2D_LWR_LW_Pos;
pub const DMA2D_LWR_LW: u32 = DMA2D_LWR_LW_Msk;
pub const DMA2D_AMTCR_EN_Pos: u32 = 0;
pub const DMA2D_AMTCR_EN_Msk: u32 = 0x1 << DMA2D_AMTCR_EN_Pos;
pub const DMA2D_AMTCR_EN: u32 = DMA2D_AMTCR_EN_Msk;
pub const DMA2D_AMTCR_DT_Pos: u32 = 8;
pub const DMA2D_AMTCR_DT_Msk: u32 = 0xFF << DMA2D_AMTCR_DT_Pos;
pub const DMA2D_AMTCR_DT: u32 = DMA2D_AMTCR_DT_Msk;
pub const EXTI_IMR_MR0_Pos: u32 = 0;
pub const EXTI_IMR_MR0_Msk: u32 = 0x1 << EXTI_IMR_MR0_Pos;
pub const EXTI_IMR_MR0: u32 = EXTI_IMR_MR0_Msk;
pub const EXTI_IMR_MR1_Pos: u32 = 1;
pub const EXTI_IMR_MR1_Msk: u32 = 0x1 << EXTI_IMR_MR1_Pos;
pub const EXTI_IMR_MR1: u32 = EXTI_IMR_MR1_Msk;
pub const EXTI_IMR_MR2_Pos: u32 = 2;
pub const EXTI_IMR_MR2_Msk: u32 = 0x1 << EXTI_IMR_MR2_Pos;
pub const EXTI_IMR_MR2: u32 = EXTI_IMR_MR2_Msk;
pub const EXTI_IMR_MR3_Pos: u32 = 3;
pub const EXTI_IMR_MR3_Msk: u32 = 0x1 << EXTI_IMR_MR3_Pos;
pub const EXTI_IMR_MR3: u32 = EXTI_IMR_MR3_Msk;
pub const EXTI_IMR_MR4_Pos: u32 = 4;
pub const EXTI_IMR_MR4_Msk: u32 = 0x1 << EXTI_IMR_MR4_Pos;
pub const EXTI_IMR_MR4: u32 = EXTI_IMR_MR4_Msk;
pub const EXTI_IMR_MR5_Pos: u32 = 5;
pub const EXTI_IMR_MR5_Msk: u32 = 0x1 << EXTI_IMR_MR5_Pos;
pub const EXTI_IMR_MR5: u32 = EXTI_IMR_MR5_Msk;
pub const EXTI_IMR_MR6_Pos: u32 = 6;
pub const EXTI_IMR_MR6_Msk: u32 = 0x1 << EXTI_IMR_MR6_Pos;
pub const EXTI_IMR_MR6: u32 = EXTI_IMR_MR6_Msk;
pub const EXTI_IMR_MR7_Pos: u32 = 7;
pub const EXTI_IMR_MR7_Msk: u32 = 0x1 << EXTI_IMR_MR7_Pos;
pub const EXTI_IMR_MR7: u32 = EXTI_IMR_MR7_Msk;
pub const EXTI_IMR_MR8_Pos: u32 = 8;
pub const EXTI_IMR_MR8_Msk: u32 = 0x1 << EXTI_IMR_MR8_Pos;
pub const EXTI_IMR_MR8: u32 = EXTI_IMR_MR8_Msk;
pub const EXTI_IMR_MR9_Pos: u32 = 9;
pub const EXTI_IMR_MR9_Msk: u32 = 0x1 << EXTI_IMR_MR9_Pos;
pub const EXTI_IMR_MR9: u32 = EXTI_IMR_MR9_Msk;
pub const EXTI_IMR_MR10_Pos: u32 = 10;
pub const EXTI_IMR_MR10_Msk: u32 = 0x1 << EXTI_IMR_MR10_Pos;
pub const EXTI_IMR_MR10: u32 = EXTI_IMR_MR10_Msk;
pub const EXTI_IMR_MR11_Pos: u32 = 11;
pub const EXTI_IMR_MR11_Msk: u32 = 0x1 << EXTI_IMR_MR11_Pos;
pub const EXTI_IMR_MR11: u32 = EXTI_IMR_MR11_Msk;
pub const EXTI_IMR_MR12_Pos: u32 = 12;
pub const EXTI_IMR_MR12_Msk: u32 = 0x1 << EXTI_IMR_MR12_Pos;
pub const EXTI_IMR_MR12: u32 = EXTI_IMR_MR12_Msk;
pub const EXTI_IMR_MR13_Pos: u32 = 13;
pub const EXTI_IMR_MR13_Msk: u32 = 0x1 << EXTI_IMR_MR13_Pos;
pub const EXTI_IMR_MR13: u32 = EXTI_IMR_MR13_Msk;
pub const EXTI_IMR_MR14_Pos: u32 = 14;
pub const EXTI_IMR_MR14_Msk: u32 = 0x1 << EXTI_IMR_MR14_Pos;
pub const EXTI_IMR_MR14: u32 = EXTI_IMR_MR14_Msk;
pub const EXTI_IMR_MR15_Pos: u32 = 15;
pub const EXTI_IMR_MR15_Msk: u32 = 0x1 << EXTI_IMR_MR15_Pos;
pub const EXTI_IMR_MR15: u32 = EXTI_IMR_MR15_Msk;
pub const EXTI_IMR_MR16_Pos: u32 = 16;
pub const EXTI_IMR_MR16_Msk: u32 = 0x1 << EXTI_IMR_MR16_Pos;
pub const EXTI_IMR_MR16: u32 = EXTI_IMR_MR16_Msk;
pub const EXTI_IMR_MR17_Pos: u32 = 17;
pub const EXTI_IMR_MR17_Msk: u32 = 0x1 << EXTI_IMR_MR17_Pos;
pub const EXTI_IMR_MR17: u32 = EXTI_IMR_MR17_Msk;
pub const EXTI_IMR_MR18_Pos: u32 = 18;
pub const EXTI_IMR_MR18_Msk: u32 = 0x1 << EXTI_IMR_MR18_Pos;
pub const EXTI_IMR_MR18: u32 = EXTI_IMR_MR18_Msk;
pub const EXTI_IMR_MR19_Pos: u32 = 19;
pub const EXTI_IMR_MR19_Msk: u32 = 0x1 << EXTI_IMR_MR19_Pos;
pub const EXTI_IMR_MR19: u32 = EXTI_IMR_MR19_Msk;
pub const EXTI_IMR_MR20_Pos: u32 = 20;
pub const EXTI_IMR_MR20_Msk: u32 = 0x1 << EXTI_IMR_MR20_Pos;
pub const EXTI_IMR_MR20: u32 = EXTI_IMR_MR20_Msk;
pub const EXTI_IMR_MR21_Pos: u32 = 21;
pub const EXTI_IMR_MR21_Msk: u32 = 0x1 << EXTI_IMR_MR21_Pos;
pub const EXTI_IMR_MR21: u32 = EXTI_IMR_MR21_Msk;
pub const EXTI_IMR_MR22_Pos: u32 = 22;
pub const EXTI_IMR_MR22_Msk: u32 = 0x1 << EXTI_IMR_MR22_Pos;
pub const EXTI_IMR_MR22: u32 = EXTI_IMR_MR22_Msk;
pub const EXTI_IMR_MR23_Pos: u32 = 23;
pub const EXTI_IMR_MR23_Msk: u32 = 0x1 << EXTI_IMR_MR23_Pos;
pub const EXTI_IMR_MR23: u32 = EXTI_IMR_MR23_Msk;
pub const EXTI_IMR_IM0: u32 = EXTI_IMR_MR0;
pub const EXTI_IMR_IM1: u32 = EXTI_IMR_MR1;
pub const EXTI_IMR_IM2: u32 = EXTI_IMR_MR2;
pub const EXTI_IMR_IM3: u32 = EXTI_IMR_MR3;
pub const EXTI_IMR_IM4: u32 = EXTI_IMR_MR4;
pub const EXTI_IMR_IM5: u32 = EXTI_IMR_MR5;
pub const EXTI_IMR_IM6: u32 = EXTI_IMR_MR6;
pub const EXTI_IMR_IM7: u32 = EXTI_IMR_MR7;
pub const EXTI_IMR_IM8: u32 = EXTI_IMR_MR8;
pub const EXTI_IMR_IM9: u32 = EXTI_IMR_MR9;
pub const EXTI_IMR_IM10: u32 = EXTI_IMR_MR10;
pub const EXTI_IMR_IM11: u32 = EXTI_IMR_MR11;
pub const EXTI_IMR_IM12: u32 = EXTI_IMR_MR12;
pub const EXTI_IMR_IM13: u32 = EXTI_IMR_MR13;
pub const EXTI_IMR_IM14: u32 = EXTI_IMR_MR14;
pub const EXTI_IMR_IM15: u32 = EXTI_IMR_MR15;
pub const EXTI_IMR_IM16: u32 = EXTI_IMR_MR16;
pub const EXTI_IMR_IM17: u32 = EXTI_IMR_MR17;
pub const EXTI_IMR_IM18: u32 = EXTI_IMR_MR18;
pub const EXTI_IMR_IM19: u32 = EXTI_IMR_MR19;
pub const EXTI_IMR_IM20: u32 = EXTI_IMR_MR20;
pub const EXTI_IMR_IM21: u32 = EXTI_IMR_MR21;
pub const EXTI_IMR_IM22: u32 = EXTI_IMR_MR22;
pub const EXTI_IMR_IM23: u32 = EXTI_IMR_MR23;
pub const EXTI_IMR_IM_Pos: u32 = 0;
pub const EXTI_IMR_IM_Msk: u32 = 0xFFFFFF << EXTI_IMR_IM_Pos;
pub const EXTI_IMR_IM: u32 = EXTI_IMR_IM_Msk;
pub const EXTI_EMR_MR0_Pos: u32 = 0;
pub const EXTI_EMR_MR0_Msk: u32 = 0x1 << EXTI_EMR_MR0_Pos;
pub const EXTI_EMR_MR0: u32 = EXTI_EMR_MR0_Msk;
pub const EXTI_EMR_MR1_Pos: u32 = 1;
pub const EXTI_EMR_MR1_Msk: u32 = 0x1 << EXTI_EMR_MR1_Pos;
pub const EXTI_EMR_MR1: u32 = EXTI_EMR_MR1_Msk;
pub const EXTI_EMR_MR2_Pos: u32 = 2;
pub const EXTI_EMR_MR2_Msk: u32 = 0x1 << EXTI_EMR_MR2_Pos;
pub const EXTI_EMR_MR2: u32 = EXTI_EMR_MR2_Msk;
pub const EXTI_EMR_MR3_Pos: u32 = 3;
pub const EXTI_EMR_MR3_Msk: u32 = 0x1 << EXTI_EMR_MR3_Pos;
pub const EXTI_EMR_MR3: u32 = EXTI_EMR_MR3_Msk;
pub const EXTI_EMR_MR4_Pos: u32 = 4;
pub const EXTI_EMR_MR4_Msk: u32 = 0x1 << EXTI_EMR_MR4_Pos;
pub const EXTI_EMR_MR4: u32 = EXTI_EMR_MR4_Msk;
pub const EXTI_EMR_MR5_Pos: u32 = 5;
pub const EXTI_EMR_MR5_Msk: u32 = 0x1 << EXTI_EMR_MR5_Pos;
pub const EXTI_EMR_MR5: u32 = EXTI_EMR_MR5_Msk;
pub const EXTI_EMR_MR6_Pos: u32 = 6;
pub const EXTI_EMR_MR6_Msk: u32 = 0x1 << EXTI_EMR_MR6_Pos;
pub const EXTI_EMR_MR6: u32 = EXTI_EMR_MR6_Msk;
pub const EXTI_EMR_MR7_Pos: u32 = 7;
pub const EXTI_EMR_MR7_Msk: u32 = 0x1 << EXTI_EMR_MR7_Pos;
pub const EXTI_EMR_MR7: u32 = EXTI_EMR_MR7_Msk;
pub const EXTI_EMR_MR8_Pos: u32 = 8;
pub const EXTI_EMR_MR8_Msk: u32 = 0x1 << EXTI_EMR_MR8_Pos;
pub const EXTI_EMR_MR8: u32 = EXTI_EMR_MR8_Msk;
pub const EXTI_EMR_MR9_Pos: u32 = 9;
pub const EXTI_EMR_MR9_Msk: u32 = 0x1 << EXTI_EMR_MR9_Pos;
pub const EXTI_EMR_MR9: u32 = EXTI_EMR_MR9_Msk;
pub const EXTI_EMR_MR10_Pos: u32 = 10;
pub const EXTI_EMR_MR10_Msk: u32 = 0x1 << EXTI_EMR_MR10_Pos;
pub const EXTI_EMR_MR10: u32 = EXTI_EMR_MR10_Msk;
pub const EXTI_EMR_MR11_Pos: u32 = 11;
pub const EXTI_EMR_MR11_Msk: u32 = 0x1 << EXTI_EMR_MR11_Pos;
pub const EXTI_EMR_MR11: u32 = EXTI_EMR_MR11_Msk;
pub const EXTI_EMR_MR12_Pos: u32 = 12;
pub const EXTI_EMR_MR12_Msk: u32 = 0x1 << EXTI_EMR_MR12_Pos;
pub const EXTI_EMR_MR12: u32 = EXTI_EMR_MR12_Msk;
pub const EXTI_EMR_MR13_Pos: u32 = 13;
pub const EXTI_EMR_MR13_Msk: u32 = 0x1 << EXTI_EMR_MR13_Pos;
pub const EXTI_EMR_MR13: u32 = EXTI_EMR_MR13_Msk;
pub const EXTI_EMR_MR14_Pos: u32 = 14;
pub const EXTI_EMR_MR14_Msk: u32 = 0x1 << EXTI_EMR_MR14_Pos;
pub const EXTI_EMR_MR14: u32 = EXTI_EMR_MR14_Msk;
pub const EXTI_EMR_MR15_Pos: u32 = 15;
pub const EXTI_EMR_MR15_Msk: u32 = 0x1 << EXTI_EMR_MR15_Pos;
pub const EXTI_EMR_MR15: u32 = EXTI_EMR_MR15_Msk;
pub const EXTI_EMR_MR16_Pos: u32 = 16;
pub const EXTI_EMR_MR16_Msk: u32 = 0x1 << EXTI_EMR_MR16_Pos;
pub const EXTI_EMR_MR16: u32 = EXTI_EMR_MR16_Msk;
pub const EXTI_EMR_MR17_Pos: u32 = 17;
pub const EXTI_EMR_MR17_Msk: u32 = 0x1 << EXTI_EMR_MR17_Pos;
pub const EXTI_EMR_MR17: u32 = EXTI_EMR_MR17_Msk;
pub const EXTI_EMR_MR18_Pos: u32 = 18;
pub const EXTI_EMR_MR18_Msk: u32 = 0x1 << EXTI_EMR_MR18_Pos;
pub const EXTI_EMR_MR18: u32 = EXTI_EMR_MR18_Msk;
pub const EXTI_EMR_MR19_Pos: u32 = 19;
pub const EXTI_EMR_MR19_Msk: u32 = 0x1 << EXTI_EMR_MR19_Pos;
pub const EXTI_EMR_MR19: u32 = EXTI_EMR_MR19_Msk;
pub const EXTI_EMR_MR20_Pos: u32 = 20;
pub const EXTI_EMR_MR20_Msk: u32 = 0x1 << EXTI_EMR_MR20_Pos;
pub const EXTI_EMR_MR20: u32 = EXTI_EMR_MR20_Msk;
pub const EXTI_EMR_MR21_Pos: u32 = 21;
pub const EXTI_EMR_MR21_Msk: u32 = 0x1 << EXTI_EMR_MR21_Pos;
pub const EXTI_EMR_MR21: u32 = EXTI_EMR_MR21_Msk;
pub const EXTI_EMR_MR22_Pos: u32 = 22;
pub const EXTI_EMR_MR22_Msk: u32 = 0x1 << EXTI_EMR_MR22_Pos;
pub const EXTI_EMR_MR22: u32 = EXTI_EMR_MR22_Msk;
pub const EXTI_EMR_MR23_Pos: u32 = 23;
pub const EXTI_EMR_MR23_Msk: u32 = 0x1 << EXTI_EMR_MR23_Pos;
pub const EXTI_EMR_MR23: u32 = EXTI_EMR_MR23_Msk;
pub const EXTI_EMR_EM0: u32 = EXTI_EMR_MR0;
pub const EXTI_EMR_EM1: u32 = EXTI_EMR_MR1;
pub const EXTI_EMR_EM2: u32 = EXTI_EMR_MR2;
pub const EXTI_EMR_EM3: u32 = EXTI_EMR_MR3;
pub const EXTI_EMR_EM4: u32 = EXTI_EMR_MR4;
pub const EXTI_EMR_EM5: u32 = EXTI_EMR_MR5;
pub const EXTI_EMR_EM6: u32 = EXTI_EMR_MR6;
pub const EXTI_EMR_EM7: u32 = EXTI_EMR_MR7;
pub const EXTI_EMR_EM8: u32 = EXTI_EMR_MR8;
pub const EXTI_EMR_EM9: u32 = EXTI_EMR_MR9;
pub const EXTI_EMR_EM10: u32 = EXTI_EMR_MR10;
pub const EXTI_EMR_EM11: u32 = EXTI_EMR_MR11;
pub const EXTI_EMR_EM12: u32 = EXTI_EMR_MR12;
pub const EXTI_EMR_EM13: u32 = EXTI_EMR_MR13;
pub const EXTI_EMR_EM14: u32 = EXTI_EMR_MR14;
pub const EXTI_EMR_EM15: u32 = EXTI_EMR_MR15;
pub const EXTI_EMR_EM16: u32 = EXTI_EMR_MR16;
pub const EXTI_EMR_EM17: u32 = EXTI_EMR_MR17;
pub const EXTI_EMR_EM18: u32 = EXTI_EMR_MR18;
pub const EXTI_EMR_EM19: u32 = EXTI_EMR_MR19;
pub const EXTI_EMR_EM20: u32 = EXTI_EMR_MR20;
pub const EXTI_EMR_EM21: u32 = EXTI_EMR_MR21;
pub const EXTI_EMR_EM22: u32 = EXTI_EMR_MR22;
pub const EXTI_EMR_EM23: u32 = EXTI_EMR_MR23;
pub const EXTI_RTSR_TR0_Pos: u32 = 0;
pub const EXTI_RTSR_TR0_Msk: u32 = 0x1 << EXTI_RTSR_TR0_Pos;
pub const EXTI_RTSR_TR0: u32 = EXTI_RTSR_TR0_Msk;
pub const EXTI_RTSR_TR1_Pos: u32 = 1;
pub const EXTI_RTSR_TR1_Msk: u32 = 0x1 << EXTI_RTSR_TR1_Pos;
pub const EXTI_RTSR_TR1: u32 = EXTI_RTSR_TR1_Msk;
pub const EXTI_RTSR_TR2_Pos: u32 = 2;
pub const EXTI_RTSR_TR2_Msk: u32 = 0x1 << EXTI_RTSR_TR2_Pos;
pub const EXTI_RTSR_TR2: u32 = EXTI_RTSR_TR2_Msk;
pub const EXTI_RTSR_TR3_Pos: u32 = 3;
pub const EXTI_RTSR_TR3_Msk: u32 = 0x1 << EXTI_RTSR_TR3_Pos;
pub const EXTI_RTSR_TR3: u32 = EXTI_RTSR_TR3_Msk;
pub const EXTI_RTSR_TR4_Pos: u32 = 4;
pub const EXTI_RTSR_TR4_Msk: u32 = 0x1 << EXTI_RTSR_TR4_Pos;
pub const EXTI_RTSR_TR4: u32 = EXTI_RTSR_TR4_Msk;
pub const EXTI_RTSR_TR5_Pos: u32 = 5;
pub const EXTI_RTSR_TR5_Msk: u32 = 0x1 << EXTI_RTSR_TR5_Pos;
pub const EXTI_RTSR_TR5: u32 = EXTI_RTSR_TR5_Msk;
pub const EXTI_RTSR_TR6_Pos: u32 = 6;
pub const EXTI_RTSR_TR6_Msk: u32 = 0x1 << EXTI_RTSR_TR6_Pos;
pub const EXTI_RTSR_TR6: u32 = EXTI_RTSR_TR6_Msk;
pub const EXTI_RTSR_TR7_Pos: u32 = 7;
pub const EXTI_RTSR_TR7_Msk: u32 = 0x1 << EXTI_RTSR_TR7_Pos;
pub const EXTI_RTSR_TR7: u32 = EXTI_RTSR_TR7_Msk;
pub const EXTI_RTSR_TR8_Pos: u32 = 8;
pub const EXTI_RTSR_TR8_Msk: u32 = 0x1 << EXTI_RTSR_TR8_Pos;
pub const EXTI_RTSR_TR8: u32 = EXTI_RTSR_TR8_Msk;
pub const EXTI_RTSR_TR9_Pos: u32 = 9;
pub const EXTI_RTSR_TR9_Msk: u32 = 0x1 << EXTI_RTSR_TR9_Pos;
pub const EXTI_RTSR_TR9: u32 = EXTI_RTSR_TR9_Msk;
pub const EXTI_RTSR_TR10_Pos: u32 = 10;
pub const EXTI_RTSR_TR10_Msk: u32 = 0x1 << EXTI_RTSR_TR10_Pos;
pub const EXTI_RTSR_TR10: u32 = EXTI_RTSR_TR10_Msk;
pub const EXTI_RTSR_TR11_Pos: u32 = 11;
pub const EXTI_RTSR_TR11_Msk: u32 = 0x1 << EXTI_RTSR_TR11_Pos;
pub const EXTI_RTSR_TR11: u32 = EXTI_RTSR_TR11_Msk;
pub const EXTI_RTSR_TR12_Pos: u32 = 12;
pub const EXTI_RTSR_TR12_Msk: u32 = 0x1 << EXTI_RTSR_TR12_Pos;
pub const EXTI_RTSR_TR12: u32 = EXTI_RTSR_TR12_Msk;
pub const EXTI_RTSR_TR13_Pos: u32 = 13;
pub const EXTI_RTSR_TR13_Msk: u32 = 0x1 << EXTI_RTSR_TR13_Pos;
pub const EXTI_RTSR_TR13: u32 = EXTI_RTSR_TR13_Msk;
pub const EXTI_RTSR_TR14_Pos: u32 = 14;
pub const EXTI_RTSR_TR14_Msk: u32 = 0x1 << EXTI_RTSR_TR14_Pos;
pub const EXTI_RTSR_TR14: u32 = EXTI_RTSR_TR14_Msk;
pub const EXTI_RTSR_TR15_Pos: u32 = 15;
pub const EXTI_RTSR_TR15_Msk: u32 = 0x1 << EXTI_RTSR_TR15_Pos;
pub const EXTI_RTSR_TR15: u32 = EXTI_RTSR_TR15_Msk;
pub const EXTI_RTSR_TR16_Pos: u32 = 16;
pub const EXTI_RTSR_TR16_Msk: u32 = 0x1 << EXTI_RTSR_TR16_Pos;
pub const EXTI_RTSR_TR16: u32 = EXTI_RTSR_TR16_Msk;
pub const EXTI_RTSR_TR17_Pos: u32 = 17;
pub const EXTI_RTSR_TR17_Msk: u32 = 0x1 << EXTI_RTSR_TR17_Pos;
pub const EXTI_RTSR_TR17: u32 = EXTI_RTSR_TR17_Msk;
pub const EXTI_RTSR_TR18_Pos: u32 = 18;
pub const EXTI_RTSR_TR18_Msk: u32 = 0x1 << EXTI_RTSR_TR18_Pos;
pub const EXTI_RTSR_TR18: u32 = EXTI_RTSR_TR18_Msk;
pub const EXTI_RTSR_TR19_Pos: u32 = 19;
pub const EXTI_RTSR_TR19_Msk: u32 = 0x1 << EXTI_RTSR_TR19_Pos;
pub const EXTI_RTSR_TR19: u32 = EXTI_RTSR_TR19_Msk;
pub const EXTI_RTSR_TR20_Pos: u32 = 20;
pub const EXTI_RTSR_TR20_Msk: u32 = 0x1 << EXTI_RTSR_TR20_Pos;
pub const EXTI_RTSR_TR20: u32 = EXTI_RTSR_TR20_Msk;
pub const EXTI_RTSR_TR21_Pos: u32 = 21;
pub const EXTI_RTSR_TR21_Msk: u32 = 0x1 << EXTI_RTSR_TR21_Pos;
pub const EXTI_RTSR_TR21: u32 = EXTI_RTSR_TR21_Msk;
pub const EXTI_RTSR_TR22_Pos: u32 = 22;
pub const EXTI_RTSR_TR22_Msk: u32 = 0x1 << EXTI_RTSR_TR22_Pos;
pub const EXTI_RTSR_TR22: u32 = EXTI_RTSR_TR22_Msk;
pub const EXTI_RTSR_TR23_Pos: u32 = 23;
pub const EXTI_RTSR_TR23_Msk: u32 = 0x1 << EXTI_RTSR_TR23_Pos;
pub const EXTI_RTSR_TR23: u32 = EXTI_RTSR_TR23_Msk;
pub const EXTI_FTSR_TR0_Pos: u32 = 0;
pub const EXTI_FTSR_TR0_Msk: u32 = 0x1 << EXTI_FTSR_TR0_Pos;
pub const EXTI_FTSR_TR0: u32 = EXTI_FTSR_TR0_Msk;
pub const EXTI_FTSR_TR1_Pos: u32 = 1;
pub const EXTI_FTSR_TR1_Msk: u32 = 0x1 << EXTI_FTSR_TR1_Pos;
pub const EXTI_FTSR_TR1: u32 = EXTI_FTSR_TR1_Msk;
pub const EXTI_FTSR_TR2_Pos: u32 = 2;
pub const EXTI_FTSR_TR2_Msk: u32 = 0x1 << EXTI_FTSR_TR2_Pos;
pub const EXTI_FTSR_TR2: u32 = EXTI_FTSR_TR2_Msk;
pub const EXTI_FTSR_TR3_Pos: u32 = 3;
pub const EXTI_FTSR_TR3_Msk: u32 = 0x1 << EXTI_FTSR_TR3_Pos;
pub const EXTI_FTSR_TR3: u32 = EXTI_FTSR_TR3_Msk;
pub const EXTI_FTSR_TR4_Pos: u32 = 4;
pub const EXTI_FTSR_TR4_Msk: u32 = 0x1 << EXTI_FTSR_TR4_Pos;
pub const EXTI_FTSR_TR4: u32 = EXTI_FTSR_TR4_Msk;
pub const EXTI_FTSR_TR5_Pos: u32 = 5;
pub const EXTI_FTSR_TR5_Msk: u32 = 0x1 << EXTI_FTSR_TR5_Pos;
pub const EXTI_FTSR_TR5: u32 = EXTI_FTSR_TR5_Msk;
pub const EXTI_FTSR_TR6_Pos: u32 = 6;
pub const EXTI_FTSR_TR6_Msk: u32 = 0x1 << EXTI_FTSR_TR6_Pos;
pub const EXTI_FTSR_TR6: u32 = EXTI_FTSR_TR6_Msk;
pub const EXTI_FTSR_TR7_Pos: u32 = 7;
pub const EXTI_FTSR_TR7_Msk: u32 = 0x1 << EXTI_FTSR_TR7_Pos;
pub const EXTI_FTSR_TR7: u32 = EXTI_FTSR_TR7_Msk;
pub const EXTI_FTSR_TR8_Pos: u32 = 8;
pub const EXTI_FTSR_TR8_Msk: u32 = 0x1 << EXTI_FTSR_TR8_Pos;
pub const EXTI_FTSR_TR8: u32 = EXTI_FTSR_TR8_Msk;
pub const EXTI_FTSR_TR9_Pos: u32 = 9;
pub const EXTI_FTSR_TR9_Msk: u32 = 0x1 << EXTI_FTSR_TR9_Pos;
pub const EXTI_FTSR_TR9: u32 = EXTI_FTSR_TR9_Msk;
pub const EXTI_FTSR_TR10_Pos: u32 = 10;
pub const EXTI_FTSR_TR10_Msk: u32 = 0x1 << EXTI_FTSR_TR10_Pos;
pub const EXTI_FTSR_TR10: u32 = EXTI_FTSR_TR10_Msk;
pub const EXTI_FTSR_TR11_Pos: u32 = 11;
pub const EXTI_FTSR_TR11_Msk: u32 = 0x1 << EXTI_FTSR_TR11_Pos;
pub const EXTI_FTSR_TR11: u32 = EXTI_FTSR_TR11_Msk;
pub const EXTI_FTSR_TR12_Pos: u32 = 12;
pub const EXTI_FTSR_TR12_Msk: u32 = 0x1 << EXTI_FTSR_TR12_Pos;
pub const EXTI_FTSR_TR12: u32 = EXTI_FTSR_TR12_Msk;
pub const EXTI_FTSR_TR13_Pos: u32 = 13;
pub const EXTI_FTSR_TR13_Msk: u32 = 0x1 << EXTI_FTSR_TR13_Pos;
pub const EXTI_FTSR_TR13: u32 = EXTI_FTSR_TR13_Msk;
pub const EXTI_FTSR_TR14_Pos: u32 = 14;
pub const EXTI_FTSR_TR14_Msk: u32 = 0x1 << EXTI_FTSR_TR14_Pos;
pub const EXTI_FTSR_TR14: u32 = EXTI_FTSR_TR14_Msk;
pub const EXTI_FTSR_TR15_Pos: u32 = 15;
pub const EXTI_FTSR_TR15_Msk: u32 = 0x1 << EXTI_FTSR_TR15_Pos;
pub const EXTI_FTSR_TR15: u32 = EXTI_FTSR_TR15_Msk;
pub const EXTI_FTSR_TR16_Pos: u32 = 16;
pub const EXTI_FTSR_TR16_Msk: u32 = 0x1 << EXTI_FTSR_TR16_Pos;
pub const EXTI_FTSR_TR16: u32 = EXTI_FTSR_TR16_Msk;
pub const EXTI_FTSR_TR17_Pos: u32 = 17;
pub const EXTI_FTSR_TR17_Msk: u32 = 0x1 << EXTI_FTSR_TR17_Pos;
pub const EXTI_FTSR_TR17: u32 = EXTI_FTSR_TR17_Msk;
pub const EXTI_FTSR_TR18_Pos: u32 = 18;
pub const EXTI_FTSR_TR18_Msk: u32 = 0x1 << EXTI_FTSR_TR18_Pos;
pub const EXTI_FTSR_TR18: u32 = EXTI_FTSR_TR18_Msk;
pub const EXTI_FTSR_TR19_Pos: u32 = 19;
pub const EXTI_FTSR_TR19_Msk: u32 = 0x1 << EXTI_FTSR_TR19_Pos;
pub const EXTI_FTSR_TR19: u32 = EXTI_FTSR_TR19_Msk;
pub const EXTI_FTSR_TR20_Pos: u32 = 20;
pub const EXTI_FTSR_TR20_Msk: u32 = 0x1 << EXTI_FTSR_TR20_Pos;
pub const EXTI_FTSR_TR20: u32 = EXTI_FTSR_TR20_Msk;
pub const EXTI_FTSR_TR21_Pos: u32 = 21;
pub const EXTI_FTSR_TR21_Msk: u32 = 0x1 << EXTI_FTSR_TR21_Pos;
pub const EXTI_FTSR_TR21: u32 = EXTI_FTSR_TR21_Msk;
pub const EXTI_FTSR_TR22_Pos: u32 = 22;
pub const EXTI_FTSR_TR22_Msk: u32 = 0x1 << EXTI_FTSR_TR22_Pos;
pub const EXTI_FTSR_TR22: u32 = EXTI_FTSR_TR22_Msk;
pub const EXTI_FTSR_TR23_Pos: u32 = 23;
pub const EXTI_FTSR_TR23_Msk: u32 = 0x1 << EXTI_FTSR_TR23_Pos;
pub const EXTI_FTSR_TR23: u32 = EXTI_FTSR_TR23_Msk;
pub const EXTI_SWIER_SWIER0_Pos: u32 = 0;
pub const EXTI_SWIER_SWIER0_Msk: u32 = 0x1 << EXTI_SWIER_SWIER0_Pos;
pub const EXTI_SWIER_SWIER0: u32 = EXTI_SWIER_SWIER0_Msk;
pub const EXTI_SWIER_SWIER1_Pos: u32 = 1;
pub const EXTI_SWIER_SWIER1_Msk: u32 = 0x1 << EXTI_SWIER_SWIER1_Pos;
pub const EXTI_SWIER_SWIER1: u32 = EXTI_SWIER_SWIER1_Msk;
pub const EXTI_SWIER_SWIER2_Pos: u32 = 2;
pub const EXTI_SWIER_SWIER2_Msk: u32 = 0x1 << EXTI_SWIER_SWIER2_Pos;
pub const EXTI_SWIER_SWIER2: u32 = EXTI_SWIER_SWIER2_Msk;
pub const EXTI_SWIER_SWIER3_Pos: u32 = 3;
pub const EXTI_SWIER_SWIER3_Msk: u32 = 0x1 << EXTI_SWIER_SWIER3_Pos;
pub const EXTI_SWIER_SWIER3: u32 = EXTI_SWIER_SWIER3_Msk;
pub const EXTI_SWIER_SWIER4_Pos: u32 = 4;
pub const EXTI_SWIER_SWIER4_Msk: u32 = 0x1 << EXTI_SWIER_SWIER4_Pos;
pub const EXTI_SWIER_SWIER4: u32 = EXTI_SWIER_SWIER4_Msk;
pub const EXTI_SWIER_SWIER5_Pos: u32 = 5;
pub const EXTI_SWIER_SWIER5_Msk: u32 = 0x1 << EXTI_SWIER_SWIER5_Pos;
pub const EXTI_SWIER_SWIER5: u32 = EXTI_SWIER_SWIER5_Msk;
pub const EXTI_SWIER_SWIER6_Pos: u32 = 6;
pub const EXTI_SWIER_SWIER6_Msk: u32 = 0x1 << EXTI_SWIER_SWIER6_Pos;
pub const EXTI_SWIER_SWIER6: u32 = EXTI_SWIER_SWIER6_Msk;
pub const EXTI_SWIER_SWIER7_Pos: u32 = 7;
pub const EXTI_SWIER_SWIER7_Msk: u32 = 0x1 << EXTI_SWIER_SWIER7_Pos;
pub const EXTI_SWIER_SWIER7: u32 = EXTI_SWIER_SWIER7_Msk;
pub const EXTI_SWIER_SWIER8_Pos: u32 = 8;
pub const EXTI_SWIER_SWIER8_Msk: u32 = 0x1 << EXTI_SWIER_SWIER8_Pos;
pub const EXTI_SWIER_SWIER8: u32 = EXTI_SWIER_SWIER8_Msk;
pub const EXTI_SWIER_SWIER9_Pos: u32 = 9;
pub const EXTI_SWIER_SWIER9_Msk: u32 = 0x1 << EXTI_SWIER_SWIER9_Pos;
pub const EXTI_SWIER_SWIER9: u32 = EXTI_SWIER_SWIER9_Msk;
pub const EXTI_SWIER_SWIER10_Pos: u32 = 10;
pub const EXTI_SWIER_SWIER10_Msk: u32 = 0x1 << EXTI_SWIER_SWIER10_Pos;
pub const EXTI_SWIER_SWIER10: u32 = EXTI_SWIER_SWIER10_Msk;
pub const EXTI_SWIER_SWIER11_Pos: u32 = 11;
pub const EXTI_SWIER_SWIER11_Msk: u32 = 0x1 << EXTI_SWIER_SWIER11_Pos;
pub const EXTI_SWIER_SWIER11: u32 = EXTI_SWIER_SWIER11_Msk;
pub const EXTI_SWIER_SWIER12_Pos: u32 = 12;
pub const EXTI_SWIER_SWIER12_Msk: u32 = 0x1 << EXTI_SWIER_SWIER12_Pos;
pub const EXTI_SWIER_SWIER12: u32 = EXTI_SWIER_SWIER12_Msk;
pub const EXTI_SWIER_SWIER13_Pos: u32 = 13;
pub const EXTI_SWIER_SWIER13_Msk: u32 = 0x1 << EXTI_SWIER_SWIER13_Pos;
pub const EXTI_SWIER_SWIER13: u32 = EXTI_SWIER_SWIER13_Msk;
pub const EXTI_SWIER_SWIER14_Pos: u32 = 14;
pub const EXTI_SWIER_SWIER14_Msk: u32 = 0x1 << EXTI_SWIER_SWIER14_Pos;
pub const EXTI_SWIER_SWIER14: u32 = EXTI_SWIER_SWIER14_Msk;
pub const EXTI_SWIER_SWIER15_Pos: u32 = 15;
pub const EXTI_SWIER_SWIER15_Msk: u32 = 0x1 << EXTI_SWIER_SWIER15_Pos;
pub const EXTI_SWIER_SWIER15: u32 = EXTI_SWIER_SWIER15_Msk;
pub const EXTI_SWIER_SWIER16_Pos: u32 = 16;
pub const EXTI_SWIER_SWIER16_Msk: u32 = 0x1 << EXTI_SWIER_SWIER16_Pos;
pub const EXTI_SWIER_SWIER16: u32 = EXTI_SWIER_SWIER16_Msk;
pub const EXTI_SWIER_SWIER17_Pos: u32 = 17;
pub const EXTI_SWIER_SWIER17_Msk: u32 = 0x1 << EXTI_SWIER_SWIER17_Pos;
pub const EXTI_SWIER_SWIER17: u32 = EXTI_SWIER_SWIER17_Msk;
pub const EXTI_SWIER_SWIER18_Pos: u32 = 18;
pub const EXTI_SWIER_SWIER18_Msk: u32 = 0x1 << EXTI_SWIER_SWIER18_Pos;
pub const EXTI_SWIER_SWIER18: u32 = EXTI_SWIER_SWIER18_Msk;
pub const EXTI_SWIER_SWIER19_Pos: u32 = 19;
pub const EXTI_SWIER_SWIER19_Msk: u32 = 0x1 << EXTI_SWIER_SWIER19_Pos;
pub const EXTI_SWIER_SWIER19: u32 = EXTI_SWIER_SWIER19_Msk;
pub const EXTI_SWIER_SWIER20_Pos: u32 = 20;
pub const EXTI_SWIER_SWIER20_Msk: u32 = 0x1 << EXTI_SWIER_SWIER20_Pos;
pub const EXTI_SWIER_SWIER20: u32 = EXTI_SWIER_SWIER20_Msk;
pub const EXTI_SWIER_SWIER21_Pos: u32 = 21;
pub const EXTI_SWIER_SWIER21_Msk: u32 = 0x1 << EXTI_SWIER_SWIER21_Pos;
pub const EXTI_SWIER_SWIER21: u32 = EXTI_SWIER_SWIER21_Msk;
pub const EXTI_SWIER_SWIER22_Pos: u32 = 22;
pub const EXTI_SWIER_SWIER22_Msk: u32 = 0x1 << EXTI_SWIER_SWIER22_Pos;
pub const EXTI_SWIER_SWIER22: u32 = EXTI_SWIER_SWIER22_Msk;
pub const EXTI_SWIER_SWIER23_Pos: u32 = 23;
pub const EXTI_SWIER_SWIER23_Msk: u32 = 0x1 << EXTI_SWIER_SWIER23_Pos;
pub const EXTI_SWIER_SWIER23: u32 = EXTI_SWIER_SWIER23_Msk;
pub const EXTI_PR_PR0_Pos: u32 = 0;
pub const EXTI_PR_PR0_Msk: u32 = 0x1 << EXTI_PR_PR0_Pos;
pub const EXTI_PR_PR0: u32 = EXTI_PR_PR0_Msk;
pub const EXTI_PR_PR1_Pos: u32 = 1;
pub const EXTI_PR_PR1_Msk: u32 = 0x1 << EXTI_PR_PR1_Pos;
pub const EXTI_PR_PR1: u32 = EXTI_PR_PR1_Msk;
pub const EXTI_PR_PR2_Pos: u32 = 2;
pub const EXTI_PR_PR2_Msk: u32 = 0x1 << EXTI_PR_PR2_Pos;
pub const EXTI_PR_PR2: u32 = EXTI_PR_PR2_Msk;
pub const EXTI_PR_PR3_Pos: u32 = 3;
pub const EXTI_PR_PR3_Msk: u32 = 0x1 << EXTI_PR_PR3_Pos;
pub const EXTI_PR_PR3: u32 = EXTI_PR_PR3_Msk;
pub const EXTI_PR_PR4_Pos: u32 = 4;
pub const EXTI_PR_PR4_Msk: u32 = 0x1 << EXTI_PR_PR4_Pos;
pub const EXTI_PR_PR4: u32 = EXTI_PR_PR4_Msk;
pub const EXTI_PR_PR5_Pos: u32 = 5;
pub const EXTI_PR_PR5_Msk: u32 = 0x1 << EXTI_PR_PR5_Pos;
pub const EXTI_PR_PR5: u32 = EXTI_PR_PR5_Msk;
pub const EXTI_PR_PR6_Pos: u32 = 6;
pub const EXTI_PR_PR6_Msk: u32 = 0x1 << EXTI_PR_PR6_Pos;
pub const EXTI_PR_PR6: u32 = EXTI_PR_PR6_Msk;
pub const EXTI_PR_PR7_Pos: u32 = 7;
pub const EXTI_PR_PR7_Msk: u32 = 0x1 << EXTI_PR_PR7_Pos;
pub const EXTI_PR_PR7: u32 = EXTI_PR_PR7_Msk;
pub const EXTI_PR_PR8_Pos: u32 = 8;
pub const EXTI_PR_PR8_Msk: u32 = 0x1 << EXTI_PR_PR8_Pos;
pub const EXTI_PR_PR8: u32 = EXTI_PR_PR8_Msk;
pub const EXTI_PR_PR9_Pos: u32 = 9;
pub const EXTI_PR_PR9_Msk: u32 = 0x1 << EXTI_PR_PR9_Pos;
pub const EXTI_PR_PR9: u32 = EXTI_PR_PR9_Msk;
pub const EXTI_PR_PR10_Pos: u32 = 10;
pub const EXTI_PR_PR10_Msk: u32 = 0x1 << EXTI_PR_PR10_Pos;
pub const EXTI_PR_PR10: u32 = EXTI_PR_PR10_Msk;
pub const EXTI_PR_PR11_Pos: u32 = 11;
pub const EXTI_PR_PR11_Msk: u32 = 0x1 << EXTI_PR_PR11_Pos;
pub const EXTI_PR_PR11: u32 = EXTI_PR_PR11_Msk;
pub const EXTI_PR_PR12_Pos: u32 = 12;
pub const EXTI_PR_PR12_Msk: u32 = 0x1 << EXTI_PR_PR12_Pos;
pub const EXTI_PR_PR12: u32 = EXTI_PR_PR12_Msk;
pub const EXTI_PR_PR13_Pos: u32 = 13;
pub const EXTI_PR_PR13_Msk: u32 = 0x1 << EXTI_PR_PR13_Pos;
pub const EXTI_PR_PR13: u32 = EXTI_PR_PR13_Msk;
pub const EXTI_PR_PR14_Pos: u32 = 14;
pub const EXTI_PR_PR14_Msk: u32 = 0x1 << EXTI_PR_PR14_Pos;
pub const EXTI_PR_PR14: u32 = EXTI_PR_PR14_Msk;
pub const EXTI_PR_PR15_Pos: u32 = 15;
pub const EXTI_PR_PR15_Msk: u32 = 0x1 << EXTI_PR_PR15_Pos;
pub const EXTI_PR_PR15: u32 = EXTI_PR_PR15_Msk;
pub const EXTI_PR_PR16_Pos: u32 = 16;
pub const EXTI_PR_PR16_Msk: u32 = 0x1 << EXTI_PR_PR16_Pos;
pub const EXTI_PR_PR16: u32 = EXTI_PR_PR16_Msk;
pub const EXTI_PR_PR17_Pos: u32 = 17;
pub const EXTI_PR_PR17_Msk: u32 = 0x1 << EXTI_PR_PR17_Pos;
pub const EXTI_PR_PR17: u32 = EXTI_PR_PR17_Msk;
pub const EXTI_PR_PR18_Pos: u32 = 18;
pub const EXTI_PR_PR18_Msk: u32 = 0x1 << EXTI_PR_PR18_Pos;
pub const EXTI_PR_PR18: u32 = EXTI_PR_PR18_Msk;
pub const EXTI_PR_PR19_Pos: u32 = 19;
pub const EXTI_PR_PR19_Msk: u32 = 0x1 << EXTI_PR_PR19_Pos;
pub const EXTI_PR_PR19: u32 = EXTI_PR_PR19_Msk;
pub const EXTI_PR_PR20_Pos: u32 = 20;
pub const EXTI_PR_PR20_Msk: u32 = 0x1 << EXTI_PR_PR20_Pos;
pub const EXTI_PR_PR20: u32 = EXTI_PR_PR20_Msk;
pub const EXTI_PR_PR21_Pos: u32 = 21;
pub const EXTI_PR_PR21_Msk: u32 = 0x1 << EXTI_PR_PR21_Pos;
pub const EXTI_PR_PR21: u32 = EXTI_PR_PR21_Msk;
pub const EXTI_PR_PR22_Pos: u32 = 22;
pub const EXTI_PR_PR22_Msk: u32 = 0x1 << EXTI_PR_PR22_Pos;
pub const EXTI_PR_PR22: u32 = EXTI_PR_PR22_Msk;
pub const EXTI_PR_PR23_Pos: u32 = 23;
pub const EXTI_PR_PR23_Msk: u32 = 0x1 << EXTI_PR_PR23_Pos;
pub const EXTI_PR_PR23: u32 = EXTI_PR_PR23_Msk;
pub const FLASH_SECTOR_TOTAL: u32 = 2;
pub const FLASH_ACR_LATENCY_Pos: u32 = 0;
pub const FLASH_ACR_LATENCY_Msk: u32 = 0xF << FLASH_ACR_LATENCY_Pos;
pub const FLASH_ACR_LATENCY: u32 = FLASH_ACR_LATENCY_Msk;
pub const FLASH_ACR_LATENCY_0WS: u32 = 0x00000000;
pub const FLASH_ACR_LATENCY_1WS: u32 = 0x00000001;
pub const FLASH_ACR_LATENCY_2WS: u32 = 0x00000002;
pub const FLASH_ACR_LATENCY_3WS: u32 = 0x00000003;
pub const FLASH_ACR_LATENCY_4WS: u32 = 0x00000004;
pub const FLASH_ACR_LATENCY_5WS: u32 = 0x00000005;
pub const FLASH_ACR_LATENCY_6WS: u32 = 0x00000006;
pub const FLASH_ACR_LATENCY_7WS: u32 = 0x00000007;
pub const FLASH_ACR_LATENCY_8WS: u32 = 0x00000008;
pub const FLASH_ACR_LATENCY_9WS: u32 = 0x00000009;
pub const FLASH_ACR_LATENCY_10WS: u32 = 0x0000000A;
pub const FLASH_ACR_LATENCY_11WS: u32 = 0x0000000B;
pub const FLASH_ACR_LATENCY_12WS: u32 = 0x0000000C;
pub const FLASH_ACR_LATENCY_13WS: u32 = 0x0000000D;
pub const FLASH_ACR_LATENCY_14WS: u32 = 0x0000000E;
pub const FLASH_ACR_LATENCY_15WS: u32 = 0x0000000F;
pub const FLASH_ACR_PRFTEN_Pos: u32 = 8;
pub const FLASH_ACR_PRFTEN_Msk: u32 = 0x1 << FLASH_ACR_PRFTEN_Pos;
pub const FLASH_ACR_PRFTEN: u32 = FLASH_ACR_PRFTEN_Msk;
pub const FLASH_ACR_ARTEN_Pos: u32 = 9;
pub const FLASH_ACR_ARTEN_Msk: u32 = 0x1 << FLASH_ACR_ARTEN_Pos;
pub const FLASH_ACR_ARTEN: u32 = FLASH_ACR_ARTEN_Msk;
pub const FLASH_ACR_ARTRST_Pos: u32 = 11;
pub const FLASH_ACR_ARTRST_Msk: u32 = 0x1 << FLASH_ACR_ARTRST_Pos;
pub const FLASH_ACR_ARTRST: u32 = FLASH_ACR_ARTRST_Msk;
pub const FLASH_SR_EOP_Pos: u32 = 0;
pub const FLASH_SR_EOP_Msk: u32 = 0x1 << FLASH_SR_EOP_Pos;
pub const FLASH_SR_EOP: u32 = FLASH_SR_EOP_Msk;
pub const FLASH_SR_OPERR_Pos: u32 = 1;
pub const FLASH_SR_OPERR_Msk: u32 = 0x1 << FLASH_SR_OPERR_Pos;
pub const FLASH_SR_OPERR: u32 = FLASH_SR_OPERR_Msk;
pub const FLASH_SR_WRPERR_Pos: u32 = 4;
pub const FLASH_SR_WRPERR_Msk: u32 = 0x1 << FLASH_SR_WRPERR_Pos;
pub const FLASH_SR_WRPERR: u32 = FLASH_SR_WRPERR_Msk;
pub const FLASH_SR_PGAERR_Pos: u32 = 5;
pub const FLASH_SR_PGAERR_Msk: u32 = 0x1 << FLASH_SR_PGAERR_Pos;
pub const FLASH_SR_PGAERR: u32 = FLASH_SR_PGAERR_Msk;
pub const FLASH_SR_PGPERR_Pos: u32 = 6;
pub const FLASH_SR_PGPERR_Msk: u32 = 0x1 << FLASH_SR_PGPERR_Pos;
pub const FLASH_SR_PGPERR: u32 = FLASH_SR_PGPERR_Msk;
pub const FLASH_SR_ERSERR_Pos: u32 = 7;
pub const FLASH_SR_ERSERR_Msk: u32 = 0x1 << FLASH_SR_ERSERR_Pos;
pub const FLASH_SR_ERSERR: u32 = FLASH_SR_ERSERR_Msk;
pub const FLASH_SR_BSY_Pos: u32 = 16;
pub const FLASH_SR_BSY_Msk: u32 = 0x1 << FLASH_SR_BSY_Pos;
pub const FLASH_SR_BSY: u32 = FLASH_SR_BSY_Msk;
pub const FLASH_CR_PG_Pos: u32 = 0;
pub const FLASH_CR_PG_Msk: u32 = 0x1 << FLASH_CR_PG_Pos;
pub const FLASH_CR_PG: u32 = FLASH_CR_PG_Msk;
pub const FLASH_CR_SER_Pos: u32 = 1;
pub const FLASH_CR_SER_Msk: u32 = 0x1 << FLASH_CR_SER_Pos;
pub const FLASH_CR_SER: u32 = FLASH_CR_SER_Msk;
pub const FLASH_CR_MER_Pos: u32 = 2;
pub const FLASH_CR_MER_Msk: u32 = 0x1 << FLASH_CR_MER_Pos;
pub const FLASH_CR_MER: u32 = FLASH_CR_MER_Msk;
pub const FLASH_CR_SNB_Pos: u32 = 3;
pub const FLASH_CR_SNB_Msk: u32 = 0xF << FLASH_CR_SNB_Pos;
pub const FLASH_CR_SNB: u32 = FLASH_CR_SNB_Msk;
pub const FLASH_CR_SNB_0: u32 = 0x00000008;
pub const FLASH_CR_SNB_1: u32 = 0x00000010;
pub const FLASH_CR_SNB_2: u32 = 0x00000020;
pub const FLASH_CR_SNB_3: u32 = 0x00000040;
pub const FLASH_CR_PSIZE_Pos: u32 = 8;
pub const FLASH_CR_PSIZE_Msk: u32 = 0x3 << FLASH_CR_PSIZE_Pos;
pub const FLASH_CR_PSIZE: u32 = FLASH_CR_PSIZE_Msk;
pub const FLASH_CR_PSIZE_0: u32 = 0x1 << FLASH_CR_PSIZE_Pos;
pub const FLASH_CR_PSIZE_1: u32 = 0x2 << FLASH_CR_PSIZE_Pos;
pub const FLASH_CR_STRT_Pos: u32 = 16;
pub const FLASH_CR_STRT_Msk: u32 = 0x1 << FLASH_CR_STRT_Pos;
pub const FLASH_CR_STRT: u32 = FLASH_CR_STRT_Msk;
pub const FLASH_CR_EOPIE_Pos: u32 = 24;
pub const FLASH_CR_EOPIE_Msk: u32 = 0x1 << FLASH_CR_EOPIE_Pos;
pub const FLASH_CR_EOPIE: u32 = FLASH_CR_EOPIE_Msk;
pub const FLASH_CR_ERRIE_Pos: u32 = 25;
pub const FLASH_CR_ERRIE_Msk: u32 = 0x1 << FLASH_CR_ERRIE_Pos;
pub const FLASH_CR_ERRIE: u32 = FLASH_CR_ERRIE_Msk;
pub const FLASH_CR_LOCK_Pos: u32 = 31;
pub const FLASH_CR_LOCK_Msk: u32 = 0x1 << FLASH_CR_LOCK_Pos;
pub const FLASH_CR_LOCK: u32 = FLASH_CR_LOCK_Msk;
pub const FLASH_OPTCR_OPTLOCK_Pos: u32 = 0;
pub const FLASH_OPTCR_OPTLOCK_Msk: u32 = 0x1 << FLASH_OPTCR_OPTLOCK_Pos;
pub const FLASH_OPTCR_OPTLOCK: u32 = FLASH_OPTCR_OPTLOCK_Msk;
pub const FLASH_OPTCR_OPTSTRT_Pos: u32 = 1;
pub const FLASH_OPTCR_OPTSTRT_Msk: u32 = 0x1 << FLASH_OPTCR_OPTSTRT_Pos;
pub const FLASH_OPTCR_OPTSTRT: u32 = FLASH_OPTCR_OPTSTRT_Msk;
pub const FLASH_OPTCR_BOR_LEV_Pos: u32 = 2;
pub const FLASH_OPTCR_BOR_LEV_Msk: u32 = 0x3 << FLASH_OPTCR_BOR_LEV_Pos;
pub const FLASH_OPTCR_BOR_LEV: u32 = FLASH_OPTCR_BOR_LEV_Msk;
pub const FLASH_OPTCR_BOR_LEV_0: u32 = 0x1 << FLASH_OPTCR_BOR_LEV_Pos;
pub const FLASH_OPTCR_BOR_LEV_1: u32 = 0x2 << FLASH_OPTCR_BOR_LEV_Pos;
pub const FLASH_OPTCR_WWDG_SW_Pos: u32 = 4;
pub const FLASH_OPTCR_WWDG_SW_Msk: u32 = 0x1 << FLASH_OPTCR_WWDG_SW_Pos;
pub const FLASH_OPTCR_WWDG_SW: u32 = FLASH_OPTCR_WWDG_SW_Msk;
pub const FLASH_OPTCR_IWDG_SW_Pos: u32 = 5;
pub const FLASH_OPTCR_IWDG_SW_Msk: u32 = 0x1 << FLASH_OPTCR_IWDG_SW_Pos;
pub const FLASH_OPTCR_IWDG_SW: u32 = FLASH_OPTCR_IWDG_SW_Msk;
pub const FLASH_OPTCR_nRST_STOP_Pos: u32 = 6;
pub const FLASH_OPTCR_nRST_STOP_Msk: u32 = 0x1 << FLASH_OPTCR_nRST_STOP_Pos;
pub const FLASH_OPTCR_nRST_STOP: u32 = FLASH_OPTCR_nRST_STOP_Msk;
pub const FLASH_OPTCR_nRST_STDBY_Pos: u32 = 7;
pub const FLASH_OPTCR_nRST_STDBY_Msk: u32 = 0x1 << FLASH_OPTCR_nRST_STDBY_Pos;
pub const FLASH_OPTCR_nRST_STDBY: u32 = FLASH_OPTCR_nRST_STDBY_Msk;
pub const FLASH_OPTCR_RDP_Pos: u32 = 8;
pub const FLASH_OPTCR_RDP_Msk: u32 = 0xFF << FLASH_OPTCR_RDP_Pos;
pub const FLASH_OPTCR_RDP: u32 = FLASH_OPTCR_RDP_Msk;
pub const FLASH_OPTCR_RDP_0: u32 = 0x01 << FLASH_OPTCR_RDP_Pos;
pub const FLASH_OPTCR_RDP_1: u32 = 0x02 << FLASH_OPTCR_RDP_Pos;
pub const FLASH_OPTCR_RDP_2: u32 = 0x04 << FLASH_OPTCR_RDP_Pos;
pub const FLASH_OPTCR_RDP_3: u32 = 0x08 << FLASH_OPTCR_RDP_Pos;
pub const FLASH_OPTCR_RDP_4: u32 = 0x10 << FLASH_OPTCR_RDP_Pos;
pub const FLASH_OPTCR_RDP_5: u32 = 0x20 << FLASH_OPTCR_RDP_Pos;
pub const FLASH_OPTCR_RDP_6: u32 = 0x40 << FLASH_OPTCR_RDP_Pos;
pub const FLASH_OPTCR_RDP_7: u32 = 0x80 << FLASH_OPTCR_RDP_Pos;
pub const FLASH_OPTCR_nWRP_Pos: u32 = 16;
pub const FLASH_OPTCR_nWRP_Msk: u32 = 0xFF << FLASH_OPTCR_nWRP_Pos;
pub const FLASH_OPTCR_nWRP: u32 = FLASH_OPTCR_nWRP_Msk;
pub const FLASH_OPTCR_nWRP_0: u32 = 0x00010000;
pub const FLASH_OPTCR_nWRP_1: u32 = 0x00020000;
pub const FLASH_OPTCR_nWRP_2: u32 = 0x00040000;
pub const FLASH_OPTCR_nWRP_3: u32 = 0x00080000;
pub const FLASH_OPTCR_nWRP_4: u32 = 0x00100000;
pub const FLASH_OPTCR_nWRP_5: u32 = 0x00200000;
pub const FLASH_OPTCR_nWRP_6: u32 = 0x00400000;
pub const FLASH_OPTCR_nWRP_7: u32 = 0x00800000;
pub const FLASH_OPTCR_IWDG_STDBY_Pos: u32 = 30;
pub const FLASH_OPTCR_IWDG_STDBY_Msk: u32 = 0x1 << FLASH_OPTCR_IWDG_STDBY_Pos;
pub const FLASH_OPTCR_IWDG_STDBY: u32 = FLASH_OPTCR_IWDG_STDBY_Msk;
pub const FLASH_OPTCR_IWDG_STOP_Pos: u32 = 31;
pub const FLASH_OPTCR_IWDG_STOP_Msk: u32 = 0x1 << FLASH_OPTCR_IWDG_STOP_Pos;
pub const FLASH_OPTCR_IWDG_STOP: u32 = FLASH_OPTCR_IWDG_STOP_Msk;
pub const FLASH_OPTCR1_BOOT_ADD0_Pos: u32 = 0;
pub const FLASH_OPTCR1_BOOT_ADD0_Msk: u32 = 0xFFFF << FLASH_OPTCR1_BOOT_ADD0_Pos;
pub const FLASH_OPTCR1_BOOT_ADD0: u32 = FLASH_OPTCR1_BOOT_ADD0_Msk;
pub const FLASH_OPTCR1_BOOT_ADD1_Pos: u32 = 16;
pub const FLASH_OPTCR1_BOOT_ADD1_Msk: u32 = 0xFFFF << FLASH_OPTCR1_BOOT_ADD1_Pos;
pub const FLASH_OPTCR1_BOOT_ADD1: u32 = FLASH_OPTCR1_BOOT_ADD1_Msk;
pub const FMC_BCR1_MBKEN_Pos: u32 = 0;
pub const FMC_BCR1_MBKEN_Msk: u32 = 0x1 << FMC_BCR1_MBKEN_Pos;
pub const FMC_BCR1_MBKEN: u32 = FMC_BCR1_MBKEN_Msk;
pub const FMC_BCR1_MUXEN_Pos: u32 = 1;
pub const FMC_BCR1_MUXEN_Msk: u32 = 0x1 << FMC_BCR1_MUXEN_Pos;
pub const FMC_BCR1_MUXEN: u32 = FMC_BCR1_MUXEN_Msk;
pub const FMC_BCR1_MTYP_Pos: u32 = 2;
pub const FMC_BCR1_MTYP_Msk: u32 = 0x3 << FMC_BCR1_MTYP_Pos;
pub const FMC_BCR1_MTYP: u32 = FMC_BCR1_MTYP_Msk;
pub const FMC_BCR1_MTYP_0: u32 = 0x1 << FMC_BCR1_MTYP_Pos;
pub const FMC_BCR1_MTYP_1: u32 = 0x2 << FMC_BCR1_MTYP_Pos;
pub const FMC_BCR1_MWID_Pos: u32 = 4;
pub const FMC_BCR1_MWID_Msk: u32 = 0x3 << FMC_BCR1_MWID_Pos;
pub const FMC_BCR1_MWID: u32 = FMC_BCR1_MWID_Msk;
pub const FMC_BCR1_MWID_0: u32 = 0x1 << FMC_BCR1_MWID_Pos;
pub const FMC_BCR1_MWID_1: u32 = 0x2 << FMC_BCR1_MWID_Pos;
pub const FMC_BCR1_FACCEN_Pos: u32 = 6;
pub const FMC_BCR1_FACCEN_Msk: u32 = 0x1 << FMC_BCR1_FACCEN_Pos;
pub const FMC_BCR1_FACCEN: u32 = FMC_BCR1_FACCEN_Msk;
pub const FMC_BCR1_BURSTEN_Pos: u32 = 8;
pub const FMC_BCR1_BURSTEN_Msk: u32 = 0x1 << FMC_BCR1_BURSTEN_Pos;
pub const FMC_BCR1_BURSTEN: u32 = FMC_BCR1_BURSTEN_Msk;
pub const FMC_BCR1_WAITPOL_Pos: u32 = 9;
pub const FMC_BCR1_WAITPOL_Msk: u32 = 0x1 << FMC_BCR1_WAITPOL_Pos;
pub const FMC_BCR1_WAITPOL: u32 = FMC_BCR1_WAITPOL_Msk;
pub const FMC_BCR1_WRAPMOD_Pos: u32 = 10;
pub const FMC_BCR1_WRAPMOD_Msk: u32 = 0x1 << FMC_BCR1_WRAPMOD_Pos;
pub const FMC_BCR1_WRAPMOD: u32 = FMC_BCR1_WRAPMOD_Msk;
pub const FMC_BCR1_WAITCFG_Pos: u32 = 11;
pub const FMC_BCR1_WAITCFG_Msk: u32 = 0x1 << FMC_BCR1_WAITCFG_Pos;
pub const FMC_BCR1_WAITCFG: u32 = FMC_BCR1_WAITCFG_Msk;
pub const FMC_BCR1_WREN_Pos: u32 = 12;
pub const FMC_BCR1_WREN_Msk: u32 = 0x1 << FMC_BCR1_WREN_Pos;
pub const FMC_BCR1_WREN: u32 = FMC_BCR1_WREN_Msk;
pub const FMC_BCR1_WAITEN_Pos: u32 = 13;
pub const FMC_BCR1_WAITEN_Msk: u32 = 0x1 << FMC_BCR1_WAITEN_Pos;
pub const FMC_BCR1_WAITEN: u32 = FMC_BCR1_WAITEN_Msk;
pub const FMC_BCR1_EXTMOD_Pos: u32 = 14;
pub const FMC_BCR1_EXTMOD_Msk: u32 = 0x1 << FMC_BCR1_EXTMOD_Pos;
pub const FMC_BCR1_EXTMOD: u32 = FMC_BCR1_EXTMOD_Msk;
pub const FMC_BCR1_ASYNCWAIT_Pos: u32 = 15;
pub const FMC_BCR1_ASYNCWAIT_Msk: u32 = 0x1 << FMC_BCR1_ASYNCWAIT_Pos;
pub const FMC_BCR1_ASYNCWAIT: u32 = FMC_BCR1_ASYNCWAIT_Msk;
pub const FMC_BCR1_CPSIZE_Pos: u32 = 16;
pub const FMC_BCR1_CPSIZE_Msk: u32 = 0x7 << FMC_BCR1_CPSIZE_Pos;
pub const FMC_BCR1_CPSIZE: u32 = FMC_BCR1_CPSIZE_Msk;
pub const FMC_BCR1_CPSIZE_0: u32 = 0x1 << FMC_BCR1_CPSIZE_Pos;
pub const FMC_BCR1_CPSIZE_1: u32 = 0x2 << FMC_BCR1_CPSIZE_Pos;
pub const FMC_BCR1_CPSIZE_2: u32 = 0x4 << FMC_BCR1_CPSIZE_Pos;
pub const FMC_BCR1_CBURSTRW_Pos: u32 = 19;
pub const FMC_BCR1_CBURSTRW_Msk: u32 = 0x1 << FMC_BCR1_CBURSTRW_Pos;
pub const FMC_BCR1_CBURSTRW: u32 = FMC_BCR1_CBURSTRW_Msk;
pub const FMC_BCR1_CCLKEN_Pos: u32 = 20;
pub const FMC_BCR1_CCLKEN_Msk: u32 = 0x1 << FMC_BCR1_CCLKEN_Pos;
pub const FMC_BCR1_CCLKEN: u32 = FMC_BCR1_CCLKEN_Msk;
pub const FMC_BCR1_WFDIS_Pos: u32 = 21;
pub const FMC_BCR1_WFDIS_Msk: u32 = 0x1 << FMC_BCR1_WFDIS_Pos;
pub const FMC_BCR1_WFDIS: u32 = FMC_BCR1_WFDIS_Msk;
pub const FMC_BCR2_MBKEN_Pos: u32 = 0;
pub const FMC_BCR2_MBKEN_Msk: u32 = 0x1 << FMC_BCR2_MBKEN_Pos;
pub const FMC_BCR2_MBKEN: u32 = FMC_BCR2_MBKEN_Msk;
pub const FMC_BCR2_MUXEN_Pos: u32 = 1;
pub const FMC_BCR2_MUXEN_Msk: u32 = 0x1 << FMC_BCR2_MUXEN_Pos;
pub const FMC_BCR2_MUXEN: u32 = FMC_BCR2_MUXEN_Msk;
pub const FMC_BCR2_MTYP_Pos: u32 = 2;
pub const FMC_BCR2_MTYP_Msk: u32 = 0x3 << FMC_BCR2_MTYP_Pos;
pub const FMC_BCR2_MTYP: u32 = FMC_BCR2_MTYP_Msk;
pub const FMC_BCR2_MTYP_0: u32 = 0x1 << FMC_BCR2_MTYP_Pos;
pub const FMC_BCR2_MTYP_1: u32 = 0x2 << FMC_BCR2_MTYP_Pos;
pub const FMC_BCR2_MWID_Pos: u32 = 4;
pub const FMC_BCR2_MWID_Msk: u32 = 0x3 << FMC_BCR2_MWID_Pos;
pub const FMC_BCR2_MWID: u32 = FMC_BCR2_MWID_Msk;
pub const FMC_BCR2_MWID_0: u32 = 0x1 << FMC_BCR2_MWID_Pos;
pub const FMC_BCR2_MWID_1: u32 = 0x2 << FMC_BCR2_MWID_Pos;
pub const FMC_BCR2_FACCEN_Pos: u32 = 6;
pub const FMC_BCR2_FACCEN_Msk: u32 = 0x1 << FMC_BCR2_FACCEN_Pos;
pub const FMC_BCR2_FACCEN: u32 = FMC_BCR2_FACCEN_Msk;
pub const FMC_BCR2_BURSTEN_Pos: u32 = 8;
pub const FMC_BCR2_BURSTEN_Msk: u32 = 0x1 << FMC_BCR2_BURSTEN_Pos;
pub const FMC_BCR2_BURSTEN: u32 = FMC_BCR2_BURSTEN_Msk;
pub const FMC_BCR2_WAITPOL_Pos: u32 = 9;
pub const FMC_BCR2_WAITPOL_Msk: u32 = 0x1 << FMC_BCR2_WAITPOL_Pos;
pub const FMC_BCR2_WAITPOL: u32 = FMC_BCR2_WAITPOL_Msk;
pub const FMC_BCR2_WRAPMOD_Pos: u32 = 10;
pub const FMC_BCR2_WRAPMOD_Msk: u32 = 0x1 << FMC_BCR2_WRAPMOD_Pos;
pub const FMC_BCR2_WRAPMOD: u32 = FMC_BCR2_WRAPMOD_Msk;
pub const FMC_BCR2_WAITCFG_Pos: u32 = 11;
pub const FMC_BCR2_WAITCFG_Msk: u32 = 0x1 << FMC_BCR2_WAITCFG_Pos;
pub const FMC_BCR2_WAITCFG: u32 = FMC_BCR2_WAITCFG_Msk;
pub const FMC_BCR2_WREN_Pos: u32 = 12;
pub const FMC_BCR2_WREN_Msk: u32 = 0x1 << FMC_BCR2_WREN_Pos;
pub const FMC_BCR2_WREN: u32 = FMC_BCR2_WREN_Msk;
pub const FMC_BCR2_WAITEN_Pos: u32 = 13;
pub const FMC_BCR2_WAITEN_Msk: u32 = 0x1 << FMC_BCR2_WAITEN_Pos;
pub const FMC_BCR2_WAITEN: u32 = FMC_BCR2_WAITEN_Msk;
pub const FMC_BCR2_EXTMOD_Pos: u32 = 14;
pub const FMC_BCR2_EXTMOD_Msk: u32 = 0x1 << FMC_BCR2_EXTMOD_Pos;
pub const FMC_BCR2_EXTMOD: u32 = FMC_BCR2_EXTMOD_Msk;
pub const FMC_BCR2_ASYNCWAIT_Pos: u32 = 15;
pub const FMC_BCR2_ASYNCWAIT_Msk: u32 = 0x1 << FMC_BCR2_ASYNCWAIT_Pos;
pub const FMC_BCR2_ASYNCWAIT: u32 = FMC_BCR2_ASYNCWAIT_Msk;
pub const FMC_BCR2_CPSIZE_Pos: u32 = 16;
pub const FMC_BCR2_CPSIZE_Msk: u32 = 0x7 << FMC_BCR2_CPSIZE_Pos;
pub const FMC_BCR2_CPSIZE: u32 = FMC_BCR2_CPSIZE_Msk;
pub const FMC_BCR2_CPSIZE_0: u32 = 0x1 << FMC_BCR2_CPSIZE_Pos;
pub const FMC_BCR2_CPSIZE_1: u32 = 0x2 << FMC_BCR2_CPSIZE_Pos;
pub const FMC_BCR2_CPSIZE_2: u32 = 0x4 << FMC_BCR2_CPSIZE_Pos;
pub const FMC_BCR2_CBURSTRW_Pos: u32 = 19;
pub const FMC_BCR2_CBURSTRW_Msk: u32 = 0x1 << FMC_BCR2_CBURSTRW_Pos;
pub const FMC_BCR2_CBURSTRW: u32 = FMC_BCR2_CBURSTRW_Msk;
pub const FMC_BCR3_MBKEN_Pos: u32 = 0;
pub const FMC_BCR3_MBKEN_Msk: u32 = 0x1 << FMC_BCR3_MBKEN_Pos;
pub const FMC_BCR3_MBKEN: u32 = FMC_BCR3_MBKEN_Msk;
pub const FMC_BCR3_MUXEN_Pos: u32 = 1;
pub const FMC_BCR3_MUXEN_Msk: u32 = 0x1 << FMC_BCR3_MUXEN_Pos;
pub const FMC_BCR3_MUXEN: u32 = FMC_BCR3_MUXEN_Msk;
pub const FMC_BCR3_MTYP_Pos: u32 = 2;
pub const FMC_BCR3_MTYP_Msk: u32 = 0x3 << FMC_BCR3_MTYP_Pos;
pub const FMC_BCR3_MTYP: u32 = FMC_BCR3_MTYP_Msk;
pub const FMC_BCR3_MTYP_0: u32 = 0x1 << FMC_BCR3_MTYP_Pos;
pub const FMC_BCR3_MTYP_1: u32 = 0x2 << FMC_BCR3_MTYP_Pos;
pub const FMC_BCR3_MWID_Pos: u32 = 4;
pub const FMC_BCR3_MWID_Msk: u32 = 0x3 << FMC_BCR3_MWID_Pos;
pub const FMC_BCR3_MWID: u32 = FMC_BCR3_MWID_Msk;
pub const FMC_BCR3_MWID_0: u32 = 0x1 << FMC_BCR3_MWID_Pos;
pub const FMC_BCR3_MWID_1: u32 = 0x2 << FMC_BCR3_MWID_Pos;
pub const FMC_BCR3_FACCEN_Pos: u32 = 6;
pub const FMC_BCR3_FACCEN_Msk: u32 = 0x1 << FMC_BCR3_FACCEN_Pos;
pub const FMC_BCR3_FACCEN: u32 = FMC_BCR3_FACCEN_Msk;
pub const FMC_BCR3_BURSTEN_Pos: u32 = 8;
pub const FMC_BCR3_BURSTEN_Msk: u32 = 0x1 << FMC_BCR3_BURSTEN_Pos;
pub const FMC_BCR3_BURSTEN: u32 = FMC_BCR3_BURSTEN_Msk;
pub const FMC_BCR3_WAITPOL_Pos: u32 = 9;
pub const FMC_BCR3_WAITPOL_Msk: u32 = 0x1 << FMC_BCR3_WAITPOL_Pos;
pub const FMC_BCR3_WAITPOL: u32 = FMC_BCR3_WAITPOL_Msk;
pub const FMC_BCR3_WRAPMOD_Pos: u32 = 10;
pub const FMC_BCR3_WRAPMOD_Msk: u32 = 0x1 << FMC_BCR3_WRAPMOD_Pos;
pub const FMC_BCR3_WRAPMOD: u32 = FMC_BCR3_WRAPMOD_Msk;
pub const FMC_BCR3_WAITCFG_Pos: u32 = 11;
pub const FMC_BCR3_WAITCFG_Msk: u32 = 0x1 << FMC_BCR3_WAITCFG_Pos;
pub const FMC_BCR3_WAITCFG: u32 = FMC_BCR3_WAITCFG_Msk;
pub const FMC_BCR3_WREN_Pos: u32 = 12;
pub const FMC_BCR3_WREN_Msk: u32 = 0x1 << FMC_BCR3_WREN_Pos;
pub const FMC_BCR3_WREN: u32 = FMC_BCR3_WREN_Msk;
pub const FMC_BCR3_WAITEN_Pos: u32 = 13;
pub const FMC_BCR3_WAITEN_Msk: u32 = 0x1 << FMC_BCR3_WAITEN_Pos;
pub const FMC_BCR3_WAITEN: u32 = FMC_BCR3_WAITEN_Msk;
pub const FMC_BCR3_EXTMOD_Pos: u32 = 14;
pub const FMC_BCR3_EXTMOD_Msk: u32 = 0x1 << FMC_BCR3_EXTMOD_Pos;
pub const FMC_BCR3_EXTMOD: u32 = FMC_BCR3_EXTMOD_Msk;
pub const FMC_BCR3_ASYNCWAIT_Pos: u32 = 15;
pub const FMC_BCR3_ASYNCWAIT_Msk: u32 = 0x1 << FMC_BCR3_ASYNCWAIT_Pos;
pub const FMC_BCR3_ASYNCWAIT: u32 = FMC_BCR3_ASYNCWAIT_Msk;
pub const FMC_BCR3_CPSIZE_Pos: u32 = 16;
pub const FMC_BCR3_CPSIZE_Msk: u32 = 0x7 << FMC_BCR3_CPSIZE_Pos;
pub const FMC_BCR3_CPSIZE: u32 = FMC_BCR3_CPSIZE_Msk;
pub const FMC_BCR3_CPSIZE_0: u32 = 0x1 << FMC_BCR3_CPSIZE_Pos;
pub const FMC_BCR3_CPSIZE_1: u32 = 0x2 << FMC_BCR3_CPSIZE_Pos;
pub const FMC_BCR3_CPSIZE_2: u32 = 0x4 << FMC_BCR3_CPSIZE_Pos;
pub const FMC_BCR3_CBURSTRW_Pos: u32 = 19;
pub const FMC_BCR3_CBURSTRW_Msk: u32 = 0x1 << FMC_BCR3_CBURSTRW_Pos;
pub const FMC_BCR3_CBURSTRW: u32 = FMC_BCR3_CBURSTRW_Msk;
pub const FMC_BCR4_MBKEN_Pos: u32 = 0;
pub const FMC_BCR4_MBKEN_Msk: u32 = 0x1 << FMC_BCR4_MBKEN_Pos;
pub const FMC_BCR4_MBKEN: u32 = FMC_BCR4_MBKEN_Msk;
pub const FMC_BCR4_MUXEN_Pos: u32 = 1;
pub const FMC_BCR4_MUXEN_Msk: u32 = 0x1 << FMC_BCR4_MUXEN_Pos;
pub const FMC_BCR4_MUXEN: u32 = FMC_BCR4_MUXEN_Msk;
pub const FMC_BCR4_MTYP_Pos: u32 = 2;
pub const FMC_BCR4_MTYP_Msk: u32 = 0x3 << FMC_BCR4_MTYP_Pos;
pub const FMC_BCR4_MTYP: u32 = FMC_BCR4_MTYP_Msk;
pub const FMC_BCR4_MTYP_0: u32 = 0x1 << FMC_BCR4_MTYP_Pos;
pub const FMC_BCR4_MTYP_1: u32 = 0x2 << FMC_BCR4_MTYP_Pos;
pub const FMC_BCR4_MWID_Pos: u32 = 4;
pub const FMC_BCR4_MWID_Msk: u32 = 0x3 << FMC_BCR4_MWID_Pos;
pub const FMC_BCR4_MWID: u32 = FMC_BCR4_MWID_Msk;
pub const FMC_BCR4_MWID_0: u32 = 0x1 << FMC_BCR4_MWID_Pos;
pub const FMC_BCR4_MWID_1: u32 = 0x2 << FMC_BCR4_MWID_Pos;
pub const FMC_BCR4_FACCEN_Pos: u32 = 6;
pub const FMC_BCR4_FACCEN_Msk: u32 = 0x1 << FMC_BCR4_FACCEN_Pos;
pub const FMC_BCR4_FACCEN: u32 = FMC_BCR4_FACCEN_Msk;
pub const FMC_BCR4_BURSTEN_Pos: u32 = 8;
pub const FMC_BCR4_BURSTEN_Msk: u32 = 0x1 << FMC_BCR4_BURSTEN_Pos;
pub const FMC_BCR4_BURSTEN: u32 = FMC_BCR4_BURSTEN_Msk;
pub const FMC_BCR4_WAITPOL_Pos: u32 = 9;
pub const FMC_BCR4_WAITPOL_Msk: u32 = 0x1 << FMC_BCR4_WAITPOL_Pos;
pub const FMC_BCR4_WAITPOL: u32 = FMC_BCR4_WAITPOL_Msk;
pub const FMC_BCR4_WRAPMOD_Pos: u32 = 10;
pub const FMC_BCR4_WRAPMOD_Msk: u32 = 0x1 << FMC_BCR4_WRAPMOD_Pos;
pub const FMC_BCR4_WRAPMOD: u32 = FMC_BCR4_WRAPMOD_Msk;
pub const FMC_BCR4_WAITCFG_Pos: u32 = 11;
pub const FMC_BCR4_WAITCFG_Msk: u32 = 0x1 << FMC_BCR4_WAITCFG_Pos;
pub const FMC_BCR4_WAITCFG: u32 = FMC_BCR4_WAITCFG_Msk;
pub const FMC_BCR4_WREN_Pos: u32 = 12;
pub const FMC_BCR4_WREN_Msk: u32 = 0x1 << FMC_BCR4_WREN_Pos;
pub const FMC_BCR4_WREN: u32 = FMC_BCR4_WREN_Msk;
pub const FMC_BCR4_WAITEN_Pos: u32 = 13;
pub const FMC_BCR4_WAITEN_Msk: u32 = 0x1 << FMC_BCR4_WAITEN_Pos;
pub const FMC_BCR4_WAITEN: u32 = FMC_BCR4_WAITEN_Msk;
pub const FMC_BCR4_EXTMOD_Pos: u32 = 14;
pub const FMC_BCR4_EXTMOD_Msk: u32 = 0x1 << FMC_BCR4_EXTMOD_Pos;
pub const FMC_BCR4_EXTMOD: u32 = FMC_BCR4_EXTMOD_Msk;
pub const FMC_BCR4_ASYNCWAIT_Pos: u32 = 15;
pub const FMC_BCR4_ASYNCWAIT_Msk: u32 = 0x1 << FMC_BCR4_ASYNCWAIT_Pos;
pub const FMC_BCR4_ASYNCWAIT: u32 = FMC_BCR4_ASYNCWAIT_Msk;
pub const FMC_BCR4_CPSIZE_Pos: u32 = 16;
pub const FMC_BCR4_CPSIZE_Msk: u32 = 0x7 << FMC_BCR4_CPSIZE_Pos;
pub const FMC_BCR4_CPSIZE: u32 = FMC_BCR4_CPSIZE_Msk;
pub const FMC_BCR4_CPSIZE_0: u32 = 0x1 << FMC_BCR4_CPSIZE_Pos;
pub const FMC_BCR4_CPSIZE_1: u32 = 0x2 << FMC_BCR4_CPSIZE_Pos;
pub const FMC_BCR4_CPSIZE_2: u32 = 0x4 << FMC_BCR4_CPSIZE_Pos;
pub const FMC_BCR4_CBURSTRW_Pos: u32 = 19;
pub const FMC_BCR4_CBURSTRW_Msk: u32 = 0x1 << FMC_BCR4_CBURSTRW_Pos;
pub const FMC_BCR4_CBURSTRW: u32 = FMC_BCR4_CBURSTRW_Msk;
pub const FMC_BTR1_ADDSET_Pos: u32 = 0;
pub const FMC_BTR1_ADDSET_Msk: u32 = 0xF << FMC_BTR1_ADDSET_Pos;
pub const FMC_BTR1_ADDSET: u32 = FMC_BTR1_ADDSET_Msk;
pub const FMC_BTR1_ADDSET_0: u32 = 0x1 << FMC_BTR1_ADDSET_Pos;
pub const FMC_BTR1_ADDSET_1: u32 = 0x2 << FMC_BTR1_ADDSET_Pos;
pub const FMC_BTR1_ADDSET_2: u32 = 0x4 << FMC_BTR1_ADDSET_Pos;
pub const FMC_BTR1_ADDSET_3: u32 = 0x8 << FMC_BTR1_ADDSET_Pos;
pub const FMC_BTR1_ADDHLD_Pos: u32 = 4;
pub const FMC_BTR1_ADDHLD_Msk: u32 = 0xF << FMC_BTR1_ADDHLD_Pos;
pub const FMC_BTR1_ADDHLD: u32 = FMC_BTR1_ADDHLD_Msk;
pub const FMC_BTR1_ADDHLD_0: u32 = 0x1 << FMC_BTR1_ADDHLD_Pos;
pub const FMC_BTR1_ADDHLD_1: u32 = 0x2 << FMC_BTR1_ADDHLD_Pos;
pub const FMC_BTR1_ADDHLD_2: u32 = 0x4 << FMC_BTR1_ADDHLD_Pos;
pub const FMC_BTR1_ADDHLD_3: u32 = 0x8 << FMC_BTR1_ADDHLD_Pos;
pub const FMC_BTR1_DATAST_Pos: u32 = 8;
pub const FMC_BTR1_DATAST_Msk: u32 = 0xFF << FMC_BTR1_DATAST_Pos;
pub const FMC_BTR1_DATAST: u32 = FMC_BTR1_DATAST_Msk;
pub const FMC_BTR1_DATAST_0: u32 = 0x01 << FMC_BTR1_DATAST_Pos;
pub const FMC_BTR1_DATAST_1: u32 = 0x02 << FMC_BTR1_DATAST_Pos;
pub const FMC_BTR1_DATAST_2: u32 = 0x04 << FMC_BTR1_DATAST_Pos;
pub const FMC_BTR1_DATAST_3: u32 = 0x08 << FMC_BTR1_DATAST_Pos;
pub const FMC_BTR1_DATAST_4: u32 = 0x10 << FMC_BTR1_DATAST_Pos;
pub const FMC_BTR1_DATAST_5: u32 = 0x20 << FMC_BTR1_DATAST_Pos;
pub const FMC_BTR1_DATAST_6: u32 = 0x40 << FMC_BTR1_DATAST_Pos;
pub const FMC_BTR1_DATAST_7: u32 = 0x80 << FMC_BTR1_DATAST_Pos;
pub const FMC_BTR1_BUSTURN_Pos: u32 = 16;
pub const FMC_BTR1_BUSTURN_Msk: u32 = 0xF << FMC_BTR1_BUSTURN_Pos;
pub const FMC_BTR1_BUSTURN: u32 = FMC_BTR1_BUSTURN_Msk;
pub const FMC_BTR1_BUSTURN_0: u32 = 0x1 << FMC_BTR1_BUSTURN_Pos;
pub const FMC_BTR1_BUSTURN_1: u32 = 0x2 << FMC_BTR1_BUSTURN_Pos;
pub const FMC_BTR1_BUSTURN_2: u32 = 0x4 << FMC_BTR1_BUSTURN_Pos;
pub const FMC_BTR1_BUSTURN_3: u32 = 0x8 << FMC_BTR1_BUSTURN_Pos;
pub const FMC_BTR1_CLKDIV_Pos: u32 = 20;
pub const FMC_BTR1_CLKDIV_Msk: u32 = 0xF << FMC_BTR1_CLKDIV_Pos;
pub const FMC_BTR1_CLKDIV: u32 = FMC_BTR1_CLKDIV_Msk;
pub const FMC_BTR1_CLKDIV_0: u32 = 0x1 << FMC_BTR1_CLKDIV_Pos;
pub const FMC_BTR1_CLKDIV_1: u32 = 0x2 << FMC_BTR1_CLKDIV_Pos;
pub const FMC_BTR1_CLKDIV_2: u32 = 0x4 << FMC_BTR1_CLKDIV_Pos;
pub const FMC_BTR1_CLKDIV_3: u32 = 0x8 << FMC_BTR1_CLKDIV_Pos;
pub const FMC_BTR1_DATLAT_Pos: u32 = 24;
pub const FMC_BTR1_DATLAT_Msk: u32 = 0xF << FMC_BTR1_DATLAT_Pos;
pub const FMC_BTR1_DATLAT: u32 = FMC_BTR1_DATLAT_Msk;
pub const FMC_BTR1_DATLAT_0: u32 = 0x1 << FMC_BTR1_DATLAT_Pos;
pub const FMC_BTR1_DATLAT_1: u32 = 0x2 << FMC_BTR1_DATLAT_Pos;
pub const FMC_BTR1_DATLAT_2: u32 = 0x4 << FMC_BTR1_DATLAT_Pos;
pub const FMC_BTR1_DATLAT_3: u32 = 0x8 << FMC_BTR1_DATLAT_Pos;
pub const FMC_BTR1_ACCMOD_Pos: u32 = 28;
pub const FMC_BTR1_ACCMOD_Msk: u32 = 0x3 << FMC_BTR1_ACCMOD_Pos;
pub const FMC_BTR1_ACCMOD: u32 = FMC_BTR1_ACCMOD_Msk;
pub const FMC_BTR1_ACCMOD_0: u32 = 0x1 << FMC_BTR1_ACCMOD_Pos;
pub const FMC_BTR1_ACCMOD_1: u32 = 0x2 << FMC_BTR1_ACCMOD_Pos;
pub const FMC_BTR2_ADDSET_Pos: u32 = 0;
pub const FMC_BTR2_ADDSET_Msk: u32 = 0xF << FMC_BTR2_ADDSET_Pos;
pub const FMC_BTR2_ADDSET: u32 = FMC_BTR2_ADDSET_Msk;
pub const FMC_BTR2_ADDSET_0: u32 = 0x1 << FMC_BTR2_ADDSET_Pos;
pub const FMC_BTR2_ADDSET_1: u32 = 0x2 << FMC_BTR2_ADDSET_Pos;
pub const FMC_BTR2_ADDSET_2: u32 = 0x4 << FMC_BTR2_ADDSET_Pos;
pub const FMC_BTR2_ADDSET_3: u32 = 0x8 << FMC_BTR2_ADDSET_Pos;
pub const FMC_BTR2_ADDHLD_Pos: u32 = 4;
pub const FMC_BTR2_ADDHLD_Msk: u32 = 0xF << FMC_BTR2_ADDHLD_Pos;
pub const FMC_BTR2_ADDHLD: u32 = FMC_BTR2_ADDHLD_Msk;
pub const FMC_BTR2_ADDHLD_0: u32 = 0x1 << FMC_BTR2_ADDHLD_Pos;
pub const FMC_BTR2_ADDHLD_1: u32 = 0x2 << FMC_BTR2_ADDHLD_Pos;
pub const FMC_BTR2_ADDHLD_2: u32 = 0x4 << FMC_BTR2_ADDHLD_Pos;
pub const FMC_BTR2_ADDHLD_3: u32 = 0x8 << FMC_BTR2_ADDHLD_Pos;
pub const FMC_BTR2_DATAST_Pos: u32 = 8;
pub const FMC_BTR2_DATAST_Msk: u32 = 0xFF << FMC_BTR2_DATAST_Pos;
pub const FMC_BTR2_DATAST: u32 = FMC_BTR2_DATAST_Msk;
pub const FMC_BTR2_DATAST_0: u32 = 0x01 << FMC_BTR2_DATAST_Pos;
pub const FMC_BTR2_DATAST_1: u32 = 0x02 << FMC_BTR2_DATAST_Pos;
pub const FMC_BTR2_DATAST_2: u32 = 0x04 << FMC_BTR2_DATAST_Pos;
pub const FMC_BTR2_DATAST_3: u32 = 0x08 << FMC_BTR2_DATAST_Pos;
pub const FMC_BTR2_DATAST_4: u32 = 0x10 << FMC_BTR2_DATAST_Pos;
pub const FMC_BTR2_DATAST_5: u32 = 0x20 << FMC_BTR2_DATAST_Pos;
pub const FMC_BTR2_DATAST_6: u32 = 0x40 << FMC_BTR2_DATAST_Pos;
pub const FMC_BTR2_DATAST_7: u32 = 0x80 << FMC_BTR2_DATAST_Pos;
pub const FMC_BTR2_BUSTURN_Pos: u32 = 16;
pub const FMC_BTR2_BUSTURN_Msk: u32 = 0xF << FMC_BTR2_BUSTURN_Pos;
pub const FMC_BTR2_BUSTURN: u32 = FMC_BTR2_BUSTURN_Msk;
pub const FMC_BTR2_BUSTURN_0: u32 = 0x1 << FMC_BTR2_BUSTURN_Pos;
pub const FMC_BTR2_BUSTURN_1: u32 = 0x2 << FMC_BTR2_BUSTURN_Pos;
pub const FMC_BTR2_BUSTURN_2: u32 = 0x4 << FMC_BTR2_BUSTURN_Pos;
pub const FMC_BTR2_BUSTURN_3: u32 = 0x8 << FMC_BTR2_BUSTURN_Pos;
pub const FMC_BTR2_CLKDIV_Pos: u32 = 20;
pub const FMC_BTR2_CLKDIV_Msk: u32 = 0xF << FMC_BTR2_CLKDIV_Pos;
pub const FMC_BTR2_CLKDIV: u32 = FMC_BTR2_CLKDIV_Msk;
pub const FMC_BTR2_CLKDIV_0: u32 = 0x1 << FMC_BTR2_CLKDIV_Pos;
pub const FMC_BTR2_CLKDIV_1: u32 = 0x2 << FMC_BTR2_CLKDIV_Pos;
pub const FMC_BTR2_CLKDIV_2: u32 = 0x4 << FMC_BTR2_CLKDIV_Pos;
pub const FMC_BTR2_CLKDIV_3: u32 = 0x8 << FMC_BTR2_CLKDIV_Pos;
pub const FMC_BTR2_DATLAT_Pos: u32 = 24;
pub const FMC_BTR2_DATLAT_Msk: u32 = 0xF << FMC_BTR2_DATLAT_Pos;
pub const FMC_BTR2_DATLAT: u32 = FMC_BTR2_DATLAT_Msk;
pub const FMC_BTR2_DATLAT_0: u32 = 0x1 << FMC_BTR2_DATLAT_Pos;
pub const FMC_BTR2_DATLAT_1: u32 = 0x2 << FMC_BTR2_DATLAT_Pos;
pub const FMC_BTR2_DATLAT_2: u32 = 0x4 << FMC_BTR2_DATLAT_Pos;
pub const FMC_BTR2_DATLAT_3: u32 = 0x8 << FMC_BTR2_DATLAT_Pos;
pub const FMC_BTR2_ACCMOD_Pos: u32 = 28;
pub const FMC_BTR2_ACCMOD_Msk: u32 = 0x3 << FMC_BTR2_ACCMOD_Pos;
pub const FMC_BTR2_ACCMOD: u32 = FMC_BTR2_ACCMOD_Msk;
pub const FMC_BTR2_ACCMOD_0: u32 = 0x1 << FMC_BTR2_ACCMOD_Pos;
pub const FMC_BTR2_ACCMOD_1: u32 = 0x2 << FMC_BTR2_ACCMOD_Pos;
pub const FMC_BTR3_ADDSET_Pos: u32 = 0;
pub const FMC_BTR3_ADDSET_Msk: u32 = 0xF << FMC_BTR3_ADDSET_Pos;
pub const FMC_BTR3_ADDSET: u32 = FMC_BTR3_ADDSET_Msk;
pub const FMC_BTR3_ADDSET_0: u32 = 0x1 << FMC_BTR3_ADDSET_Pos;
pub const FMC_BTR3_ADDSET_1: u32 = 0x2 << FMC_BTR3_ADDSET_Pos;
pub const FMC_BTR3_ADDSET_2: u32 = 0x4 << FMC_BTR3_ADDSET_Pos;
pub const FMC_BTR3_ADDSET_3: u32 = 0x8 << FMC_BTR3_ADDSET_Pos;
pub const FMC_BTR3_ADDHLD_Pos: u32 = 4;
pub const FMC_BTR3_ADDHLD_Msk: u32 = 0xF << FMC_BTR3_ADDHLD_Pos;
pub const FMC_BTR3_ADDHLD: u32 = FMC_BTR3_ADDHLD_Msk;
pub const FMC_BTR3_ADDHLD_0: u32 = 0x1 << FMC_BTR3_ADDHLD_Pos;
pub const FMC_BTR3_ADDHLD_1: u32 = 0x2 << FMC_BTR3_ADDHLD_Pos;
pub const FMC_BTR3_ADDHLD_2: u32 = 0x4 << FMC_BTR3_ADDHLD_Pos;
pub const FMC_BTR3_ADDHLD_3: u32 = 0x8 << FMC_BTR3_ADDHLD_Pos;
pub const FMC_BTR3_DATAST_Pos: u32 = 8;
pub const FMC_BTR3_DATAST_Msk: u32 = 0xFF << FMC_BTR3_DATAST_Pos;
pub const FMC_BTR3_DATAST: u32 = FMC_BTR3_DATAST_Msk;
pub const FMC_BTR3_DATAST_0: u32 = 0x01 << FMC_BTR3_DATAST_Pos;
pub const FMC_BTR3_DATAST_1: u32 = 0x02 << FMC_BTR3_DATAST_Pos;
pub const FMC_BTR3_DATAST_2: u32 = 0x04 << FMC_BTR3_DATAST_Pos;
pub const FMC_BTR3_DATAST_3: u32 = 0x08 << FMC_BTR3_DATAST_Pos;
pub const FMC_BTR3_DATAST_4: u32 = 0x10 << FMC_BTR3_DATAST_Pos;
pub const FMC_BTR3_DATAST_5: u32 = 0x20 << FMC_BTR3_DATAST_Pos;
pub const FMC_BTR3_DATAST_6: u32 = 0x40 << FMC_BTR3_DATAST_Pos;
pub const FMC_BTR3_DATAST_7: u32 = 0x80 << FMC_BTR3_DATAST_Pos;
pub const FMC_BTR3_BUSTURN_Pos: u32 = 16;
pub const FMC_BTR3_BUSTURN_Msk: u32 = 0xF << FMC_BTR3_BUSTURN_Pos;
pub const FMC_BTR3_BUSTURN: u32 = FMC_BTR3_BUSTURN_Msk;
pub const FMC_BTR3_BUSTURN_0: u32 = 0x1 << FMC_BTR3_BUSTURN_Pos;
pub const FMC_BTR3_BUSTURN_1: u32 = 0x2 << FMC_BTR3_BUSTURN_Pos;
pub const FMC_BTR3_BUSTURN_2: u32 = 0x4 << FMC_BTR3_BUSTURN_Pos;
pub const FMC_BTR3_BUSTURN_3: u32 = 0x8 << FMC_BTR3_BUSTURN_Pos;
pub const FMC_BTR3_CLKDIV_Pos: u32 = 20;
pub const FMC_BTR3_CLKDIV_Msk: u32 = 0xF << FMC_BTR3_CLKDIV_Pos;
pub const FMC_BTR3_CLKDIV: u32 = FMC_BTR3_CLKDIV_Msk;
pub const FMC_BTR3_CLKDIV_0: u32 = 0x1 << FMC_BTR3_CLKDIV_Pos;
pub const FMC_BTR3_CLKDIV_1: u32 = 0x2 << FMC_BTR3_CLKDIV_Pos;
pub const FMC_BTR3_CLKDIV_2: u32 = 0x4 << FMC_BTR3_CLKDIV_Pos;
pub const FMC_BTR3_CLKDIV_3: u32 = 0x8 << FMC_BTR3_CLKDIV_Pos;
pub const FMC_BTR3_DATLAT_Pos: u32 = 24;
pub const FMC_BTR3_DATLAT_Msk: u32 = 0xF << FMC_BTR3_DATLAT_Pos;
pub const FMC_BTR3_DATLAT: u32 = FMC_BTR3_DATLAT_Msk;
pub const FMC_BTR3_DATLAT_0: u32 = 0x1 << FMC_BTR3_DATLAT_Pos;
pub const FMC_BTR3_DATLAT_1: u32 = 0x2 << FMC_BTR3_DATLAT_Pos;
pub const FMC_BTR3_DATLAT_2: u32 = 0x4 << FMC_BTR3_DATLAT_Pos;
pub const FMC_BTR3_DATLAT_3: u32 = 0x8 << FMC_BTR3_DATLAT_Pos;
pub const FMC_BTR3_ACCMOD_Pos: u32 = 28;
pub const FMC_BTR3_ACCMOD_Msk: u32 = 0x3 << FMC_BTR3_ACCMOD_Pos;
pub const FMC_BTR3_ACCMOD: u32 = FMC_BTR3_ACCMOD_Msk;
pub const FMC_BTR3_ACCMOD_0: u32 = 0x1 << FMC_BTR3_ACCMOD_Pos;
pub const FMC_BTR3_ACCMOD_1: u32 = 0x2 << FMC_BTR3_ACCMOD_Pos;
pub const FMC_BTR4_ADDSET_Pos: u32 = 0;
pub const FMC_BTR4_ADDSET_Msk: u32 = 0xF << FMC_BTR4_ADDSET_Pos;
pub const FMC_BTR4_ADDSET: u32 = FMC_BTR4_ADDSET_Msk;
pub const FMC_BTR4_ADDSET_0: u32 = 0x1 << FMC_BTR4_ADDSET_Pos;
pub const FMC_BTR4_ADDSET_1: u32 = 0x2 << FMC_BTR4_ADDSET_Pos;
pub const FMC_BTR4_ADDSET_2: u32 = 0x4 << FMC_BTR4_ADDSET_Pos;
pub const FMC_BTR4_ADDSET_3: u32 = 0x8 << FMC_BTR4_ADDSET_Pos;
pub const FMC_BTR4_ADDHLD_Pos: u32 = 4;
pub const FMC_BTR4_ADDHLD_Msk: u32 = 0xF << FMC_BTR4_ADDHLD_Pos;
pub const FMC_BTR4_ADDHLD: u32 = FMC_BTR4_ADDHLD_Msk;
pub const FMC_BTR4_ADDHLD_0: u32 = 0x1 << FMC_BTR4_ADDHLD_Pos;
pub const FMC_BTR4_ADDHLD_1: u32 = 0x2 << FMC_BTR4_ADDHLD_Pos;
pub const FMC_BTR4_ADDHLD_2: u32 = 0x4 << FMC_BTR4_ADDHLD_Pos;
pub const FMC_BTR4_ADDHLD_3: u32 = 0x8 << FMC_BTR4_ADDHLD_Pos;
pub const FMC_BTR4_DATAST_Pos: u32 = 8;
pub const FMC_BTR4_DATAST_Msk: u32 = 0xFF << FMC_BTR4_DATAST_Pos;
pub const FMC_BTR4_DATAST: u32 = FMC_BTR4_DATAST_Msk;
pub const FMC_BTR4_DATAST_0: u32 = 0x01 << FMC_BTR4_DATAST_Pos;
pub const FMC_BTR4_DATAST_1: u32 = 0x02 << FMC_BTR4_DATAST_Pos;
pub const FMC_BTR4_DATAST_2: u32 = 0x04 << FMC_BTR4_DATAST_Pos;
pub const FMC_BTR4_DATAST_3: u32 = 0x08 << FMC_BTR4_DATAST_Pos;
pub const FMC_BTR4_DATAST_4: u32 = 0x10 << FMC_BTR4_DATAST_Pos;
pub const FMC_BTR4_DATAST_5: u32 = 0x20 << FMC_BTR4_DATAST_Pos;
pub const FMC_BTR4_DATAST_6: u32 = 0x40 << FMC_BTR4_DATAST_Pos;
pub const FMC_BTR4_DATAST_7: u32 = 0x80 << FMC_BTR4_DATAST_Pos;
pub const FMC_BTR4_BUSTURN_Pos: u32 = 16;
pub const FMC_BTR4_BUSTURN_Msk: u32 = 0xF << FMC_BTR4_BUSTURN_Pos;
pub const FMC_BTR4_BUSTURN: u32 = FMC_BTR4_BUSTURN_Msk;
pub const FMC_BTR4_BUSTURN_0: u32 = 0x1 << FMC_BTR4_BUSTURN_Pos;
pub const FMC_BTR4_BUSTURN_1: u32 = 0x2 << FMC_BTR4_BUSTURN_Pos;
pub const FMC_BTR4_BUSTURN_2: u32 = 0x4 << FMC_BTR4_BUSTURN_Pos;
pub const FMC_BTR4_BUSTURN_3: u32 = 0x8 << FMC_BTR4_BUSTURN_Pos;
pub const FMC_BTR4_CLKDIV_Pos: u32 = 20;
pub const FMC_BTR4_CLKDIV_Msk: u32 = 0xF << FMC_BTR4_CLKDIV_Pos;
pub const FMC_BTR4_CLKDIV: u32 = FMC_BTR4_CLKDIV_Msk;
pub const FMC_BTR4_CLKDIV_0: u32 = 0x1 << FMC_BTR4_CLKDIV_Pos;
pub const FMC_BTR4_CLKDIV_1: u32 = 0x2 << FMC_BTR4_CLKDIV_Pos;
pub const FMC_BTR4_CLKDIV_2: u32 = 0x4 << FMC_BTR4_CLKDIV_Pos;
pub const FMC_BTR4_CLKDIV_3: u32 = 0x8 << FMC_BTR4_CLKDIV_Pos;
pub const FMC_BTR4_DATLAT_Pos: u32 = 24;
pub const FMC_BTR4_DATLAT_Msk: u32 = 0xF << FMC_BTR4_DATLAT_Pos;
pub const FMC_BTR4_DATLAT: u32 = FMC_BTR4_DATLAT_Msk;
pub const FMC_BTR4_DATLAT_0: u32 = 0x1 << FMC_BTR4_DATLAT_Pos;
pub const FMC_BTR4_DATLAT_1: u32 = 0x2 << FMC_BTR4_DATLAT_Pos;
pub const FMC_BTR4_DATLAT_2: u32 = 0x4 << FMC_BTR4_DATLAT_Pos;
pub const FMC_BTR4_DATLAT_3: u32 = 0x8 << FMC_BTR4_DATLAT_Pos;
pub const FMC_BTR4_ACCMOD_Pos: u32 = 28;
pub const FMC_BTR4_ACCMOD_Msk: u32 = 0x3 << FMC_BTR4_ACCMOD_Pos;
pub const FMC_BTR4_ACCMOD: u32 = FMC_BTR4_ACCMOD_Msk;
pub const FMC_BTR4_ACCMOD_0: u32 = 0x1 << FMC_BTR4_ACCMOD_Pos;
pub const FMC_BTR4_ACCMOD_1: u32 = 0x2 << FMC_BTR4_ACCMOD_Pos;
pub const FMC_BWTR1_ADDSET_Pos: u32 = 0;
pub const FMC_BWTR1_ADDSET_Msk: u32 = 0xF << FMC_BWTR1_ADDSET_Pos;
pub const FMC_BWTR1_ADDSET: u32 = FMC_BWTR1_ADDSET_Msk;
pub const FMC_BWTR1_ADDSET_0: u32 = 0x1 << FMC_BWTR1_ADDSET_Pos;
pub const FMC_BWTR1_ADDSET_1: u32 = 0x2 << FMC_BWTR1_ADDSET_Pos;
pub const FMC_BWTR1_ADDSET_2: u32 = 0x4 << FMC_BWTR1_ADDSET_Pos;
pub const FMC_BWTR1_ADDSET_3: u32 = 0x8 << FMC_BWTR1_ADDSET_Pos;
pub const FMC_BWTR1_ADDHLD_Pos: u32 = 4;
pub const FMC_BWTR1_ADDHLD_Msk: u32 = 0xF << FMC_BWTR1_ADDHLD_Pos;
pub const FMC_BWTR1_ADDHLD: u32 = FMC_BWTR1_ADDHLD_Msk;
pub const FMC_BWTR1_ADDHLD_0: u32 = 0x1 << FMC_BWTR1_ADDHLD_Pos;
pub const FMC_BWTR1_ADDHLD_1: u32 = 0x2 << FMC_BWTR1_ADDHLD_Pos;
pub const FMC_BWTR1_ADDHLD_2: u32 = 0x4 << FMC_BWTR1_ADDHLD_Pos;
pub const FMC_BWTR1_ADDHLD_3: u32 = 0x8 << FMC_BWTR1_ADDHLD_Pos;
pub const FMC_BWTR1_DATAST_Pos: u32 = 8;
pub const FMC_BWTR1_DATAST_Msk: u32 = 0xFF << FMC_BWTR1_DATAST_Pos;
pub const FMC_BWTR1_DATAST: u32 = FMC_BWTR1_DATAST_Msk;
pub const FMC_BWTR1_DATAST_0: u32 = 0x01 << FMC_BWTR1_DATAST_Pos;
pub const FMC_BWTR1_DATAST_1: u32 = 0x02 << FMC_BWTR1_DATAST_Pos;
pub const FMC_BWTR1_DATAST_2: u32 = 0x04 << FMC_BWTR1_DATAST_Pos;
pub const FMC_BWTR1_DATAST_3: u32 = 0x08 << FMC_BWTR1_DATAST_Pos;
pub const FMC_BWTR1_DATAST_4: u32 = 0x10 << FMC_BWTR1_DATAST_Pos;
pub const FMC_BWTR1_DATAST_5: u32 = 0x20 << FMC_BWTR1_DATAST_Pos;
pub const FMC_BWTR1_DATAST_6: u32 = 0x40 << FMC_BWTR1_DATAST_Pos;
pub const FMC_BWTR1_DATAST_7: u32 = 0x80 << FMC_BWTR1_DATAST_Pos;
pub const FMC_BWTR1_BUSTURN_Pos: u32 = 16;
pub const FMC_BWTR1_BUSTURN_Msk: u32 = 0xF << FMC_BWTR1_BUSTURN_Pos;
pub const FMC_BWTR1_BUSTURN: u32 = FMC_BWTR1_BUSTURN_Msk;
pub const FMC_BWTR1_BUSTURN_0: u32 = 0x1 << FMC_BWTR1_BUSTURN_Pos;
pub const FMC_BWTR1_BUSTURN_1: u32 = 0x2 << FMC_BWTR1_BUSTURN_Pos;
pub const FMC_BWTR1_BUSTURN_2: u32 = 0x4 << FMC_BWTR1_BUSTURN_Pos;
pub const FMC_BWTR1_BUSTURN_3: u32 = 0x8 << FMC_BWTR1_BUSTURN_Pos;
pub const FMC_BWTR1_ACCMOD_Pos: u32 = 28;
pub const FMC_BWTR1_ACCMOD_Msk: u32 = 0x3 << FMC_BWTR1_ACCMOD_Pos;
pub const FMC_BWTR1_ACCMOD: u32 = FMC_BWTR1_ACCMOD_Msk;
pub const FMC_BWTR1_ACCMOD_0: u32 = 0x1 << FMC_BWTR1_ACCMOD_Pos;
pub const FMC_BWTR1_ACCMOD_1: u32 = 0x2 << FMC_BWTR1_ACCMOD_Pos;
pub const FMC_BWTR2_ADDSET_Pos: u32 = 0;
pub const FMC_BWTR2_ADDSET_Msk: u32 = 0xF << FMC_BWTR2_ADDSET_Pos;
pub const FMC_BWTR2_ADDSET: u32 = FMC_BWTR2_ADDSET_Msk;
pub const FMC_BWTR2_ADDSET_0: u32 = 0x1 << FMC_BWTR2_ADDSET_Pos;
pub const FMC_BWTR2_ADDSET_1: u32 = 0x2 << FMC_BWTR2_ADDSET_Pos;
pub const FMC_BWTR2_ADDSET_2: u32 = 0x4 << FMC_BWTR2_ADDSET_Pos;
pub const FMC_BWTR2_ADDSET_3: u32 = 0x8 << FMC_BWTR2_ADDSET_Pos;
pub const FMC_BWTR2_ADDHLD_Pos: u32 = 4;
pub const FMC_BWTR2_ADDHLD_Msk: u32 = 0xF << FMC_BWTR2_ADDHLD_Pos;
pub const FMC_BWTR2_ADDHLD: u32 = FMC_BWTR2_ADDHLD_Msk;
pub const FMC_BWTR2_ADDHLD_0: u32 = 0x1 << FMC_BWTR2_ADDHLD_Pos;
pub const FMC_BWTR2_ADDHLD_1: u32 = 0x2 << FMC_BWTR2_ADDHLD_Pos;
pub const FMC_BWTR2_ADDHLD_2: u32 = 0x4 << FMC_BWTR2_ADDHLD_Pos;
pub const FMC_BWTR2_ADDHLD_3: u32 = 0x8 << FMC_BWTR2_ADDHLD_Pos;
pub const FMC_BWTR2_DATAST_Pos: u32 = 8;
pub const FMC_BWTR2_DATAST_Msk: u32 = 0xFF << FMC_BWTR2_DATAST_Pos;
pub const FMC_BWTR2_DATAST: u32 = FMC_BWTR2_DATAST_Msk;
pub const FMC_BWTR2_DATAST_0: u32 = 0x01 << FMC_BWTR2_DATAST_Pos;
pub const FMC_BWTR2_DATAST_1: u32 = 0x02 << FMC_BWTR2_DATAST_Pos;
pub const FMC_BWTR2_DATAST_2: u32 = 0x04 << FMC_BWTR2_DATAST_Pos;
pub const FMC_BWTR2_DATAST_3: u32 = 0x08 << FMC_BWTR2_DATAST_Pos;
pub const FMC_BWTR2_DATAST_4: u32 = 0x10 << FMC_BWTR2_DATAST_Pos;
pub const FMC_BWTR2_DATAST_5: u32 = 0x20 << FMC_BWTR2_DATAST_Pos;
pub const FMC_BWTR2_DATAST_6: u32 = 0x40 << FMC_BWTR2_DATAST_Pos;
pub const FMC_BWTR2_DATAST_7: u32 = 0x80 << FMC_BWTR2_DATAST_Pos;
pub const FMC_BWTR2_BUSTURN_Pos: u32 = 16;
pub const FMC_BWTR2_BUSTURN_Msk: u32 = 0xF << FMC_BWTR2_BUSTURN_Pos;
pub const FMC_BWTR2_BUSTURN: u32 = FMC_BWTR2_BUSTURN_Msk;
pub const FMC_BWTR2_BUSTURN_0: u32 = 0x1 << FMC_BWTR2_BUSTURN_Pos;
pub const FMC_BWTR2_BUSTURN_1: u32 = 0x2 << FMC_BWTR2_BUSTURN_Pos;
pub const FMC_BWTR2_BUSTURN_2: u32 = 0x4 << FMC_BWTR2_BUSTURN_Pos;
pub const FMC_BWTR2_BUSTURN_3: u32 = 0x8 << FMC_BWTR2_BUSTURN_Pos;
pub const FMC_BWTR2_ACCMOD_Pos: u32 = 28;
pub const FMC_BWTR2_ACCMOD_Msk: u32 = 0x3 << FMC_BWTR2_ACCMOD_Pos;
pub const FMC_BWTR2_ACCMOD: u32 = FMC_BWTR2_ACCMOD_Msk;
pub const FMC_BWTR2_ACCMOD_0: u32 = 0x1 << FMC_BWTR2_ACCMOD_Pos;
pub const FMC_BWTR2_ACCMOD_1: u32 = 0x2 << FMC_BWTR2_ACCMOD_Pos;
pub const FMC_BWTR3_ADDSET_Pos: u32 = 0;
pub const FMC_BWTR3_ADDSET_Msk: u32 = 0xF << FMC_BWTR3_ADDSET_Pos;
pub const FMC_BWTR3_ADDSET: u32 = FMC_BWTR3_ADDSET_Msk;
pub const FMC_BWTR3_ADDSET_0: u32 = 0x1 << FMC_BWTR3_ADDSET_Pos;
pub const FMC_BWTR3_ADDSET_1: u32 = 0x2 << FMC_BWTR3_ADDSET_Pos;
pub const FMC_BWTR3_ADDSET_2: u32 = 0x4 << FMC_BWTR3_ADDSET_Pos;
pub const FMC_BWTR3_ADDSET_3: u32 = 0x8 << FMC_BWTR3_ADDSET_Pos;
pub const FMC_BWTR3_ADDHLD_Pos: u32 = 4;
pub const FMC_BWTR3_ADDHLD_Msk: u32 = 0xF << FMC_BWTR3_ADDHLD_Pos;
pub const FMC_BWTR3_ADDHLD: u32 = FMC_BWTR3_ADDHLD_Msk;
pub const FMC_BWTR3_ADDHLD_0: u32 = 0x1 << FMC_BWTR3_ADDHLD_Pos;
pub const FMC_BWTR3_ADDHLD_1: u32 = 0x2 << FMC_BWTR3_ADDHLD_Pos;
pub const FMC_BWTR3_ADDHLD_2: u32 = 0x4 << FMC_BWTR3_ADDHLD_Pos;
pub const FMC_BWTR3_ADDHLD_3: u32 = 0x8 << FMC_BWTR3_ADDHLD_Pos;
pub const FMC_BWTR3_DATAST_Pos: u32 = 8;
pub const FMC_BWTR3_DATAST_Msk: u32 = 0xFF << FMC_BWTR3_DATAST_Pos;
pub const FMC_BWTR3_DATAST: u32 = FMC_BWTR3_DATAST_Msk;
pub const FMC_BWTR3_DATAST_0: u32 = 0x01 << FMC_BWTR3_DATAST_Pos;
pub const FMC_BWTR3_DATAST_1: u32 = 0x02 << FMC_BWTR3_DATAST_Pos;
pub const FMC_BWTR3_DATAST_2: u32 = 0x04 << FMC_BWTR3_DATAST_Pos;
pub const FMC_BWTR3_DATAST_3: u32 = 0x08 << FMC_BWTR3_DATAST_Pos;
pub const FMC_BWTR3_DATAST_4: u32 = 0x10 << FMC_BWTR3_DATAST_Pos;
pub const FMC_BWTR3_DATAST_5: u32 = 0x20 << FMC_BWTR3_DATAST_Pos;
pub const FMC_BWTR3_DATAST_6: u32 = 0x40 << FMC_BWTR3_DATAST_Pos;
pub const FMC_BWTR3_DATAST_7: u32 = 0x80 << FMC_BWTR3_DATAST_Pos;
pub const FMC_BWTR3_BUSTURN_Pos: u32 = 16;
pub const FMC_BWTR3_BUSTURN_Msk: u32 = 0xF << FMC_BWTR3_BUSTURN_Pos;
pub const FMC_BWTR3_BUSTURN: u32 = FMC_BWTR3_BUSTURN_Msk;
pub const FMC_BWTR3_BUSTURN_0: u32 = 0x1 << FMC_BWTR3_BUSTURN_Pos;
pub const FMC_BWTR3_BUSTURN_1: u32 = 0x2 << FMC_BWTR3_BUSTURN_Pos;
pub const FMC_BWTR3_BUSTURN_2: u32 = 0x4 << FMC_BWTR3_BUSTURN_Pos;
pub const FMC_BWTR3_BUSTURN_3: u32 = 0x8 << FMC_BWTR3_BUSTURN_Pos;
pub const FMC_BWTR3_ACCMOD_Pos: u32 = 28;
pub const FMC_BWTR3_ACCMOD_Msk: u32 = 0x3 << FMC_BWTR3_ACCMOD_Pos;
pub const FMC_BWTR3_ACCMOD: u32 = FMC_BWTR3_ACCMOD_Msk;
pub const FMC_BWTR3_ACCMOD_0: u32 = 0x1 << FMC_BWTR3_ACCMOD_Pos;
pub const FMC_BWTR3_ACCMOD_1: u32 = 0x2 << FMC_BWTR3_ACCMOD_Pos;
pub const FMC_BWTR4_ADDSET_Pos: u32 = 0;
pub const FMC_BWTR4_ADDSET_Msk: u32 = 0xF << FMC_BWTR4_ADDSET_Pos;
pub const FMC_BWTR4_ADDSET: u32 = FMC_BWTR4_ADDSET_Msk;
pub const FMC_BWTR4_ADDSET_0: u32 = 0x1 << FMC_BWTR4_ADDSET_Pos;
pub const FMC_BWTR4_ADDSET_1: u32 = 0x2 << FMC_BWTR4_ADDSET_Pos;
pub const FMC_BWTR4_ADDSET_2: u32 = 0x4 << FMC_BWTR4_ADDSET_Pos;
pub const FMC_BWTR4_ADDSET_3: u32 = 0x8 << FMC_BWTR4_ADDSET_Pos;
pub const FMC_BWTR4_ADDHLD_Pos: u32 = 4;
pub const FMC_BWTR4_ADDHLD_Msk: u32 = 0xF << FMC_BWTR4_ADDHLD_Pos;
pub const FMC_BWTR4_ADDHLD: u32 = FMC_BWTR4_ADDHLD_Msk;
pub const FMC_BWTR4_ADDHLD_0: u32 = 0x1 << FMC_BWTR4_ADDHLD_Pos;
pub const FMC_BWTR4_ADDHLD_1: u32 = 0x2 << FMC_BWTR4_ADDHLD_Pos;
pub const FMC_BWTR4_ADDHLD_2: u32 = 0x4 << FMC_BWTR4_ADDHLD_Pos;
pub const FMC_BWTR4_ADDHLD_3: u32 = 0x8 << FMC_BWTR4_ADDHLD_Pos;
pub const FMC_BWTR4_DATAST_Pos: u32 = 8;
pub const FMC_BWTR4_DATAST_Msk: u32 = 0xFF << FMC_BWTR4_DATAST_Pos;
pub const FMC_BWTR4_DATAST: u32 = FMC_BWTR4_DATAST_Msk;
pub const FMC_BWTR4_DATAST_0: u32 = 0x01 << FMC_BWTR4_DATAST_Pos;
pub const FMC_BWTR4_DATAST_1: u32 = 0x02 << FMC_BWTR4_DATAST_Pos;
pub const FMC_BWTR4_DATAST_2: u32 = 0x04 << FMC_BWTR4_DATAST_Pos;
pub const FMC_BWTR4_DATAST_3: u32 = 0x08 << FMC_BWTR4_DATAST_Pos;
pub const FMC_BWTR4_DATAST_4: u32 = 0x10 << FMC_BWTR4_DATAST_Pos;
pub const FMC_BWTR4_DATAST_5: u32 = 0x20 << FMC_BWTR4_DATAST_Pos;
pub const FMC_BWTR4_DATAST_6: u32 = 0x40 << FMC_BWTR4_DATAST_Pos;
pub const FMC_BWTR4_DATAST_7: u32 = 0x80 << FMC_BWTR4_DATAST_Pos;
pub const FMC_BWTR4_BUSTURN_Pos: u32 = 16;
pub const FMC_BWTR4_BUSTURN_Msk: u32 = 0xF << FMC_BWTR4_BUSTURN_Pos;
pub const FMC_BWTR4_BUSTURN: u32 = FMC_BWTR4_BUSTURN_Msk;
pub const FMC_BWTR4_BUSTURN_0: u32 = 0x1 << FMC_BWTR4_BUSTURN_Pos;
pub const FMC_BWTR4_BUSTURN_1: u32 = 0x2 << FMC_BWTR4_BUSTURN_Pos;
pub const FMC_BWTR4_BUSTURN_2: u32 = 0x4 << FMC_BWTR4_BUSTURN_Pos;
pub const FMC_BWTR4_BUSTURN_3: u32 = 0x8 << FMC_BWTR4_BUSTURN_Pos;
pub const FMC_BWTR4_ACCMOD_Pos: u32 = 28;
pub const FMC_BWTR4_ACCMOD_Msk: u32 = 0x3 << FMC_BWTR4_ACCMOD_Pos;
pub const FMC_BWTR4_ACCMOD: u32 = FMC_BWTR4_ACCMOD_Msk;
pub const FMC_BWTR4_ACCMOD_0: u32 = 0x1 << FMC_BWTR4_ACCMOD_Pos;
pub const FMC_BWTR4_ACCMOD_1: u32 = 0x2 << FMC_BWTR4_ACCMOD_Pos;
pub const FMC_PCR_PWAITEN_Pos: u32 = 1;
pub const FMC_PCR_PWAITEN_Msk: u32 = 0x1 << FMC_PCR_PWAITEN_Pos;
pub const FMC_PCR_PWAITEN: u32 = FMC_PCR_PWAITEN_Msk;
pub const FMC_PCR_PBKEN_Pos: u32 = 2;
pub const FMC_PCR_PBKEN_Msk: u32 = 0x1 << FMC_PCR_PBKEN_Pos;
pub const FMC_PCR_PBKEN: u32 = FMC_PCR_PBKEN_Msk;
pub const FMC_PCR_PTYP_Pos: u32 = 3;
pub const FMC_PCR_PTYP_Msk: u32 = 0x1 << FMC_PCR_PTYP_Pos;
pub const FMC_PCR_PTYP: u32 = FMC_PCR_PTYP_Msk;
pub const FMC_PCR_PWID_Pos: u32 = 4;
pub const FMC_PCR_PWID_Msk: u32 = 0x3 << FMC_PCR_PWID_Pos;
pub const FMC_PCR_PWID: u32 = FMC_PCR_PWID_Msk;
pub const FMC_PCR_PWID_0: u32 = 0x1 << FMC_PCR_PWID_Pos;
pub const FMC_PCR_PWID_1: u32 = 0x2 << FMC_PCR_PWID_Pos;
pub const FMC_PCR_ECCEN_Pos: u32 = 6;
pub const FMC_PCR_ECCEN_Msk: u32 = 0x1 << FMC_PCR_ECCEN_Pos;
pub const FMC_PCR_ECCEN: u32 = FMC_PCR_ECCEN_Msk;
pub const FMC_PCR_TCLR_Pos: u32 = 9;
pub const FMC_PCR_TCLR_Msk: u32 = 0xF << FMC_PCR_TCLR_Pos;
pub const FMC_PCR_TCLR: u32 = FMC_PCR_TCLR_Msk;
pub const FMC_PCR_TCLR_0: u32 = 0x1 << FMC_PCR_TCLR_Pos;
pub const FMC_PCR_TCLR_1: u32 = 0x2 << FMC_PCR_TCLR_Pos;
pub const FMC_PCR_TCLR_2: u32 = 0x4 << FMC_PCR_TCLR_Pos;
pub const FMC_PCR_TCLR_3: u32 = 0x8 << FMC_PCR_TCLR_Pos;
pub const FMC_PCR_TAR_Pos: u32 = 13;
pub const FMC_PCR_TAR_Msk: u32 = 0xF << FMC_PCR_TAR_Pos;
pub const FMC_PCR_TAR: u32 = FMC_PCR_TAR_Msk;
pub const FMC_PCR_TAR_0: u32 = 0x1 << FMC_PCR_TAR_Pos;
pub const FMC_PCR_TAR_1: u32 = 0x2 << FMC_PCR_TAR_Pos;
pub const FMC_PCR_TAR_2: u32 = 0x4 << FMC_PCR_TAR_Pos;
pub const FMC_PCR_TAR_3: u32 = 0x8 << FMC_PCR_TAR_Pos;
pub const FMC_PCR_ECCPS_Pos: u32 = 17;
pub const FMC_PCR_ECCPS_Msk: u32 = 0x7 << FMC_PCR_ECCPS_Pos;
pub const FMC_PCR_ECCPS: u32 = FMC_PCR_ECCPS_Msk;
pub const FMC_PCR_ECCPS_0: u32 = 0x1 << FMC_PCR_ECCPS_Pos;
pub const FMC_PCR_ECCPS_1: u32 = 0x2 << FMC_PCR_ECCPS_Pos;
pub const FMC_PCR_ECCPS_2: u32 = 0x4 << FMC_PCR_ECCPS_Pos;
pub const FMC_SR_IRS_Pos: u32 = 0;
pub const FMC_SR_IRS_Msk: u32 = 0x1 << FMC_SR_IRS_Pos;
pub const FMC_SR_IRS: u32 = FMC_SR_IRS_Msk;
pub const FMC_SR_ILS_Pos: u32 = 1;
pub const FMC_SR_ILS_Msk: u32 = 0x1 << FMC_SR_ILS_Pos;
pub const FMC_SR_ILS: u32 = FMC_SR_ILS_Msk;
pub const FMC_SR_IFS_Pos: u32 = 2;
pub const FMC_SR_IFS_Msk: u32 = 0x1 << FMC_SR_IFS_Pos;
pub const FMC_SR_IFS: u32 = FMC_SR_IFS_Msk;
pub const FMC_SR_IREN_Pos: u32 = 3;
pub const FMC_SR_IREN_Msk: u32 = 0x1 << FMC_SR_IREN_Pos;
pub const FMC_SR_IREN: u32 = FMC_SR_IREN_Msk;
pub const FMC_SR_ILEN_Pos: u32 = 4;
pub const FMC_SR_ILEN_Msk: u32 = 0x1 << FMC_SR_ILEN_Pos;
pub const FMC_SR_ILEN: u32 = FMC_SR_ILEN_Msk;
pub const FMC_SR_IFEN_Pos: u32 = 5;
pub const FMC_SR_IFEN_Msk: u32 = 0x1 << FMC_SR_IFEN_Pos;
pub const FMC_SR_IFEN: u32 = FMC_SR_IFEN_Msk;
pub const FMC_SR_FEMPT_Pos: u32 = 6;
pub const FMC_SR_FEMPT_Msk: u32 = 0x1 << FMC_SR_FEMPT_Pos;
pub const FMC_SR_FEMPT: u32 = FMC_SR_FEMPT_Msk;
pub const FMC_PMEM_MEMSET3_Pos: u32 = 0;
pub const FMC_PMEM_MEMSET3_Msk: u32 = 0xFF << FMC_PMEM_MEMSET3_Pos;
pub const FMC_PMEM_MEMSET3: u32 = FMC_PMEM_MEMSET3_Msk;
pub const FMC_PMEM_MEMSET3_0: u32 = 0x01 << FMC_PMEM_MEMSET3_Pos;
pub const FMC_PMEM_MEMSET3_1: u32 = 0x02 << FMC_PMEM_MEMSET3_Pos;
pub const FMC_PMEM_MEMSET3_2: u32 = 0x04 << FMC_PMEM_MEMSET3_Pos;
pub const FMC_PMEM_MEMSET3_3: u32 = 0x08 << FMC_PMEM_MEMSET3_Pos;
pub const FMC_PMEM_MEMSET3_4: u32 = 0x10 << FMC_PMEM_MEMSET3_Pos;
pub const FMC_PMEM_MEMSET3_5: u32 = 0x20 << FMC_PMEM_MEMSET3_Pos;
pub const FMC_PMEM_MEMSET3_6: u32 = 0x40 << FMC_PMEM_MEMSET3_Pos;
pub const FMC_PMEM_MEMSET3_7: u32 = 0x80 << FMC_PMEM_MEMSET3_Pos;
pub const FMC_PMEM_MEMWAIT3_Pos: u32 = 8;
pub const FMC_PMEM_MEMWAIT3_Msk: u32 = 0xFF << FMC_PMEM_MEMWAIT3_Pos;
pub const FMC_PMEM_MEMWAIT3: u32 = FMC_PMEM_MEMWAIT3_Msk;
pub const FMC_PMEM_MEMWAIT3_0: u32 = 0x01 << FMC_PMEM_MEMWAIT3_Pos;
pub const FMC_PMEM_MEMWAIT3_1: u32 = 0x02 << FMC_PMEM_MEMWAIT3_Pos;
pub const FMC_PMEM_MEMWAIT3_2: u32 = 0x04 << FMC_PMEM_MEMWAIT3_Pos;
pub const FMC_PMEM_MEMWAIT3_3: u32 = 0x08 << FMC_PMEM_MEMWAIT3_Pos;
pub const FMC_PMEM_MEMWAIT3_4: u32 = 0x10 << FMC_PMEM_MEMWAIT3_Pos;
pub const FMC_PMEM_MEMWAIT3_5: u32 = 0x20 << FMC_PMEM_MEMWAIT3_Pos;
pub const FMC_PMEM_MEMWAIT3_6: u32 = 0x40 << FMC_PMEM_MEMWAIT3_Pos;
pub const FMC_PMEM_MEMWAIT3_7: u32 = 0x80 << FMC_PMEM_MEMWAIT3_Pos;
pub const FMC_PMEM_MEMHOLD3_Pos: u32 = 16;
pub const FMC_PMEM_MEMHOLD3_Msk: u32 = 0xFF << FMC_PMEM_MEMHOLD3_Pos;
pub const FMC_PMEM_MEMHOLD3: u32 = FMC_PMEM_MEMHOLD3_Msk;
pub const FMC_PMEM_MEMHOLD3_0: u32 = 0x01 << FMC_PMEM_MEMHOLD3_Pos;
pub const FMC_PMEM_MEMHOLD3_1: u32 = 0x02 << FMC_PMEM_MEMHOLD3_Pos;
pub const FMC_PMEM_MEMHOLD3_2: u32 = 0x04 << FMC_PMEM_MEMHOLD3_Pos;
pub const FMC_PMEM_MEMHOLD3_3: u32 = 0x08 << FMC_PMEM_MEMHOLD3_Pos;
pub const FMC_PMEM_MEMHOLD3_4: u32 = 0x10 << FMC_PMEM_MEMHOLD3_Pos;
pub const FMC_PMEM_MEMHOLD3_5: u32 = 0x20 << FMC_PMEM_MEMHOLD3_Pos;
pub const FMC_PMEM_MEMHOLD3_6: u32 = 0x40 << FMC_PMEM_MEMHOLD3_Pos;
pub const FMC_PMEM_MEMHOLD3_7: u32 = 0x80 << FMC_PMEM_MEMHOLD3_Pos;
pub const FMC_PMEM_MEMHIZ3_Pos: u32 = 24;
pub const FMC_PMEM_MEMHIZ3_Msk: u32 = 0xFF << FMC_PMEM_MEMHIZ3_Pos;
pub const FMC_PMEM_MEMHIZ3: u32 = FMC_PMEM_MEMHIZ3_Msk;
pub const FMC_PMEM_MEMHIZ3_0: u32 = 0x01 << FMC_PMEM_MEMHIZ3_Pos;
pub const FMC_PMEM_MEMHIZ3_1: u32 = 0x02 << FMC_PMEM_MEMHIZ3_Pos;
pub const FMC_PMEM_MEMHIZ3_2: u32 = 0x04 << FMC_PMEM_MEMHIZ3_Pos;
pub const FMC_PMEM_MEMHIZ3_3: u32 = 0x08 << FMC_PMEM_MEMHIZ3_Pos;
pub const FMC_PMEM_MEMHIZ3_4: u32 = 0x10 << FMC_PMEM_MEMHIZ3_Pos;
pub const FMC_PMEM_MEMHIZ3_5: u32 = 0x20 << FMC_PMEM_MEMHIZ3_Pos;
pub const FMC_PMEM_MEMHIZ3_6: u32 = 0x40 << FMC_PMEM_MEMHIZ3_Pos;
pub const FMC_PMEM_MEMHIZ3_7: u32 = 0x80 << FMC_PMEM_MEMHIZ3_Pos;
pub const FMC_PATT_ATTSET3_Pos: u32 = 0;
pub const FMC_PATT_ATTSET3_Msk: u32 = 0xFF << FMC_PATT_ATTSET3_Pos;
pub const FMC_PATT_ATTSET3: u32 = FMC_PATT_ATTSET3_Msk;
pub const FMC_PATT_ATTSET3_0: u32 = 0x01 << FMC_PATT_ATTSET3_Pos;
pub const FMC_PATT_ATTSET3_1: u32 = 0x02 << FMC_PATT_ATTSET3_Pos;
pub const FMC_PATT_ATTSET3_2: u32 = 0x04 << FMC_PATT_ATTSET3_Pos;
pub const FMC_PATT_ATTSET3_3: u32 = 0x08 << FMC_PATT_ATTSET3_Pos;
pub const FMC_PATT_ATTSET3_4: u32 = 0x10 << FMC_PATT_ATTSET3_Pos;
pub const FMC_PATT_ATTSET3_5: u32 = 0x20 << FMC_PATT_ATTSET3_Pos;
pub const FMC_PATT_ATTSET3_6: u32 = 0x40 << FMC_PATT_ATTSET3_Pos;
pub const FMC_PATT_ATTSET3_7: u32 = 0x80 << FMC_PATT_ATTSET3_Pos;
pub const FMC_PATT_ATTWAIT3_Pos: u32 = 8;
pub const FMC_PATT_ATTWAIT3_Msk: u32 = 0xFF << FMC_PATT_ATTWAIT3_Pos;
pub const FMC_PATT_ATTWAIT3: u32 = FMC_PATT_ATTWAIT3_Msk;
pub const FMC_PATT_ATTWAIT3_0: u32 = 0x01 << FMC_PATT_ATTWAIT3_Pos;
pub const FMC_PATT_ATTWAIT3_1: u32 = 0x02 << FMC_PATT_ATTWAIT3_Pos;
pub const FMC_PATT_ATTWAIT3_2: u32 = 0x04 << FMC_PATT_ATTWAIT3_Pos;
pub const FMC_PATT_ATTWAIT3_3: u32 = 0x08 << FMC_PATT_ATTWAIT3_Pos;
pub const FMC_PATT_ATTWAIT3_4: u32 = 0x10 << FMC_PATT_ATTWAIT3_Pos;
pub const FMC_PATT_ATTWAIT3_5: u32 = 0x20 << FMC_PATT_ATTWAIT3_Pos;
pub const FMC_PATT_ATTWAIT3_6: u32 = 0x40 << FMC_PATT_ATTWAIT3_Pos;
pub const FMC_PATT_ATTWAIT3_7: u32 = 0x80 << FMC_PATT_ATTWAIT3_Pos;
pub const FMC_PATT_ATTHOLD3_Pos: u32 = 16;
pub const FMC_PATT_ATTHOLD3_Msk: u32 = 0xFF << FMC_PATT_ATTHOLD3_Pos;
pub const FMC_PATT_ATTHOLD3: u32 = FMC_PATT_ATTHOLD3_Msk;
pub const FMC_PATT_ATTHOLD3_0: u32 = 0x01 << FMC_PATT_ATTHOLD3_Pos;
pub const FMC_PATT_ATTHOLD3_1: u32 = 0x02 << FMC_PATT_ATTHOLD3_Pos;
pub const FMC_PATT_ATTHOLD3_2: u32 = 0x04 << FMC_PATT_ATTHOLD3_Pos;
pub const FMC_PATT_ATTHOLD3_3: u32 = 0x08 << FMC_PATT_ATTHOLD3_Pos;
pub const FMC_PATT_ATTHOLD3_4: u32 = 0x10 << FMC_PATT_ATTHOLD3_Pos;
pub const FMC_PATT_ATTHOLD3_5: u32 = 0x20 << FMC_PATT_ATTHOLD3_Pos;
pub const FMC_PATT_ATTHOLD3_6: u32 = 0x40 << FMC_PATT_ATTHOLD3_Pos;
pub const FMC_PATT_ATTHOLD3_7: u32 = 0x80 << FMC_PATT_ATTHOLD3_Pos;
pub const FMC_PATT_ATTHIZ3_Pos: u32 = 24;
pub const FMC_PATT_ATTHIZ3_Msk: u32 = 0xFF << FMC_PATT_ATTHIZ3_Pos;
pub const FMC_PATT_ATTHIZ3: u32 = FMC_PATT_ATTHIZ3_Msk;
pub const FMC_PATT_ATTHIZ3_0: u32 = 0x01 << FMC_PATT_ATTHIZ3_Pos;
pub const FMC_PATT_ATTHIZ3_1: u32 = 0x02 << FMC_PATT_ATTHIZ3_Pos;
pub const FMC_PATT_ATTHIZ3_2: u32 = 0x04 << FMC_PATT_ATTHIZ3_Pos;
pub const FMC_PATT_ATTHIZ3_3: u32 = 0x08 << FMC_PATT_ATTHIZ3_Pos;
pub const FMC_PATT_ATTHIZ3_4: u32 = 0x10 << FMC_PATT_ATTHIZ3_Pos;
pub const FMC_PATT_ATTHIZ3_5: u32 = 0x20 << FMC_PATT_ATTHIZ3_Pos;
pub const FMC_PATT_ATTHIZ3_6: u32 = 0x40 << FMC_PATT_ATTHIZ3_Pos;
pub const FMC_PATT_ATTHIZ3_7: u32 = 0x80 << FMC_PATT_ATTHIZ3_Pos;
pub const FMC_ECCR_ECC3_Pos: u32 = 0;
pub const FMC_ECCR_ECC3_Msk: u32 = 0xFFFFFFFF << FMC_ECCR_ECC3_Pos;
pub const FMC_ECCR_ECC3: u32 = FMC_ECCR_ECC3_Msk;
pub const FMC_SDCR1_NC_Pos: u32 = 0;
pub const FMC_SDCR1_NC_Msk: u32 = 0x3 << FMC_SDCR1_NC_Pos;
pub const FMC_SDCR1_NC: u32 = FMC_SDCR1_NC_Msk;
pub const FMC_SDCR1_NC_0: u32 = 0x1 << FMC_SDCR1_NC_Pos;
pub const FMC_SDCR1_NC_1: u32 = 0x2 << FMC_SDCR1_NC_Pos;
pub const FMC_SDCR1_NR_Pos: u32 = 2;
pub const FMC_SDCR1_NR_Msk: u32 = 0x3 << FMC_SDCR1_NR_Pos;
pub const FMC_SDCR1_NR: u32 = FMC_SDCR1_NR_Msk;
pub const FMC_SDCR1_NR_0: u32 = 0x1 << FMC_SDCR1_NR_Pos;
pub const FMC_SDCR1_NR_1: u32 = 0x2 << FMC_SDCR1_NR_Pos;
pub const FMC_SDCR1_MWID_Pos: u32 = 4;
pub const FMC_SDCR1_MWID_Msk: u32 = 0x3 << FMC_SDCR1_MWID_Pos;
pub const FMC_SDCR1_MWID: u32 = FMC_SDCR1_MWID_Msk;
pub const FMC_SDCR1_MWID_0: u32 = 0x1 << FMC_SDCR1_MWID_Pos;
pub const FMC_SDCR1_MWID_1: u32 = 0x2 << FMC_SDCR1_MWID_Pos;
pub const FMC_SDCR1_NB_Pos: u32 = 6;
pub const FMC_SDCR1_NB_Msk: u32 = 0x1 << FMC_SDCR1_NB_Pos;
pub const FMC_SDCR1_NB: u32 = FMC_SDCR1_NB_Msk;
pub const FMC_SDCR1_CAS_Pos: u32 = 7;
pub const FMC_SDCR1_CAS_Msk: u32 = 0x3 << FMC_SDCR1_CAS_Pos;
pub const FMC_SDCR1_CAS: u32 = FMC_SDCR1_CAS_Msk;
pub const FMC_SDCR1_CAS_0: u32 = 0x1 << FMC_SDCR1_CAS_Pos;
pub const FMC_SDCR1_CAS_1: u32 = 0x2 << FMC_SDCR1_CAS_Pos;
pub const FMC_SDCR1_WP_Pos: u32 = 9;
pub const FMC_SDCR1_WP_Msk: u32 = 0x1 << FMC_SDCR1_WP_Pos;
pub const FMC_SDCR1_WP: u32 = FMC_SDCR1_WP_Msk;
pub const FMC_SDCR1_SDCLK_Pos: u32 = 10;
pub const FMC_SDCR1_SDCLK_Msk: u32 = 0x3 << FMC_SDCR1_SDCLK_Pos;
pub const FMC_SDCR1_SDCLK: u32 = FMC_SDCR1_SDCLK_Msk;
pub const FMC_SDCR1_SDCLK_0: u32 = 0x1 << FMC_SDCR1_SDCLK_Pos;
pub const FMC_SDCR1_SDCLK_1: u32 = 0x2 << FMC_SDCR1_SDCLK_Pos;
pub const FMC_SDCR1_RBURST_Pos: u32 = 12;
pub const FMC_SDCR1_RBURST_Msk: u32 = 0x1 << FMC_SDCR1_RBURST_Pos;
pub const FMC_SDCR1_RBURST: u32 = FMC_SDCR1_RBURST_Msk;
pub const FMC_SDCR1_RPIPE_Pos: u32 = 13;
pub const FMC_SDCR1_RPIPE_Msk: u32 = 0x3 << FMC_SDCR1_RPIPE_Pos;
pub const FMC_SDCR1_RPIPE: u32 = FMC_SDCR1_RPIPE_Msk;
pub const FMC_SDCR1_RPIPE_0: u32 = 0x1 << FMC_SDCR1_RPIPE_Pos;
pub const FMC_SDCR1_RPIPE_1: u32 = 0x2 << FMC_SDCR1_RPIPE_Pos;
pub const FMC_SDCR2_NC_Pos: u32 = 0;
pub const FMC_SDCR2_NC_Msk: u32 = 0x3 << FMC_SDCR2_NC_Pos;
pub const FMC_SDCR2_NC: u32 = FMC_SDCR2_NC_Msk;
pub const FMC_SDCR2_NC_0: u32 = 0x1 << FMC_SDCR2_NC_Pos;
pub const FMC_SDCR2_NC_1: u32 = 0x2 << FMC_SDCR2_NC_Pos;
pub const FMC_SDCR2_NR_Pos: u32 = 2;
pub const FMC_SDCR2_NR_Msk: u32 = 0x3 << FMC_SDCR2_NR_Pos;
pub const FMC_SDCR2_NR: u32 = FMC_SDCR2_NR_Msk;
pub const FMC_SDCR2_NR_0: u32 = 0x1 << FMC_SDCR2_NR_Pos;
pub const FMC_SDCR2_NR_1: u32 = 0x2 << FMC_SDCR2_NR_Pos;
pub const FMC_SDCR2_MWID_Pos: u32 = 4;
pub const FMC_SDCR2_MWID_Msk: u32 = 0x3 << FMC_SDCR2_MWID_Pos;
pub const FMC_SDCR2_MWID: u32 = FMC_SDCR2_MWID_Msk;
pub const FMC_SDCR2_MWID_0: u32 = 0x1 << FMC_SDCR2_MWID_Pos;
pub const FMC_SDCR2_MWID_1: u32 = 0x2 << FMC_SDCR2_MWID_Pos;
pub const FMC_SDCR2_NB_Pos: u32 = 6;
pub const FMC_SDCR2_NB_Msk: u32 = 0x1 << FMC_SDCR2_NB_Pos;
pub const FMC_SDCR2_NB: u32 = FMC_SDCR2_NB_Msk;
pub const FMC_SDCR2_CAS_Pos: u32 = 7;
pub const FMC_SDCR2_CAS_Msk: u32 = 0x3 << FMC_SDCR2_CAS_Pos;
pub const FMC_SDCR2_CAS: u32 = FMC_SDCR2_CAS_Msk;
pub const FMC_SDCR2_CAS_0: u32 = 0x1 << FMC_SDCR2_CAS_Pos;
pub const FMC_SDCR2_CAS_1: u32 = 0x2 << FMC_SDCR2_CAS_Pos;
pub const FMC_SDCR2_WP_Pos: u32 = 9;
pub const FMC_SDCR2_WP_Msk: u32 = 0x1 << FMC_SDCR2_WP_Pos;
pub const FMC_SDCR2_WP: u32 = FMC_SDCR2_WP_Msk;
pub const FMC_SDCR2_SDCLK_Pos: u32 = 10;
pub const FMC_SDCR2_SDCLK_Msk: u32 = 0x3 << FMC_SDCR2_SDCLK_Pos;
pub const FMC_SDCR2_SDCLK: u32 = FMC_SDCR2_SDCLK_Msk;
pub const FMC_SDCR2_SDCLK_0: u32 = 0x1 << FMC_SDCR2_SDCLK_Pos;
pub const FMC_SDCR2_SDCLK_1: u32 = 0x2 << FMC_SDCR2_SDCLK_Pos;
pub const FMC_SDCR2_RBURST_Pos: u32 = 12;
pub const FMC_SDCR2_RBURST_Msk: u32 = 0x1 << FMC_SDCR2_RBURST_Pos;
pub const FMC_SDCR2_RBURST: u32 = FMC_SDCR2_RBURST_Msk;
pub const FMC_SDCR2_RPIPE_Pos: u32 = 13;
pub const FMC_SDCR2_RPIPE_Msk: u32 = 0x3 << FMC_SDCR2_RPIPE_Pos;
pub const FMC_SDCR2_RPIPE: u32 = FMC_SDCR2_RPIPE_Msk;
pub const FMC_SDCR2_RPIPE_0: u32 = 0x1 << FMC_SDCR2_RPIPE_Pos;
pub const FMC_SDCR2_RPIPE_1: u32 = 0x2 << FMC_SDCR2_RPIPE_Pos;
pub const FMC_SDTR1_TMRD_Pos: u32 = 0;
pub const FMC_SDTR1_TMRD_Msk: u32 = 0xF << FMC_SDTR1_TMRD_Pos;
pub const FMC_SDTR1_TMRD: u32 = FMC_SDTR1_TMRD_Msk;
pub const FMC_SDTR1_TMRD_0: u32 = 0x1 << FMC_SDTR1_TMRD_Pos;
pub const FMC_SDTR1_TMRD_1: u32 = 0x2 << FMC_SDTR1_TMRD_Pos;
pub const FMC_SDTR1_TMRD_2: u32 = 0x4 << FMC_SDTR1_TMRD_Pos;
pub const FMC_SDTR1_TMRD_3: u32 = 0x8 << FMC_SDTR1_TMRD_Pos;
pub const FMC_SDTR1_TXSR_Pos: u32 = 4;
pub const FMC_SDTR1_TXSR_Msk: u32 = 0xF << FMC_SDTR1_TXSR_Pos;
pub const FMC_SDTR1_TXSR: u32 = FMC_SDTR1_TXSR_Msk;
pub const FMC_SDTR1_TXSR_0: u32 = 0x1 << FMC_SDTR1_TXSR_Pos;
pub const FMC_SDTR1_TXSR_1: u32 = 0x2 << FMC_SDTR1_TXSR_Pos;
pub const FMC_SDTR1_TXSR_2: u32 = 0x4 << FMC_SDTR1_TXSR_Pos;
pub const FMC_SDTR1_TXSR_3: u32 = 0x8 << FMC_SDTR1_TXSR_Pos;
pub const FMC_SDTR1_TRAS_Pos: u32 = 8;
pub const FMC_SDTR1_TRAS_Msk: u32 = 0xF << FMC_SDTR1_TRAS_Pos;
pub const FMC_SDTR1_TRAS: u32 = FMC_SDTR1_TRAS_Msk;
pub const FMC_SDTR1_TRAS_0: u32 = 0x1 << FMC_SDTR1_TRAS_Pos;
pub const FMC_SDTR1_TRAS_1: u32 = 0x2 << FMC_SDTR1_TRAS_Pos;
pub const FMC_SDTR1_TRAS_2: u32 = 0x4 << FMC_SDTR1_TRAS_Pos;
pub const FMC_SDTR1_TRAS_3: u32 = 0x8 << FMC_SDTR1_TRAS_Pos;
pub const FMC_SDTR1_TRC_Pos: u32 = 12;
pub const FMC_SDTR1_TRC_Msk: u32 = 0xF << FMC_SDTR1_TRC_Pos;
pub const FMC_SDTR1_TRC: u32 = FMC_SDTR1_TRC_Msk;
pub const FMC_SDTR1_TRC_0: u32 = 0x1 << FMC_SDTR1_TRC_Pos;
pub const FMC_SDTR1_TRC_1: u32 = 0x2 << FMC_SDTR1_TRC_Pos;
pub const FMC_SDTR1_TRC_2: u32 = 0x4 << FMC_SDTR1_TRC_Pos;
pub const FMC_SDTR1_TWR_Pos: u32 = 16;
pub const FMC_SDTR1_TWR_Msk: u32 = 0xF << FMC_SDTR1_TWR_Pos;
pub const FMC_SDTR1_TWR: u32 = FMC_SDTR1_TWR_Msk;
pub const FMC_SDTR1_TWR_0: u32 = 0x1 << FMC_SDTR1_TWR_Pos;
pub const FMC_SDTR1_TWR_1: u32 = 0x2 << FMC_SDTR1_TWR_Pos;
pub const FMC_SDTR1_TWR_2: u32 = 0x4 << FMC_SDTR1_TWR_Pos;
pub const FMC_SDTR1_TRP_Pos: u32 = 20;
pub const FMC_SDTR1_TRP_Msk: u32 = 0xF << FMC_SDTR1_TRP_Pos;
pub const FMC_SDTR1_TRP: u32 = FMC_SDTR1_TRP_Msk;
pub const FMC_SDTR1_TRP_0: u32 = 0x1 << FMC_SDTR1_TRP_Pos;
pub const FMC_SDTR1_TRP_1: u32 = 0x2 << FMC_SDTR1_TRP_Pos;
pub const FMC_SDTR1_TRP_2: u32 = 0x4 << FMC_SDTR1_TRP_Pos;
pub const FMC_SDTR1_TRCD_Pos: u32 = 24;
pub const FMC_SDTR1_TRCD_Msk: u32 = 0xF << FMC_SDTR1_TRCD_Pos;
pub const FMC_SDTR1_TRCD: u32 = FMC_SDTR1_TRCD_Msk;
pub const FMC_SDTR1_TRCD_0: u32 = 0x1 << FMC_SDTR1_TRCD_Pos;
pub const FMC_SDTR1_TRCD_1: u32 = 0x2 << FMC_SDTR1_TRCD_Pos;
pub const FMC_SDTR1_TRCD_2: u32 = 0x4 << FMC_SDTR1_TRCD_Pos;
pub const FMC_SDTR2_TMRD_Pos: u32 = 0;
pub const FMC_SDTR2_TMRD_Msk: u32 = 0xF << FMC_SDTR2_TMRD_Pos;
pub const FMC_SDTR2_TMRD: u32 = FMC_SDTR2_TMRD_Msk;
pub const FMC_SDTR2_TMRD_0: u32 = 0x1 << FMC_SDTR2_TMRD_Pos;
pub const FMC_SDTR2_TMRD_1: u32 = 0x2 << FMC_SDTR2_TMRD_Pos;
pub const FMC_SDTR2_TMRD_2: u32 = 0x4 << FMC_SDTR2_TMRD_Pos;
pub const FMC_SDTR2_TMRD_3: u32 = 0x8 << FMC_SDTR2_TMRD_Pos;
pub const FMC_SDTR2_TXSR_Pos: u32 = 4;
pub const FMC_SDTR2_TXSR_Msk: u32 = 0xF << FMC_SDTR2_TXSR_Pos;
pub const FMC_SDTR2_TXSR: u32 = FMC_SDTR2_TXSR_Msk;
pub const FMC_SDTR2_TXSR_0: u32 = 0x1 << FMC_SDTR2_TXSR_Pos;
pub const FMC_SDTR2_TXSR_1: u32 = 0x2 << FMC_SDTR2_TXSR_Pos;
pub const FMC_SDTR2_TXSR_2: u32 = 0x4 << FMC_SDTR2_TXSR_Pos;
pub const FMC_SDTR2_TXSR_3: u32 = 0x8 << FMC_SDTR2_TXSR_Pos;
pub const FMC_SDTR2_TRAS_Pos: u32 = 8;
pub const FMC_SDTR2_TRAS_Msk: u32 = 0xF << FMC_SDTR2_TRAS_Pos;
pub const FMC_SDTR2_TRAS: u32 = FMC_SDTR2_TRAS_Msk;
pub const FMC_SDTR2_TRAS_0: u32 = 0x1 << FMC_SDTR2_TRAS_Pos;
pub const FMC_SDTR2_TRAS_1: u32 = 0x2 << FMC_SDTR2_TRAS_Pos;
pub const FMC_SDTR2_TRAS_2: u32 = 0x4 << FMC_SDTR2_TRAS_Pos;
pub const FMC_SDTR2_TRAS_3: u32 = 0x8 << FMC_SDTR2_TRAS_Pos;
pub const FMC_SDTR2_TRC_Pos: u32 = 12;
pub const FMC_SDTR2_TRC_Msk: u32 = 0xF << FMC_SDTR2_TRC_Pos;
pub const FMC_SDTR2_TRC: u32 = FMC_SDTR2_TRC_Msk;
pub const FMC_SDTR2_TRC_0: u32 = 0x1 << FMC_SDTR2_TRC_Pos;
pub const FMC_SDTR2_TRC_1: u32 = 0x2 << FMC_SDTR2_TRC_Pos;
pub const FMC_SDTR2_TRC_2: u32 = 0x4 << FMC_SDTR2_TRC_Pos;
pub const FMC_SDTR2_TWR_Pos: u32 = 16;
pub const FMC_SDTR2_TWR_Msk: u32 = 0xF << FMC_SDTR2_TWR_Pos;
pub const FMC_SDTR2_TWR: u32 = FMC_SDTR2_TWR_Msk;
pub const FMC_SDTR2_TWR_0: u32 = 0x1 << FMC_SDTR2_TWR_Pos;
pub const FMC_SDTR2_TWR_1: u32 = 0x2 << FMC_SDTR2_TWR_Pos;
pub const FMC_SDTR2_TWR_2: u32 = 0x4 << FMC_SDTR2_TWR_Pos;
pub const FMC_SDTR2_TRP_Pos: u32 = 20;
pub const FMC_SDTR2_TRP_Msk: u32 = 0xF << FMC_SDTR2_TRP_Pos;
pub const FMC_SDTR2_TRP: u32 = FMC_SDTR2_TRP_Msk;
pub const FMC_SDTR2_TRP_0: u32 = 0x1 << FMC_SDTR2_TRP_Pos;
pub const FMC_SDTR2_TRP_1: u32 = 0x2 << FMC_SDTR2_TRP_Pos;
pub const FMC_SDTR2_TRP_2: u32 = 0x4 << FMC_SDTR2_TRP_Pos;
pub const FMC_SDTR2_TRCD_Pos: u32 = 24;
pub const FMC_SDTR2_TRCD_Msk: u32 = 0xF << FMC_SDTR2_TRCD_Pos;
pub const FMC_SDTR2_TRCD: u32 = FMC_SDTR2_TRCD_Msk;
pub const FMC_SDTR2_TRCD_0: u32 = 0x1 << FMC_SDTR2_TRCD_Pos;
pub const FMC_SDTR2_TRCD_1: u32 = 0x2 << FMC_SDTR2_TRCD_Pos;
pub const FMC_SDTR2_TRCD_2: u32 = 0x4 << FMC_SDTR2_TRCD_Pos;
pub const FMC_SDCMR_MODE_Pos: u32 = 0;
pub const FMC_SDCMR_MODE_Msk: u32 = 0x7 << FMC_SDCMR_MODE_Pos;
pub const FMC_SDCMR_MODE: u32 = FMC_SDCMR_MODE_Msk;
pub const FMC_SDCMR_MODE_0: u32 = 0x1 << FMC_SDCMR_MODE_Pos;
pub const FMC_SDCMR_MODE_1: u32 = 0x2 << FMC_SDCMR_MODE_Pos;
pub const FMC_SDCMR_MODE_2: u32 = 0x4 << FMC_SDCMR_MODE_Pos;
pub const FMC_SDCMR_CTB2_Pos: u32 = 3;
pub const FMC_SDCMR_CTB2_Msk: u32 = 0x1 << FMC_SDCMR_CTB2_Pos;
pub const FMC_SDCMR_CTB2: u32 = FMC_SDCMR_CTB2_Msk;
pub const FMC_SDCMR_CTB1_Pos: u32 = 4;
pub const FMC_SDCMR_CTB1_Msk: u32 = 0x1 << FMC_SDCMR_CTB1_Pos;
pub const FMC_SDCMR_CTB1: u32 = FMC_SDCMR_CTB1_Msk;
pub const FMC_SDCMR_NRFS_Pos: u32 = 5;
pub const FMC_SDCMR_NRFS_Msk: u32 = 0xF << FMC_SDCMR_NRFS_Pos;
pub const FMC_SDCMR_NRFS: u32 = FMC_SDCMR_NRFS_Msk;
pub const FMC_SDCMR_NRFS_0: u32 = 0x1 << FMC_SDCMR_NRFS_Pos;
pub const FMC_SDCMR_NRFS_1: u32 = 0x2 << FMC_SDCMR_NRFS_Pos;
pub const FMC_SDCMR_NRFS_2: u32 = 0x4 << FMC_SDCMR_NRFS_Pos;
pub const FMC_SDCMR_NRFS_3: u32 = 0x8 << FMC_SDCMR_NRFS_Pos;
pub const FMC_SDCMR_MRD_Pos: u32 = 9;
pub const FMC_SDCMR_MRD_Msk: u32 = 0x1FFF << FMC_SDCMR_MRD_Pos;
pub const FMC_SDCMR_MRD: u32 = FMC_SDCMR_MRD_Msk;
pub const FMC_SDRTR_CRE_Pos: u32 = 0;
pub const FMC_SDRTR_CRE_Msk: u32 = 0x1 << FMC_SDRTR_CRE_Pos;
pub const FMC_SDRTR_CRE: u32 = FMC_SDRTR_CRE_Msk;
pub const FMC_SDRTR_COUNT_Pos: u32 = 1;
pub const FMC_SDRTR_COUNT_Msk: u32 = 0x1FFF << FMC_SDRTR_COUNT_Pos;
pub const FMC_SDRTR_COUNT: u32 = FMC_SDRTR_COUNT_Msk;
pub const FMC_SDRTR_REIE_Pos: u32 = 14;
pub const FMC_SDRTR_REIE_Msk: u32 = 0x1 << FMC_SDRTR_REIE_Pos;
pub const FMC_SDRTR_REIE: u32 = FMC_SDRTR_REIE_Msk;
pub const FMC_SDSR_RE_Pos: u32 = 0;
pub const FMC_SDSR_RE_Msk: u32 = 0x1 << FMC_SDSR_RE_Pos;
pub const FMC_SDSR_RE: u32 = FMC_SDSR_RE_Msk;
pub const FMC_SDSR_MODES1_Pos: u32 = 1;
pub const FMC_SDSR_MODES1_Msk: u32 = 0x3 << FMC_SDSR_MODES1_Pos;
pub const FMC_SDSR_MODES1: u32 = FMC_SDSR_MODES1_Msk;
pub const FMC_SDSR_MODES1_0: u32 = 0x1 << FMC_SDSR_MODES1_Pos;
pub const FMC_SDSR_MODES1_1: u32 = 0x2 << FMC_SDSR_MODES1_Pos;
pub const FMC_SDSR_MODES2_Pos: u32 = 3;
pub const FMC_SDSR_MODES2_Msk: u32 = 0x3 << FMC_SDSR_MODES2_Pos;
pub const FMC_SDSR_MODES2: u32 = FMC_SDSR_MODES2_Msk;
pub const FMC_SDSR_MODES2_0: u32 = 0x1 << FMC_SDSR_MODES2_Pos;
pub const FMC_SDSR_MODES2_1: u32 = 0x2 << FMC_SDSR_MODES2_Pos;
pub const FMC_SDSR_BUSY_Pos: u32 = 5;
pub const FMC_SDSR_BUSY_Msk: u32 = 0x1 << FMC_SDSR_BUSY_Pos;
pub const FMC_SDSR_BUSY: u32 = FMC_SDSR_BUSY_Msk;
pub const GPIO_MODER_MODER0_Pos: u32 = 0;
pub const GPIO_MODER_MODER0_Msk: u32 = 0x3 << GPIO_MODER_MODER0_Pos;
pub const GPIO_MODER_MODER0: u32 = GPIO_MODER_MODER0_Msk;
pub const GPIO_MODER_MODER0_0: u32 = 0x1 << GPIO_MODER_MODER0_Pos;
pub const GPIO_MODER_MODER0_1: u32 = 0x2 << GPIO_MODER_MODER0_Pos;
pub const GPIO_MODER_MODER1_Pos: u32 = 2;
pub const GPIO_MODER_MODER1_Msk: u32 = 0x3 << GPIO_MODER_MODER1_Pos;
pub const GPIO_MODER_MODER1: u32 = GPIO_MODER_MODER1_Msk;
pub const GPIO_MODER_MODER1_0: u32 = 0x1 << GPIO_MODER_MODER1_Pos;
pub const GPIO_MODER_MODER1_1: u32 = 0x2 << GPIO_MODER_MODER1_Pos;
pub const GPIO_MODER_MODER2_Pos: u32 = 4;
pub const GPIO_MODER_MODER2_Msk: u32 = 0x3 << GPIO_MODER_MODER2_Pos;
pub const GPIO_MODER_MODER2: u32 = GPIO_MODER_MODER2_Msk;
pub const GPIO_MODER_MODER2_0: u32 = 0x1 << GPIO_MODER_MODER2_Pos;
pub const GPIO_MODER_MODER2_1: u32 = 0x2 << GPIO_MODER_MODER2_Pos;
pub const GPIO_MODER_MODER3_Pos: u32 = 6;
pub const GPIO_MODER_MODER3_Msk: u32 = 0x3 << GPIO_MODER_MODER3_Pos;
pub const GPIO_MODER_MODER3: u32 = GPIO_MODER_MODER3_Msk;
pub const GPIO_MODER_MODER3_0: u32 = 0x1 << GPIO_MODER_MODER3_Pos;
pub const GPIO_MODER_MODER3_1: u32 = 0x2 << GPIO_MODER_MODER3_Pos;
pub const GPIO_MODER_MODER4_Pos: u32 = 8;
pub const GPIO_MODER_MODER4_Msk: u32 = 0x3 << GPIO_MODER_MODER4_Pos;
pub const GPIO_MODER_MODER4: u32 = GPIO_MODER_MODER4_Msk;
pub const GPIO_MODER_MODER4_0: u32 = 0x1 << GPIO_MODER_MODER4_Pos;
pub const GPIO_MODER_MODER4_1: u32 = 0x2 << GPIO_MODER_MODER4_Pos;
pub const GPIO_MODER_MODER5_Pos: u32 = 10;
pub const GPIO_MODER_MODER5_Msk: u32 = 0x3 << GPIO_MODER_MODER5_Pos;
pub const GPIO_MODER_MODER5: u32 = GPIO_MODER_MODER5_Msk;
pub const GPIO_MODER_MODER5_0: u32 = 0x1 << GPIO_MODER_MODER5_Pos;
pub const GPIO_MODER_MODER5_1: u32 = 0x2 << GPIO_MODER_MODER5_Pos;
pub const GPIO_MODER_MODER6_Pos: u32 = 12;
pub const GPIO_MODER_MODER6_Msk: u32 = 0x3 << GPIO_MODER_MODER6_Pos;
pub const GPIO_MODER_MODER6: u32 = GPIO_MODER_MODER6_Msk;
pub const GPIO_MODER_MODER6_0: u32 = 0x1 << GPIO_MODER_MODER6_Pos;
pub const GPIO_MODER_MODER6_1: u32 = 0x2 << GPIO_MODER_MODER6_Pos;
pub const GPIO_MODER_MODER7_Pos: u32 = 14;
pub const GPIO_MODER_MODER7_Msk: u32 = 0x3 << GPIO_MODER_MODER7_Pos;
pub const GPIO_MODER_MODER7: u32 = GPIO_MODER_MODER7_Msk;
pub const GPIO_MODER_MODER7_0: u32 = 0x1 << GPIO_MODER_MODER7_Pos;
pub const GPIO_MODER_MODER7_1: u32 = 0x2 << GPIO_MODER_MODER7_Pos;
pub const GPIO_MODER_MODER8_Pos: u32 = 16;
pub const GPIO_MODER_MODER8_Msk: u32 = 0x3 << GPIO_MODER_MODER8_Pos;
pub const GPIO_MODER_MODER8: u32 = GPIO_MODER_MODER8_Msk;
pub const GPIO_MODER_MODER8_0: u32 = 0x1 << GPIO_MODER_MODER8_Pos;
pub const GPIO_MODER_MODER8_1: u32 = 0x2 << GPIO_MODER_MODER8_Pos;
pub const GPIO_MODER_MODER9_Pos: u32 = 18;
pub const GPIO_MODER_MODER9_Msk: u32 = 0x3 << GPIO_MODER_MODER9_Pos;
pub const GPIO_MODER_MODER9: u32 = GPIO_MODER_MODER9_Msk;
pub const GPIO_MODER_MODER9_0: u32 = 0x1 << GPIO_MODER_MODER9_Pos;
pub const GPIO_MODER_MODER9_1: u32 = 0x2 << GPIO_MODER_MODER9_Pos;
pub const GPIO_MODER_MODER10_Pos: u32 = 20;
pub const GPIO_MODER_MODER10_Msk: u32 = 0x3 << GPIO_MODER_MODER10_Pos;
pub const GPIO_MODER_MODER10: u32 = GPIO_MODER_MODER10_Msk;
pub const GPIO_MODER_MODER10_0: u32 = 0x1 << GPIO_MODER_MODER10_Pos;
pub const GPIO_MODER_MODER10_1: u32 = 0x2 << GPIO_MODER_MODER10_Pos;
pub const GPIO_MODER_MODER11_Pos: u32 = 22;
pub const GPIO_MODER_MODER11_Msk: u32 = 0x3 << GPIO_MODER_MODER11_Pos;
pub const GPIO_MODER_MODER11: u32 = GPIO_MODER_MODER11_Msk;
pub const GPIO_MODER_MODER11_0: u32 = 0x1 << GPIO_MODER_MODER11_Pos;
pub const GPIO_MODER_MODER11_1: u32 = 0x2 << GPIO_MODER_MODER11_Pos;
pub const GPIO_MODER_MODER12_Pos: u32 = 24;
pub const GPIO_MODER_MODER12_Msk: u32 = 0x3 << GPIO_MODER_MODER12_Pos;
pub const GPIO_MODER_MODER12: u32 = GPIO_MODER_MODER12_Msk;
pub const GPIO_MODER_MODER12_0: u32 = 0x1 << GPIO_MODER_MODER12_Pos;
pub const GPIO_MODER_MODER12_1: u32 = 0x2 << GPIO_MODER_MODER12_Pos;
pub const GPIO_MODER_MODER13_Pos: u32 = 26;
pub const GPIO_MODER_MODER13_Msk: u32 = 0x3 << GPIO_MODER_MODER13_Pos;
pub const GPIO_MODER_MODER13: u32 = GPIO_MODER_MODER13_Msk;
pub const GPIO_MODER_MODER13_0: u32 = 0x1 << GPIO_MODER_MODER13_Pos;
pub const GPIO_MODER_MODER13_1: u32 = 0x2 << GPIO_MODER_MODER13_Pos;
pub const GPIO_MODER_MODER14_Pos: u32 = 28;
pub const GPIO_MODER_MODER14_Msk: u32 = 0x3 << GPIO_MODER_MODER14_Pos;
pub const GPIO_MODER_MODER14: u32 = GPIO_MODER_MODER14_Msk;
pub const GPIO_MODER_MODER14_0: u32 = 0x1 << GPIO_MODER_MODER14_Pos;
pub const GPIO_MODER_MODER14_1: u32 = 0x2 << GPIO_MODER_MODER14_Pos;
pub const GPIO_MODER_MODER15_Pos: u32 = 30;
pub const GPIO_MODER_MODER15_Msk: u32 = 0x3 << GPIO_MODER_MODER15_Pos;
pub const GPIO_MODER_MODER15: u32 = GPIO_MODER_MODER15_Msk;
pub const GPIO_MODER_MODER15_0: u32 = 0x1 << GPIO_MODER_MODER15_Pos;
pub const GPIO_MODER_MODER15_1: u32 = 0x2 << GPIO_MODER_MODER15_Pos;
pub const GPIO_OTYPER_OT0_Pos: u32 = 0;
pub const GPIO_OTYPER_OT0_Msk: u32 = 0x1 << GPIO_OTYPER_OT0_Pos;
pub const GPIO_OTYPER_OT0: u32 = GPIO_OTYPER_OT0_Msk;
pub const GPIO_OTYPER_OT1_Pos: u32 = 1;
pub const GPIO_OTYPER_OT1_Msk: u32 = 0x1 << GPIO_OTYPER_OT1_Pos;
pub const GPIO_OTYPER_OT1: u32 = GPIO_OTYPER_OT1_Msk;
pub const GPIO_OTYPER_OT2_Pos: u32 = 2;
pub const GPIO_OTYPER_OT2_Msk: u32 = 0x1 << GPIO_OTYPER_OT2_Pos;
pub const GPIO_OTYPER_OT2: u32 = GPIO_OTYPER_OT2_Msk;
pub const GPIO_OTYPER_OT3_Pos: u32 = 3;
pub const GPIO_OTYPER_OT3_Msk: u32 = 0x1 << GPIO_OTYPER_OT3_Pos;
pub const GPIO_OTYPER_OT3: u32 = GPIO_OTYPER_OT3_Msk;
pub const GPIO_OTYPER_OT4_Pos: u32 = 4;
pub const GPIO_OTYPER_OT4_Msk: u32 = 0x1 << GPIO_OTYPER_OT4_Pos;
pub const GPIO_OTYPER_OT4: u32 = GPIO_OTYPER_OT4_Msk;
pub const GPIO_OTYPER_OT5_Pos: u32 = 5;
pub const GPIO_OTYPER_OT5_Msk: u32 = 0x1 << GPIO_OTYPER_OT5_Pos;
pub const GPIO_OTYPER_OT5: u32 = GPIO_OTYPER_OT5_Msk;
pub const GPIO_OTYPER_OT6_Pos: u32 = 6;
pub const GPIO_OTYPER_OT6_Msk: u32 = 0x1 << GPIO_OTYPER_OT6_Pos;
pub const GPIO_OTYPER_OT6: u32 = GPIO_OTYPER_OT6_Msk;
pub const GPIO_OTYPER_OT7_Pos: u32 = 7;
pub const GPIO_OTYPER_OT7_Msk: u32 = 0x1 << GPIO_OTYPER_OT7_Pos;
pub const GPIO_OTYPER_OT7: u32 = GPIO_OTYPER_OT7_Msk;
pub const GPIO_OTYPER_OT8_Pos: u32 = 8;
pub const GPIO_OTYPER_OT8_Msk: u32 = 0x1 << GPIO_OTYPER_OT8_Pos;
pub const GPIO_OTYPER_OT8: u32 = GPIO_OTYPER_OT8_Msk;
pub const GPIO_OTYPER_OT9_Pos: u32 = 9;
pub const GPIO_OTYPER_OT9_Msk: u32 = 0x1 << GPIO_OTYPER_OT9_Pos;
pub const GPIO_OTYPER_OT9: u32 = GPIO_OTYPER_OT9_Msk;
pub const GPIO_OTYPER_OT10_Pos: u32 = 10;
pub const GPIO_OTYPER_OT10_Msk: u32 = 0x1 << GPIO_OTYPER_OT10_Pos;
pub const GPIO_OTYPER_OT10: u32 = GPIO_OTYPER_OT10_Msk;
pub const GPIO_OTYPER_OT11_Pos: u32 = 11;
pub const GPIO_OTYPER_OT11_Msk: u32 = 0x1 << GPIO_OTYPER_OT11_Pos;
pub const GPIO_OTYPER_OT11: u32 = GPIO_OTYPER_OT11_Msk;
pub const GPIO_OTYPER_OT12_Pos: u32 = 12;
pub const GPIO_OTYPER_OT12_Msk: u32 = 0x1 << GPIO_OTYPER_OT12_Pos;
pub const GPIO_OTYPER_OT12: u32 = GPIO_OTYPER_OT12_Msk;
pub const GPIO_OTYPER_OT13_Pos: u32 = 13;
pub const GPIO_OTYPER_OT13_Msk: u32 = 0x1 << GPIO_OTYPER_OT13_Pos;
pub const GPIO_OTYPER_OT13: u32 = GPIO_OTYPER_OT13_Msk;
pub const GPIO_OTYPER_OT14_Pos: u32 = 14;
pub const GPIO_OTYPER_OT14_Msk: u32 = 0x1 << GPIO_OTYPER_OT14_Pos;
pub const GPIO_OTYPER_OT14: u32 = GPIO_OTYPER_OT14_Msk;
pub const GPIO_OTYPER_OT15_Pos: u32 = 15;
pub const GPIO_OTYPER_OT15_Msk: u32 = 0x1 << GPIO_OTYPER_OT15_Pos;
pub const GPIO_OTYPER_OT15: u32 = GPIO_OTYPER_OT15_Msk;
pub const GPIO_OTYPER_OT_0: u32 = GPIO_OTYPER_OT0;
pub const GPIO_OTYPER_OT_1: u32 = GPIO_OTYPER_OT1;
pub const GPIO_OTYPER_OT_2: u32 = GPIO_OTYPER_OT2;
pub const GPIO_OTYPER_OT_3: u32 = GPIO_OTYPER_OT3;
pub const GPIO_OTYPER_OT_4: u32 = GPIO_OTYPER_OT4;
pub const GPIO_OTYPER_OT_5: u32 = GPIO_OTYPER_OT5;
pub const GPIO_OTYPER_OT_6: u32 = GPIO_OTYPER_OT6;
pub const GPIO_OTYPER_OT_7: u32 = GPIO_OTYPER_OT7;
pub const GPIO_OTYPER_OT_8: u32 = GPIO_OTYPER_OT8;
pub const GPIO_OTYPER_OT_9: u32 = GPIO_OTYPER_OT9;
pub const GPIO_OTYPER_OT_10: u32 = GPIO_OTYPER_OT10;
pub const GPIO_OTYPER_OT_11: u32 = GPIO_OTYPER_OT11;
pub const GPIO_OTYPER_OT_12: u32 = GPIO_OTYPER_OT12;
pub const GPIO_OTYPER_OT_13: u32 = GPIO_OTYPER_OT13;
pub const GPIO_OTYPER_OT_14: u32 = GPIO_OTYPER_OT14;
pub const GPIO_OTYPER_OT_15: u32 = GPIO_OTYPER_OT15;
pub const GPIO_OSPEEDR_OSPEEDR0_Pos: u32 = 0;
pub const GPIO_OSPEEDR_OSPEEDR0_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEEDR0_Pos;
pub const GPIO_OSPEEDR_OSPEEDR0: u32 = GPIO_OSPEEDR_OSPEEDR0_Msk;
pub const GPIO_OSPEEDR_OSPEEDR0_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEEDR0_Pos;
pub const GPIO_OSPEEDR_OSPEEDR0_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEEDR0_Pos;
pub const GPIO_OSPEEDR_OSPEEDR1_Pos: u32 = 2;
pub const GPIO_OSPEEDR_OSPEEDR1_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEEDR1_Pos;
pub const GPIO_OSPEEDR_OSPEEDR1: u32 = GPIO_OSPEEDR_OSPEEDR1_Msk;
pub const GPIO_OSPEEDR_OSPEEDR1_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEEDR1_Pos;
pub const GPIO_OSPEEDR_OSPEEDR1_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEEDR1_Pos;
pub const GPIO_OSPEEDR_OSPEEDR2_Pos: u32 = 4;
pub const GPIO_OSPEEDR_OSPEEDR2_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEEDR2_Pos;
pub const GPIO_OSPEEDR_OSPEEDR2: u32 = GPIO_OSPEEDR_OSPEEDR2_Msk;
pub const GPIO_OSPEEDR_OSPEEDR2_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEEDR2_Pos;
pub const GPIO_OSPEEDR_OSPEEDR2_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEEDR2_Pos;
pub const GPIO_OSPEEDR_OSPEEDR3_Pos: u32 = 6;
pub const GPIO_OSPEEDR_OSPEEDR3_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEEDR3_Pos;
pub const GPIO_OSPEEDR_OSPEEDR3: u32 = GPIO_OSPEEDR_OSPEEDR3_Msk;
pub const GPIO_OSPEEDR_OSPEEDR3_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEEDR3_Pos;
pub const GPIO_OSPEEDR_OSPEEDR3_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEEDR3_Pos;
pub const GPIO_OSPEEDR_OSPEEDR4_Pos: u32 = 8;
pub const GPIO_OSPEEDR_OSPEEDR4_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEEDR4_Pos;
pub const GPIO_OSPEEDR_OSPEEDR4: u32 = GPIO_OSPEEDR_OSPEEDR4_Msk;
pub const GPIO_OSPEEDR_OSPEEDR4_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEEDR4_Pos;
pub const GPIO_OSPEEDR_OSPEEDR4_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEEDR4_Pos;
pub const GPIO_OSPEEDR_OSPEEDR5_Pos: u32 = 10;
pub const GPIO_OSPEEDR_OSPEEDR5_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEEDR5_Pos;
pub const GPIO_OSPEEDR_OSPEEDR5: u32 = GPIO_OSPEEDR_OSPEEDR5_Msk;
pub const GPIO_OSPEEDR_OSPEEDR5_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEEDR5_Pos;
pub const GPIO_OSPEEDR_OSPEEDR5_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEEDR5_Pos;
pub const GPIO_OSPEEDR_OSPEEDR6_Pos: u32 = 12;
pub const GPIO_OSPEEDR_OSPEEDR6_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEEDR6_Pos;
pub const GPIO_OSPEEDR_OSPEEDR6: u32 = GPIO_OSPEEDR_OSPEEDR6_Msk;
pub const GPIO_OSPEEDR_OSPEEDR6_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEEDR6_Pos;
pub const GPIO_OSPEEDR_OSPEEDR6_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEEDR6_Pos;
pub const GPIO_OSPEEDR_OSPEEDR7_Pos: u32 = 14;
pub const GPIO_OSPEEDR_OSPEEDR7_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEEDR7_Pos;
pub const GPIO_OSPEEDR_OSPEEDR7: u32 = GPIO_OSPEEDR_OSPEEDR7_Msk;
pub const GPIO_OSPEEDR_OSPEEDR7_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEEDR7_Pos;
pub const GPIO_OSPEEDR_OSPEEDR7_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEEDR7_Pos;
pub const GPIO_OSPEEDR_OSPEEDR8_Pos: u32 = 16;
pub const GPIO_OSPEEDR_OSPEEDR8_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEEDR8_Pos;
pub const GPIO_OSPEEDR_OSPEEDR8: u32 = GPIO_OSPEEDR_OSPEEDR8_Msk;
pub const GPIO_OSPEEDR_OSPEEDR8_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEEDR8_Pos;
pub const GPIO_OSPEEDR_OSPEEDR8_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEEDR8_Pos;
pub const GPIO_OSPEEDR_OSPEEDR9_Pos: u32 = 18;
pub const GPIO_OSPEEDR_OSPEEDR9_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEEDR9_Pos;
pub const GPIO_OSPEEDR_OSPEEDR9: u32 = GPIO_OSPEEDR_OSPEEDR9_Msk;
pub const GPIO_OSPEEDR_OSPEEDR9_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEEDR9_Pos;
pub const GPIO_OSPEEDR_OSPEEDR9_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEEDR9_Pos;
pub const GPIO_OSPEEDR_OSPEEDR10_Pos: u32 = 20;
pub const GPIO_OSPEEDR_OSPEEDR10_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEEDR10_Pos;
pub const GPIO_OSPEEDR_OSPEEDR10: u32 = GPIO_OSPEEDR_OSPEEDR10_Msk;
pub const GPIO_OSPEEDR_OSPEEDR10_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEEDR10_Pos;
pub const GPIO_OSPEEDR_OSPEEDR10_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEEDR10_Pos;
pub const GPIO_OSPEEDR_OSPEEDR11_Pos: u32 = 22;
pub const GPIO_OSPEEDR_OSPEEDR11_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEEDR11_Pos;
pub const GPIO_OSPEEDR_OSPEEDR11: u32 = GPIO_OSPEEDR_OSPEEDR11_Msk;
pub const GPIO_OSPEEDR_OSPEEDR11_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEEDR11_Pos;
pub const GPIO_OSPEEDR_OSPEEDR11_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEEDR11_Pos;
pub const GPIO_OSPEEDR_OSPEEDR12_Pos: u32 = 24;
pub const GPIO_OSPEEDR_OSPEEDR12_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEEDR12_Pos;
pub const GPIO_OSPEEDR_OSPEEDR12: u32 = GPIO_OSPEEDR_OSPEEDR12_Msk;
pub const GPIO_OSPEEDR_OSPEEDR12_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEEDR12_Pos;
pub const GPIO_OSPEEDR_OSPEEDR12_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEEDR12_Pos;
pub const GPIO_OSPEEDR_OSPEEDR13_Pos: u32 = 26;
pub const GPIO_OSPEEDR_OSPEEDR13_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEEDR13_Pos;
pub const GPIO_OSPEEDR_OSPEEDR13: u32 = GPIO_OSPEEDR_OSPEEDR13_Msk;
pub const GPIO_OSPEEDR_OSPEEDR13_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEEDR13_Pos;
pub const GPIO_OSPEEDR_OSPEEDR13_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEEDR13_Pos;
pub const GPIO_OSPEEDR_OSPEEDR14_Pos: u32 = 28;
pub const GPIO_OSPEEDR_OSPEEDR14_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEEDR14_Pos;
pub const GPIO_OSPEEDR_OSPEEDR14: u32 = GPIO_OSPEEDR_OSPEEDR14_Msk;
pub const GPIO_OSPEEDR_OSPEEDR14_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEEDR14_Pos;
pub const GPIO_OSPEEDR_OSPEEDR14_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEEDR14_Pos;
pub const GPIO_OSPEEDR_OSPEEDR15_Pos: u32 = 30;
pub const GPIO_OSPEEDR_OSPEEDR15_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEEDR15_Pos;
pub const GPIO_OSPEEDR_OSPEEDR15: u32 = GPIO_OSPEEDR_OSPEEDR15_Msk;
pub const GPIO_OSPEEDR_OSPEEDR15_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEEDR15_Pos;
pub const GPIO_OSPEEDR_OSPEEDR15_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEEDR15_Pos;
pub const GPIO_OSPEEDER_OSPEEDR0_Pos: u32 = GPIO_OSPEEDR_OSPEEDR0_Pos;
pub const GPIO_OSPEEDER_OSPEEDR0_Msk: u32 = GPIO_OSPEEDR_OSPEEDR0_Msk;
pub const GPIO_OSPEEDER_OSPEEDR0: u32 = GPIO_OSPEEDR_OSPEEDR0;
pub const GPIO_OSPEEDER_OSPEEDR0_0: u32 = GPIO_OSPEEDR_OSPEEDR0_0;
pub const GPIO_OSPEEDER_OSPEEDR0_1: u32 = GPIO_OSPEEDR_OSPEEDR0_1;
pub const GPIO_OSPEEDER_OSPEEDR1_Pos: u32 = GPIO_OSPEEDR_OSPEEDR1_Pos;
pub const GPIO_OSPEEDER_OSPEEDR1_Msk: u32 = GPIO_OSPEEDR_OSPEEDR1_Msk;
pub const GPIO_OSPEEDER_OSPEEDR1: u32 = GPIO_OSPEEDR_OSPEEDR1;
pub const GPIO_OSPEEDER_OSPEEDR1_0: u32 = GPIO_OSPEEDR_OSPEEDR1_0;
pub const GPIO_OSPEEDER_OSPEEDR1_1: u32 = GPIO_OSPEEDR_OSPEEDR1_1;
pub const GPIO_OSPEEDER_OSPEEDR2_Pos: u32 = GPIO_OSPEEDR_OSPEEDR2_Pos;
pub const GPIO_OSPEEDER_OSPEEDR2_Msk: u32 = GPIO_OSPEEDR_OSPEEDR2_Msk;
pub const GPIO_OSPEEDER_OSPEEDR2: u32 = GPIO_OSPEEDR_OSPEEDR2;
pub const GPIO_OSPEEDER_OSPEEDR2_0: u32 = GPIO_OSPEEDR_OSPEEDR2_0;
pub const GPIO_OSPEEDER_OSPEEDR2_1: u32 = GPIO_OSPEEDR_OSPEEDR2_1;
pub const GPIO_OSPEEDER_OSPEEDR3_Pos: u32 = GPIO_OSPEEDR_OSPEEDR3_Pos;
pub const GPIO_OSPEEDER_OSPEEDR3_Msk: u32 = GPIO_OSPEEDR_OSPEEDR3_Msk;
pub const GPIO_OSPEEDER_OSPEEDR3: u32 = GPIO_OSPEEDR_OSPEEDR3;
pub const GPIO_OSPEEDER_OSPEEDR3_0: u32 = GPIO_OSPEEDR_OSPEEDR3_0;
pub const GPIO_OSPEEDER_OSPEEDR3_1: u32 = GPIO_OSPEEDR_OSPEEDR3_1;
pub const GPIO_OSPEEDER_OSPEEDR4_Pos: u32 = GPIO_OSPEEDR_OSPEEDR4_Pos;
pub const GPIO_OSPEEDER_OSPEEDR4_Msk: u32 = GPIO_OSPEEDR_OSPEEDR4_Msk;
pub const GPIO_OSPEEDER_OSPEEDR4: u32 = GPIO_OSPEEDR_OSPEEDR4;
pub const GPIO_OSPEEDER_OSPEEDR4_0: u32 = GPIO_OSPEEDR_OSPEEDR4_0;
pub const GPIO_OSPEEDER_OSPEEDR4_1: u32 = GPIO_OSPEEDR_OSPEEDR4_1;
pub const GPIO_OSPEEDER_OSPEEDR5_Pos: u32 = GPIO_OSPEEDR_OSPEEDR5_Pos;
pub const GPIO_OSPEEDER_OSPEEDR5_Msk: u32 = GPIO_OSPEEDR_OSPEEDR5_Msk;
pub const GPIO_OSPEEDER_OSPEEDR5: u32 = GPIO_OSPEEDR_OSPEEDR5;
pub const GPIO_OSPEEDER_OSPEEDR5_0: u32 = GPIO_OSPEEDR_OSPEEDR5_0;
pub const GPIO_OSPEEDER_OSPEEDR5_1: u32 = GPIO_OSPEEDR_OSPEEDR5_1;
pub const GPIO_OSPEEDER_OSPEEDR6_Pos: u32 = GPIO_OSPEEDR_OSPEEDR6_Pos;
pub const GPIO_OSPEEDER_OSPEEDR6_Msk: u32 = GPIO_OSPEEDR_OSPEEDR6_Msk;
pub const GPIO_OSPEEDER_OSPEEDR6: u32 = GPIO_OSPEEDR_OSPEEDR6;
pub const GPIO_OSPEEDER_OSPEEDR6_0: u32 = GPIO_OSPEEDR_OSPEEDR6_0;
pub const GPIO_OSPEEDER_OSPEEDR6_1: u32 = GPIO_OSPEEDR_OSPEEDR6_1;
pub const GPIO_OSPEEDER_OSPEEDR7_Pos: u32 = GPIO_OSPEEDR_OSPEEDR7_Pos;
pub const GPIO_OSPEEDER_OSPEEDR7_Msk: u32 = GPIO_OSPEEDR_OSPEEDR7_Msk;
pub const GPIO_OSPEEDER_OSPEEDR7: u32 = GPIO_OSPEEDR_OSPEEDR7;
pub const GPIO_OSPEEDER_OSPEEDR7_0: u32 = GPIO_OSPEEDR_OSPEEDR7_0;
pub const GPIO_OSPEEDER_OSPEEDR7_1: u32 = GPIO_OSPEEDR_OSPEEDR7_1;
pub const GPIO_OSPEEDER_OSPEEDR8_Pos: u32 = GPIO_OSPEEDR_OSPEEDR8_Pos;
pub const GPIO_OSPEEDER_OSPEEDR8_Msk: u32 = GPIO_OSPEEDR_OSPEEDR8_Msk;
pub const GPIO_OSPEEDER_OSPEEDR8: u32 = GPIO_OSPEEDR_OSPEEDR8;
pub const GPIO_OSPEEDER_OSPEEDR8_0: u32 = GPIO_OSPEEDR_OSPEEDR8_0;
pub const GPIO_OSPEEDER_OSPEEDR8_1: u32 = GPIO_OSPEEDR_OSPEEDR8_1;
pub const GPIO_OSPEEDER_OSPEEDR9_Pos: u32 = GPIO_OSPEEDR_OSPEEDR9_Pos;
pub const GPIO_OSPEEDER_OSPEEDR9_Msk: u32 = GPIO_OSPEEDR_OSPEEDR9_Msk;
pub const GPIO_OSPEEDER_OSPEEDR9: u32 = GPIO_OSPEEDR_OSPEEDR9;
pub const GPIO_OSPEEDER_OSPEEDR9_0: u32 = GPIO_OSPEEDR_OSPEEDR9_0;
pub const GPIO_OSPEEDER_OSPEEDR9_1: u32 = GPIO_OSPEEDR_OSPEEDR9_1;
pub const GPIO_OSPEEDER_OSPEEDR10_Pos: u32 = GPIO_OSPEEDR_OSPEEDR10_Pos;
pub const GPIO_OSPEEDER_OSPEEDR10_Msk: u32 = GPIO_OSPEEDR_OSPEEDR10_Msk;
pub const GPIO_OSPEEDER_OSPEEDR10: u32 = GPIO_OSPEEDR_OSPEEDR10;
pub const GPIO_OSPEEDER_OSPEEDR10_0: u32 = GPIO_OSPEEDR_OSPEEDR10_0;
pub const GPIO_OSPEEDER_OSPEEDR10_1: u32 = GPIO_OSPEEDR_OSPEEDR10_1;
pub const GPIO_OSPEEDER_OSPEEDR11_Pos: u32 = GPIO_OSPEEDR_OSPEEDR11_Pos;
pub const GPIO_OSPEEDER_OSPEEDR11_Msk: u32 = GPIO_OSPEEDR_OSPEEDR11_Msk;
pub const GPIO_OSPEEDER_OSPEEDR11: u32 = GPIO_OSPEEDR_OSPEEDR11;
pub const GPIO_OSPEEDER_OSPEEDR11_0: u32 = GPIO_OSPEEDR_OSPEEDR11_0;
pub const GPIO_OSPEEDER_OSPEEDR11_1: u32 = GPIO_OSPEEDR_OSPEEDR11_1;
pub const GPIO_OSPEEDER_OSPEEDR12_Pos: u32 = GPIO_OSPEEDR_OSPEEDR12_Pos;
pub const GPIO_OSPEEDER_OSPEEDR12_Msk: u32 = GPIO_OSPEEDR_OSPEEDR12_Msk;
pub const GPIO_OSPEEDER_OSPEEDR12: u32 = GPIO_OSPEEDR_OSPEEDR12;
pub const GPIO_OSPEEDER_OSPEEDR12_0: u32 = GPIO_OSPEEDR_OSPEEDR12_0;
pub const GPIO_OSPEEDER_OSPEEDR12_1: u32 = GPIO_OSPEEDR_OSPEEDR12_1;
pub const GPIO_OSPEEDER_OSPEEDR13_Pos: u32 = GPIO_OSPEEDR_OSPEEDR13_Pos;
pub const GPIO_OSPEEDER_OSPEEDR13_Msk: u32 = GPIO_OSPEEDR_OSPEEDR13_Msk;
pub const GPIO_OSPEEDER_OSPEEDR13: u32 = GPIO_OSPEEDR_OSPEEDR13;
pub const GPIO_OSPEEDER_OSPEEDR13_0: u32 = GPIO_OSPEEDR_OSPEEDR13_0;
pub const GPIO_OSPEEDER_OSPEEDR13_1: u32 = GPIO_OSPEEDR_OSPEEDR13_1;
pub const GPIO_OSPEEDER_OSPEEDR14_Pos: u32 = GPIO_OSPEEDR_OSPEEDR14_Pos;
pub const GPIO_OSPEEDER_OSPEEDR14_Msk: u32 = GPIO_OSPEEDR_OSPEEDR14_Msk;
pub const GPIO_OSPEEDER_OSPEEDR14: u32 = GPIO_OSPEEDR_OSPEEDR14;
pub const GPIO_OSPEEDER_OSPEEDR14_0: u32 = GPIO_OSPEEDR_OSPEEDR14_0;
pub const GPIO_OSPEEDER_OSPEEDR14_1: u32 = GPIO_OSPEEDR_OSPEEDR14_1;
pub const GPIO_OSPEEDER_OSPEEDR15_Pos: u32 = GPIO_OSPEEDR_OSPEEDR15_Pos;
pub const GPIO_OSPEEDER_OSPEEDR15_Msk: u32 = GPIO_OSPEEDR_OSPEEDR15_Msk;
pub const GPIO_OSPEEDER_OSPEEDR15: u32 = GPIO_OSPEEDR_OSPEEDR15;
pub const GPIO_OSPEEDER_OSPEEDR15_0: u32 = GPIO_OSPEEDR_OSPEEDR15_0;
pub const GPIO_OSPEEDER_OSPEEDR15_1: u32 = GPIO_OSPEEDR_OSPEEDR15_1;
pub const GPIO_PUPDR_PUPDR0_Pos: u32 = 0;
pub const GPIO_PUPDR_PUPDR0_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR0_Pos;
pub const GPIO_PUPDR_PUPDR0: u32 = GPIO_PUPDR_PUPDR0_Msk;
pub const GPIO_PUPDR_PUPDR0_0: u32 = 0x1 << GPIO_PUPDR_PUPDR0_Pos;
pub const GPIO_PUPDR_PUPDR0_1: u32 = 0x2 << GPIO_PUPDR_PUPDR0_Pos;
pub const GPIO_PUPDR_PUPDR1_Pos: u32 = 2;
pub const GPIO_PUPDR_PUPDR1_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR1_Pos;
pub const GPIO_PUPDR_PUPDR1: u32 = GPIO_PUPDR_PUPDR1_Msk;
pub const GPIO_PUPDR_PUPDR1_0: u32 = 0x1 << GPIO_PUPDR_PUPDR1_Pos;
pub const GPIO_PUPDR_PUPDR1_1: u32 = 0x2 << GPIO_PUPDR_PUPDR1_Pos;
pub const GPIO_PUPDR_PUPDR2_Pos: u32 = 4;
pub const GPIO_PUPDR_PUPDR2_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR2_Pos;
pub const GPIO_PUPDR_PUPDR2: u32 = GPIO_PUPDR_PUPDR2_Msk;
pub const GPIO_PUPDR_PUPDR2_0: u32 = 0x1 << GPIO_PUPDR_PUPDR2_Pos;
pub const GPIO_PUPDR_PUPDR2_1: u32 = 0x2 << GPIO_PUPDR_PUPDR2_Pos;
pub const GPIO_PUPDR_PUPDR3_Pos: u32 = 6;
pub const GPIO_PUPDR_PUPDR3_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR3_Pos;
pub const GPIO_PUPDR_PUPDR3: u32 = GPIO_PUPDR_PUPDR3_Msk;
pub const GPIO_PUPDR_PUPDR3_0: u32 = 0x1 << GPIO_PUPDR_PUPDR3_Pos;
pub const GPIO_PUPDR_PUPDR3_1: u32 = 0x2 << GPIO_PUPDR_PUPDR3_Pos;
pub const GPIO_PUPDR_PUPDR4_Pos: u32 = 8;
pub const GPIO_PUPDR_PUPDR4_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR4_Pos;
pub const GPIO_PUPDR_PUPDR4: u32 = GPIO_PUPDR_PUPDR4_Msk;
pub const GPIO_PUPDR_PUPDR4_0: u32 = 0x1 << GPIO_PUPDR_PUPDR4_Pos;
pub const GPIO_PUPDR_PUPDR4_1: u32 = 0x2 << GPIO_PUPDR_PUPDR4_Pos;
pub const GPIO_PUPDR_PUPDR5_Pos: u32 = 10;
pub const GPIO_PUPDR_PUPDR5_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR5_Pos;
pub const GPIO_PUPDR_PUPDR5: u32 = GPIO_PUPDR_PUPDR5_Msk;
pub const GPIO_PUPDR_PUPDR5_0: u32 = 0x1 << GPIO_PUPDR_PUPDR5_Pos;
pub const GPIO_PUPDR_PUPDR5_1: u32 = 0x2 << GPIO_PUPDR_PUPDR5_Pos;
pub const GPIO_PUPDR_PUPDR6_Pos: u32 = 12;
pub const GPIO_PUPDR_PUPDR6_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR6_Pos;
pub const GPIO_PUPDR_PUPDR6: u32 = GPIO_PUPDR_PUPDR6_Msk;
pub const GPIO_PUPDR_PUPDR6_0: u32 = 0x1 << GPIO_PUPDR_PUPDR6_Pos;
pub const GPIO_PUPDR_PUPDR6_1: u32 = 0x2 << GPIO_PUPDR_PUPDR6_Pos;
pub const GPIO_PUPDR_PUPDR7_Pos: u32 = 14;
pub const GPIO_PUPDR_PUPDR7_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR7_Pos;
pub const GPIO_PUPDR_PUPDR7: u32 = GPIO_PUPDR_PUPDR7_Msk;
pub const GPIO_PUPDR_PUPDR7_0: u32 = 0x1 << GPIO_PUPDR_PUPDR7_Pos;
pub const GPIO_PUPDR_PUPDR7_1: u32 = 0x2 << GPIO_PUPDR_PUPDR7_Pos;
pub const GPIO_PUPDR_PUPDR8_Pos: u32 = 16;
pub const GPIO_PUPDR_PUPDR8_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR8_Pos;
pub const GPIO_PUPDR_PUPDR8: u32 = GPIO_PUPDR_PUPDR8_Msk;
pub const GPIO_PUPDR_PUPDR8_0: u32 = 0x1 << GPIO_PUPDR_PUPDR8_Pos;
pub const GPIO_PUPDR_PUPDR8_1: u32 = 0x2 << GPIO_PUPDR_PUPDR8_Pos;
pub const GPIO_PUPDR_PUPDR9_Pos: u32 = 18;
pub const GPIO_PUPDR_PUPDR9_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR9_Pos;
pub const GPIO_PUPDR_PUPDR9: u32 = GPIO_PUPDR_PUPDR9_Msk;
pub const GPIO_PUPDR_PUPDR9_0: u32 = 0x1 << GPIO_PUPDR_PUPDR9_Pos;
pub const GPIO_PUPDR_PUPDR9_1: u32 = 0x2 << GPIO_PUPDR_PUPDR9_Pos;
pub const GPIO_PUPDR_PUPDR10_Pos: u32 = 20;
pub const GPIO_PUPDR_PUPDR10_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR10_Pos;
pub const GPIO_PUPDR_PUPDR10: u32 = GPIO_PUPDR_PUPDR10_Msk;
pub const GPIO_PUPDR_PUPDR10_0: u32 = 0x1 << GPIO_PUPDR_PUPDR10_Pos;
pub const GPIO_PUPDR_PUPDR10_1: u32 = 0x2 << GPIO_PUPDR_PUPDR10_Pos;
pub const GPIO_PUPDR_PUPDR11_Pos: u32 = 22;
pub const GPIO_PUPDR_PUPDR11_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR11_Pos;
pub const GPIO_PUPDR_PUPDR11: u32 = GPIO_PUPDR_PUPDR11_Msk;
pub const GPIO_PUPDR_PUPDR11_0: u32 = 0x1 << GPIO_PUPDR_PUPDR11_Pos;
pub const GPIO_PUPDR_PUPDR11_1: u32 = 0x2 << GPIO_PUPDR_PUPDR11_Pos;
pub const GPIO_PUPDR_PUPDR12_Pos: u32 = 24;
pub const GPIO_PUPDR_PUPDR12_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR12_Pos;
pub const GPIO_PUPDR_PUPDR12: u32 = GPIO_PUPDR_PUPDR12_Msk;
pub const GPIO_PUPDR_PUPDR12_0: u32 = 0x1 << GPIO_PUPDR_PUPDR12_Pos;
pub const GPIO_PUPDR_PUPDR12_1: u32 = 0x2 << GPIO_PUPDR_PUPDR12_Pos;
pub const GPIO_PUPDR_PUPDR13_Pos: u32 = 26;
pub const GPIO_PUPDR_PUPDR13_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR13_Pos;
pub const GPIO_PUPDR_PUPDR13: u32 = GPIO_PUPDR_PUPDR13_Msk;
pub const GPIO_PUPDR_PUPDR13_0: u32 = 0x1 << GPIO_PUPDR_PUPDR13_Pos;
pub const GPIO_PUPDR_PUPDR13_1: u32 = 0x2 << GPIO_PUPDR_PUPDR13_Pos;
pub const GPIO_PUPDR_PUPDR14_Pos: u32 = 28;
pub const GPIO_PUPDR_PUPDR14_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR14_Pos;
pub const GPIO_PUPDR_PUPDR14: u32 = GPIO_PUPDR_PUPDR14_Msk;
pub const GPIO_PUPDR_PUPDR14_0: u32 = 0x1 << GPIO_PUPDR_PUPDR14_Pos;
pub const GPIO_PUPDR_PUPDR14_1: u32 = 0x2 << GPIO_PUPDR_PUPDR14_Pos;
pub const GPIO_PUPDR_PUPDR15_Pos: u32 = 30;
pub const GPIO_PUPDR_PUPDR15_Msk: u32 = 0x3 << GPIO_PUPDR_PUPDR15_Pos;
pub const GPIO_PUPDR_PUPDR15: u32 = GPIO_PUPDR_PUPDR15_Msk;
pub const GPIO_PUPDR_PUPDR15_0: u32 = 0x1 << GPIO_PUPDR_PUPDR15_Pos;
pub const GPIO_PUPDR_PUPDR15_1: u32 = 0x2 << GPIO_PUPDR_PUPDR15_Pos;
pub const GPIO_IDR_ID0_Pos: u32 = 0;
pub const GPIO_IDR_ID0_Msk: u32 = 0x1 << GPIO_IDR_ID0_Pos;
pub const GPIO_IDR_ID0: u32 = GPIO_IDR_ID0_Msk;
pub const GPIO_IDR_ID1_Pos: u32 = 1;
pub const GPIO_IDR_ID1_Msk: u32 = 0x1 << GPIO_IDR_ID1_Pos;
pub const GPIO_IDR_ID1: u32 = GPIO_IDR_ID1_Msk;
pub const GPIO_IDR_ID2_Pos: u32 = 2;
pub const GPIO_IDR_ID2_Msk: u32 = 0x1 << GPIO_IDR_ID2_Pos;
pub const GPIO_IDR_ID2: u32 = GPIO_IDR_ID2_Msk;
pub const GPIO_IDR_ID3_Pos: u32 = 3;
pub const GPIO_IDR_ID3_Msk: u32 = 0x1 << GPIO_IDR_ID3_Pos;
pub const GPIO_IDR_ID3: u32 = GPIO_IDR_ID3_Msk;
pub const GPIO_IDR_ID4_Pos: u32 = 4;
pub const GPIO_IDR_ID4_Msk: u32 = 0x1 << GPIO_IDR_ID4_Pos;
pub const GPIO_IDR_ID4: u32 = GPIO_IDR_ID4_Msk;
pub const GPIO_IDR_ID5_Pos: u32 = 5;
pub const GPIO_IDR_ID5_Msk: u32 = 0x1 << GPIO_IDR_ID5_Pos;
pub const GPIO_IDR_ID5: u32 = GPIO_IDR_ID5_Msk;
pub const GPIO_IDR_ID6_Pos: u32 = 6;
pub const GPIO_IDR_ID6_Msk: u32 = 0x1 << GPIO_IDR_ID6_Pos;
pub const GPIO_IDR_ID6: u32 = GPIO_IDR_ID6_Msk;
pub const GPIO_IDR_ID7_Pos: u32 = 7;
pub const GPIO_IDR_ID7_Msk: u32 = 0x1 << GPIO_IDR_ID7_Pos;
pub const GPIO_IDR_ID7: u32 = GPIO_IDR_ID7_Msk;
pub const GPIO_IDR_ID8_Pos: u32 = 8;
pub const GPIO_IDR_ID8_Msk: u32 = 0x1 << GPIO_IDR_ID8_Pos;
pub const GPIO_IDR_ID8: u32 = GPIO_IDR_ID8_Msk;
pub const GPIO_IDR_ID9_Pos: u32 = 9;
pub const GPIO_IDR_ID9_Msk: u32 = 0x1 << GPIO_IDR_ID9_Pos;
pub const GPIO_IDR_ID9: u32 = GPIO_IDR_ID9_Msk;
pub const GPIO_IDR_ID10_Pos: u32 = 10;
pub const GPIO_IDR_ID10_Msk: u32 = 0x1 << GPIO_IDR_ID10_Pos;
pub const GPIO_IDR_ID10: u32 = GPIO_IDR_ID10_Msk;
pub const GPIO_IDR_ID11_Pos: u32 = 11;
pub const GPIO_IDR_ID11_Msk: u32 = 0x1 << GPIO_IDR_ID11_Pos;
pub const GPIO_IDR_ID11: u32 = GPIO_IDR_ID11_Msk;
pub const GPIO_IDR_ID12_Pos: u32 = 12;
pub const GPIO_IDR_ID12_Msk: u32 = 0x1 << GPIO_IDR_ID12_Pos;
pub const GPIO_IDR_ID12: u32 = GPIO_IDR_ID12_Msk;
pub const GPIO_IDR_ID13_Pos: u32 = 13;
pub const GPIO_IDR_ID13_Msk: u32 = 0x1 << GPIO_IDR_ID13_Pos;
pub const GPIO_IDR_ID13: u32 = GPIO_IDR_ID13_Msk;
pub const GPIO_IDR_ID14_Pos: u32 = 14;
pub const GPIO_IDR_ID14_Msk: u32 = 0x1 << GPIO_IDR_ID14_Pos;
pub const GPIO_IDR_ID14: u32 = GPIO_IDR_ID14_Msk;
pub const GPIO_IDR_ID15_Pos: u32 = 15;
pub const GPIO_IDR_ID15_Msk: u32 = 0x1 << GPIO_IDR_ID15_Pos;
pub const GPIO_IDR_ID15: u32 = GPIO_IDR_ID15_Msk;
pub const GPIO_IDR_IDR_0: u32 = GPIO_IDR_ID0;
pub const GPIO_IDR_IDR_1: u32 = GPIO_IDR_ID1;
pub const GPIO_IDR_IDR_2: u32 = GPIO_IDR_ID2;
pub const GPIO_IDR_IDR_3: u32 = GPIO_IDR_ID3;
pub const GPIO_IDR_IDR_4: u32 = GPIO_IDR_ID4;
pub const GPIO_IDR_IDR_5: u32 = GPIO_IDR_ID5;
pub const GPIO_IDR_IDR_6: u32 = GPIO_IDR_ID6;
pub const GPIO_IDR_IDR_7: u32 = GPIO_IDR_ID7;
pub const GPIO_IDR_IDR_8: u32 = GPIO_IDR_ID8;
pub const GPIO_IDR_IDR_9: u32 = GPIO_IDR_ID9;
pub const GPIO_IDR_IDR_10: u32 = GPIO_IDR_ID10;
pub const GPIO_IDR_IDR_11: u32 = GPIO_IDR_ID11;
pub const GPIO_IDR_IDR_12: u32 = GPIO_IDR_ID12;
pub const GPIO_IDR_IDR_13: u32 = GPIO_IDR_ID13;
pub const GPIO_IDR_IDR_14: u32 = GPIO_IDR_ID14;
pub const GPIO_IDR_IDR_15: u32 = GPIO_IDR_ID15;
pub const GPIO_ODR_OD0_Pos: u32 = 0;
pub const GPIO_ODR_OD0_Msk: u32 = 0x1 << GPIO_ODR_OD0_Pos;
pub const GPIO_ODR_OD0: u32 = GPIO_ODR_OD0_Msk;
pub const GPIO_ODR_OD1_Pos: u32 = 1;
pub const GPIO_ODR_OD1_Msk: u32 = 0x1 << GPIO_ODR_OD1_Pos;
pub const GPIO_ODR_OD1: u32 = GPIO_ODR_OD1_Msk;
pub const GPIO_ODR_OD2_Pos: u32 = 2;
pub const GPIO_ODR_OD2_Msk: u32 = 0x1 << GPIO_ODR_OD2_Pos;
pub const GPIO_ODR_OD2: u32 = GPIO_ODR_OD2_Msk;
pub const GPIO_ODR_OD3_Pos: u32 = 3;
pub const GPIO_ODR_OD3_Msk: u32 = 0x1 << GPIO_ODR_OD3_Pos;
pub const GPIO_ODR_OD3: u32 = GPIO_ODR_OD3_Msk;
pub const GPIO_ODR_OD4_Pos: u32 = 4;
pub const GPIO_ODR_OD4_Msk: u32 = 0x1 << GPIO_ODR_OD4_Pos;
pub const GPIO_ODR_OD4: u32 = GPIO_ODR_OD4_Msk;
pub const GPIO_ODR_OD5_Pos: u32 = 5;
pub const GPIO_ODR_OD5_Msk: u32 = 0x1 << GPIO_ODR_OD5_Pos;
pub const GPIO_ODR_OD5: u32 = GPIO_ODR_OD5_Msk;
pub const GPIO_ODR_OD6_Pos: u32 = 6;
pub const GPIO_ODR_OD6_Msk: u32 = 0x1 << GPIO_ODR_OD6_Pos;
pub const GPIO_ODR_OD6: u32 = GPIO_ODR_OD6_Msk;
pub const GPIO_ODR_OD7_Pos: u32 = 7;
pub const GPIO_ODR_OD7_Msk: u32 = 0x1 << GPIO_ODR_OD7_Pos;
pub const GPIO_ODR_OD7: u32 = GPIO_ODR_OD7_Msk;
pub const GPIO_ODR_OD8_Pos: u32 = 8;
pub const GPIO_ODR_OD8_Msk: u32 = 0x1 << GPIO_ODR_OD8_Pos;
pub const GPIO_ODR_OD8: u32 = GPIO_ODR_OD8_Msk;
pub const GPIO_ODR_OD9_Pos: u32 = 9;
pub const GPIO_ODR_OD9_Msk: u32 = 0x1 << GPIO_ODR_OD9_Pos;
pub const GPIO_ODR_OD9: u32 = GPIO_ODR_OD9_Msk;
pub const GPIO_ODR_OD10_Pos: u32 = 10;
pub const GPIO_ODR_OD10_Msk: u32 = 0x1 << GPIO_ODR_OD10_Pos;
pub const GPIO_ODR_OD10: u32 = GPIO_ODR_OD10_Msk;
pub const GPIO_ODR_OD11_Pos: u32 = 11;
pub const GPIO_ODR_OD11_Msk: u32 = 0x1 << GPIO_ODR_OD11_Pos;
pub const GPIO_ODR_OD11: u32 = GPIO_ODR_OD11_Msk;
pub const GPIO_ODR_OD12_Pos: u32 = 12;
pub const GPIO_ODR_OD12_Msk: u32 = 0x1 << GPIO_ODR_OD12_Pos;
pub const GPIO_ODR_OD12: u32 = GPIO_ODR_OD12_Msk;
pub const GPIO_ODR_OD13_Pos: u32 = 13;
pub const GPIO_ODR_OD13_Msk: u32 = 0x1 << GPIO_ODR_OD13_Pos;
pub const GPIO_ODR_OD13: u32 = GPIO_ODR_OD13_Msk;
pub const GPIO_ODR_OD14_Pos: u32 = 14;
pub const GPIO_ODR_OD14_Msk: u32 = 0x1 << GPIO_ODR_OD14_Pos;
pub const GPIO_ODR_OD14: u32 = GPIO_ODR_OD14_Msk;
pub const GPIO_ODR_OD15_Pos: u32 = 15;
pub const GPIO_ODR_OD15_Msk: u32 = 0x1 << GPIO_ODR_OD15_Pos;
pub const GPIO_ODR_OD15: u32 = GPIO_ODR_OD15_Msk;
pub const GPIO_ODR_ODR_0: u32 = GPIO_ODR_OD0;
pub const GPIO_ODR_ODR_1: u32 = GPIO_ODR_OD1;
pub const GPIO_ODR_ODR_2: u32 = GPIO_ODR_OD2;
pub const GPIO_ODR_ODR_3: u32 = GPIO_ODR_OD3;
pub const GPIO_ODR_ODR_4: u32 = GPIO_ODR_OD4;
pub const GPIO_ODR_ODR_5: u32 = GPIO_ODR_OD5;
pub const GPIO_ODR_ODR_6: u32 = GPIO_ODR_OD6;
pub const GPIO_ODR_ODR_7: u32 = GPIO_ODR_OD7;
pub const GPIO_ODR_ODR_8: u32 = GPIO_ODR_OD8;
pub const GPIO_ODR_ODR_9: u32 = GPIO_ODR_OD9;
pub const GPIO_ODR_ODR_10: u32 = GPIO_ODR_OD10;
pub const GPIO_ODR_ODR_11: u32 = GPIO_ODR_OD11;
pub const GPIO_ODR_ODR_12: u32 = GPIO_ODR_OD12;
pub const GPIO_ODR_ODR_13: u32 = GPIO_ODR_OD13;
pub const GPIO_ODR_ODR_14: u32 = GPIO_ODR_OD14;
pub const GPIO_ODR_ODR_15: u32 = GPIO_ODR_OD15;
pub const GPIO_BSRR_BS0_Pos: u32 = 0;
pub const GPIO_BSRR_BS0_Msk: u32 = 0x1 << GPIO_BSRR_BS0_Pos;
pub const GPIO_BSRR_BS0: u32 = GPIO_BSRR_BS0_Msk;
pub const GPIO_BSRR_BS1_Pos: u32 = 1;
pub const GPIO_BSRR_BS1_Msk: u32 = 0x1 << GPIO_BSRR_BS1_Pos;
pub const GPIO_BSRR_BS1: u32 = GPIO_BSRR_BS1_Msk;
pub const GPIO_BSRR_BS2_Pos: u32 = 2;
pub const GPIO_BSRR_BS2_Msk: u32 = 0x1 << GPIO_BSRR_BS2_Pos;
pub const GPIO_BSRR_BS2: u32 = GPIO_BSRR_BS2_Msk;
pub const GPIO_BSRR_BS3_Pos: u32 = 3;
pub const GPIO_BSRR_BS3_Msk: u32 = 0x1 << GPIO_BSRR_BS3_Pos;
pub const GPIO_BSRR_BS3: u32 = GPIO_BSRR_BS3_Msk;
pub const GPIO_BSRR_BS4_Pos: u32 = 4;
pub const GPIO_BSRR_BS4_Msk: u32 = 0x1 << GPIO_BSRR_BS4_Pos;
pub const GPIO_BSRR_BS4: u32 = GPIO_BSRR_BS4_Msk;
pub const GPIO_BSRR_BS5_Pos: u32 = 5;
pub const GPIO_BSRR_BS5_Msk: u32 = 0x1 << GPIO_BSRR_BS5_Pos;
pub const GPIO_BSRR_BS5: u32 = GPIO_BSRR_BS5_Msk;
pub const GPIO_BSRR_BS6_Pos: u32 = 6;
pub const GPIO_BSRR_BS6_Msk: u32 = 0x1 << GPIO_BSRR_BS6_Pos;
pub const GPIO_BSRR_BS6: u32 = GPIO_BSRR_BS6_Msk;
pub const GPIO_BSRR_BS7_Pos: u32 = 7;
pub const GPIO_BSRR_BS7_Msk: u32 = 0x1 << GPIO_BSRR_BS7_Pos;
pub const GPIO_BSRR_BS7: u32 = GPIO_BSRR_BS7_Msk;
pub const GPIO_BSRR_BS8_Pos: u32 = 8;
pub const GPIO_BSRR_BS8_Msk: u32 = 0x1 << GPIO_BSRR_BS8_Pos;
pub const GPIO_BSRR_BS8: u32 = GPIO_BSRR_BS8_Msk;
pub const GPIO_BSRR_BS9_Pos: u32 = 9;
pub const GPIO_BSRR_BS9_Msk: u32 = 0x1 << GPIO_BSRR_BS9_Pos;
pub const GPIO_BSRR_BS9: u32 = GPIO_BSRR_BS9_Msk;
pub const GPIO_BSRR_BS10_Pos: u32 = 10;
pub const GPIO_BSRR_BS10_Msk: u32 = 0x1 << GPIO_BSRR_BS10_Pos;
pub const GPIO_BSRR_BS10: u32 = GPIO_BSRR_BS10_Msk;
pub const GPIO_BSRR_BS11_Pos: u32 = 11;
pub const GPIO_BSRR_BS11_Msk: u32 = 0x1 << GPIO_BSRR_BS11_Pos;
pub const GPIO_BSRR_BS11: u32 = GPIO_BSRR_BS11_Msk;
pub const GPIO_BSRR_BS12_Pos: u32 = 12;
pub const GPIO_BSRR_BS12_Msk: u32 = 0x1 << GPIO_BSRR_BS12_Pos;
pub const GPIO_BSRR_BS12: u32 = GPIO_BSRR_BS12_Msk;
pub const GPIO_BSRR_BS13_Pos: u32 = 13;
pub const GPIO_BSRR_BS13_Msk: u32 = 0x1 << GPIO_BSRR_BS13_Pos;
pub const GPIO_BSRR_BS13: u32 = GPIO_BSRR_BS13_Msk;
pub const GPIO_BSRR_BS14_Pos: u32 = 14;
pub const GPIO_BSRR_BS14_Msk: u32 = 0x1 << GPIO_BSRR_BS14_Pos;
pub const GPIO_BSRR_BS14: u32 = GPIO_BSRR_BS14_Msk;
pub const GPIO_BSRR_BS15_Pos: u32 = 15;
pub const GPIO_BSRR_BS15_Msk: u32 = 0x1 << GPIO_BSRR_BS15_Pos;
pub const GPIO_BSRR_BS15: u32 = GPIO_BSRR_BS15_Msk;
pub const GPIO_BSRR_BR0_Pos: u32 = 16;
pub const GPIO_BSRR_BR0_Msk: u32 = 0x1 << GPIO_BSRR_BR0_Pos;
pub const GPIO_BSRR_BR0: u32 = GPIO_BSRR_BR0_Msk;
pub const GPIO_BSRR_BR1_Pos: u32 = 17;
pub const GPIO_BSRR_BR1_Msk: u32 = 0x1 << GPIO_BSRR_BR1_Pos;
pub const GPIO_BSRR_BR1: u32 = GPIO_BSRR_BR1_Msk;
pub const GPIO_BSRR_BR2_Pos: u32 = 18;
pub const GPIO_BSRR_BR2_Msk: u32 = 0x1 << GPIO_BSRR_BR2_Pos;
pub const GPIO_BSRR_BR2: u32 = GPIO_BSRR_BR2_Msk;
pub const GPIO_BSRR_BR3_Pos: u32 = 19;
pub const GPIO_BSRR_BR3_Msk: u32 = 0x1 << GPIO_BSRR_BR3_Pos;
pub const GPIO_BSRR_BR3: u32 = GPIO_BSRR_BR3_Msk;
pub const GPIO_BSRR_BR4_Pos: u32 = 20;
pub const GPIO_BSRR_BR4_Msk: u32 = 0x1 << GPIO_BSRR_BR4_Pos;
pub const GPIO_BSRR_BR4: u32 = GPIO_BSRR_BR4_Msk;
pub const GPIO_BSRR_BR5_Pos: u32 = 21;
pub const GPIO_BSRR_BR5_Msk: u32 = 0x1 << GPIO_BSRR_BR5_Pos;
pub const GPIO_BSRR_BR5: u32 = GPIO_BSRR_BR5_Msk;
pub const GPIO_BSRR_BR6_Pos: u32 = 22;
pub const GPIO_BSRR_BR6_Msk: u32 = 0x1 << GPIO_BSRR_BR6_Pos;
pub const GPIO_BSRR_BR6: u32 = GPIO_BSRR_BR6_Msk;
pub const GPIO_BSRR_BR7_Pos: u32 = 23;
pub const GPIO_BSRR_BR7_Msk: u32 = 0x1 << GPIO_BSRR_BR7_Pos;
pub const GPIO_BSRR_BR7: u32 = GPIO_BSRR_BR7_Msk;
pub const GPIO_BSRR_BR8_Pos: u32 = 24;
pub const GPIO_BSRR_BR8_Msk: u32 = 0x1 << GPIO_BSRR_BR8_Pos;
pub const GPIO_BSRR_BR8: u32 = GPIO_BSRR_BR8_Msk;
pub const GPIO_BSRR_BR9_Pos: u32 = 25;
pub const GPIO_BSRR_BR9_Msk: u32 = 0x1 << GPIO_BSRR_BR9_Pos;
pub const GPIO_BSRR_BR9: u32 = GPIO_BSRR_BR9_Msk;
pub const GPIO_BSRR_BR10_Pos: u32 = 26;
pub const GPIO_BSRR_BR10_Msk: u32 = 0x1 << GPIO_BSRR_BR10_Pos;
pub const GPIO_BSRR_BR10: u32 = GPIO_BSRR_BR10_Msk;
pub const GPIO_BSRR_BR11_Pos: u32 = 27;
pub const GPIO_BSRR_BR11_Msk: u32 = 0x1 << GPIO_BSRR_BR11_Pos;
pub const GPIO_BSRR_BR11: u32 = GPIO_BSRR_BR11_Msk;
pub const GPIO_BSRR_BR12_Pos: u32 = 28;
pub const GPIO_BSRR_BR12_Msk: u32 = 0x1 << GPIO_BSRR_BR12_Pos;
pub const GPIO_BSRR_BR12: u32 = GPIO_BSRR_BR12_Msk;
pub const GPIO_BSRR_BR13_Pos: u32 = 29;
pub const GPIO_BSRR_BR13_Msk: u32 = 0x1 << GPIO_BSRR_BR13_Pos;
pub const GPIO_BSRR_BR13: u32 = GPIO_BSRR_BR13_Msk;
pub const GPIO_BSRR_BR14_Pos: u32 = 30;
pub const GPIO_BSRR_BR14_Msk: u32 = 0x1 << GPIO_BSRR_BR14_Pos;
pub const GPIO_BSRR_BR14: u32 = GPIO_BSRR_BR14_Msk;
pub const GPIO_BSRR_BR15_Pos: u32 = 31;
pub const GPIO_BSRR_BR15_Msk: u32 = 0x1 << GPIO_BSRR_BR15_Pos;
pub const GPIO_BSRR_BR15: u32 = GPIO_BSRR_BR15_Msk;
pub const GPIO_BSRR_BS_0: u32 = GPIO_BSRR_BS0;
pub const GPIO_BSRR_BS_1: u32 = GPIO_BSRR_BS1;
pub const GPIO_BSRR_BS_2: u32 = GPIO_BSRR_BS2;
pub const GPIO_BSRR_BS_3: u32 = GPIO_BSRR_BS3;
pub const GPIO_BSRR_BS_4: u32 = GPIO_BSRR_BS4;
pub const GPIO_BSRR_BS_5: u32 = GPIO_BSRR_BS5;
pub const GPIO_BSRR_BS_6: u32 = GPIO_BSRR_BS6;
pub const GPIO_BSRR_BS_7: u32 = GPIO_BSRR_BS7;
pub const GPIO_BSRR_BS_8: u32 = GPIO_BSRR_BS8;
pub const GPIO_BSRR_BS_9: u32 = GPIO_BSRR_BS9;
pub const GPIO_BSRR_BS_10: u32 = GPIO_BSRR_BS10;
pub const GPIO_BSRR_BS_11: u32 = GPIO_BSRR_BS11;
pub const GPIO_BSRR_BS_12: u32 = GPIO_BSRR_BS12;
pub const GPIO_BSRR_BS_13: u32 = GPIO_BSRR_BS13;
pub const GPIO_BSRR_BS_14: u32 = GPIO_BSRR_BS14;
pub const GPIO_BSRR_BS_15: u32 = GPIO_BSRR_BS15;
pub const GPIO_BSRR_BR_0: u32 = GPIO_BSRR_BR0;
pub const GPIO_BSRR_BR_1: u32 = GPIO_BSRR_BR1;
pub const GPIO_BSRR_BR_2: u32 = GPIO_BSRR_BR2;
pub const GPIO_BSRR_BR_3: u32 = GPIO_BSRR_BR3;
pub const GPIO_BSRR_BR_4: u32 = GPIO_BSRR_BR4;
pub const GPIO_BSRR_BR_5: u32 = GPIO_BSRR_BR5;
pub const GPIO_BSRR_BR_6: u32 = GPIO_BSRR_BR6;
pub const GPIO_BSRR_BR_7: u32 = GPIO_BSRR_BR7;
pub const GPIO_BSRR_BR_8: u32 = GPIO_BSRR_BR8;
pub const GPIO_BSRR_BR_9: u32 = GPIO_BSRR_BR9;
pub const GPIO_BSRR_BR_10: u32 = GPIO_BSRR_BR10;
pub const GPIO_BSRR_BR_11: u32 = GPIO_BSRR_BR11;
pub const GPIO_BSRR_BR_12: u32 = GPIO_BSRR_BR12;
pub const GPIO_BSRR_BR_13: u32 = GPIO_BSRR_BR13;
pub const GPIO_BSRR_BR_14: u32 = GPIO_BSRR_BR14;
pub const GPIO_BSRR_BR_15: u32 = GPIO_BSRR_BR15;
pub const GPIO_LCKR_LCK0_Pos: u32 = 0;
pub const GPIO_LCKR_LCK0_Msk: u32 = 0x1 << GPIO_LCKR_LCK0_Pos;
pub const GPIO_LCKR_LCK0: u32 = GPIO_LCKR_LCK0_Msk;
pub const GPIO_LCKR_LCK1_Pos: u32 = 1;
pub const GPIO_LCKR_LCK1_Msk: u32 = 0x1 << GPIO_LCKR_LCK1_Pos;
pub const GPIO_LCKR_LCK1: u32 = GPIO_LCKR_LCK1_Msk;
pub const GPIO_LCKR_LCK2_Pos: u32 = 2;
pub const GPIO_LCKR_LCK2_Msk: u32 = 0x1 << GPIO_LCKR_LCK2_Pos;
pub const GPIO_LCKR_LCK2: u32 = GPIO_LCKR_LCK2_Msk;
pub const GPIO_LCKR_LCK3_Pos: u32 = 3;
pub const GPIO_LCKR_LCK3_Msk: u32 = 0x1 << GPIO_LCKR_LCK3_Pos;
pub const GPIO_LCKR_LCK3: u32 = GPIO_LCKR_LCK3_Msk;
pub const GPIO_LCKR_LCK4_Pos: u32 = 4;
pub const GPIO_LCKR_LCK4_Msk: u32 = 0x1 << GPIO_LCKR_LCK4_Pos;
pub const GPIO_LCKR_LCK4: u32 = GPIO_LCKR_LCK4_Msk;
pub const GPIO_LCKR_LCK5_Pos: u32 = 5;
pub const GPIO_LCKR_LCK5_Msk: u32 = 0x1 << GPIO_LCKR_LCK5_Pos;
pub const GPIO_LCKR_LCK5: u32 = GPIO_LCKR_LCK5_Msk;
pub const GPIO_LCKR_LCK6_Pos: u32 = 6;
pub const GPIO_LCKR_LCK6_Msk: u32 = 0x1 << GPIO_LCKR_LCK6_Pos;
pub const GPIO_LCKR_LCK6: u32 = GPIO_LCKR_LCK6_Msk;
pub const GPIO_LCKR_LCK7_Pos: u32 = 7;
pub const GPIO_LCKR_LCK7_Msk: u32 = 0x1 << GPIO_LCKR_LCK7_Pos;
pub const GPIO_LCKR_LCK7: u32 = GPIO_LCKR_LCK7_Msk;
pub const GPIO_LCKR_LCK8_Pos: u32 = 8;
pub const GPIO_LCKR_LCK8_Msk: u32 = 0x1 << GPIO_LCKR_LCK8_Pos;
pub const GPIO_LCKR_LCK8: u32 = GPIO_LCKR_LCK8_Msk;
pub const GPIO_LCKR_LCK9_Pos: u32 = 9;
pub const GPIO_LCKR_LCK9_Msk: u32 = 0x1 << GPIO_LCKR_LCK9_Pos;
pub const GPIO_LCKR_LCK9: u32 = GPIO_LCKR_LCK9_Msk;
pub const GPIO_LCKR_LCK10_Pos: u32 = 10;
pub const GPIO_LCKR_LCK10_Msk: u32 = 0x1 << GPIO_LCKR_LCK10_Pos;
pub const GPIO_LCKR_LCK10: u32 = GPIO_LCKR_LCK10_Msk;
pub const GPIO_LCKR_LCK11_Pos: u32 = 11;
pub const GPIO_LCKR_LCK11_Msk: u32 = 0x1 << GPIO_LCKR_LCK11_Pos;
pub const GPIO_LCKR_LCK11: u32 = GPIO_LCKR_LCK11_Msk;
pub const GPIO_LCKR_LCK12_Pos: u32 = 12;
pub const GPIO_LCKR_LCK12_Msk: u32 = 0x1 << GPIO_LCKR_LCK12_Pos;
pub const GPIO_LCKR_LCK12: u32 = GPIO_LCKR_LCK12_Msk;
pub const GPIO_LCKR_LCK13_Pos: u32 = 13;
pub const GPIO_LCKR_LCK13_Msk: u32 = 0x1 << GPIO_LCKR_LCK13_Pos;
pub const GPIO_LCKR_LCK13: u32 = GPIO_LCKR_LCK13_Msk;
pub const GPIO_LCKR_LCK14_Pos: u32 = 14;
pub const GPIO_LCKR_LCK14_Msk: u32 = 0x1 << GPIO_LCKR_LCK14_Pos;
pub const GPIO_LCKR_LCK14: u32 = GPIO_LCKR_LCK14_Msk;
pub const GPIO_LCKR_LCK15_Pos: u32 = 15;
pub const GPIO_LCKR_LCK15_Msk: u32 = 0x1 << GPIO_LCKR_LCK15_Pos;
pub const GPIO_LCKR_LCK15: u32 = GPIO_LCKR_LCK15_Msk;
pub const GPIO_LCKR_LCKK_Pos: u32 = 16;
pub const GPIO_LCKR_LCKK_Msk: u32 = 0x1 << GPIO_LCKR_LCKK_Pos;
pub const GPIO_LCKR_LCKK: u32 = GPIO_LCKR_LCKK_Msk;
pub const GPIO_AFRL_AFRL0_Pos: u32 = 0;
pub const GPIO_AFRL_AFRL0_Msk: u32 = 0xF << GPIO_AFRL_AFRL0_Pos;
pub const GPIO_AFRL_AFRL0: u32 = GPIO_AFRL_AFRL0_Msk;
pub const GPIO_AFRL_AFRL0_0: u32 = 0x1 << GPIO_AFRL_AFRL0_Pos;
pub const GPIO_AFRL_AFRL0_1: u32 = 0x2 << GPIO_AFRL_AFRL0_Pos;
pub const GPIO_AFRL_AFRL0_2: u32 = 0x4 << GPIO_AFRL_AFRL0_Pos;
pub const GPIO_AFRL_AFRL0_3: u32 = 0x8 << GPIO_AFRL_AFRL0_Pos;
pub const GPIO_AFRL_AFRL1_Pos: u32 = 4;
pub const GPIO_AFRL_AFRL1_Msk: u32 = 0xF << GPIO_AFRL_AFRL1_Pos;
pub const GPIO_AFRL_AFRL1: u32 = GPIO_AFRL_AFRL1_Msk;
pub const GPIO_AFRL_AFRL1_0: u32 = 0x1 << GPIO_AFRL_AFRL1_Pos;
pub const GPIO_AFRL_AFRL1_1: u32 = 0x2 << GPIO_AFRL_AFRL1_Pos;
pub const GPIO_AFRL_AFRL1_2: u32 = 0x4 << GPIO_AFRL_AFRL1_Pos;
pub const GPIO_AFRL_AFRL1_3: u32 = 0x8 << GPIO_AFRL_AFRL1_Pos;
pub const GPIO_AFRL_AFRL2_Pos: u32 = 8;
pub const GPIO_AFRL_AFRL2_Msk: u32 = 0xF << GPIO_AFRL_AFRL2_Pos;
pub const GPIO_AFRL_AFRL2: u32 = GPIO_AFRL_AFRL2_Msk;
pub const GPIO_AFRL_AFRL2_0: u32 = 0x1 << GPIO_AFRL_AFRL2_Pos;
pub const GPIO_AFRL_AFRL2_1: u32 = 0x2 << GPIO_AFRL_AFRL2_Pos;
pub const GPIO_AFRL_AFRL2_2: u32 = 0x4 << GPIO_AFRL_AFRL2_Pos;
pub const GPIO_AFRL_AFRL2_3: u32 = 0x8 << GPIO_AFRL_AFRL2_Pos;
pub const GPIO_AFRL_AFRL3_Pos: u32 = 12;
pub const GPIO_AFRL_AFRL3_Msk: u32 = 0xF << GPIO_AFRL_AFRL3_Pos;
pub const GPIO_AFRL_AFRL3: u32 = GPIO_AFRL_AFRL3_Msk;
pub const GPIO_AFRL_AFRL3_0: u32 = 0x1 << GPIO_AFRL_AFRL3_Pos;
pub const GPIO_AFRL_AFRL3_1: u32 = 0x2 << GPIO_AFRL_AFRL3_Pos;
pub const GPIO_AFRL_AFRL3_2: u32 = 0x4 << GPIO_AFRL_AFRL3_Pos;
pub const GPIO_AFRL_AFRL3_3: u32 = 0x8 << GPIO_AFRL_AFRL3_Pos;
pub const GPIO_AFRL_AFRL4_Pos: u32 = 16;
pub const GPIO_AFRL_AFRL4_Msk: u32 = 0xF << GPIO_AFRL_AFRL4_Pos;
pub const GPIO_AFRL_AFRL4: u32 = GPIO_AFRL_AFRL4_Msk;
pub const GPIO_AFRL_AFRL4_0: u32 = 0x1 << GPIO_AFRL_AFRL4_Pos;
pub const GPIO_AFRL_AFRL4_1: u32 = 0x2 << GPIO_AFRL_AFRL4_Pos;
pub const GPIO_AFRL_AFRL4_2: u32 = 0x4 << GPIO_AFRL_AFRL4_Pos;
pub const GPIO_AFRL_AFRL4_3: u32 = 0x8 << GPIO_AFRL_AFRL4_Pos;
pub const GPIO_AFRL_AFRL5_Pos: u32 = 20;
pub const GPIO_AFRL_AFRL5_Msk: u32 = 0xF << GPIO_AFRL_AFRL5_Pos;
pub const GPIO_AFRL_AFRL5: u32 = GPIO_AFRL_AFRL5_Msk;
pub const GPIO_AFRL_AFRL5_0: u32 = 0x1 << GPIO_AFRL_AFRL5_Pos;
pub const GPIO_AFRL_AFRL5_1: u32 = 0x2 << GPIO_AFRL_AFRL5_Pos;
pub const GPIO_AFRL_AFRL5_2: u32 = 0x4 << GPIO_AFRL_AFRL5_Pos;
pub const GPIO_AFRL_AFRL5_3: u32 = 0x8 << GPIO_AFRL_AFRL5_Pos;
pub const GPIO_AFRL_AFRL6_Pos: u32 = 24;
pub const GPIO_AFRL_AFRL6_Msk: u32 = 0xF << GPIO_AFRL_AFRL6_Pos;
pub const GPIO_AFRL_AFRL6: u32 = GPIO_AFRL_AFRL6_Msk;
pub const GPIO_AFRL_AFRL6_0: u32 = 0x1 << GPIO_AFRL_AFRL6_Pos;
pub const GPIO_AFRL_AFRL6_1: u32 = 0x2 << GPIO_AFRL_AFRL6_Pos;
pub const GPIO_AFRL_AFRL6_2: u32 = 0x4 << GPIO_AFRL_AFRL6_Pos;
pub const GPIO_AFRL_AFRL6_3: u32 = 0x8 << GPIO_AFRL_AFRL6_Pos;
pub const GPIO_AFRL_AFRL7_Pos: u32 = 28;
pub const GPIO_AFRL_AFRL7_Msk: u32 = 0xF << GPIO_AFRL_AFRL7_Pos;
pub const GPIO_AFRL_AFRL7: u32 = GPIO_AFRL_AFRL7_Msk;
pub const GPIO_AFRL_AFRL7_0: u32 = 0x1 << GPIO_AFRL_AFRL7_Pos;
pub const GPIO_AFRL_AFRL7_1: u32 = 0x2 << GPIO_AFRL_AFRL7_Pos;
pub const GPIO_AFRL_AFRL7_2: u32 = 0x4 << GPIO_AFRL_AFRL7_Pos;
pub const GPIO_AFRL_AFRL7_3: u32 = 0x8 << GPIO_AFRL_AFRL7_Pos;
pub const GPIO_AFRH_AFRH0_Pos: u32 = 0;
pub const GPIO_AFRH_AFRH0_Msk: u32 = 0xF << GPIO_AFRH_AFRH0_Pos;
pub const GPIO_AFRH_AFRH0: u32 = GPIO_AFRH_AFRH0_Msk;
pub const GPIO_AFRH_AFRH0_0: u32 = 0x1 << GPIO_AFRH_AFRH0_Pos;
pub const GPIO_AFRH_AFRH0_1: u32 = 0x2 << GPIO_AFRH_AFRH0_Pos;
pub const GPIO_AFRH_AFRH0_2: u32 = 0x4 << GPIO_AFRH_AFRH0_Pos;
pub const GPIO_AFRH_AFRH0_3: u32 = 0x8 << GPIO_AFRH_AFRH0_Pos;
pub const GPIO_AFRH_AFRH1_Pos: u32 = 4;
pub const GPIO_AFRH_AFRH1_Msk: u32 = 0xF << GPIO_AFRH_AFRH1_Pos;
pub const GPIO_AFRH_AFRH1: u32 = GPIO_AFRH_AFRH1_Msk;
pub const GPIO_AFRH_AFRH1_0: u32 = 0x1 << GPIO_AFRH_AFRH1_Pos;
pub const GPIO_AFRH_AFRH1_1: u32 = 0x2 << GPIO_AFRH_AFRH1_Pos;
pub const GPIO_AFRH_AFRH1_2: u32 = 0x4 << GPIO_AFRH_AFRH1_Pos;
pub const GPIO_AFRH_AFRH1_3: u32 = 0x8 << GPIO_AFRH_AFRH1_Pos;
pub const GPIO_AFRH_AFRH2_Pos: u32 = 8;
pub const GPIO_AFRH_AFRH2_Msk: u32 = 0xF << GPIO_AFRH_AFRH2_Pos;
pub const GPIO_AFRH_AFRH2: u32 = GPIO_AFRH_AFRH2_Msk;
pub const GPIO_AFRH_AFRH2_0: u32 = 0x1 << GPIO_AFRH_AFRH2_Pos;
pub const GPIO_AFRH_AFRH2_1: u32 = 0x2 << GPIO_AFRH_AFRH2_Pos;
pub const GPIO_AFRH_AFRH2_2: u32 = 0x4 << GPIO_AFRH_AFRH2_Pos;
pub const GPIO_AFRH_AFRH2_3: u32 = 0x8 << GPIO_AFRH_AFRH2_Pos;
pub const GPIO_AFRH_AFRH3_Pos: u32 = 12;
pub const GPIO_AFRH_AFRH3_Msk: u32 = 0xF << GPIO_AFRH_AFRH3_Pos;
pub const GPIO_AFRH_AFRH3: u32 = GPIO_AFRH_AFRH3_Msk;
pub const GPIO_AFRH_AFRH3_0: u32 = 0x1 << GPIO_AFRH_AFRH3_Pos;
pub const GPIO_AFRH_AFRH3_1: u32 = 0x2 << GPIO_AFRH_AFRH3_Pos;
pub const GPIO_AFRH_AFRH3_2: u32 = 0x4 << GPIO_AFRH_AFRH3_Pos;
pub const GPIO_AFRH_AFRH3_3: u32 = 0x8 << GPIO_AFRH_AFRH3_Pos;
pub const GPIO_AFRH_AFRH4_Pos: u32 = 16;
pub const GPIO_AFRH_AFRH4_Msk: u32 = 0xF << GPIO_AFRH_AFRH4_Pos;
pub const GPIO_AFRH_AFRH4: u32 = GPIO_AFRH_AFRH4_Msk;
pub const GPIO_AFRH_AFRH4_0: u32 = 0x1 << GPIO_AFRH_AFRH4_Pos;
pub const GPIO_AFRH_AFRH4_1: u32 = 0x2 << GPIO_AFRH_AFRH4_Pos;
pub const GPIO_AFRH_AFRH4_2: u32 = 0x4 << GPIO_AFRH_AFRH4_Pos;
pub const GPIO_AFRH_AFRH4_3: u32 = 0x8 << GPIO_AFRH_AFRH4_Pos;
pub const GPIO_AFRH_AFRH5_Pos: u32 = 20;
pub const GPIO_AFRH_AFRH5_Msk: u32 = 0xF << GPIO_AFRH_AFRH5_Pos;
pub const GPIO_AFRH_AFRH5: u32 = GPIO_AFRH_AFRH5_Msk;
pub const GPIO_AFRH_AFRH5_0: u32 = 0x1 << GPIO_AFRH_AFRH5_Pos;
pub const GPIO_AFRH_AFRH5_1: u32 = 0x2 << GPIO_AFRH_AFRH5_Pos;
pub const GPIO_AFRH_AFRH5_2: u32 = 0x4 << GPIO_AFRH_AFRH5_Pos;
pub const GPIO_AFRH_AFRH5_3: u32 = 0x8 << GPIO_AFRH_AFRH5_Pos;
pub const GPIO_AFRH_AFRH6_Pos: u32 = 24;
pub const GPIO_AFRH_AFRH6_Msk: u32 = 0xF << GPIO_AFRH_AFRH6_Pos;
pub const GPIO_AFRH_AFRH6: u32 = GPIO_AFRH_AFRH6_Msk;
pub const GPIO_AFRH_AFRH6_0: u32 = 0x1 << GPIO_AFRH_AFRH6_Pos;
pub const GPIO_AFRH_AFRH6_1: u32 = 0x2 << GPIO_AFRH_AFRH6_Pos;
pub const GPIO_AFRH_AFRH6_2: u32 = 0x4 << GPIO_AFRH_AFRH6_Pos;
pub const GPIO_AFRH_AFRH6_3: u32 = 0x8 << GPIO_AFRH_AFRH6_Pos;
pub const GPIO_AFRH_AFRH7_Pos: u32 = 28;
pub const GPIO_AFRH_AFRH7_Msk: u32 = 0xF << GPIO_AFRH_AFRH7_Pos;
pub const GPIO_AFRH_AFRH7: u32 = GPIO_AFRH_AFRH7_Msk;
pub const GPIO_AFRH_AFRH7_0: u32 = 0x1 << GPIO_AFRH_AFRH7_Pos;
pub const GPIO_AFRH_AFRH7_1: u32 = 0x2 << GPIO_AFRH_AFRH7_Pos;
pub const GPIO_AFRH_AFRH7_2: u32 = 0x4 << GPIO_AFRH_AFRH7_Pos;
pub const GPIO_AFRH_AFRH7_3: u32 = 0x8 << GPIO_AFRH_AFRH7_Pos;
pub const HASH_CR_INIT_Pos: u32 = 2;
pub const HASH_CR_INIT_Msk: u32 = 0x1 << HASH_CR_INIT_Pos;
pub const HASH_CR_INIT: u32 = HASH_CR_INIT_Msk;
pub const HASH_CR_DMAE_Pos: u32 = 3;
pub const HASH_CR_DMAE_Msk: u32 = 0x1 << HASH_CR_DMAE_Pos;
pub const HASH_CR_DMAE: u32 = HASH_CR_DMAE_Msk;
pub const HASH_CR_DATATYPE_Pos: u32 = 4;
pub const HASH_CR_DATATYPE_Msk: u32 = 0x3 << HASH_CR_DATATYPE_Pos;
pub const HASH_CR_DATATYPE: u32 = HASH_CR_DATATYPE_Msk;
pub const HASH_CR_DATATYPE_0: u32 = 0x1 << HASH_CR_DATATYPE_Pos;
pub const HASH_CR_DATATYPE_1: u32 = 0x2 << HASH_CR_DATATYPE_Pos;
pub const HASH_CR_MODE_Pos: u32 = 6;
pub const HASH_CR_MODE_Msk: u32 = 0x1 << HASH_CR_MODE_Pos;
pub const HASH_CR_MODE: u32 = HASH_CR_MODE_Msk;
pub const HASH_CR_ALGO_Pos: u32 = 7;
pub const HASH_CR_ALGO_Msk: u32 = 0x801 << HASH_CR_ALGO_Pos;
pub const HASH_CR_ALGO: u32 = HASH_CR_ALGO_Msk;
pub const HASH_CR_ALGO_0: u32 = 0x001 << HASH_CR_ALGO_Pos;
pub const HASH_CR_ALGO_1: u32 = 0x800 << HASH_CR_ALGO_Pos;
pub const HASH_CR_NBW_Pos: u32 = 8;
pub const HASH_CR_NBW_Msk: u32 = 0xF << HASH_CR_NBW_Pos;
pub const HASH_CR_NBW: u32 = HASH_CR_NBW_Msk;
pub const HASH_CR_NBW_0: u32 = 0x1 << HASH_CR_NBW_Pos;
pub const HASH_CR_NBW_1: u32 = 0x2 << HASH_CR_NBW_Pos;
pub const HASH_CR_NBW_2: u32 = 0x4 << HASH_CR_NBW_Pos;
pub const HASH_CR_NBW_3: u32 = 0x8 << HASH_CR_NBW_Pos;
pub const HASH_CR_DINNE_Pos: u32 = 12;
pub const HASH_CR_DINNE_Msk: u32 = 0x1 << HASH_CR_DINNE_Pos;
pub const HASH_CR_DINNE: u32 = HASH_CR_DINNE_Msk;
pub const HASH_CR_MDMAT_Pos: u32 = 13;
pub const HASH_CR_MDMAT_Msk: u32 = 0x1 << HASH_CR_MDMAT_Pos;
pub const HASH_CR_MDMAT: u32 = HASH_CR_MDMAT_Msk;
pub const HASH_CR_LKEY_Pos: u32 = 16;
pub const HASH_CR_LKEY_Msk: u32 = 0x1 << HASH_CR_LKEY_Pos;
pub const HASH_CR_LKEY: u32 = HASH_CR_LKEY_Msk;
pub const HASH_STR_NBLW_Pos: u32 = 0;
pub const HASH_STR_NBLW_Msk: u32 = 0x1F << HASH_STR_NBLW_Pos;
pub const HASH_STR_NBLW: u32 = HASH_STR_NBLW_Msk;
pub const HASH_STR_NBLW_0: u32 = 0x01 << HASH_STR_NBLW_Pos;
pub const HASH_STR_NBLW_1: u32 = 0x02 << HASH_STR_NBLW_Pos;
pub const HASH_STR_NBLW_2: u32 = 0x04 << HASH_STR_NBLW_Pos;
pub const HASH_STR_NBLW_3: u32 = 0x08 << HASH_STR_NBLW_Pos;
pub const HASH_STR_NBLW_4: u32 = 0x10 << HASH_STR_NBLW_Pos;
pub const HASH_STR_DCAL_Pos: u32 = 8;
pub const HASH_STR_DCAL_Msk: u32 = 0x1 << HASH_STR_DCAL_Pos;
pub const HASH_STR_DCAL: u32 = HASH_STR_DCAL_Msk;
pub const HASH_STR_NBW: u32 = HASH_STR_NBLW;
pub const HASH_STR_NBW_0: u32 = HASH_STR_NBLW_0;
pub const HASH_STR_NBW_1: u32 = HASH_STR_NBLW_1;
pub const HASH_STR_NBW_2: u32 = HASH_STR_NBLW_2;
pub const HASH_STR_NBW_3: u32 = HASH_STR_NBLW_3;
pub const HASH_STR_NBW_4: u32 = HASH_STR_NBLW_4;
pub const HASH_IMR_DINIE_Pos: u32 = 0;
pub const HASH_IMR_DINIE_Msk: u32 = 0x1 << HASH_IMR_DINIE_Pos;
pub const HASH_IMR_DINIE: u32 = HASH_IMR_DINIE_Msk;
pub const HASH_IMR_DCIE_Pos: u32 = 1;
pub const HASH_IMR_DCIE_Msk: u32 = 0x1 << HASH_IMR_DCIE_Pos;
pub const HASH_IMR_DCIE: u32 = HASH_IMR_DCIE_Msk;
pub const HASH_IMR_DINIM: u32 = HASH_IMR_DINIE;
pub const HASH_IMR_DCIM: u32 = HASH_IMR_DCIE;
pub const HASH_SR_DINIS_Pos: u32 = 0;
pub const HASH_SR_DINIS_Msk: u32 = 0x1 << HASH_SR_DINIS_Pos;
pub const HASH_SR_DINIS: u32 = HASH_SR_DINIS_Msk;
pub const HASH_SR_DCIS_Pos: u32 = 1;
pub const HASH_SR_DCIS_Msk: u32 = 0x1 << HASH_SR_DCIS_Pos;
pub const HASH_SR_DCIS: u32 = HASH_SR_DCIS_Msk;
pub const HASH_SR_DMAS_Pos: u32 = 2;
pub const HASH_SR_DMAS_Msk: u32 = 0x1 << HASH_SR_DMAS_Pos;
pub const HASH_SR_DMAS: u32 = HASH_SR_DMAS_Msk;
pub const HASH_SR_BUSY_Pos: u32 = 3;
pub const HASH_SR_BUSY_Msk: u32 = 0x1 << HASH_SR_BUSY_Pos;
pub const HASH_SR_BUSY: u32 = HASH_SR_BUSY_Msk;
pub const I2C_CR1_PE_Pos: u32 = 0;
pub const I2C_CR1_PE_Msk: u32 = 0x1 << I2C_CR1_PE_Pos;
pub const I2C_CR1_PE: u32 = I2C_CR1_PE_Msk;
pub const I2C_CR1_TXIE_Pos: u32 = 1;
pub const I2C_CR1_TXIE_Msk: u32 = 0x1 << I2C_CR1_TXIE_Pos;
pub const I2C_CR1_TXIE: u32 = I2C_CR1_TXIE_Msk;
pub const I2C_CR1_RXIE_Pos: u32 = 2;
pub const I2C_CR1_RXIE_Msk: u32 = 0x1 << I2C_CR1_RXIE_Pos;
pub const I2C_CR1_RXIE: u32 = I2C_CR1_RXIE_Msk;
pub const I2C_CR1_ADDRIE_Pos: u32 = 3;
pub const I2C_CR1_ADDRIE_Msk: u32 = 0x1 << I2C_CR1_ADDRIE_Pos;
pub const I2C_CR1_ADDRIE: u32 = I2C_CR1_ADDRIE_Msk;
pub const I2C_CR1_NACKIE_Pos: u32 = 4;
pub const I2C_CR1_NACKIE_Msk: u32 = 0x1 << I2C_CR1_NACKIE_Pos;
pub const I2C_CR1_NACKIE: u32 = I2C_CR1_NACKIE_Msk;
pub const I2C_CR1_STOPIE_Pos: u32 = 5;
pub const I2C_CR1_STOPIE_Msk: u32 = 0x1 << I2C_CR1_STOPIE_Pos;
pub const I2C_CR1_STOPIE: u32 = I2C_CR1_STOPIE_Msk;
pub const I2C_CR1_TCIE_Pos: u32 = 6;
pub const I2C_CR1_TCIE_Msk: u32 = 0x1 << I2C_CR1_TCIE_Pos;
pub const I2C_CR1_TCIE: u32 = I2C_CR1_TCIE_Msk;
pub const I2C_CR1_ERRIE_Pos: u32 = 7;
pub const I2C_CR1_ERRIE_Msk: u32 = 0x1 << I2C_CR1_ERRIE_Pos;
pub const I2C_CR1_ERRIE: u32 = I2C_CR1_ERRIE_Msk;
pub const I2C_CR1_DNF_Pos: u32 = 8;
pub const I2C_CR1_DNF_Msk: u32 = 0xF << I2C_CR1_DNF_Pos;
pub const I2C_CR1_DNF: u32 = I2C_CR1_DNF_Msk;
pub const I2C_CR1_ANFOFF_Pos: u32 = 12;
pub const I2C_CR1_ANFOFF_Msk: u32 = 0x1 << I2C_CR1_ANFOFF_Pos;
pub const I2C_CR1_ANFOFF: u32 = I2C_CR1_ANFOFF_Msk;
pub const I2C_CR1_TXDMAEN_Pos: u32 = 14;
pub const I2C_CR1_TXDMAEN_Msk: u32 = 0x1 << I2C_CR1_TXDMAEN_Pos;
pub const I2C_CR1_TXDMAEN: u32 = I2C_CR1_TXDMAEN_Msk;
pub const I2C_CR1_RXDMAEN_Pos: u32 = 15;
pub const I2C_CR1_RXDMAEN_Msk: u32 = 0x1 << I2C_CR1_RXDMAEN_Pos;
pub const I2C_CR1_RXDMAEN: u32 = I2C_CR1_RXDMAEN_Msk;
pub const I2C_CR1_SBC_Pos: u32 = 16;
pub const I2C_CR1_SBC_Msk: u32 = 0x1 << I2C_CR1_SBC_Pos;
pub const I2C_CR1_SBC: u32 = I2C_CR1_SBC_Msk;
pub const I2C_CR1_NOSTRETCH_Pos: u32 = 17;
pub const I2C_CR1_NOSTRETCH_Msk: u32 = 0x1 << I2C_CR1_NOSTRETCH_Pos;
pub const I2C_CR1_NOSTRETCH: u32 = I2C_CR1_NOSTRETCH_Msk;
pub const I2C_CR1_GCEN_Pos: u32 = 19;
pub const I2C_CR1_GCEN_Msk: u32 = 0x1 << I2C_CR1_GCEN_Pos;
pub const I2C_CR1_GCEN: u32 = I2C_CR1_GCEN_Msk;
pub const I2C_CR1_SMBHEN_Pos: u32 = 20;
pub const I2C_CR1_SMBHEN_Msk: u32 = 0x1 << I2C_CR1_SMBHEN_Pos;
pub const I2C_CR1_SMBHEN: u32 = I2C_CR1_SMBHEN_Msk;
pub const I2C_CR1_SMBDEN_Pos: u32 = 21;
pub const I2C_CR1_SMBDEN_Msk: u32 = 0x1 << I2C_CR1_SMBDEN_Pos;
pub const I2C_CR1_SMBDEN: u32 = I2C_CR1_SMBDEN_Msk;
pub const I2C_CR1_ALERTEN_Pos: u32 = 22;
pub const I2C_CR1_ALERTEN_Msk: u32 = 0x1 << I2C_CR1_ALERTEN_Pos;
pub const I2C_CR1_ALERTEN: u32 = I2C_CR1_ALERTEN_Msk;
pub const I2C_CR1_PECEN_Pos: u32 = 23;
pub const I2C_CR1_PECEN_Msk: u32 = 0x1 << I2C_CR1_PECEN_Pos;
pub const I2C_CR1_PECEN: u32 = I2C_CR1_PECEN_Msk;
pub const I2C_CR1_DFN: u32 = I2C_CR1_DNF;
pub const I2C_CR2_SADD_Pos: u32 = 0;
pub const I2C_CR2_SADD_Msk: u32 = 0x3FF << I2C_CR2_SADD_Pos;
pub const I2C_CR2_SADD: u32 = I2C_CR2_SADD_Msk;
pub const I2C_CR2_RD_WRN_Pos: u32 = 10;
pub const I2C_CR2_RD_WRN_Msk: u32 = 0x1 << I2C_CR2_RD_WRN_Pos;
pub const I2C_CR2_RD_WRN: u32 = I2C_CR2_RD_WRN_Msk;
pub const I2C_CR2_ADD10_Pos: u32 = 11;
pub const I2C_CR2_ADD10_Msk: u32 = 0x1 << I2C_CR2_ADD10_Pos;
pub const I2C_CR2_ADD10: u32 = I2C_CR2_ADD10_Msk;
pub const I2C_CR2_HEAD10R_Pos: u32 = 12;
pub const I2C_CR2_HEAD10R_Msk: u32 = 0x1 << I2C_CR2_HEAD10R_Pos;
pub const I2C_CR2_HEAD10R: u32 = I2C_CR2_HEAD10R_Msk;
pub const I2C_CR2_START_Pos: u32 = 13;
pub const I2C_CR2_START_Msk: u32 = 0x1 << I2C_CR2_START_Pos;
pub const I2C_CR2_START: u32 = I2C_CR2_START_Msk;
pub const I2C_CR2_STOP_Pos: u32 = 14;
pub const I2C_CR2_STOP_Msk: u32 = 0x1 << I2C_CR2_STOP_Pos;
pub const I2C_CR2_STOP: u32 = I2C_CR2_STOP_Msk;
pub const I2C_CR2_NACK_Pos: u32 = 15;
pub const I2C_CR2_NACK_Msk: u32 = 0x1 << I2C_CR2_NACK_Pos;
pub const I2C_CR2_NACK: u32 = I2C_CR2_NACK_Msk;
pub const I2C_CR2_NBYTES_Pos: u32 = 16;
pub const I2C_CR2_NBYTES_Msk: u32 = 0xFF << I2C_CR2_NBYTES_Pos;
pub const I2C_CR2_NBYTES: u32 = I2C_CR2_NBYTES_Msk;
pub const I2C_CR2_RELOAD_Pos: u32 = 24;
pub const I2C_CR2_RELOAD_Msk: u32 = 0x1 << I2C_CR2_RELOAD_Pos;
pub const I2C_CR2_RELOAD: u32 = I2C_CR2_RELOAD_Msk;
pub const I2C_CR2_AUTOEND_Pos: u32 = 25;
pub const I2C_CR2_AUTOEND_Msk: u32 = 0x1 << I2C_CR2_AUTOEND_Pos;
pub const I2C_CR2_AUTOEND: u32 = I2C_CR2_AUTOEND_Msk;
pub const I2C_CR2_PECBYTE_Pos: u32 = 26;
pub const I2C_CR2_PECBYTE_Msk: u32 = 0x1 << I2C_CR2_PECBYTE_Pos;
pub const I2C_CR2_PECBYTE: u32 = I2C_CR2_PECBYTE_Msk;
pub const I2C_OAR1_OA1_Pos: u32 = 0;
pub const I2C_OAR1_OA1_Msk: u32 = 0x3FF << I2C_OAR1_OA1_Pos;
pub const I2C_OAR1_OA1: u32 = I2C_OAR1_OA1_Msk;
pub const I2C_OAR1_OA1MODE_Pos: u32 = 10;
pub const I2C_OAR1_OA1MODE_Msk: u32 = 0x1 << I2C_OAR1_OA1MODE_Pos;
pub const I2C_OAR1_OA1MODE: u32 = I2C_OAR1_OA1MODE_Msk;
pub const I2C_OAR1_OA1EN_Pos: u32 = 15;
pub const I2C_OAR1_OA1EN_Msk: u32 = 0x1 << I2C_OAR1_OA1EN_Pos;
pub const I2C_OAR1_OA1EN: u32 = I2C_OAR1_OA1EN_Msk;
pub const I2C_OAR2_OA2_Pos: u32 = 1;
pub const I2C_OAR2_OA2_Msk: u32 = 0x7F << I2C_OAR2_OA2_Pos;
pub const I2C_OAR2_OA2: u32 = I2C_OAR2_OA2_Msk;
pub const I2C_OAR2_OA2MSK_Pos: u32 = 8;
pub const I2C_OAR2_OA2MSK_Msk: u32 = 0x7 << I2C_OAR2_OA2MSK_Pos;
pub const I2C_OAR2_OA2MSK: u32 = I2C_OAR2_OA2MSK_Msk;
pub const I2C_OAR2_OA2NOMASK: u32 = 0x00000000;
pub const I2C_OAR2_OA2MASK01_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK01_Msk: u32 = 0x1 << I2C_OAR2_OA2MASK01_Pos;
pub const I2C_OAR2_OA2MASK01: u32 = I2C_OAR2_OA2MASK01_Msk;
pub const I2C_OAR2_OA2MASK02_Pos: u32 = 9;
pub const I2C_OAR2_OA2MASK02_Msk: u32 = 0x1 << I2C_OAR2_OA2MASK02_Pos;
pub const I2C_OAR2_OA2MASK02: u32 = I2C_OAR2_OA2MASK02_Msk;
pub const I2C_OAR2_OA2MASK03_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK03_Msk: u32 = 0x3 << I2C_OAR2_OA2MASK03_Pos;
pub const I2C_OAR2_OA2MASK03: u32 = I2C_OAR2_OA2MASK03_Msk;
pub const I2C_OAR2_OA2MASK04_Pos: u32 = 10;
pub const I2C_OAR2_OA2MASK04_Msk: u32 = 0x1 << I2C_OAR2_OA2MASK04_Pos;
pub const I2C_OAR2_OA2MASK04: u32 = I2C_OAR2_OA2MASK04_Msk;
pub const I2C_OAR2_OA2MASK05_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK05_Msk: u32 = 0x5 << I2C_OAR2_OA2MASK05_Pos;
pub const I2C_OAR2_OA2MASK05: u32 = I2C_OAR2_OA2MASK05_Msk;
pub const I2C_OAR2_OA2MASK06_Pos: u32 = 9;
pub const I2C_OAR2_OA2MASK06_Msk: u32 = 0x3 << I2C_OAR2_OA2MASK06_Pos;
pub const I2C_OAR2_OA2MASK06: u32 = I2C_OAR2_OA2MASK06_Msk;
pub const I2C_OAR2_OA2MASK07_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK07_Msk: u32 = 0x7 << I2C_OAR2_OA2MASK07_Pos;
pub const I2C_OAR2_OA2MASK07: u32 = I2C_OAR2_OA2MASK07_Msk;
pub const I2C_OAR2_OA2EN_Pos: u32 = 15;
pub const I2C_OAR2_OA2EN_Msk: u32 = 0x1 << I2C_OAR2_OA2EN_Pos;
pub const I2C_OAR2_OA2EN: u32 = I2C_OAR2_OA2EN_Msk;
pub const I2C_TIMINGR_SCLL_Pos: u32 = 0;
pub const I2C_TIMINGR_SCLL_Msk: u32 = 0xFF << I2C_TIMINGR_SCLL_Pos;
pub const I2C_TIMINGR_SCLL: u32 = I2C_TIMINGR_SCLL_Msk;
pub const I2C_TIMINGR_SCLH_Pos: u32 = 8;
pub const I2C_TIMINGR_SCLH_Msk: u32 = 0xFF << I2C_TIMINGR_SCLH_Pos;
pub const I2C_TIMINGR_SCLH: u32 = I2C_TIMINGR_SCLH_Msk;
pub const I2C_TIMINGR_SDADEL_Pos: u32 = 16;
pub const I2C_TIMINGR_SDADEL_Msk: u32 = 0xF << I2C_TIMINGR_SDADEL_Pos;
pub const I2C_TIMINGR_SDADEL: u32 = I2C_TIMINGR_SDADEL_Msk;
pub const I2C_TIMINGR_SCLDEL_Pos: u32 = 20;
pub const I2C_TIMINGR_SCLDEL_Msk: u32 = 0xF << I2C_TIMINGR_SCLDEL_Pos;
pub const I2C_TIMINGR_SCLDEL: u32 = I2C_TIMINGR_SCLDEL_Msk;
pub const I2C_TIMINGR_PRESC_Pos: u32 = 28;
pub const I2C_TIMINGR_PRESC_Msk: u32 = 0xF << I2C_TIMINGR_PRESC_Pos;
pub const I2C_TIMINGR_PRESC: u32 = I2C_TIMINGR_PRESC_Msk;
pub const I2C_TIMEOUTR_TIMEOUTA_Pos: u32 = 0;
pub const I2C_TIMEOUTR_TIMEOUTA_Msk: u32 = 0xFFF << I2C_TIMEOUTR_TIMEOUTA_Pos;
pub const I2C_TIMEOUTR_TIMEOUTA: u32 = I2C_TIMEOUTR_TIMEOUTA_Msk;
pub const I2C_TIMEOUTR_TIDLE_Pos: u32 = 12;
pub const I2C_TIMEOUTR_TIDLE_Msk: u32 = 0x1 << I2C_TIMEOUTR_TIDLE_Pos;
pub const I2C_TIMEOUTR_TIDLE: u32 = I2C_TIMEOUTR_TIDLE_Msk;
pub const I2C_TIMEOUTR_TIMOUTEN_Pos: u32 = 15;
pub const I2C_TIMEOUTR_TIMOUTEN_Msk: u32 = 0x1 << I2C_TIMEOUTR_TIMOUTEN_Pos;
pub const I2C_TIMEOUTR_TIMOUTEN: u32 = I2C_TIMEOUTR_TIMOUTEN_Msk;
pub const I2C_TIMEOUTR_TIMEOUTB_Pos: u32 = 16;
pub const I2C_TIMEOUTR_TIMEOUTB_Msk: u32 = 0xFFF << I2C_TIMEOUTR_TIMEOUTB_Pos;
pub const I2C_TIMEOUTR_TIMEOUTB: u32 = I2C_TIMEOUTR_TIMEOUTB_Msk;
pub const I2C_TIMEOUTR_TEXTEN_Pos: u32 = 31;
pub const I2C_TIMEOUTR_TEXTEN_Msk: u32 = 0x1 << I2C_TIMEOUTR_TEXTEN_Pos;
pub const I2C_TIMEOUTR_TEXTEN: u32 = I2C_TIMEOUTR_TEXTEN_Msk;
pub const I2C_ISR_TXE_Pos: u32 = 0;
pub const I2C_ISR_TXE_Msk: u32 = 0x1 << I2C_ISR_TXE_Pos;
pub const I2C_ISR_TXE: u32 = I2C_ISR_TXE_Msk;
pub const I2C_ISR_TXIS_Pos: u32 = 1;
pub const I2C_ISR_TXIS_Msk: u32 = 0x1 << I2C_ISR_TXIS_Pos;
pub const I2C_ISR_TXIS: u32 = I2C_ISR_TXIS_Msk;
pub const I2C_ISR_RXNE_Pos: u32 = 2;
pub const I2C_ISR_RXNE_Msk: u32 = 0x1 << I2C_ISR_RXNE_Pos;
pub const I2C_ISR_RXNE: u32 = I2C_ISR_RXNE_Msk;
pub const I2C_ISR_ADDR_Pos: u32 = 3;
pub const I2C_ISR_ADDR_Msk: u32 = 0x1 << I2C_ISR_ADDR_Pos;
pub const I2C_ISR_ADDR: u32 = I2C_ISR_ADDR_Msk;
pub const I2C_ISR_NACKF_Pos: u32 = 4;
pub const I2C_ISR_NACKF_Msk: u32 = 0x1 << I2C_ISR_NACKF_Pos;
pub const I2C_ISR_NACKF: u32 = I2C_ISR_NACKF_Msk;
pub const I2C_ISR_STOPF_Pos: u32 = 5;
pub const I2C_ISR_STOPF_Msk: u32 = 0x1 << I2C_ISR_STOPF_Pos;
pub const I2C_ISR_STOPF: u32 = I2C_ISR_STOPF_Msk;
pub const I2C_ISR_TC_Pos: u32 = 6;
pub const I2C_ISR_TC_Msk: u32 = 0x1 << I2C_ISR_TC_Pos;
pub const I2C_ISR_TC: u32 = I2C_ISR_TC_Msk;
pub const I2C_ISR_TCR_Pos: u32 = 7;
pub const I2C_ISR_TCR_Msk: u32 = 0x1 << I2C_ISR_TCR_Pos;
pub const I2C_ISR_TCR: u32 = I2C_ISR_TCR_Msk;
pub const I2C_ISR_BERR_Pos: u32 = 8;
pub const I2C_ISR_BERR_Msk: u32 = 0x1 << I2C_ISR_BERR_Pos;
pub const I2C_ISR_BERR: u32 = I2C_ISR_BERR_Msk;
pub const I2C_ISR_ARLO_Pos: u32 = 9;
pub const I2C_ISR_ARLO_Msk: u32 = 0x1 << I2C_ISR_ARLO_Pos;
pub const I2C_ISR_ARLO: u32 = I2C_ISR_ARLO_Msk;
pub const I2C_ISR_OVR_Pos: u32 = 10;
pub const I2C_ISR_OVR_Msk: u32 = 0x1 << I2C_ISR_OVR_Pos;
pub const I2C_ISR_OVR: u32 = I2C_ISR_OVR_Msk;
pub const I2C_ISR_PECERR_Pos: u32 = 11;
pub const I2C_ISR_PECERR_Msk: u32 = 0x1 << I2C_ISR_PECERR_Pos;
pub const I2C_ISR_PECERR: u32 = I2C_ISR_PECERR_Msk;
pub const I2C_ISR_TIMEOUT_Pos: u32 = 12;
pub const I2C_ISR_TIMEOUT_Msk: u32 = 0x1 << I2C_ISR_TIMEOUT_Pos;
pub const I2C_ISR_TIMEOUT: u32 = I2C_ISR_TIMEOUT_Msk;
pub const I2C_ISR_ALERT_Pos: u32 = 13;
pub const I2C_ISR_ALERT_Msk: u32 = 0x1 << I2C_ISR_ALERT_Pos;
pub const I2C_ISR_ALERT: u32 = I2C_ISR_ALERT_Msk;
pub const I2C_ISR_BUSY_Pos: u32 = 15;
pub const I2C_ISR_BUSY_Msk: u32 = 0x1 << I2C_ISR_BUSY_Pos;
pub const I2C_ISR_BUSY: u32 = I2C_ISR_BUSY_Msk;
pub const I2C_ISR_DIR_Pos: u32 = 16;
pub const I2C_ISR_DIR_Msk: u32 = 0x1 << I2C_ISR_DIR_Pos;
pub const I2C_ISR_DIR: u32 = I2C_ISR_DIR_Msk;
pub const I2C_ISR_ADDCODE_Pos: u32 = 17;
pub const I2C_ISR_ADDCODE_Msk: u32 = 0x7F << I2C_ISR_ADDCODE_Pos;
pub const I2C_ISR_ADDCODE: u32 = I2C_ISR_ADDCODE_Msk;
pub const I2C_ICR_ADDRCF_Pos: u32 = 3;
pub const I2C_ICR_ADDRCF_Msk: u32 = 0x1 << I2C_ICR_ADDRCF_Pos;
pub const I2C_ICR_ADDRCF: u32 = I2C_ICR_ADDRCF_Msk;
pub const I2C_ICR_NACKCF_Pos: u32 = 4;
pub const I2C_ICR_NACKCF_Msk: u32 = 0x1 << I2C_ICR_NACKCF_Pos;
pub const I2C_ICR_NACKCF: u32 = I2C_ICR_NACKCF_Msk;
pub const I2C_ICR_STOPCF_Pos: u32 = 5;
pub const I2C_ICR_STOPCF_Msk: u32 = 0x1 << I2C_ICR_STOPCF_Pos;
pub const I2C_ICR_STOPCF: u32 = I2C_ICR_STOPCF_Msk;
pub const I2C_ICR_BERRCF_Pos: u32 = 8;
pub const I2C_ICR_BERRCF_Msk: u32 = 0x1 << I2C_ICR_BERRCF_Pos;
pub const I2C_ICR_BERRCF: u32 = I2C_ICR_BERRCF_Msk;
pub const I2C_ICR_ARLOCF_Pos: u32 = 9;
pub const I2C_ICR_ARLOCF_Msk: u32 = 0x1 << I2C_ICR_ARLOCF_Pos;
pub const I2C_ICR_ARLOCF: u32 = I2C_ICR_ARLOCF_Msk;
pub const I2C_ICR_OVRCF_Pos: u32 = 10;
pub const I2C_ICR_OVRCF_Msk: u32 = 0x1 << I2C_ICR_OVRCF_Pos;
pub const I2C_ICR_OVRCF: u32 = I2C_ICR_OVRCF_Msk;
pub const I2C_ICR_PECCF_Pos: u32 = 11;
pub const I2C_ICR_PECCF_Msk: u32 = 0x1 << I2C_ICR_PECCF_Pos;
pub const I2C_ICR_PECCF: u32 = I2C_ICR_PECCF_Msk;
pub const I2C_ICR_TIMOUTCF_Pos: u32 = 12;
pub const I2C_ICR_TIMOUTCF_Msk: u32 = 0x1 << I2C_ICR_TIMOUTCF_Pos;
pub const I2C_ICR_TIMOUTCF: u32 = I2C_ICR_TIMOUTCF_Msk;
pub const I2C_ICR_ALERTCF_Pos: u32 = 13;
pub const I2C_ICR_ALERTCF_Msk: u32 = 0x1 << I2C_ICR_ALERTCF_Pos;
pub const I2C_ICR_ALERTCF: u32 = I2C_ICR_ALERTCF_Msk;
pub const I2C_PECR_PEC_Pos: u32 = 0;
pub const I2C_PECR_PEC_Msk: u32 = 0xFF << I2C_PECR_PEC_Pos;
pub const I2C_PECR_PEC: u32 = I2C_PECR_PEC_Msk;
pub const I2C_RXDR_RXDATA_Pos: u32 = 0;
pub const I2C_RXDR_RXDATA_Msk: u32 = 0xFF << I2C_RXDR_RXDATA_Pos;
pub const I2C_RXDR_RXDATA: u32 = I2C_RXDR_RXDATA_Msk;
pub const I2C_TXDR_TXDATA_Pos: u32 = 0;
pub const I2C_TXDR_TXDATA_Msk: u32 = 0xFF << I2C_TXDR_TXDATA_Pos;
pub const I2C_TXDR_TXDATA: u32 = I2C_TXDR_TXDATA_Msk;
pub const IWDG_KR_KEY_Pos: u32 = 0;
pub const IWDG_KR_KEY_Msk: u32 = 0xFFFF << IWDG_KR_KEY_Pos;
pub const IWDG_KR_KEY: u32 = IWDG_KR_KEY_Msk;
pub const IWDG_PR_PR_Pos: u32 = 0;
pub const IWDG_PR_PR_Msk: u32 = 0x7 << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR: u32 = IWDG_PR_PR_Msk;
pub const IWDG_PR_PR_0: u32 = 0x1 << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR_1: u32 = 0x2 << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR_2: u32 = 0x4 << IWDG_PR_PR_Pos;
pub const IWDG_RLR_RL_Pos: u32 = 0;
pub const IWDG_RLR_RL_Msk: u32 = 0xFFF << IWDG_RLR_RL_Pos;
pub const IWDG_RLR_RL: u32 = IWDG_RLR_RL_Msk;
pub const IWDG_SR_PVU_Pos: u32 = 0;
pub const IWDG_SR_PVU_Msk: u32 = 0x1 << IWDG_SR_PVU_Pos;
pub const IWDG_SR_PVU: u32 = IWDG_SR_PVU_Msk;
pub const IWDG_SR_RVU_Pos: u32 = 1;
pub const IWDG_SR_RVU_Msk: u32 = 0x1 << IWDG_SR_RVU_Pos;
pub const IWDG_SR_RVU: u32 = IWDG_SR_RVU_Msk;
pub const IWDG_SR_WVU_Pos: u32 = 2;
pub const IWDG_SR_WVU_Msk: u32 = 0x1 << IWDG_SR_WVU_Pos;
pub const IWDG_SR_WVU: u32 = IWDG_SR_WVU_Msk;
pub const IWDG_WINR_WIN_Pos: u32 = 0;
pub const IWDG_WINR_WIN_Msk: u32 = 0xFFF << IWDG_WINR_WIN_Pos;
pub const IWDG_WINR_WIN: u32 = IWDG_WINR_WIN_Msk;
pub const LTDC_SSCR_VSH_Pos: u32 = 0;
pub const LTDC_SSCR_VSH_Msk: u32 = 0x7FF << LTDC_SSCR_VSH_Pos;
pub const LTDC_SSCR_VSH: u32 = LTDC_SSCR_VSH_Msk;
pub const LTDC_SSCR_HSW_Pos: u32 = 16;
pub const LTDC_SSCR_HSW_Msk: u32 = 0xFFF << LTDC_SSCR_HSW_Pos;
pub const LTDC_SSCR_HSW: u32 = LTDC_SSCR_HSW_Msk;
pub const LTDC_BPCR_AVBP_Pos: u32 = 0;
pub const LTDC_BPCR_AVBP_Msk: u32 = 0x7FF << LTDC_BPCR_AVBP_Pos;
pub const LTDC_BPCR_AVBP: u32 = LTDC_BPCR_AVBP_Msk;
pub const LTDC_BPCR_AHBP_Pos: u32 = 16;
pub const LTDC_BPCR_AHBP_Msk: u32 = 0xFFF << LTDC_BPCR_AHBP_Pos;
pub const LTDC_BPCR_AHBP: u32 = LTDC_BPCR_AHBP_Msk;
pub const LTDC_AWCR_AAH_Pos: u32 = 0;
pub const LTDC_AWCR_AAH_Msk: u32 = 0x7FF << LTDC_AWCR_AAH_Pos;
pub const LTDC_AWCR_AAH: u32 = LTDC_AWCR_AAH_Msk;
pub const LTDC_AWCR_AAW_Pos: u32 = 16;
pub const LTDC_AWCR_AAW_Msk: u32 = 0xFFF << LTDC_AWCR_AAW_Pos;
pub const LTDC_AWCR_AAW: u32 = LTDC_AWCR_AAW_Msk;
pub const LTDC_TWCR_TOTALH_Pos: u32 = 0;
pub const LTDC_TWCR_TOTALH_Msk: u32 = 0x7FF << LTDC_TWCR_TOTALH_Pos;
pub const LTDC_TWCR_TOTALH: u32 = LTDC_TWCR_TOTALH_Msk;
pub const LTDC_TWCR_TOTALW_Pos: u32 = 16;
pub const LTDC_TWCR_TOTALW_Msk: u32 = 0xFFF << LTDC_TWCR_TOTALW_Pos;
pub const LTDC_TWCR_TOTALW: u32 = LTDC_TWCR_TOTALW_Msk;
pub const LTDC_GCR_LTDCEN_Pos: u32 = 0;
pub const LTDC_GCR_LTDCEN_Msk: u32 = 0x1 << LTDC_GCR_LTDCEN_Pos;
pub const LTDC_GCR_LTDCEN: u32 = LTDC_GCR_LTDCEN_Msk;
pub const LTDC_GCR_DBW_Pos: u32 = 4;
pub const LTDC_GCR_DBW_Msk: u32 = 0x7 << LTDC_GCR_DBW_Pos;
pub const LTDC_GCR_DBW: u32 = LTDC_GCR_DBW_Msk;
pub const LTDC_GCR_DGW_Pos: u32 = 8;
pub const LTDC_GCR_DGW_Msk: u32 = 0x7 << LTDC_GCR_DGW_Pos;
pub const LTDC_GCR_DGW: u32 = LTDC_GCR_DGW_Msk;
pub const LTDC_GCR_DRW_Pos: u32 = 12;
pub const LTDC_GCR_DRW_Msk: u32 = 0x7 << LTDC_GCR_DRW_Pos;
pub const LTDC_GCR_DRW: u32 = LTDC_GCR_DRW_Msk;
pub const LTDC_GCR_DEN_Pos: u32 = 16;
pub const LTDC_GCR_DEN_Msk: u32 = 0x1 << LTDC_GCR_DEN_Pos;
pub const LTDC_GCR_DEN: u32 = LTDC_GCR_DEN_Msk;
pub const LTDC_GCR_PCPOL_Pos: u32 = 28;
pub const LTDC_GCR_PCPOL_Msk: u32 = 0x1 << LTDC_GCR_PCPOL_Pos;
pub const LTDC_GCR_PCPOL: u32 = LTDC_GCR_PCPOL_Msk;
pub const LTDC_GCR_DEPOL_Pos: u32 = 29;
pub const LTDC_GCR_DEPOL_Msk: u32 = 0x1 << LTDC_GCR_DEPOL_Pos;
pub const LTDC_GCR_DEPOL: u32 = LTDC_GCR_DEPOL_Msk;
pub const LTDC_GCR_VSPOL_Pos: u32 = 30;
pub const LTDC_GCR_VSPOL_Msk: u32 = 0x1 << LTDC_GCR_VSPOL_Pos;
pub const LTDC_GCR_VSPOL: u32 = LTDC_GCR_VSPOL_Msk;
pub const LTDC_GCR_HSPOL_Pos: u32 = 31;
pub const LTDC_GCR_HSPOL_Msk: u32 = 0x1 << LTDC_GCR_HSPOL_Pos;
pub const LTDC_GCR_HSPOL: u32 = LTDC_GCR_HSPOL_Msk;
pub const LTDC_GCR_DTEN: u32 = LTDC_GCR_DEN;
pub const LTDC_SRCR_IMR_Pos: u32 = 0;
pub const LTDC_SRCR_IMR_Msk: u32 = 0x1 << LTDC_SRCR_IMR_Pos;
pub const LTDC_SRCR_IMR: u32 = LTDC_SRCR_IMR_Msk;
pub const LTDC_SRCR_VBR_Pos: u32 = 1;
pub const LTDC_SRCR_VBR_Msk: u32 = 0x1 << LTDC_SRCR_VBR_Pos;
pub const LTDC_SRCR_VBR: u32 = LTDC_SRCR_VBR_Msk;
pub const LTDC_BCCR_BCBLUE_Pos: u32 = 0;
pub const LTDC_BCCR_BCBLUE_Msk: u32 = 0xFF << LTDC_BCCR_BCBLUE_Pos;
pub const LTDC_BCCR_BCBLUE: u32 = LTDC_BCCR_BCBLUE_Msk;
pub const LTDC_BCCR_BCGREEN_Pos: u32 = 8;
pub const LTDC_BCCR_BCGREEN_Msk: u32 = 0xFF << LTDC_BCCR_BCGREEN_Pos;
pub const LTDC_BCCR_BCGREEN: u32 = LTDC_BCCR_BCGREEN_Msk;
pub const LTDC_BCCR_BCRED_Pos: u32 = 16;
pub const LTDC_BCCR_BCRED_Msk: u32 = 0xFF << LTDC_BCCR_BCRED_Pos;
pub const LTDC_BCCR_BCRED: u32 = LTDC_BCCR_BCRED_Msk;
pub const LTDC_IER_LIE_Pos: u32 = 0;
pub const LTDC_IER_LIE_Msk: u32 = 0x1 << LTDC_IER_LIE_Pos;
pub const LTDC_IER_LIE: u32 = LTDC_IER_LIE_Msk;
pub const LTDC_IER_FUIE_Pos: u32 = 1;
pub const LTDC_IER_FUIE_Msk: u32 = 0x1 << LTDC_IER_FUIE_Pos;
pub const LTDC_IER_FUIE: u32 = LTDC_IER_FUIE_Msk;
pub const LTDC_IER_TERRIE_Pos: u32 = 2;
pub const LTDC_IER_TERRIE_Msk: u32 = 0x1 << LTDC_IER_TERRIE_Pos;
pub const LTDC_IER_TERRIE: u32 = LTDC_IER_TERRIE_Msk;
pub const LTDC_IER_RRIE_Pos: u32 = 3;
pub const LTDC_IER_RRIE_Msk: u32 = 0x1 << LTDC_IER_RRIE_Pos;
pub const LTDC_IER_RRIE: u32 = LTDC_IER_RRIE_Msk;
pub const LTDC_ISR_LIF_Pos: u32 = 0;
pub const LTDC_ISR_LIF_Msk: u32 = 0x1 << LTDC_ISR_LIF_Pos;
pub const LTDC_ISR_LIF: u32 = LTDC_ISR_LIF_Msk;
pub const LTDC_ISR_FUIF_Pos: u32 = 1;
pub const LTDC_ISR_FUIF_Msk: u32 = 0x1 << LTDC_ISR_FUIF_Pos;
pub const LTDC_ISR_FUIF: u32 = LTDC_ISR_FUIF_Msk;
pub const LTDC_ISR_TERRIF_Pos: u32 = 2;
pub const LTDC_ISR_TERRIF_Msk: u32 = 0x1 << LTDC_ISR_TERRIF_Pos;
pub const LTDC_ISR_TERRIF: u32 = LTDC_ISR_TERRIF_Msk;
pub const LTDC_ISR_RRIF_Pos: u32 = 3;
pub const LTDC_ISR_RRIF_Msk: u32 = 0x1 << LTDC_ISR_RRIF_Pos;
pub const LTDC_ISR_RRIF: u32 = LTDC_ISR_RRIF_Msk;
pub const LTDC_ICR_CLIF_Pos: u32 = 0;
pub const LTDC_ICR_CLIF_Msk: u32 = 0x1 << LTDC_ICR_CLIF_Pos;
pub const LTDC_ICR_CLIF: u32 = LTDC_ICR_CLIF_Msk;
pub const LTDC_ICR_CFUIF_Pos: u32 = 1;
pub const LTDC_ICR_CFUIF_Msk: u32 = 0x1 << LTDC_ICR_CFUIF_Pos;
pub const LTDC_ICR_CFUIF: u32 = LTDC_ICR_CFUIF_Msk;
pub const LTDC_ICR_CTERRIF_Pos: u32 = 2;
pub const LTDC_ICR_CTERRIF_Msk: u32 = 0x1 << LTDC_ICR_CTERRIF_Pos;
pub const LTDC_ICR_CTERRIF: u32 = LTDC_ICR_CTERRIF_Msk;
pub const LTDC_ICR_CRRIF_Pos: u32 = 3;
pub const LTDC_ICR_CRRIF_Msk: u32 = 0x1 << LTDC_ICR_CRRIF_Pos;
pub const LTDC_ICR_CRRIF: u32 = LTDC_ICR_CRRIF_Msk;
pub const LTDC_LIPCR_LIPOS_Pos: u32 = 0;
pub const LTDC_LIPCR_LIPOS_Msk: u32 = 0x7FF << LTDC_LIPCR_LIPOS_Pos;
pub const LTDC_LIPCR_LIPOS: u32 = LTDC_LIPCR_LIPOS_Msk;
pub const LTDC_CPSR_CYPOS_Pos: u32 = 0;
pub const LTDC_CPSR_CYPOS_Msk: u32 = 0xFFFF << LTDC_CPSR_CYPOS_Pos;
pub const LTDC_CPSR_CYPOS: u32 = LTDC_CPSR_CYPOS_Msk;
pub const LTDC_CPSR_CXPOS_Pos: u32 = 16;
pub const LTDC_CPSR_CXPOS_Msk: u32 = 0xFFFF << LTDC_CPSR_CXPOS_Pos;
pub const LTDC_CPSR_CXPOS: u32 = LTDC_CPSR_CXPOS_Msk;
pub const LTDC_CDSR_VDES_Pos: u32 = 0;
pub const LTDC_CDSR_VDES_Msk: u32 = 0x1 << LTDC_CDSR_VDES_Pos;
pub const LTDC_CDSR_VDES: u32 = LTDC_CDSR_VDES_Msk;
pub const LTDC_CDSR_HDES_Pos: u32 = 1;
pub const LTDC_CDSR_HDES_Msk: u32 = 0x1 << LTDC_CDSR_HDES_Pos;
pub const LTDC_CDSR_HDES: u32 = LTDC_CDSR_HDES_Msk;
pub const LTDC_CDSR_VSYNCS_Pos: u32 = 2;
pub const LTDC_CDSR_VSYNCS_Msk: u32 = 0x1 << LTDC_CDSR_VSYNCS_Pos;
pub const LTDC_CDSR_VSYNCS: u32 = LTDC_CDSR_VSYNCS_Msk;
pub const LTDC_CDSR_HSYNCS_Pos: u32 = 3;
pub const LTDC_CDSR_HSYNCS_Msk: u32 = 0x1 << LTDC_CDSR_HSYNCS_Pos;
pub const LTDC_CDSR_HSYNCS: u32 = LTDC_CDSR_HSYNCS_Msk;
pub const LTDC_LxCR_LEN_Pos: u32 = 0;
pub const LTDC_LxCR_LEN_Msk: u32 = 0x1 << LTDC_LxCR_LEN_Pos;
pub const LTDC_LxCR_LEN: u32 = LTDC_LxCR_LEN_Msk;
pub const LTDC_LxCR_COLKEN_Pos: u32 = 1;
pub const LTDC_LxCR_COLKEN_Msk: u32 = 0x1 << LTDC_LxCR_COLKEN_Pos;
pub const LTDC_LxCR_COLKEN: u32 = LTDC_LxCR_COLKEN_Msk;
pub const LTDC_LxCR_CLUTEN_Pos: u32 = 4;
pub const LTDC_LxCR_CLUTEN_Msk: u32 = 0x1 << LTDC_LxCR_CLUTEN_Pos;
pub const LTDC_LxCR_CLUTEN: u32 = LTDC_LxCR_CLUTEN_Msk;
pub const LTDC_LxWHPCR_WHSTPOS_Pos: u32 = 0;
pub const LTDC_LxWHPCR_WHSTPOS_Msk: u32 = 0xFFF << LTDC_LxWHPCR_WHSTPOS_Pos;
pub const LTDC_LxWHPCR_WHSTPOS: u32 = LTDC_LxWHPCR_WHSTPOS_Msk;
pub const LTDC_LxWHPCR_WHSPPOS_Pos: u32 = 16;
pub const LTDC_LxWHPCR_WHSPPOS_Msk: u32 = 0xFFFF << LTDC_LxWHPCR_WHSPPOS_Pos;
pub const LTDC_LxWHPCR_WHSPPOS: u32 = LTDC_LxWHPCR_WHSPPOS_Msk;
pub const LTDC_LxWVPCR_WVSTPOS_Pos: u32 = 0;
pub const LTDC_LxWVPCR_WVSTPOS_Msk: u32 = 0xFFF << LTDC_LxWVPCR_WVSTPOS_Pos;
pub const LTDC_LxWVPCR_WVSTPOS: u32 = LTDC_LxWVPCR_WVSTPOS_Msk;
pub const LTDC_LxWVPCR_WVSPPOS_Pos: u32 = 16;
pub const LTDC_LxWVPCR_WVSPPOS_Msk: u32 = 0xFFFF << LTDC_LxWVPCR_WVSPPOS_Pos;
pub const LTDC_LxWVPCR_WVSPPOS: u32 = LTDC_LxWVPCR_WVSPPOS_Msk;
pub const LTDC_LxCKCR_CKBLUE_Pos: u32 = 0;
pub const LTDC_LxCKCR_CKBLUE_Msk: u32 = 0xFF << LTDC_LxCKCR_CKBLUE_Pos;
pub const LTDC_LxCKCR_CKBLUE: u32 = LTDC_LxCKCR_CKBLUE_Msk;
pub const LTDC_LxCKCR_CKGREEN_Pos: u32 = 8;
pub const LTDC_LxCKCR_CKGREEN_Msk: u32 = 0xFF << LTDC_LxCKCR_CKGREEN_Pos;
pub const LTDC_LxCKCR_CKGREEN: u32 = LTDC_LxCKCR_CKGREEN_Msk;
pub const LTDC_LxCKCR_CKRED_Pos: u32 = 16;
pub const LTDC_LxCKCR_CKRED_Msk: u32 = 0xFF << LTDC_LxCKCR_CKRED_Pos;
pub const LTDC_LxCKCR_CKRED: u32 = LTDC_LxCKCR_CKRED_Msk;
pub const LTDC_LxPFCR_PF_Pos: u32 = 0;
pub const LTDC_LxPFCR_PF_Msk: u32 = 0x7 << LTDC_LxPFCR_PF_Pos;
pub const LTDC_LxPFCR_PF: u32 = LTDC_LxPFCR_PF_Msk;
pub const LTDC_LxCACR_CONSTA_Pos: u32 = 0;
pub const LTDC_LxCACR_CONSTA_Msk: u32 = 0xFF << LTDC_LxCACR_CONSTA_Pos;
pub const LTDC_LxCACR_CONSTA: u32 = LTDC_LxCACR_CONSTA_Msk;
pub const LTDC_LxDCCR_DCBLUE_Pos: u32 = 0;
pub const LTDC_LxDCCR_DCBLUE_Msk: u32 = 0xFF << LTDC_LxDCCR_DCBLUE_Pos;
pub const LTDC_LxDCCR_DCBLUE: u32 = LTDC_LxDCCR_DCBLUE_Msk;
pub const LTDC_LxDCCR_DCGREEN_Pos: u32 = 8;
pub const LTDC_LxDCCR_DCGREEN_Msk: u32 = 0xFF << LTDC_LxDCCR_DCGREEN_Pos;
pub const LTDC_LxDCCR_DCGREEN: u32 = LTDC_LxDCCR_DCGREEN_Msk;
pub const LTDC_LxDCCR_DCRED_Pos: u32 = 16;
pub const LTDC_LxDCCR_DCRED_Msk: u32 = 0xFF << LTDC_LxDCCR_DCRED_Pos;
pub const LTDC_LxDCCR_DCRED: u32 = LTDC_LxDCCR_DCRED_Msk;
pub const LTDC_LxDCCR_DCALPHA_Pos: u32 = 24;
pub const LTDC_LxDCCR_DCALPHA_Msk: u32 = 0xFF << LTDC_LxDCCR_DCALPHA_Pos;
pub const LTDC_LxDCCR_DCALPHA: u32 = LTDC_LxDCCR_DCALPHA_Msk;
pub const LTDC_LxBFCR_BF2_Pos: u32 = 0;
pub const LTDC_LxBFCR_BF2_Msk: u32 = 0x7 << LTDC_LxBFCR_BF2_Pos;
pub const LTDC_LxBFCR_BF2: u32 = LTDC_LxBFCR_BF2_Msk;
pub const LTDC_LxBFCR_BF1_Pos: u32 = 8;
pub const LTDC_LxBFCR_BF1_Msk: u32 = 0x7 << LTDC_LxBFCR_BF1_Pos;
pub const LTDC_LxBFCR_BF1: u32 = LTDC_LxBFCR_BF1_Msk;
pub const LTDC_LxCFBAR_CFBADD_Pos: u32 = 0;
pub const LTDC_LxCFBAR_CFBADD_Msk: u32 = 0xFFFFFFFF << LTDC_LxCFBAR_CFBADD_Pos;
pub const LTDC_LxCFBAR_CFBADD: u32 = LTDC_LxCFBAR_CFBADD_Msk;
pub const LTDC_LxCFBLR_CFBLL_Pos: u32 = 0;
pub const LTDC_LxCFBLR_CFBLL_Msk: u32 = 0x1FFF << LTDC_LxCFBLR_CFBLL_Pos;
pub const LTDC_LxCFBLR_CFBLL: u32 = LTDC_LxCFBLR_CFBLL_Msk;
pub const LTDC_LxCFBLR_CFBP_Pos: u32 = 16;
pub const LTDC_LxCFBLR_CFBP_Msk: u32 = 0x1FFF << LTDC_LxCFBLR_CFBP_Pos;
pub const LTDC_LxCFBLR_CFBP: u32 = LTDC_LxCFBLR_CFBP_Msk;
pub const LTDC_LxCFBLNR_CFBLNBR_Pos: u32 = 0;
pub const LTDC_LxCFBLNR_CFBLNBR_Msk: u32 = 0x7FF << LTDC_LxCFBLNR_CFBLNBR_Pos;
pub const LTDC_LxCFBLNR_CFBLNBR: u32 = LTDC_LxCFBLNR_CFBLNBR_Msk;
pub const LTDC_LxCLUTWR_BLUE_Pos: u32 = 0;
pub const LTDC_LxCLUTWR_BLUE_Msk: u32 = 0xFF << LTDC_LxCLUTWR_BLUE_Pos;
pub const LTDC_LxCLUTWR_BLUE: u32 = LTDC_LxCLUTWR_BLUE_Msk;
pub const LTDC_LxCLUTWR_GREEN_Pos: u32 = 8;
pub const LTDC_LxCLUTWR_GREEN_Msk: u32 = 0xFF << LTDC_LxCLUTWR_GREEN_Pos;
pub const LTDC_LxCLUTWR_GREEN: u32 = LTDC_LxCLUTWR_GREEN_Msk;
pub const LTDC_LxCLUTWR_RED_Pos: u32 = 16;
pub const LTDC_LxCLUTWR_RED_Msk: u32 = 0xFF << LTDC_LxCLUTWR_RED_Pos;
pub const LTDC_LxCLUTWR_RED: u32 = LTDC_LxCLUTWR_RED_Msk;
pub const LTDC_LxCLUTWR_CLUTADD_Pos: u32 = 24;
pub const LTDC_LxCLUTWR_CLUTADD_Msk: u32 = 0xFF << LTDC_LxCLUTWR_CLUTADD_Pos;
pub const LTDC_LxCLUTWR_CLUTADD: u32 = LTDC_LxCLUTWR_CLUTADD_Msk;
pub const PWR_CR1_LPDS_Pos: u32 = 0;
pub const PWR_CR1_LPDS_Msk: u32 = 0x1 << PWR_CR1_LPDS_Pos;
pub const PWR_CR1_LPDS: u32 = PWR_CR1_LPDS_Msk;
pub const PWR_CR1_PDDS_Pos: u32 = 1;
pub const PWR_CR1_PDDS_Msk: u32 = 0x1 << PWR_CR1_PDDS_Pos;
pub const PWR_CR1_PDDS: u32 = PWR_CR1_PDDS_Msk;
pub const PWR_CR1_CSBF_Pos: u32 = 3;
pub const PWR_CR1_CSBF_Msk: u32 = 0x1 << PWR_CR1_CSBF_Pos;
pub const PWR_CR1_CSBF: u32 = PWR_CR1_CSBF_Msk;
pub const PWR_CR1_PVDE_Pos: u32 = 4;
pub const PWR_CR1_PVDE_Msk: u32 = 0x1 << PWR_CR1_PVDE_Pos;
pub const PWR_CR1_PVDE: u32 = PWR_CR1_PVDE_Msk;
pub const PWR_CR1_PLS_Pos: u32 = 5;
pub const PWR_CR1_PLS_Msk: u32 = 0x7 << PWR_CR1_PLS_Pos;
pub const PWR_CR1_PLS: u32 = PWR_CR1_PLS_Msk;
pub const PWR_CR1_PLS_0: u32 = 0x1 << PWR_CR1_PLS_Pos;
pub const PWR_CR1_PLS_1: u32 = 0x2 << PWR_CR1_PLS_Pos;
pub const PWR_CR1_PLS_2: u32 = 0x4 << PWR_CR1_PLS_Pos;
pub const PWR_CR1_PLS_LEV0: u32 = 0x00000000;
pub const PWR_CR1_PLS_LEV1_Pos: u32 = 5;
pub const PWR_CR1_PLS_LEV1_Msk: u32 = 0x1 << PWR_CR1_PLS_LEV1_Pos;
pub const PWR_CR1_PLS_LEV1: u32 = PWR_CR1_PLS_LEV1_Msk;
pub const PWR_CR1_PLS_LEV2_Pos: u32 = 6;
pub const PWR_CR1_PLS_LEV2_Msk: u32 = 0x1 << PWR_CR1_PLS_LEV2_Pos;
pub const PWR_CR1_PLS_LEV2: u32 = PWR_CR1_PLS_LEV2_Msk;
pub const PWR_CR1_PLS_LEV3_Pos: u32 = 5;
pub const PWR_CR1_PLS_LEV3_Msk: u32 = 0x3 << PWR_CR1_PLS_LEV3_Pos;
pub const PWR_CR1_PLS_LEV3: u32 = PWR_CR1_PLS_LEV3_Msk;
pub const PWR_CR1_PLS_LEV4_Pos: u32 = 7;
pub const PWR_CR1_PLS_LEV4_Msk: u32 = 0x1 << PWR_CR1_PLS_LEV4_Pos;
pub const PWR_CR1_PLS_LEV4: u32 = PWR_CR1_PLS_LEV4_Msk;
pub const PWR_CR1_PLS_LEV5_Pos: u32 = 5;
pub const PWR_CR1_PLS_LEV5_Msk: u32 = 0x5 << PWR_CR1_PLS_LEV5_Pos;
pub const PWR_CR1_PLS_LEV5: u32 = PWR_CR1_PLS_LEV5_Msk;
pub const PWR_CR1_PLS_LEV6_Pos: u32 = 6;
pub const PWR_CR1_PLS_LEV6_Msk: u32 = 0x3 << PWR_CR1_PLS_LEV6_Pos;
pub const PWR_CR1_PLS_LEV6: u32 = PWR_CR1_PLS_LEV6_Msk;
pub const PWR_CR1_PLS_LEV7_Pos: u32 = 5;
pub const PWR_CR1_PLS_LEV7_Msk: u32 = 0x7 << PWR_CR1_PLS_LEV7_Pos;
pub const PWR_CR1_PLS_LEV7: u32 = PWR_CR1_PLS_LEV7_Msk;
pub const PWR_CR1_DBP_Pos: u32 = 8;
pub const PWR_CR1_DBP_Msk: u32 = 0x1 << PWR_CR1_DBP_Pos;
pub const PWR_CR1_DBP: u32 = PWR_CR1_DBP_Msk;
pub const PWR_CR1_FPDS_Pos: u32 = 9;
pub const PWR_CR1_FPDS_Msk: u32 = 0x1 << PWR_CR1_FPDS_Pos;
pub const PWR_CR1_FPDS: u32 = PWR_CR1_FPDS_Msk;
pub const PWR_CR1_LPUDS_Pos: u32 = 10;
pub const PWR_CR1_LPUDS_Msk: u32 = 0x1 << PWR_CR1_LPUDS_Pos;
pub const PWR_CR1_LPUDS: u32 = PWR_CR1_LPUDS_Msk;
pub const PWR_CR1_MRUDS_Pos: u32 = 11;
pub const PWR_CR1_MRUDS_Msk: u32 = 0x1 << PWR_CR1_MRUDS_Pos;
pub const PWR_CR1_MRUDS: u32 = PWR_CR1_MRUDS_Msk;
pub const PWR_CR1_ADCDC1_Pos: u32 = 13;
pub const PWR_CR1_ADCDC1_Msk: u32 = 0x1 << PWR_CR1_ADCDC1_Pos;
pub const PWR_CR1_ADCDC1: u32 = PWR_CR1_ADCDC1_Msk;
pub const PWR_CR1_VOS_Pos: u32 = 14;
pub const PWR_CR1_VOS_Msk: u32 = 0x3 << PWR_CR1_VOS_Pos;
pub const PWR_CR1_VOS: u32 = PWR_CR1_VOS_Msk;
pub const PWR_CR1_VOS_0: u32 = 0x1 << PWR_CR1_VOS_Pos;
pub const PWR_CR1_VOS_1: u32 = 0x2 << PWR_CR1_VOS_Pos;
pub const PWR_CR1_ODEN_Pos: u32 = 16;
pub const PWR_CR1_ODEN_Msk: u32 = 0x1 << PWR_CR1_ODEN_Pos;
pub const PWR_CR1_ODEN: u32 = PWR_CR1_ODEN_Msk;
pub const PWR_CR1_ODSWEN_Pos: u32 = 17;
pub const PWR_CR1_ODSWEN_Msk: u32 = 0x1 << PWR_CR1_ODSWEN_Pos;
pub const PWR_CR1_ODSWEN: u32 = PWR_CR1_ODSWEN_Msk;
pub const PWR_CR1_UDEN_Pos: u32 = 18;
pub const PWR_CR1_UDEN_Msk: u32 = 0x3 << PWR_CR1_UDEN_Pos;
pub const PWR_CR1_UDEN: u32 = PWR_CR1_UDEN_Msk;
pub const PWR_CR1_UDEN_0: u32 = 0x1 << PWR_CR1_UDEN_Pos;
pub const PWR_CR1_UDEN_1: u32 = 0x2 << PWR_CR1_UDEN_Pos;
pub const PWR_CSR1_WUIF_Pos: u32 = 0;
pub const PWR_CSR1_WUIF_Msk: u32 = 0x1 << PWR_CSR1_WUIF_Pos;
pub const PWR_CSR1_WUIF: u32 = PWR_CSR1_WUIF_Msk;
pub const PWR_CSR1_SBF_Pos: u32 = 1;
pub const PWR_CSR1_SBF_Msk: u32 = 0x1 << PWR_CSR1_SBF_Pos;
pub const PWR_CSR1_SBF: u32 = PWR_CSR1_SBF_Msk;
pub const PWR_CSR1_PVDO_Pos: u32 = 2;
pub const PWR_CSR1_PVDO_Msk: u32 = 0x1 << PWR_CSR1_PVDO_Pos;
pub const PWR_CSR1_PVDO: u32 = PWR_CSR1_PVDO_Msk;
pub const PWR_CSR1_BRR_Pos: u32 = 3;
pub const PWR_CSR1_BRR_Msk: u32 = 0x1 << PWR_CSR1_BRR_Pos;
pub const PWR_CSR1_BRR: u32 = PWR_CSR1_BRR_Msk;
pub const PWR_CSR1_EIWUP_Pos: u32 = 8;
pub const PWR_CSR1_EIWUP_Msk: u32 = 0x1 << PWR_CSR1_EIWUP_Pos;
pub const PWR_CSR1_EIWUP: u32 = PWR_CSR1_EIWUP_Msk;
pub const PWR_CSR1_BRE_Pos: u32 = 9;
pub const PWR_CSR1_BRE_Msk: u32 = 0x1 << PWR_CSR1_BRE_Pos;
pub const PWR_CSR1_BRE: u32 = PWR_CSR1_BRE_Msk;
pub const PWR_CSR1_VOSRDY_Pos: u32 = 14;
pub const PWR_CSR1_VOSRDY_Msk: u32 = 0x1 << PWR_CSR1_VOSRDY_Pos;
pub const PWR_CSR1_VOSRDY: u32 = PWR_CSR1_VOSRDY_Msk;
pub const PWR_CSR1_ODRDY_Pos: u32 = 16;
pub const PWR_CSR1_ODRDY_Msk: u32 = 0x1 << PWR_CSR1_ODRDY_Pos;
pub const PWR_CSR1_ODRDY: u32 = PWR_CSR1_ODRDY_Msk;
pub const PWR_CSR1_ODSWRDY_Pos: u32 = 17;
pub const PWR_CSR1_ODSWRDY_Msk: u32 = 0x1 << PWR_CSR1_ODSWRDY_Pos;
pub const PWR_CSR1_ODSWRDY: u32 = PWR_CSR1_ODSWRDY_Msk;
pub const PWR_CSR1_UDRDY_Pos: u32 = 18;
pub const PWR_CSR1_UDRDY_Msk: u32 = 0x3 << PWR_CSR1_UDRDY_Pos;
pub const PWR_CSR1_UDRDY: u32 = PWR_CSR1_UDRDY_Msk;
pub const PWR_CSR1_UDSWRDY: u32 = PWR_CSR1_UDRDY;
pub const PWR_CR2_CWUPF1_Pos: u32 = 0;
pub const PWR_CR2_CWUPF1_Msk: u32 = 0x1 << PWR_CR2_CWUPF1_Pos;
pub const PWR_CR2_CWUPF1: u32 = PWR_CR2_CWUPF1_Msk;
pub const PWR_CR2_CWUPF2_Pos: u32 = 1;
pub const PWR_CR2_CWUPF2_Msk: u32 = 0x1 << PWR_CR2_CWUPF2_Pos;
pub const PWR_CR2_CWUPF2: u32 = PWR_CR2_CWUPF2_Msk;
pub const PWR_CR2_CWUPF3_Pos: u32 = 2;
pub const PWR_CR2_CWUPF3_Msk: u32 = 0x1 << PWR_CR2_CWUPF3_Pos;
pub const PWR_CR2_CWUPF3: u32 = PWR_CR2_CWUPF3_Msk;
pub const PWR_CR2_CWUPF4_Pos: u32 = 3;
pub const PWR_CR2_CWUPF4_Msk: u32 = 0x1 << PWR_CR2_CWUPF4_Pos;
pub const PWR_CR2_CWUPF4: u32 = PWR_CR2_CWUPF4_Msk;
pub const PWR_CR2_CWUPF5_Pos: u32 = 4;
pub const PWR_CR2_CWUPF5_Msk: u32 = 0x1 << PWR_CR2_CWUPF5_Pos;
pub const PWR_CR2_CWUPF5: u32 = PWR_CR2_CWUPF5_Msk;
pub const PWR_CR2_CWUPF6_Pos: u32 = 5;
pub const PWR_CR2_CWUPF6_Msk: u32 = 0x1 << PWR_CR2_CWUPF6_Pos;
pub const PWR_CR2_CWUPF6: u32 = PWR_CR2_CWUPF6_Msk;
pub const PWR_CR2_WUPP1_Pos: u32 = 8;
pub const PWR_CR2_WUPP1_Msk: u32 = 0x1 << PWR_CR2_WUPP1_Pos;
pub const PWR_CR2_WUPP1: u32 = PWR_CR2_WUPP1_Msk;
pub const PWR_CR2_WUPP2_Pos: u32 = 9;
pub const PWR_CR2_WUPP2_Msk: u32 = 0x1 << PWR_CR2_WUPP2_Pos;
pub const PWR_CR2_WUPP2: u32 = PWR_CR2_WUPP2_Msk;
pub const PWR_CR2_WUPP3_Pos: u32 = 10;
pub const PWR_CR2_WUPP3_Msk: u32 = 0x1 << PWR_CR2_WUPP3_Pos;
pub const PWR_CR2_WUPP3: u32 = PWR_CR2_WUPP3_Msk;
pub const PWR_CR2_WUPP4_Pos: u32 = 11;
pub const PWR_CR2_WUPP4_Msk: u32 = 0x1 << PWR_CR2_WUPP4_Pos;
pub const PWR_CR2_WUPP4: u32 = PWR_CR2_WUPP4_Msk;
pub const PWR_CR2_WUPP5_Pos: u32 = 12;
pub const PWR_CR2_WUPP5_Msk: u32 = 0x1 << PWR_CR2_WUPP5_Pos;
pub const PWR_CR2_WUPP5: u32 = PWR_CR2_WUPP5_Msk;
pub const PWR_CR2_WUPP6_Pos: u32 = 13;
pub const PWR_CR2_WUPP6_Msk: u32 = 0x1 << PWR_CR2_WUPP6_Pos;
pub const PWR_CR2_WUPP6: u32 = PWR_CR2_WUPP6_Msk;
pub const PWR_CSR2_WUPF1_Pos: u32 = 0;
pub const PWR_CSR2_WUPF1_Msk: u32 = 0x1 << PWR_CSR2_WUPF1_Pos;
pub const PWR_CSR2_WUPF1: u32 = PWR_CSR2_WUPF1_Msk;
pub const PWR_CSR2_WUPF2_Pos: u32 = 1;
pub const PWR_CSR2_WUPF2_Msk: u32 = 0x1 << PWR_CSR2_WUPF2_Pos;
pub const PWR_CSR2_WUPF2: u32 = PWR_CSR2_WUPF2_Msk;
pub const PWR_CSR2_WUPF3_Pos: u32 = 2;
pub const PWR_CSR2_WUPF3_Msk: u32 = 0x1 << PWR_CSR2_WUPF3_Pos;
pub const PWR_CSR2_WUPF3: u32 = PWR_CSR2_WUPF3_Msk;
pub const PWR_CSR2_WUPF4_Pos: u32 = 3;
pub const PWR_CSR2_WUPF4_Msk: u32 = 0x1 << PWR_CSR2_WUPF4_Pos;
pub const PWR_CSR2_WUPF4: u32 = PWR_CSR2_WUPF4_Msk;
pub const PWR_CSR2_WUPF5_Pos: u32 = 4;
pub const PWR_CSR2_WUPF5_Msk: u32 = 0x1 << PWR_CSR2_WUPF5_Pos;
pub const PWR_CSR2_WUPF5: u32 = PWR_CSR2_WUPF5_Msk;
pub const PWR_CSR2_WUPF6_Pos: u32 = 5;
pub const PWR_CSR2_WUPF6_Msk: u32 = 0x1 << PWR_CSR2_WUPF6_Pos;
pub const PWR_CSR2_WUPF6: u32 = PWR_CSR2_WUPF6_Msk;
pub const PWR_CSR2_EWUP1_Pos: u32 = 8;
pub const PWR_CSR2_EWUP1_Msk: u32 = 0x1 << PWR_CSR2_EWUP1_Pos;
pub const PWR_CSR2_EWUP1: u32 = PWR_CSR2_EWUP1_Msk;
pub const PWR_CSR2_EWUP2_Pos: u32 = 9;
pub const PWR_CSR2_EWUP2_Msk: u32 = 0x1 << PWR_CSR2_EWUP2_Pos;
pub const PWR_CSR2_EWUP2: u32 = PWR_CSR2_EWUP2_Msk;
pub const PWR_CSR2_EWUP3_Pos: u32 = 10;
pub const PWR_CSR2_EWUP3_Msk: u32 = 0x1 << PWR_CSR2_EWUP3_Pos;
pub const PWR_CSR2_EWUP3: u32 = PWR_CSR2_EWUP3_Msk;
pub const PWR_CSR2_EWUP4_Pos: u32 = 11;
pub const PWR_CSR2_EWUP4_Msk: u32 = 0x1 << PWR_CSR2_EWUP4_Pos;
pub const PWR_CSR2_EWUP4: u32 = PWR_CSR2_EWUP4_Msk;
pub const PWR_CSR2_EWUP5_Pos: u32 = 12;
pub const PWR_CSR2_EWUP5_Msk: u32 = 0x1 << PWR_CSR2_EWUP5_Pos;
pub const PWR_CSR2_EWUP5: u32 = PWR_CSR2_EWUP5_Msk;
pub const PWR_CSR2_EWUP6_Pos: u32 = 13;
pub const PWR_CSR2_EWUP6_Msk: u32 = 0x1 << PWR_CSR2_EWUP6_Pos;
pub const PWR_CSR2_EWUP6: u32 = PWR_CSR2_EWUP6_Msk;
pub const QUADSPI_CR_EN_Pos: u32 = 0;
pub const QUADSPI_CR_EN_Msk: u32 = 0x1 << QUADSPI_CR_EN_Pos;
pub const QUADSPI_CR_EN: u32 = QUADSPI_CR_EN_Msk;
pub const QUADSPI_CR_ABORT_Pos: u32 = 1;
pub const QUADSPI_CR_ABORT_Msk: u32 = 0x1 << QUADSPI_CR_ABORT_Pos;
pub const QUADSPI_CR_ABORT: u32 = QUADSPI_CR_ABORT_Msk;
pub const QUADSPI_CR_DMAEN_Pos: u32 = 2;
pub const QUADSPI_CR_DMAEN_Msk: u32 = 0x1 << QUADSPI_CR_DMAEN_Pos;
pub const QUADSPI_CR_DMAEN: u32 = QUADSPI_CR_DMAEN_Msk;
pub const QUADSPI_CR_TCEN_Pos: u32 = 3;
pub const QUADSPI_CR_TCEN_Msk: u32 = 0x1 << QUADSPI_CR_TCEN_Pos;
pub const QUADSPI_CR_TCEN: u32 = QUADSPI_CR_TCEN_Msk;
pub const QUADSPI_CR_SSHIFT_Pos: u32 = 4;
pub const QUADSPI_CR_SSHIFT_Msk: u32 = 0x1 << QUADSPI_CR_SSHIFT_Pos;
pub const QUADSPI_CR_SSHIFT: u32 = QUADSPI_CR_SSHIFT_Msk;
pub const QUADSPI_CR_DFM_Pos: u32 = 6;
pub const QUADSPI_CR_DFM_Msk: u32 = 0x1 << QUADSPI_CR_DFM_Pos;
pub const QUADSPI_CR_DFM: u32 = QUADSPI_CR_DFM_Msk;
pub const QUADSPI_CR_FSEL_Pos: u32 = 7;
pub const QUADSPI_CR_FSEL_Msk: u32 = 0x1 << QUADSPI_CR_FSEL_Pos;
pub const QUADSPI_CR_FSEL: u32 = QUADSPI_CR_FSEL_Msk;
pub const QUADSPI_CR_FTHRES_Pos: u32 = 8;
pub const QUADSPI_CR_FTHRES_Msk: u32 = 0x1F << QUADSPI_CR_FTHRES_Pos;
pub const QUADSPI_CR_FTHRES: u32 = QUADSPI_CR_FTHRES_Msk;
pub const QUADSPI_CR_FTHRES_0: u32 = 0x01 << QUADSPI_CR_FTHRES_Pos;
pub const QUADSPI_CR_FTHRES_1: u32 = 0x02 << QUADSPI_CR_FTHRES_Pos;
pub const QUADSPI_CR_FTHRES_2: u32 = 0x04 << QUADSPI_CR_FTHRES_Pos;
pub const QUADSPI_CR_FTHRES_3: u32 = 0x08 << QUADSPI_CR_FTHRES_Pos;
pub const QUADSPI_CR_FTHRES_4: u32 = 0x10 << QUADSPI_CR_FTHRES_Pos;
pub const QUADSPI_CR_TEIE_Pos: u32 = 16;
pub const QUADSPI_CR_TEIE_Msk: u32 = 0x1 << QUADSPI_CR_TEIE_Pos;
pub const QUADSPI_CR_TEIE: u32 = QUADSPI_CR_TEIE_Msk;
pub const QUADSPI_CR_TCIE_Pos: u32 = 17;
pub const QUADSPI_CR_TCIE_Msk: u32 = 0x1 << QUADSPI_CR_TCIE_Pos;
pub const QUADSPI_CR_TCIE: u32 = QUADSPI_CR_TCIE_Msk;
pub const QUADSPI_CR_FTIE_Pos: u32 = 18;
pub const QUADSPI_CR_FTIE_Msk: u32 = 0x1 << QUADSPI_CR_FTIE_Pos;
pub const QUADSPI_CR_FTIE: u32 = QUADSPI_CR_FTIE_Msk;
pub const QUADSPI_CR_SMIE_Pos: u32 = 19;
pub const QUADSPI_CR_SMIE_Msk: u32 = 0x1 << QUADSPI_CR_SMIE_Pos;
pub const QUADSPI_CR_SMIE: u32 = QUADSPI_CR_SMIE_Msk;
pub const QUADSPI_CR_TOIE_Pos: u32 = 20;
pub const QUADSPI_CR_TOIE_Msk: u32 = 0x1 << QUADSPI_CR_TOIE_Pos;
pub const QUADSPI_CR_TOIE: u32 = QUADSPI_CR_TOIE_Msk;
pub const QUADSPI_CR_APMS_Pos: u32 = 22;
pub const QUADSPI_CR_APMS_Msk: u32 = 0x1 << QUADSPI_CR_APMS_Pos;
pub const QUADSPI_CR_APMS: u32 = QUADSPI_CR_APMS_Msk;
pub const QUADSPI_CR_PMM_Pos: u32 = 23;
pub const QUADSPI_CR_PMM_Msk: u32 = 0x1 << QUADSPI_CR_PMM_Pos;
pub const QUADSPI_CR_PMM: u32 = QUADSPI_CR_PMM_Msk;
pub const QUADSPI_CR_PRESCALER_Pos: u32 = 24;
pub const QUADSPI_CR_PRESCALER_Msk: u32 = 0xFF << QUADSPI_CR_PRESCALER_Pos;
pub const QUADSPI_CR_PRESCALER: u32 = QUADSPI_CR_PRESCALER_Msk;
pub const QUADSPI_CR_PRESCALER_0: u32 = 0x01 << QUADSPI_CR_PRESCALER_Pos;
pub const QUADSPI_CR_PRESCALER_1: u32 = 0x02 << QUADSPI_CR_PRESCALER_Pos;
pub const QUADSPI_CR_PRESCALER_2: u32 = 0x04 << QUADSPI_CR_PRESCALER_Pos;
pub const QUADSPI_CR_PRESCALER_3: u32 = 0x08 << QUADSPI_CR_PRESCALER_Pos;
pub const QUADSPI_CR_PRESCALER_4: u32 = 0x10 << QUADSPI_CR_PRESCALER_Pos;
pub const QUADSPI_CR_PRESCALER_5: u32 = 0x20 << QUADSPI_CR_PRESCALER_Pos;
pub const QUADSPI_CR_PRESCALER_6: u32 = 0x40 << QUADSPI_CR_PRESCALER_Pos;
pub const QUADSPI_CR_PRESCALER_7: u32 = 0x80 << QUADSPI_CR_PRESCALER_Pos;
pub const QUADSPI_DCR_CKMODE_Pos: u32 = 0;
pub const QUADSPI_DCR_CKMODE_Msk: u32 = 0x1 << QUADSPI_DCR_CKMODE_Pos;
pub const QUADSPI_DCR_CKMODE: u32 = QUADSPI_DCR_CKMODE_Msk;
pub const QUADSPI_DCR_CSHT_Pos: u32 = 8;
pub const QUADSPI_DCR_CSHT_Msk: u32 = 0x7 << QUADSPI_DCR_CSHT_Pos;
pub const QUADSPI_DCR_CSHT: u32 = QUADSPI_DCR_CSHT_Msk;
pub const QUADSPI_DCR_CSHT_0: u32 = 0x1 << QUADSPI_DCR_CSHT_Pos;
pub const QUADSPI_DCR_CSHT_1: u32 = 0x2 << QUADSPI_DCR_CSHT_Pos;
pub const QUADSPI_DCR_CSHT_2: u32 = 0x4 << QUADSPI_DCR_CSHT_Pos;
pub const QUADSPI_DCR_FSIZE_Pos: u32 = 16;
pub const QUADSPI_DCR_FSIZE_Msk: u32 = 0x1F << QUADSPI_DCR_FSIZE_Pos;
pub const QUADSPI_DCR_FSIZE: u32 = QUADSPI_DCR_FSIZE_Msk;
pub const QUADSPI_DCR_FSIZE_0: u32 = 0x01 << QUADSPI_DCR_FSIZE_Pos;
pub const QUADSPI_DCR_FSIZE_1: u32 = 0x02 << QUADSPI_DCR_FSIZE_Pos;
pub const QUADSPI_DCR_FSIZE_2: u32 = 0x04 << QUADSPI_DCR_FSIZE_Pos;
pub const QUADSPI_DCR_FSIZE_3: u32 = 0x08 << QUADSPI_DCR_FSIZE_Pos;
pub const QUADSPI_DCR_FSIZE_4: u32 = 0x10 << QUADSPI_DCR_FSIZE_Pos;
pub const QUADSPI_SR_TEF_Pos: u32 = 0;
pub const QUADSPI_SR_TEF_Msk: u32 = 0x1 << QUADSPI_SR_TEF_Pos;
pub const QUADSPI_SR_TEF: u32 = QUADSPI_SR_TEF_Msk;
pub const QUADSPI_SR_TCF_Pos: u32 = 1;
pub const QUADSPI_SR_TCF_Msk: u32 = 0x1 << QUADSPI_SR_TCF_Pos;
pub const QUADSPI_SR_TCF: u32 = QUADSPI_SR_TCF_Msk;
pub const QUADSPI_SR_FTF_Pos: u32 = 2;
pub const QUADSPI_SR_FTF_Msk: u32 = 0x1 << QUADSPI_SR_FTF_Pos;
pub const QUADSPI_SR_FTF: u32 = QUADSPI_SR_FTF_Msk;
pub const QUADSPI_SR_SMF_Pos: u32 = 3;
pub const QUADSPI_SR_SMF_Msk: u32 = 0x1 << QUADSPI_SR_SMF_Pos;
pub const QUADSPI_SR_SMF: u32 = QUADSPI_SR_SMF_Msk;
pub const QUADSPI_SR_TOF_Pos: u32 = 4;
pub const QUADSPI_SR_TOF_Msk: u32 = 0x1 << QUADSPI_SR_TOF_Pos;
pub const QUADSPI_SR_TOF: u32 = QUADSPI_SR_TOF_Msk;
pub const QUADSPI_SR_BUSY_Pos: u32 = 5;
pub const QUADSPI_SR_BUSY_Msk: u32 = 0x1 << QUADSPI_SR_BUSY_Pos;
pub const QUADSPI_SR_BUSY: u32 = QUADSPI_SR_BUSY_Msk;
pub const QUADSPI_SR_FLEVEL_Pos: u32 = 8;
pub const QUADSPI_SR_FLEVEL_Msk: u32 = 0x3F << QUADSPI_SR_FLEVEL_Pos;
pub const QUADSPI_SR_FLEVEL: u32 = QUADSPI_SR_FLEVEL_Msk;
pub const QUADSPI_SR_FLEVEL_0: u32 = 0x01 << QUADSPI_SR_FLEVEL_Pos;
pub const QUADSPI_SR_FLEVEL_1: u32 = 0x02 << QUADSPI_SR_FLEVEL_Pos;
pub const QUADSPI_SR_FLEVEL_2: u32 = 0x04 << QUADSPI_SR_FLEVEL_Pos;
pub const QUADSPI_SR_FLEVEL_3: u32 = 0x08 << QUADSPI_SR_FLEVEL_Pos;
pub const QUADSPI_SR_FLEVEL_4: u32 = 0x10 << QUADSPI_SR_FLEVEL_Pos;
pub const QUADSPI_SR_FLEVEL_5: u32 = 0x20 << QUADSPI_SR_FLEVEL_Pos;
pub const QUADSPI_FCR_CTEF_Pos: u32 = 0;
pub const QUADSPI_FCR_CTEF_Msk: u32 = 0x1 << QUADSPI_FCR_CTEF_Pos;
pub const QUADSPI_FCR_CTEF: u32 = QUADSPI_FCR_CTEF_Msk;
pub const QUADSPI_FCR_CTCF_Pos: u32 = 1;
pub const QUADSPI_FCR_CTCF_Msk: u32 = 0x1 << QUADSPI_FCR_CTCF_Pos;
pub const QUADSPI_FCR_CTCF: u32 = QUADSPI_FCR_CTCF_Msk;
pub const QUADSPI_FCR_CSMF_Pos: u32 = 3;
pub const QUADSPI_FCR_CSMF_Msk: u32 = 0x1 << QUADSPI_FCR_CSMF_Pos;
pub const QUADSPI_FCR_CSMF: u32 = QUADSPI_FCR_CSMF_Msk;
pub const QUADSPI_FCR_CTOF_Pos: u32 = 4;
pub const QUADSPI_FCR_CTOF_Msk: u32 = 0x1 << QUADSPI_FCR_CTOF_Pos;
pub const QUADSPI_FCR_CTOF: u32 = QUADSPI_FCR_CTOF_Msk;
pub const QUADSPI_DLR_DL_Pos: u32 = 0;
pub const QUADSPI_DLR_DL_Msk: u32 = 0xFFFFFFFF << QUADSPI_DLR_DL_Pos;
pub const QUADSPI_DLR_DL: u32 = QUADSPI_DLR_DL_Msk;
pub const QUADSPI_CCR_INSTRUCTION_Pos: u32 = 0;
pub const QUADSPI_CCR_INSTRUCTION_Msk: u32 = 0xFF << QUADSPI_CCR_INSTRUCTION_Pos;
pub const QUADSPI_CCR_INSTRUCTION: u32 = QUADSPI_CCR_INSTRUCTION_Msk;
pub const QUADSPI_CCR_INSTRUCTION_0: u32 = 0x01 << QUADSPI_CCR_INSTRUCTION_Pos;
pub const QUADSPI_CCR_INSTRUCTION_1: u32 = 0x02 << QUADSPI_CCR_INSTRUCTION_Pos;
pub const QUADSPI_CCR_INSTRUCTION_2: u32 = 0x04 << QUADSPI_CCR_INSTRUCTION_Pos;
pub const QUADSPI_CCR_INSTRUCTION_3: u32 = 0x08 << QUADSPI_CCR_INSTRUCTION_Pos;
pub const QUADSPI_CCR_INSTRUCTION_4: u32 = 0x10 << QUADSPI_CCR_INSTRUCTION_Pos;
pub const QUADSPI_CCR_INSTRUCTION_5: u32 = 0x20 << QUADSPI_CCR_INSTRUCTION_Pos;
pub const QUADSPI_CCR_INSTRUCTION_6: u32 = 0x40 << QUADSPI_CCR_INSTRUCTION_Pos;
pub const QUADSPI_CCR_INSTRUCTION_7: u32 = 0x80 << QUADSPI_CCR_INSTRUCTION_Pos;
pub const QUADSPI_CCR_IMODE_Pos: u32 = 8;
pub const QUADSPI_CCR_IMODE_Msk: u32 = 0x3 << QUADSPI_CCR_IMODE_Pos;
pub const QUADSPI_CCR_IMODE: u32 = QUADSPI_CCR_IMODE_Msk;
pub const QUADSPI_CCR_IMODE_0: u32 = 0x1 << QUADSPI_CCR_IMODE_Pos;
pub const QUADSPI_CCR_IMODE_1: u32 = 0x2 << QUADSPI_CCR_IMODE_Pos;
pub const QUADSPI_CCR_ADMODE_Pos: u32 = 10;
pub const QUADSPI_CCR_ADMODE_Msk: u32 = 0x3 << QUADSPI_CCR_ADMODE_Pos;
pub const QUADSPI_CCR_ADMODE: u32 = QUADSPI_CCR_ADMODE_Msk;
pub const QUADSPI_CCR_ADMODE_0: u32 = 0x1 << QUADSPI_CCR_ADMODE_Pos;
pub const QUADSPI_CCR_ADMODE_1: u32 = 0x2 << QUADSPI_CCR_ADMODE_Pos;
pub const QUADSPI_CCR_ADSIZE_Pos: u32 = 12;
pub const QUADSPI_CCR_ADSIZE_Msk: u32 = 0x3 << QUADSPI_CCR_ADSIZE_Pos;
pub const QUADSPI_CCR_ADSIZE: u32 = QUADSPI_CCR_ADSIZE_Msk;
pub const QUADSPI_CCR_ADSIZE_0: u32 = 0x1 << QUADSPI_CCR_ADSIZE_Pos;
pub const QUADSPI_CCR_ADSIZE_1: u32 = 0x2 << QUADSPI_CCR_ADSIZE_Pos;
pub const QUADSPI_CCR_ABMODE_Pos: u32 = 14;
pub const QUADSPI_CCR_ABMODE_Msk: u32 = 0x3 << QUADSPI_CCR_ABMODE_Pos;
pub const QUADSPI_CCR_ABMODE: u32 = QUADSPI_CCR_ABMODE_Msk;
pub const QUADSPI_CCR_ABMODE_0: u32 = 0x1 << QUADSPI_CCR_ABMODE_Pos;
pub const QUADSPI_CCR_ABMODE_1: u32 = 0x2 << QUADSPI_CCR_ABMODE_Pos;
pub const QUADSPI_CCR_ABSIZE_Pos: u32 = 16;
pub const QUADSPI_CCR_ABSIZE_Msk: u32 = 0x3 << QUADSPI_CCR_ABSIZE_Pos;
pub const QUADSPI_CCR_ABSIZE: u32 = QUADSPI_CCR_ABSIZE_Msk;
pub const QUADSPI_CCR_ABSIZE_0: u32 = 0x1 << QUADSPI_CCR_ABSIZE_Pos;
pub const QUADSPI_CCR_ABSIZE_1: u32 = 0x2 << QUADSPI_CCR_ABSIZE_Pos;
pub const QUADSPI_CCR_DCYC_Pos: u32 = 18;
pub const QUADSPI_CCR_DCYC_Msk: u32 = 0x1F << QUADSPI_CCR_DCYC_Pos;
pub const QUADSPI_CCR_DCYC: u32 = QUADSPI_CCR_DCYC_Msk;
pub const QUADSPI_CCR_DCYC_0: u32 = 0x01 << QUADSPI_CCR_DCYC_Pos;
pub const QUADSPI_CCR_DCYC_1: u32 = 0x02 << QUADSPI_CCR_DCYC_Pos;
pub const QUADSPI_CCR_DCYC_2: u32 = 0x04 << QUADSPI_CCR_DCYC_Pos;
pub const QUADSPI_CCR_DCYC_3: u32 = 0x08 << QUADSPI_CCR_DCYC_Pos;
pub const QUADSPI_CCR_DCYC_4: u32 = 0x10 << QUADSPI_CCR_DCYC_Pos;
pub const QUADSPI_CCR_DMODE_Pos: u32 = 24;
pub const QUADSPI_CCR_DMODE_Msk: u32 = 0x3 << QUADSPI_CCR_DMODE_Pos;
pub const QUADSPI_CCR_DMODE: u32 = QUADSPI_CCR_DMODE_Msk;
pub const QUADSPI_CCR_DMODE_0: u32 = 0x1 << QUADSPI_CCR_DMODE_Pos;
pub const QUADSPI_CCR_DMODE_1: u32 = 0x2 << QUADSPI_CCR_DMODE_Pos;
pub const QUADSPI_CCR_FMODE_Pos: u32 = 26;
pub const QUADSPI_CCR_FMODE_Msk: u32 = 0x3 << QUADSPI_CCR_FMODE_Pos;
pub const QUADSPI_CCR_FMODE: u32 = QUADSPI_CCR_FMODE_Msk;
pub const QUADSPI_CCR_FMODE_0: u32 = 0x1 << QUADSPI_CCR_FMODE_Pos;
pub const QUADSPI_CCR_FMODE_1: u32 = 0x2 << QUADSPI_CCR_FMODE_Pos;
pub const QUADSPI_CCR_SIOO_Pos: u32 = 28;
pub const QUADSPI_CCR_SIOO_Msk: u32 = 0x1 << QUADSPI_CCR_SIOO_Pos;
pub const QUADSPI_CCR_SIOO: u32 = QUADSPI_CCR_SIOO_Msk;
pub const QUADSPI_CCR_DHHC_Pos: u32 = 30;
pub const QUADSPI_CCR_DHHC_Msk: u32 = 0x1 << QUADSPI_CCR_DHHC_Pos;
pub const QUADSPI_CCR_DHHC: u32 = QUADSPI_CCR_DHHC_Msk;
pub const QUADSPI_CCR_DDRM_Pos: u32 = 31;
pub const QUADSPI_CCR_DDRM_Msk: u32 = 0x1 << QUADSPI_CCR_DDRM_Pos;
pub const QUADSPI_CCR_DDRM: u32 = QUADSPI_CCR_DDRM_Msk;
pub const QUADSPI_AR_ADDRESS_Pos: u32 = 0;
pub const QUADSPI_AR_ADDRESS_Msk: u32 = 0xFFFFFFFF << QUADSPI_AR_ADDRESS_Pos;
pub const QUADSPI_AR_ADDRESS: u32 = QUADSPI_AR_ADDRESS_Msk;
pub const QUADSPI_ABR_ALTERNATE_Pos: u32 = 0;
pub const QUADSPI_ABR_ALTERNATE_Msk: u32 = 0xFFFFFFFF << QUADSPI_ABR_ALTERNATE_Pos;
pub const QUADSPI_ABR_ALTERNATE: u32 = QUADSPI_ABR_ALTERNATE_Msk;
pub const QUADSPI_DR_DATA_Pos: u32 = 0;
pub const QUADSPI_DR_DATA_Msk: u32 = 0xFFFFFFFF << QUADSPI_DR_DATA_Pos;
pub const QUADSPI_DR_DATA: u32 = QUADSPI_DR_DATA_Msk;
pub const QUADSPI_PSMKR_MASK_Pos: u32 = 0;
pub const QUADSPI_PSMKR_MASK_Msk: u32 = 0xFFFFFFFF << QUADSPI_PSMKR_MASK_Pos;
pub const QUADSPI_PSMKR_MASK: u32 = QUADSPI_PSMKR_MASK_Msk;
pub const QUADSPI_PSMAR_MATCH_Pos: u32 = 0;
pub const QUADSPI_PSMAR_MATCH_Msk: u32 = 0xFFFFFFFF << QUADSPI_PSMAR_MATCH_Pos;
pub const QUADSPI_PSMAR_MATCH: u32 = QUADSPI_PSMAR_MATCH_Msk;
pub const QUADSPI_PIR_INTERVAL_Pos: u32 = 0;
pub const QUADSPI_PIR_INTERVAL_Msk: u32 = 0xFFFF << QUADSPI_PIR_INTERVAL_Pos;
pub const QUADSPI_PIR_INTERVAL: u32 = QUADSPI_PIR_INTERVAL_Msk;
pub const QUADSPI_LPTR_TIMEOUT_Pos: u32 = 0;
pub const QUADSPI_LPTR_TIMEOUT_Msk: u32 = 0xFFFF << QUADSPI_LPTR_TIMEOUT_Pos;
pub const QUADSPI_LPTR_TIMEOUT: u32 = QUADSPI_LPTR_TIMEOUT_Msk;
pub const RCC_CR_HSION_Pos: u32 = 0;
pub const RCC_CR_HSION_Msk: u32 = 0x1 << RCC_CR_HSION_Pos;
pub const RCC_CR_HSION: u32 = RCC_CR_HSION_Msk;
pub const RCC_CR_HSIRDY_Pos: u32 = 1;
pub const RCC_CR_HSIRDY_Msk: u32 = 0x1 << RCC_CR_HSIRDY_Pos;
pub const RCC_CR_HSIRDY: u32 = RCC_CR_HSIRDY_Msk;
pub const RCC_CR_HSITRIM_Pos: u32 = 3;
pub const RCC_CR_HSITRIM_Msk: u32 = 0x1F << RCC_CR_HSITRIM_Pos;
pub const RCC_CR_HSITRIM: u32 = RCC_CR_HSITRIM_Msk;
pub const RCC_CR_HSITRIM_0: u32 = 0x01 << RCC_CR_HSITRIM_Pos;
pub const RCC_CR_HSITRIM_1: u32 = 0x02 << RCC_CR_HSITRIM_Pos;
pub const RCC_CR_HSITRIM_2: u32 = 0x04 << RCC_CR_HSITRIM_Pos;
pub const RCC_CR_HSITRIM_3: u32 = 0x08 << RCC_CR_HSITRIM_Pos;
pub const RCC_CR_HSITRIM_4: u32 = 0x10 << RCC_CR_HSITRIM_Pos;
pub const RCC_CR_HSICAL_Pos: u32 = 8;
pub const RCC_CR_HSICAL_Msk: u32 = 0xFF << RCC_CR_HSICAL_Pos;
pub const RCC_CR_HSICAL: u32 = RCC_CR_HSICAL_Msk;
pub const RCC_CR_HSICAL_0: u32 = 0x01 << RCC_CR_HSICAL_Pos;
pub const RCC_CR_HSICAL_1: u32 = 0x02 << RCC_CR_HSICAL_Pos;
pub const RCC_CR_HSICAL_2: u32 = 0x04 << RCC_CR_HSICAL_Pos;
pub const RCC_CR_HSICAL_3: u32 = 0x08 << RCC_CR_HSICAL_Pos;
pub const RCC_CR_HSICAL_4: u32 = 0x10 << RCC_CR_HSICAL_Pos;
pub const RCC_CR_HSICAL_5: u32 = 0x20 << RCC_CR_HSICAL_Pos;
pub const RCC_CR_HSICAL_6: u32 = 0x40 << RCC_CR_HSICAL_Pos;
pub const RCC_CR_HSICAL_7: u32 = 0x80 << RCC_CR_HSICAL_Pos;
pub const RCC_CR_HSEON_Pos: u32 = 16;
pub const RCC_CR_HSEON_Msk: u32 = 0x1 << RCC_CR_HSEON_Pos;
pub const RCC_CR_HSEON: u32 = RCC_CR_HSEON_Msk;
pub const RCC_CR_HSERDY_Pos: u32 = 17;
pub const RCC_CR_HSERDY_Msk: u32 = 0x1 << RCC_CR_HSERDY_Pos;
pub const RCC_CR_HSERDY: u32 = RCC_CR_HSERDY_Msk;
pub const RCC_CR_HSEBYP_Pos: u32 = 18;
pub const RCC_CR_HSEBYP_Msk: u32 = 0x1 << RCC_CR_HSEBYP_Pos;
pub const RCC_CR_HSEBYP: u32 = RCC_CR_HSEBYP_Msk;
pub const RCC_CR_CSSON_Pos: u32 = 19;
pub const RCC_CR_CSSON_Msk: u32 = 0x1 << RCC_CR_CSSON_Pos;
pub const RCC_CR_CSSON: u32 = RCC_CR_CSSON_Msk;
pub const RCC_CR_PLLON_Pos: u32 = 24;
pub const RCC_CR_PLLON_Msk: u32 = 0x1 << RCC_CR_PLLON_Pos;
pub const RCC_CR_PLLON: u32 = RCC_CR_PLLON_Msk;
pub const RCC_CR_PLLRDY_Pos: u32 = 25;
pub const RCC_CR_PLLRDY_Msk: u32 = 0x1 << RCC_CR_PLLRDY_Pos;
pub const RCC_CR_PLLRDY: u32 = RCC_CR_PLLRDY_Msk;
pub const RCC_CR_PLLI2SON_Pos: u32 = 26;
pub const RCC_CR_PLLI2SON_Msk: u32 = 0x1 << RCC_CR_PLLI2SON_Pos;
pub const RCC_CR_PLLI2SON: u32 = RCC_CR_PLLI2SON_Msk;
pub const RCC_CR_PLLI2SRDY_Pos: u32 = 27;
pub const RCC_CR_PLLI2SRDY_Msk: u32 = 0x1 << RCC_CR_PLLI2SRDY_Pos;
pub const RCC_CR_PLLI2SRDY: u32 = RCC_CR_PLLI2SRDY_Msk;
pub const RCC_CR_PLLSAION_Pos: u32 = 28;
pub const RCC_CR_PLLSAION_Msk: u32 = 0x1 << RCC_CR_PLLSAION_Pos;
pub const RCC_CR_PLLSAION: u32 = RCC_CR_PLLSAION_Msk;
pub const RCC_CR_PLLSAIRDY_Pos: u32 = 29;
pub const RCC_CR_PLLSAIRDY_Msk: u32 = 0x1 << RCC_CR_PLLSAIRDY_Pos;
pub const RCC_CR_PLLSAIRDY: u32 = RCC_CR_PLLSAIRDY_Msk;
pub const RCC_PLLCFGR_PLLM_Pos: u32 = 0;
pub const RCC_PLLCFGR_PLLM_Msk: u32 = 0x3F << RCC_PLLCFGR_PLLM_Pos;
pub const RCC_PLLCFGR_PLLM: u32 = RCC_PLLCFGR_PLLM_Msk;
pub const RCC_PLLCFGR_PLLM_0: u32 = 0x01 << RCC_PLLCFGR_PLLM_Pos;
pub const RCC_PLLCFGR_PLLM_1: u32 = 0x02 << RCC_PLLCFGR_PLLM_Pos;
pub const RCC_PLLCFGR_PLLM_2: u32 = 0x04 << RCC_PLLCFGR_PLLM_Pos;
pub const RCC_PLLCFGR_PLLM_3: u32 = 0x08 << RCC_PLLCFGR_PLLM_Pos;
pub const RCC_PLLCFGR_PLLM_4: u32 = 0x10 << RCC_PLLCFGR_PLLM_Pos;
pub const RCC_PLLCFGR_PLLM_5: u32 = 0x20 << RCC_PLLCFGR_PLLM_Pos;
pub const RCC_PLLCFGR_PLLN_Pos: u32 = 6;
pub const RCC_PLLCFGR_PLLN_Msk: u32 = 0x1FF << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN: u32 = RCC_PLLCFGR_PLLN_Msk;
pub const RCC_PLLCFGR_PLLN_0: u32 = 0x001 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_1: u32 = 0x002 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_2: u32 = 0x004 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_3: u32 = 0x008 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_4: u32 = 0x010 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_5: u32 = 0x020 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_6: u32 = 0x040 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_7: u32 = 0x080 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_8: u32 = 0x100 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLP_Pos: u32 = 16;
pub const RCC_PLLCFGR_PLLP_Msk: u32 = 0x3 << RCC_PLLCFGR_PLLP_Pos;
pub const RCC_PLLCFGR_PLLP: u32 = RCC_PLLCFGR_PLLP_Msk;
pub const RCC_PLLCFGR_PLLP_0: u32 = 0x1 << RCC_PLLCFGR_PLLP_Pos;
pub const RCC_PLLCFGR_PLLP_1: u32 = 0x2 << RCC_PLLCFGR_PLLP_Pos;
pub const RCC_PLLCFGR_PLLSRC_Pos: u32 = 22;
pub const RCC_PLLCFGR_PLLSRC_Msk: u32 = 0x1 << RCC_PLLCFGR_PLLSRC_Pos;
pub const RCC_PLLCFGR_PLLSRC: u32 = RCC_PLLCFGR_PLLSRC_Msk;
pub const RCC_PLLCFGR_PLLSRC_HSE_Pos: u32 = 22;
pub const RCC_PLLCFGR_PLLSRC_HSE_Msk: u32 = 0x1 << RCC_PLLCFGR_PLLSRC_HSE_Pos;
pub const RCC_PLLCFGR_PLLSRC_HSE: u32 = RCC_PLLCFGR_PLLSRC_HSE_Msk;
pub const RCC_PLLCFGR_PLLSRC_HSI: u32 = 0x00000000;
pub const RCC_PLLCFGR_PLLQ_Pos: u32 = 24;
pub const RCC_PLLCFGR_PLLQ_Msk: u32 = 0xF << RCC_PLLCFGR_PLLQ_Pos;
pub const RCC_PLLCFGR_PLLQ: u32 = RCC_PLLCFGR_PLLQ_Msk;
pub const RCC_PLLCFGR_PLLQ_0: u32 = 0x1 << RCC_PLLCFGR_PLLQ_Pos;
pub const RCC_PLLCFGR_PLLQ_1: u32 = 0x2 << RCC_PLLCFGR_PLLQ_Pos;
pub const RCC_PLLCFGR_PLLQ_2: u32 = 0x4 << RCC_PLLCFGR_PLLQ_Pos;
pub const RCC_PLLCFGR_PLLQ_3: u32 = 0x8 << RCC_PLLCFGR_PLLQ_Pos;
pub const RCC_CFGR_SW_Pos: u32 = 0;
pub const RCC_CFGR_SW_Msk: u32 = 0x3 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SW: u32 = RCC_CFGR_SW_Msk;
pub const RCC_CFGR_SW_0: u32 = 0x1 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SW_1: u32 = 0x2 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SW_HSI: u32 = 0x00000000;
pub const RCC_CFGR_SW_HSE: u32 = 0x00000001;
pub const RCC_CFGR_SW_PLL: u32 = 0x00000002;
pub const RCC_CFGR_SWS_Pos: u32 = 2;
pub const RCC_CFGR_SWS_Msk: u32 = 0x3 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_SWS: u32 = RCC_CFGR_SWS_Msk;
pub const RCC_CFGR_SWS_0: u32 = 0x1 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_SWS_1: u32 = 0x2 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_SWS_HSI: u32 = 0x00000000;
pub const RCC_CFGR_SWS_HSE: u32 = 0x00000004;
pub const RCC_CFGR_SWS_PLL: u32 = 0x00000008;
pub const RCC_CFGR_HPRE_Pos: u32 = 4;
pub const RCC_CFGR_HPRE_Msk: u32 = 0xF << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE: u32 = RCC_CFGR_HPRE_Msk;
pub const RCC_CFGR_HPRE_0: u32 = 0x1 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_1: u32 = 0x2 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_2: u32 = 0x4 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_3: u32 = 0x8 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_DIV1: u32 = 0x00000000;
pub const RCC_CFGR_HPRE_DIV2: u32 = 0x00000080;
pub const RCC_CFGR_HPRE_DIV4: u32 = 0x00000090;
pub const RCC_CFGR_HPRE_DIV8: u32 = 0x000000A0;
pub const RCC_CFGR_HPRE_DIV16: u32 = 0x000000B0;
pub const RCC_CFGR_HPRE_DIV64: u32 = 0x000000C0;
pub const RCC_CFGR_HPRE_DIV128: u32 = 0x000000D0;
pub const RCC_CFGR_HPRE_DIV256: u32 = 0x000000E0;
pub const RCC_CFGR_HPRE_DIV512: u32 = 0x000000F0;
pub const RCC_CFGR_PPRE1_Pos: u32 = 10;
pub const RCC_CFGR_PPRE1_Msk: u32 = 0x7 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1: u32 = RCC_CFGR_PPRE1_Msk;
pub const RCC_CFGR_PPRE1_0: u32 = 0x1 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1_1: u32 = 0x2 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1_2: u32 = 0x4 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1_DIV1: u32 = 0x00000000;
pub const RCC_CFGR_PPRE1_DIV2: u32 = 0x00001000;
pub const RCC_CFGR_PPRE1_DIV4: u32 = 0x00001400;
pub const RCC_CFGR_PPRE1_DIV8: u32 = 0x00001800;
pub const RCC_CFGR_PPRE1_DIV16: u32 = 0x00001C00;
pub const RCC_CFGR_PPRE2_Pos: u32 = 13;
pub const RCC_CFGR_PPRE2_Msk: u32 = 0x7 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2: u32 = RCC_CFGR_PPRE2_Msk;
pub const RCC_CFGR_PPRE2_0: u32 = 0x1 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2_1: u32 = 0x2 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2_2: u32 = 0x4 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2_DIV1: u32 = 0x00000000;
pub const RCC_CFGR_PPRE2_DIV2: u32 = 0x00008000;
pub const RCC_CFGR_PPRE2_DIV4: u32 = 0x0000A000;
pub const RCC_CFGR_PPRE2_DIV8: u32 = 0x0000C000;
pub const RCC_CFGR_PPRE2_DIV16: u32 = 0x0000E000;
pub const RCC_CFGR_RTCPRE_Pos: u32 = 16;
pub const RCC_CFGR_RTCPRE_Msk: u32 = 0x1F << RCC_CFGR_RTCPRE_Pos;
pub const RCC_CFGR_RTCPRE: u32 = RCC_CFGR_RTCPRE_Msk;
pub const RCC_CFGR_RTCPRE_0: u32 = 0x01 << RCC_CFGR_RTCPRE_Pos;
pub const RCC_CFGR_RTCPRE_1: u32 = 0x02 << RCC_CFGR_RTCPRE_Pos;
pub const RCC_CFGR_RTCPRE_2: u32 = 0x04 << RCC_CFGR_RTCPRE_Pos;
pub const RCC_CFGR_RTCPRE_3: u32 = 0x08 << RCC_CFGR_RTCPRE_Pos;
pub const RCC_CFGR_RTCPRE_4: u32 = 0x10 << RCC_CFGR_RTCPRE_Pos;
pub const RCC_CFGR_MCO1_Pos: u32 = 21;
pub const RCC_CFGR_MCO1_Msk: u32 = 0x3 << RCC_CFGR_MCO1_Pos;
pub const RCC_CFGR_MCO1: u32 = RCC_CFGR_MCO1_Msk;
pub const RCC_CFGR_MCO1_0: u32 = 0x1 << RCC_CFGR_MCO1_Pos;
pub const RCC_CFGR_MCO1_1: u32 = 0x2 << RCC_CFGR_MCO1_Pos;
pub const RCC_CFGR_I2SSRC_Pos: u32 = 23;
pub const RCC_CFGR_I2SSRC_Msk: u32 = 0x1 << RCC_CFGR_I2SSRC_Pos;
pub const RCC_CFGR_I2SSRC: u32 = RCC_CFGR_I2SSRC_Msk;
pub const RCC_CFGR_MCO1PRE_Pos: u32 = 24;
pub const RCC_CFGR_MCO1PRE_Msk: u32 = 0x7 << RCC_CFGR_MCO1PRE_Pos;
pub const RCC_CFGR_MCO1PRE: u32 = RCC_CFGR_MCO1PRE_Msk;
pub const RCC_CFGR_MCO1PRE_0: u32 = 0x1 << RCC_CFGR_MCO1PRE_Pos;
pub const RCC_CFGR_MCO1PRE_1: u32 = 0x2 << RCC_CFGR_MCO1PRE_Pos;
pub const RCC_CFGR_MCO1PRE_2: u32 = 0x4 << RCC_CFGR_MCO1PRE_Pos;
pub const RCC_CFGR_MCO2PRE_Pos: u32 = 27;
pub const RCC_CFGR_MCO2PRE_Msk: u32 = 0x7 << RCC_CFGR_MCO2PRE_Pos;
pub const RCC_CFGR_MCO2PRE: u32 = RCC_CFGR_MCO2PRE_Msk;
pub const RCC_CFGR_MCO2PRE_0: u32 = 0x1 << RCC_CFGR_MCO2PRE_Pos;
pub const RCC_CFGR_MCO2PRE_1: u32 = 0x2 << RCC_CFGR_MCO2PRE_Pos;
pub const RCC_CFGR_MCO2PRE_2: u32 = 0x4 << RCC_CFGR_MCO2PRE_Pos;
pub const RCC_CFGR_MCO2_Pos: u32 = 30;
pub const RCC_CFGR_MCO2_Msk: u32 = 0x3 << RCC_CFGR_MCO2_Pos;
pub const RCC_CFGR_MCO2: u32 = RCC_CFGR_MCO2_Msk;
pub const RCC_CFGR_MCO2_0: u32 = 0x1 << RCC_CFGR_MCO2_Pos;
pub const RCC_CFGR_MCO2_1: u32 = 0x2 << RCC_CFGR_MCO2_Pos;
pub const RCC_CIR_LSIRDYF_Pos: u32 = 0;
pub const RCC_CIR_LSIRDYF_Msk: u32 = 0x1 << RCC_CIR_LSIRDYF_Pos;
pub const RCC_CIR_LSIRDYF: u32 = RCC_CIR_LSIRDYF_Msk;
pub const RCC_CIR_LSERDYF_Pos: u32 = 1;
pub const RCC_CIR_LSERDYF_Msk: u32 = 0x1 << RCC_CIR_LSERDYF_Pos;
pub const RCC_CIR_LSERDYF: u32 = RCC_CIR_LSERDYF_Msk;
pub const RCC_CIR_HSIRDYF_Pos: u32 = 2;
pub const RCC_CIR_HSIRDYF_Msk: u32 = 0x1 << RCC_CIR_HSIRDYF_Pos;
pub const RCC_CIR_HSIRDYF: u32 = RCC_CIR_HSIRDYF_Msk;
pub const RCC_CIR_HSERDYF_Pos: u32 = 3;
pub const RCC_CIR_HSERDYF_Msk: u32 = 0x1 << RCC_CIR_HSERDYF_Pos;
pub const RCC_CIR_HSERDYF: u32 = RCC_CIR_HSERDYF_Msk;
pub const RCC_CIR_PLLRDYF_Pos: u32 = 4;
pub const RCC_CIR_PLLRDYF_Msk: u32 = 0x1 << RCC_CIR_PLLRDYF_Pos;
pub const RCC_CIR_PLLRDYF: u32 = RCC_CIR_PLLRDYF_Msk;
pub const RCC_CIR_PLLI2SRDYF_Pos: u32 = 5;
pub const RCC_CIR_PLLI2SRDYF_Msk: u32 = 0x1 << RCC_CIR_PLLI2SRDYF_Pos;
pub const RCC_CIR_PLLI2SRDYF: u32 = RCC_CIR_PLLI2SRDYF_Msk;
pub const RCC_CIR_PLLSAIRDYF_Pos: u32 = 6;
pub const RCC_CIR_PLLSAIRDYF_Msk: u32 = 0x1 << RCC_CIR_PLLSAIRDYF_Pos;
pub const RCC_CIR_PLLSAIRDYF: u32 = RCC_CIR_PLLSAIRDYF_Msk;
pub const RCC_CIR_CSSF_Pos: u32 = 7;
pub const RCC_CIR_CSSF_Msk: u32 = 0x1 << RCC_CIR_CSSF_Pos;
pub const RCC_CIR_CSSF: u32 = RCC_CIR_CSSF_Msk;
pub const RCC_CIR_LSIRDYIE_Pos: u32 = 8;
pub const RCC_CIR_LSIRDYIE_Msk: u32 = 0x1 << RCC_CIR_LSIRDYIE_Pos;
pub const RCC_CIR_LSIRDYIE: u32 = RCC_CIR_LSIRDYIE_Msk;
pub const RCC_CIR_LSERDYIE_Pos: u32 = 9;
pub const RCC_CIR_LSERDYIE_Msk: u32 = 0x1 << RCC_CIR_LSERDYIE_Pos;
pub const RCC_CIR_LSERDYIE: u32 = RCC_CIR_LSERDYIE_Msk;
pub const RCC_CIR_HSIRDYIE_Pos: u32 = 10;
pub const RCC_CIR_HSIRDYIE_Msk: u32 = 0x1 << RCC_CIR_HSIRDYIE_Pos;
pub const RCC_CIR_HSIRDYIE: u32 = RCC_CIR_HSIRDYIE_Msk;
pub const RCC_CIR_HSERDYIE_Pos: u32 = 11;
pub const RCC_CIR_HSERDYIE_Msk: u32 = 0x1 << RCC_CIR_HSERDYIE_Pos;
pub const RCC_CIR_HSERDYIE: u32 = RCC_CIR_HSERDYIE_Msk;
pub const RCC_CIR_PLLRDYIE_Pos: u32 = 12;
pub const RCC_CIR_PLLRDYIE_Msk: u32 = 0x1 << RCC_CIR_PLLRDYIE_Pos;
pub const RCC_CIR_PLLRDYIE: u32 = RCC_CIR_PLLRDYIE_Msk;
pub const RCC_CIR_PLLI2SRDYIE_Pos: u32 = 13;
pub const RCC_CIR_PLLI2SRDYIE_Msk: u32 = 0x1 << RCC_CIR_PLLI2SRDYIE_Pos;
pub const RCC_CIR_PLLI2SRDYIE: u32 = RCC_CIR_PLLI2SRDYIE_Msk;
pub const RCC_CIR_PLLSAIRDYIE_Pos: u32 = 14;
pub const RCC_CIR_PLLSAIRDYIE_Msk: u32 = 0x1 << RCC_CIR_PLLSAIRDYIE_Pos;
pub const RCC_CIR_PLLSAIRDYIE: u32 = RCC_CIR_PLLSAIRDYIE_Msk;
pub const RCC_CIR_LSIRDYC_Pos: u32 = 16;
pub const RCC_CIR_LSIRDYC_Msk: u32 = 0x1 << RCC_CIR_LSIRDYC_Pos;
pub const RCC_CIR_LSIRDYC: u32 = RCC_CIR_LSIRDYC_Msk;
pub const RCC_CIR_LSERDYC_Pos: u32 = 17;
pub const RCC_CIR_LSERDYC_Msk: u32 = 0x1 << RCC_CIR_LSERDYC_Pos;
pub const RCC_CIR_LSERDYC: u32 = RCC_CIR_LSERDYC_Msk;
pub const RCC_CIR_HSIRDYC_Pos: u32 = 18;
pub const RCC_CIR_HSIRDYC_Msk: u32 = 0x1 << RCC_CIR_HSIRDYC_Pos;
pub const RCC_CIR_HSIRDYC: u32 = RCC_CIR_HSIRDYC_Msk;
pub const RCC_CIR_HSERDYC_Pos: u32 = 19;
pub const RCC_CIR_HSERDYC_Msk: u32 = 0x1 << RCC_CIR_HSERDYC_Pos;
pub const RCC_CIR_HSERDYC: u32 = RCC_CIR_HSERDYC_Msk;
pub const RCC_CIR_PLLRDYC_Pos: u32 = 20;
pub const RCC_CIR_PLLRDYC_Msk: u32 = 0x1 << RCC_CIR_PLLRDYC_Pos;
pub const RCC_CIR_PLLRDYC: u32 = RCC_CIR_PLLRDYC_Msk;
pub const RCC_CIR_PLLI2SRDYC_Pos: u32 = 21;
pub const RCC_CIR_PLLI2SRDYC_Msk: u32 = 0x1 << RCC_CIR_PLLI2SRDYC_Pos;
pub const RCC_CIR_PLLI2SRDYC: u32 = RCC_CIR_PLLI2SRDYC_Msk;
pub const RCC_CIR_PLLSAIRDYC_Pos: u32 = 22;
pub const RCC_CIR_PLLSAIRDYC_Msk: u32 = 0x1 << RCC_CIR_PLLSAIRDYC_Pos;
pub const RCC_CIR_PLLSAIRDYC: u32 = RCC_CIR_PLLSAIRDYC_Msk;
pub const RCC_CIR_CSSC_Pos: u32 = 23;
pub const RCC_CIR_CSSC_Msk: u32 = 0x1 << RCC_CIR_CSSC_Pos;
pub const RCC_CIR_CSSC: u32 = RCC_CIR_CSSC_Msk;
pub const RCC_AHB1RSTR_GPIOARST_Pos: u32 = 0;
pub const RCC_AHB1RSTR_GPIOARST_Msk: u32 = 0x1 << RCC_AHB1RSTR_GPIOARST_Pos;
pub const RCC_AHB1RSTR_GPIOARST: u32 = RCC_AHB1RSTR_GPIOARST_Msk;
pub const RCC_AHB1RSTR_GPIOBRST_Pos: u32 = 1;
pub const RCC_AHB1RSTR_GPIOBRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_GPIOBRST_Pos;
pub const RCC_AHB1RSTR_GPIOBRST: u32 = RCC_AHB1RSTR_GPIOBRST_Msk;
pub const RCC_AHB1RSTR_GPIOCRST_Pos: u32 = 2;
pub const RCC_AHB1RSTR_GPIOCRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_GPIOCRST_Pos;
pub const RCC_AHB1RSTR_GPIOCRST: u32 = RCC_AHB1RSTR_GPIOCRST_Msk;
pub const RCC_AHB1RSTR_GPIODRST_Pos: u32 = 3;
pub const RCC_AHB1RSTR_GPIODRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_GPIODRST_Pos;
pub const RCC_AHB1RSTR_GPIODRST: u32 = RCC_AHB1RSTR_GPIODRST_Msk;
pub const RCC_AHB1RSTR_GPIOERST_Pos: u32 = 4;
pub const RCC_AHB1RSTR_GPIOERST_Msk: u32 = 0x1 << RCC_AHB1RSTR_GPIOERST_Pos;
pub const RCC_AHB1RSTR_GPIOERST: u32 = RCC_AHB1RSTR_GPIOERST_Msk;
pub const RCC_AHB1RSTR_GPIOFRST_Pos: u32 = 5;
pub const RCC_AHB1RSTR_GPIOFRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_GPIOFRST_Pos;
pub const RCC_AHB1RSTR_GPIOFRST: u32 = RCC_AHB1RSTR_GPIOFRST_Msk;
pub const RCC_AHB1RSTR_GPIOGRST_Pos: u32 = 6;
pub const RCC_AHB1RSTR_GPIOGRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_GPIOGRST_Pos;
pub const RCC_AHB1RSTR_GPIOGRST: u32 = RCC_AHB1RSTR_GPIOGRST_Msk;
pub const RCC_AHB1RSTR_GPIOHRST_Pos: u32 = 7;
pub const RCC_AHB1RSTR_GPIOHRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_GPIOHRST_Pos;
pub const RCC_AHB1RSTR_GPIOHRST: u32 = RCC_AHB1RSTR_GPIOHRST_Msk;
pub const RCC_AHB1RSTR_GPIOIRST_Pos: u32 = 8;
pub const RCC_AHB1RSTR_GPIOIRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_GPIOIRST_Pos;
pub const RCC_AHB1RSTR_GPIOIRST: u32 = RCC_AHB1RSTR_GPIOIRST_Msk;
pub const RCC_AHB1RSTR_GPIOJRST_Pos: u32 = 9;
pub const RCC_AHB1RSTR_GPIOJRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_GPIOJRST_Pos;
pub const RCC_AHB1RSTR_GPIOJRST: u32 = RCC_AHB1RSTR_GPIOJRST_Msk;
pub const RCC_AHB1RSTR_GPIOKRST_Pos: u32 = 10;
pub const RCC_AHB1RSTR_GPIOKRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_GPIOKRST_Pos;
pub const RCC_AHB1RSTR_GPIOKRST: u32 = RCC_AHB1RSTR_GPIOKRST_Msk;
pub const RCC_AHB1RSTR_CRCRST_Pos: u32 = 12;
pub const RCC_AHB1RSTR_CRCRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_CRCRST_Pos;
pub const RCC_AHB1RSTR_CRCRST: u32 = RCC_AHB1RSTR_CRCRST_Msk;
pub const RCC_AHB1RSTR_DMA1RST_Pos: u32 = 21;
pub const RCC_AHB1RSTR_DMA1RST_Msk: u32 = 0x1 << RCC_AHB1RSTR_DMA1RST_Pos;
pub const RCC_AHB1RSTR_DMA1RST: u32 = RCC_AHB1RSTR_DMA1RST_Msk;
pub const RCC_AHB1RSTR_DMA2RST_Pos: u32 = 22;
pub const RCC_AHB1RSTR_DMA2RST_Msk: u32 = 0x1 << RCC_AHB1RSTR_DMA2RST_Pos;
pub const RCC_AHB1RSTR_DMA2RST: u32 = RCC_AHB1RSTR_DMA2RST_Msk;
pub const RCC_AHB1RSTR_DMA2DRST_Pos: u32 = 23;
pub const RCC_AHB1RSTR_DMA2DRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_DMA2DRST_Pos;
pub const RCC_AHB1RSTR_DMA2DRST: u32 = RCC_AHB1RSTR_DMA2DRST_Msk;
pub const RCC_AHB1RSTR_ETHMACRST_Pos: u32 = 25;
pub const RCC_AHB1RSTR_ETHMACRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_ETHMACRST_Pos;
pub const RCC_AHB1RSTR_ETHMACRST: u32 = RCC_AHB1RSTR_ETHMACRST_Msk;
pub const RCC_AHB1RSTR_OTGHRST_Pos: u32 = 29;
pub const RCC_AHB1RSTR_OTGHRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_OTGHRST_Pos;
pub const RCC_AHB1RSTR_OTGHRST: u32 = RCC_AHB1RSTR_OTGHRST_Msk;
pub const RCC_AHB2RSTR_DCMIRST_Pos: u32 = 0;
pub const RCC_AHB2RSTR_DCMIRST_Msk: u32 = 0x1 << RCC_AHB2RSTR_DCMIRST_Pos;
pub const RCC_AHB2RSTR_DCMIRST: u32 = RCC_AHB2RSTR_DCMIRST_Msk;
pub const RCC_AHB2RSTR_CRYPRST_Pos: u32 = 4;
pub const RCC_AHB2RSTR_CRYPRST_Msk: u32 = 0x1 << RCC_AHB2RSTR_CRYPRST_Pos;
pub const RCC_AHB2RSTR_CRYPRST: u32 = RCC_AHB2RSTR_CRYPRST_Msk;
pub const RCC_AHB2RSTR_HASHRST_Pos: u32 = 5;
pub const RCC_AHB2RSTR_HASHRST_Msk: u32 = 0x1 << RCC_AHB2RSTR_HASHRST_Pos;
pub const RCC_AHB2RSTR_HASHRST: u32 = RCC_AHB2RSTR_HASHRST_Msk;
pub const RCC_AHB2RSTR_RNGRST_Pos: u32 = 6;
pub const RCC_AHB2RSTR_RNGRST_Msk: u32 = 0x1 << RCC_AHB2RSTR_RNGRST_Pos;
pub const RCC_AHB2RSTR_RNGRST: u32 = RCC_AHB2RSTR_RNGRST_Msk;
pub const RCC_AHB2RSTR_OTGFSRST_Pos: u32 = 7;
pub const RCC_AHB2RSTR_OTGFSRST_Msk: u32 = 0x1 << RCC_AHB2RSTR_OTGFSRST_Pos;
pub const RCC_AHB2RSTR_OTGFSRST: u32 = RCC_AHB2RSTR_OTGFSRST_Msk;
pub const RCC_AHB3RSTR_FMCRST_Pos: u32 = 0;
pub const RCC_AHB3RSTR_FMCRST_Msk: u32 = 0x1 << RCC_AHB3RSTR_FMCRST_Pos;
pub const RCC_AHB3RSTR_FMCRST: u32 = RCC_AHB3RSTR_FMCRST_Msk;
pub const RCC_AHB3RSTR_QSPIRST_Pos: u32 = 1;
pub const RCC_AHB3RSTR_QSPIRST_Msk: u32 = 0x1 << RCC_AHB3RSTR_QSPIRST_Pos;
pub const RCC_AHB3RSTR_QSPIRST: u32 = RCC_AHB3RSTR_QSPIRST_Msk;
pub const RCC_APB1RSTR_TIM2RST_Pos: u32 = 0;
pub const RCC_APB1RSTR_TIM2RST_Msk: u32 = 0x1 << RCC_APB1RSTR_TIM2RST_Pos;
pub const RCC_APB1RSTR_TIM2RST: u32 = RCC_APB1RSTR_TIM2RST_Msk;
pub const RCC_APB1RSTR_TIM3RST_Pos: u32 = 1;
pub const RCC_APB1RSTR_TIM3RST_Msk: u32 = 0x1 << RCC_APB1RSTR_TIM3RST_Pos;
pub const RCC_APB1RSTR_TIM3RST: u32 = RCC_APB1RSTR_TIM3RST_Msk;
pub const RCC_APB1RSTR_TIM4RST_Pos: u32 = 2;
pub const RCC_APB1RSTR_TIM4RST_Msk: u32 = 0x1 << RCC_APB1RSTR_TIM4RST_Pos;
pub const RCC_APB1RSTR_TIM4RST: u32 = RCC_APB1RSTR_TIM4RST_Msk;
pub const RCC_APB1RSTR_TIM5RST_Pos: u32 = 3;
pub const RCC_APB1RSTR_TIM5RST_Msk: u32 = 0x1 << RCC_APB1RSTR_TIM5RST_Pos;
pub const RCC_APB1RSTR_TIM5RST: u32 = RCC_APB1RSTR_TIM5RST_Msk;
pub const RCC_APB1RSTR_TIM6RST_Pos: u32 = 4;
pub const RCC_APB1RSTR_TIM6RST_Msk: u32 = 0x1 << RCC_APB1RSTR_TIM6RST_Pos;
pub const RCC_APB1RSTR_TIM6RST: u32 = RCC_APB1RSTR_TIM6RST_Msk;
pub const RCC_APB1RSTR_TIM7RST_Pos: u32 = 5;
pub const RCC_APB1RSTR_TIM7RST_Msk: u32 = 0x1 << RCC_APB1RSTR_TIM7RST_Pos;
pub const RCC_APB1RSTR_TIM7RST: u32 = RCC_APB1RSTR_TIM7RST_Msk;
pub const RCC_APB1RSTR_TIM12RST_Pos: u32 = 6;
pub const RCC_APB1RSTR_TIM12RST_Msk: u32 = 0x1 << RCC_APB1RSTR_TIM12RST_Pos;
pub const RCC_APB1RSTR_TIM12RST: u32 = RCC_APB1RSTR_TIM12RST_Msk;
pub const RCC_APB1RSTR_TIM13RST_Pos: u32 = 7;
pub const RCC_APB1RSTR_TIM13RST_Msk: u32 = 0x1 << RCC_APB1RSTR_TIM13RST_Pos;
pub const RCC_APB1RSTR_TIM13RST: u32 = RCC_APB1RSTR_TIM13RST_Msk;
pub const RCC_APB1RSTR_TIM14RST_Pos: u32 = 8;
pub const RCC_APB1RSTR_TIM14RST_Msk: u32 = 0x1 << RCC_APB1RSTR_TIM14RST_Pos;
pub const RCC_APB1RSTR_TIM14RST: u32 = RCC_APB1RSTR_TIM14RST_Msk;
pub const RCC_APB1RSTR_LPTIM1RST_Pos: u32 = 9;
pub const RCC_APB1RSTR_LPTIM1RST_Msk: u32 = 0x1 << RCC_APB1RSTR_LPTIM1RST_Pos;
pub const RCC_APB1RSTR_LPTIM1RST: u32 = RCC_APB1RSTR_LPTIM1RST_Msk;
pub const RCC_APB1RSTR_WWDGRST_Pos: u32 = 11;
pub const RCC_APB1RSTR_WWDGRST_Msk: u32 = 0x1 << RCC_APB1RSTR_WWDGRST_Pos;
pub const RCC_APB1RSTR_WWDGRST: u32 = RCC_APB1RSTR_WWDGRST_Msk;
pub const RCC_APB1RSTR_SPI2RST_Pos: u32 = 14;
pub const RCC_APB1RSTR_SPI2RST_Msk: u32 = 0x1 << RCC_APB1RSTR_SPI2RST_Pos;
pub const RCC_APB1RSTR_SPI2RST: u32 = RCC_APB1RSTR_SPI2RST_Msk;
pub const RCC_APB1RSTR_SPI3RST_Pos: u32 = 15;
pub const RCC_APB1RSTR_SPI3RST_Msk: u32 = 0x1 << RCC_APB1RSTR_SPI3RST_Pos;
pub const RCC_APB1RSTR_SPI3RST: u32 = RCC_APB1RSTR_SPI3RST_Msk;
pub const RCC_APB1RSTR_SPDIFRXRST_Pos: u32 = 16;
pub const RCC_APB1RSTR_SPDIFRXRST_Msk: u32 = 0x1 << RCC_APB1RSTR_SPDIFRXRST_Pos;
pub const RCC_APB1RSTR_SPDIFRXRST: u32 = RCC_APB1RSTR_SPDIFRXRST_Msk;
pub const RCC_APB1RSTR_USART2RST_Pos: u32 = 17;
pub const RCC_APB1RSTR_USART2RST_Msk: u32 = 0x1 << RCC_APB1RSTR_USART2RST_Pos;
pub const RCC_APB1RSTR_USART2RST: u32 = RCC_APB1RSTR_USART2RST_Msk;
pub const RCC_APB1RSTR_USART3RST_Pos: u32 = 18;
pub const RCC_APB1RSTR_USART3RST_Msk: u32 = 0x1 << RCC_APB1RSTR_USART3RST_Pos;
pub const RCC_APB1RSTR_USART3RST: u32 = RCC_APB1RSTR_USART3RST_Msk;
pub const RCC_APB1RSTR_UART4RST_Pos: u32 = 19;
pub const RCC_APB1RSTR_UART4RST_Msk: u32 = 0x1 << RCC_APB1RSTR_UART4RST_Pos;
pub const RCC_APB1RSTR_UART4RST: u32 = RCC_APB1RSTR_UART4RST_Msk;
pub const RCC_APB1RSTR_UART5RST_Pos: u32 = 20;
pub const RCC_APB1RSTR_UART5RST_Msk: u32 = 0x1 << RCC_APB1RSTR_UART5RST_Pos;
pub const RCC_APB1RSTR_UART5RST: u32 = RCC_APB1RSTR_UART5RST_Msk;
pub const RCC_APB1RSTR_I2C1RST_Pos: u32 = 21;
pub const RCC_APB1RSTR_I2C1RST_Msk: u32 = 0x1 << RCC_APB1RSTR_I2C1RST_Pos;
pub const RCC_APB1RSTR_I2C1RST: u32 = RCC_APB1RSTR_I2C1RST_Msk;
pub const RCC_APB1RSTR_I2C2RST_Pos: u32 = 22;
pub const RCC_APB1RSTR_I2C2RST_Msk: u32 = 0x1 << RCC_APB1RSTR_I2C2RST_Pos;
pub const RCC_APB1RSTR_I2C2RST: u32 = RCC_APB1RSTR_I2C2RST_Msk;
pub const RCC_APB1RSTR_I2C3RST_Pos: u32 = 23;
pub const RCC_APB1RSTR_I2C3RST_Msk: u32 = 0x1 << RCC_APB1RSTR_I2C3RST_Pos;
pub const RCC_APB1RSTR_I2C3RST: u32 = RCC_APB1RSTR_I2C3RST_Msk;
pub const RCC_APB1RSTR_I2C4RST_Pos: u32 = 24;
pub const RCC_APB1RSTR_I2C4RST_Msk: u32 = 0x1 << RCC_APB1RSTR_I2C4RST_Pos;
pub const RCC_APB1RSTR_I2C4RST: u32 = RCC_APB1RSTR_I2C4RST_Msk;
pub const RCC_APB1RSTR_CAN1RST_Pos: u32 = 25;
pub const RCC_APB1RSTR_CAN1RST_Msk: u32 = 0x1 << RCC_APB1RSTR_CAN1RST_Pos;
pub const RCC_APB1RSTR_CAN1RST: u32 = RCC_APB1RSTR_CAN1RST_Msk;
pub const RCC_APB1RSTR_CAN2RST_Pos: u32 = 26;
pub const RCC_APB1RSTR_CAN2RST_Msk: u32 = 0x1 << RCC_APB1RSTR_CAN2RST_Pos;
pub const RCC_APB1RSTR_CAN2RST: u32 = RCC_APB1RSTR_CAN2RST_Msk;
pub const RCC_APB1RSTR_CECRST_Pos: u32 = 27;
pub const RCC_APB1RSTR_CECRST_Msk: u32 = 0x1 << RCC_APB1RSTR_CECRST_Pos;
pub const RCC_APB1RSTR_CECRST: u32 = RCC_APB1RSTR_CECRST_Msk;
pub const RCC_APB1RSTR_PWRRST_Pos: u32 = 28;
pub const RCC_APB1RSTR_PWRRST_Msk: u32 = 0x1 << RCC_APB1RSTR_PWRRST_Pos;
pub const RCC_APB1RSTR_PWRRST: u32 = RCC_APB1RSTR_PWRRST_Msk;
pub const RCC_APB1RSTR_DACRST_Pos: u32 = 29;
pub const RCC_APB1RSTR_DACRST_Msk: u32 = 0x1 << RCC_APB1RSTR_DACRST_Pos;
pub const RCC_APB1RSTR_DACRST: u32 = RCC_APB1RSTR_DACRST_Msk;
pub const RCC_APB1RSTR_UART7RST_Pos: u32 = 30;
pub const RCC_APB1RSTR_UART7RST_Msk: u32 = 0x1 << RCC_APB1RSTR_UART7RST_Pos;
pub const RCC_APB1RSTR_UART7RST: u32 = RCC_APB1RSTR_UART7RST_Msk;
pub const RCC_APB1RSTR_UART8RST_Pos: u32 = 31;
pub const RCC_APB1RSTR_UART8RST_Msk: u32 = 0x1 << RCC_APB1RSTR_UART8RST_Pos;
pub const RCC_APB1RSTR_UART8RST: u32 = RCC_APB1RSTR_UART8RST_Msk;
pub const RCC_APB2RSTR_TIM1RST_Pos: u32 = 0;
pub const RCC_APB2RSTR_TIM1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM1RST_Pos;
pub const RCC_APB2RSTR_TIM1RST: u32 = RCC_APB2RSTR_TIM1RST_Msk;
pub const RCC_APB2RSTR_TIM8RST_Pos: u32 = 1;
pub const RCC_APB2RSTR_TIM8RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM8RST_Pos;
pub const RCC_APB2RSTR_TIM8RST: u32 = RCC_APB2RSTR_TIM8RST_Msk;
pub const RCC_APB2RSTR_USART1RST_Pos: u32 = 4;
pub const RCC_APB2RSTR_USART1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_USART1RST_Pos;
pub const RCC_APB2RSTR_USART1RST: u32 = RCC_APB2RSTR_USART1RST_Msk;
pub const RCC_APB2RSTR_USART6RST_Pos: u32 = 5;
pub const RCC_APB2RSTR_USART6RST_Msk: u32 = 0x1 << RCC_APB2RSTR_USART6RST_Pos;
pub const RCC_APB2RSTR_USART6RST: u32 = RCC_APB2RSTR_USART6RST_Msk;
pub const RCC_APB2RSTR_ADCRST_Pos: u32 = 8;
pub const RCC_APB2RSTR_ADCRST_Msk: u32 = 0x1 << RCC_APB2RSTR_ADCRST_Pos;
pub const RCC_APB2RSTR_ADCRST: u32 = RCC_APB2RSTR_ADCRST_Msk;
pub const RCC_APB2RSTR_SDMMC1RST_Pos: u32 = 11;
pub const RCC_APB2RSTR_SDMMC1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_SDMMC1RST_Pos;
pub const RCC_APB2RSTR_SDMMC1RST: u32 = RCC_APB2RSTR_SDMMC1RST_Msk;
pub const RCC_APB2RSTR_SPI1RST_Pos: u32 = 12;
pub const RCC_APB2RSTR_SPI1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_SPI1RST_Pos;
pub const RCC_APB2RSTR_SPI1RST: u32 = RCC_APB2RSTR_SPI1RST_Msk;
pub const RCC_APB2RSTR_SPI4RST_Pos: u32 = 13;
pub const RCC_APB2RSTR_SPI4RST_Msk: u32 = 0x1 << RCC_APB2RSTR_SPI4RST_Pos;
pub const RCC_APB2RSTR_SPI4RST: u32 = RCC_APB2RSTR_SPI4RST_Msk;
pub const RCC_APB2RSTR_SYSCFGRST_Pos: u32 = 14;
pub const RCC_APB2RSTR_SYSCFGRST_Msk: u32 = 0x1 << RCC_APB2RSTR_SYSCFGRST_Pos;
pub const RCC_APB2RSTR_SYSCFGRST: u32 = RCC_APB2RSTR_SYSCFGRST_Msk;
pub const RCC_APB2RSTR_TIM9RST_Pos: u32 = 16;
pub const RCC_APB2RSTR_TIM9RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM9RST_Pos;
pub const RCC_APB2RSTR_TIM9RST: u32 = RCC_APB2RSTR_TIM9RST_Msk;
pub const RCC_APB2RSTR_TIM10RST_Pos: u32 = 17;
pub const RCC_APB2RSTR_TIM10RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM10RST_Pos;
pub const RCC_APB2RSTR_TIM10RST: u32 = RCC_APB2RSTR_TIM10RST_Msk;
pub const RCC_APB2RSTR_TIM11RST_Pos: u32 = 18;
pub const RCC_APB2RSTR_TIM11RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM11RST_Pos;
pub const RCC_APB2RSTR_TIM11RST: u32 = RCC_APB2RSTR_TIM11RST_Msk;
pub const RCC_APB2RSTR_SPI5RST_Pos: u32 = 20;
pub const RCC_APB2RSTR_SPI5RST_Msk: u32 = 0x1 << RCC_APB2RSTR_SPI5RST_Pos;
pub const RCC_APB2RSTR_SPI5RST: u32 = RCC_APB2RSTR_SPI5RST_Msk;
pub const RCC_APB2RSTR_SPI6RST_Pos: u32 = 21;
pub const RCC_APB2RSTR_SPI6RST_Msk: u32 = 0x1 << RCC_APB2RSTR_SPI6RST_Pos;
pub const RCC_APB2RSTR_SPI6RST: u32 = RCC_APB2RSTR_SPI6RST_Msk;
pub const RCC_APB2RSTR_SAI1RST_Pos: u32 = 22;
pub const RCC_APB2RSTR_SAI1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_SAI1RST_Pos;
pub const RCC_APB2RSTR_SAI1RST: u32 = RCC_APB2RSTR_SAI1RST_Msk;
pub const RCC_APB2RSTR_SAI2RST_Pos: u32 = 23;
pub const RCC_APB2RSTR_SAI2RST_Msk: u32 = 0x1 << RCC_APB2RSTR_SAI2RST_Pos;
pub const RCC_APB2RSTR_SAI2RST: u32 = RCC_APB2RSTR_SAI2RST_Msk;
pub const RCC_APB2RSTR_LTDCRST_Pos: u32 = 26;
pub const RCC_APB2RSTR_LTDCRST_Msk: u32 = 0x1 << RCC_APB2RSTR_LTDCRST_Pos;
pub const RCC_APB2RSTR_LTDCRST: u32 = RCC_APB2RSTR_LTDCRST_Msk;
pub const RCC_AHB1ENR_GPIOAEN_Pos: u32 = 0;
pub const RCC_AHB1ENR_GPIOAEN_Msk: u32 = 0x1 << RCC_AHB1ENR_GPIOAEN_Pos;
pub const RCC_AHB1ENR_GPIOAEN: u32 = RCC_AHB1ENR_GPIOAEN_Msk;
pub const RCC_AHB1ENR_GPIOBEN_Pos: u32 = 1;
pub const RCC_AHB1ENR_GPIOBEN_Msk: u32 = 0x1 << RCC_AHB1ENR_GPIOBEN_Pos;
pub const RCC_AHB1ENR_GPIOBEN: u32 = RCC_AHB1ENR_GPIOBEN_Msk;
pub const RCC_AHB1ENR_GPIOCEN_Pos: u32 = 2;
pub const RCC_AHB1ENR_GPIOCEN_Msk: u32 = 0x1 << RCC_AHB1ENR_GPIOCEN_Pos;
pub const RCC_AHB1ENR_GPIOCEN: u32 = RCC_AHB1ENR_GPIOCEN_Msk;
pub const RCC_AHB1ENR_GPIODEN_Pos: u32 = 3;
pub const RCC_AHB1ENR_GPIODEN_Msk: u32 = 0x1 << RCC_AHB1ENR_GPIODEN_Pos;
pub const RCC_AHB1ENR_GPIODEN: u32 = RCC_AHB1ENR_GPIODEN_Msk;
pub const RCC_AHB1ENR_GPIOEEN_Pos: u32 = 4;
pub const RCC_AHB1ENR_GPIOEEN_Msk: u32 = 0x1 << RCC_AHB1ENR_GPIOEEN_Pos;
pub const RCC_AHB1ENR_GPIOEEN: u32 = RCC_AHB1ENR_GPIOEEN_Msk;
pub const RCC_AHB1ENR_GPIOFEN_Pos: u32 = 5;
pub const RCC_AHB1ENR_GPIOFEN_Msk: u32 = 0x1 << RCC_AHB1ENR_GPIOFEN_Pos;
pub const RCC_AHB1ENR_GPIOFEN: u32 = RCC_AHB1ENR_GPIOFEN_Msk;
pub const RCC_AHB1ENR_GPIOGEN_Pos: u32 = 6;
pub const RCC_AHB1ENR_GPIOGEN_Msk: u32 = 0x1 << RCC_AHB1ENR_GPIOGEN_Pos;
pub const RCC_AHB1ENR_GPIOGEN: u32 = RCC_AHB1ENR_GPIOGEN_Msk;
pub const RCC_AHB1ENR_GPIOHEN_Pos: u32 = 7;
pub const RCC_AHB1ENR_GPIOHEN_Msk: u32 = 0x1 << RCC_AHB1ENR_GPIOHEN_Pos;
pub const RCC_AHB1ENR_GPIOHEN: u32 = RCC_AHB1ENR_GPIOHEN_Msk;
pub const RCC_AHB1ENR_GPIOIEN_Pos: u32 = 8;
pub const RCC_AHB1ENR_GPIOIEN_Msk: u32 = 0x1 << RCC_AHB1ENR_GPIOIEN_Pos;
pub const RCC_AHB1ENR_GPIOIEN: u32 = RCC_AHB1ENR_GPIOIEN_Msk;
pub const RCC_AHB1ENR_GPIOJEN_Pos: u32 = 9;
pub const RCC_AHB1ENR_GPIOJEN_Msk: u32 = 0x1 << RCC_AHB1ENR_GPIOJEN_Pos;
pub const RCC_AHB1ENR_GPIOJEN: u32 = RCC_AHB1ENR_GPIOJEN_Msk;
pub const RCC_AHB1ENR_GPIOKEN_Pos: u32 = 10;
pub const RCC_AHB1ENR_GPIOKEN_Msk: u32 = 0x1 << RCC_AHB1ENR_GPIOKEN_Pos;
pub const RCC_AHB1ENR_GPIOKEN: u32 = RCC_AHB1ENR_GPIOKEN_Msk;
pub const RCC_AHB1ENR_CRCEN_Pos: u32 = 12;
pub const RCC_AHB1ENR_CRCEN_Msk: u32 = 0x1 << RCC_AHB1ENR_CRCEN_Pos;
pub const RCC_AHB1ENR_CRCEN: u32 = RCC_AHB1ENR_CRCEN_Msk;
pub const RCC_AHB1ENR_BKPSRAMEN_Pos: u32 = 18;
pub const RCC_AHB1ENR_BKPSRAMEN_Msk: u32 = 0x1 << RCC_AHB1ENR_BKPSRAMEN_Pos;
pub const RCC_AHB1ENR_BKPSRAMEN: u32 = RCC_AHB1ENR_BKPSRAMEN_Msk;
pub const RCC_AHB1ENR_DTCMRAMEN_Pos: u32 = 20;
pub const RCC_AHB1ENR_DTCMRAMEN_Msk: u32 = 0x1 << RCC_AHB1ENR_DTCMRAMEN_Pos;
pub const RCC_AHB1ENR_DTCMRAMEN: u32 = RCC_AHB1ENR_DTCMRAMEN_Msk;
pub const RCC_AHB1ENR_DMA1EN_Pos: u32 = 21;
pub const RCC_AHB1ENR_DMA1EN_Msk: u32 = 0x1 << RCC_AHB1ENR_DMA1EN_Pos;
pub const RCC_AHB1ENR_DMA1EN: u32 = RCC_AHB1ENR_DMA1EN_Msk;
pub const RCC_AHB1ENR_DMA2EN_Pos: u32 = 22;
pub const RCC_AHB1ENR_DMA2EN_Msk: u32 = 0x1 << RCC_AHB1ENR_DMA2EN_Pos;
pub const RCC_AHB1ENR_DMA2EN: u32 = RCC_AHB1ENR_DMA2EN_Msk;
pub const RCC_AHB1ENR_DMA2DEN_Pos: u32 = 23;
pub const RCC_AHB1ENR_DMA2DEN_Msk: u32 = 0x1 << RCC_AHB1ENR_DMA2DEN_Pos;
pub const RCC_AHB1ENR_DMA2DEN: u32 = RCC_AHB1ENR_DMA2DEN_Msk;
pub const RCC_AHB1ENR_ETHMACEN_Pos: u32 = 25;
pub const RCC_AHB1ENR_ETHMACEN_Msk: u32 = 0x1 << RCC_AHB1ENR_ETHMACEN_Pos;
pub const RCC_AHB1ENR_ETHMACEN: u32 = RCC_AHB1ENR_ETHMACEN_Msk;
pub const RCC_AHB1ENR_ETHMACTXEN_Pos: u32 = 26;
pub const RCC_AHB1ENR_ETHMACTXEN_Msk: u32 = 0x1 << RCC_AHB1ENR_ETHMACTXEN_Pos;
pub const RCC_AHB1ENR_ETHMACTXEN: u32 = RCC_AHB1ENR_ETHMACTXEN_Msk;
pub const RCC_AHB1ENR_ETHMACRXEN_Pos: u32 = 27;
pub const RCC_AHB1ENR_ETHMACRXEN_Msk: u32 = 0x1 << RCC_AHB1ENR_ETHMACRXEN_Pos;
pub const RCC_AHB1ENR_ETHMACRXEN: u32 = RCC_AHB1ENR_ETHMACRXEN_Msk;
pub const RCC_AHB1ENR_ETHMACPTPEN_Pos: u32 = 28;
pub const RCC_AHB1ENR_ETHMACPTPEN_Msk: u32 = 0x1 << RCC_AHB1ENR_ETHMACPTPEN_Pos;
pub const RCC_AHB1ENR_ETHMACPTPEN: u32 = RCC_AHB1ENR_ETHMACPTPEN_Msk;
pub const RCC_AHB1ENR_OTGHSEN_Pos: u32 = 29;
pub const RCC_AHB1ENR_OTGHSEN_Msk: u32 = 0x1 << RCC_AHB1ENR_OTGHSEN_Pos;
pub const RCC_AHB1ENR_OTGHSEN: u32 = RCC_AHB1ENR_OTGHSEN_Msk;
pub const RCC_AHB1ENR_OTGHSULPIEN_Pos: u32 = 30;
pub const RCC_AHB1ENR_OTGHSULPIEN_Msk: u32 = 0x1 << RCC_AHB1ENR_OTGHSULPIEN_Pos;
pub const RCC_AHB1ENR_OTGHSULPIEN: u32 = RCC_AHB1ENR_OTGHSULPIEN_Msk;
pub const RCC_AHB2ENR_DCMIEN_Pos: u32 = 0;
pub const RCC_AHB2ENR_DCMIEN_Msk: u32 = 0x1 << RCC_AHB2ENR_DCMIEN_Pos;
pub const RCC_AHB2ENR_DCMIEN: u32 = RCC_AHB2ENR_DCMIEN_Msk;
pub const RCC_AHB2ENR_CRYPEN_Pos: u32 = 4;
pub const RCC_AHB2ENR_CRYPEN_Msk: u32 = 0x1 << RCC_AHB2ENR_CRYPEN_Pos;
pub const RCC_AHB2ENR_CRYPEN: u32 = RCC_AHB2ENR_CRYPEN_Msk;
pub const RCC_AHB2ENR_HASHEN_Pos: u32 = 5;
pub const RCC_AHB2ENR_HASHEN_Msk: u32 = 0x1 << RCC_AHB2ENR_HASHEN_Pos;
pub const RCC_AHB2ENR_HASHEN: u32 = RCC_AHB2ENR_HASHEN_Msk;
pub const RCC_AHB2ENR_RNGEN_Pos: u32 = 6;
pub const RCC_AHB2ENR_RNGEN_Msk: u32 = 0x1 << RCC_AHB2ENR_RNGEN_Pos;
pub const RCC_AHB2ENR_RNGEN: u32 = RCC_AHB2ENR_RNGEN_Msk;
pub const RCC_AHB2ENR_OTGFSEN_Pos: u32 = 7;
pub const RCC_AHB2ENR_OTGFSEN_Msk: u32 = 0x1 << RCC_AHB2ENR_OTGFSEN_Pos;
pub const RCC_AHB2ENR_OTGFSEN: u32 = RCC_AHB2ENR_OTGFSEN_Msk;
pub const RCC_AHB3ENR_FMCEN_Pos: u32 = 0;
pub const RCC_AHB3ENR_FMCEN_Msk: u32 = 0x1 << RCC_AHB3ENR_FMCEN_Pos;
pub const RCC_AHB3ENR_FMCEN: u32 = RCC_AHB3ENR_FMCEN_Msk;
pub const RCC_AHB3ENR_QSPIEN_Pos: u32 = 1;
pub const RCC_AHB3ENR_QSPIEN_Msk: u32 = 0x1 << RCC_AHB3ENR_QSPIEN_Pos;
pub const RCC_AHB3ENR_QSPIEN: u32 = RCC_AHB3ENR_QSPIEN_Msk;
pub const RCC_APB1ENR_TIM2EN_Pos: u32 = 0;
pub const RCC_APB1ENR_TIM2EN_Msk: u32 = 0x1 << RCC_APB1ENR_TIM2EN_Pos;
pub const RCC_APB1ENR_TIM2EN: u32 = RCC_APB1ENR_TIM2EN_Msk;
pub const RCC_APB1ENR_TIM3EN_Pos: u32 = 1;
pub const RCC_APB1ENR_TIM3EN_Msk: u32 = 0x1 << RCC_APB1ENR_TIM3EN_Pos;
pub const RCC_APB1ENR_TIM3EN: u32 = RCC_APB1ENR_TIM3EN_Msk;
pub const RCC_APB1ENR_TIM4EN_Pos: u32 = 2;
pub const RCC_APB1ENR_TIM4EN_Msk: u32 = 0x1 << RCC_APB1ENR_TIM4EN_Pos;
pub const RCC_APB1ENR_TIM4EN: u32 = RCC_APB1ENR_TIM4EN_Msk;
pub const RCC_APB1ENR_TIM5EN_Pos: u32 = 3;
pub const RCC_APB1ENR_TIM5EN_Msk: u32 = 0x1 << RCC_APB1ENR_TIM5EN_Pos;
pub const RCC_APB1ENR_TIM5EN: u32 = RCC_APB1ENR_TIM5EN_Msk;
pub const RCC_APB1ENR_TIM6EN_Pos: u32 = 4;
pub const RCC_APB1ENR_TIM6EN_Msk: u32 = 0x1 << RCC_APB1ENR_TIM6EN_Pos;
pub const RCC_APB1ENR_TIM6EN: u32 = RCC_APB1ENR_TIM6EN_Msk;
pub const RCC_APB1ENR_TIM7EN_Pos: u32 = 5;
pub const RCC_APB1ENR_TIM7EN_Msk: u32 = 0x1 << RCC_APB1ENR_TIM7EN_Pos;
pub const RCC_APB1ENR_TIM7EN: u32 = RCC_APB1ENR_TIM7EN_Msk;
pub const RCC_APB1ENR_TIM12EN_Pos: u32 = 6;
pub const RCC_APB1ENR_TIM12EN_Msk: u32 = 0x1 << RCC_APB1ENR_TIM12EN_Pos;
pub const RCC_APB1ENR_TIM12EN: u32 = RCC_APB1ENR_TIM12EN_Msk;
pub const RCC_APB1ENR_TIM13EN_Pos: u32 = 7;
pub const RCC_APB1ENR_TIM13EN_Msk: u32 = 0x1 << RCC_APB1ENR_TIM13EN_Pos;
pub const RCC_APB1ENR_TIM13EN: u32 = RCC_APB1ENR_TIM13EN_Msk;
pub const RCC_APB1ENR_TIM14EN_Pos: u32 = 8;
pub const RCC_APB1ENR_TIM14EN_Msk: u32 = 0x1 << RCC_APB1ENR_TIM14EN_Pos;
pub const RCC_APB1ENR_TIM14EN: u32 = RCC_APB1ENR_TIM14EN_Msk;
pub const RCC_APB1ENR_LPTIM1EN_Pos: u32 = 9;
pub const RCC_APB1ENR_LPTIM1EN_Msk: u32 = 0x1 << RCC_APB1ENR_LPTIM1EN_Pos;
pub const RCC_APB1ENR_LPTIM1EN: u32 = RCC_APB1ENR_LPTIM1EN_Msk;
pub const RCC_APB1ENR_WWDGEN_Pos: u32 = 11;
pub const RCC_APB1ENR_WWDGEN_Msk: u32 = 0x1 << RCC_APB1ENR_WWDGEN_Pos;
pub const RCC_APB1ENR_WWDGEN: u32 = RCC_APB1ENR_WWDGEN_Msk;
pub const RCC_APB1ENR_SPI2EN_Pos: u32 = 14;
pub const RCC_APB1ENR_SPI2EN_Msk: u32 = 0x1 << RCC_APB1ENR_SPI2EN_Pos;
pub const RCC_APB1ENR_SPI2EN: u32 = RCC_APB1ENR_SPI2EN_Msk;
pub const RCC_APB1ENR_SPI3EN_Pos: u32 = 15;
pub const RCC_APB1ENR_SPI3EN_Msk: u32 = 0x1 << RCC_APB1ENR_SPI3EN_Pos;
pub const RCC_APB1ENR_SPI3EN: u32 = RCC_APB1ENR_SPI3EN_Msk;
pub const RCC_APB1ENR_SPDIFRXEN_Pos: u32 = 16;
pub const RCC_APB1ENR_SPDIFRXEN_Msk: u32 = 0x1 << RCC_APB1ENR_SPDIFRXEN_Pos;
pub const RCC_APB1ENR_SPDIFRXEN: u32 = RCC_APB1ENR_SPDIFRXEN_Msk;
pub const RCC_APB1ENR_USART2EN_Pos: u32 = 17;
pub const RCC_APB1ENR_USART2EN_Msk: u32 = 0x1 << RCC_APB1ENR_USART2EN_Pos;
pub const RCC_APB1ENR_USART2EN: u32 = RCC_APB1ENR_USART2EN_Msk;
pub const RCC_APB1ENR_USART3EN_Pos: u32 = 18;
pub const RCC_APB1ENR_USART3EN_Msk: u32 = 0x1 << RCC_APB1ENR_USART3EN_Pos;
pub const RCC_APB1ENR_USART3EN: u32 = RCC_APB1ENR_USART3EN_Msk;
pub const RCC_APB1ENR_UART4EN_Pos: u32 = 19;
pub const RCC_APB1ENR_UART4EN_Msk: u32 = 0x1 << RCC_APB1ENR_UART4EN_Pos;
pub const RCC_APB1ENR_UART4EN: u32 = RCC_APB1ENR_UART4EN_Msk;
pub const RCC_APB1ENR_UART5EN_Pos: u32 = 20;
pub const RCC_APB1ENR_UART5EN_Msk: u32 = 0x1 << RCC_APB1ENR_UART5EN_Pos;
pub const RCC_APB1ENR_UART5EN: u32 = RCC_APB1ENR_UART5EN_Msk;
pub const RCC_APB1ENR_I2C1EN_Pos: u32 = 21;
pub const RCC_APB1ENR_I2C1EN_Msk: u32 = 0x1 << RCC_APB1ENR_I2C1EN_Pos;
pub const RCC_APB1ENR_I2C1EN: u32 = RCC_APB1ENR_I2C1EN_Msk;
pub const RCC_APB1ENR_I2C2EN_Pos: u32 = 22;
pub const RCC_APB1ENR_I2C2EN_Msk: u32 = 0x1 << RCC_APB1ENR_I2C2EN_Pos;
pub const RCC_APB1ENR_I2C2EN: u32 = RCC_APB1ENR_I2C2EN_Msk;
pub const RCC_APB1ENR_I2C3EN_Pos: u32 = 23;
pub const RCC_APB1ENR_I2C3EN_Msk: u32 = 0x1 << RCC_APB1ENR_I2C3EN_Pos;
pub const RCC_APB1ENR_I2C3EN: u32 = RCC_APB1ENR_I2C3EN_Msk;
pub const RCC_APB1ENR_I2C4EN_Pos: u32 = 24;
pub const RCC_APB1ENR_I2C4EN_Msk: u32 = 0x1 << RCC_APB1ENR_I2C4EN_Pos;
pub const RCC_APB1ENR_I2C4EN: u32 = RCC_APB1ENR_I2C4EN_Msk;
pub const RCC_APB1ENR_CAN1EN_Pos: u32 = 25;
pub const RCC_APB1ENR_CAN1EN_Msk: u32 = 0x1 << RCC_APB1ENR_CAN1EN_Pos;
pub const RCC_APB1ENR_CAN1EN: u32 = RCC_APB1ENR_CAN1EN_Msk;
pub const RCC_APB1ENR_CAN2EN_Pos: u32 = 26;
pub const RCC_APB1ENR_CAN2EN_Msk: u32 = 0x1 << RCC_APB1ENR_CAN2EN_Pos;
pub const RCC_APB1ENR_CAN2EN: u32 = RCC_APB1ENR_CAN2EN_Msk;
pub const RCC_APB1ENR_CECEN_Pos: u32 = 27;
pub const RCC_APB1ENR_CECEN_Msk: u32 = 0x1 << RCC_APB1ENR_CECEN_Pos;
pub const RCC_APB1ENR_CECEN: u32 = RCC_APB1ENR_CECEN_Msk;
pub const RCC_APB1ENR_PWREN_Pos: u32 = 28;
pub const RCC_APB1ENR_PWREN_Msk: u32 = 0x1 << RCC_APB1ENR_PWREN_Pos;
pub const RCC_APB1ENR_PWREN: u32 = RCC_APB1ENR_PWREN_Msk;
pub const RCC_APB1ENR_DACEN_Pos: u32 = 29;
pub const RCC_APB1ENR_DACEN_Msk: u32 = 0x1 << RCC_APB1ENR_DACEN_Pos;
pub const RCC_APB1ENR_DACEN: u32 = RCC_APB1ENR_DACEN_Msk;
pub const RCC_APB1ENR_UART7EN_Pos: u32 = 30;
pub const RCC_APB1ENR_UART7EN_Msk: u32 = 0x1 << RCC_APB1ENR_UART7EN_Pos;
pub const RCC_APB1ENR_UART7EN: u32 = RCC_APB1ENR_UART7EN_Msk;
pub const RCC_APB1ENR_UART8EN_Pos: u32 = 31;
pub const RCC_APB1ENR_UART8EN_Msk: u32 = 0x1 << RCC_APB1ENR_UART8EN_Pos;
pub const RCC_APB1ENR_UART8EN: u32 = RCC_APB1ENR_UART8EN_Msk;
pub const RCC_APB2ENR_TIM1EN_Pos: u32 = 0;
pub const RCC_APB2ENR_TIM1EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM1EN_Pos;
pub const RCC_APB2ENR_TIM1EN: u32 = RCC_APB2ENR_TIM1EN_Msk;
pub const RCC_APB2ENR_TIM8EN_Pos: u32 = 1;
pub const RCC_APB2ENR_TIM8EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM8EN_Pos;
pub const RCC_APB2ENR_TIM8EN: u32 = RCC_APB2ENR_TIM8EN_Msk;
pub const RCC_APB2ENR_USART1EN_Pos: u32 = 4;
pub const RCC_APB2ENR_USART1EN_Msk: u32 = 0x1 << RCC_APB2ENR_USART1EN_Pos;
pub const RCC_APB2ENR_USART1EN: u32 = RCC_APB2ENR_USART1EN_Msk;
pub const RCC_APB2ENR_USART6EN_Pos: u32 = 5;
pub const RCC_APB2ENR_USART6EN_Msk: u32 = 0x1 << RCC_APB2ENR_USART6EN_Pos;
pub const RCC_APB2ENR_USART6EN: u32 = RCC_APB2ENR_USART6EN_Msk;
pub const RCC_APB2ENR_ADC1EN_Pos: u32 = 8;
pub const RCC_APB2ENR_ADC1EN_Msk: u32 = 0x1 << RCC_APB2ENR_ADC1EN_Pos;
pub const RCC_APB2ENR_ADC1EN: u32 = RCC_APB2ENR_ADC1EN_Msk;
pub const RCC_APB2ENR_ADC2EN_Pos: u32 = 9;
pub const RCC_APB2ENR_ADC2EN_Msk: u32 = 0x1 << RCC_APB2ENR_ADC2EN_Pos;
pub const RCC_APB2ENR_ADC2EN: u32 = RCC_APB2ENR_ADC2EN_Msk;
pub const RCC_APB2ENR_ADC3EN_Pos: u32 = 10;
pub const RCC_APB2ENR_ADC3EN_Msk: u32 = 0x1 << RCC_APB2ENR_ADC3EN_Pos;
pub const RCC_APB2ENR_ADC3EN: u32 = RCC_APB2ENR_ADC3EN_Msk;
pub const RCC_APB2ENR_SDMMC1EN_Pos: u32 = 11;
pub const RCC_APB2ENR_SDMMC1EN_Msk: u32 = 0x1 << RCC_APB2ENR_SDMMC1EN_Pos;
pub const RCC_APB2ENR_SDMMC1EN: u32 = RCC_APB2ENR_SDMMC1EN_Msk;
pub const RCC_APB2ENR_SPI1EN_Pos: u32 = 12;
pub const RCC_APB2ENR_SPI1EN_Msk: u32 = 0x1 << RCC_APB2ENR_SPI1EN_Pos;
pub const RCC_APB2ENR_SPI1EN: u32 = RCC_APB2ENR_SPI1EN_Msk;
pub const RCC_APB2ENR_SPI4EN_Pos: u32 = 13;
pub const RCC_APB2ENR_SPI4EN_Msk: u32 = 0x1 << RCC_APB2ENR_SPI4EN_Pos;
pub const RCC_APB2ENR_SPI4EN: u32 = RCC_APB2ENR_SPI4EN_Msk;
pub const RCC_APB2ENR_SYSCFGEN_Pos: u32 = 14;
pub const RCC_APB2ENR_SYSCFGEN_Msk: u32 = 0x1 << RCC_APB2ENR_SYSCFGEN_Pos;
pub const RCC_APB2ENR_SYSCFGEN: u32 = RCC_APB2ENR_SYSCFGEN_Msk;
pub const RCC_APB2ENR_TIM9EN_Pos: u32 = 16;
pub const RCC_APB2ENR_TIM9EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM9EN_Pos;
pub const RCC_APB2ENR_TIM9EN: u32 = RCC_APB2ENR_TIM9EN_Msk;
pub const RCC_APB2ENR_TIM10EN_Pos: u32 = 17;
pub const RCC_APB2ENR_TIM10EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM10EN_Pos;
pub const RCC_APB2ENR_TIM10EN: u32 = RCC_APB2ENR_TIM10EN_Msk;
pub const RCC_APB2ENR_TIM11EN_Pos: u32 = 18;
pub const RCC_APB2ENR_TIM11EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM11EN_Pos;
pub const RCC_APB2ENR_TIM11EN: u32 = RCC_APB2ENR_TIM11EN_Msk;
pub const RCC_APB2ENR_SPI5EN_Pos: u32 = 20;
pub const RCC_APB2ENR_SPI5EN_Msk: u32 = 0x1 << RCC_APB2ENR_SPI5EN_Pos;
pub const RCC_APB2ENR_SPI5EN: u32 = RCC_APB2ENR_SPI5EN_Msk;
pub const RCC_APB2ENR_SPI6EN_Pos: u32 = 21;
pub const RCC_APB2ENR_SPI6EN_Msk: u32 = 0x1 << RCC_APB2ENR_SPI6EN_Pos;
pub const RCC_APB2ENR_SPI6EN: u32 = RCC_APB2ENR_SPI6EN_Msk;
pub const RCC_APB2ENR_SAI1EN_Pos: u32 = 22;
pub const RCC_APB2ENR_SAI1EN_Msk: u32 = 0x1 << RCC_APB2ENR_SAI1EN_Pos;
pub const RCC_APB2ENR_SAI1EN: u32 = RCC_APB2ENR_SAI1EN_Msk;
pub const RCC_APB2ENR_SAI2EN_Pos: u32 = 23;
pub const RCC_APB2ENR_SAI2EN_Msk: u32 = 0x1 << RCC_APB2ENR_SAI2EN_Pos;
pub const RCC_APB2ENR_SAI2EN: u32 = RCC_APB2ENR_SAI2EN_Msk;
pub const RCC_APB2ENR_LTDCEN_Pos: u32 = 26;
pub const RCC_APB2ENR_LTDCEN_Msk: u32 = 0x1 << RCC_APB2ENR_LTDCEN_Pos;
pub const RCC_APB2ENR_LTDCEN: u32 = RCC_APB2ENR_LTDCEN_Msk;
pub const RCC_AHB1LPENR_GPIOALPEN_Pos: u32 = 0;
pub const RCC_AHB1LPENR_GPIOALPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_GPIOALPEN_Pos;
pub const RCC_AHB1LPENR_GPIOALPEN: u32 = RCC_AHB1LPENR_GPIOALPEN_Msk;
pub const RCC_AHB1LPENR_GPIOBLPEN_Pos: u32 = 1;
pub const RCC_AHB1LPENR_GPIOBLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_GPIOBLPEN_Pos;
pub const RCC_AHB1LPENR_GPIOBLPEN: u32 = RCC_AHB1LPENR_GPIOBLPEN_Msk;
pub const RCC_AHB1LPENR_GPIOCLPEN_Pos: u32 = 2;
pub const RCC_AHB1LPENR_GPIOCLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_GPIOCLPEN_Pos;
pub const RCC_AHB1LPENR_GPIOCLPEN: u32 = RCC_AHB1LPENR_GPIOCLPEN_Msk;
pub const RCC_AHB1LPENR_GPIODLPEN_Pos: u32 = 3;
pub const RCC_AHB1LPENR_GPIODLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_GPIODLPEN_Pos;
pub const RCC_AHB1LPENR_GPIODLPEN: u32 = RCC_AHB1LPENR_GPIODLPEN_Msk;
pub const RCC_AHB1LPENR_GPIOELPEN_Pos: u32 = 4;
pub const RCC_AHB1LPENR_GPIOELPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_GPIOELPEN_Pos;
pub const RCC_AHB1LPENR_GPIOELPEN: u32 = RCC_AHB1LPENR_GPIOELPEN_Msk;
pub const RCC_AHB1LPENR_GPIOFLPEN_Pos: u32 = 5;
pub const RCC_AHB1LPENR_GPIOFLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_GPIOFLPEN_Pos;
pub const RCC_AHB1LPENR_GPIOFLPEN: u32 = RCC_AHB1LPENR_GPIOFLPEN_Msk;
pub const RCC_AHB1LPENR_GPIOGLPEN_Pos: u32 = 6;
pub const RCC_AHB1LPENR_GPIOGLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_GPIOGLPEN_Pos;
pub const RCC_AHB1LPENR_GPIOGLPEN: u32 = RCC_AHB1LPENR_GPIOGLPEN_Msk;
pub const RCC_AHB1LPENR_GPIOHLPEN_Pos: u32 = 7;
pub const RCC_AHB1LPENR_GPIOHLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_GPIOHLPEN_Pos;
pub const RCC_AHB1LPENR_GPIOHLPEN: u32 = RCC_AHB1LPENR_GPIOHLPEN_Msk;
pub const RCC_AHB1LPENR_GPIOILPEN_Pos: u32 = 8;
pub const RCC_AHB1LPENR_GPIOILPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_GPIOILPEN_Pos;
pub const RCC_AHB1LPENR_GPIOILPEN: u32 = RCC_AHB1LPENR_GPIOILPEN_Msk;
pub const RCC_AHB1LPENR_GPIOJLPEN_Pos: u32 = 9;
pub const RCC_AHB1LPENR_GPIOJLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_GPIOJLPEN_Pos;
pub const RCC_AHB1LPENR_GPIOJLPEN: u32 = RCC_AHB1LPENR_GPIOJLPEN_Msk;
pub const RCC_AHB1LPENR_GPIOKLPEN_Pos: u32 = 10;
pub const RCC_AHB1LPENR_GPIOKLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_GPIOKLPEN_Pos;
pub const RCC_AHB1LPENR_GPIOKLPEN: u32 = RCC_AHB1LPENR_GPIOKLPEN_Msk;
pub const RCC_AHB1LPENR_CRCLPEN_Pos: u32 = 12;
pub const RCC_AHB1LPENR_CRCLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_CRCLPEN_Pos;
pub const RCC_AHB1LPENR_CRCLPEN: u32 = RCC_AHB1LPENR_CRCLPEN_Msk;
pub const RCC_AHB1LPENR_AXILPEN_Pos: u32 = 13;
pub const RCC_AHB1LPENR_AXILPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_AXILPEN_Pos;
pub const RCC_AHB1LPENR_AXILPEN: u32 = RCC_AHB1LPENR_AXILPEN_Msk;
pub const RCC_AHB1LPENR_FLITFLPEN_Pos: u32 = 15;
pub const RCC_AHB1LPENR_FLITFLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_FLITFLPEN_Pos;
pub const RCC_AHB1LPENR_FLITFLPEN: u32 = RCC_AHB1LPENR_FLITFLPEN_Msk;
pub const RCC_AHB1LPENR_SRAM1LPEN_Pos: u32 = 16;
pub const RCC_AHB1LPENR_SRAM1LPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_SRAM1LPEN_Pos;
pub const RCC_AHB1LPENR_SRAM1LPEN: u32 = RCC_AHB1LPENR_SRAM1LPEN_Msk;
pub const RCC_AHB1LPENR_SRAM2LPEN_Pos: u32 = 17;
pub const RCC_AHB1LPENR_SRAM2LPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_SRAM2LPEN_Pos;
pub const RCC_AHB1LPENR_SRAM2LPEN: u32 = RCC_AHB1LPENR_SRAM2LPEN_Msk;
pub const RCC_AHB1LPENR_BKPSRAMLPEN_Pos: u32 = 18;
pub const RCC_AHB1LPENR_BKPSRAMLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_BKPSRAMLPEN_Pos;
pub const RCC_AHB1LPENR_BKPSRAMLPEN: u32 = RCC_AHB1LPENR_BKPSRAMLPEN_Msk;
pub const RCC_AHB1LPENR_DTCMLPEN_Pos: u32 = 20;
pub const RCC_AHB1LPENR_DTCMLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_DTCMLPEN_Pos;
pub const RCC_AHB1LPENR_DTCMLPEN: u32 = RCC_AHB1LPENR_DTCMLPEN_Msk;
pub const RCC_AHB1LPENR_DMA1LPEN_Pos: u32 = 21;
pub const RCC_AHB1LPENR_DMA1LPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_DMA1LPEN_Pos;
pub const RCC_AHB1LPENR_DMA1LPEN: u32 = RCC_AHB1LPENR_DMA1LPEN_Msk;
pub const RCC_AHB1LPENR_DMA2LPEN_Pos: u32 = 22;
pub const RCC_AHB1LPENR_DMA2LPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_DMA2LPEN_Pos;
pub const RCC_AHB1LPENR_DMA2LPEN: u32 = RCC_AHB1LPENR_DMA2LPEN_Msk;
pub const RCC_AHB1LPENR_DMA2DLPEN_Pos: u32 = 23;
pub const RCC_AHB1LPENR_DMA2DLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_DMA2DLPEN_Pos;
pub const RCC_AHB1LPENR_DMA2DLPEN: u32 = RCC_AHB1LPENR_DMA2DLPEN_Msk;
pub const RCC_AHB1LPENR_ETHMACLPEN_Pos: u32 = 25;
pub const RCC_AHB1LPENR_ETHMACLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_ETHMACLPEN_Pos;
pub const RCC_AHB1LPENR_ETHMACLPEN: u32 = RCC_AHB1LPENR_ETHMACLPEN_Msk;
pub const RCC_AHB1LPENR_ETHMACTXLPEN_Pos: u32 = 26;
pub const RCC_AHB1LPENR_ETHMACTXLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_ETHMACTXLPEN_Pos;
pub const RCC_AHB1LPENR_ETHMACTXLPEN: u32 = RCC_AHB1LPENR_ETHMACTXLPEN_Msk;
pub const RCC_AHB1LPENR_ETHMACRXLPEN_Pos: u32 = 27;
pub const RCC_AHB1LPENR_ETHMACRXLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_ETHMACRXLPEN_Pos;
pub const RCC_AHB1LPENR_ETHMACRXLPEN: u32 = RCC_AHB1LPENR_ETHMACRXLPEN_Msk;
pub const RCC_AHB1LPENR_ETHMACPTPLPEN_Pos: u32 = 28;
pub const RCC_AHB1LPENR_ETHMACPTPLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_ETHMACPTPLPEN_Pos;
pub const RCC_AHB1LPENR_ETHMACPTPLPEN: u32 = RCC_AHB1LPENR_ETHMACPTPLPEN_Msk;
pub const RCC_AHB1LPENR_OTGHSLPEN_Pos: u32 = 29;
pub const RCC_AHB1LPENR_OTGHSLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_OTGHSLPEN_Pos;
pub const RCC_AHB1LPENR_OTGHSLPEN: u32 = RCC_AHB1LPENR_OTGHSLPEN_Msk;
pub const RCC_AHB1LPENR_OTGHSULPILPEN_Pos: u32 = 30;
pub const RCC_AHB1LPENR_OTGHSULPILPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_OTGHSULPILPEN_Pos;
pub const RCC_AHB1LPENR_OTGHSULPILPEN: u32 = RCC_AHB1LPENR_OTGHSULPILPEN_Msk;
pub const RCC_AHB2LPENR_DCMILPEN_Pos: u32 = 0;
pub const RCC_AHB2LPENR_DCMILPEN_Msk: u32 = 0x1 << RCC_AHB2LPENR_DCMILPEN_Pos;
pub const RCC_AHB2LPENR_DCMILPEN: u32 = RCC_AHB2LPENR_DCMILPEN_Msk;
pub const RCC_AHB2LPENR_CRYPLPEN_Pos: u32 = 4;
pub const RCC_AHB2LPENR_CRYPLPEN_Msk: u32 = 0x1 << RCC_AHB2LPENR_CRYPLPEN_Pos;
pub const RCC_AHB2LPENR_CRYPLPEN: u32 = RCC_AHB2LPENR_CRYPLPEN_Msk;
pub const RCC_AHB2LPENR_HASHLPEN_Pos: u32 = 5;
pub const RCC_AHB2LPENR_HASHLPEN_Msk: u32 = 0x1 << RCC_AHB2LPENR_HASHLPEN_Pos;
pub const RCC_AHB2LPENR_HASHLPEN: u32 = RCC_AHB2LPENR_HASHLPEN_Msk;
pub const RCC_AHB2LPENR_RNGLPEN_Pos: u32 = 6;
pub const RCC_AHB2LPENR_RNGLPEN_Msk: u32 = 0x1 << RCC_AHB2LPENR_RNGLPEN_Pos;
pub const RCC_AHB2LPENR_RNGLPEN: u32 = RCC_AHB2LPENR_RNGLPEN_Msk;
pub const RCC_AHB2LPENR_OTGFSLPEN_Pos: u32 = 7;
pub const RCC_AHB2LPENR_OTGFSLPEN_Msk: u32 = 0x1 << RCC_AHB2LPENR_OTGFSLPEN_Pos;
pub const RCC_AHB2LPENR_OTGFSLPEN: u32 = RCC_AHB2LPENR_OTGFSLPEN_Msk;
pub const RCC_AHB3LPENR_FMCLPEN_Pos: u32 = 0;
pub const RCC_AHB3LPENR_FMCLPEN_Msk: u32 = 0x1 << RCC_AHB3LPENR_FMCLPEN_Pos;
pub const RCC_AHB3LPENR_FMCLPEN: u32 = RCC_AHB3LPENR_FMCLPEN_Msk;
pub const RCC_AHB3LPENR_QSPILPEN_Pos: u32 = 1;
pub const RCC_AHB3LPENR_QSPILPEN_Msk: u32 = 0x1 << RCC_AHB3LPENR_QSPILPEN_Pos;
pub const RCC_AHB3LPENR_QSPILPEN: u32 = RCC_AHB3LPENR_QSPILPEN_Msk;
pub const RCC_APB1LPENR_TIM2LPEN_Pos: u32 = 0;
pub const RCC_APB1LPENR_TIM2LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_TIM2LPEN_Pos;
pub const RCC_APB1LPENR_TIM2LPEN: u32 = RCC_APB1LPENR_TIM2LPEN_Msk;
pub const RCC_APB1LPENR_TIM3LPEN_Pos: u32 = 1;
pub const RCC_APB1LPENR_TIM3LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_TIM3LPEN_Pos;
pub const RCC_APB1LPENR_TIM3LPEN: u32 = RCC_APB1LPENR_TIM3LPEN_Msk;
pub const RCC_APB1LPENR_TIM4LPEN_Pos: u32 = 2;
pub const RCC_APB1LPENR_TIM4LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_TIM4LPEN_Pos;
pub const RCC_APB1LPENR_TIM4LPEN: u32 = RCC_APB1LPENR_TIM4LPEN_Msk;
pub const RCC_APB1LPENR_TIM5LPEN_Pos: u32 = 3;
pub const RCC_APB1LPENR_TIM5LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_TIM5LPEN_Pos;
pub const RCC_APB1LPENR_TIM5LPEN: u32 = RCC_APB1LPENR_TIM5LPEN_Msk;
pub const RCC_APB1LPENR_TIM6LPEN_Pos: u32 = 4;
pub const RCC_APB1LPENR_TIM6LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_TIM6LPEN_Pos;
pub const RCC_APB1LPENR_TIM6LPEN: u32 = RCC_APB1LPENR_TIM6LPEN_Msk;
pub const RCC_APB1LPENR_TIM7LPEN_Pos: u32 = 5;
pub const RCC_APB1LPENR_TIM7LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_TIM7LPEN_Pos;
pub const RCC_APB1LPENR_TIM7LPEN: u32 = RCC_APB1LPENR_TIM7LPEN_Msk;
pub const RCC_APB1LPENR_TIM12LPEN_Pos: u32 = 6;
pub const RCC_APB1LPENR_TIM12LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_TIM12LPEN_Pos;
pub const RCC_APB1LPENR_TIM12LPEN: u32 = RCC_APB1LPENR_TIM12LPEN_Msk;
pub const RCC_APB1LPENR_TIM13LPEN_Pos: u32 = 7;
pub const RCC_APB1LPENR_TIM13LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_TIM13LPEN_Pos;
pub const RCC_APB1LPENR_TIM13LPEN: u32 = RCC_APB1LPENR_TIM13LPEN_Msk;
pub const RCC_APB1LPENR_TIM14LPEN_Pos: u32 = 8;
pub const RCC_APB1LPENR_TIM14LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_TIM14LPEN_Pos;
pub const RCC_APB1LPENR_TIM14LPEN: u32 = RCC_APB1LPENR_TIM14LPEN_Msk;
pub const RCC_APB1LPENR_LPTIM1LPEN_Pos: u32 = 9;
pub const RCC_APB1LPENR_LPTIM1LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_LPTIM1LPEN_Pos;
pub const RCC_APB1LPENR_LPTIM1LPEN: u32 = RCC_APB1LPENR_LPTIM1LPEN_Msk;
pub const RCC_APB1LPENR_WWDGLPEN_Pos: u32 = 11;
pub const RCC_APB1LPENR_WWDGLPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_WWDGLPEN_Pos;
pub const RCC_APB1LPENR_WWDGLPEN: u32 = RCC_APB1LPENR_WWDGLPEN_Msk;
pub const RCC_APB1LPENR_SPI2LPEN_Pos: u32 = 14;
pub const RCC_APB1LPENR_SPI2LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_SPI2LPEN_Pos;
pub const RCC_APB1LPENR_SPI2LPEN: u32 = RCC_APB1LPENR_SPI2LPEN_Msk;
pub const RCC_APB1LPENR_SPI3LPEN_Pos: u32 = 15;
pub const RCC_APB1LPENR_SPI3LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_SPI3LPEN_Pos;
pub const RCC_APB1LPENR_SPI3LPEN: u32 = RCC_APB1LPENR_SPI3LPEN_Msk;
pub const RCC_APB1LPENR_SPDIFRXLPEN_Pos: u32 = 16;
pub const RCC_APB1LPENR_SPDIFRXLPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_SPDIFRXLPEN_Pos;
pub const RCC_APB1LPENR_SPDIFRXLPEN: u32 = RCC_APB1LPENR_SPDIFRXLPEN_Msk;
pub const RCC_APB1LPENR_USART2LPEN_Pos: u32 = 17;
pub const RCC_APB1LPENR_USART2LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_USART2LPEN_Pos;
pub const RCC_APB1LPENR_USART2LPEN: u32 = RCC_APB1LPENR_USART2LPEN_Msk;
pub const RCC_APB1LPENR_USART3LPEN_Pos: u32 = 18;
pub const RCC_APB1LPENR_USART3LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_USART3LPEN_Pos;
pub const RCC_APB1LPENR_USART3LPEN: u32 = RCC_APB1LPENR_USART3LPEN_Msk;
pub const RCC_APB1LPENR_UART4LPEN_Pos: u32 = 19;
pub const RCC_APB1LPENR_UART4LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_UART4LPEN_Pos;
pub const RCC_APB1LPENR_UART4LPEN: u32 = RCC_APB1LPENR_UART4LPEN_Msk;
pub const RCC_APB1LPENR_UART5LPEN_Pos: u32 = 20;
pub const RCC_APB1LPENR_UART5LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_UART5LPEN_Pos;
pub const RCC_APB1LPENR_UART5LPEN: u32 = RCC_APB1LPENR_UART5LPEN_Msk;
pub const RCC_APB1LPENR_I2C1LPEN_Pos: u32 = 21;
pub const RCC_APB1LPENR_I2C1LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_I2C1LPEN_Pos;
pub const RCC_APB1LPENR_I2C1LPEN: u32 = RCC_APB1LPENR_I2C1LPEN_Msk;
pub const RCC_APB1LPENR_I2C2LPEN_Pos: u32 = 22;
pub const RCC_APB1LPENR_I2C2LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_I2C2LPEN_Pos;
pub const RCC_APB1LPENR_I2C2LPEN: u32 = RCC_APB1LPENR_I2C2LPEN_Msk;
pub const RCC_APB1LPENR_I2C3LPEN_Pos: u32 = 23;
pub const RCC_APB1LPENR_I2C3LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_I2C3LPEN_Pos;
pub const RCC_APB1LPENR_I2C3LPEN: u32 = RCC_APB1LPENR_I2C3LPEN_Msk;
pub const RCC_APB1LPENR_I2C4LPEN_Pos: u32 = 24;
pub const RCC_APB1LPENR_I2C4LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_I2C4LPEN_Pos;
pub const RCC_APB1LPENR_I2C4LPEN: u32 = RCC_APB1LPENR_I2C4LPEN_Msk;
pub const RCC_APB1LPENR_CAN1LPEN_Pos: u32 = 25;
pub const RCC_APB1LPENR_CAN1LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_CAN1LPEN_Pos;
pub const RCC_APB1LPENR_CAN1LPEN: u32 = RCC_APB1LPENR_CAN1LPEN_Msk;
pub const RCC_APB1LPENR_CAN2LPEN_Pos: u32 = 26;
pub const RCC_APB1LPENR_CAN2LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_CAN2LPEN_Pos;
pub const RCC_APB1LPENR_CAN2LPEN: u32 = RCC_APB1LPENR_CAN2LPEN_Msk;
pub const RCC_APB1LPENR_CECLPEN_Pos: u32 = 27;
pub const RCC_APB1LPENR_CECLPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_CECLPEN_Pos;
pub const RCC_APB1LPENR_CECLPEN: u32 = RCC_APB1LPENR_CECLPEN_Msk;
pub const RCC_APB1LPENR_PWRLPEN_Pos: u32 = 28;
pub const RCC_APB1LPENR_PWRLPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_PWRLPEN_Pos;
pub const RCC_APB1LPENR_PWRLPEN: u32 = RCC_APB1LPENR_PWRLPEN_Msk;
pub const RCC_APB1LPENR_DACLPEN_Pos: u32 = 29;
pub const RCC_APB1LPENR_DACLPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_DACLPEN_Pos;
pub const RCC_APB1LPENR_DACLPEN: u32 = RCC_APB1LPENR_DACLPEN_Msk;
pub const RCC_APB1LPENR_UART7LPEN_Pos: u32 = 30;
pub const RCC_APB1LPENR_UART7LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_UART7LPEN_Pos;
pub const RCC_APB1LPENR_UART7LPEN: u32 = RCC_APB1LPENR_UART7LPEN_Msk;
pub const RCC_APB1LPENR_UART8LPEN_Pos: u32 = 31;
pub const RCC_APB1LPENR_UART8LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR_UART8LPEN_Pos;
pub const RCC_APB1LPENR_UART8LPEN: u32 = RCC_APB1LPENR_UART8LPEN_Msk;
pub const RCC_APB2LPENR_TIM1LPEN_Pos: u32 = 0;
pub const RCC_APB2LPENR_TIM1LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_TIM1LPEN_Pos;
pub const RCC_APB2LPENR_TIM1LPEN: u32 = RCC_APB2LPENR_TIM1LPEN_Msk;
pub const RCC_APB2LPENR_TIM8LPEN_Pos: u32 = 1;
pub const RCC_APB2LPENR_TIM8LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_TIM8LPEN_Pos;
pub const RCC_APB2LPENR_TIM8LPEN: u32 = RCC_APB2LPENR_TIM8LPEN_Msk;
pub const RCC_APB2LPENR_USART1LPEN_Pos: u32 = 4;
pub const RCC_APB2LPENR_USART1LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_USART1LPEN_Pos;
pub const RCC_APB2LPENR_USART1LPEN: u32 = RCC_APB2LPENR_USART1LPEN_Msk;
pub const RCC_APB2LPENR_USART6LPEN_Pos: u32 = 5;
pub const RCC_APB2LPENR_USART6LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_USART6LPEN_Pos;
pub const RCC_APB2LPENR_USART6LPEN: u32 = RCC_APB2LPENR_USART6LPEN_Msk;
pub const RCC_APB2LPENR_ADC1LPEN_Pos: u32 = 8;
pub const RCC_APB2LPENR_ADC1LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_ADC1LPEN_Pos;
pub const RCC_APB2LPENR_ADC1LPEN: u32 = RCC_APB2LPENR_ADC1LPEN_Msk;
pub const RCC_APB2LPENR_ADC2LPEN_Pos: u32 = 9;
pub const RCC_APB2LPENR_ADC2LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_ADC2LPEN_Pos;
pub const RCC_APB2LPENR_ADC2LPEN: u32 = RCC_APB2LPENR_ADC2LPEN_Msk;
pub const RCC_APB2LPENR_ADC3LPEN_Pos: u32 = 10;
pub const RCC_APB2LPENR_ADC3LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_ADC3LPEN_Pos;
pub const RCC_APB2LPENR_ADC3LPEN: u32 = RCC_APB2LPENR_ADC3LPEN_Msk;
pub const RCC_APB2LPENR_SDMMC1LPEN_Pos: u32 = 11;
pub const RCC_APB2LPENR_SDMMC1LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_SDMMC1LPEN_Pos;
pub const RCC_APB2LPENR_SDMMC1LPEN: u32 = RCC_APB2LPENR_SDMMC1LPEN_Msk;
pub const RCC_APB2LPENR_SPI1LPEN_Pos: u32 = 12;
pub const RCC_APB2LPENR_SPI1LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_SPI1LPEN_Pos;
pub const RCC_APB2LPENR_SPI1LPEN: u32 = RCC_APB2LPENR_SPI1LPEN_Msk;
pub const RCC_APB2LPENR_SPI4LPEN_Pos: u32 = 13;
pub const RCC_APB2LPENR_SPI4LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_SPI4LPEN_Pos;
pub const RCC_APB2LPENR_SPI4LPEN: u32 = RCC_APB2LPENR_SPI4LPEN_Msk;
pub const RCC_APB2LPENR_SYSCFGLPEN_Pos: u32 = 14;
pub const RCC_APB2LPENR_SYSCFGLPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_SYSCFGLPEN_Pos;
pub const RCC_APB2LPENR_SYSCFGLPEN: u32 = RCC_APB2LPENR_SYSCFGLPEN_Msk;
pub const RCC_APB2LPENR_TIM9LPEN_Pos: u32 = 16;
pub const RCC_APB2LPENR_TIM9LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_TIM9LPEN_Pos;
pub const RCC_APB2LPENR_TIM9LPEN: u32 = RCC_APB2LPENR_TIM9LPEN_Msk;
pub const RCC_APB2LPENR_TIM10LPEN_Pos: u32 = 17;
pub const RCC_APB2LPENR_TIM10LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_TIM10LPEN_Pos;
pub const RCC_APB2LPENR_TIM10LPEN: u32 = RCC_APB2LPENR_TIM10LPEN_Msk;
pub const RCC_APB2LPENR_TIM11LPEN_Pos: u32 = 18;
pub const RCC_APB2LPENR_TIM11LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_TIM11LPEN_Pos;
pub const RCC_APB2LPENR_TIM11LPEN: u32 = RCC_APB2LPENR_TIM11LPEN_Msk;
pub const RCC_APB2LPENR_SPI5LPEN_Pos: u32 = 20;
pub const RCC_APB2LPENR_SPI5LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_SPI5LPEN_Pos;
pub const RCC_APB2LPENR_SPI5LPEN: u32 = RCC_APB2LPENR_SPI5LPEN_Msk;
pub const RCC_APB2LPENR_SPI6LPEN_Pos: u32 = 21;
pub const RCC_APB2LPENR_SPI6LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_SPI6LPEN_Pos;
pub const RCC_APB2LPENR_SPI6LPEN: u32 = RCC_APB2LPENR_SPI6LPEN_Msk;
pub const RCC_APB2LPENR_SAI1LPEN_Pos: u32 = 22;
pub const RCC_APB2LPENR_SAI1LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_SAI1LPEN_Pos;
pub const RCC_APB2LPENR_SAI1LPEN: u32 = RCC_APB2LPENR_SAI1LPEN_Msk;
pub const RCC_APB2LPENR_SAI2LPEN_Pos: u32 = 23;
pub const RCC_APB2LPENR_SAI2LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_SAI2LPEN_Pos;
pub const RCC_APB2LPENR_SAI2LPEN: u32 = RCC_APB2LPENR_SAI2LPEN_Msk;
pub const RCC_APB2LPENR_LTDCLPEN_Pos: u32 = 26;
pub const RCC_APB2LPENR_LTDCLPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_LTDCLPEN_Pos;
pub const RCC_APB2LPENR_LTDCLPEN: u32 = RCC_APB2LPENR_LTDCLPEN_Msk;
pub const RCC_BDCR_LSEON_Pos: u32 = 0;
pub const RCC_BDCR_LSEON_Msk: u32 = 0x1 << RCC_BDCR_LSEON_Pos;
pub const RCC_BDCR_LSEON: u32 = RCC_BDCR_LSEON_Msk;
pub const RCC_BDCR_LSERDY_Pos: u32 = 1;
pub const RCC_BDCR_LSERDY_Msk: u32 = 0x1 << RCC_BDCR_LSERDY_Pos;
pub const RCC_BDCR_LSERDY: u32 = RCC_BDCR_LSERDY_Msk;
pub const RCC_BDCR_LSEBYP_Pos: u32 = 2;
pub const RCC_BDCR_LSEBYP_Msk: u32 = 0x1 << RCC_BDCR_LSEBYP_Pos;
pub const RCC_BDCR_LSEBYP: u32 = RCC_BDCR_LSEBYP_Msk;
pub const RCC_BDCR_LSEDRV_Pos: u32 = 3;
pub const RCC_BDCR_LSEDRV_Msk: u32 = 0x3 << RCC_BDCR_LSEDRV_Pos;
pub const RCC_BDCR_LSEDRV: u32 = RCC_BDCR_LSEDRV_Msk;
pub const RCC_BDCR_LSEDRV_0: u32 = 0x1 << RCC_BDCR_LSEDRV_Pos;
pub const RCC_BDCR_LSEDRV_1: u32 = 0x2 << RCC_BDCR_LSEDRV_Pos;
pub const RCC_BDCR_RTCSEL_Pos: u32 = 8;
pub const RCC_BDCR_RTCSEL_Msk: u32 = 0x3 << RCC_BDCR_RTCSEL_Pos;
pub const RCC_BDCR_RTCSEL: u32 = RCC_BDCR_RTCSEL_Msk;
pub const RCC_BDCR_RTCSEL_0: u32 = 0x1 << RCC_BDCR_RTCSEL_Pos;
pub const RCC_BDCR_RTCSEL_1: u32 = 0x2 << RCC_BDCR_RTCSEL_Pos;
pub const RCC_BDCR_RTCEN_Pos: u32 = 15;
pub const RCC_BDCR_RTCEN_Msk: u32 = 0x1 << RCC_BDCR_RTCEN_Pos;
pub const RCC_BDCR_RTCEN: u32 = RCC_BDCR_RTCEN_Msk;
pub const RCC_BDCR_BDRST_Pos: u32 = 16;
pub const RCC_BDCR_BDRST_Msk: u32 = 0x1 << RCC_BDCR_BDRST_Pos;
pub const RCC_BDCR_BDRST: u32 = RCC_BDCR_BDRST_Msk;
pub const RCC_CSR_LSION_Pos: u32 = 0;
pub const RCC_CSR_LSION_Msk: u32 = 0x1 << RCC_CSR_LSION_Pos;
pub const RCC_CSR_LSION: u32 = RCC_CSR_LSION_Msk;
pub const RCC_CSR_LSIRDY_Pos: u32 = 1;
pub const RCC_CSR_LSIRDY_Msk: u32 = 0x1 << RCC_CSR_LSIRDY_Pos;
pub const RCC_CSR_LSIRDY: u32 = RCC_CSR_LSIRDY_Msk;
pub const RCC_CSR_RMVF_Pos: u32 = 24;
pub const RCC_CSR_RMVF_Msk: u32 = 0x1 << RCC_CSR_RMVF_Pos;
pub const RCC_CSR_RMVF: u32 = RCC_CSR_RMVF_Msk;
pub const RCC_CSR_BORRSTF_Pos: u32 = 25;
pub const RCC_CSR_BORRSTF_Msk: u32 = 0x1 << RCC_CSR_BORRSTF_Pos;
pub const RCC_CSR_BORRSTF: u32 = RCC_CSR_BORRSTF_Msk;
pub const RCC_CSR_PINRSTF_Pos: u32 = 26;
pub const RCC_CSR_PINRSTF_Msk: u32 = 0x1 << RCC_CSR_PINRSTF_Pos;
pub const RCC_CSR_PINRSTF: u32 = RCC_CSR_PINRSTF_Msk;
pub const RCC_CSR_PORRSTF_Pos: u32 = 27;
pub const RCC_CSR_PORRSTF_Msk: u32 = 0x1 << RCC_CSR_PORRSTF_Pos;
pub const RCC_CSR_PORRSTF: u32 = RCC_CSR_PORRSTF_Msk;
pub const RCC_CSR_SFTRSTF_Pos: u32 = 28;
pub const RCC_CSR_SFTRSTF_Msk: u32 = 0x1 << RCC_CSR_SFTRSTF_Pos;
pub const RCC_CSR_SFTRSTF: u32 = RCC_CSR_SFTRSTF_Msk;
pub const RCC_CSR_IWDGRSTF_Pos: u32 = 29;
pub const RCC_CSR_IWDGRSTF_Msk: u32 = 0x1 << RCC_CSR_IWDGRSTF_Pos;
pub const RCC_CSR_IWDGRSTF: u32 = RCC_CSR_IWDGRSTF_Msk;
pub const RCC_CSR_WWDGRSTF_Pos: u32 = 30;
pub const RCC_CSR_WWDGRSTF_Msk: u32 = 0x1 << RCC_CSR_WWDGRSTF_Pos;
pub const RCC_CSR_WWDGRSTF: u32 = RCC_CSR_WWDGRSTF_Msk;
pub const RCC_CSR_LPWRRSTF_Pos: u32 = 31;
pub const RCC_CSR_LPWRRSTF_Msk: u32 = 0x1 << RCC_CSR_LPWRRSTF_Pos;
pub const RCC_CSR_LPWRRSTF: u32 = RCC_CSR_LPWRRSTF_Msk;
pub const RCC_SSCGR_MODPER_Pos: u32 = 0;
pub const RCC_SSCGR_MODPER_Msk: u32 = 0x1FFF << RCC_SSCGR_MODPER_Pos;
pub const RCC_SSCGR_MODPER: u32 = RCC_SSCGR_MODPER_Msk;
pub const RCC_SSCGR_INCSTEP_Pos: u32 = 13;
pub const RCC_SSCGR_INCSTEP_Msk: u32 = 0x7FFF << RCC_SSCGR_INCSTEP_Pos;
pub const RCC_SSCGR_INCSTEP: u32 = RCC_SSCGR_INCSTEP_Msk;
pub const RCC_SSCGR_SPREADSEL_Pos: u32 = 30;
pub const RCC_SSCGR_SPREADSEL_Msk: u32 = 0x1 << RCC_SSCGR_SPREADSEL_Pos;
pub const RCC_SSCGR_SPREADSEL: u32 = RCC_SSCGR_SPREADSEL_Msk;
pub const RCC_SSCGR_SSCGEN_Pos: u32 = 31;
pub const RCC_SSCGR_SSCGEN_Msk: u32 = 0x1 << RCC_SSCGR_SSCGEN_Pos;
pub const RCC_SSCGR_SSCGEN: u32 = RCC_SSCGR_SSCGEN_Msk;
pub const RCC_PLLI2SCFGR_PLLI2SN_Pos: u32 = 6;
pub const RCC_PLLI2SCFGR_PLLI2SN_Msk: u32 = 0x1FF << RCC_PLLI2SCFGR_PLLI2SN_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SN: u32 = RCC_PLLI2SCFGR_PLLI2SN_Msk;
pub const RCC_PLLI2SCFGR_PLLI2SN_0: u32 = 0x001 << RCC_PLLI2SCFGR_PLLI2SN_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SN_1: u32 = 0x002 << RCC_PLLI2SCFGR_PLLI2SN_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SN_2: u32 = 0x004 << RCC_PLLI2SCFGR_PLLI2SN_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SN_3: u32 = 0x008 << RCC_PLLI2SCFGR_PLLI2SN_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SN_4: u32 = 0x010 << RCC_PLLI2SCFGR_PLLI2SN_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SN_5: u32 = 0x020 << RCC_PLLI2SCFGR_PLLI2SN_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SN_6: u32 = 0x040 << RCC_PLLI2SCFGR_PLLI2SN_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SN_7: u32 = 0x080 << RCC_PLLI2SCFGR_PLLI2SN_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SN_8: u32 = 0x100 << RCC_PLLI2SCFGR_PLLI2SN_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SP_Pos: u32 = 16;
pub const RCC_PLLI2SCFGR_PLLI2SP_Msk: u32 = 0x3 << RCC_PLLI2SCFGR_PLLI2SP_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SP: u32 = RCC_PLLI2SCFGR_PLLI2SP_Msk;
pub const RCC_PLLI2SCFGR_PLLI2SP_0: u32 = 0x1 << RCC_PLLI2SCFGR_PLLI2SP_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SP_1: u32 = 0x2 << RCC_PLLI2SCFGR_PLLI2SP_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SQ_Pos: u32 = 24;
pub const RCC_PLLI2SCFGR_PLLI2SQ_Msk: u32 = 0xF << RCC_PLLI2SCFGR_PLLI2SQ_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SQ: u32 = RCC_PLLI2SCFGR_PLLI2SQ_Msk;
pub const RCC_PLLI2SCFGR_PLLI2SQ_0: u32 = 0x1 << RCC_PLLI2SCFGR_PLLI2SQ_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SQ_1: u32 = 0x2 << RCC_PLLI2SCFGR_PLLI2SQ_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SQ_2: u32 = 0x4 << RCC_PLLI2SCFGR_PLLI2SQ_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SQ_3: u32 = 0x8 << RCC_PLLI2SCFGR_PLLI2SQ_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SR_Pos: u32 = 28;
pub const RCC_PLLI2SCFGR_PLLI2SR_Msk: u32 = 0x7 << RCC_PLLI2SCFGR_PLLI2SR_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SR: u32 = RCC_PLLI2SCFGR_PLLI2SR_Msk;
pub const RCC_PLLI2SCFGR_PLLI2SR_0: u32 = 0x1 << RCC_PLLI2SCFGR_PLLI2SR_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SR_1: u32 = 0x2 << RCC_PLLI2SCFGR_PLLI2SR_Pos;
pub const RCC_PLLI2SCFGR_PLLI2SR_2: u32 = 0x4 << RCC_PLLI2SCFGR_PLLI2SR_Pos;
pub const RCC_PLLSAICFGR_PLLSAIN_Pos: u32 = 6;
pub const RCC_PLLSAICFGR_PLLSAIN_Msk: u32 = 0x1FF << RCC_PLLSAICFGR_PLLSAIN_Pos;
pub const RCC_PLLSAICFGR_PLLSAIN: u32 = RCC_PLLSAICFGR_PLLSAIN_Msk;
pub const RCC_PLLSAICFGR_PLLSAIN_0: u32 = 0x001 << RCC_PLLSAICFGR_PLLSAIN_Pos;
pub const RCC_PLLSAICFGR_PLLSAIN_1: u32 = 0x002 << RCC_PLLSAICFGR_PLLSAIN_Pos;
pub const RCC_PLLSAICFGR_PLLSAIN_2: u32 = 0x004 << RCC_PLLSAICFGR_PLLSAIN_Pos;
pub const RCC_PLLSAICFGR_PLLSAIN_3: u32 = 0x008 << RCC_PLLSAICFGR_PLLSAIN_Pos;
pub const RCC_PLLSAICFGR_PLLSAIN_4: u32 = 0x010 << RCC_PLLSAICFGR_PLLSAIN_Pos;
pub const RCC_PLLSAICFGR_PLLSAIN_5: u32 = 0x020 << RCC_PLLSAICFGR_PLLSAIN_Pos;
pub const RCC_PLLSAICFGR_PLLSAIN_6: u32 = 0x040 << RCC_PLLSAICFGR_PLLSAIN_Pos;
pub const RCC_PLLSAICFGR_PLLSAIN_7: u32 = 0x080 << RCC_PLLSAICFGR_PLLSAIN_Pos;
pub const RCC_PLLSAICFGR_PLLSAIN_8: u32 = 0x100 << RCC_PLLSAICFGR_PLLSAIN_Pos;
pub const RCC_PLLSAICFGR_PLLSAIP_Pos: u32 = 16;
pub const RCC_PLLSAICFGR_PLLSAIP_Msk: u32 = 0x3 << RCC_PLLSAICFGR_PLLSAIP_Pos;
pub const RCC_PLLSAICFGR_PLLSAIP: u32 = RCC_PLLSAICFGR_PLLSAIP_Msk;
pub const RCC_PLLSAICFGR_PLLSAIP_0: u32 = 0x1 << RCC_PLLSAICFGR_PLLSAIP_Pos;
pub const RCC_PLLSAICFGR_PLLSAIP_1: u32 = 0x2 << RCC_PLLSAICFGR_PLLSAIP_Pos;
pub const RCC_PLLSAICFGR_PLLSAIQ_Pos: u32 = 24;
pub const RCC_PLLSAICFGR_PLLSAIQ_Msk: u32 = 0xF << RCC_PLLSAICFGR_PLLSAIQ_Pos;
pub const RCC_PLLSAICFGR_PLLSAIQ: u32 = RCC_PLLSAICFGR_PLLSAIQ_Msk;
pub const RCC_PLLSAICFGR_PLLSAIQ_0: u32 = 0x1 << RCC_PLLSAICFGR_PLLSAIQ_Pos;
pub const RCC_PLLSAICFGR_PLLSAIQ_1: u32 = 0x2 << RCC_PLLSAICFGR_PLLSAIQ_Pos;
pub const RCC_PLLSAICFGR_PLLSAIQ_2: u32 = 0x4 << RCC_PLLSAICFGR_PLLSAIQ_Pos;
pub const RCC_PLLSAICFGR_PLLSAIQ_3: u32 = 0x8 << RCC_PLLSAICFGR_PLLSAIQ_Pos;
pub const RCC_PLLSAICFGR_PLLSAIR_Pos: u32 = 28;
pub const RCC_PLLSAICFGR_PLLSAIR_Msk: u32 = 0x7 << RCC_PLLSAICFGR_PLLSAIR_Pos;
pub const RCC_PLLSAICFGR_PLLSAIR: u32 = RCC_PLLSAICFGR_PLLSAIR_Msk;
pub const RCC_PLLSAICFGR_PLLSAIR_0: u32 = 0x1 << RCC_PLLSAICFGR_PLLSAIR_Pos;
pub const RCC_PLLSAICFGR_PLLSAIR_1: u32 = 0x2 << RCC_PLLSAICFGR_PLLSAIR_Pos;
pub const RCC_PLLSAICFGR_PLLSAIR_2: u32 = 0x4 << RCC_PLLSAICFGR_PLLSAIR_Pos;
pub const RCC_DCKCFGR1_PLLI2SDIVQ_Pos: u32 = 0;
pub const RCC_DCKCFGR1_PLLI2SDIVQ_Msk: u32 = 0x1F << RCC_DCKCFGR1_PLLI2SDIVQ_Pos;
pub const RCC_DCKCFGR1_PLLI2SDIVQ: u32 = RCC_DCKCFGR1_PLLI2SDIVQ_Msk;
pub const RCC_DCKCFGR1_PLLI2SDIVQ_0: u32 = 0x01 << RCC_DCKCFGR1_PLLI2SDIVQ_Pos;
pub const RCC_DCKCFGR1_PLLI2SDIVQ_1: u32 = 0x02 << RCC_DCKCFGR1_PLLI2SDIVQ_Pos;
pub const RCC_DCKCFGR1_PLLI2SDIVQ_2: u32 = 0x04 << RCC_DCKCFGR1_PLLI2SDIVQ_Pos;
pub const RCC_DCKCFGR1_PLLI2SDIVQ_3: u32 = 0x08 << RCC_DCKCFGR1_PLLI2SDIVQ_Pos;
pub const RCC_DCKCFGR1_PLLI2SDIVQ_4: u32 = 0x10 << RCC_DCKCFGR1_PLLI2SDIVQ_Pos;
pub const RCC_DCKCFGR1_PLLSAIDIVQ_Pos: u32 = 8;
pub const RCC_DCKCFGR1_PLLSAIDIVQ_Msk: u32 = 0x1F << RCC_DCKCFGR1_PLLSAIDIVQ_Pos;
pub const RCC_DCKCFGR1_PLLSAIDIVQ: u32 = RCC_DCKCFGR1_PLLSAIDIVQ_Msk;
pub const RCC_DCKCFGR1_PLLSAIDIVQ_0: u32 = 0x01 << RCC_DCKCFGR1_PLLSAIDIVQ_Pos;
pub const RCC_DCKCFGR1_PLLSAIDIVQ_1: u32 = 0x02 << RCC_DCKCFGR1_PLLSAIDIVQ_Pos;
pub const RCC_DCKCFGR1_PLLSAIDIVQ_2: u32 = 0x04 << RCC_DCKCFGR1_PLLSAIDIVQ_Pos;
pub const RCC_DCKCFGR1_PLLSAIDIVQ_3: u32 = 0x08 << RCC_DCKCFGR1_PLLSAIDIVQ_Pos;
pub const RCC_DCKCFGR1_PLLSAIDIVQ_4: u32 = 0x10 << RCC_DCKCFGR1_PLLSAIDIVQ_Pos;
pub const RCC_DCKCFGR1_PLLSAIDIVR_Pos: u32 = 16;
pub const RCC_DCKCFGR1_PLLSAIDIVR_Msk: u32 = 0x3 << RCC_DCKCFGR1_PLLSAIDIVR_Pos;
pub const RCC_DCKCFGR1_PLLSAIDIVR: u32 = RCC_DCKCFGR1_PLLSAIDIVR_Msk;
pub const RCC_DCKCFGR1_PLLSAIDIVR_0: u32 = 0x1 << RCC_DCKCFGR1_PLLSAIDIVR_Pos;
pub const RCC_DCKCFGR1_PLLSAIDIVR_1: u32 = 0x2 << RCC_DCKCFGR1_PLLSAIDIVR_Pos;
pub const RCC_DCKCFGR1_SAI1SEL_Pos: u32 = 20;
pub const RCC_DCKCFGR1_SAI1SEL_Msk: u32 = 0x3 << RCC_DCKCFGR1_SAI1SEL_Pos;
pub const RCC_DCKCFGR1_SAI1SEL: u32 = RCC_DCKCFGR1_SAI1SEL_Msk;
pub const RCC_DCKCFGR1_SAI1SEL_0: u32 = 0x1 << RCC_DCKCFGR1_SAI1SEL_Pos;
pub const RCC_DCKCFGR1_SAI1SEL_1: u32 = 0x2 << RCC_DCKCFGR1_SAI1SEL_Pos;
pub const RCC_DCKCFGR1_SAI2SEL_Pos: u32 = 22;
pub const RCC_DCKCFGR1_SAI2SEL_Msk: u32 = 0x3 << RCC_DCKCFGR1_SAI2SEL_Pos;
pub const RCC_DCKCFGR1_SAI2SEL: u32 = RCC_DCKCFGR1_SAI2SEL_Msk;
pub const RCC_DCKCFGR1_SAI2SEL_0: u32 = 0x1 << RCC_DCKCFGR1_SAI2SEL_Pos;
pub const RCC_DCKCFGR1_SAI2SEL_1: u32 = 0x2 << RCC_DCKCFGR1_SAI2SEL_Pos;
pub const RCC_DCKCFGR1_TIMPRE_Pos: u32 = 24;
pub const RCC_DCKCFGR1_TIMPRE_Msk: u32 = 0x1 << RCC_DCKCFGR1_TIMPRE_Pos;
pub const RCC_DCKCFGR1_TIMPRE: u32 = RCC_DCKCFGR1_TIMPRE_Msk;
pub const RCC_DCKCFGR2_USART1SEL_Pos: u32 = 0;
pub const RCC_DCKCFGR2_USART1SEL_Msk: u32 = 0x3 << RCC_DCKCFGR2_USART1SEL_Pos;
pub const RCC_DCKCFGR2_USART1SEL: u32 = RCC_DCKCFGR2_USART1SEL_Msk;
pub const RCC_DCKCFGR2_USART1SEL_0: u32 = 0x1 << RCC_DCKCFGR2_USART1SEL_Pos;
pub const RCC_DCKCFGR2_USART1SEL_1: u32 = 0x2 << RCC_DCKCFGR2_USART1SEL_Pos;
pub const RCC_DCKCFGR2_USART2SEL_Pos: u32 = 2;
pub const RCC_DCKCFGR2_USART2SEL_Msk: u32 = 0x3 << RCC_DCKCFGR2_USART2SEL_Pos;
pub const RCC_DCKCFGR2_USART2SEL: u32 = RCC_DCKCFGR2_USART2SEL_Msk;
pub const RCC_DCKCFGR2_USART2SEL_0: u32 = 0x1 << RCC_DCKCFGR2_USART2SEL_Pos;
pub const RCC_DCKCFGR2_USART2SEL_1: u32 = 0x2 << RCC_DCKCFGR2_USART2SEL_Pos;
pub const RCC_DCKCFGR2_USART3SEL_Pos: u32 = 4;
pub const RCC_DCKCFGR2_USART3SEL_Msk: u32 = 0x3 << RCC_DCKCFGR2_USART3SEL_Pos;
pub const RCC_DCKCFGR2_USART3SEL: u32 = RCC_DCKCFGR2_USART3SEL_Msk;
pub const RCC_DCKCFGR2_USART3SEL_0: u32 = 0x1 << RCC_DCKCFGR2_USART3SEL_Pos;
pub const RCC_DCKCFGR2_USART3SEL_1: u32 = 0x2 << RCC_DCKCFGR2_USART3SEL_Pos;
pub const RCC_DCKCFGR2_UART4SEL_Pos: u32 = 6;
pub const RCC_DCKCFGR2_UART4SEL_Msk: u32 = 0x3 << RCC_DCKCFGR2_UART4SEL_Pos;
pub const RCC_DCKCFGR2_UART4SEL: u32 = RCC_DCKCFGR2_UART4SEL_Msk;
pub const RCC_DCKCFGR2_UART4SEL_0: u32 = 0x1 << RCC_DCKCFGR2_UART4SEL_Pos;
pub const RCC_DCKCFGR2_UART4SEL_1: u32 = 0x2 << RCC_DCKCFGR2_UART4SEL_Pos;
pub const RCC_DCKCFGR2_UART5SEL_Pos: u32 = 8;
pub const RCC_DCKCFGR2_UART5SEL_Msk: u32 = 0x3 << RCC_DCKCFGR2_UART5SEL_Pos;
pub const RCC_DCKCFGR2_UART5SEL: u32 = RCC_DCKCFGR2_UART5SEL_Msk;
pub const RCC_DCKCFGR2_UART5SEL_0: u32 = 0x1 << RCC_DCKCFGR2_UART5SEL_Pos;
pub const RCC_DCKCFGR2_UART5SEL_1: u32 = 0x2 << RCC_DCKCFGR2_UART5SEL_Pos;
pub const RCC_DCKCFGR2_USART6SEL_Pos: u32 = 10;
pub const RCC_DCKCFGR2_USART6SEL_Msk: u32 = 0x3 << RCC_DCKCFGR2_USART6SEL_Pos;
pub const RCC_DCKCFGR2_USART6SEL: u32 = RCC_DCKCFGR2_USART6SEL_Msk;
pub const RCC_DCKCFGR2_USART6SEL_0: u32 = 0x1 << RCC_DCKCFGR2_USART6SEL_Pos;
pub const RCC_DCKCFGR2_USART6SEL_1: u32 = 0x2 << RCC_DCKCFGR2_USART6SEL_Pos;
pub const RCC_DCKCFGR2_UART7SEL_Pos: u32 = 12;
pub const RCC_DCKCFGR2_UART7SEL_Msk: u32 = 0x3 << RCC_DCKCFGR2_UART7SEL_Pos;
pub const RCC_DCKCFGR2_UART7SEL: u32 = RCC_DCKCFGR2_UART7SEL_Msk;
pub const RCC_DCKCFGR2_UART7SEL_0: u32 = 0x1 << RCC_DCKCFGR2_UART7SEL_Pos;
pub const RCC_DCKCFGR2_UART7SEL_1: u32 = 0x2 << RCC_DCKCFGR2_UART7SEL_Pos;
pub const RCC_DCKCFGR2_UART8SEL_Pos: u32 = 14;
pub const RCC_DCKCFGR2_UART8SEL_Msk: u32 = 0x3 << RCC_DCKCFGR2_UART8SEL_Pos;
pub const RCC_DCKCFGR2_UART8SEL: u32 = RCC_DCKCFGR2_UART8SEL_Msk;
pub const RCC_DCKCFGR2_UART8SEL_0: u32 = 0x1 << RCC_DCKCFGR2_UART8SEL_Pos;
pub const RCC_DCKCFGR2_UART8SEL_1: u32 = 0x2 << RCC_DCKCFGR2_UART8SEL_Pos;
pub const RCC_DCKCFGR2_I2C1SEL_Pos: u32 = 16;
pub const RCC_DCKCFGR2_I2C1SEL_Msk: u32 = 0x3 << RCC_DCKCFGR2_I2C1SEL_Pos;
pub const RCC_DCKCFGR2_I2C1SEL: u32 = RCC_DCKCFGR2_I2C1SEL_Msk;
pub const RCC_DCKCFGR2_I2C1SEL_0: u32 = 0x1 << RCC_DCKCFGR2_I2C1SEL_Pos;
pub const RCC_DCKCFGR2_I2C1SEL_1: u32 = 0x2 << RCC_DCKCFGR2_I2C1SEL_Pos;
pub const RCC_DCKCFGR2_I2C2SEL_Pos: u32 = 18;
pub const RCC_DCKCFGR2_I2C2SEL_Msk: u32 = 0x3 << RCC_DCKCFGR2_I2C2SEL_Pos;
pub const RCC_DCKCFGR2_I2C2SEL: u32 = RCC_DCKCFGR2_I2C2SEL_Msk;
pub const RCC_DCKCFGR2_I2C2SEL_0: u32 = 0x1 << RCC_DCKCFGR2_I2C2SEL_Pos;
pub const RCC_DCKCFGR2_I2C2SEL_1: u32 = 0x2 << RCC_DCKCFGR2_I2C2SEL_Pos;
pub const RCC_DCKCFGR2_I2C3SEL_Pos: u32 = 20;
pub const RCC_DCKCFGR2_I2C3SEL_Msk: u32 = 0x3 << RCC_DCKCFGR2_I2C3SEL_Pos;
pub const RCC_DCKCFGR2_I2C3SEL: u32 = RCC_DCKCFGR2_I2C3SEL_Msk;
pub const RCC_DCKCFGR2_I2C3SEL_0: u32 = 0x1 << RCC_DCKCFGR2_I2C3SEL_Pos;
pub const RCC_DCKCFGR2_I2C3SEL_1: u32 = 0x2 << RCC_DCKCFGR2_I2C3SEL_Pos;
pub const RCC_DCKCFGR2_I2C4SEL_Pos: u32 = 22;
pub const RCC_DCKCFGR2_I2C4SEL_Msk: u32 = 0x3 << RCC_DCKCFGR2_I2C4SEL_Pos;
pub const RCC_DCKCFGR2_I2C4SEL: u32 = RCC_DCKCFGR2_I2C4SEL_Msk;
pub const RCC_DCKCFGR2_I2C4SEL_0: u32 = 0x1 << RCC_DCKCFGR2_I2C4SEL_Pos;
pub const RCC_DCKCFGR2_I2C4SEL_1: u32 = 0x2 << RCC_DCKCFGR2_I2C4SEL_Pos;
pub const RCC_DCKCFGR2_LPTIM1SEL_Pos: u32 = 24;
pub const RCC_DCKCFGR2_LPTIM1SEL_Msk: u32 = 0x3 << RCC_DCKCFGR2_LPTIM1SEL_Pos;
pub const RCC_DCKCFGR2_LPTIM1SEL: u32 = RCC_DCKCFGR2_LPTIM1SEL_Msk;
pub const RCC_DCKCFGR2_LPTIM1SEL_0: u32 = 0x1 << RCC_DCKCFGR2_LPTIM1SEL_Pos;
pub const RCC_DCKCFGR2_LPTIM1SEL_1: u32 = 0x2 << RCC_DCKCFGR2_LPTIM1SEL_Pos;
pub const RCC_DCKCFGR2_CECSEL_Pos: u32 = 26;
pub const RCC_DCKCFGR2_CECSEL_Msk: u32 = 0x1 << RCC_DCKCFGR2_CECSEL_Pos;
pub const RCC_DCKCFGR2_CECSEL: u32 = RCC_DCKCFGR2_CECSEL_Msk;
pub const RCC_DCKCFGR2_CK48MSEL_Pos: u32 = 27;
pub const RCC_DCKCFGR2_CK48MSEL_Msk: u32 = 0x1 << RCC_DCKCFGR2_CK48MSEL_Pos;
pub const RCC_DCKCFGR2_CK48MSEL: u32 = RCC_DCKCFGR2_CK48MSEL_Msk;
pub const RCC_DCKCFGR2_SDMMC1SEL_Pos: u32 = 28;
pub const RCC_DCKCFGR2_SDMMC1SEL_Msk: u32 = 0x1 << RCC_DCKCFGR2_SDMMC1SEL_Pos;
pub const RCC_DCKCFGR2_SDMMC1SEL: u32 = RCC_DCKCFGR2_SDMMC1SEL_Msk;
pub const RNG_CR_RNGEN_Pos: u32 = 2;
pub const RNG_CR_RNGEN_Msk: u32 = 0x1 << RNG_CR_RNGEN_Pos;
pub const RNG_CR_RNGEN: u32 = RNG_CR_RNGEN_Msk;
pub const RNG_CR_IE_Pos: u32 = 3;
pub const RNG_CR_IE_Msk: u32 = 0x1 << RNG_CR_IE_Pos;
pub const RNG_CR_IE: u32 = RNG_CR_IE_Msk;
pub const RNG_SR_DRDY_Pos: u32 = 0;
pub const RNG_SR_DRDY_Msk: u32 = 0x1 << RNG_SR_DRDY_Pos;
pub const RNG_SR_DRDY: u32 = RNG_SR_DRDY_Msk;
pub const RNG_SR_CECS_Pos: u32 = 1;
pub const RNG_SR_CECS_Msk: u32 = 0x1 << RNG_SR_CECS_Pos;
pub const RNG_SR_CECS: u32 = RNG_SR_CECS_Msk;
pub const RNG_SR_SECS_Pos: u32 = 2;
pub const RNG_SR_SECS_Msk: u32 = 0x1 << RNG_SR_SECS_Pos;
pub const RNG_SR_SECS: u32 = RNG_SR_SECS_Msk;
pub const RNG_SR_CEIS_Pos: u32 = 5;
pub const RNG_SR_CEIS_Msk: u32 = 0x1 << RNG_SR_CEIS_Pos;
pub const RNG_SR_CEIS: u32 = RNG_SR_CEIS_Msk;
pub const RNG_SR_SEIS_Pos: u32 = 6;
pub const RNG_SR_SEIS_Msk: u32 = 0x1 << RNG_SR_SEIS_Pos;
pub const RNG_SR_SEIS: u32 = RNG_SR_SEIS_Msk;
pub const RTC_TR_PM_Pos: u32 = 22;
pub const RTC_TR_PM_Msk: u32 = 0x1 << RTC_TR_PM_Pos;
pub const RTC_TR_PM: u32 = RTC_TR_PM_Msk;
pub const RTC_TR_HT_Pos: u32 = 20;
pub const RTC_TR_HT_Msk: u32 = 0x3 << RTC_TR_HT_Pos;
pub const RTC_TR_HT: u32 = RTC_TR_HT_Msk;
pub const RTC_TR_HT_0: u32 = 0x1 << RTC_TR_HT_Pos;
pub const RTC_TR_HT_1: u32 = 0x2 << RTC_TR_HT_Pos;
pub const RTC_TR_HU_Pos: u32 = 16;
pub const RTC_TR_HU_Msk: u32 = 0xF << RTC_TR_HU_Pos;
pub const RTC_TR_HU: u32 = RTC_TR_HU_Msk;
pub const RTC_TR_HU_0: u32 = 0x1 << RTC_TR_HU_Pos;
pub const RTC_TR_HU_1: u32 = 0x2 << RTC_TR_HU_Pos;
pub const RTC_TR_HU_2: u32 = 0x4 << RTC_TR_HU_Pos;
pub const RTC_TR_HU_3: u32 = 0x8 << RTC_TR_HU_Pos;
pub const RTC_TR_MNT_Pos: u32 = 12;
pub const RTC_TR_MNT_Msk: u32 = 0x7 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNT: u32 = RTC_TR_MNT_Msk;
pub const RTC_TR_MNT_0: u32 = 0x1 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNT_1: u32 = 0x2 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNT_2: u32 = 0x4 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNU_Pos: u32 = 8;
pub const RTC_TR_MNU_Msk: u32 = 0xF << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU: u32 = RTC_TR_MNU_Msk;
pub const RTC_TR_MNU_0: u32 = 0x1 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU_1: u32 = 0x2 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU_2: u32 = 0x4 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU_3: u32 = 0x8 << RTC_TR_MNU_Pos;
pub const RTC_TR_ST_Pos: u32 = 4;
pub const RTC_TR_ST_Msk: u32 = 0x7 << RTC_TR_ST_Pos;
pub const RTC_TR_ST: u32 = RTC_TR_ST_Msk;
pub const RTC_TR_ST_0: u32 = 0x1 << RTC_TR_ST_Pos;
pub const RTC_TR_ST_1: u32 = 0x2 << RTC_TR_ST_Pos;
pub const RTC_TR_ST_2: u32 = 0x4 << RTC_TR_ST_Pos;
pub const RTC_TR_SU_Pos: u32 = 0;
pub const RTC_TR_SU_Msk: u32 = 0xF << RTC_TR_SU_Pos;
pub const RTC_TR_SU: u32 = RTC_TR_SU_Msk;
pub const RTC_TR_SU_0: u32 = 0x1 << RTC_TR_SU_Pos;
pub const RTC_TR_SU_1: u32 = 0x2 << RTC_TR_SU_Pos;
pub const RTC_TR_SU_2: u32 = 0x4 << RTC_TR_SU_Pos;
pub const RTC_TR_SU_3: u32 = 0x8 << RTC_TR_SU_Pos;
pub const RTC_DR_YT_Pos: u32 = 20;
pub const RTC_DR_YT_Msk: u32 = 0xF << RTC_DR_YT_Pos;
pub const RTC_DR_YT: u32 = RTC_DR_YT_Msk;
pub const RTC_DR_YT_0: u32 = 0x1 << RTC_DR_YT_Pos;
pub const RTC_DR_YT_1: u32 = 0x2 << RTC_DR_YT_Pos;
pub const RTC_DR_YT_2: u32 = 0x4 << RTC_DR_YT_Pos;
pub const RTC_DR_YT_3: u32 = 0x8 << RTC_DR_YT_Pos;
pub const RTC_DR_YU_Pos: u32 = 16;
pub const RTC_DR_YU_Msk: u32 = 0xF << RTC_DR_YU_Pos;
pub const RTC_DR_YU: u32 = RTC_DR_YU_Msk;
pub const RTC_DR_YU_0: u32 = 0x1 << RTC_DR_YU_Pos;
pub const RTC_DR_YU_1: u32 = 0x2 << RTC_DR_YU_Pos;
pub const RTC_DR_YU_2: u32 = 0x4 << RTC_DR_YU_Pos;
pub const RTC_DR_YU_3: u32 = 0x8 << RTC_DR_YU_Pos;
pub const RTC_DR_WDU_Pos: u32 = 13;
pub const RTC_DR_WDU_Msk: u32 = 0x7 << RTC_DR_WDU_Pos;
pub const RTC_DR_WDU: u32 = RTC_DR_WDU_Msk;
pub const RTC_DR_WDU_0: u32 = 0x1 << RTC_DR_WDU_Pos;
pub const RTC_DR_WDU_1: u32 = 0x2 << RTC_DR_WDU_Pos;
pub const RTC_DR_WDU_2: u32 = 0x4 << RTC_DR_WDU_Pos;
pub const RTC_DR_MT_Pos: u32 = 12;
pub const RTC_DR_MT_Msk: u32 = 0x1 << RTC_DR_MT_Pos;
pub const RTC_DR_MT: u32 = RTC_DR_MT_Msk;
pub const RTC_DR_MU_Pos: u32 = 8;
pub const RTC_DR_MU_Msk: u32 = 0xF << RTC_DR_MU_Pos;
pub const RTC_DR_MU: u32 = RTC_DR_MU_Msk;
pub const RTC_DR_MU_0: u32 = 0x1 << RTC_DR_MU_Pos;
pub const RTC_DR_MU_1: u32 = 0x2 << RTC_DR_MU_Pos;
pub const RTC_DR_MU_2: u32 = 0x4 << RTC_DR_MU_Pos;
pub const RTC_DR_MU_3: u32 = 0x8 << RTC_DR_MU_Pos;
pub const RTC_DR_DT_Pos: u32 = 4;
pub const RTC_DR_DT_Msk: u32 = 0x3 << RTC_DR_DT_Pos;
pub const RTC_DR_DT: u32 = RTC_DR_DT_Msk;
pub const RTC_DR_DT_0: u32 = 0x1 << RTC_DR_DT_Pos;
pub const RTC_DR_DT_1: u32 = 0x2 << RTC_DR_DT_Pos;
pub const RTC_DR_DU_Pos: u32 = 0;
pub const RTC_DR_DU_Msk: u32 = 0xF << RTC_DR_DU_Pos;
pub const RTC_DR_DU: u32 = RTC_DR_DU_Msk;
pub const RTC_DR_DU_0: u32 = 0x1 << RTC_DR_DU_Pos;
pub const RTC_DR_DU_1: u32 = 0x2 << RTC_DR_DU_Pos;
pub const RTC_DR_DU_2: u32 = 0x4 << RTC_DR_DU_Pos;
pub const RTC_DR_DU_3: u32 = 0x8 << RTC_DR_DU_Pos;
pub const RTC_CR_ITSE_Pos: u32 = 24;
pub const RTC_CR_ITSE_Msk: u32 = 0x1 << RTC_CR_ITSE_Pos;
pub const RTC_CR_ITSE: u32 = RTC_CR_ITSE_Msk;
pub const RTC_CR_COE_Pos: u32 = 23;
pub const RTC_CR_COE_Msk: u32 = 0x1 << RTC_CR_COE_Pos;
pub const RTC_CR_COE: u32 = RTC_CR_COE_Msk;
pub const RTC_CR_OSEL_Pos: u32 = 21;
pub const RTC_CR_OSEL_Msk: u32 = 0x3 << RTC_CR_OSEL_Pos;
pub const RTC_CR_OSEL: u32 = RTC_CR_OSEL_Msk;
pub const RTC_CR_OSEL_0: u32 = 0x1 << RTC_CR_OSEL_Pos;
pub const RTC_CR_OSEL_1: u32 = 0x2 << RTC_CR_OSEL_Pos;
pub const RTC_CR_POL_Pos: u32 = 20;
pub const RTC_CR_POL_Msk: u32 = 0x1 << RTC_CR_POL_Pos;
pub const RTC_CR_POL: u32 = RTC_CR_POL_Msk;
pub const RTC_CR_COSEL_Pos: u32 = 19;
pub const RTC_CR_COSEL_Msk: u32 = 0x1 << RTC_CR_COSEL_Pos;
pub const RTC_CR_COSEL: u32 = RTC_CR_COSEL_Msk;
pub const RTC_CR_BKP_Pos: u32 = 18;
pub const RTC_CR_BKP_Msk: u32 = 0x1 << RTC_CR_BKP_Pos;
pub const RTC_CR_BKP: u32 = RTC_CR_BKP_Msk;
pub const RTC_CR_SUB1H_Pos: u32 = 17;
pub const RTC_CR_SUB1H_Msk: u32 = 0x1 << RTC_CR_SUB1H_Pos;
pub const RTC_CR_SUB1H: u32 = RTC_CR_SUB1H_Msk;
pub const RTC_CR_ADD1H_Pos: u32 = 16;
pub const RTC_CR_ADD1H_Msk: u32 = 0x1 << RTC_CR_ADD1H_Pos;
pub const RTC_CR_ADD1H: u32 = RTC_CR_ADD1H_Msk;
pub const RTC_CR_TSIE_Pos: u32 = 15;
pub const RTC_CR_TSIE_Msk: u32 = 0x1 << RTC_CR_TSIE_Pos;
pub const RTC_CR_TSIE: u32 = RTC_CR_TSIE_Msk;
pub const RTC_CR_WUTIE_Pos: u32 = 14;
pub const RTC_CR_WUTIE_Msk: u32 = 0x1 << RTC_CR_WUTIE_Pos;
pub const RTC_CR_WUTIE: u32 = RTC_CR_WUTIE_Msk;
pub const RTC_CR_ALRBIE_Pos: u32 = 13;
pub const RTC_CR_ALRBIE_Msk: u32 = 0x1 << RTC_CR_ALRBIE_Pos;
pub const RTC_CR_ALRBIE: u32 = RTC_CR_ALRBIE_Msk;
pub const RTC_CR_ALRAIE_Pos: u32 = 12;
pub const RTC_CR_ALRAIE_Msk: u32 = 0x1 << RTC_CR_ALRAIE_Pos;
pub const RTC_CR_ALRAIE: u32 = RTC_CR_ALRAIE_Msk;
pub const RTC_CR_TSE_Pos: u32 = 11;
pub const RTC_CR_TSE_Msk: u32 = 0x1 << RTC_CR_TSE_Pos;
pub const RTC_CR_TSE: u32 = RTC_CR_TSE_Msk;
pub const RTC_CR_WUTE_Pos: u32 = 10;
pub const RTC_CR_WUTE_Msk: u32 = 0x1 << RTC_CR_WUTE_Pos;
pub const RTC_CR_WUTE: u32 = RTC_CR_WUTE_Msk;
pub const RTC_CR_ALRBE_Pos: u32 = 9;
pub const RTC_CR_ALRBE_Msk: u32 = 0x1 << RTC_CR_ALRBE_Pos;
pub const RTC_CR_ALRBE: u32 = RTC_CR_ALRBE_Msk;
pub const RTC_CR_ALRAE_Pos: u32 = 8;
pub const RTC_CR_ALRAE_Msk: u32 = 0x1 << RTC_CR_ALRAE_Pos;
pub const RTC_CR_ALRAE: u32 = RTC_CR_ALRAE_Msk;
pub const RTC_CR_FMT_Pos: u32 = 6;
pub const RTC_CR_FMT_Msk: u32 = 0x1 << RTC_CR_FMT_Pos;
pub const RTC_CR_FMT: u32 = RTC_CR_FMT_Msk;
pub const RTC_CR_BYPSHAD_Pos: u32 = 5;
pub const RTC_CR_BYPSHAD_Msk: u32 = 0x1 << RTC_CR_BYPSHAD_Pos;
pub const RTC_CR_BYPSHAD: u32 = RTC_CR_BYPSHAD_Msk;
pub const RTC_CR_REFCKON_Pos: u32 = 4;
pub const RTC_CR_REFCKON_Msk: u32 = 0x1 << RTC_CR_REFCKON_Pos;
pub const RTC_CR_REFCKON: u32 = RTC_CR_REFCKON_Msk;
pub const RTC_CR_TSEDGE_Pos: u32 = 3;
pub const RTC_CR_TSEDGE_Msk: u32 = 0x1 << RTC_CR_TSEDGE_Pos;
pub const RTC_CR_TSEDGE: u32 = RTC_CR_TSEDGE_Msk;
pub const RTC_CR_WUCKSEL_Pos: u32 = 0;
pub const RTC_CR_WUCKSEL_Msk: u32 = 0x7 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_WUCKSEL: u32 = RTC_CR_WUCKSEL_Msk;
pub const RTC_CR_WUCKSEL_0: u32 = 0x1 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_WUCKSEL_1: u32 = 0x2 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_WUCKSEL_2: u32 = 0x4 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_BCK: u32 = RTC_CR_BKP;
pub const RTC_ISR_ITSF_Pos: u32 = 17;
pub const RTC_ISR_ITSF_Msk: u32 = 0x1 << RTC_ISR_ITSF_Pos;
pub const RTC_ISR_ITSF: u32 = RTC_ISR_ITSF_Msk;
pub const RTC_ISR_RECALPF_Pos: u32 = 16;
pub const RTC_ISR_RECALPF_Msk: u32 = 0x1 << RTC_ISR_RECALPF_Pos;
pub const RTC_ISR_RECALPF: u32 = RTC_ISR_RECALPF_Msk;
pub const RTC_ISR_TAMP3F_Pos: u32 = 15;
pub const RTC_ISR_TAMP3F_Msk: u32 = 0x1 << RTC_ISR_TAMP3F_Pos;
pub const RTC_ISR_TAMP3F: u32 = RTC_ISR_TAMP3F_Msk;
pub const RTC_ISR_TAMP2F_Pos: u32 = 14;
pub const RTC_ISR_TAMP2F_Msk: u32 = 0x1 << RTC_ISR_TAMP2F_Pos;
pub const RTC_ISR_TAMP2F: u32 = RTC_ISR_TAMP2F_Msk;
pub const RTC_ISR_TAMP1F_Pos: u32 = 13;
pub const RTC_ISR_TAMP1F_Msk: u32 = 0x1 << RTC_ISR_TAMP1F_Pos;
pub const RTC_ISR_TAMP1F: u32 = RTC_ISR_TAMP1F_Msk;
pub const RTC_ISR_TSOVF_Pos: u32 = 12;
pub const RTC_ISR_TSOVF_Msk: u32 = 0x1 << RTC_ISR_TSOVF_Pos;
pub const RTC_ISR_TSOVF: u32 = RTC_ISR_TSOVF_Msk;
pub const RTC_ISR_TSF_Pos: u32 = 11;
pub const RTC_ISR_TSF_Msk: u32 = 0x1 << RTC_ISR_TSF_Pos;
pub const RTC_ISR_TSF: u32 = RTC_ISR_TSF_Msk;
pub const RTC_ISR_WUTF_Pos: u32 = 10;
pub const RTC_ISR_WUTF_Msk: u32 = 0x1 << RTC_ISR_WUTF_Pos;
pub const RTC_ISR_WUTF: u32 = RTC_ISR_WUTF_Msk;
pub const RTC_ISR_ALRBF_Pos: u32 = 9;
pub const RTC_ISR_ALRBF_Msk: u32 = 0x1 << RTC_ISR_ALRBF_Pos;
pub const RTC_ISR_ALRBF: u32 = RTC_ISR_ALRBF_Msk;
pub const RTC_ISR_ALRAF_Pos: u32 = 8;
pub const RTC_ISR_ALRAF_Msk: u32 = 0x1 << RTC_ISR_ALRAF_Pos;
pub const RTC_ISR_ALRAF: u32 = RTC_ISR_ALRAF_Msk;
pub const RTC_ISR_INIT_Pos: u32 = 7;
pub const RTC_ISR_INIT_Msk: u32 = 0x1 << RTC_ISR_INIT_Pos;
pub const RTC_ISR_INIT: u32 = RTC_ISR_INIT_Msk;
pub const RTC_ISR_INITF_Pos: u32 = 6;
pub const RTC_ISR_INITF_Msk: u32 = 0x1 << RTC_ISR_INITF_Pos;
pub const RTC_ISR_INITF: u32 = RTC_ISR_INITF_Msk;
pub const RTC_ISR_RSF_Pos: u32 = 5;
pub const RTC_ISR_RSF_Msk: u32 = 0x1 << RTC_ISR_RSF_Pos;
pub const RTC_ISR_RSF: u32 = RTC_ISR_RSF_Msk;
pub const RTC_ISR_INITS_Pos: u32 = 4;
pub const RTC_ISR_INITS_Msk: u32 = 0x1 << RTC_ISR_INITS_Pos;
pub const RTC_ISR_INITS: u32 = RTC_ISR_INITS_Msk;
pub const RTC_ISR_SHPF_Pos: u32 = 3;
pub const RTC_ISR_SHPF_Msk: u32 = 0x1 << RTC_ISR_SHPF_Pos;
pub const RTC_ISR_SHPF: u32 = RTC_ISR_SHPF_Msk;
pub const RTC_ISR_WUTWF_Pos: u32 = 2;
pub const RTC_ISR_WUTWF_Msk: u32 = 0x1 << RTC_ISR_WUTWF_Pos;
pub const RTC_ISR_WUTWF: u32 = RTC_ISR_WUTWF_Msk;
pub const RTC_ISR_ALRBWF_Pos: u32 = 1;
pub const RTC_ISR_ALRBWF_Msk: u32 = 0x1 << RTC_ISR_ALRBWF_Pos;
pub const RTC_ISR_ALRBWF: u32 = RTC_ISR_ALRBWF_Msk;
pub const RTC_ISR_ALRAWF_Pos: u32 = 0;
pub const RTC_ISR_ALRAWF_Msk: u32 = 0x1 << RTC_ISR_ALRAWF_Pos;
pub const RTC_ISR_ALRAWF: u32 = RTC_ISR_ALRAWF_Msk;
pub const RTC_PRER_PREDIV_A_Pos: u32 = 16;
pub const RTC_PRER_PREDIV_A_Msk: u32 = 0x7F << RTC_PRER_PREDIV_A_Pos;
pub const RTC_PRER_PREDIV_A: u32 = RTC_PRER_PREDIV_A_Msk;
pub const RTC_PRER_PREDIV_S_Pos: u32 = 0;
pub const RTC_PRER_PREDIV_S_Msk: u32 = 0x7FFF << RTC_PRER_PREDIV_S_Pos;
pub const RTC_PRER_PREDIV_S: u32 = RTC_PRER_PREDIV_S_Msk;
pub const RTC_WUTR_WUT_Pos: u32 = 0;
pub const RTC_WUTR_WUT_Msk: u32 = 0xFFFF << RTC_WUTR_WUT_Pos;
pub const RTC_WUTR_WUT: u32 = RTC_WUTR_WUT_Msk;
pub const RTC_ALRMAR_MSK4_Pos: u32 = 31;
pub const RTC_ALRMAR_MSK4_Msk: u32 = 0x1 << RTC_ALRMAR_MSK4_Pos;
pub const RTC_ALRMAR_MSK4: u32 = RTC_ALRMAR_MSK4_Msk;
pub const RTC_ALRMAR_WDSEL_Pos: u32 = 30;
pub const RTC_ALRMAR_WDSEL_Msk: u32 = 0x1 << RTC_ALRMAR_WDSEL_Pos;
pub const RTC_ALRMAR_WDSEL: u32 = RTC_ALRMAR_WDSEL_Msk;
pub const RTC_ALRMAR_DT_Pos: u32 = 28;
pub const RTC_ALRMAR_DT_Msk: u32 = 0x3 << RTC_ALRMAR_DT_Pos;
pub const RTC_ALRMAR_DT: u32 = RTC_ALRMAR_DT_Msk;
pub const RTC_ALRMAR_DT_0: u32 = 0x1 << RTC_ALRMAR_DT_Pos;
pub const RTC_ALRMAR_DT_1: u32 = 0x2 << RTC_ALRMAR_DT_Pos;
pub const RTC_ALRMAR_DU_Pos: u32 = 24;
pub const RTC_ALRMAR_DU_Msk: u32 = 0xF << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU: u32 = RTC_ALRMAR_DU_Msk;
pub const RTC_ALRMAR_DU_0: u32 = 0x1 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU_1: u32 = 0x2 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU_2: u32 = 0x4 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU_3: u32 = 0x8 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_MSK3_Pos: u32 = 23;
pub const RTC_ALRMAR_MSK3_Msk: u32 = 0x1 << RTC_ALRMAR_MSK3_Pos;
pub const RTC_ALRMAR_MSK3: u32 = RTC_ALRMAR_MSK3_Msk;
pub const RTC_ALRMAR_PM_Pos: u32 = 22;
pub const RTC_ALRMAR_PM_Msk: u32 = 0x1 << RTC_ALRMAR_PM_Pos;
pub const RTC_ALRMAR_PM: u32 = RTC_ALRMAR_PM_Msk;
pub const RTC_ALRMAR_HT_Pos: u32 = 20;
pub const RTC_ALRMAR_HT_Msk: u32 = 0x3 << RTC_ALRMAR_HT_Pos;
pub const RTC_ALRMAR_HT: u32 = RTC_ALRMAR_HT_Msk;
pub const RTC_ALRMAR_HT_0: u32 = 0x1 << RTC_ALRMAR_HT_Pos;
pub const RTC_ALRMAR_HT_1: u32 = 0x2 << RTC_ALRMAR_HT_Pos;
pub const RTC_ALRMAR_HU_Pos: u32 = 16;
pub const RTC_ALRMAR_HU_Msk: u32 = 0xF << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU: u32 = RTC_ALRMAR_HU_Msk;
pub const RTC_ALRMAR_HU_0: u32 = 0x1 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU_1: u32 = 0x2 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU_2: u32 = 0x4 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU_3: u32 = 0x8 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_MSK2_Pos: u32 = 15;
pub const RTC_ALRMAR_MSK2_Msk: u32 = 0x1 << RTC_ALRMAR_MSK2_Pos;
pub const RTC_ALRMAR_MSK2: u32 = RTC_ALRMAR_MSK2_Msk;
pub const RTC_ALRMAR_MNT_Pos: u32 = 12;
pub const RTC_ALRMAR_MNT_Msk: u32 = 0x7 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNT: u32 = RTC_ALRMAR_MNT_Msk;
pub const RTC_ALRMAR_MNT_0: u32 = 0x1 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNT_1: u32 = 0x2 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNT_2: u32 = 0x4 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNU_Pos: u32 = 8;
pub const RTC_ALRMAR_MNU_Msk: u32 = 0xF << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU: u32 = RTC_ALRMAR_MNU_Msk;
pub const RTC_ALRMAR_MNU_0: u32 = 0x1 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU_1: u32 = 0x2 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU_2: u32 = 0x4 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU_3: u32 = 0x8 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MSK1_Pos: u32 = 7;
pub const RTC_ALRMAR_MSK1_Msk: u32 = 0x1 << RTC_ALRMAR_MSK1_Pos;
pub const RTC_ALRMAR_MSK1: u32 = RTC_ALRMAR_MSK1_Msk;
pub const RTC_ALRMAR_ST_Pos: u32 = 4;
pub const RTC_ALRMAR_ST_Msk: u32 = 0x7 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_ST: u32 = RTC_ALRMAR_ST_Msk;
pub const RTC_ALRMAR_ST_0: u32 = 0x1 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_ST_1: u32 = 0x2 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_ST_2: u32 = 0x4 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_SU_Pos: u32 = 0;
pub const RTC_ALRMAR_SU_Msk: u32 = 0xF << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU: u32 = RTC_ALRMAR_SU_Msk;
pub const RTC_ALRMAR_SU_0: u32 = 0x1 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU_1: u32 = 0x2 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU_2: u32 = 0x4 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU_3: u32 = 0x8 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMBR_MSK4_Pos: u32 = 31;
pub const RTC_ALRMBR_MSK4_Msk: u32 = 0x1 << RTC_ALRMBR_MSK4_Pos;
pub const RTC_ALRMBR_MSK4: u32 = RTC_ALRMBR_MSK4_Msk;
pub const RTC_ALRMBR_WDSEL_Pos: u32 = 30;
pub const RTC_ALRMBR_WDSEL_Msk: u32 = 0x1 << RTC_ALRMBR_WDSEL_Pos;
pub const RTC_ALRMBR_WDSEL: u32 = RTC_ALRMBR_WDSEL_Msk;
pub const RTC_ALRMBR_DT_Pos: u32 = 28;
pub const RTC_ALRMBR_DT_Msk: u32 = 0x3 << RTC_ALRMBR_DT_Pos;
pub const RTC_ALRMBR_DT: u32 = RTC_ALRMBR_DT_Msk;
pub const RTC_ALRMBR_DT_0: u32 = 0x1 << RTC_ALRMBR_DT_Pos;
pub const RTC_ALRMBR_DT_1: u32 = 0x2 << RTC_ALRMBR_DT_Pos;
pub const RTC_ALRMBR_DU_Pos: u32 = 24;
pub const RTC_ALRMBR_DU_Msk: u32 = 0xF << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU: u32 = RTC_ALRMBR_DU_Msk;
pub const RTC_ALRMBR_DU_0: u32 = 0x1 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU_1: u32 = 0x2 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU_2: u32 = 0x4 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU_3: u32 = 0x8 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_MSK3_Pos: u32 = 23;
pub const RTC_ALRMBR_MSK3_Msk: u32 = 0x1 << RTC_ALRMBR_MSK3_Pos;
pub const RTC_ALRMBR_MSK3: u32 = RTC_ALRMBR_MSK3_Msk;
pub const RTC_ALRMBR_PM_Pos: u32 = 22;
pub const RTC_ALRMBR_PM_Msk: u32 = 0x1 << RTC_ALRMBR_PM_Pos;
pub const RTC_ALRMBR_PM: u32 = RTC_ALRMBR_PM_Msk;
pub const RTC_ALRMBR_HT_Pos: u32 = 20;
pub const RTC_ALRMBR_HT_Msk: u32 = 0x3 << RTC_ALRMBR_HT_Pos;
pub const RTC_ALRMBR_HT: u32 = RTC_ALRMBR_HT_Msk;
pub const RTC_ALRMBR_HT_0: u32 = 0x1 << RTC_ALRMBR_HT_Pos;
pub const RTC_ALRMBR_HT_1: u32 = 0x2 << RTC_ALRMBR_HT_Pos;
pub const RTC_ALRMBR_HU_Pos: u32 = 16;
pub const RTC_ALRMBR_HU_Msk: u32 = 0xF << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU: u32 = RTC_ALRMBR_HU_Msk;
pub const RTC_ALRMBR_HU_0: u32 = 0x1 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU_1: u32 = 0x2 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU_2: u32 = 0x4 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU_3: u32 = 0x8 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_MSK2_Pos: u32 = 15;
pub const RTC_ALRMBR_MSK2_Msk: u32 = 0x1 << RTC_ALRMBR_MSK2_Pos;
pub const RTC_ALRMBR_MSK2: u32 = RTC_ALRMBR_MSK2_Msk;
pub const RTC_ALRMBR_MNT_Pos: u32 = 12;
pub const RTC_ALRMBR_MNT_Msk: u32 = 0x7 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNT: u32 = RTC_ALRMBR_MNT_Msk;
pub const RTC_ALRMBR_MNT_0: u32 = 0x1 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNT_1: u32 = 0x2 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNT_2: u32 = 0x4 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNU_Pos: u32 = 8;
pub const RTC_ALRMBR_MNU_Msk: u32 = 0xF << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU: u32 = RTC_ALRMBR_MNU_Msk;
pub const RTC_ALRMBR_MNU_0: u32 = 0x1 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU_1: u32 = 0x2 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU_2: u32 = 0x4 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU_3: u32 = 0x8 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MSK1_Pos: u32 = 7;
pub const RTC_ALRMBR_MSK1_Msk: u32 = 0x1 << RTC_ALRMBR_MSK1_Pos;
pub const RTC_ALRMBR_MSK1: u32 = RTC_ALRMBR_MSK1_Msk;
pub const RTC_ALRMBR_ST_Pos: u32 = 4;
pub const RTC_ALRMBR_ST_Msk: u32 = 0x7 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_ST: u32 = RTC_ALRMBR_ST_Msk;
pub const RTC_ALRMBR_ST_0: u32 = 0x1 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_ST_1: u32 = 0x2 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_ST_2: u32 = 0x4 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_SU_Pos: u32 = 0;
pub const RTC_ALRMBR_SU_Msk: u32 = 0xF << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU: u32 = RTC_ALRMBR_SU_Msk;
pub const RTC_ALRMBR_SU_0: u32 = 0x1 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU_1: u32 = 0x2 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU_2: u32 = 0x4 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU_3: u32 = 0x8 << RTC_ALRMBR_SU_Pos;
pub const RTC_WPR_KEY_Pos: u32 = 0;
pub const RTC_WPR_KEY_Msk: u32 = 0xFF << RTC_WPR_KEY_Pos;
pub const RTC_WPR_KEY: u32 = RTC_WPR_KEY_Msk;
pub const RTC_SSR_SS_Pos: u32 = 0;
pub const RTC_SSR_SS_Msk: u32 = 0xFFFF << RTC_SSR_SS_Pos;
pub const RTC_SSR_SS: u32 = RTC_SSR_SS_Msk;
pub const RTC_SHIFTR_SUBFS_Pos: u32 = 0;
pub const RTC_SHIFTR_SUBFS_Msk: u32 = 0x7FFF << RTC_SHIFTR_SUBFS_Pos;
pub const RTC_SHIFTR_SUBFS: u32 = RTC_SHIFTR_SUBFS_Msk;
pub const RTC_SHIFTR_ADD1S_Pos: u32 = 31;
pub const RTC_SHIFTR_ADD1S_Msk: u32 = 0x1 << RTC_SHIFTR_ADD1S_Pos;
pub const RTC_SHIFTR_ADD1S: u32 = RTC_SHIFTR_ADD1S_Msk;
pub const RTC_TSTR_PM_Pos: u32 = 22;
pub const RTC_TSTR_PM_Msk: u32 = 0x1 << RTC_TSTR_PM_Pos;
pub const RTC_TSTR_PM: u32 = RTC_TSTR_PM_Msk;
pub const RTC_TSTR_HT_Pos: u32 = 20;
pub const RTC_TSTR_HT_Msk: u32 = 0x3 << RTC_TSTR_HT_Pos;
pub const RTC_TSTR_HT: u32 = RTC_TSTR_HT_Msk;
pub const RTC_TSTR_HT_0: u32 = 0x1 << RTC_TSTR_HT_Pos;
pub const RTC_TSTR_HT_1: u32 = 0x2 << RTC_TSTR_HT_Pos;
pub const RTC_TSTR_HU_Pos: u32 = 16;
pub const RTC_TSTR_HU_Msk: u32 = 0xF << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU: u32 = RTC_TSTR_HU_Msk;
pub const RTC_TSTR_HU_0: u32 = 0x1 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU_1: u32 = 0x2 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU_2: u32 = 0x4 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU_3: u32 = 0x8 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_MNT_Pos: u32 = 12;
pub const RTC_TSTR_MNT_Msk: u32 = 0x7 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNT: u32 = RTC_TSTR_MNT_Msk;
pub const RTC_TSTR_MNT_0: u32 = 0x1 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNT_1: u32 = 0x2 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNT_2: u32 = 0x4 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNU_Pos: u32 = 8;
pub const RTC_TSTR_MNU_Msk: u32 = 0xF << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU: u32 = RTC_TSTR_MNU_Msk;
pub const RTC_TSTR_MNU_0: u32 = 0x1 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU_1: u32 = 0x2 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU_2: u32 = 0x4 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU_3: u32 = 0x8 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_ST_Pos: u32 = 4;
pub const RTC_TSTR_ST_Msk: u32 = 0x7 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_ST: u32 = RTC_TSTR_ST_Msk;
pub const RTC_TSTR_ST_0: u32 = 0x1 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_ST_1: u32 = 0x2 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_ST_2: u32 = 0x4 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_SU_Pos: u32 = 0;
pub const RTC_TSTR_SU_Msk: u32 = 0xF << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU: u32 = RTC_TSTR_SU_Msk;
pub const RTC_TSTR_SU_0: u32 = 0x1 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU_1: u32 = 0x2 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU_2: u32 = 0x4 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU_3: u32 = 0x8 << RTC_TSTR_SU_Pos;
pub const RTC_TSDR_WDU_Pos: u32 = 13;
pub const RTC_TSDR_WDU_Msk: u32 = 0x7 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_WDU: u32 = RTC_TSDR_WDU_Msk;
pub const RTC_TSDR_WDU_0: u32 = 0x1 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_WDU_1: u32 = 0x2 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_WDU_2: u32 = 0x4 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_MT_Pos: u32 = 12;
pub const RTC_TSDR_MT_Msk: u32 = 0x1 << RTC_TSDR_MT_Pos;
pub const RTC_TSDR_MT: u32 = RTC_TSDR_MT_Msk;
pub const RTC_TSDR_MU_Pos: u32 = 8;
pub const RTC_TSDR_MU_Msk: u32 = 0xF << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU: u32 = RTC_TSDR_MU_Msk;
pub const RTC_TSDR_MU_0: u32 = 0x1 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU_1: u32 = 0x2 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU_2: u32 = 0x4 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU_3: u32 = 0x8 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_DT_Pos: u32 = 4;
pub const RTC_TSDR_DT_Msk: u32 = 0x3 << RTC_TSDR_DT_Pos;
pub const RTC_TSDR_DT: u32 = RTC_TSDR_DT_Msk;
pub const RTC_TSDR_DT_0: u32 = 0x1 << RTC_TSDR_DT_Pos;
pub const RTC_TSDR_DT_1: u32 = 0x2 << RTC_TSDR_DT_Pos;
pub const RTC_TSDR_DU_Pos: u32 = 0;
pub const RTC_TSDR_DU_Msk: u32 = 0xF << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU: u32 = RTC_TSDR_DU_Msk;
pub const RTC_TSDR_DU_0: u32 = 0x1 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU_1: u32 = 0x2 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU_2: u32 = 0x4 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU_3: u32 = 0x8 << RTC_TSDR_DU_Pos;
pub const RTC_TSSSR_SS_Pos: u32 = 0;
pub const RTC_TSSSR_SS_Msk: u32 = 0xFFFF << RTC_TSSSR_SS_Pos;
pub const RTC_TSSSR_SS: u32 = RTC_TSSSR_SS_Msk;
pub const RTC_CALR_CALP_Pos: u32 = 15;
pub const RTC_CALR_CALP_Msk: u32 = 0x1 << RTC_CALR_CALP_Pos;
pub const RTC_CALR_CALP: u32 = RTC_CALR_CALP_Msk;
pub const RTC_CALR_CALW8_Pos: u32 = 14;
pub const RTC_CALR_CALW8_Msk: u32 = 0x1 << RTC_CALR_CALW8_Pos;
pub const RTC_CALR_CALW8: u32 = RTC_CALR_CALW8_Msk;
pub const RTC_CALR_CALW16_Pos: u32 = 13;
pub const RTC_CALR_CALW16_Msk: u32 = 0x1 << RTC_CALR_CALW16_Pos;
pub const RTC_CALR_CALW16: u32 = RTC_CALR_CALW16_Msk;
pub const RTC_CALR_CALM_Pos: u32 = 0;
pub const RTC_CALR_CALM_Msk: u32 = 0x1FF << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM: u32 = RTC_CALR_CALM_Msk;
pub const RTC_CALR_CALM_0: u32 = 0x001 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_1: u32 = 0x002 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_2: u32 = 0x004 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_3: u32 = 0x008 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_4: u32 = 0x010 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_5: u32 = 0x020 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_6: u32 = 0x040 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_7: u32 = 0x080 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_8: u32 = 0x100 << RTC_CALR_CALM_Pos;
pub const RTC_TAMPCR_TAMP3MF_Pos: u32 = 24;
pub const RTC_TAMPCR_TAMP3MF_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP3MF_Pos;
pub const RTC_TAMPCR_TAMP3MF: u32 = RTC_TAMPCR_TAMP3MF_Msk;
pub const RTC_TAMPCR_TAMP3NOERASE_Pos: u32 = 23;
pub const RTC_TAMPCR_TAMP3NOERASE_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP3NOERASE_Pos;
pub const RTC_TAMPCR_TAMP3NOERASE: u32 = RTC_TAMPCR_TAMP3NOERASE_Msk;
pub const RTC_TAMPCR_TAMP3IE_Pos: u32 = 22;
pub const RTC_TAMPCR_TAMP3IE_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP3IE_Pos;
pub const RTC_TAMPCR_TAMP3IE: u32 = RTC_TAMPCR_TAMP3IE_Msk;
pub const RTC_TAMPCR_TAMP2MF_Pos: u32 = 21;
pub const RTC_TAMPCR_TAMP2MF_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP2MF_Pos;
pub const RTC_TAMPCR_TAMP2MF: u32 = RTC_TAMPCR_TAMP2MF_Msk;
pub const RTC_TAMPCR_TAMP2NOERASE_Pos: u32 = 20;
pub const RTC_TAMPCR_TAMP2NOERASE_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP2NOERASE_Pos;
pub const RTC_TAMPCR_TAMP2NOERASE: u32 = RTC_TAMPCR_TAMP2NOERASE_Msk;
pub const RTC_TAMPCR_TAMP2IE_Pos: u32 = 19;
pub const RTC_TAMPCR_TAMP2IE_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP2IE_Pos;
pub const RTC_TAMPCR_TAMP2IE: u32 = RTC_TAMPCR_TAMP2IE_Msk;
pub const RTC_TAMPCR_TAMP1MF_Pos: u32 = 18;
pub const RTC_TAMPCR_TAMP1MF_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP1MF_Pos;
pub const RTC_TAMPCR_TAMP1MF: u32 = RTC_TAMPCR_TAMP1MF_Msk;
pub const RTC_TAMPCR_TAMP1NOERASE_Pos: u32 = 17;
pub const RTC_TAMPCR_TAMP1NOERASE_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP1NOERASE_Pos;
pub const RTC_TAMPCR_TAMP1NOERASE: u32 = RTC_TAMPCR_TAMP1NOERASE_Msk;
pub const RTC_TAMPCR_TAMP1IE_Pos: u32 = 16;
pub const RTC_TAMPCR_TAMP1IE_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP1IE_Pos;
pub const RTC_TAMPCR_TAMP1IE: u32 = RTC_TAMPCR_TAMP1IE_Msk;
pub const RTC_TAMPCR_TAMPPUDIS_Pos: u32 = 15;
pub const RTC_TAMPCR_TAMPPUDIS_Msk: u32 = 0x1 << RTC_TAMPCR_TAMPPUDIS_Pos;
pub const RTC_TAMPCR_TAMPPUDIS: u32 = RTC_TAMPCR_TAMPPUDIS_Msk;
pub const RTC_TAMPCR_TAMPPRCH_Pos: u32 = 13;
pub const RTC_TAMPCR_TAMPPRCH_Msk: u32 = 0x3 << RTC_TAMPCR_TAMPPRCH_Pos;
pub const RTC_TAMPCR_TAMPPRCH: u32 = RTC_TAMPCR_TAMPPRCH_Msk;
pub const RTC_TAMPCR_TAMPPRCH_0: u32 = 0x1 << RTC_TAMPCR_TAMPPRCH_Pos;
pub const RTC_TAMPCR_TAMPPRCH_1: u32 = 0x2 << RTC_TAMPCR_TAMPPRCH_Pos;
pub const RTC_TAMPCR_TAMPFLT_Pos: u32 = 11;
pub const RTC_TAMPCR_TAMPFLT_Msk: u32 = 0x3 << RTC_TAMPCR_TAMPFLT_Pos;
pub const RTC_TAMPCR_TAMPFLT: u32 = RTC_TAMPCR_TAMPFLT_Msk;
pub const RTC_TAMPCR_TAMPFLT_0: u32 = 0x1 << RTC_TAMPCR_TAMPFLT_Pos;
pub const RTC_TAMPCR_TAMPFLT_1: u32 = 0x2 << RTC_TAMPCR_TAMPFLT_Pos;
pub const RTC_TAMPCR_TAMPFREQ_Pos: u32 = 8;
pub const RTC_TAMPCR_TAMPFREQ_Msk: u32 = 0x7 << RTC_TAMPCR_TAMPFREQ_Pos;
pub const RTC_TAMPCR_TAMPFREQ: u32 = RTC_TAMPCR_TAMPFREQ_Msk;
pub const RTC_TAMPCR_TAMPFREQ_0: u32 = 0x1 << RTC_TAMPCR_TAMPFREQ_Pos;
pub const RTC_TAMPCR_TAMPFREQ_1: u32 = 0x2 << RTC_TAMPCR_TAMPFREQ_Pos;
pub const RTC_TAMPCR_TAMPFREQ_2: u32 = 0x4 << RTC_TAMPCR_TAMPFREQ_Pos;
pub const RTC_TAMPCR_TAMPTS_Pos: u32 = 7;
pub const RTC_TAMPCR_TAMPTS_Msk: u32 = 0x1 << RTC_TAMPCR_TAMPTS_Pos;
pub const RTC_TAMPCR_TAMPTS: u32 = RTC_TAMPCR_TAMPTS_Msk;
pub const RTC_TAMPCR_TAMP3TRG_Pos: u32 = 6;
pub const RTC_TAMPCR_TAMP3TRG_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP3TRG_Pos;
pub const RTC_TAMPCR_TAMP3TRG: u32 = RTC_TAMPCR_TAMP3TRG_Msk;
pub const RTC_TAMPCR_TAMP3E_Pos: u32 = 5;
pub const RTC_TAMPCR_TAMP3E_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP3E_Pos;
pub const RTC_TAMPCR_TAMP3E: u32 = RTC_TAMPCR_TAMP3E_Msk;
pub const RTC_TAMPCR_TAMP2TRG_Pos: u32 = 4;
pub const RTC_TAMPCR_TAMP2TRG_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP2TRG_Pos;
pub const RTC_TAMPCR_TAMP2TRG: u32 = RTC_TAMPCR_TAMP2TRG_Msk;
pub const RTC_TAMPCR_TAMP2E_Pos: u32 = 3;
pub const RTC_TAMPCR_TAMP2E_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP2E_Pos;
pub const RTC_TAMPCR_TAMP2E: u32 = RTC_TAMPCR_TAMP2E_Msk;
pub const RTC_TAMPCR_TAMPIE_Pos: u32 = 2;
pub const RTC_TAMPCR_TAMPIE_Msk: u32 = 0x1 << RTC_TAMPCR_TAMPIE_Pos;
pub const RTC_TAMPCR_TAMPIE: u32 = RTC_TAMPCR_TAMPIE_Msk;
pub const RTC_TAMPCR_TAMP1TRG_Pos: u32 = 1;
pub const RTC_TAMPCR_TAMP1TRG_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP1TRG_Pos;
pub const RTC_TAMPCR_TAMP1TRG: u32 = RTC_TAMPCR_TAMP1TRG_Msk;
pub const RTC_TAMPCR_TAMP1E_Pos: u32 = 0;
pub const RTC_TAMPCR_TAMP1E_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP1E_Pos;
pub const RTC_TAMPCR_TAMP1E: u32 = RTC_TAMPCR_TAMP1E_Msk;
pub const RTC_TAMPCR_TAMP3_TRG: u32 = RTC_TAMPCR_TAMP3TRG;
pub const RTC_TAMPCR_TAMP2_TRG: u32 = RTC_TAMPCR_TAMP2TRG;
pub const RTC_TAMPCR_TAMP1_TRG: u32 = RTC_TAMPCR_TAMP1TRG;
pub const RTC_ALRMASSR_MASKSS_Pos: u32 = 24;
pub const RTC_ALRMASSR_MASKSS_Msk: u32 = 0xF << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS: u32 = RTC_ALRMASSR_MASKSS_Msk;
pub const RTC_ALRMASSR_MASKSS_0: u32 = 0x1 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_1: u32 = 0x2 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_2: u32 = 0x4 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_3: u32 = 0x8 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_SS_Pos: u32 = 0;
pub const RTC_ALRMASSR_SS_Msk: u32 = 0x7FFF << RTC_ALRMASSR_SS_Pos;
pub const RTC_ALRMASSR_SS: u32 = RTC_ALRMASSR_SS_Msk;
pub const RTC_ALRMBSSR_MASKSS_Pos: u32 = 24;
pub const RTC_ALRMBSSR_MASKSS_Msk: u32 = 0xF << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS: u32 = RTC_ALRMBSSR_MASKSS_Msk;
pub const RTC_ALRMBSSR_MASKSS_0: u32 = 0x1 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_1: u32 = 0x2 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_2: u32 = 0x4 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_3: u32 = 0x8 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_SS_Pos: u32 = 0;
pub const RTC_ALRMBSSR_SS_Msk: u32 = 0x7FFF << RTC_ALRMBSSR_SS_Pos;
pub const RTC_ALRMBSSR_SS: u32 = RTC_ALRMBSSR_SS_Msk;
pub const RTC_OR_TSINSEL_Pos: u32 = 1;
pub const RTC_OR_TSINSEL_Msk: u32 = 0x3 << RTC_OR_TSINSEL_Pos;
pub const RTC_OR_TSINSEL: u32 = RTC_OR_TSINSEL_Msk;
pub const RTC_OR_TSINSEL_0: u32 = 0x1 << RTC_OR_TSINSEL_Pos;
pub const RTC_OR_TSINSEL_1: u32 = 0x2 << RTC_OR_TSINSEL_Pos;
pub const RTC_OR_ALARMOUTTYPE_Pos: u32 = 3;
pub const RTC_OR_ALARMOUTTYPE_Msk: u32 = 0x1 << RTC_OR_ALARMOUTTYPE_Pos;
pub const RTC_OR_ALARMOUTTYPE: u32 = RTC_OR_ALARMOUTTYPE_Msk;
pub const RTC_OR_ALARMTYPE: u32 = RTC_OR_ALARMOUTTYPE;
pub const RTC_BKP0R_Pos: u32 = 0;
pub const RTC_BKP0R_Msk: u32 = 0xFFFFFFFF << RTC_BKP0R_Pos;
pub const RTC_BKP0R: u32 = RTC_BKP0R_Msk;
pub const RTC_BKP1R_Pos: u32 = 0;
pub const RTC_BKP1R_Msk: u32 = 0xFFFFFFFF << RTC_BKP1R_Pos;
pub const RTC_BKP1R: u32 = RTC_BKP1R_Msk;
pub const RTC_BKP2R_Pos: u32 = 0;
pub const RTC_BKP2R_Msk: u32 = 0xFFFFFFFF << RTC_BKP2R_Pos;
pub const RTC_BKP2R: u32 = RTC_BKP2R_Msk;
pub const RTC_BKP3R_Pos: u32 = 0;
pub const RTC_BKP3R_Msk: u32 = 0xFFFFFFFF << RTC_BKP3R_Pos;
pub const RTC_BKP3R: u32 = RTC_BKP3R_Msk;
pub const RTC_BKP4R_Pos: u32 = 0;
pub const RTC_BKP4R_Msk: u32 = 0xFFFFFFFF << RTC_BKP4R_Pos;
pub const RTC_BKP4R: u32 = RTC_BKP4R_Msk;
pub const RTC_BKP5R_Pos: u32 = 0;
pub const RTC_BKP5R_Msk: u32 = 0xFFFFFFFF << RTC_BKP5R_Pos;
pub const RTC_BKP5R: u32 = RTC_BKP5R_Msk;
pub const RTC_BKP6R_Pos: u32 = 0;
pub const RTC_BKP6R_Msk: u32 = 0xFFFFFFFF << RTC_BKP6R_Pos;
pub const RTC_BKP6R: u32 = RTC_BKP6R_Msk;
pub const RTC_BKP7R_Pos: u32 = 0;
pub const RTC_BKP7R_Msk: u32 = 0xFFFFFFFF << RTC_BKP7R_Pos;
pub const RTC_BKP7R: u32 = RTC_BKP7R_Msk;
pub const RTC_BKP8R_Pos: u32 = 0;
pub const RTC_BKP8R_Msk: u32 = 0xFFFFFFFF << RTC_BKP8R_Pos;
pub const RTC_BKP8R: u32 = RTC_BKP8R_Msk;
pub const RTC_BKP9R_Pos: u32 = 0;
pub const RTC_BKP9R_Msk: u32 = 0xFFFFFFFF << RTC_BKP9R_Pos;
pub const RTC_BKP9R: u32 = RTC_BKP9R_Msk;
pub const RTC_BKP10R_Pos: u32 = 0;
pub const RTC_BKP10R_Msk: u32 = 0xFFFFFFFF << RTC_BKP10R_Pos;
pub const RTC_BKP10R: u32 = RTC_BKP10R_Msk;
pub const RTC_BKP11R_Pos: u32 = 0;
pub const RTC_BKP11R_Msk: u32 = 0xFFFFFFFF << RTC_BKP11R_Pos;
pub const RTC_BKP11R: u32 = RTC_BKP11R_Msk;
pub const RTC_BKP12R_Pos: u32 = 0;
pub const RTC_BKP12R_Msk: u32 = 0xFFFFFFFF << RTC_BKP12R_Pos;
pub const RTC_BKP12R: u32 = RTC_BKP12R_Msk;
pub const RTC_BKP13R_Pos: u32 = 0;
pub const RTC_BKP13R_Msk: u32 = 0xFFFFFFFF << RTC_BKP13R_Pos;
pub const RTC_BKP13R: u32 = RTC_BKP13R_Msk;
pub const RTC_BKP14R_Pos: u32 = 0;
pub const RTC_BKP14R_Msk: u32 = 0xFFFFFFFF << RTC_BKP14R_Pos;
pub const RTC_BKP14R: u32 = RTC_BKP14R_Msk;
pub const RTC_BKP15R_Pos: u32 = 0;
pub const RTC_BKP15R_Msk: u32 = 0xFFFFFFFF << RTC_BKP15R_Pos;
pub const RTC_BKP15R: u32 = RTC_BKP15R_Msk;
pub const RTC_BKP16R_Pos: u32 = 0;
pub const RTC_BKP16R_Msk: u32 = 0xFFFFFFFF << RTC_BKP16R_Pos;
pub const RTC_BKP16R: u32 = RTC_BKP16R_Msk;
pub const RTC_BKP17R_Pos: u32 = 0;
pub const RTC_BKP17R_Msk: u32 = 0xFFFFFFFF << RTC_BKP17R_Pos;
pub const RTC_BKP17R: u32 = RTC_BKP17R_Msk;
pub const RTC_BKP18R_Pos: u32 = 0;
pub const RTC_BKP18R_Msk: u32 = 0xFFFFFFFF << RTC_BKP18R_Pos;
pub const RTC_BKP18R: u32 = RTC_BKP18R_Msk;
pub const RTC_BKP19R_Pos: u32 = 0;
pub const RTC_BKP19R_Msk: u32 = 0xFFFFFFFF << RTC_BKP19R_Pos;
pub const RTC_BKP19R: u32 = RTC_BKP19R_Msk;
pub const RTC_BKP20R_Pos: u32 = 0;
pub const RTC_BKP20R_Msk: u32 = 0xFFFFFFFF << RTC_BKP20R_Pos;
pub const RTC_BKP20R: u32 = RTC_BKP20R_Msk;
pub const RTC_BKP21R_Pos: u32 = 0;
pub const RTC_BKP21R_Msk: u32 = 0xFFFFFFFF << RTC_BKP21R_Pos;
pub const RTC_BKP21R: u32 = RTC_BKP21R_Msk;
pub const RTC_BKP22R_Pos: u32 = 0;
pub const RTC_BKP22R_Msk: u32 = 0xFFFFFFFF << RTC_BKP22R_Pos;
pub const RTC_BKP22R: u32 = RTC_BKP22R_Msk;
pub const RTC_BKP23R_Pos: u32 = 0;
pub const RTC_BKP23R_Msk: u32 = 0xFFFFFFFF << RTC_BKP23R_Pos;
pub const RTC_BKP23R: u32 = RTC_BKP23R_Msk;
pub const RTC_BKP24R_Pos: u32 = 0;
pub const RTC_BKP24R_Msk: u32 = 0xFFFFFFFF << RTC_BKP24R_Pos;
pub const RTC_BKP24R: u32 = RTC_BKP24R_Msk;
pub const RTC_BKP25R_Pos: u32 = 0;
pub const RTC_BKP25R_Msk: u32 = 0xFFFFFFFF << RTC_BKP25R_Pos;
pub const RTC_BKP25R: u32 = RTC_BKP25R_Msk;
pub const RTC_BKP26R_Pos: u32 = 0;
pub const RTC_BKP26R_Msk: u32 = 0xFFFFFFFF << RTC_BKP26R_Pos;
pub const RTC_BKP26R: u32 = RTC_BKP26R_Msk;
pub const RTC_BKP27R_Pos: u32 = 0;
pub const RTC_BKP27R_Msk: u32 = 0xFFFFFFFF << RTC_BKP27R_Pos;
pub const RTC_BKP27R: u32 = RTC_BKP27R_Msk;
pub const RTC_BKP28R_Pos: u32 = 0;
pub const RTC_BKP28R_Msk: u32 = 0xFFFFFFFF << RTC_BKP28R_Pos;
pub const RTC_BKP28R: u32 = RTC_BKP28R_Msk;
pub const RTC_BKP29R_Pos: u32 = 0;
pub const RTC_BKP29R_Msk: u32 = 0xFFFFFFFF << RTC_BKP29R_Pos;
pub const RTC_BKP29R: u32 = RTC_BKP29R_Msk;
pub const RTC_BKP30R_Pos: u32 = 0;
pub const RTC_BKP30R_Msk: u32 = 0xFFFFFFFF << RTC_BKP30R_Pos;
pub const RTC_BKP30R: u32 = RTC_BKP30R_Msk;
pub const RTC_BKP31R_Pos: u32 = 0;
pub const RTC_BKP31R_Msk: u32 = 0xFFFFFFFF << RTC_BKP31R_Pos;
pub const RTC_BKP31R: u32 = RTC_BKP31R_Msk;
pub const RTC_BKP_NUMBER: u32 = 0x00000020;
pub const SAI_GCR_SYNCIN_Pos: u32 = 0;
pub const SAI_GCR_SYNCIN_Msk: u32 = 0x3 << SAI_GCR_SYNCIN_Pos;
pub const SAI_GCR_SYNCIN: u32 = SAI_GCR_SYNCIN_Msk;
pub const SAI_GCR_SYNCIN_0: u32 = 0x1 << SAI_GCR_SYNCIN_Pos;
pub const SAI_GCR_SYNCIN_1: u32 = 0x2 << SAI_GCR_SYNCIN_Pos;
pub const SAI_GCR_SYNCOUT_Pos: u32 = 4;
pub const SAI_GCR_SYNCOUT_Msk: u32 = 0x3 << SAI_GCR_SYNCOUT_Pos;
pub const SAI_GCR_SYNCOUT: u32 = SAI_GCR_SYNCOUT_Msk;
pub const SAI_GCR_SYNCOUT_0: u32 = 0x1 << SAI_GCR_SYNCOUT_Pos;
pub const SAI_GCR_SYNCOUT_1: u32 = 0x2 << SAI_GCR_SYNCOUT_Pos;
pub const SAI_xCR1_MODE_Pos: u32 = 0;
pub const SAI_xCR1_MODE_Msk: u32 = 0x3 << SAI_xCR1_MODE_Pos;
pub const SAI_xCR1_MODE: u32 = SAI_xCR1_MODE_Msk;
pub const SAI_xCR1_MODE_0: u32 = 0x1 << SAI_xCR1_MODE_Pos;
pub const SAI_xCR1_MODE_1: u32 = 0x2 << SAI_xCR1_MODE_Pos;
pub const SAI_xCR1_PRTCFG_Pos: u32 = 2;
pub const SAI_xCR1_PRTCFG_Msk: u32 = 0x3 << SAI_xCR1_PRTCFG_Pos;
pub const SAI_xCR1_PRTCFG: u32 = SAI_xCR1_PRTCFG_Msk;
pub const SAI_xCR1_PRTCFG_0: u32 = 0x1 << SAI_xCR1_PRTCFG_Pos;
pub const SAI_xCR1_PRTCFG_1: u32 = 0x2 << SAI_xCR1_PRTCFG_Pos;
pub const SAI_xCR1_DS_Pos: u32 = 5;
pub const SAI_xCR1_DS_Msk: u32 = 0x7 << SAI_xCR1_DS_Pos;
pub const SAI_xCR1_DS: u32 = SAI_xCR1_DS_Msk;
pub const SAI_xCR1_DS_0: u32 = 0x1 << SAI_xCR1_DS_Pos;
pub const SAI_xCR1_DS_1: u32 = 0x2 << SAI_xCR1_DS_Pos;
pub const SAI_xCR1_DS_2: u32 = 0x4 << SAI_xCR1_DS_Pos;
pub const SAI_xCR1_LSBFIRST_Pos: u32 = 8;
pub const SAI_xCR1_LSBFIRST_Msk: u32 = 0x1 << SAI_xCR1_LSBFIRST_Pos;
pub const SAI_xCR1_LSBFIRST: u32 = SAI_xCR1_LSBFIRST_Msk;
pub const SAI_xCR1_CKSTR_Pos: u32 = 9;
pub const SAI_xCR1_CKSTR_Msk: u32 = 0x1 << SAI_xCR1_CKSTR_Pos;
pub const SAI_xCR1_CKSTR: u32 = SAI_xCR1_CKSTR_Msk;
pub const SAI_xCR1_SYNCEN_Pos: u32 = 10;
pub const SAI_xCR1_SYNCEN_Msk: u32 = 0x3 << SAI_xCR1_SYNCEN_Pos;
pub const SAI_xCR1_SYNCEN: u32 = SAI_xCR1_SYNCEN_Msk;
pub const SAI_xCR1_SYNCEN_0: u32 = 0x1 << SAI_xCR1_SYNCEN_Pos;
pub const SAI_xCR1_SYNCEN_1: u32 = 0x2 << SAI_xCR1_SYNCEN_Pos;
pub const SAI_xCR1_MONO_Pos: u32 = 12;
pub const SAI_xCR1_MONO_Msk: u32 = 0x1 << SAI_xCR1_MONO_Pos;
pub const SAI_xCR1_MONO: u32 = SAI_xCR1_MONO_Msk;
pub const SAI_xCR1_OUTDRIV_Pos: u32 = 13;
pub const SAI_xCR1_OUTDRIV_Msk: u32 = 0x1 << SAI_xCR1_OUTDRIV_Pos;
pub const SAI_xCR1_OUTDRIV: u32 = SAI_xCR1_OUTDRIV_Msk;
pub const SAI_xCR1_SAIEN_Pos: u32 = 16;
pub const SAI_xCR1_SAIEN_Msk: u32 = 0x1 << SAI_xCR1_SAIEN_Pos;
pub const SAI_xCR1_SAIEN: u32 = SAI_xCR1_SAIEN_Msk;
pub const SAI_xCR1_DMAEN_Pos: u32 = 17;
pub const SAI_xCR1_DMAEN_Msk: u32 = 0x1 << SAI_xCR1_DMAEN_Pos;
pub const SAI_xCR1_DMAEN: u32 = SAI_xCR1_DMAEN_Msk;
pub const SAI_xCR1_NODIV_Pos: u32 = 19;
pub const SAI_xCR1_NODIV_Msk: u32 = 0x1 << SAI_xCR1_NODIV_Pos;
pub const SAI_xCR1_NODIV: u32 = SAI_xCR1_NODIV_Msk;
pub const SAI_xCR1_MCKDIV_Pos: u32 = 20;
pub const SAI_xCR1_MCKDIV_Msk: u32 = 0xF << SAI_xCR1_MCKDIV_Pos;
pub const SAI_xCR1_MCKDIV: u32 = SAI_xCR1_MCKDIV_Msk;
pub const SAI_xCR1_MCKDIV_0: u32 = 0x1 << SAI_xCR1_MCKDIV_Pos;
pub const SAI_xCR1_MCKDIV_1: u32 = 0x2 << SAI_xCR1_MCKDIV_Pos;
pub const SAI_xCR1_MCKDIV_2: u32 = 0x4 << SAI_xCR1_MCKDIV_Pos;
pub const SAI_xCR1_MCKDIV_3: u32 = 0x8 << SAI_xCR1_MCKDIV_Pos;
pub const SAI_xCR2_FTH_Pos: u32 = 0;
pub const SAI_xCR2_FTH_Msk: u32 = 0x7 << SAI_xCR2_FTH_Pos;
pub const SAI_xCR2_FTH: u32 = SAI_xCR2_FTH_Msk;
pub const SAI_xCR2_FTH_0: u32 = 0x1 << SAI_xCR2_FTH_Pos;
pub const SAI_xCR2_FTH_1: u32 = 0x2 << SAI_xCR2_FTH_Pos;
pub const SAI_xCR2_FTH_2: u32 = 0x4 << SAI_xCR2_FTH_Pos;
pub const SAI_xCR2_FFLUSH_Pos: u32 = 3;
pub const SAI_xCR2_FFLUSH_Msk: u32 = 0x1 << SAI_xCR2_FFLUSH_Pos;
pub const SAI_xCR2_FFLUSH: u32 = SAI_xCR2_FFLUSH_Msk;
pub const SAI_xCR2_TRIS_Pos: u32 = 4;
pub const SAI_xCR2_TRIS_Msk: u32 = 0x1 << SAI_xCR2_TRIS_Pos;
pub const SAI_xCR2_TRIS: u32 = SAI_xCR2_TRIS_Msk;
pub const SAI_xCR2_MUTE_Pos: u32 = 5;
pub const SAI_xCR2_MUTE_Msk: u32 = 0x1 << SAI_xCR2_MUTE_Pos;
pub const SAI_xCR2_MUTE: u32 = SAI_xCR2_MUTE_Msk;
pub const SAI_xCR2_MUTEVAL_Pos: u32 = 6;
pub const SAI_xCR2_MUTEVAL_Msk: u32 = 0x1 << SAI_xCR2_MUTEVAL_Pos;
pub const SAI_xCR2_MUTEVAL: u32 = SAI_xCR2_MUTEVAL_Msk;
pub const SAI_xCR2_MUTECNT_Pos: u32 = 7;
pub const SAI_xCR2_MUTECNT_Msk: u32 = 0x3F << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_MUTECNT: u32 = SAI_xCR2_MUTECNT_Msk;
pub const SAI_xCR2_MUTECNT_0: u32 = 0x01 << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_MUTECNT_1: u32 = 0x02 << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_MUTECNT_2: u32 = 0x04 << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_MUTECNT_3: u32 = 0x08 << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_MUTECNT_4: u32 = 0x10 << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_MUTECNT_5: u32 = 0x20 << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_CPL_Pos: u32 = 13;
pub const SAI_xCR2_CPL_Msk: u32 = 0x1 << SAI_xCR2_CPL_Pos;
pub const SAI_xCR2_CPL: u32 = SAI_xCR2_CPL_Msk;
pub const SAI_xCR2_COMP_Pos: u32 = 14;
pub const SAI_xCR2_COMP_Msk: u32 = 0x3 << SAI_xCR2_COMP_Pos;
pub const SAI_xCR2_COMP: u32 = SAI_xCR2_COMP_Msk;
pub const SAI_xCR2_COMP_0: u32 = 0x1 << SAI_xCR2_COMP_Pos;
pub const SAI_xCR2_COMP_1: u32 = 0x2 << SAI_xCR2_COMP_Pos;
pub const SAI_xFRCR_FRL_Pos: u32 = 0;
pub const SAI_xFRCR_FRL_Msk: u32 = 0xFF << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL: u32 = SAI_xFRCR_FRL_Msk;
pub const SAI_xFRCR_FRL_0: u32 = 0x01 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_1: u32 = 0x02 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_2: u32 = 0x04 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_3: u32 = 0x08 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_4: u32 = 0x10 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_5: u32 = 0x20 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_6: u32 = 0x40 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_7: u32 = 0x80 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FSALL_Pos: u32 = 8;
pub const SAI_xFRCR_FSALL_Msk: u32 = 0x7F << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL: u32 = SAI_xFRCR_FSALL_Msk;
pub const SAI_xFRCR_FSALL_0: u32 = 0x01 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL_1: u32 = 0x02 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL_2: u32 = 0x04 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL_3: u32 = 0x08 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL_4: u32 = 0x10 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL_5: u32 = 0x20 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL_6: u32 = 0x40 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSDEF_Pos: u32 = 16;
pub const SAI_xFRCR_FSDEF_Msk: u32 = 0x1 << SAI_xFRCR_FSDEF_Pos;
pub const SAI_xFRCR_FSDEF: u32 = SAI_xFRCR_FSDEF_Msk;
pub const SAI_xFRCR_FSPOL_Pos: u32 = 17;
pub const SAI_xFRCR_FSPOL_Msk: u32 = 0x1 << SAI_xFRCR_FSPOL_Pos;
pub const SAI_xFRCR_FSPOL: u32 = SAI_xFRCR_FSPOL_Msk;
pub const SAI_xFRCR_FSOFF_Pos: u32 = 18;
pub const SAI_xFRCR_FSOFF_Msk: u32 = 0x1 << SAI_xFRCR_FSOFF_Pos;
pub const SAI_xFRCR_FSOFF: u32 = SAI_xFRCR_FSOFF_Msk;
pub const SAI_xFRCR_FSPO: u32 = SAI_xFRCR_FSPOL;
pub const SAI_xSLOTR_FBOFF_Pos: u32 = 0;
pub const SAI_xSLOTR_FBOFF_Msk: u32 = 0x1F << SAI_xSLOTR_FBOFF_Pos;
pub const SAI_xSLOTR_FBOFF: u32 = SAI_xSLOTR_FBOFF_Msk;
pub const SAI_xSLOTR_FBOFF_0: u32 = 0x01 << SAI_xSLOTR_FBOFF_Pos;
pub const SAI_xSLOTR_FBOFF_1: u32 = 0x02 << SAI_xSLOTR_FBOFF_Pos;
pub const SAI_xSLOTR_FBOFF_2: u32 = 0x04 << SAI_xSLOTR_FBOFF_Pos;
pub const SAI_xSLOTR_FBOFF_3: u32 = 0x08 << SAI_xSLOTR_FBOFF_Pos;
pub const SAI_xSLOTR_FBOFF_4: u32 = 0x10 << SAI_xSLOTR_FBOFF_Pos;
pub const SAI_xSLOTR_SLOTSZ_Pos: u32 = 6;
pub const SAI_xSLOTR_SLOTSZ_Msk: u32 = 0x3 << SAI_xSLOTR_SLOTSZ_Pos;
pub const SAI_xSLOTR_SLOTSZ: u32 = SAI_xSLOTR_SLOTSZ_Msk;
pub const SAI_xSLOTR_SLOTSZ_0: u32 = 0x1 << SAI_xSLOTR_SLOTSZ_Pos;
pub const SAI_xSLOTR_SLOTSZ_1: u32 = 0x2 << SAI_xSLOTR_SLOTSZ_Pos;
pub const SAI_xSLOTR_NBSLOT_Pos: u32 = 8;
pub const SAI_xSLOTR_NBSLOT_Msk: u32 = 0xF << SAI_xSLOTR_NBSLOT_Pos;
pub const SAI_xSLOTR_NBSLOT: u32 = SAI_xSLOTR_NBSLOT_Msk;
pub const SAI_xSLOTR_NBSLOT_0: u32 = 0x1 << SAI_xSLOTR_NBSLOT_Pos;
pub const SAI_xSLOTR_NBSLOT_1: u32 = 0x2 << SAI_xSLOTR_NBSLOT_Pos;
pub const SAI_xSLOTR_NBSLOT_2: u32 = 0x4 << SAI_xSLOTR_NBSLOT_Pos;
pub const SAI_xSLOTR_NBSLOT_3: u32 = 0x8 << SAI_xSLOTR_NBSLOT_Pos;
pub const SAI_xSLOTR_SLOTEN_Pos: u32 = 16;
pub const SAI_xSLOTR_SLOTEN_Msk: u32 = 0xFFFF << SAI_xSLOTR_SLOTEN_Pos;
pub const SAI_xSLOTR_SLOTEN: u32 = SAI_xSLOTR_SLOTEN_Msk;
pub const SAI_xIMR_OVRUDRIE_Pos: u32 = 0;
pub const SAI_xIMR_OVRUDRIE_Msk: u32 = 0x1 << SAI_xIMR_OVRUDRIE_Pos;
pub const SAI_xIMR_OVRUDRIE: u32 = SAI_xIMR_OVRUDRIE_Msk;
pub const SAI_xIMR_MUTEDETIE_Pos: u32 = 1;
pub const SAI_xIMR_MUTEDETIE_Msk: u32 = 0x1 << SAI_xIMR_MUTEDETIE_Pos;
pub const SAI_xIMR_MUTEDETIE: u32 = SAI_xIMR_MUTEDETIE_Msk;
pub const SAI_xIMR_WCKCFGIE_Pos: u32 = 2;
pub const SAI_xIMR_WCKCFGIE_Msk: u32 = 0x1 << SAI_xIMR_WCKCFGIE_Pos;
pub const SAI_xIMR_WCKCFGIE: u32 = SAI_xIMR_WCKCFGIE_Msk;
pub const SAI_xIMR_FREQIE_Pos: u32 = 3;
pub const SAI_xIMR_FREQIE_Msk: u32 = 0x1 << SAI_xIMR_FREQIE_Pos;
pub const SAI_xIMR_FREQIE: u32 = SAI_xIMR_FREQIE_Msk;
pub const SAI_xIMR_CNRDYIE_Pos: u32 = 4;
pub const SAI_xIMR_CNRDYIE_Msk: u32 = 0x1 << SAI_xIMR_CNRDYIE_Pos;
pub const SAI_xIMR_CNRDYIE: u32 = SAI_xIMR_CNRDYIE_Msk;
pub const SAI_xIMR_AFSDETIE_Pos: u32 = 5;
pub const SAI_xIMR_AFSDETIE_Msk: u32 = 0x1 << SAI_xIMR_AFSDETIE_Pos;
pub const SAI_xIMR_AFSDETIE: u32 = SAI_xIMR_AFSDETIE_Msk;
pub const SAI_xIMR_LFSDETIE_Pos: u32 = 6;
pub const SAI_xIMR_LFSDETIE_Msk: u32 = 0x1 << SAI_xIMR_LFSDETIE_Pos;
pub const SAI_xIMR_LFSDETIE: u32 = SAI_xIMR_LFSDETIE_Msk;
pub const SAI_xSR_OVRUDR_Pos: u32 = 0;
pub const SAI_xSR_OVRUDR_Msk: u32 = 0x1 << SAI_xSR_OVRUDR_Pos;
pub const SAI_xSR_OVRUDR: u32 = SAI_xSR_OVRUDR_Msk;
pub const SAI_xSR_MUTEDET_Pos: u32 = 1;
pub const SAI_xSR_MUTEDET_Msk: u32 = 0x1 << SAI_xSR_MUTEDET_Pos;
pub const SAI_xSR_MUTEDET: u32 = SAI_xSR_MUTEDET_Msk;
pub const SAI_xSR_WCKCFG_Pos: u32 = 2;
pub const SAI_xSR_WCKCFG_Msk: u32 = 0x1 << SAI_xSR_WCKCFG_Pos;
pub const SAI_xSR_WCKCFG: u32 = SAI_xSR_WCKCFG_Msk;
pub const SAI_xSR_FREQ_Pos: u32 = 3;
pub const SAI_xSR_FREQ_Msk: u32 = 0x1 << SAI_xSR_FREQ_Pos;
pub const SAI_xSR_FREQ: u32 = SAI_xSR_FREQ_Msk;
pub const SAI_xSR_CNRDY_Pos: u32 = 4;
pub const SAI_xSR_CNRDY_Msk: u32 = 0x1 << SAI_xSR_CNRDY_Pos;
pub const SAI_xSR_CNRDY: u32 = SAI_xSR_CNRDY_Msk;
pub const SAI_xSR_AFSDET_Pos: u32 = 5;
pub const SAI_xSR_AFSDET_Msk: u32 = 0x1 << SAI_xSR_AFSDET_Pos;
pub const SAI_xSR_AFSDET: u32 = SAI_xSR_AFSDET_Msk;
pub const SAI_xSR_LFSDET_Pos: u32 = 6;
pub const SAI_xSR_LFSDET_Msk: u32 = 0x1 << SAI_xSR_LFSDET_Pos;
pub const SAI_xSR_LFSDET: u32 = SAI_xSR_LFSDET_Msk;
pub const SAI_xSR_FLVL_Pos: u32 = 16;
pub const SAI_xSR_FLVL_Msk: u32 = 0x7 << SAI_xSR_FLVL_Pos;
pub const SAI_xSR_FLVL: u32 = SAI_xSR_FLVL_Msk;
pub const SAI_xSR_FLVL_0: u32 = 0x1 << SAI_xSR_FLVL_Pos;
pub const SAI_xSR_FLVL_1: u32 = 0x2 << SAI_xSR_FLVL_Pos;
pub const SAI_xSR_FLVL_2: u32 = 0x4 << SAI_xSR_FLVL_Pos;
pub const SAI_xCLRFR_COVRUDR_Pos: u32 = 0;
pub const SAI_xCLRFR_COVRUDR_Msk: u32 = 0x1 << SAI_xCLRFR_COVRUDR_Pos;
pub const SAI_xCLRFR_COVRUDR: u32 = SAI_xCLRFR_COVRUDR_Msk;
pub const SAI_xCLRFR_CMUTEDET_Pos: u32 = 1;
pub const SAI_xCLRFR_CMUTEDET_Msk: u32 = 0x1 << SAI_xCLRFR_CMUTEDET_Pos;
pub const SAI_xCLRFR_CMUTEDET: u32 = SAI_xCLRFR_CMUTEDET_Msk;
pub const SAI_xCLRFR_CWCKCFG_Pos: u32 = 2;
pub const SAI_xCLRFR_CWCKCFG_Msk: u32 = 0x1 << SAI_xCLRFR_CWCKCFG_Pos;
pub const SAI_xCLRFR_CWCKCFG: u32 = SAI_xCLRFR_CWCKCFG_Msk;
pub const SAI_xCLRFR_CFREQ_Pos: u32 = 3;
pub const SAI_xCLRFR_CFREQ_Msk: u32 = 0x1 << SAI_xCLRFR_CFREQ_Pos;
pub const SAI_xCLRFR_CFREQ: u32 = SAI_xCLRFR_CFREQ_Msk;
pub const SAI_xCLRFR_CCNRDY_Pos: u32 = 4;
pub const SAI_xCLRFR_CCNRDY_Msk: u32 = 0x1 << SAI_xCLRFR_CCNRDY_Pos;
pub const SAI_xCLRFR_CCNRDY: u32 = SAI_xCLRFR_CCNRDY_Msk;
pub const SAI_xCLRFR_CAFSDET_Pos: u32 = 5;
pub const SAI_xCLRFR_CAFSDET_Msk: u32 = 0x1 << SAI_xCLRFR_CAFSDET_Pos;
pub const SAI_xCLRFR_CAFSDET: u32 = SAI_xCLRFR_CAFSDET_Msk;
pub const SAI_xCLRFR_CLFSDET_Pos: u32 = 6;
pub const SAI_xCLRFR_CLFSDET_Msk: u32 = 0x1 << SAI_xCLRFR_CLFSDET_Pos;
pub const SAI_xCLRFR_CLFSDET: u32 = SAI_xCLRFR_CLFSDET_Msk;
pub const SAI_xDR_DATA_Pos: u32 = 0;
pub const SAI_xDR_DATA_Msk: u32 = 0xFFFFFFFF << SAI_xDR_DATA_Pos;
pub const SAI_xDR_DATA: u32 = SAI_xDR_DATA_Msk;
pub const SPDIFRX_CR_SPDIFEN_Pos: u32 = 0;
pub const SPDIFRX_CR_SPDIFEN_Msk: u32 = 0x3 << SPDIFRX_CR_SPDIFEN_Pos;
pub const SPDIFRX_CR_SPDIFEN: u32 = SPDIFRX_CR_SPDIFEN_Msk;
pub const SPDIFRX_CR_RXDMAEN_Pos: u32 = 2;
pub const SPDIFRX_CR_RXDMAEN_Msk: u32 = 0x1 << SPDIFRX_CR_RXDMAEN_Pos;
pub const SPDIFRX_CR_RXDMAEN: u32 = SPDIFRX_CR_RXDMAEN_Msk;
pub const SPDIFRX_CR_RXSTEO_Pos: u32 = 3;
pub const SPDIFRX_CR_RXSTEO_Msk: u32 = 0x1 << SPDIFRX_CR_RXSTEO_Pos;
pub const SPDIFRX_CR_RXSTEO: u32 = SPDIFRX_CR_RXSTEO_Msk;
pub const SPDIFRX_CR_DRFMT_Pos: u32 = 4;
pub const SPDIFRX_CR_DRFMT_Msk: u32 = 0x3 << SPDIFRX_CR_DRFMT_Pos;
pub const SPDIFRX_CR_DRFMT: u32 = SPDIFRX_CR_DRFMT_Msk;
pub const SPDIFRX_CR_PMSK_Pos: u32 = 6;
pub const SPDIFRX_CR_PMSK_Msk: u32 = 0x1 << SPDIFRX_CR_PMSK_Pos;
pub const SPDIFRX_CR_PMSK: u32 = SPDIFRX_CR_PMSK_Msk;
pub const SPDIFRX_CR_VMSK_Pos: u32 = 7;
pub const SPDIFRX_CR_VMSK_Msk: u32 = 0x1 << SPDIFRX_CR_VMSK_Pos;
pub const SPDIFRX_CR_VMSK: u32 = SPDIFRX_CR_VMSK_Msk;
pub const SPDIFRX_CR_CUMSK_Pos: u32 = 8;
pub const SPDIFRX_CR_CUMSK_Msk: u32 = 0x1 << SPDIFRX_CR_CUMSK_Pos;
pub const SPDIFRX_CR_CUMSK: u32 = SPDIFRX_CR_CUMSK_Msk;
pub const SPDIFRX_CR_PTMSK_Pos: u32 = 9;
pub const SPDIFRX_CR_PTMSK_Msk: u32 = 0x1 << SPDIFRX_CR_PTMSK_Pos;
pub const SPDIFRX_CR_PTMSK: u32 = SPDIFRX_CR_PTMSK_Msk;
pub const SPDIFRX_CR_CBDMAEN_Pos: u32 = 10;
pub const SPDIFRX_CR_CBDMAEN_Msk: u32 = 0x1 << SPDIFRX_CR_CBDMAEN_Pos;
pub const SPDIFRX_CR_CBDMAEN: u32 = SPDIFRX_CR_CBDMAEN_Msk;
pub const SPDIFRX_CR_CHSEL_Pos: u32 = 11;
pub const SPDIFRX_CR_CHSEL_Msk: u32 = 0x1 << SPDIFRX_CR_CHSEL_Pos;
pub const SPDIFRX_CR_CHSEL: u32 = SPDIFRX_CR_CHSEL_Msk;
pub const SPDIFRX_CR_NBTR_Pos: u32 = 12;
pub const SPDIFRX_CR_NBTR_Msk: u32 = 0x3 << SPDIFRX_CR_NBTR_Pos;
pub const SPDIFRX_CR_NBTR: u32 = SPDIFRX_CR_NBTR_Msk;
pub const SPDIFRX_CR_WFA_Pos: u32 = 14;
pub const SPDIFRX_CR_WFA_Msk: u32 = 0x1 << SPDIFRX_CR_WFA_Pos;
pub const SPDIFRX_CR_WFA: u32 = SPDIFRX_CR_WFA_Msk;
pub const SPDIFRX_CR_INSEL_Pos: u32 = 16;
pub const SPDIFRX_CR_INSEL_Msk: u32 = 0x7 << SPDIFRX_CR_INSEL_Pos;
pub const SPDIFRX_CR_INSEL: u32 = SPDIFRX_CR_INSEL_Msk;
pub const SPDIFRX_IMR_RXNEIE_Pos: u32 = 0;
pub const SPDIFRX_IMR_RXNEIE_Msk: u32 = 0x1 << SPDIFRX_IMR_RXNEIE_Pos;
pub const SPDIFRX_IMR_RXNEIE: u32 = SPDIFRX_IMR_RXNEIE_Msk;
pub const SPDIFRX_IMR_CSRNEIE_Pos: u32 = 1;
pub const SPDIFRX_IMR_CSRNEIE_Msk: u32 = 0x1 << SPDIFRX_IMR_CSRNEIE_Pos;
pub const SPDIFRX_IMR_CSRNEIE: u32 = SPDIFRX_IMR_CSRNEIE_Msk;
pub const SPDIFRX_IMR_PERRIE_Pos: u32 = 2;
pub const SPDIFRX_IMR_PERRIE_Msk: u32 = 0x1 << SPDIFRX_IMR_PERRIE_Pos;
pub const SPDIFRX_IMR_PERRIE: u32 = SPDIFRX_IMR_PERRIE_Msk;
pub const SPDIFRX_IMR_OVRIE_Pos: u32 = 3;
pub const SPDIFRX_IMR_OVRIE_Msk: u32 = 0x1 << SPDIFRX_IMR_OVRIE_Pos;
pub const SPDIFRX_IMR_OVRIE: u32 = SPDIFRX_IMR_OVRIE_Msk;
pub const SPDIFRX_IMR_SBLKIE_Pos: u32 = 4;
pub const SPDIFRX_IMR_SBLKIE_Msk: u32 = 0x1 << SPDIFRX_IMR_SBLKIE_Pos;
pub const SPDIFRX_IMR_SBLKIE: u32 = SPDIFRX_IMR_SBLKIE_Msk;
pub const SPDIFRX_IMR_SYNCDIE_Pos: u32 = 5;
pub const SPDIFRX_IMR_SYNCDIE_Msk: u32 = 0x1 << SPDIFRX_IMR_SYNCDIE_Pos;
pub const SPDIFRX_IMR_SYNCDIE: u32 = SPDIFRX_IMR_SYNCDIE_Msk;
pub const SPDIFRX_IMR_IFEIE_Pos: u32 = 6;
pub const SPDIFRX_IMR_IFEIE_Msk: u32 = 0x1 << SPDIFRX_IMR_IFEIE_Pos;
pub const SPDIFRX_IMR_IFEIE: u32 = SPDIFRX_IMR_IFEIE_Msk;
pub const SPDIFRX_SR_RXNE_Pos: u32 = 0;
pub const SPDIFRX_SR_RXNE_Msk: u32 = 0x1 << SPDIFRX_SR_RXNE_Pos;
pub const SPDIFRX_SR_RXNE: u32 = SPDIFRX_SR_RXNE_Msk;
pub const SPDIFRX_SR_CSRNE_Pos: u32 = 1;
pub const SPDIFRX_SR_CSRNE_Msk: u32 = 0x1 << SPDIFRX_SR_CSRNE_Pos;
pub const SPDIFRX_SR_CSRNE: u32 = SPDIFRX_SR_CSRNE_Msk;
pub const SPDIFRX_SR_PERR_Pos: u32 = 2;
pub const SPDIFRX_SR_PERR_Msk: u32 = 0x1 << SPDIFRX_SR_PERR_Pos;
pub const SPDIFRX_SR_PERR: u32 = SPDIFRX_SR_PERR_Msk;
pub const SPDIFRX_SR_OVR_Pos: u32 = 3;
pub const SPDIFRX_SR_OVR_Msk: u32 = 0x1 << SPDIFRX_SR_OVR_Pos;
pub const SPDIFRX_SR_OVR: u32 = SPDIFRX_SR_OVR_Msk;
pub const SPDIFRX_SR_SBD_Pos: u32 = 4;
pub const SPDIFRX_SR_SBD_Msk: u32 = 0x1 << SPDIFRX_SR_SBD_Pos;
pub const SPDIFRX_SR_SBD: u32 = SPDIFRX_SR_SBD_Msk;
pub const SPDIFRX_SR_SYNCD_Pos: u32 = 5;
pub const SPDIFRX_SR_SYNCD_Msk: u32 = 0x1 << SPDIFRX_SR_SYNCD_Pos;
pub const SPDIFRX_SR_SYNCD: u32 = SPDIFRX_SR_SYNCD_Msk;
pub const SPDIFRX_SR_FERR_Pos: u32 = 6;
pub const SPDIFRX_SR_FERR_Msk: u32 = 0x1 << SPDIFRX_SR_FERR_Pos;
pub const SPDIFRX_SR_FERR: u32 = SPDIFRX_SR_FERR_Msk;
pub const SPDIFRX_SR_SERR_Pos: u32 = 7;
pub const SPDIFRX_SR_SERR_Msk: u32 = 0x1 << SPDIFRX_SR_SERR_Pos;
pub const SPDIFRX_SR_SERR: u32 = SPDIFRX_SR_SERR_Msk;
pub const SPDIFRX_SR_TERR_Pos: u32 = 8;
pub const SPDIFRX_SR_TERR_Msk: u32 = 0x1 << SPDIFRX_SR_TERR_Pos;
pub const SPDIFRX_SR_TERR: u32 = SPDIFRX_SR_TERR_Msk;
pub const SPDIFRX_SR_WIDTH5_Pos: u32 = 16;
pub const SPDIFRX_SR_WIDTH5_Msk: u32 = 0x7FFF << SPDIFRX_SR_WIDTH5_Pos;
pub const SPDIFRX_SR_WIDTH5: u32 = SPDIFRX_SR_WIDTH5_Msk;
pub const SPDIFRX_IFCR_PERRCF_Pos: u32 = 2;
pub const SPDIFRX_IFCR_PERRCF_Msk: u32 = 0x1 << SPDIFRX_IFCR_PERRCF_Pos;
pub const SPDIFRX_IFCR_PERRCF: u32 = SPDIFRX_IFCR_PERRCF_Msk;
pub const SPDIFRX_IFCR_OVRCF_Pos: u32 = 3;
pub const SPDIFRX_IFCR_OVRCF_Msk: u32 = 0x1 << SPDIFRX_IFCR_OVRCF_Pos;
pub const SPDIFRX_IFCR_OVRCF: u32 = SPDIFRX_IFCR_OVRCF_Msk;
pub const SPDIFRX_IFCR_SBDCF_Pos: u32 = 4;
pub const SPDIFRX_IFCR_SBDCF_Msk: u32 = 0x1 << SPDIFRX_IFCR_SBDCF_Pos;
pub const SPDIFRX_IFCR_SBDCF: u32 = SPDIFRX_IFCR_SBDCF_Msk;
pub const SPDIFRX_IFCR_SYNCDCF_Pos: u32 = 5;
pub const SPDIFRX_IFCR_SYNCDCF_Msk: u32 = 0x1 << SPDIFRX_IFCR_SYNCDCF_Pos;
pub const SPDIFRX_IFCR_SYNCDCF: u32 = SPDIFRX_IFCR_SYNCDCF_Msk;
pub const SPDIFRX_DR0_DR_Pos: u32 = 0;
pub const SPDIFRX_DR0_DR_Msk: u32 = 0xFFFFFF << SPDIFRX_DR0_DR_Pos;
pub const SPDIFRX_DR0_DR: u32 = SPDIFRX_DR0_DR_Msk;
pub const SPDIFRX_DR0_PE_Pos: u32 = 24;
pub const SPDIFRX_DR0_PE_Msk: u32 = 0x1 << SPDIFRX_DR0_PE_Pos;
pub const SPDIFRX_DR0_PE: u32 = SPDIFRX_DR0_PE_Msk;
pub const SPDIFRX_DR0_V_Pos: u32 = 25;
pub const SPDIFRX_DR0_V_Msk: u32 = 0x1 << SPDIFRX_DR0_V_Pos;
pub const SPDIFRX_DR0_V: u32 = SPDIFRX_DR0_V_Msk;
pub const SPDIFRX_DR0_U_Pos: u32 = 26;
pub const SPDIFRX_DR0_U_Msk: u32 = 0x1 << SPDIFRX_DR0_U_Pos;
pub const SPDIFRX_DR0_U: u32 = SPDIFRX_DR0_U_Msk;
pub const SPDIFRX_DR0_C_Pos: u32 = 27;
pub const SPDIFRX_DR0_C_Msk: u32 = 0x1 << SPDIFRX_DR0_C_Pos;
pub const SPDIFRX_DR0_C: u32 = SPDIFRX_DR0_C_Msk;
pub const SPDIFRX_DR0_PT_Pos: u32 = 28;
pub const SPDIFRX_DR0_PT_Msk: u32 = 0x3 << SPDIFRX_DR0_PT_Pos;
pub const SPDIFRX_DR0_PT: u32 = SPDIFRX_DR0_PT_Msk;
pub const SPDIFRX_DR1_DR_Pos: u32 = 8;
pub const SPDIFRX_DR1_DR_Msk: u32 = 0xFFFFFF << SPDIFRX_DR1_DR_Pos;
pub const SPDIFRX_DR1_DR: u32 = SPDIFRX_DR1_DR_Msk;
pub const SPDIFRX_DR1_PT_Pos: u32 = 4;
pub const SPDIFRX_DR1_PT_Msk: u32 = 0x3 << SPDIFRX_DR1_PT_Pos;
pub const SPDIFRX_DR1_PT: u32 = SPDIFRX_DR1_PT_Msk;
pub const SPDIFRX_DR1_C_Pos: u32 = 3;
pub const SPDIFRX_DR1_C_Msk: u32 = 0x1 << SPDIFRX_DR1_C_Pos;
pub const SPDIFRX_DR1_C: u32 = SPDIFRX_DR1_C_Msk;
pub const SPDIFRX_DR1_U_Pos: u32 = 2;
pub const SPDIFRX_DR1_U_Msk: u32 = 0x1 << SPDIFRX_DR1_U_Pos;
pub const SPDIFRX_DR1_U: u32 = SPDIFRX_DR1_U_Msk;
pub const SPDIFRX_DR1_V_Pos: u32 = 1;
pub const SPDIFRX_DR1_V_Msk: u32 = 0x1 << SPDIFRX_DR1_V_Pos;
pub const SPDIFRX_DR1_V: u32 = SPDIFRX_DR1_V_Msk;
pub const SPDIFRX_DR1_PE_Pos: u32 = 0;
pub const SPDIFRX_DR1_PE_Msk: u32 = 0x1 << SPDIFRX_DR1_PE_Pos;
pub const SPDIFRX_DR1_PE: u32 = SPDIFRX_DR1_PE_Msk;
pub const SPDIFRX_DR1_DRNL1_Pos: u32 = 16;
pub const SPDIFRX_DR1_DRNL1_Msk: u32 = 0xFFFF << SPDIFRX_DR1_DRNL1_Pos;
pub const SPDIFRX_DR1_DRNL1: u32 = SPDIFRX_DR1_DRNL1_Msk;
pub const SPDIFRX_DR1_DRNL2_Pos: u32 = 0;
pub const SPDIFRX_DR1_DRNL2_Msk: u32 = 0xFFFF << SPDIFRX_DR1_DRNL2_Pos;
pub const SPDIFRX_DR1_DRNL2: u32 = SPDIFRX_DR1_DRNL2_Msk;
pub const SPDIFRX_CSR_USR_Pos: u32 = 0;
pub const SPDIFRX_CSR_USR_Msk: u32 = 0xFFFF << SPDIFRX_CSR_USR_Pos;
pub const SPDIFRX_CSR_USR: u32 = SPDIFRX_CSR_USR_Msk;
pub const SPDIFRX_CSR_CS_Pos: u32 = 16;
pub const SPDIFRX_CSR_CS_Msk: u32 = 0xFF << SPDIFRX_CSR_CS_Pos;
pub const SPDIFRX_CSR_CS: u32 = SPDIFRX_CSR_CS_Msk;
pub const SPDIFRX_CSR_SOB_Pos: u32 = 24;
pub const SPDIFRX_CSR_SOB_Msk: u32 = 0x1 << SPDIFRX_CSR_SOB_Pos;
pub const SPDIFRX_CSR_SOB: u32 = SPDIFRX_CSR_SOB_Msk;
pub const SPDIFRX_DIR_THI_Pos: u32 = 0;
pub const SPDIFRX_DIR_THI_Msk: u32 = 0x13FF << SPDIFRX_DIR_THI_Pos;
pub const SPDIFRX_DIR_THI: u32 = SPDIFRX_DIR_THI_Msk;
pub const SPDIFRX_DIR_TLO_Pos: u32 = 16;
pub const SPDIFRX_DIR_TLO_Msk: u32 = 0x1FFF << SPDIFRX_DIR_TLO_Pos;
pub const SPDIFRX_DIR_TLO: u32 = SPDIFRX_DIR_TLO_Msk;
pub const SDMMC_POWER_PWRCTRL_Pos: u32 = 0;
pub const SDMMC_POWER_PWRCTRL_Msk: u32 = 0x3 << SDMMC_POWER_PWRCTRL_Pos;
pub const SDMMC_POWER_PWRCTRL: u32 = SDMMC_POWER_PWRCTRL_Msk;
pub const SDMMC_POWER_PWRCTRL_0: u32 = 0x1 << SDMMC_POWER_PWRCTRL_Pos;
pub const SDMMC_POWER_PWRCTRL_1: u32 = 0x2 << SDMMC_POWER_PWRCTRL_Pos;
pub const SDMMC_CLKCR_CLKDIV_Pos: u32 = 0;
pub const SDMMC_CLKCR_CLKDIV_Msk: u32 = 0xFF << SDMMC_CLKCR_CLKDIV_Pos;
pub const SDMMC_CLKCR_CLKDIV: u32 = SDMMC_CLKCR_CLKDIV_Msk;
pub const SDMMC_CLKCR_CLKEN_Pos: u32 = 8;
pub const SDMMC_CLKCR_CLKEN_Msk: u32 = 0x1 << SDMMC_CLKCR_CLKEN_Pos;
pub const SDMMC_CLKCR_CLKEN: u32 = SDMMC_CLKCR_CLKEN_Msk;
pub const SDMMC_CLKCR_PWRSAV_Pos: u32 = 9;
pub const SDMMC_CLKCR_PWRSAV_Msk: u32 = 0x1 << SDMMC_CLKCR_PWRSAV_Pos;
pub const SDMMC_CLKCR_PWRSAV: u32 = SDMMC_CLKCR_PWRSAV_Msk;
pub const SDMMC_CLKCR_BYPASS_Pos: u32 = 10;
pub const SDMMC_CLKCR_BYPASS_Msk: u32 = 0x1 << SDMMC_CLKCR_BYPASS_Pos;
pub const SDMMC_CLKCR_BYPASS: u32 = SDMMC_CLKCR_BYPASS_Msk;
pub const SDMMC_CLKCR_WIDBUS_Pos: u32 = 11;
pub const SDMMC_CLKCR_WIDBUS_Msk: u32 = 0x3 << SDMMC_CLKCR_WIDBUS_Pos;
pub const SDMMC_CLKCR_WIDBUS: u32 = SDMMC_CLKCR_WIDBUS_Msk;
pub const SDMMC_CLKCR_WIDBUS_0: u32 = 0x1 << SDMMC_CLKCR_WIDBUS_Pos;
pub const SDMMC_CLKCR_WIDBUS_1: u32 = 0x2 << SDMMC_CLKCR_WIDBUS_Pos;
pub const SDMMC_CLKCR_NEGEDGE_Pos: u32 = 13;
pub const SDMMC_CLKCR_NEGEDGE_Msk: u32 = 0x1 << SDMMC_CLKCR_NEGEDGE_Pos;
pub const SDMMC_CLKCR_NEGEDGE: u32 = SDMMC_CLKCR_NEGEDGE_Msk;
pub const SDMMC_CLKCR_HWFC_EN_Pos: u32 = 14;
pub const SDMMC_CLKCR_HWFC_EN_Msk: u32 = 0x1 << SDMMC_CLKCR_HWFC_EN_Pos;
pub const SDMMC_CLKCR_HWFC_EN: u32 = SDMMC_CLKCR_HWFC_EN_Msk;
pub const SDMMC_ARG_CMDARG_Pos: u32 = 0;
pub const SDMMC_ARG_CMDARG_Msk: u32 = 0xFFFFFFFF << SDMMC_ARG_CMDARG_Pos;
pub const SDMMC_ARG_CMDARG: u32 = SDMMC_ARG_CMDARG_Msk;
pub const SDMMC_CMD_CMDINDEX_Pos: u32 = 0;
pub const SDMMC_CMD_CMDINDEX_Msk: u32 = 0x3F << SDMMC_CMD_CMDINDEX_Pos;
pub const SDMMC_CMD_CMDINDEX: u32 = SDMMC_CMD_CMDINDEX_Msk;
pub const SDMMC_CMD_WAITRESP_Pos: u32 = 6;
pub const SDMMC_CMD_WAITRESP_Msk: u32 = 0x3 << SDMMC_CMD_WAITRESP_Pos;
pub const SDMMC_CMD_WAITRESP: u32 = SDMMC_CMD_WAITRESP_Msk;
pub const SDMMC_CMD_WAITRESP_0: u32 = 0x1 << SDMMC_CMD_WAITRESP_Pos;
pub const SDMMC_CMD_WAITRESP_1: u32 = 0x2 << SDMMC_CMD_WAITRESP_Pos;
pub const SDMMC_CMD_WAITINT_Pos: u32 = 8;
pub const SDMMC_CMD_WAITINT_Msk: u32 = 0x1 << SDMMC_CMD_WAITINT_Pos;
pub const SDMMC_CMD_WAITINT: u32 = SDMMC_CMD_WAITINT_Msk;
pub const SDMMC_CMD_WAITPEND_Pos: u32 = 9;
pub const SDMMC_CMD_WAITPEND_Msk: u32 = 0x1 << SDMMC_CMD_WAITPEND_Pos;
pub const SDMMC_CMD_WAITPEND: u32 = SDMMC_CMD_WAITPEND_Msk;
pub const SDMMC_CMD_CPSMEN_Pos: u32 = 10;
pub const SDMMC_CMD_CPSMEN_Msk: u32 = 0x1 << SDMMC_CMD_CPSMEN_Pos;
pub const SDMMC_CMD_CPSMEN: u32 = SDMMC_CMD_CPSMEN_Msk;
pub const SDMMC_CMD_SDIOSUSPEND_Pos: u32 = 11;
pub const SDMMC_CMD_SDIOSUSPEND_Msk: u32 = 0x1 << SDMMC_CMD_SDIOSUSPEND_Pos;
pub const SDMMC_CMD_SDIOSUSPEND: u32 = SDMMC_CMD_SDIOSUSPEND_Msk;
pub const SDMMC_RESPCMD_RESPCMD_Pos: u32 = 0;
pub const SDMMC_RESPCMD_RESPCMD_Msk: u32 = 0x3F << SDMMC_RESPCMD_RESPCMD_Pos;
pub const SDMMC_RESPCMD_RESPCMD: u32 = SDMMC_RESPCMD_RESPCMD_Msk;
pub const SDMMC_RESP0_CARDSTATUS0_Pos: u32 = 0;
pub const SDMMC_RESP0_CARDSTATUS0_Msk: u32 = 0xFFFFFFFF << SDMMC_RESP0_CARDSTATUS0_Pos;
pub const SDMMC_RESP0_CARDSTATUS0: u32 = SDMMC_RESP0_CARDSTATUS0_Msk;
pub const SDMMC_RESP1_CARDSTATUS1_Pos: u32 = 0;
pub const SDMMC_RESP1_CARDSTATUS1_Msk: u32 = 0xFFFFFFFF << SDMMC_RESP1_CARDSTATUS1_Pos;
pub const SDMMC_RESP1_CARDSTATUS1: u32 = SDMMC_RESP1_CARDSTATUS1_Msk;
pub const SDMMC_RESP2_CARDSTATUS2_Pos: u32 = 0;
pub const SDMMC_RESP2_CARDSTATUS2_Msk: u32 = 0xFFFFFFFF << SDMMC_RESP2_CARDSTATUS2_Pos;
pub const SDMMC_RESP2_CARDSTATUS2: u32 = SDMMC_RESP2_CARDSTATUS2_Msk;
pub const SDMMC_RESP3_CARDSTATUS3_Pos: u32 = 0;
pub const SDMMC_RESP3_CARDSTATUS3_Msk: u32 = 0xFFFFFFFF << SDMMC_RESP3_CARDSTATUS3_Pos;
pub const SDMMC_RESP3_CARDSTATUS3: u32 = SDMMC_RESP3_CARDSTATUS3_Msk;
pub const SDMMC_RESP4_CARDSTATUS4_Pos: u32 = 0;
pub const SDMMC_RESP4_CARDSTATUS4_Msk: u32 = 0xFFFFFFFF << SDMMC_RESP4_CARDSTATUS4_Pos;
pub const SDMMC_RESP4_CARDSTATUS4: u32 = SDMMC_RESP4_CARDSTATUS4_Msk;
pub const SDMMC_DTIMER_DATATIME_Pos: u32 = 0;
pub const SDMMC_DTIMER_DATATIME_Msk: u32 = 0xFFFFFFFF << SDMMC_DTIMER_DATATIME_Pos;
pub const SDMMC_DTIMER_DATATIME: u32 = SDMMC_DTIMER_DATATIME_Msk;
pub const SDMMC_DLEN_DATALENGTH_Pos: u32 = 0;
pub const SDMMC_DLEN_DATALENGTH_Msk: u32 = 0x1FFFFFF << SDMMC_DLEN_DATALENGTH_Pos;
pub const SDMMC_DLEN_DATALENGTH: u32 = SDMMC_DLEN_DATALENGTH_Msk;
pub const SDMMC_DCTRL_DTEN_Pos: u32 = 0;
pub const SDMMC_DCTRL_DTEN_Msk: u32 = 0x1 << SDMMC_DCTRL_DTEN_Pos;
pub const SDMMC_DCTRL_DTEN: u32 = SDMMC_DCTRL_DTEN_Msk;
pub const SDMMC_DCTRL_DTDIR_Pos: u32 = 1;
pub const SDMMC_DCTRL_DTDIR_Msk: u32 = 0x1 << SDMMC_DCTRL_DTDIR_Pos;
pub const SDMMC_DCTRL_DTDIR: u32 = SDMMC_DCTRL_DTDIR_Msk;
pub const SDMMC_DCTRL_DTMODE_Pos: u32 = 2;
pub const SDMMC_DCTRL_DTMODE_Msk: u32 = 0x1 << SDMMC_DCTRL_DTMODE_Pos;
pub const SDMMC_DCTRL_DTMODE: u32 = SDMMC_DCTRL_DTMODE_Msk;
pub const SDMMC_DCTRL_DMAEN_Pos: u32 = 3;
pub const SDMMC_DCTRL_DMAEN_Msk: u32 = 0x1 << SDMMC_DCTRL_DMAEN_Pos;
pub const SDMMC_DCTRL_DMAEN: u32 = SDMMC_DCTRL_DMAEN_Msk;
pub const SDMMC_DCTRL_DBLOCKSIZE_Pos: u32 = 4;
pub const SDMMC_DCTRL_DBLOCKSIZE_Msk: u32 = 0xF << SDMMC_DCTRL_DBLOCKSIZE_Pos;
pub const SDMMC_DCTRL_DBLOCKSIZE: u32 = SDMMC_DCTRL_DBLOCKSIZE_Msk;
pub const SDMMC_DCTRL_DBLOCKSIZE_0: u32 = 0x1 << SDMMC_DCTRL_DBLOCKSIZE_Pos;
pub const SDMMC_DCTRL_DBLOCKSIZE_1: u32 = 0x2 << SDMMC_DCTRL_DBLOCKSIZE_Pos;
pub const SDMMC_DCTRL_DBLOCKSIZE_2: u32 = 0x4 << SDMMC_DCTRL_DBLOCKSIZE_Pos;
pub const SDMMC_DCTRL_DBLOCKSIZE_3: u32 = 0x8 << SDMMC_DCTRL_DBLOCKSIZE_Pos;
pub const SDMMC_DCTRL_RWSTART_Pos: u32 = 8;
pub const SDMMC_DCTRL_RWSTART_Msk: u32 = 0x1 << SDMMC_DCTRL_RWSTART_Pos;
pub const SDMMC_DCTRL_RWSTART: u32 = SDMMC_DCTRL_RWSTART_Msk;
pub const SDMMC_DCTRL_RWSTOP_Pos: u32 = 9;
pub const SDMMC_DCTRL_RWSTOP_Msk: u32 = 0x1 << SDMMC_DCTRL_RWSTOP_Pos;
pub const SDMMC_DCTRL_RWSTOP: u32 = SDMMC_DCTRL_RWSTOP_Msk;
pub const SDMMC_DCTRL_RWMOD_Pos: u32 = 10;
pub const SDMMC_DCTRL_RWMOD_Msk: u32 = 0x1 << SDMMC_DCTRL_RWMOD_Pos;
pub const SDMMC_DCTRL_RWMOD: u32 = SDMMC_DCTRL_RWMOD_Msk;
pub const SDMMC_DCTRL_SDIOEN_Pos: u32 = 11;
pub const SDMMC_DCTRL_SDIOEN_Msk: u32 = 0x1 << SDMMC_DCTRL_SDIOEN_Pos;
pub const SDMMC_DCTRL_SDIOEN: u32 = SDMMC_DCTRL_SDIOEN_Msk;
pub const SDMMC_DCOUNT_DATACOUNT_Pos: u32 = 0;
pub const SDMMC_DCOUNT_DATACOUNT_Msk: u32 = 0x1FFFFFF << SDMMC_DCOUNT_DATACOUNT_Pos;
pub const SDMMC_DCOUNT_DATACOUNT: u32 = SDMMC_DCOUNT_DATACOUNT_Msk;
pub const SDMMC_STA_CCRCFAIL_Pos: u32 = 0;
pub const SDMMC_STA_CCRCFAIL_Msk: u32 = 0x1 << SDMMC_STA_CCRCFAIL_Pos;
pub const SDMMC_STA_CCRCFAIL: u32 = SDMMC_STA_CCRCFAIL_Msk;
pub const SDMMC_STA_DCRCFAIL_Pos: u32 = 1;
pub const SDMMC_STA_DCRCFAIL_Msk: u32 = 0x1 << SDMMC_STA_DCRCFAIL_Pos;
pub const SDMMC_STA_DCRCFAIL: u32 = SDMMC_STA_DCRCFAIL_Msk;
pub const SDMMC_STA_CTIMEOUT_Pos: u32 = 2;
pub const SDMMC_STA_CTIMEOUT_Msk: u32 = 0x1 << SDMMC_STA_CTIMEOUT_Pos;
pub const SDMMC_STA_CTIMEOUT: u32 = SDMMC_STA_CTIMEOUT_Msk;
pub const SDMMC_STA_DTIMEOUT_Pos: u32 = 3;
pub const SDMMC_STA_DTIMEOUT_Msk: u32 = 0x1 << SDMMC_STA_DTIMEOUT_Pos;
pub const SDMMC_STA_DTIMEOUT: u32 = SDMMC_STA_DTIMEOUT_Msk;
pub const SDMMC_STA_TXUNDERR_Pos: u32 = 4;
pub const SDMMC_STA_TXUNDERR_Msk: u32 = 0x1 << SDMMC_STA_TXUNDERR_Pos;
pub const SDMMC_STA_TXUNDERR: u32 = SDMMC_STA_TXUNDERR_Msk;
pub const SDMMC_STA_RXOVERR_Pos: u32 = 5;
pub const SDMMC_STA_RXOVERR_Msk: u32 = 0x1 << SDMMC_STA_RXOVERR_Pos;
pub const SDMMC_STA_RXOVERR: u32 = SDMMC_STA_RXOVERR_Msk;
pub const SDMMC_STA_CMDREND_Pos: u32 = 6;
pub const SDMMC_STA_CMDREND_Msk: u32 = 0x1 << SDMMC_STA_CMDREND_Pos;
pub const SDMMC_STA_CMDREND: u32 = SDMMC_STA_CMDREND_Msk;
pub const SDMMC_STA_CMDSENT_Pos: u32 = 7;
pub const SDMMC_STA_CMDSENT_Msk: u32 = 0x1 << SDMMC_STA_CMDSENT_Pos;
pub const SDMMC_STA_CMDSENT: u32 = SDMMC_STA_CMDSENT_Msk;
pub const SDMMC_STA_DATAEND_Pos: u32 = 8;
pub const SDMMC_STA_DATAEND_Msk: u32 = 0x1 << SDMMC_STA_DATAEND_Pos;
pub const SDMMC_STA_DATAEND: u32 = SDMMC_STA_DATAEND_Msk;
pub const SDMMC_STA_DBCKEND_Pos: u32 = 10;
pub const SDMMC_STA_DBCKEND_Msk: u32 = 0x1 << SDMMC_STA_DBCKEND_Pos;
pub const SDMMC_STA_DBCKEND: u32 = SDMMC_STA_DBCKEND_Msk;
pub const SDMMC_STA_CMDACT_Pos: u32 = 11;
pub const SDMMC_STA_CMDACT_Msk: u32 = 0x1 << SDMMC_STA_CMDACT_Pos;
pub const SDMMC_STA_CMDACT: u32 = SDMMC_STA_CMDACT_Msk;
pub const SDMMC_STA_TXACT_Pos: u32 = 12;
pub const SDMMC_STA_TXACT_Msk: u32 = 0x1 << SDMMC_STA_TXACT_Pos;
pub const SDMMC_STA_TXACT: u32 = SDMMC_STA_TXACT_Msk;
pub const SDMMC_STA_RXACT_Pos: u32 = 13;
pub const SDMMC_STA_RXACT_Msk: u32 = 0x1 << SDMMC_STA_RXACT_Pos;
pub const SDMMC_STA_RXACT: u32 = SDMMC_STA_RXACT_Msk;
pub const SDMMC_STA_TXFIFOHE_Pos: u32 = 14;
pub const SDMMC_STA_TXFIFOHE_Msk: u32 = 0x1 << SDMMC_STA_TXFIFOHE_Pos;
pub const SDMMC_STA_TXFIFOHE: u32 = SDMMC_STA_TXFIFOHE_Msk;
pub const SDMMC_STA_RXFIFOHF_Pos: u32 = 15;
pub const SDMMC_STA_RXFIFOHF_Msk: u32 = 0x1 << SDMMC_STA_RXFIFOHF_Pos;
pub const SDMMC_STA_RXFIFOHF: u32 = SDMMC_STA_RXFIFOHF_Msk;
pub const SDMMC_STA_TXFIFOF_Pos: u32 = 16;
pub const SDMMC_STA_TXFIFOF_Msk: u32 = 0x1 << SDMMC_STA_TXFIFOF_Pos;
pub const SDMMC_STA_TXFIFOF: u32 = SDMMC_STA_TXFIFOF_Msk;
pub const SDMMC_STA_RXFIFOF_Pos: u32 = 17;
pub const SDMMC_STA_RXFIFOF_Msk: u32 = 0x1 << SDMMC_STA_RXFIFOF_Pos;
pub const SDMMC_STA_RXFIFOF: u32 = SDMMC_STA_RXFIFOF_Msk;
pub const SDMMC_STA_TXFIFOE_Pos: u32 = 18;
pub const SDMMC_STA_TXFIFOE_Msk: u32 = 0x1 << SDMMC_STA_TXFIFOE_Pos;
pub const SDMMC_STA_TXFIFOE: u32 = SDMMC_STA_TXFIFOE_Msk;
pub const SDMMC_STA_RXFIFOE_Pos: u32 = 19;
pub const SDMMC_STA_RXFIFOE_Msk: u32 = 0x1 << SDMMC_STA_RXFIFOE_Pos;
pub const SDMMC_STA_RXFIFOE: u32 = SDMMC_STA_RXFIFOE_Msk;
pub const SDMMC_STA_TXDAVL_Pos: u32 = 20;
pub const SDMMC_STA_TXDAVL_Msk: u32 = 0x1 << SDMMC_STA_TXDAVL_Pos;
pub const SDMMC_STA_TXDAVL: u32 = SDMMC_STA_TXDAVL_Msk;
pub const SDMMC_STA_RXDAVL_Pos: u32 = 21;
pub const SDMMC_STA_RXDAVL_Msk: u32 = 0x1 << SDMMC_STA_RXDAVL_Pos;
pub const SDMMC_STA_RXDAVL: u32 = SDMMC_STA_RXDAVL_Msk;
pub const SDMMC_STA_SDIOIT_Pos: u32 = 22;
pub const SDMMC_STA_SDIOIT_Msk: u32 = 0x1 << SDMMC_STA_SDIOIT_Pos;
pub const SDMMC_STA_SDIOIT: u32 = SDMMC_STA_SDIOIT_Msk;
pub const SDMMC_ICR_CCRCFAILC_Pos: u32 = 0;
pub const SDMMC_ICR_CCRCFAILC_Msk: u32 = 0x1 << SDMMC_ICR_CCRCFAILC_Pos;
pub const SDMMC_ICR_CCRCFAILC: u32 = SDMMC_ICR_CCRCFAILC_Msk;
pub const SDMMC_ICR_DCRCFAILC_Pos: u32 = 1;
pub const SDMMC_ICR_DCRCFAILC_Msk: u32 = 0x1 << SDMMC_ICR_DCRCFAILC_Pos;
pub const SDMMC_ICR_DCRCFAILC: u32 = SDMMC_ICR_DCRCFAILC_Msk;
pub const SDMMC_ICR_CTIMEOUTC_Pos: u32 = 2;
pub const SDMMC_ICR_CTIMEOUTC_Msk: u32 = 0x1 << SDMMC_ICR_CTIMEOUTC_Pos;
pub const SDMMC_ICR_CTIMEOUTC: u32 = SDMMC_ICR_CTIMEOUTC_Msk;
pub const SDMMC_ICR_DTIMEOUTC_Pos: u32 = 3;
pub const SDMMC_ICR_DTIMEOUTC_Msk: u32 = 0x1 << SDMMC_ICR_DTIMEOUTC_Pos;
pub const SDMMC_ICR_DTIMEOUTC: u32 = SDMMC_ICR_DTIMEOUTC_Msk;
pub const SDMMC_ICR_TXUNDERRC_Pos: u32 = 4;
pub const SDMMC_ICR_TXUNDERRC_Msk: u32 = 0x1 << SDMMC_ICR_TXUNDERRC_Pos;
pub const SDMMC_ICR_TXUNDERRC: u32 = SDMMC_ICR_TXUNDERRC_Msk;
pub const SDMMC_ICR_RXOVERRC_Pos: u32 = 5;
pub const SDMMC_ICR_RXOVERRC_Msk: u32 = 0x1 << SDMMC_ICR_RXOVERRC_Pos;
pub const SDMMC_ICR_RXOVERRC: u32 = SDMMC_ICR_RXOVERRC_Msk;
pub const SDMMC_ICR_CMDRENDC_Pos: u32 = 6;
pub const SDMMC_ICR_CMDRENDC_Msk: u32 = 0x1 << SDMMC_ICR_CMDRENDC_Pos;
pub const SDMMC_ICR_CMDRENDC: u32 = SDMMC_ICR_CMDRENDC_Msk;
pub const SDMMC_ICR_CMDSENTC_Pos: u32 = 7;
pub const SDMMC_ICR_CMDSENTC_Msk: u32 = 0x1 << SDMMC_ICR_CMDSENTC_Pos;
pub const SDMMC_ICR_CMDSENTC: u32 = SDMMC_ICR_CMDSENTC_Msk;
pub const SDMMC_ICR_DATAENDC_Pos: u32 = 8;
pub const SDMMC_ICR_DATAENDC_Msk: u32 = 0x1 << SDMMC_ICR_DATAENDC_Pos;
pub const SDMMC_ICR_DATAENDC: u32 = SDMMC_ICR_DATAENDC_Msk;
pub const SDMMC_ICR_DBCKENDC_Pos: u32 = 10;
pub const SDMMC_ICR_DBCKENDC_Msk: u32 = 0x1 << SDMMC_ICR_DBCKENDC_Pos;
pub const SDMMC_ICR_DBCKENDC: u32 = SDMMC_ICR_DBCKENDC_Msk;
pub const SDMMC_ICR_SDIOITC_Pos: u32 = 22;
pub const SDMMC_ICR_SDIOITC_Msk: u32 = 0x1 << SDMMC_ICR_SDIOITC_Pos;
pub const SDMMC_ICR_SDIOITC: u32 = SDMMC_ICR_SDIOITC_Msk;
pub const SDMMC_MASK_CCRCFAILIE_Pos: u32 = 0;
pub const SDMMC_MASK_CCRCFAILIE_Msk: u32 = 0x1 << SDMMC_MASK_CCRCFAILIE_Pos;
pub const SDMMC_MASK_CCRCFAILIE: u32 = SDMMC_MASK_CCRCFAILIE_Msk;
pub const SDMMC_MASK_DCRCFAILIE_Pos: u32 = 1;
pub const SDMMC_MASK_DCRCFAILIE_Msk: u32 = 0x1 << SDMMC_MASK_DCRCFAILIE_Pos;
pub const SDMMC_MASK_DCRCFAILIE: u32 = SDMMC_MASK_DCRCFAILIE_Msk;
pub const SDMMC_MASK_CTIMEOUTIE_Pos: u32 = 2;
pub const SDMMC_MASK_CTIMEOUTIE_Msk: u32 = 0x1 << SDMMC_MASK_CTIMEOUTIE_Pos;
pub const SDMMC_MASK_CTIMEOUTIE: u32 = SDMMC_MASK_CTIMEOUTIE_Msk;
pub const SDMMC_MASK_DTIMEOUTIE_Pos: u32 = 3;
pub const SDMMC_MASK_DTIMEOUTIE_Msk: u32 = 0x1 << SDMMC_MASK_DTIMEOUTIE_Pos;
pub const SDMMC_MASK_DTIMEOUTIE: u32 = SDMMC_MASK_DTIMEOUTIE_Msk;
pub const SDMMC_MASK_TXUNDERRIE_Pos: u32 = 4;
pub const SDMMC_MASK_TXUNDERRIE_Msk: u32 = 0x1 << SDMMC_MASK_TXUNDERRIE_Pos;
pub const SDMMC_MASK_TXUNDERRIE: u32 = SDMMC_MASK_TXUNDERRIE_Msk;
pub const SDMMC_MASK_RXOVERRIE_Pos: u32 = 5;
pub const SDMMC_MASK_RXOVERRIE_Msk: u32 = 0x1 << SDMMC_MASK_RXOVERRIE_Pos;
pub const SDMMC_MASK_RXOVERRIE: u32 = SDMMC_MASK_RXOVERRIE_Msk;
pub const SDMMC_MASK_CMDRENDIE_Pos: u32 = 6;
pub const SDMMC_MASK_CMDRENDIE_Msk: u32 = 0x1 << SDMMC_MASK_CMDRENDIE_Pos;
pub const SDMMC_MASK_CMDRENDIE: u32 = SDMMC_MASK_CMDRENDIE_Msk;
pub const SDMMC_MASK_CMDSENTIE_Pos: u32 = 7;
pub const SDMMC_MASK_CMDSENTIE_Msk: u32 = 0x1 << SDMMC_MASK_CMDSENTIE_Pos;
pub const SDMMC_MASK_CMDSENTIE: u32 = SDMMC_MASK_CMDSENTIE_Msk;
pub const SDMMC_MASK_DATAENDIE_Pos: u32 = 8;
pub const SDMMC_MASK_DATAENDIE_Msk: u32 = 0x1 << SDMMC_MASK_DATAENDIE_Pos;
pub const SDMMC_MASK_DATAENDIE: u32 = SDMMC_MASK_DATAENDIE_Msk;
pub const SDMMC_MASK_DBCKENDIE_Pos: u32 = 10;
pub const SDMMC_MASK_DBCKENDIE_Msk: u32 = 0x1 << SDMMC_MASK_DBCKENDIE_Pos;
pub const SDMMC_MASK_DBCKENDIE: u32 = SDMMC_MASK_DBCKENDIE_Msk;
pub const SDMMC_MASK_CMDACTIE_Pos: u32 = 11;
pub const SDMMC_MASK_CMDACTIE_Msk: u32 = 0x1 << SDMMC_MASK_CMDACTIE_Pos;
pub const SDMMC_MASK_CMDACTIE: u32 = SDMMC_MASK_CMDACTIE_Msk;
pub const SDMMC_MASK_TXACTIE_Pos: u32 = 12;
pub const SDMMC_MASK_TXACTIE_Msk: u32 = 0x1 << SDMMC_MASK_TXACTIE_Pos;
pub const SDMMC_MASK_TXACTIE: u32 = SDMMC_MASK_TXACTIE_Msk;
pub const SDMMC_MASK_RXACTIE_Pos: u32 = 13;
pub const SDMMC_MASK_RXACTIE_Msk: u32 = 0x1 << SDMMC_MASK_RXACTIE_Pos;
pub const SDMMC_MASK_RXACTIE: u32 = SDMMC_MASK_RXACTIE_Msk;
pub const SDMMC_MASK_TXFIFOHEIE_Pos: u32 = 14;
pub const SDMMC_MASK_TXFIFOHEIE_Msk: u32 = 0x1 << SDMMC_MASK_TXFIFOHEIE_Pos;
pub const SDMMC_MASK_TXFIFOHEIE: u32 = SDMMC_MASK_TXFIFOHEIE_Msk;
pub const SDMMC_MASK_RXFIFOHFIE_Pos: u32 = 15;
pub const SDMMC_MASK_RXFIFOHFIE_Msk: u32 = 0x1 << SDMMC_MASK_RXFIFOHFIE_Pos;
pub const SDMMC_MASK_RXFIFOHFIE: u32 = SDMMC_MASK_RXFIFOHFIE_Msk;
pub const SDMMC_MASK_TXFIFOFIE_Pos: u32 = 16;
pub const SDMMC_MASK_TXFIFOFIE_Msk: u32 = 0x1 << SDMMC_MASK_TXFIFOFIE_Pos;
pub const SDMMC_MASK_TXFIFOFIE: u32 = SDMMC_MASK_TXFIFOFIE_Msk;
pub const SDMMC_MASK_RXFIFOFIE_Pos: u32 = 17;
pub const SDMMC_MASK_RXFIFOFIE_Msk: u32 = 0x1 << SDMMC_MASK_RXFIFOFIE_Pos;
pub const SDMMC_MASK_RXFIFOFIE: u32 = SDMMC_MASK_RXFIFOFIE_Msk;
pub const SDMMC_MASK_TXFIFOEIE_Pos: u32 = 18;
pub const SDMMC_MASK_TXFIFOEIE_Msk: u32 = 0x1 << SDMMC_MASK_TXFIFOEIE_Pos;
pub const SDMMC_MASK_TXFIFOEIE: u32 = SDMMC_MASK_TXFIFOEIE_Msk;
pub const SDMMC_MASK_RXFIFOEIE_Pos: u32 = 19;
pub const SDMMC_MASK_RXFIFOEIE_Msk: u32 = 0x1 << SDMMC_MASK_RXFIFOEIE_Pos;
pub const SDMMC_MASK_RXFIFOEIE: u32 = SDMMC_MASK_RXFIFOEIE_Msk;
pub const SDMMC_MASK_TXDAVLIE_Pos: u32 = 20;
pub const SDMMC_MASK_TXDAVLIE_Msk: u32 = 0x1 << SDMMC_MASK_TXDAVLIE_Pos;
pub const SDMMC_MASK_TXDAVLIE: u32 = SDMMC_MASK_TXDAVLIE_Msk;
pub const SDMMC_MASK_RXDAVLIE_Pos: u32 = 21;
pub const SDMMC_MASK_RXDAVLIE_Msk: u32 = 0x1 << SDMMC_MASK_RXDAVLIE_Pos;
pub const SDMMC_MASK_RXDAVLIE: u32 = SDMMC_MASK_RXDAVLIE_Msk;
pub const SDMMC_MASK_SDIOITIE_Pos: u32 = 22;
pub const SDMMC_MASK_SDIOITIE_Msk: u32 = 0x1 << SDMMC_MASK_SDIOITIE_Pos;
pub const SDMMC_MASK_SDIOITIE: u32 = SDMMC_MASK_SDIOITIE_Msk;
pub const SDMMC_FIFOCNT_FIFOCOUNT_Pos: u32 = 0;
pub const SDMMC_FIFOCNT_FIFOCOUNT_Msk: u32 = 0xFFFFFF << SDMMC_FIFOCNT_FIFOCOUNT_Pos;
pub const SDMMC_FIFOCNT_FIFOCOUNT: u32 = SDMMC_FIFOCNT_FIFOCOUNT_Msk;
pub const SDMMC_FIFO_FIFODATA_Pos: u32 = 0;
pub const SDMMC_FIFO_FIFODATA_Msk: u32 = 0xFFFFFFFF << SDMMC_FIFO_FIFODATA_Pos;
pub const SDMMC_FIFO_FIFODATA: u32 = SDMMC_FIFO_FIFODATA_Msk;
pub const SPI_CR1_CPHA_Pos: u32 = 0;
pub const SPI_CR1_CPHA_Msk: u32 = 0x1 << SPI_CR1_CPHA_Pos;
pub const SPI_CR1_CPHA: u32 = SPI_CR1_CPHA_Msk;
pub const SPI_CR1_CPOL_Pos: u32 = 1;
pub const SPI_CR1_CPOL_Msk: u32 = 0x1 << SPI_CR1_CPOL_Pos;
pub const SPI_CR1_CPOL: u32 = SPI_CR1_CPOL_Msk;
pub const SPI_CR1_MSTR_Pos: u32 = 2;
pub const SPI_CR1_MSTR_Msk: u32 = 0x1 << SPI_CR1_MSTR_Pos;
pub const SPI_CR1_MSTR: u32 = SPI_CR1_MSTR_Msk;
pub const SPI_CR1_BR_Pos: u32 = 3;
pub const SPI_CR1_BR_Msk: u32 = 0x7 << SPI_CR1_BR_Pos;
pub const SPI_CR1_BR: u32 = SPI_CR1_BR_Msk;
pub const SPI_CR1_BR_0: u32 = 0x1 << SPI_CR1_BR_Pos;
pub const SPI_CR1_BR_1: u32 = 0x2 << SPI_CR1_BR_Pos;
pub const SPI_CR1_BR_2: u32 = 0x4 << SPI_CR1_BR_Pos;
pub const SPI_CR1_SPE_Pos: u32 = 6;
pub const SPI_CR1_SPE_Msk: u32 = 0x1 << SPI_CR1_SPE_Pos;
pub const SPI_CR1_SPE: u32 = SPI_CR1_SPE_Msk;
pub const SPI_CR1_LSBFIRST_Pos: u32 = 7;
pub const SPI_CR1_LSBFIRST_Msk: u32 = 0x1 << SPI_CR1_LSBFIRST_Pos;
pub const SPI_CR1_LSBFIRST: u32 = SPI_CR1_LSBFIRST_Msk;
pub const SPI_CR1_SSI_Pos: u32 = 8;
pub const SPI_CR1_SSI_Msk: u32 = 0x1 << SPI_CR1_SSI_Pos;
pub const SPI_CR1_SSI: u32 = SPI_CR1_SSI_Msk;
pub const SPI_CR1_SSM_Pos: u32 = 9;
pub const SPI_CR1_SSM_Msk: u32 = 0x1 << SPI_CR1_SSM_Pos;
pub const SPI_CR1_SSM: u32 = SPI_CR1_SSM_Msk;
pub const SPI_CR1_RXONLY_Pos: u32 = 10;
pub const SPI_CR1_RXONLY_Msk: u32 = 0x1 << SPI_CR1_RXONLY_Pos;
pub const SPI_CR1_RXONLY: u32 = SPI_CR1_RXONLY_Msk;
pub const SPI_CR1_CRCL_Pos: u32 = 11;
pub const SPI_CR1_CRCL_Msk: u32 = 0x1 << SPI_CR1_CRCL_Pos;
pub const SPI_CR1_CRCL: u32 = SPI_CR1_CRCL_Msk;
pub const SPI_CR1_CRCNEXT_Pos: u32 = 12;
pub const SPI_CR1_CRCNEXT_Msk: u32 = 0x1 << SPI_CR1_CRCNEXT_Pos;
pub const SPI_CR1_CRCNEXT: u32 = SPI_CR1_CRCNEXT_Msk;
pub const SPI_CR1_CRCEN_Pos: u32 = 13;
pub const SPI_CR1_CRCEN_Msk: u32 = 0x1 << SPI_CR1_CRCEN_Pos;
pub const SPI_CR1_CRCEN: u32 = SPI_CR1_CRCEN_Msk;
pub const SPI_CR1_BIDIOE_Pos: u32 = 14;
pub const SPI_CR1_BIDIOE_Msk: u32 = 0x1 << SPI_CR1_BIDIOE_Pos;
pub const SPI_CR1_BIDIOE: u32 = SPI_CR1_BIDIOE_Msk;
pub const SPI_CR1_BIDIMODE_Pos: u32 = 15;
pub const SPI_CR1_BIDIMODE_Msk: u32 = 0x1 << SPI_CR1_BIDIMODE_Pos;
pub const SPI_CR1_BIDIMODE: u32 = SPI_CR1_BIDIMODE_Msk;
pub const SPI_CR2_RXDMAEN_Pos: u32 = 0;
pub const SPI_CR2_RXDMAEN_Msk: u32 = 0x1 << SPI_CR2_RXDMAEN_Pos;
pub const SPI_CR2_RXDMAEN: u32 = SPI_CR2_RXDMAEN_Msk;
pub const SPI_CR2_TXDMAEN_Pos: u32 = 1;
pub const SPI_CR2_TXDMAEN_Msk: u32 = 0x1 << SPI_CR2_TXDMAEN_Pos;
pub const SPI_CR2_TXDMAEN: u32 = SPI_CR2_TXDMAEN_Msk;
pub const SPI_CR2_SSOE_Pos: u32 = 2;
pub const SPI_CR2_SSOE_Msk: u32 = 0x1 << SPI_CR2_SSOE_Pos;
pub const SPI_CR2_SSOE: u32 = SPI_CR2_SSOE_Msk;
pub const SPI_CR2_NSSP_Pos: u32 = 3;
pub const SPI_CR2_NSSP_Msk: u32 = 0x1 << SPI_CR2_NSSP_Pos;
pub const SPI_CR2_NSSP: u32 = SPI_CR2_NSSP_Msk;
pub const SPI_CR2_FRF_Pos: u32 = 4;
pub const SPI_CR2_FRF_Msk: u32 = 0x1 << SPI_CR2_FRF_Pos;
pub const SPI_CR2_FRF: u32 = SPI_CR2_FRF_Msk;
pub const SPI_CR2_ERRIE_Pos: u32 = 5;
pub const SPI_CR2_ERRIE_Msk: u32 = 0x1 << SPI_CR2_ERRIE_Pos;
pub const SPI_CR2_ERRIE: u32 = SPI_CR2_ERRIE_Msk;
pub const SPI_CR2_RXNEIE_Pos: u32 = 6;
pub const SPI_CR2_RXNEIE_Msk: u32 = 0x1 << SPI_CR2_RXNEIE_Pos;
pub const SPI_CR2_RXNEIE: u32 = SPI_CR2_RXNEIE_Msk;
pub const SPI_CR2_TXEIE_Pos: u32 = 7;
pub const SPI_CR2_TXEIE_Msk: u32 = 0x1 << SPI_CR2_TXEIE_Pos;
pub const SPI_CR2_TXEIE: u32 = SPI_CR2_TXEIE_Msk;
pub const SPI_CR2_DS_Pos: u32 = 8;
pub const SPI_CR2_DS_Msk: u32 = 0xF << SPI_CR2_DS_Pos;
pub const SPI_CR2_DS: u32 = SPI_CR2_DS_Msk;
pub const SPI_CR2_DS_0: u32 = 0x1 << SPI_CR2_DS_Pos;
pub const SPI_CR2_DS_1: u32 = 0x2 << SPI_CR2_DS_Pos;
pub const SPI_CR2_DS_2: u32 = 0x4 << SPI_CR2_DS_Pos;
pub const SPI_CR2_DS_3: u32 = 0x8 << SPI_CR2_DS_Pos;
pub const SPI_CR2_FRXTH_Pos: u32 = 12;
pub const SPI_CR2_FRXTH_Msk: u32 = 0x1 << SPI_CR2_FRXTH_Pos;
pub const SPI_CR2_FRXTH: u32 = SPI_CR2_FRXTH_Msk;
pub const SPI_CR2_LDMARX_Pos: u32 = 13;
pub const SPI_CR2_LDMARX_Msk: u32 = 0x1 << SPI_CR2_LDMARX_Pos;
pub const SPI_CR2_LDMARX: u32 = SPI_CR2_LDMARX_Msk;
pub const SPI_CR2_LDMATX_Pos: u32 = 14;
pub const SPI_CR2_LDMATX_Msk: u32 = 0x1 << SPI_CR2_LDMATX_Pos;
pub const SPI_CR2_LDMATX: u32 = SPI_CR2_LDMATX_Msk;
pub const SPI_SR_RXNE_Pos: u32 = 0;
pub const SPI_SR_RXNE_Msk: u32 = 0x1 << SPI_SR_RXNE_Pos;
pub const SPI_SR_RXNE: u32 = SPI_SR_RXNE_Msk;
pub const SPI_SR_TXE_Pos: u32 = 1;
pub const SPI_SR_TXE_Msk: u32 = 0x1 << SPI_SR_TXE_Pos;
pub const SPI_SR_TXE: u32 = SPI_SR_TXE_Msk;
pub const SPI_SR_CHSIDE_Pos: u32 = 2;
pub const SPI_SR_CHSIDE_Msk: u32 = 0x1 << SPI_SR_CHSIDE_Pos;
pub const SPI_SR_CHSIDE: u32 = SPI_SR_CHSIDE_Msk;
pub const SPI_SR_UDR_Pos: u32 = 3;
pub const SPI_SR_UDR_Msk: u32 = 0x1 << SPI_SR_UDR_Pos;
pub const SPI_SR_UDR: u32 = SPI_SR_UDR_Msk;
pub const SPI_SR_CRCERR_Pos: u32 = 4;
pub const SPI_SR_CRCERR_Msk: u32 = 0x1 << SPI_SR_CRCERR_Pos;
pub const SPI_SR_CRCERR: u32 = SPI_SR_CRCERR_Msk;
pub const SPI_SR_MODF_Pos: u32 = 5;
pub const SPI_SR_MODF_Msk: u32 = 0x1 << SPI_SR_MODF_Pos;
pub const SPI_SR_MODF: u32 = SPI_SR_MODF_Msk;
pub const SPI_SR_OVR_Pos: u32 = 6;
pub const SPI_SR_OVR_Msk: u32 = 0x1 << SPI_SR_OVR_Pos;
pub const SPI_SR_OVR: u32 = SPI_SR_OVR_Msk;
pub const SPI_SR_BSY_Pos: u32 = 7;
pub const SPI_SR_BSY_Msk: u32 = 0x1 << SPI_SR_BSY_Pos;
pub const SPI_SR_BSY: u32 = SPI_SR_BSY_Msk;
pub const SPI_SR_FRE_Pos: u32 = 8;
pub const SPI_SR_FRE_Msk: u32 = 0x1 << SPI_SR_FRE_Pos;
pub const SPI_SR_FRE: u32 = SPI_SR_FRE_Msk;
pub const SPI_SR_FRLVL_Pos: u32 = 9;
pub const SPI_SR_FRLVL_Msk: u32 = 0x3 << SPI_SR_FRLVL_Pos;
pub const SPI_SR_FRLVL: u32 = SPI_SR_FRLVL_Msk;
pub const SPI_SR_FRLVL_0: u32 = 0x1 << SPI_SR_FRLVL_Pos;
pub const SPI_SR_FRLVL_1: u32 = 0x2 << SPI_SR_FRLVL_Pos;
pub const SPI_SR_FTLVL_Pos: u32 = 11;
pub const SPI_SR_FTLVL_Msk: u32 = 0x3 << SPI_SR_FTLVL_Pos;
pub const SPI_SR_FTLVL: u32 = SPI_SR_FTLVL_Msk;
pub const SPI_SR_FTLVL_0: u32 = 0x1 << SPI_SR_FTLVL_Pos;
pub const SPI_SR_FTLVL_1: u32 = 0x2 << SPI_SR_FTLVL_Pos;
pub const SPI_DR_DR_Pos: u32 = 0;
pub const SPI_DR_DR_Msk: u32 = 0xFFFF << SPI_DR_DR_Pos;
pub const SPI_DR_DR: u32 = SPI_DR_DR_Msk;
pub const SPI_CRCPR_CRCPOLY_Pos: u32 = 0;
pub const SPI_CRCPR_CRCPOLY_Msk: u32 = 0xFFFF << SPI_CRCPR_CRCPOLY_Pos;
pub const SPI_CRCPR_CRCPOLY: u32 = SPI_CRCPR_CRCPOLY_Msk;
pub const SPI_RXCRCR_RXCRC_Pos: u32 = 0;
pub const SPI_RXCRCR_RXCRC_Msk: u32 = 0xFFFF << SPI_RXCRCR_RXCRC_Pos;
pub const SPI_RXCRCR_RXCRC: u32 = SPI_RXCRCR_RXCRC_Msk;
pub const SPI_TXCRCR_TXCRC_Pos: u32 = 0;
pub const SPI_TXCRCR_TXCRC_Msk: u32 = 0xFFFF << SPI_TXCRCR_TXCRC_Pos;
pub const SPI_TXCRCR_TXCRC: u32 = SPI_TXCRCR_TXCRC_Msk;
pub const SPI_I2SCFGR_CHLEN_Pos: u32 = 0;
pub const SPI_I2SCFGR_CHLEN_Msk: u32 = 0x1 << SPI_I2SCFGR_CHLEN_Pos;
pub const SPI_I2SCFGR_CHLEN: u32 = SPI_I2SCFGR_CHLEN_Msk;
pub const SPI_I2SCFGR_DATLEN_Pos: u32 = 1;
pub const SPI_I2SCFGR_DATLEN_Msk: u32 = 0x3 << SPI_I2SCFGR_DATLEN_Pos;
pub const SPI_I2SCFGR_DATLEN: u32 = SPI_I2SCFGR_DATLEN_Msk;
pub const SPI_I2SCFGR_DATLEN_0: u32 = 0x1 << SPI_I2SCFGR_DATLEN_Pos;
pub const SPI_I2SCFGR_DATLEN_1: u32 = 0x2 << SPI_I2SCFGR_DATLEN_Pos;
pub const SPI_I2SCFGR_CKPOL_Pos: u32 = 3;
pub const SPI_I2SCFGR_CKPOL_Msk: u32 = 0x1 << SPI_I2SCFGR_CKPOL_Pos;
pub const SPI_I2SCFGR_CKPOL: u32 = SPI_I2SCFGR_CKPOL_Msk;
pub const SPI_I2SCFGR_I2SSTD_Pos: u32 = 4;
pub const SPI_I2SCFGR_I2SSTD_Msk: u32 = 0x3 << SPI_I2SCFGR_I2SSTD_Pos;
pub const SPI_I2SCFGR_I2SSTD: u32 = SPI_I2SCFGR_I2SSTD_Msk;
pub const SPI_I2SCFGR_I2SSTD_0: u32 = 0x1 << SPI_I2SCFGR_I2SSTD_Pos;
pub const SPI_I2SCFGR_I2SSTD_1: u32 = 0x2 << SPI_I2SCFGR_I2SSTD_Pos;
pub const SPI_I2SCFGR_PCMSYNC_Pos: u32 = 7;
pub const SPI_I2SCFGR_PCMSYNC_Msk: u32 = 0x1 << SPI_I2SCFGR_PCMSYNC_Pos;
pub const SPI_I2SCFGR_PCMSYNC: u32 = SPI_I2SCFGR_PCMSYNC_Msk;
pub const SPI_I2SCFGR_I2SCFG_Pos: u32 = 8;
pub const SPI_I2SCFGR_I2SCFG_Msk: u32 = 0x3 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SCFG: u32 = SPI_I2SCFGR_I2SCFG_Msk;
pub const SPI_I2SCFGR_I2SCFG_0: u32 = 0x1 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SCFG_1: u32 = 0x2 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SE_Pos: u32 = 10;
pub const SPI_I2SCFGR_I2SE_Msk: u32 = 0x1 << SPI_I2SCFGR_I2SE_Pos;
pub const SPI_I2SCFGR_I2SE: u32 = SPI_I2SCFGR_I2SE_Msk;
pub const SPI_I2SCFGR_I2SMOD_Pos: u32 = 11;
pub const SPI_I2SCFGR_I2SMOD_Msk: u32 = 0x1 << SPI_I2SCFGR_I2SMOD_Pos;
pub const SPI_I2SCFGR_I2SMOD: u32 = SPI_I2SCFGR_I2SMOD_Msk;
pub const SPI_I2SCFGR_ASTRTEN_Pos: u32 = 12;
pub const SPI_I2SCFGR_ASTRTEN_Msk: u32 = 0x1 << SPI_I2SCFGR_ASTRTEN_Pos;
pub const SPI_I2SCFGR_ASTRTEN: u32 = SPI_I2SCFGR_ASTRTEN_Msk;
pub const SPI_I2SPR_I2SDIV_Pos: u32 = 0;
pub const SPI_I2SPR_I2SDIV_Msk: u32 = 0xFF << SPI_I2SPR_I2SDIV_Pos;
pub const SPI_I2SPR_I2SDIV: u32 = SPI_I2SPR_I2SDIV_Msk;
pub const SPI_I2SPR_ODD_Pos: u32 = 8;
pub const SPI_I2SPR_ODD_Msk: u32 = 0x1 << SPI_I2SPR_ODD_Pos;
pub const SPI_I2SPR_ODD: u32 = SPI_I2SPR_ODD_Msk;
pub const SPI_I2SPR_MCKOE_Pos: u32 = 9;
pub const SPI_I2SPR_MCKOE_Msk: u32 = 0x1 << SPI_I2SPR_MCKOE_Pos;
pub const SPI_I2SPR_MCKOE: u32 = SPI_I2SPR_MCKOE_Msk;
pub const SYSCFG_MEMRMP_MEM_BOOT_Pos: u32 = 0;
pub const SYSCFG_MEMRMP_MEM_BOOT_Msk: u32 = 0x1 << SYSCFG_MEMRMP_MEM_BOOT_Pos;
pub const SYSCFG_MEMRMP_MEM_BOOT: u32 = SYSCFG_MEMRMP_MEM_BOOT_Msk;
pub const SYSCFG_MEMRMP_SWP_FMC_Pos: u32 = 10;
pub const SYSCFG_MEMRMP_SWP_FMC_Msk: u32 = 0x3 << SYSCFG_MEMRMP_SWP_FMC_Pos;
pub const SYSCFG_MEMRMP_SWP_FMC: u32 = SYSCFG_MEMRMP_SWP_FMC_Msk;
pub const SYSCFG_MEMRMP_SWP_FMC_0: u32 = 0x1 << SYSCFG_MEMRMP_SWP_FMC_Pos;
pub const SYSCFG_MEMRMP_SWP_FMC_1: u32 = 0x2 << SYSCFG_MEMRMP_SWP_FMC_Pos;
pub const SYSCFG_PMC_I2C1_FMP_Pos: u32 = 0;
pub const SYSCFG_PMC_I2C1_FMP_Msk: u32 = 0x1 << SYSCFG_PMC_I2C1_FMP_Pos;
pub const SYSCFG_PMC_I2C1_FMP: u32 = SYSCFG_PMC_I2C1_FMP_Msk;
pub const SYSCFG_PMC_I2C2_FMP_Pos: u32 = 1;
pub const SYSCFG_PMC_I2C2_FMP_Msk: u32 = 0x1 << SYSCFG_PMC_I2C2_FMP_Pos;
pub const SYSCFG_PMC_I2C2_FMP: u32 = SYSCFG_PMC_I2C2_FMP_Msk;
pub const SYSCFG_PMC_I2C3_FMP_Pos: u32 = 2;
pub const SYSCFG_PMC_I2C3_FMP_Msk: u32 = 0x1 << SYSCFG_PMC_I2C3_FMP_Pos;
pub const SYSCFG_PMC_I2C3_FMP: u32 = SYSCFG_PMC_I2C3_FMP_Msk;
pub const SYSCFG_PMC_I2C4_FMP_Pos: u32 = 3;
pub const SYSCFG_PMC_I2C4_FMP_Msk: u32 = 0x1 << SYSCFG_PMC_I2C4_FMP_Pos;
pub const SYSCFG_PMC_I2C4_FMP: u32 = SYSCFG_PMC_I2C4_FMP_Msk;
pub const SYSCFG_PMC_I2C_PB6_FMP_Pos: u32 = 4;
pub const SYSCFG_PMC_I2C_PB6_FMP_Msk: u32 = 0x1 << SYSCFG_PMC_I2C_PB6_FMP_Pos;
pub const SYSCFG_PMC_I2C_PB6_FMP: u32 = SYSCFG_PMC_I2C_PB6_FMP_Msk;
pub const SYSCFG_PMC_I2C_PB7_FMP_Pos: u32 = 5;
pub const SYSCFG_PMC_I2C_PB7_FMP_Msk: u32 = 0x1 << SYSCFG_PMC_I2C_PB7_FMP_Pos;
pub const SYSCFG_PMC_I2C_PB7_FMP: u32 = SYSCFG_PMC_I2C_PB7_FMP_Msk;
pub const SYSCFG_PMC_I2C_PB8_FMP_Pos: u32 = 6;
pub const SYSCFG_PMC_I2C_PB8_FMP_Msk: u32 = 0x1 << SYSCFG_PMC_I2C_PB8_FMP_Pos;
pub const SYSCFG_PMC_I2C_PB8_FMP: u32 = SYSCFG_PMC_I2C_PB8_FMP_Msk;
pub const SYSCFG_PMC_I2C_PB9_FMP_Pos: u32 = 7;
pub const SYSCFG_PMC_I2C_PB9_FMP_Msk: u32 = 0x1 << SYSCFG_PMC_I2C_PB9_FMP_Pos;
pub const SYSCFG_PMC_I2C_PB9_FMP: u32 = SYSCFG_PMC_I2C_PB9_FMP_Msk;
pub const SYSCFG_PMC_ADCxDC2_Pos: u32 = 16;
pub const SYSCFG_PMC_ADCxDC2_Msk: u32 = 0x7 << SYSCFG_PMC_ADCxDC2_Pos;
pub const SYSCFG_PMC_ADCxDC2: u32 = SYSCFG_PMC_ADCxDC2_Msk;
pub const SYSCFG_PMC_ADC1DC2_Pos: u32 = 16;
pub const SYSCFG_PMC_ADC1DC2_Msk: u32 = 0x1 << SYSCFG_PMC_ADC1DC2_Pos;
pub const SYSCFG_PMC_ADC1DC2: u32 = SYSCFG_PMC_ADC1DC2_Msk;
pub const SYSCFG_PMC_ADC2DC2_Pos: u32 = 17;
pub const SYSCFG_PMC_ADC2DC2_Msk: u32 = 0x1 << SYSCFG_PMC_ADC2DC2_Pos;
pub const SYSCFG_PMC_ADC2DC2: u32 = SYSCFG_PMC_ADC2DC2_Msk;
pub const SYSCFG_PMC_ADC3DC2_Pos: u32 = 18;
pub const SYSCFG_PMC_ADC3DC2_Msk: u32 = 0x1 << SYSCFG_PMC_ADC3DC2_Pos;
pub const SYSCFG_PMC_ADC3DC2: u32 = SYSCFG_PMC_ADC3DC2_Msk;
pub const SYSCFG_PMC_MII_RMII_SEL_Pos: u32 = 23;
pub const SYSCFG_PMC_MII_RMII_SEL_Msk: u32 = 0x1 << SYSCFG_PMC_MII_RMII_SEL_Pos;
pub const SYSCFG_PMC_MII_RMII_SEL: u32 = SYSCFG_PMC_MII_RMII_SEL_Msk;
pub const SYSCFG_EXTICR1_EXTI0_Pos: u32 = 0;
pub const SYSCFG_EXTICR1_EXTI0_Msk: u32 = 0xF << SYSCFG_EXTICR1_EXTI0_Pos;
pub const SYSCFG_EXTICR1_EXTI0: u32 = SYSCFG_EXTICR1_EXTI0_Msk;
pub const SYSCFG_EXTICR1_EXTI1_Pos: u32 = 4;
pub const SYSCFG_EXTICR1_EXTI1_Msk: u32 = 0xF << SYSCFG_EXTICR1_EXTI1_Pos;
pub const SYSCFG_EXTICR1_EXTI1: u32 = SYSCFG_EXTICR1_EXTI1_Msk;
pub const SYSCFG_EXTICR1_EXTI2_Pos: u32 = 8;
pub const SYSCFG_EXTICR1_EXTI2_Msk: u32 = 0xF << SYSCFG_EXTICR1_EXTI2_Pos;
pub const SYSCFG_EXTICR1_EXTI2: u32 = SYSCFG_EXTICR1_EXTI2_Msk;
pub const SYSCFG_EXTICR1_EXTI3_Pos: u32 = 12;
pub const SYSCFG_EXTICR1_EXTI3_Msk: u32 = 0xF << SYSCFG_EXTICR1_EXTI3_Pos;
pub const SYSCFG_EXTICR1_EXTI3: u32 = SYSCFG_EXTICR1_EXTI3_Msk;
pub const SYSCFG_EXTICR1_EXTI0_PA: u32 = 0x0000;
pub const SYSCFG_EXTICR1_EXTI0_PB: u32 = 0x0001;
pub const SYSCFG_EXTICR1_EXTI0_PC: u32 = 0x0002;
pub const SYSCFG_EXTICR1_EXTI0_PD: u32 = 0x0003;
pub const SYSCFG_EXTICR1_EXTI0_PE: u32 = 0x0004;
pub const SYSCFG_EXTICR1_EXTI0_PF: u32 = 0x0005;
pub const SYSCFG_EXTICR1_EXTI0_PG: u32 = 0x0006;
pub const SYSCFG_EXTICR1_EXTI0_PH: u32 = 0x0007;
pub const SYSCFG_EXTICR1_EXTI0_PI: u32 = 0x0008;
pub const SYSCFG_EXTICR1_EXTI0_PJ: u32 = 0x0009;
pub const SYSCFG_EXTICR1_EXTI0_PK: u32 = 0x000A;
pub const SYSCFG_EXTICR1_EXTI1_PA: u32 = 0x0000;
pub const SYSCFG_EXTICR1_EXTI1_PB: u32 = 0x0010;
pub const SYSCFG_EXTICR1_EXTI1_PC: u32 = 0x0020;
pub const SYSCFG_EXTICR1_EXTI1_PD: u32 = 0x0030;
pub const SYSCFG_EXTICR1_EXTI1_PE: u32 = 0x0040;
pub const SYSCFG_EXTICR1_EXTI1_PF: u32 = 0x0050;
pub const SYSCFG_EXTICR1_EXTI1_PG: u32 = 0x0060;
pub const SYSCFG_EXTICR1_EXTI1_PH: u32 = 0x0070;
pub const SYSCFG_EXTICR1_EXTI1_PI: u32 = 0x0080;
pub const SYSCFG_EXTICR1_EXTI1_PJ: u32 = 0x0090;
pub const SYSCFG_EXTICR1_EXTI1_PK: u32 = 0x00A0;
pub const SYSCFG_EXTICR1_EXTI2_PA: u32 = 0x0000;
pub const SYSCFG_EXTICR1_EXTI2_PB: u32 = 0x0100;
pub const SYSCFG_EXTICR1_EXTI2_PC: u32 = 0x0200;
pub const SYSCFG_EXTICR1_EXTI2_PD: u32 = 0x0300;
pub const SYSCFG_EXTICR1_EXTI2_PE: u32 = 0x0400;
pub const SYSCFG_EXTICR1_EXTI2_PF: u32 = 0x0500;
pub const SYSCFG_EXTICR1_EXTI2_PG: u32 = 0x0600;
pub const SYSCFG_EXTICR1_EXTI2_PH: u32 = 0x0700;
pub const SYSCFG_EXTICR1_EXTI2_PI: u32 = 0x0800;
pub const SYSCFG_EXTICR1_EXTI2_PJ: u32 = 0x0900;
pub const SYSCFG_EXTICR1_EXTI2_PK: u32 = 0x0A00;
pub const SYSCFG_EXTICR1_EXTI3_PA: u32 = 0x0000;
pub const SYSCFG_EXTICR1_EXTI3_PB: u32 = 0x1000;
pub const SYSCFG_EXTICR1_EXTI3_PC: u32 = 0x2000;
pub const SYSCFG_EXTICR1_EXTI3_PD: u32 = 0x3000;
pub const SYSCFG_EXTICR1_EXTI3_PE: u32 = 0x4000;
pub const SYSCFG_EXTICR1_EXTI3_PF: u32 = 0x5000;
pub const SYSCFG_EXTICR1_EXTI3_PG: u32 = 0x6000;
pub const SYSCFG_EXTICR1_EXTI3_PH: u32 = 0x7000;
pub const SYSCFG_EXTICR1_EXTI3_PI: u32 = 0x8000;
pub const SYSCFG_EXTICR1_EXTI3_PJ: u32 = 0x9000;
pub const SYSCFG_EXTICR1_EXTI3_PK: u32 = 0xA000;
pub const SYSCFG_EXTICR2_EXTI4_Pos: u32 = 0;
pub const SYSCFG_EXTICR2_EXTI4_Msk: u32 = 0xF << SYSCFG_EXTICR2_EXTI4_Pos;
pub const SYSCFG_EXTICR2_EXTI4: u32 = SYSCFG_EXTICR2_EXTI4_Msk;
pub const SYSCFG_EXTICR2_EXTI5_Pos: u32 = 4;
pub const SYSCFG_EXTICR2_EXTI5_Msk: u32 = 0xF << SYSCFG_EXTICR2_EXTI5_Pos;
pub const SYSCFG_EXTICR2_EXTI5: u32 = SYSCFG_EXTICR2_EXTI5_Msk;
pub const SYSCFG_EXTICR2_EXTI6_Pos: u32 = 8;
pub const SYSCFG_EXTICR2_EXTI6_Msk: u32 = 0xF << SYSCFG_EXTICR2_EXTI6_Pos;
pub const SYSCFG_EXTICR2_EXTI6: u32 = SYSCFG_EXTICR2_EXTI6_Msk;
pub const SYSCFG_EXTICR2_EXTI7_Pos: u32 = 12;
pub const SYSCFG_EXTICR2_EXTI7_Msk: u32 = 0xF << SYSCFG_EXTICR2_EXTI7_Pos;
pub const SYSCFG_EXTICR2_EXTI7: u32 = SYSCFG_EXTICR2_EXTI7_Msk;
pub const SYSCFG_EXTICR2_EXTI4_PA: u32 = 0x0000;
pub const SYSCFG_EXTICR2_EXTI4_PB: u32 = 0x0001;
pub const SYSCFG_EXTICR2_EXTI4_PC: u32 = 0x0002;
pub const SYSCFG_EXTICR2_EXTI4_PD: u32 = 0x0003;
pub const SYSCFG_EXTICR2_EXTI4_PE: u32 = 0x0004;
pub const SYSCFG_EXTICR2_EXTI4_PF: u32 = 0x0005;
pub const SYSCFG_EXTICR2_EXTI4_PG: u32 = 0x0006;
pub const SYSCFG_EXTICR2_EXTI4_PH: u32 = 0x0007;
pub const SYSCFG_EXTICR2_EXTI4_PI: u32 = 0x0008;
pub const SYSCFG_EXTICR2_EXTI4_PJ: u32 = 0x0009;
pub const SYSCFG_EXTICR2_EXTI4_PK: u32 = 0x000A;
pub const SYSCFG_EXTICR2_EXTI5_PA: u32 = 0x0000;
pub const SYSCFG_EXTICR2_EXTI5_PB: u32 = 0x0010;
pub const SYSCFG_EXTICR2_EXTI5_PC: u32 = 0x0020;
pub const SYSCFG_EXTICR2_EXTI5_PD: u32 = 0x0030;
pub const SYSCFG_EXTICR2_EXTI5_PE: u32 = 0x0040;
pub const SYSCFG_EXTICR2_EXTI5_PF: u32 = 0x0050;
pub const SYSCFG_EXTICR2_EXTI5_PG: u32 = 0x0060;
pub const SYSCFG_EXTICR2_EXTI5_PH: u32 = 0x0070;
pub const SYSCFG_EXTICR2_EXTI5_PI: u32 = 0x0080;
pub const SYSCFG_EXTICR2_EXTI5_PJ: u32 = 0x0090;
pub const SYSCFG_EXTICR2_EXTI5_PK: u32 = 0x00A0;
pub const SYSCFG_EXTICR2_EXTI6_PA: u32 = 0x0000;
pub const SYSCFG_EXTICR2_EXTI6_PB: u32 = 0x0100;
pub const SYSCFG_EXTICR2_EXTI6_PC: u32 = 0x0200;
pub const SYSCFG_EXTICR2_EXTI6_PD: u32 = 0x0300;
pub const SYSCFG_EXTICR2_EXTI6_PE: u32 = 0x0400;
pub const SYSCFG_EXTICR2_EXTI6_PF: u32 = 0x0500;
pub const SYSCFG_EXTICR2_EXTI6_PG: u32 = 0x0600;
pub const SYSCFG_EXTICR2_EXTI6_PH: u32 = 0x0700;
pub const SYSCFG_EXTICR2_EXTI6_PI: u32 = 0x0800;
pub const SYSCFG_EXTICR2_EXTI6_PJ: u32 = 0x0900;
pub const SYSCFG_EXTICR2_EXTI6_PK: u32 = 0x0A00;
pub const SYSCFG_EXTICR2_EXTI7_PA: u32 = 0x0000;
pub const SYSCFG_EXTICR2_EXTI7_PB: u32 = 0x1000;
pub const SYSCFG_EXTICR2_EXTI7_PC: u32 = 0x2000;
pub const SYSCFG_EXTICR2_EXTI7_PD: u32 = 0x3000;
pub const SYSCFG_EXTICR2_EXTI7_PE: u32 = 0x4000;
pub const SYSCFG_EXTICR2_EXTI7_PF: u32 = 0x5000;
pub const SYSCFG_EXTICR2_EXTI7_PG: u32 = 0x6000;
pub const SYSCFG_EXTICR2_EXTI7_PH: u32 = 0x7000;
pub const SYSCFG_EXTICR2_EXTI7_PI: u32 = 0x8000;
pub const SYSCFG_EXTICR2_EXTI7_PJ: u32 = 0x9000;
pub const SYSCFG_EXTICR2_EXTI7_PK: u32 = 0xA000;
pub const SYSCFG_EXTICR3_EXTI8_Pos: u32 = 0;
pub const SYSCFG_EXTICR3_EXTI8_Msk: u32 = 0xF << SYSCFG_EXTICR3_EXTI8_Pos;
pub const SYSCFG_EXTICR3_EXTI8: u32 = SYSCFG_EXTICR3_EXTI8_Msk;
pub const SYSCFG_EXTICR3_EXTI9_Pos: u32 = 4;
pub const SYSCFG_EXTICR3_EXTI9_Msk: u32 = 0xF << SYSCFG_EXTICR3_EXTI9_Pos;
pub const SYSCFG_EXTICR3_EXTI9: u32 = SYSCFG_EXTICR3_EXTI9_Msk;
pub const SYSCFG_EXTICR3_EXTI10_Pos: u32 = 8;
pub const SYSCFG_EXTICR3_EXTI10_Msk: u32 = 0xF << SYSCFG_EXTICR3_EXTI10_Pos;
pub const SYSCFG_EXTICR3_EXTI10: u32 = SYSCFG_EXTICR3_EXTI10_Msk;
pub const SYSCFG_EXTICR3_EXTI11_Pos: u32 = 12;
pub const SYSCFG_EXTICR3_EXTI11_Msk: u32 = 0xF << SYSCFG_EXTICR3_EXTI11_Pos;
pub const SYSCFG_EXTICR3_EXTI11: u32 = SYSCFG_EXTICR3_EXTI11_Msk;
pub const SYSCFG_EXTICR3_EXTI8_PA: u32 = 0x0000;
pub const SYSCFG_EXTICR3_EXTI8_PB: u32 = 0x0001;
pub const SYSCFG_EXTICR3_EXTI8_PC: u32 = 0x0002;
pub const SYSCFG_EXTICR3_EXTI8_PD: u32 = 0x0003;
pub const SYSCFG_EXTICR3_EXTI8_PE: u32 = 0x0004;
pub const SYSCFG_EXTICR3_EXTI8_PF: u32 = 0x0005;
pub const SYSCFG_EXTICR3_EXTI8_PG: u32 = 0x0006;
pub const SYSCFG_EXTICR3_EXTI8_PH: u32 = 0x0007;
pub const SYSCFG_EXTICR3_EXTI8_PI: u32 = 0x0008;
pub const SYSCFG_EXTICR3_EXTI8_PJ: u32 = 0x0009;
pub const SYSCFG_EXTICR3_EXTI9_PA: u32 = 0x0000;
pub const SYSCFG_EXTICR3_EXTI9_PB: u32 = 0x0010;
pub const SYSCFG_EXTICR3_EXTI9_PC: u32 = 0x0020;
pub const SYSCFG_EXTICR3_EXTI9_PD: u32 = 0x0030;
pub const SYSCFG_EXTICR3_EXTI9_PE: u32 = 0x0040;
pub const SYSCFG_EXTICR3_EXTI9_PF: u32 = 0x0050;
pub const SYSCFG_EXTICR3_EXTI9_PG: u32 = 0x0060;
pub const SYSCFG_EXTICR3_EXTI9_PH: u32 = 0x0070;
pub const SYSCFG_EXTICR3_EXTI9_PI: u32 = 0x0080;
pub const SYSCFG_EXTICR3_EXTI9_PJ: u32 = 0x0090;
pub const SYSCFG_EXTICR3_EXTI10_PA: u32 = 0x0000;
pub const SYSCFG_EXTICR3_EXTI10_PB: u32 = 0x0100;
pub const SYSCFG_EXTICR3_EXTI10_PC: u32 = 0x0200;
pub const SYSCFG_EXTICR3_EXTI10_PD: u32 = 0x0300;
pub const SYSCFG_EXTICR3_EXTI10_PE: u32 = 0x0400;
pub const SYSCFG_EXTICR3_EXTI10_PF: u32 = 0x0500;
pub const SYSCFG_EXTICR3_EXTI10_PG: u32 = 0x0600;
pub const SYSCFG_EXTICR3_EXTI10_PH: u32 = 0x0700;
pub const SYSCFG_EXTICR3_EXTI10_PI: u32 = 0x0800;
pub const SYSCFG_EXTICR3_EXTI10_PJ: u32 = 0x0900;
pub const SYSCFG_EXTICR3_EXTI11_PA: u32 = 0x0000;
pub const SYSCFG_EXTICR3_EXTI11_PB: u32 = 0x1000;
pub const SYSCFG_EXTICR3_EXTI11_PC: u32 = 0x2000;
pub const SYSCFG_EXTICR3_EXTI11_PD: u32 = 0x3000;
pub const SYSCFG_EXTICR3_EXTI11_PE: u32 = 0x4000;
pub const SYSCFG_EXTICR3_EXTI11_PF: u32 = 0x5000;
pub const SYSCFG_EXTICR3_EXTI11_PG: u32 = 0x6000;
pub const SYSCFG_EXTICR3_EXTI11_PH: u32 = 0x7000;
pub const SYSCFG_EXTICR3_EXTI11_PI: u32 = 0x8000;
pub const SYSCFG_EXTICR3_EXTI11_PJ: u32 = 0x9000;
pub const SYSCFG_EXTICR4_EXTI12_Pos: u32 = 0;
pub const SYSCFG_EXTICR4_EXTI12_Msk: u32 = 0xF << SYSCFG_EXTICR4_EXTI12_Pos;
pub const SYSCFG_EXTICR4_EXTI12: u32 = SYSCFG_EXTICR4_EXTI12_Msk;
pub const SYSCFG_EXTICR4_EXTI13_Pos: u32 = 4;
pub const SYSCFG_EXTICR4_EXTI13_Msk: u32 = 0xF << SYSCFG_EXTICR4_EXTI13_Pos;
pub const SYSCFG_EXTICR4_EXTI13: u32 = SYSCFG_EXTICR4_EXTI13_Msk;
pub const SYSCFG_EXTICR4_EXTI14_Pos: u32 = 8;
pub const SYSCFG_EXTICR4_EXTI14_Msk: u32 = 0xF << SYSCFG_EXTICR4_EXTI14_Pos;
pub const SYSCFG_EXTICR4_EXTI14: u32 = SYSCFG_EXTICR4_EXTI14_Msk;
pub const SYSCFG_EXTICR4_EXTI15_Pos: u32 = 12;
pub const SYSCFG_EXTICR4_EXTI15_Msk: u32 = 0xF << SYSCFG_EXTICR4_EXTI15_Pos;
pub const SYSCFG_EXTICR4_EXTI15: u32 = SYSCFG_EXTICR4_EXTI15_Msk;
pub const SYSCFG_EXTICR4_EXTI12_PA: u32 = 0x0000;
pub const SYSCFG_EXTICR4_EXTI12_PB: u32 = 0x0001;
pub const SYSCFG_EXTICR4_EXTI12_PC: u32 = 0x0002;
pub const SYSCFG_EXTICR4_EXTI12_PD: u32 = 0x0003;
pub const SYSCFG_EXTICR4_EXTI12_PE: u32 = 0x0004;
pub const SYSCFG_EXTICR4_EXTI12_PF: u32 = 0x0005;
pub const SYSCFG_EXTICR4_EXTI12_PG: u32 = 0x0006;
pub const SYSCFG_EXTICR4_EXTI12_PH: u32 = 0x0007;
pub const SYSCFG_EXTICR4_EXTI12_PI: u32 = 0x0008;
pub const SYSCFG_EXTICR4_EXTI12_PJ: u32 = 0x0009;
pub const SYSCFG_EXTICR4_EXTI13_PA: u32 = 0x0000;
pub const SYSCFG_EXTICR4_EXTI13_PB: u32 = 0x0010;
pub const SYSCFG_EXTICR4_EXTI13_PC: u32 = 0x0020;
pub const SYSCFG_EXTICR4_EXTI13_PD: u32 = 0x0030;
pub const SYSCFG_EXTICR4_EXTI13_PE: u32 = 0x0040;
pub const SYSCFG_EXTICR4_EXTI13_PF: u32 = 0x0050;
pub const SYSCFG_EXTICR4_EXTI13_PG: u32 = 0x0060;
pub const SYSCFG_EXTICR4_EXTI13_PH: u32 = 0x0070;
pub const SYSCFG_EXTICR4_EXTI13_PI: u32 = 0x0080;
pub const SYSCFG_EXTICR4_EXTI13_PJ: u32 = 0x0090;
pub const SYSCFG_EXTICR4_EXTI14_PA: u32 = 0x0000;
pub const SYSCFG_EXTICR4_EXTI14_PB: u32 = 0x0100;
pub const SYSCFG_EXTICR4_EXTI14_PC: u32 = 0x0200;
pub const SYSCFG_EXTICR4_EXTI14_PD: u32 = 0x0300;
pub const SYSCFG_EXTICR4_EXTI14_PE: u32 = 0x0400;
pub const SYSCFG_EXTICR4_EXTI14_PF: u32 = 0x0500;
pub const SYSCFG_EXTICR4_EXTI14_PG: u32 = 0x0600;
pub const SYSCFG_EXTICR4_EXTI14_PH: u32 = 0x0700;
pub const SYSCFG_EXTICR4_EXTI14_PI: u32 = 0x0800;
pub const SYSCFG_EXTICR4_EXTI14_PJ: u32 = 0x0900;
pub const SYSCFG_EXTICR4_EXTI15_PA: u32 = 0x0000;
pub const SYSCFG_EXTICR4_EXTI15_PB: u32 = 0x1000;
pub const SYSCFG_EXTICR4_EXTI15_PC: u32 = 0x2000;
pub const SYSCFG_EXTICR4_EXTI15_PD: u32 = 0x3000;
pub const SYSCFG_EXTICR4_EXTI15_PE: u32 = 0x4000;
pub const SYSCFG_EXTICR4_EXTI15_PF: u32 = 0x5000;
pub const SYSCFG_EXTICR4_EXTI15_PG: u32 = 0x6000;
pub const SYSCFG_EXTICR4_EXTI15_PH: u32 = 0x7000;
pub const SYSCFG_EXTICR4_EXTI15_PI: u32 = 0x8000;
pub const SYSCFG_EXTICR4_EXTI15_PJ: u32 = 0x9000;
pub const SYSCFG_CMPCR_CMP_PD_Pos: u32 = 0;
pub const SYSCFG_CMPCR_CMP_PD_Msk: u32 = 0x1 << SYSCFG_CMPCR_CMP_PD_Pos;
pub const SYSCFG_CMPCR_CMP_PD: u32 = SYSCFG_CMPCR_CMP_PD_Msk;
pub const SYSCFG_CMPCR_READY_Pos: u32 = 8;
pub const SYSCFG_CMPCR_READY_Msk: u32 = 0x1 << SYSCFG_CMPCR_READY_Pos;
pub const SYSCFG_CMPCR_READY: u32 = SYSCFG_CMPCR_READY_Msk;
pub const TIM_CR1_CEN_Pos: u32 = 0;
pub const TIM_CR1_CEN_Msk: u32 = 0x1 << TIM_CR1_CEN_Pos;
pub const TIM_CR1_CEN: u32 = TIM_CR1_CEN_Msk;
pub const TIM_CR1_UDIS_Pos: u32 = 1;
pub const TIM_CR1_UDIS_Msk: u32 = 0x1 << TIM_CR1_UDIS_Pos;
pub const TIM_CR1_UDIS: u32 = TIM_CR1_UDIS_Msk;
pub const TIM_CR1_URS_Pos: u32 = 2;
pub const TIM_CR1_URS_Msk: u32 = 0x1 << TIM_CR1_URS_Pos;
pub const TIM_CR1_URS: u32 = TIM_CR1_URS_Msk;
pub const TIM_CR1_OPM_Pos: u32 = 3;
pub const TIM_CR1_OPM_Msk: u32 = 0x1 << TIM_CR1_OPM_Pos;
pub const TIM_CR1_OPM: u32 = TIM_CR1_OPM_Msk;
pub const TIM_CR1_DIR_Pos: u32 = 4;
pub const TIM_CR1_DIR_Msk: u32 = 0x1 << TIM_CR1_DIR_Pos;
pub const TIM_CR1_DIR: u32 = TIM_CR1_DIR_Msk;
pub const TIM_CR1_CMS_Pos: u32 = 5;
pub const TIM_CR1_CMS_Msk: u32 = 0x3 << TIM_CR1_CMS_Pos;
pub const TIM_CR1_CMS: u32 = TIM_CR1_CMS_Msk;
pub const TIM_CR1_CMS_0: u32 = 0x1 << TIM_CR1_CMS_Pos;
pub const TIM_CR1_CMS_1: u32 = 0x2 << TIM_CR1_CMS_Pos;
pub const TIM_CR1_ARPE_Pos: u32 = 7;
pub const TIM_CR1_ARPE_Msk: u32 = 0x1 << TIM_CR1_ARPE_Pos;
pub const TIM_CR1_ARPE: u32 = TIM_CR1_ARPE_Msk;
pub const TIM_CR1_CKD_Pos: u32 = 8;
pub const TIM_CR1_CKD_Msk: u32 = 0x3 << TIM_CR1_CKD_Pos;
pub const TIM_CR1_CKD: u32 = TIM_CR1_CKD_Msk;
pub const TIM_CR1_CKD_0: u32 = 0x1 << TIM_CR1_CKD_Pos;
pub const TIM_CR1_CKD_1: u32 = 0x2 << TIM_CR1_CKD_Pos;
pub const TIM_CR1_UIFREMAP_Pos: u32 = 11;
pub const TIM_CR1_UIFREMAP_Msk: u32 = 0x1 << TIM_CR1_UIFREMAP_Pos;
pub const TIM_CR1_UIFREMAP: u32 = TIM_CR1_UIFREMAP_Msk;
pub const TIM_CR2_CCPC_Pos: u32 = 0;
pub const TIM_CR2_CCPC_Msk: u32 = 0x1 << TIM_CR2_CCPC_Pos;
pub const TIM_CR2_CCPC: u32 = TIM_CR2_CCPC_Msk;
pub const TIM_CR2_CCUS_Pos: u32 = 2;
pub const TIM_CR2_CCUS_Msk: u32 = 0x1 << TIM_CR2_CCUS_Pos;
pub const TIM_CR2_CCUS: u32 = TIM_CR2_CCUS_Msk;
pub const TIM_CR2_CCDS_Pos: u32 = 3;
pub const TIM_CR2_CCDS_Msk: u32 = 0x1 << TIM_CR2_CCDS_Pos;
pub const TIM_CR2_CCDS: u32 = TIM_CR2_CCDS_Msk;
pub const TIM_CR2_OIS5_Pos: u32 = 16;
pub const TIM_CR2_OIS5_Msk: u32 = 0x1 << TIM_CR2_OIS5_Pos;
pub const TIM_CR2_OIS5: u32 = TIM_CR2_OIS5_Msk;
pub const TIM_CR2_OIS6_Pos: u32 = 18;
pub const TIM_CR2_OIS6_Msk: u32 = 0x1 << TIM_CR2_OIS6_Pos;
pub const TIM_CR2_OIS6: u32 = TIM_CR2_OIS6_Msk;
pub const TIM_CR2_MMS_Pos: u32 = 4;
pub const TIM_CR2_MMS_Msk: u32 = 0x7 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS: u32 = TIM_CR2_MMS_Msk;
pub const TIM_CR2_MMS_0: u32 = 0x1 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS_1: u32 = 0x2 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS_2: u32 = 0x4 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS2_Pos: u32 = 20;
pub const TIM_CR2_MMS2_Msk: u32 = 0xF << TIM_CR2_MMS2_Pos;
pub const TIM_CR2_MMS2: u32 = TIM_CR2_MMS2_Msk;
pub const TIM_CR2_MMS2_0: u32 = 0x1 << TIM_CR2_MMS2_Pos;
pub const TIM_CR2_MMS2_1: u32 = 0x2 << TIM_CR2_MMS2_Pos;
pub const TIM_CR2_MMS2_2: u32 = 0x4 << TIM_CR2_MMS2_Pos;
pub const TIM_CR2_MMS2_3: u32 = 0x8 << TIM_CR2_MMS2_Pos;
pub const TIM_CR2_TI1S_Pos: u32 = 7;
pub const TIM_CR2_TI1S_Msk: u32 = 0x1 << TIM_CR2_TI1S_Pos;
pub const TIM_CR2_TI1S: u32 = TIM_CR2_TI1S_Msk;
pub const TIM_CR2_OIS1_Pos: u32 = 8;
pub const TIM_CR2_OIS1_Msk: u32 = 0x1 << TIM_CR2_OIS1_Pos;
pub const TIM_CR2_OIS1: u32 = TIM_CR2_OIS1_Msk;
pub const TIM_CR2_OIS1N_Pos: u32 = 9;
pub const TIM_CR2_OIS1N_Msk: u32 = 0x1 << TIM_CR2_OIS1N_Pos;
pub const TIM_CR2_OIS1N: u32 = TIM_CR2_OIS1N_Msk;
pub const TIM_CR2_OIS2_Pos: u32 = 10;
pub const TIM_CR2_OIS2_Msk: u32 = 0x1 << TIM_CR2_OIS2_Pos;
pub const TIM_CR2_OIS2: u32 = TIM_CR2_OIS2_Msk;
pub const TIM_CR2_OIS2N_Pos: u32 = 11;
pub const TIM_CR2_OIS2N_Msk: u32 = 0x1 << TIM_CR2_OIS2N_Pos;
pub const TIM_CR2_OIS2N: u32 = TIM_CR2_OIS2N_Msk;
pub const TIM_CR2_OIS3_Pos: u32 = 12;
pub const TIM_CR2_OIS3_Msk: u32 = 0x1 << TIM_CR2_OIS3_Pos;
pub const TIM_CR2_OIS3: u32 = TIM_CR2_OIS3_Msk;
pub const TIM_CR2_OIS3N_Pos: u32 = 13;
pub const TIM_CR2_OIS3N_Msk: u32 = 0x1 << TIM_CR2_OIS3N_Pos;
pub const TIM_CR2_OIS3N: u32 = TIM_CR2_OIS3N_Msk;
pub const TIM_CR2_OIS4_Pos: u32 = 14;
pub const TIM_CR2_OIS4_Msk: u32 = 0x1 << TIM_CR2_OIS4_Pos;
pub const TIM_CR2_OIS4: u32 = TIM_CR2_OIS4_Msk;
pub const TIM_SMCR_SMS_Pos: u32 = 0;
pub const TIM_SMCR_SMS_Msk: u32 = 0x10007 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS: u32 = TIM_SMCR_SMS_Msk;
pub const TIM_SMCR_SMS_0: u32 = 0x00001 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS_1: u32 = 0x00002 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS_2: u32 = 0x00004 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS_3: u32 = 0x10000 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_TS_Pos: u32 = 4;
pub const TIM_SMCR_TS_Msk: u32 = 0x7 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS: u32 = TIM_SMCR_TS_Msk;
pub const TIM_SMCR_TS_0: u32 = 0x1 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS_1: u32 = 0x2 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS_2: u32 = 0x4 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_MSM_Pos: u32 = 7;
pub const TIM_SMCR_MSM_Msk: u32 = 0x1 << TIM_SMCR_MSM_Pos;
pub const TIM_SMCR_MSM: u32 = TIM_SMCR_MSM_Msk;
pub const TIM_SMCR_ETF_Pos: u32 = 8;
pub const TIM_SMCR_ETF_Msk: u32 = 0xF << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF: u32 = TIM_SMCR_ETF_Msk;
pub const TIM_SMCR_ETF_0: u32 = 0x1 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF_1: u32 = 0x2 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF_2: u32 = 0x4 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF_3: u32 = 0x8 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETPS_Pos: u32 = 12;
pub const TIM_SMCR_ETPS_Msk: u32 = 0x3 << TIM_SMCR_ETPS_Pos;
pub const TIM_SMCR_ETPS: u32 = TIM_SMCR_ETPS_Msk;
pub const TIM_SMCR_ETPS_0: u32 = 0x1 << TIM_SMCR_ETPS_Pos;
pub const TIM_SMCR_ETPS_1: u32 = 0x2 << TIM_SMCR_ETPS_Pos;
pub const TIM_SMCR_ECE_Pos: u32 = 14;
pub const TIM_SMCR_ECE_Msk: u32 = 0x1 << TIM_SMCR_ECE_Pos;
pub const TIM_SMCR_ECE: u32 = TIM_SMCR_ECE_Msk;
pub const TIM_SMCR_ETP_Pos: u32 = 15;
pub const TIM_SMCR_ETP_Msk: u32 = 0x1 << TIM_SMCR_ETP_Pos;
pub const TIM_SMCR_ETP: u32 = TIM_SMCR_ETP_Msk;
pub const TIM_DIER_UIE_Pos: u32 = 0;
pub const TIM_DIER_UIE_Msk: u32 = 0x1 << TIM_DIER_UIE_Pos;
pub const TIM_DIER_UIE: u32 = TIM_DIER_UIE_Msk;
pub const TIM_DIER_CC1IE_Pos: u32 = 1;
pub const TIM_DIER_CC1IE_Msk: u32 = 0x1 << TIM_DIER_CC1IE_Pos;
pub const TIM_DIER_CC1IE: u32 = TIM_DIER_CC1IE_Msk;
pub const TIM_DIER_CC2IE_Pos: u32 = 2;
pub const TIM_DIER_CC2IE_Msk: u32 = 0x1 << TIM_DIER_CC2IE_Pos;
pub const TIM_DIER_CC2IE: u32 = TIM_DIER_CC2IE_Msk;
pub const TIM_DIER_CC3IE_Pos: u32 = 3;
pub const TIM_DIER_CC3IE_Msk: u32 = 0x1 << TIM_DIER_CC3IE_Pos;
pub const TIM_DIER_CC3IE: u32 = TIM_DIER_CC3IE_Msk;
pub const TIM_DIER_CC4IE_Pos: u32 = 4;
pub const TIM_DIER_CC4IE_Msk: u32 = 0x1 << TIM_DIER_CC4IE_Pos;
pub const TIM_DIER_CC4IE: u32 = TIM_DIER_CC4IE_Msk;
pub const TIM_DIER_COMIE_Pos: u32 = 5;
pub const TIM_DIER_COMIE_Msk: u32 = 0x1 << TIM_DIER_COMIE_Pos;
pub const TIM_DIER_COMIE: u32 = TIM_DIER_COMIE_Msk;
pub const TIM_DIER_TIE_Pos: u32 = 6;
pub const TIM_DIER_TIE_Msk: u32 = 0x1 << TIM_DIER_TIE_Pos;
pub const TIM_DIER_TIE: u32 = TIM_DIER_TIE_Msk;
pub const TIM_DIER_BIE_Pos: u32 = 7;
pub const TIM_DIER_BIE_Msk: u32 = 0x1 << TIM_DIER_BIE_Pos;
pub const TIM_DIER_BIE: u32 = TIM_DIER_BIE_Msk;
pub const TIM_DIER_UDE_Pos: u32 = 8;
pub const TIM_DIER_UDE_Msk: u32 = 0x1 << TIM_DIER_UDE_Pos;
pub const TIM_DIER_UDE: u32 = TIM_DIER_UDE_Msk;
pub const TIM_DIER_CC1DE_Pos: u32 = 9;
pub const TIM_DIER_CC1DE_Msk: u32 = 0x1 << TIM_DIER_CC1DE_Pos;
pub const TIM_DIER_CC1DE: u32 = TIM_DIER_CC1DE_Msk;
pub const TIM_DIER_CC2DE_Pos: u32 = 10;
pub const TIM_DIER_CC2DE_Msk: u32 = 0x1 << TIM_DIER_CC2DE_Pos;
pub const TIM_DIER_CC2DE: u32 = TIM_DIER_CC2DE_Msk;
pub const TIM_DIER_CC3DE_Pos: u32 = 11;
pub const TIM_DIER_CC3DE_Msk: u32 = 0x1 << TIM_DIER_CC3DE_Pos;
pub const TIM_DIER_CC3DE: u32 = TIM_DIER_CC3DE_Msk;
pub const TIM_DIER_CC4DE_Pos: u32 = 12;
pub const TIM_DIER_CC4DE_Msk: u32 = 0x1 << TIM_DIER_CC4DE_Pos;
pub const TIM_DIER_CC4DE: u32 = TIM_DIER_CC4DE_Msk;
pub const TIM_DIER_COMDE_Pos: u32 = 13;
pub const TIM_DIER_COMDE_Msk: u32 = 0x1 << TIM_DIER_COMDE_Pos;
pub const TIM_DIER_COMDE: u32 = TIM_DIER_COMDE_Msk;
pub const TIM_DIER_TDE_Pos: u32 = 14;
pub const TIM_DIER_TDE_Msk: u32 = 0x1 << TIM_DIER_TDE_Pos;
pub const TIM_DIER_TDE: u32 = TIM_DIER_TDE_Msk;
pub const TIM_SR_UIF_Pos: u32 = 0;
pub const TIM_SR_UIF_Msk: u32 = 0x1 << TIM_SR_UIF_Pos;
pub const TIM_SR_UIF: u32 = TIM_SR_UIF_Msk;
pub const TIM_SR_CC1IF_Pos: u32 = 1;
pub const TIM_SR_CC1IF_Msk: u32 = 0x1 << TIM_SR_CC1IF_Pos;
pub const TIM_SR_CC1IF: u32 = TIM_SR_CC1IF_Msk;
pub const TIM_SR_CC2IF_Pos: u32 = 2;
pub const TIM_SR_CC2IF_Msk: u32 = 0x1 << TIM_SR_CC2IF_Pos;
pub const TIM_SR_CC2IF: u32 = TIM_SR_CC2IF_Msk;
pub const TIM_SR_CC3IF_Pos: u32 = 3;
pub const TIM_SR_CC3IF_Msk: u32 = 0x1 << TIM_SR_CC3IF_Pos;
pub const TIM_SR_CC3IF: u32 = TIM_SR_CC3IF_Msk;
pub const TIM_SR_CC4IF_Pos: u32 = 4;
pub const TIM_SR_CC4IF_Msk: u32 = 0x1 << TIM_SR_CC4IF_Pos;
pub const TIM_SR_CC4IF: u32 = TIM_SR_CC4IF_Msk;
pub const TIM_SR_COMIF_Pos: u32 = 5;
pub const TIM_SR_COMIF_Msk: u32 = 0x1 << TIM_SR_COMIF_Pos;
pub const TIM_SR_COMIF: u32 = TIM_SR_COMIF_Msk;
pub const TIM_SR_TIF_Pos: u32 = 6;
pub const TIM_SR_TIF_Msk: u32 = 0x1 << TIM_SR_TIF_Pos;
pub const TIM_SR_TIF: u32 = TIM_SR_TIF_Msk;
pub const TIM_SR_BIF_Pos: u32 = 7;
pub const TIM_SR_BIF_Msk: u32 = 0x1 << TIM_SR_BIF_Pos;
pub const TIM_SR_BIF: u32 = TIM_SR_BIF_Msk;
pub const TIM_SR_B2IF_Pos: u32 = 8;
pub const TIM_SR_B2IF_Msk: u32 = 0x1 << TIM_SR_B2IF_Pos;
pub const TIM_SR_B2IF: u32 = TIM_SR_B2IF_Msk;
pub const TIM_SR_CC1OF_Pos: u32 = 9;
pub const TIM_SR_CC1OF_Msk: u32 = 0x1 << TIM_SR_CC1OF_Pos;
pub const TIM_SR_CC1OF: u32 = TIM_SR_CC1OF_Msk;
pub const TIM_SR_CC2OF_Pos: u32 = 10;
pub const TIM_SR_CC2OF_Msk: u32 = 0x1 << TIM_SR_CC2OF_Pos;
pub const TIM_SR_CC2OF: u32 = TIM_SR_CC2OF_Msk;
pub const TIM_SR_CC3OF_Pos: u32 = 11;
pub const TIM_SR_CC3OF_Msk: u32 = 0x1 << TIM_SR_CC3OF_Pos;
pub const TIM_SR_CC3OF: u32 = TIM_SR_CC3OF_Msk;
pub const TIM_SR_CC4OF_Pos: u32 = 12;
pub const TIM_SR_CC4OF_Msk: u32 = 0x1 << TIM_SR_CC4OF_Pos;
pub const TIM_SR_CC4OF: u32 = TIM_SR_CC4OF_Msk;
pub const TIM_SR_SBIF_Pos: u32 = 13;
pub const TIM_SR_SBIF_Msk: u32 = 0x1 << TIM_SR_SBIF_Pos;
pub const TIM_SR_SBIF: u32 = TIM_SR_SBIF_Msk;
pub const TIM_SR_CC5IF_Pos: u32 = 16;
pub const TIM_SR_CC5IF_Msk: u32 = 0x1 << TIM_SR_CC5IF_Pos;
pub const TIM_SR_CC5IF: u32 = TIM_SR_CC5IF_Msk;
pub const TIM_SR_CC6IF_Pos: u32 = 17;
pub const TIM_SR_CC6IF_Msk: u32 = 0x1 << TIM_SR_CC6IF_Pos;
pub const TIM_SR_CC6IF: u32 = TIM_SR_CC6IF_Msk;
pub const TIM_EGR_UG_Pos: u32 = 0;
pub const TIM_EGR_UG_Msk: u32 = 0x1 << TIM_EGR_UG_Pos;
pub const TIM_EGR_UG: u32 = TIM_EGR_UG_Msk;
pub const TIM_EGR_CC1G_Pos: u32 = 1;
pub const TIM_EGR_CC1G_Msk: u32 = 0x1 << TIM_EGR_CC1G_Pos;
pub const TIM_EGR_CC1G: u32 = TIM_EGR_CC1G_Msk;
pub const TIM_EGR_CC2G_Pos: u32 = 2;
pub const TIM_EGR_CC2G_Msk: u32 = 0x1 << TIM_EGR_CC2G_Pos;
pub const TIM_EGR_CC2G: u32 = TIM_EGR_CC2G_Msk;
pub const TIM_EGR_CC3G_Pos: u32 = 3;
pub const TIM_EGR_CC3G_Msk: u32 = 0x1 << TIM_EGR_CC3G_Pos;
pub const TIM_EGR_CC3G: u32 = TIM_EGR_CC3G_Msk;
pub const TIM_EGR_CC4G_Pos: u32 = 4;
pub const TIM_EGR_CC4G_Msk: u32 = 0x1 << TIM_EGR_CC4G_Pos;
pub const TIM_EGR_CC4G: u32 = TIM_EGR_CC4G_Msk;
pub const TIM_EGR_COMG_Pos: u32 = 5;
pub const TIM_EGR_COMG_Msk: u32 = 0x1 << TIM_EGR_COMG_Pos;
pub const TIM_EGR_COMG: u32 = TIM_EGR_COMG_Msk;
pub const TIM_EGR_TG_Pos: u32 = 6;
pub const TIM_EGR_TG_Msk: u32 = 0x1 << TIM_EGR_TG_Pos;
pub const TIM_EGR_TG: u32 = TIM_EGR_TG_Msk;
pub const TIM_EGR_BG_Pos: u32 = 7;
pub const TIM_EGR_BG_Msk: u32 = 0x1 << TIM_EGR_BG_Pos;
pub const TIM_EGR_BG: u32 = TIM_EGR_BG_Msk;
pub const TIM_EGR_B2G_Pos: u32 = 8;
pub const TIM_EGR_B2G_Msk: u32 = 0x1 << TIM_EGR_B2G_Pos;
pub const TIM_EGR_B2G: u32 = TIM_EGR_B2G_Msk;
pub const TIM_CCMR1_CC1S_Pos: u32 = 0;
pub const TIM_CCMR1_CC1S_Msk: u32 = 0x3 << TIM_CCMR1_CC1S_Pos;
pub const TIM_CCMR1_CC1S: u32 = TIM_CCMR1_CC1S_Msk;
pub const TIM_CCMR1_CC1S_0: u32 = 0x1 << TIM_CCMR1_CC1S_Pos;
pub const TIM_CCMR1_CC1S_1: u32 = 0x2 << TIM_CCMR1_CC1S_Pos;
pub const TIM_CCMR1_OC1FE_Pos: u32 = 2;
pub const TIM_CCMR1_OC1FE_Msk: u32 = 0x1 << TIM_CCMR1_OC1FE_Pos;
pub const TIM_CCMR1_OC1FE: u32 = TIM_CCMR1_OC1FE_Msk;
pub const TIM_CCMR1_OC1PE_Pos: u32 = 3;
pub const TIM_CCMR1_OC1PE_Msk: u32 = 0x1 << TIM_CCMR1_OC1PE_Pos;
pub const TIM_CCMR1_OC1PE: u32 = TIM_CCMR1_OC1PE_Msk;
pub const TIM_CCMR1_OC1M_Pos: u32 = 4;
pub const TIM_CCMR1_OC1M_Msk: u32 = 0x1007 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M: u32 = TIM_CCMR1_OC1M_Msk;
pub const TIM_CCMR1_OC1M_0: u32 = 0x0001 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M_1: u32 = 0x0002 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M_2: u32 = 0x0004 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M_3: u32 = 0x1000 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1CE_Pos: u32 = 7;
pub const TIM_CCMR1_OC1CE_Msk: u32 = 0x1 << TIM_CCMR1_OC1CE_Pos;
pub const TIM_CCMR1_OC1CE: u32 = TIM_CCMR1_OC1CE_Msk;
pub const TIM_CCMR1_CC2S_Pos: u32 = 8;
pub const TIM_CCMR1_CC2S_Msk: u32 = 0x3 << TIM_CCMR1_CC2S_Pos;
pub const TIM_CCMR1_CC2S: u32 = TIM_CCMR1_CC2S_Msk;
pub const TIM_CCMR1_CC2S_0: u32 = 0x1 << TIM_CCMR1_CC2S_Pos;
pub const TIM_CCMR1_CC2S_1: u32 = 0x2 << TIM_CCMR1_CC2S_Pos;
pub const TIM_CCMR1_OC2FE_Pos: u32 = 10;
pub const TIM_CCMR1_OC2FE_Msk: u32 = 0x1 << TIM_CCMR1_OC2FE_Pos;
pub const TIM_CCMR1_OC2FE: u32 = TIM_CCMR1_OC2FE_Msk;
pub const TIM_CCMR1_OC2PE_Pos: u32 = 11;
pub const TIM_CCMR1_OC2PE_Msk: u32 = 0x1 << TIM_CCMR1_OC2PE_Pos;
pub const TIM_CCMR1_OC2PE: u32 = TIM_CCMR1_OC2PE_Msk;
pub const TIM_CCMR1_OC2M_Pos: u32 = 12;
pub const TIM_CCMR1_OC2M_Msk: u32 = 0x1007 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M: u32 = TIM_CCMR1_OC2M_Msk;
pub const TIM_CCMR1_OC2M_0: u32 = 0x0001 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M_1: u32 = 0x0002 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M_2: u32 = 0x0004 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M_3: u32 = 0x1000 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2CE_Pos: u32 = 15;
pub const TIM_CCMR1_OC2CE_Msk: u32 = 0x1 << TIM_CCMR1_OC2CE_Pos;
pub const TIM_CCMR1_OC2CE: u32 = TIM_CCMR1_OC2CE_Msk;
pub const TIM_CCMR1_IC1PSC_Pos: u32 = 2;
pub const TIM_CCMR1_IC1PSC_Msk: u32 = 0x3 << TIM_CCMR1_IC1PSC_Pos;
pub const TIM_CCMR1_IC1PSC: u32 = TIM_CCMR1_IC1PSC_Msk;
pub const TIM_CCMR1_IC1PSC_0: u32 = 0x1 << TIM_CCMR1_IC1PSC_Pos;
pub const TIM_CCMR1_IC1PSC_1: u32 = 0x2 << TIM_CCMR1_IC1PSC_Pos;
pub const TIM_CCMR1_IC1F_Pos: u32 = 4;
pub const TIM_CCMR1_IC1F_Msk: u32 = 0xF << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F: u32 = TIM_CCMR1_IC1F_Msk;
pub const TIM_CCMR1_IC1F_0: u32 = 0x1 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F_1: u32 = 0x2 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F_2: u32 = 0x4 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F_3: u32 = 0x8 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC2PSC_Pos: u32 = 10;
pub const TIM_CCMR1_IC2PSC_Msk: u32 = 0x3 << TIM_CCMR1_IC2PSC_Pos;
pub const TIM_CCMR1_IC2PSC: u32 = TIM_CCMR1_IC2PSC_Msk;
pub const TIM_CCMR1_IC2PSC_0: u32 = 0x1 << TIM_CCMR1_IC2PSC_Pos;
pub const TIM_CCMR1_IC2PSC_1: u32 = 0x2 << TIM_CCMR1_IC2PSC_Pos;
pub const TIM_CCMR1_IC2F_Pos: u32 = 12;
pub const TIM_CCMR1_IC2F_Msk: u32 = 0xF << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F: u32 = TIM_CCMR1_IC2F_Msk;
pub const TIM_CCMR1_IC2F_0: u32 = 0x1 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F_1: u32 = 0x2 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F_2: u32 = 0x4 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F_3: u32 = 0x8 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR2_CC3S_Pos: u32 = 0;
pub const TIM_CCMR2_CC3S_Msk: u32 = 0x3 << TIM_CCMR2_CC3S_Pos;
pub const TIM_CCMR2_CC3S: u32 = TIM_CCMR2_CC3S_Msk;
pub const TIM_CCMR2_CC3S_0: u32 = 0x1 << TIM_CCMR2_CC3S_Pos;
pub const TIM_CCMR2_CC3S_1: u32 = 0x2 << TIM_CCMR2_CC3S_Pos;
pub const TIM_CCMR2_OC3FE_Pos: u32 = 2;
pub const TIM_CCMR2_OC3FE_Msk: u32 = 0x1 << TIM_CCMR2_OC3FE_Pos;
pub const TIM_CCMR2_OC3FE: u32 = TIM_CCMR2_OC3FE_Msk;
pub const TIM_CCMR2_OC3PE_Pos: u32 = 3;
pub const TIM_CCMR2_OC3PE_Msk: u32 = 0x1 << TIM_CCMR2_OC3PE_Pos;
pub const TIM_CCMR2_OC3PE: u32 = TIM_CCMR2_OC3PE_Msk;
pub const TIM_CCMR2_OC3M_Pos: u32 = 4;
pub const TIM_CCMR2_OC3M_Msk: u32 = 0x1007 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M: u32 = TIM_CCMR2_OC3M_Msk;
pub const TIM_CCMR2_OC3M_0: u32 = 0x0001 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M_1: u32 = 0x0002 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M_2: u32 = 0x0004 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M_3: u32 = 0x1000 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3CE_Pos: u32 = 7;
pub const TIM_CCMR2_OC3CE_Msk: u32 = 0x1 << TIM_CCMR2_OC3CE_Pos;
pub const TIM_CCMR2_OC3CE: u32 = TIM_CCMR2_OC3CE_Msk;
pub const TIM_CCMR2_CC4S_Pos: u32 = 8;
pub const TIM_CCMR2_CC4S_Msk: u32 = 0x3 << TIM_CCMR2_CC4S_Pos;
pub const TIM_CCMR2_CC4S: u32 = TIM_CCMR2_CC4S_Msk;
pub const TIM_CCMR2_CC4S_0: u32 = 0x1 << TIM_CCMR2_CC4S_Pos;
pub const TIM_CCMR2_CC4S_1: u32 = 0x2 << TIM_CCMR2_CC4S_Pos;
pub const TIM_CCMR2_OC4FE_Pos: u32 = 10;
pub const TIM_CCMR2_OC4FE_Msk: u32 = 0x1 << TIM_CCMR2_OC4FE_Pos;
pub const TIM_CCMR2_OC4FE: u32 = TIM_CCMR2_OC4FE_Msk;
pub const TIM_CCMR2_OC4PE_Pos: u32 = 11;
pub const TIM_CCMR2_OC4PE_Msk: u32 = 0x1 << TIM_CCMR2_OC4PE_Pos;
pub const TIM_CCMR2_OC4PE: u32 = TIM_CCMR2_OC4PE_Msk;
pub const TIM_CCMR2_OC4M_Pos: u32 = 12;
pub const TIM_CCMR2_OC4M_Msk: u32 = 0x1007 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M: u32 = TIM_CCMR2_OC4M_Msk;
pub const TIM_CCMR2_OC4M_0: u32 = 0x0001 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M_1: u32 = 0x0002 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M_2: u32 = 0x0004 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M_3: u32 = 0x1000 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4CE_Pos: u32 = 15;
pub const TIM_CCMR2_OC4CE_Msk: u32 = 0x1 << TIM_CCMR2_OC4CE_Pos;
pub const TIM_CCMR2_OC4CE: u32 = TIM_CCMR2_OC4CE_Msk;
pub const TIM_CCMR2_IC3PSC_Pos: u32 = 2;
pub const TIM_CCMR2_IC3PSC_Msk: u32 = 0x3 << TIM_CCMR2_IC3PSC_Pos;
pub const TIM_CCMR2_IC3PSC: u32 = TIM_CCMR2_IC3PSC_Msk;
pub const TIM_CCMR2_IC3PSC_0: u32 = 0x1 << TIM_CCMR2_IC3PSC_Pos;
pub const TIM_CCMR2_IC3PSC_1: u32 = 0x2 << TIM_CCMR2_IC3PSC_Pos;
pub const TIM_CCMR2_IC3F_Pos: u32 = 4;
pub const TIM_CCMR2_IC3F_Msk: u32 = 0xF << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F: u32 = TIM_CCMR2_IC3F_Msk;
pub const TIM_CCMR2_IC3F_0: u32 = 0x1 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F_1: u32 = 0x2 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F_2: u32 = 0x4 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F_3: u32 = 0x8 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC4PSC_Pos: u32 = 10;
pub const TIM_CCMR2_IC4PSC_Msk: u32 = 0x3 << TIM_CCMR2_IC4PSC_Pos;
pub const TIM_CCMR2_IC4PSC: u32 = TIM_CCMR2_IC4PSC_Msk;
pub const TIM_CCMR2_IC4PSC_0: u32 = 0x1 << TIM_CCMR2_IC4PSC_Pos;
pub const TIM_CCMR2_IC4PSC_1: u32 = 0x2 << TIM_CCMR2_IC4PSC_Pos;
pub const TIM_CCMR2_IC4F_Pos: u32 = 12;
pub const TIM_CCMR2_IC4F_Msk: u32 = 0xF << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F: u32 = TIM_CCMR2_IC4F_Msk;
pub const TIM_CCMR2_IC4F_0: u32 = 0x1 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F_1: u32 = 0x2 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F_2: u32 = 0x4 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F_3: u32 = 0x8 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCER_CC1E_Pos: u32 = 0;
pub const TIM_CCER_CC1E_Msk: u32 = 0x1 << TIM_CCER_CC1E_Pos;
pub const TIM_CCER_CC1E: u32 = TIM_CCER_CC1E_Msk;
pub const TIM_CCER_CC1P_Pos: u32 = 1;
pub const TIM_CCER_CC1P_Msk: u32 = 0x1 << TIM_CCER_CC1P_Pos;
pub const TIM_CCER_CC1P: u32 = TIM_CCER_CC1P_Msk;
pub const TIM_CCER_CC1NE_Pos: u32 = 2;
pub const TIM_CCER_CC1NE_Msk: u32 = 0x1 << TIM_CCER_CC1NE_Pos;
pub const TIM_CCER_CC1NE: u32 = TIM_CCER_CC1NE_Msk;
pub const TIM_CCER_CC1NP_Pos: u32 = 3;
pub const TIM_CCER_CC1NP_Msk: u32 = 0x1 << TIM_CCER_CC1NP_Pos;
pub const TIM_CCER_CC1NP: u32 = TIM_CCER_CC1NP_Msk;
pub const TIM_CCER_CC2E_Pos: u32 = 4;
pub const TIM_CCER_CC2E_Msk: u32 = 0x1 << TIM_CCER_CC2E_Pos;
pub const TIM_CCER_CC2E: u32 = TIM_CCER_CC2E_Msk;
pub const TIM_CCER_CC2P_Pos: u32 = 5;
pub const TIM_CCER_CC2P_Msk: u32 = 0x1 << TIM_CCER_CC2P_Pos;
pub const TIM_CCER_CC2P: u32 = TIM_CCER_CC2P_Msk;
pub const TIM_CCER_CC2NE_Pos: u32 = 6;
pub const TIM_CCER_CC2NE_Msk: u32 = 0x1 << TIM_CCER_CC2NE_Pos;
pub const TIM_CCER_CC2NE: u32 = TIM_CCER_CC2NE_Msk;
pub const TIM_CCER_CC2NP_Pos: u32 = 7;
pub const TIM_CCER_CC2NP_Msk: u32 = 0x1 << TIM_CCER_CC2NP_Pos;
pub const TIM_CCER_CC2NP: u32 = TIM_CCER_CC2NP_Msk;
pub const TIM_CCER_CC3E_Pos: u32 = 8;
pub const TIM_CCER_CC3E_Msk: u32 = 0x1 << TIM_CCER_CC3E_Pos;
pub const TIM_CCER_CC3E: u32 = TIM_CCER_CC3E_Msk;
pub const TIM_CCER_CC3P_Pos: u32 = 9;
pub const TIM_CCER_CC3P_Msk: u32 = 0x1 << TIM_CCER_CC3P_Pos;
pub const TIM_CCER_CC3P: u32 = TIM_CCER_CC3P_Msk;
pub const TIM_CCER_CC3NE_Pos: u32 = 10;
pub const TIM_CCER_CC3NE_Msk: u32 = 0x1 << TIM_CCER_CC3NE_Pos;
pub const TIM_CCER_CC3NE: u32 = TIM_CCER_CC3NE_Msk;
pub const TIM_CCER_CC3NP_Pos: u32 = 11;
pub const TIM_CCER_CC3NP_Msk: u32 = 0x1 << TIM_CCER_CC3NP_Pos;
pub const TIM_CCER_CC3NP: u32 = TIM_CCER_CC3NP_Msk;
pub const TIM_CCER_CC4E_Pos: u32 = 12;
pub const TIM_CCER_CC4E_Msk: u32 = 0x1 << TIM_CCER_CC4E_Pos;
pub const TIM_CCER_CC4E: u32 = TIM_CCER_CC4E_Msk;
pub const TIM_CCER_CC4P_Pos: u32 = 13;
pub const TIM_CCER_CC4P_Msk: u32 = 0x1 << TIM_CCER_CC4P_Pos;
pub const TIM_CCER_CC4P: u32 = TIM_CCER_CC4P_Msk;
pub const TIM_CCER_CC4NP_Pos: u32 = 15;
pub const TIM_CCER_CC4NP_Msk: u32 = 0x1 << TIM_CCER_CC4NP_Pos;
pub const TIM_CCER_CC4NP: u32 = TIM_CCER_CC4NP_Msk;
pub const TIM_CCER_CC5E_Pos: u32 = 16;
pub const TIM_CCER_CC5E_Msk: u32 = 0x1 << TIM_CCER_CC5E_Pos;
pub const TIM_CCER_CC5E: u32 = TIM_CCER_CC5E_Msk;
pub const TIM_CCER_CC5P_Pos: u32 = 17;
pub const TIM_CCER_CC5P_Msk: u32 = 0x1 << TIM_CCER_CC5P_Pos;
pub const TIM_CCER_CC5P: u32 = TIM_CCER_CC5P_Msk;
pub const TIM_CCER_CC6E_Pos: u32 = 20;
pub const TIM_CCER_CC6E_Msk: u32 = 0x1 << TIM_CCER_CC6E_Pos;
pub const TIM_CCER_CC6E: u32 = TIM_CCER_CC6E_Msk;
pub const TIM_CCER_CC6P_Pos: u32 = 21;
pub const TIM_CCER_CC6P_Msk: u32 = 0x1 << TIM_CCER_CC6P_Pos;
pub const TIM_CCER_CC6P: u32 = TIM_CCER_CC6P_Msk;
pub const TIM_CNT_CNT_Pos: u32 = 0;
pub const TIM_CNT_CNT_Msk: u32 = 0xFFFFFFFF << TIM_CNT_CNT_Pos;
pub const TIM_CNT_CNT: u32 = TIM_CNT_CNT_Msk;
pub const TIM_CNT_UIFCPY_Pos: u32 = 31;
pub const TIM_CNT_UIFCPY_Msk: u32 = 0x1 << TIM_CNT_UIFCPY_Pos;
pub const TIM_CNT_UIFCPY: u32 = TIM_CNT_UIFCPY_Msk;
pub const TIM_PSC_PSC_Pos: u32 = 0;
pub const TIM_PSC_PSC_Msk: u32 = 0xFFFF << TIM_PSC_PSC_Pos;
pub const TIM_PSC_PSC: u32 = TIM_PSC_PSC_Msk;
pub const TIM_ARR_ARR_Pos: u32 = 0;
pub const TIM_ARR_ARR_Msk: u32 = 0xFFFFFFFF << TIM_ARR_ARR_Pos;
pub const TIM_ARR_ARR: u32 = TIM_ARR_ARR_Msk;
pub const TIM_RCR_REP_Pos: u32 = 0;
pub const TIM_RCR_REP_Msk: u32 = 0xFFFF << TIM_RCR_REP_Pos;
pub const TIM_RCR_REP: u32 = TIM_RCR_REP_Msk;
pub const TIM_CCR1_CCR1_Pos: u32 = 0;
pub const TIM_CCR1_CCR1_Msk: u32 = 0xFFFF << TIM_CCR1_CCR1_Pos;
pub const TIM_CCR1_CCR1: u32 = TIM_CCR1_CCR1_Msk;
pub const TIM_CCR2_CCR2_Pos: u32 = 0;
pub const TIM_CCR2_CCR2_Msk: u32 = 0xFFFF << TIM_CCR2_CCR2_Pos;
pub const TIM_CCR2_CCR2: u32 = TIM_CCR2_CCR2_Msk;
pub const TIM_CCR3_CCR3_Pos: u32 = 0;
pub const TIM_CCR3_CCR3_Msk: u32 = 0xFFFF << TIM_CCR3_CCR3_Pos;
pub const TIM_CCR3_CCR3: u32 = TIM_CCR3_CCR3_Msk;
pub const TIM_CCR4_CCR4_Pos: u32 = 0;
pub const TIM_CCR4_CCR4_Msk: u32 = 0xFFFF << TIM_CCR4_CCR4_Pos;
pub const TIM_CCR4_CCR4: u32 = TIM_CCR4_CCR4_Msk;
pub const TIM_BDTR_DTG_Pos: u32 = 0;
pub const TIM_BDTR_DTG_Msk: u32 = 0xFF << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG: u32 = TIM_BDTR_DTG_Msk;
pub const TIM_BDTR_DTG_0: u32 = 0x01 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_1: u32 = 0x02 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_2: u32 = 0x04 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_3: u32 = 0x08 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_4: u32 = 0x10 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_5: u32 = 0x20 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_6: u32 = 0x40 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_7: u32 = 0x80 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_LOCK_Pos: u32 = 8;
pub const TIM_BDTR_LOCK_Msk: u32 = 0x3 << TIM_BDTR_LOCK_Pos;
pub const TIM_BDTR_LOCK: u32 = TIM_BDTR_LOCK_Msk;
pub const TIM_BDTR_LOCK_0: u32 = 0x1 << TIM_BDTR_LOCK_Pos;
pub const TIM_BDTR_LOCK_1: u32 = 0x2 << TIM_BDTR_LOCK_Pos;
pub const TIM_BDTR_OSSI_Pos: u32 = 10;
pub const TIM_BDTR_OSSI_Msk: u32 = 0x1 << TIM_BDTR_OSSI_Pos;
pub const TIM_BDTR_OSSI: u32 = TIM_BDTR_OSSI_Msk;
pub const TIM_BDTR_OSSR_Pos: u32 = 11;
pub const TIM_BDTR_OSSR_Msk: u32 = 0x1 << TIM_BDTR_OSSR_Pos;
pub const TIM_BDTR_OSSR: u32 = TIM_BDTR_OSSR_Msk;
pub const TIM_BDTR_BKE_Pos: u32 = 12;
pub const TIM_BDTR_BKE_Msk: u32 = 0x1 << TIM_BDTR_BKE_Pos;
pub const TIM_BDTR_BKE: u32 = TIM_BDTR_BKE_Msk;
pub const TIM_BDTR_BKP_Pos: u32 = 13;
pub const TIM_BDTR_BKP_Msk: u32 = 0x1 << TIM_BDTR_BKP_Pos;
pub const TIM_BDTR_BKP: u32 = TIM_BDTR_BKP_Msk;
pub const TIM_BDTR_AOE_Pos: u32 = 14;
pub const TIM_BDTR_AOE_Msk: u32 = 0x1 << TIM_BDTR_AOE_Pos;
pub const TIM_BDTR_AOE: u32 = TIM_BDTR_AOE_Msk;
pub const TIM_BDTR_MOE_Pos: u32 = 15;
pub const TIM_BDTR_MOE_Msk: u32 = 0x1 << TIM_BDTR_MOE_Pos;
pub const TIM_BDTR_MOE: u32 = TIM_BDTR_MOE_Msk;
pub const TIM_BDTR_BKF_Pos: u32 = 16;
pub const TIM_BDTR_BKF_Msk: u32 = 0xF << TIM_BDTR_BKF_Pos;
pub const TIM_BDTR_BKF: u32 = TIM_BDTR_BKF_Msk;
pub const TIM_BDTR_BK2F_Pos: u32 = 20;
pub const TIM_BDTR_BK2F_Msk: u32 = 0xF << TIM_BDTR_BK2F_Pos;
pub const TIM_BDTR_BK2F: u32 = TIM_BDTR_BK2F_Msk;
pub const TIM_BDTR_BK2E_Pos: u32 = 24;
pub const TIM_BDTR_BK2E_Msk: u32 = 0x1 << TIM_BDTR_BK2E_Pos;
pub const TIM_BDTR_BK2E: u32 = TIM_BDTR_BK2E_Msk;
pub const TIM_BDTR_BK2P_Pos: u32 = 25;
pub const TIM_BDTR_BK2P_Msk: u32 = 0x1 << TIM_BDTR_BK2P_Pos;
pub const TIM_BDTR_BK2P: u32 = TIM_BDTR_BK2P_Msk;
pub const TIM_DCR_DBA_Pos: u32 = 0;
pub const TIM_DCR_DBA_Msk: u32 = 0x1F << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA: u32 = TIM_DCR_DBA_Msk;
pub const TIM_DCR_DBA_0: u32 = 0x01 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_1: u32 = 0x02 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_2: u32 = 0x04 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_3: u32 = 0x08 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_4: u32 = 0x10 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBL_Pos: u32 = 8;
pub const TIM_DCR_DBL_Msk: u32 = 0x1F << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL: u32 = TIM_DCR_DBL_Msk;
pub const TIM_DCR_DBL_0: u32 = 0x01 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_1: u32 = 0x02 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_2: u32 = 0x04 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_3: u32 = 0x08 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_4: u32 = 0x10 << TIM_DCR_DBL_Pos;
pub const TIM_DMAR_DMAB_Pos: u32 = 0;
pub const TIM_DMAR_DMAB_Msk: u32 = 0xFFFF << TIM_DMAR_DMAB_Pos;
pub const TIM_DMAR_DMAB: u32 = TIM_DMAR_DMAB_Msk;
pub const TIM_OR_TI4_RMP_Pos: u32 = 6;
pub const TIM_OR_TI4_RMP_Msk: u32 = 0x3 << TIM_OR_TI4_RMP_Pos;
pub const TIM_OR_TI4_RMP: u32 = TIM_OR_TI4_RMP_Msk;
pub const TIM_OR_TI4_RMP_0: u32 = 0x1 << TIM_OR_TI4_RMP_Pos;
pub const TIM_OR_TI4_RMP_1: u32 = 0x2 << TIM_OR_TI4_RMP_Pos;
pub const TIM_OR_ITR1_RMP_Pos: u32 = 10;
pub const TIM_OR_ITR1_RMP_Msk: u32 = 0x3 << TIM_OR_ITR1_RMP_Pos;
pub const TIM_OR_ITR1_RMP: u32 = TIM_OR_ITR1_RMP_Msk;
pub const TIM_OR_ITR1_RMP_0: u32 = 0x1 << TIM_OR_ITR1_RMP_Pos;
pub const TIM_OR_ITR1_RMP_1: u32 = 0x2 << TIM_OR_ITR1_RMP_Pos;
pub const TIM2_OR_ITR1_RMP_Pos: u32 = 10;
pub const TIM2_OR_ITR1_RMP_Msk: u32 = 0x3 << TIM2_OR_ITR1_RMP_Pos;
pub const TIM2_OR_ITR1_RMP: u32 = TIM2_OR_ITR1_RMP_Msk;
pub const TIM2_OR_ITR1_RMP_0: u32 = 0x1 << TIM2_OR_ITR1_RMP_Pos;
pub const TIM2_OR_ITR1_RMP_1: u32 = 0x2 << TIM2_OR_ITR1_RMP_Pos;
pub const TIM5_OR_TI4_RMP_Pos: u32 = 6;
pub const TIM5_OR_TI4_RMP_Msk: u32 = 0x3 << TIM5_OR_TI4_RMP_Pos;
pub const TIM5_OR_TI4_RMP: u32 = TIM5_OR_TI4_RMP_Msk;
pub const TIM5_OR_TI4_RMP_0: u32 = 0x1 << TIM5_OR_TI4_RMP_Pos;
pub const TIM5_OR_TI4_RMP_1: u32 = 0x2 << TIM5_OR_TI4_RMP_Pos;
pub const TIM11_OR_TI1_RMP_Pos: u32 = 0;
pub const TIM11_OR_TI1_RMP_Msk: u32 = 0x3 << TIM11_OR_TI1_RMP_Pos;
pub const TIM11_OR_TI1_RMP: u32 = TIM11_OR_TI1_RMP_Msk;
pub const TIM11_OR_TI1_RMP_0: u32 = 0x1 << TIM11_OR_TI1_RMP_Pos;
pub const TIM11_OR_TI1_RMP_1: u32 = 0x2 << TIM11_OR_TI1_RMP_Pos;
pub const TIM_CCMR3_OC5FE_Pos: u32 = 2;
pub const TIM_CCMR3_OC5FE_Msk: u32 = 0x1 << TIM_CCMR3_OC5FE_Pos;
pub const TIM_CCMR3_OC5FE: u32 = TIM_CCMR3_OC5FE_Msk;
pub const TIM_CCMR3_OC5PE_Pos: u32 = 3;
pub const TIM_CCMR3_OC5PE_Msk: u32 = 0x1 << TIM_CCMR3_OC5PE_Pos;
pub const TIM_CCMR3_OC5PE: u32 = TIM_CCMR3_OC5PE_Msk;
pub const TIM_CCMR3_OC5M_Pos: u32 = 4;
pub const TIM_CCMR3_OC5M_Msk: u32 = 0x1007 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5M: u32 = TIM_CCMR3_OC5M_Msk;
pub const TIM_CCMR3_OC5M_0: u32 = 0x0001 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5M_1: u32 = 0x0002 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5M_2: u32 = 0x0004 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5M_3: u32 = 0x1000 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5CE_Pos: u32 = 7;
pub const TIM_CCMR3_OC5CE_Msk: u32 = 0x1 << TIM_CCMR3_OC5CE_Pos;
pub const TIM_CCMR3_OC5CE: u32 = TIM_CCMR3_OC5CE_Msk;
pub const TIM_CCMR3_OC6FE_Pos: u32 = 10;
pub const TIM_CCMR3_OC6FE_Msk: u32 = 0x1 << TIM_CCMR3_OC6FE_Pos;
pub const TIM_CCMR3_OC6FE: u32 = TIM_CCMR3_OC6FE_Msk;
pub const TIM_CCMR3_OC6PE_Pos: u32 = 11;
pub const TIM_CCMR3_OC6PE_Msk: u32 = 0x1 << TIM_CCMR3_OC6PE_Pos;
pub const TIM_CCMR3_OC6PE: u32 = TIM_CCMR3_OC6PE_Msk;
pub const TIM_CCMR3_OC6M_Pos: u32 = 12;
pub const TIM_CCMR3_OC6M_Msk: u32 = 0x1007 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6M: u32 = TIM_CCMR3_OC6M_Msk;
pub const TIM_CCMR3_OC6M_0: u32 = 0x0001 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6M_1: u32 = 0x0002 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6M_2: u32 = 0x0004 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6M_3: u32 = 0x1000 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6CE_Pos: u32 = 15;
pub const TIM_CCMR3_OC6CE_Msk: u32 = 0x1 << TIM_CCMR3_OC6CE_Pos;
pub const TIM_CCMR3_OC6CE: u32 = TIM_CCMR3_OC6CE_Msk;
pub const TIM_CCR5_CCR5_Pos: u32 = 0;
pub const TIM_CCR5_CCR5_Msk: u32 = 0xFFFFFFFF << TIM_CCR5_CCR5_Pos;
pub const TIM_CCR5_CCR5: u32 = TIM_CCR5_CCR5_Msk;
pub const TIM_CCR5_GC5C1_Pos: u32 = 29;
pub const TIM_CCR5_GC5C1_Msk: u32 = 0x1 << TIM_CCR5_GC5C1_Pos;
pub const TIM_CCR5_GC5C1: u32 = TIM_CCR5_GC5C1_Msk;
pub const TIM_CCR5_GC5C2_Pos: u32 = 30;
pub const TIM_CCR5_GC5C2_Msk: u32 = 0x1 << TIM_CCR5_GC5C2_Pos;
pub const TIM_CCR5_GC5C2: u32 = TIM_CCR5_GC5C2_Msk;
pub const TIM_CCR5_GC5C3_Pos: u32 = 31;
pub const TIM_CCR5_GC5C3_Msk: u32 = 0x1 << TIM_CCR5_GC5C3_Pos;
pub const TIM_CCR5_GC5C3: u32 = TIM_CCR5_GC5C3_Msk;
pub const TIM_CCR6_CCR6: u32 = 0xFFFF;
pub const LPTIM_ISR_CMPM_Pos: u32 = 0;
pub const LPTIM_ISR_CMPM_Msk: u32 = 0x1 << LPTIM_ISR_CMPM_Pos;
pub const LPTIM_ISR_CMPM: u32 = LPTIM_ISR_CMPM_Msk;
pub const LPTIM_ISR_ARRM_Pos: u32 = 1;
pub const LPTIM_ISR_ARRM_Msk: u32 = 0x1 << LPTIM_ISR_ARRM_Pos;
pub const LPTIM_ISR_ARRM: u32 = LPTIM_ISR_ARRM_Msk;
pub const LPTIM_ISR_EXTTRIG_Pos: u32 = 2;
pub const LPTIM_ISR_EXTTRIG_Msk: u32 = 0x1 << LPTIM_ISR_EXTTRIG_Pos;
pub const LPTIM_ISR_EXTTRIG: u32 = LPTIM_ISR_EXTTRIG_Msk;
pub const LPTIM_ISR_CMPOK_Pos: u32 = 3;
pub const LPTIM_ISR_CMPOK_Msk: u32 = 0x1 << LPTIM_ISR_CMPOK_Pos;
pub const LPTIM_ISR_CMPOK: u32 = LPTIM_ISR_CMPOK_Msk;
pub const LPTIM_ISR_ARROK_Pos: u32 = 4;
pub const LPTIM_ISR_ARROK_Msk: u32 = 0x1 << LPTIM_ISR_ARROK_Pos;
pub const LPTIM_ISR_ARROK: u32 = LPTIM_ISR_ARROK_Msk;
pub const LPTIM_ISR_UP_Pos: u32 = 5;
pub const LPTIM_ISR_UP_Msk: u32 = 0x1 << LPTIM_ISR_UP_Pos;
pub const LPTIM_ISR_UP: u32 = LPTIM_ISR_UP_Msk;
pub const LPTIM_ISR_DOWN_Pos: u32 = 6;
pub const LPTIM_ISR_DOWN_Msk: u32 = 0x1 << LPTIM_ISR_DOWN_Pos;
pub const LPTIM_ISR_DOWN: u32 = LPTIM_ISR_DOWN_Msk;
pub const LPTIM_ICR_CMPMCF_Pos: u32 = 0;
pub const LPTIM_ICR_CMPMCF_Msk: u32 = 0x1 << LPTIM_ICR_CMPMCF_Pos;
pub const LPTIM_ICR_CMPMCF: u32 = LPTIM_ICR_CMPMCF_Msk;
pub const LPTIM_ICR_ARRMCF_Pos: u32 = 1;
pub const LPTIM_ICR_ARRMCF_Msk: u32 = 0x1 << LPTIM_ICR_ARRMCF_Pos;
pub const LPTIM_ICR_ARRMCF: u32 = LPTIM_ICR_ARRMCF_Msk;
pub const LPTIM_ICR_EXTTRIGCF_Pos: u32 = 2;
pub const LPTIM_ICR_EXTTRIGCF_Msk: u32 = 0x1 << LPTIM_ICR_EXTTRIGCF_Pos;
pub const LPTIM_ICR_EXTTRIGCF: u32 = LPTIM_ICR_EXTTRIGCF_Msk;
pub const LPTIM_ICR_CMPOKCF_Pos: u32 = 3;
pub const LPTIM_ICR_CMPOKCF_Msk: u32 = 0x1 << LPTIM_ICR_CMPOKCF_Pos;
pub const LPTIM_ICR_CMPOKCF: u32 = LPTIM_ICR_CMPOKCF_Msk;
pub const LPTIM_ICR_ARROKCF_Pos: u32 = 4;
pub const LPTIM_ICR_ARROKCF_Msk: u32 = 0x1 << LPTIM_ICR_ARROKCF_Pos;
pub const LPTIM_ICR_ARROKCF: u32 = LPTIM_ICR_ARROKCF_Msk;
pub const LPTIM_ICR_UPCF_Pos: u32 = 5;
pub const LPTIM_ICR_UPCF_Msk: u32 = 0x1 << LPTIM_ICR_UPCF_Pos;
pub const LPTIM_ICR_UPCF: u32 = LPTIM_ICR_UPCF_Msk;
pub const LPTIM_ICR_DOWNCF_Pos: u32 = 6;
pub const LPTIM_ICR_DOWNCF_Msk: u32 = 0x1 << LPTIM_ICR_DOWNCF_Pos;
pub const LPTIM_ICR_DOWNCF: u32 = LPTIM_ICR_DOWNCF_Msk;
pub const LPTIM_IER_CMPMIE_Pos: u32 = 0;
pub const LPTIM_IER_CMPMIE_Msk: u32 = 0x1 << LPTIM_IER_CMPMIE_Pos;
pub const LPTIM_IER_CMPMIE: u32 = LPTIM_IER_CMPMIE_Msk;
pub const LPTIM_IER_ARRMIE_Pos: u32 = 1;
pub const LPTIM_IER_ARRMIE_Msk: u32 = 0x1 << LPTIM_IER_ARRMIE_Pos;
pub const LPTIM_IER_ARRMIE: u32 = LPTIM_IER_ARRMIE_Msk;
pub const LPTIM_IER_EXTTRIGIE_Pos: u32 = 2;
pub const LPTIM_IER_EXTTRIGIE_Msk: u32 = 0x1 << LPTIM_IER_EXTTRIGIE_Pos;
pub const LPTIM_IER_EXTTRIGIE: u32 = LPTIM_IER_EXTTRIGIE_Msk;
pub const LPTIM_IER_CMPOKIE_Pos: u32 = 3;
pub const LPTIM_IER_CMPOKIE_Msk: u32 = 0x1 << LPTIM_IER_CMPOKIE_Pos;
pub const LPTIM_IER_CMPOKIE: u32 = LPTIM_IER_CMPOKIE_Msk;
pub const LPTIM_IER_ARROKIE_Pos: u32 = 4;
pub const LPTIM_IER_ARROKIE_Msk: u32 = 0x1 << LPTIM_IER_ARROKIE_Pos;
pub const LPTIM_IER_ARROKIE: u32 = LPTIM_IER_ARROKIE_Msk;
pub const LPTIM_IER_UPIE_Pos: u32 = 5;
pub const LPTIM_IER_UPIE_Msk: u32 = 0x1 << LPTIM_IER_UPIE_Pos;
pub const LPTIM_IER_UPIE: u32 = LPTIM_IER_UPIE_Msk;
pub const LPTIM_IER_DOWNIE_Pos: u32 = 6;
pub const LPTIM_IER_DOWNIE_Msk: u32 = 0x1 << LPTIM_IER_DOWNIE_Pos;
pub const LPTIM_IER_DOWNIE: u32 = LPTIM_IER_DOWNIE_Msk;
pub const LPTIM_CFGR_CKSEL_Pos: u32 = 0;
pub const LPTIM_CFGR_CKSEL_Msk: u32 = 0x1 << LPTIM_CFGR_CKSEL_Pos;
pub const LPTIM_CFGR_CKSEL: u32 = LPTIM_CFGR_CKSEL_Msk;
pub const LPTIM_CFGR_CKPOL_Pos: u32 = 1;
pub const LPTIM_CFGR_CKPOL_Msk: u32 = 0x3 << LPTIM_CFGR_CKPOL_Pos;
pub const LPTIM_CFGR_CKPOL: u32 = LPTIM_CFGR_CKPOL_Msk;
pub const LPTIM_CFGR_CKPOL_0: u32 = 0x1 << LPTIM_CFGR_CKPOL_Pos;
pub const LPTIM_CFGR_CKPOL_1: u32 = 0x2 << LPTIM_CFGR_CKPOL_Pos;
pub const LPTIM_CFGR_CKFLT_Pos: u32 = 3;
pub const LPTIM_CFGR_CKFLT_Msk: u32 = 0x3 << LPTIM_CFGR_CKFLT_Pos;
pub const LPTIM_CFGR_CKFLT: u32 = LPTIM_CFGR_CKFLT_Msk;
pub const LPTIM_CFGR_CKFLT_0: u32 = 0x1 << LPTIM_CFGR_CKFLT_Pos;
pub const LPTIM_CFGR_CKFLT_1: u32 = 0x2 << LPTIM_CFGR_CKFLT_Pos;
pub const LPTIM_CFGR_TRGFLT_Pos: u32 = 6;
pub const LPTIM_CFGR_TRGFLT_Msk: u32 = 0x3 << LPTIM_CFGR_TRGFLT_Pos;
pub const LPTIM_CFGR_TRGFLT: u32 = LPTIM_CFGR_TRGFLT_Msk;
pub const LPTIM_CFGR_TRGFLT_0: u32 = 0x1 << LPTIM_CFGR_TRGFLT_Pos;
pub const LPTIM_CFGR_TRGFLT_1: u32 = 0x2 << LPTIM_CFGR_TRGFLT_Pos;
pub const LPTIM_CFGR_PRESC_Pos: u32 = 9;
pub const LPTIM_CFGR_PRESC_Msk: u32 = 0x7 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_PRESC: u32 = LPTIM_CFGR_PRESC_Msk;
pub const LPTIM_CFGR_PRESC_0: u32 = 0x1 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_PRESC_1: u32 = 0x2 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_PRESC_2: u32 = 0x4 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_TRIGSEL_Pos: u32 = 13;
pub const LPTIM_CFGR_TRIGSEL_Msk: u32 = 0x7 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGSEL: u32 = LPTIM_CFGR_TRIGSEL_Msk;
pub const LPTIM_CFGR_TRIGSEL_0: u32 = 0x1 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGSEL_1: u32 = 0x2 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGSEL_2: u32 = 0x4 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGEN_Pos: u32 = 17;
pub const LPTIM_CFGR_TRIGEN_Msk: u32 = 0x3 << LPTIM_CFGR_TRIGEN_Pos;
pub const LPTIM_CFGR_TRIGEN: u32 = LPTIM_CFGR_TRIGEN_Msk;
pub const LPTIM_CFGR_TRIGEN_0: u32 = 0x1 << LPTIM_CFGR_TRIGEN_Pos;
pub const LPTIM_CFGR_TRIGEN_1: u32 = 0x2 << LPTIM_CFGR_TRIGEN_Pos;
pub const LPTIM_CFGR_TIMOUT_Pos: u32 = 19;
pub const LPTIM_CFGR_TIMOUT_Msk: u32 = 0x1 << LPTIM_CFGR_TIMOUT_Pos;
pub const LPTIM_CFGR_TIMOUT: u32 = LPTIM_CFGR_TIMOUT_Msk;
pub const LPTIM_CFGR_WAVE_Pos: u32 = 20;
pub const LPTIM_CFGR_WAVE_Msk: u32 = 0x1 << LPTIM_CFGR_WAVE_Pos;
pub const LPTIM_CFGR_WAVE: u32 = LPTIM_CFGR_WAVE_Msk;
pub const LPTIM_CFGR_WAVPOL_Pos: u32 = 21;
pub const LPTIM_CFGR_WAVPOL_Msk: u32 = 0x1 << LPTIM_CFGR_WAVPOL_Pos;
pub const LPTIM_CFGR_WAVPOL: u32 = LPTIM_CFGR_WAVPOL_Msk;
pub const LPTIM_CFGR_PRELOAD_Pos: u32 = 22;
pub const LPTIM_CFGR_PRELOAD_Msk: u32 = 0x1 << LPTIM_CFGR_PRELOAD_Pos;
pub const LPTIM_CFGR_PRELOAD: u32 = LPTIM_CFGR_PRELOAD_Msk;
pub const LPTIM_CFGR_COUNTMODE_Pos: u32 = 23;
pub const LPTIM_CFGR_COUNTMODE_Msk: u32 = 0x1 << LPTIM_CFGR_COUNTMODE_Pos;
pub const LPTIM_CFGR_COUNTMODE: u32 = LPTIM_CFGR_COUNTMODE_Msk;
pub const LPTIM_CFGR_ENC_Pos: u32 = 24;
pub const LPTIM_CFGR_ENC_Msk: u32 = 0x1 << LPTIM_CFGR_ENC_Pos;
pub const LPTIM_CFGR_ENC: u32 = LPTIM_CFGR_ENC_Msk;
pub const LPTIM_CR_ENABLE_Pos: u32 = 0;
pub const LPTIM_CR_ENABLE_Msk: u32 = 0x1 << LPTIM_CR_ENABLE_Pos;
pub const LPTIM_CR_ENABLE: u32 = LPTIM_CR_ENABLE_Msk;
pub const LPTIM_CR_SNGSTRT_Pos: u32 = 1;
pub const LPTIM_CR_SNGSTRT_Msk: u32 = 0x1 << LPTIM_CR_SNGSTRT_Pos;
pub const LPTIM_CR_SNGSTRT: u32 = LPTIM_CR_SNGSTRT_Msk;
pub const LPTIM_CR_CNTSTRT_Pos: u32 = 2;
pub const LPTIM_CR_CNTSTRT_Msk: u32 = 0x1 << LPTIM_CR_CNTSTRT_Pos;
pub const LPTIM_CR_CNTSTRT: u32 = LPTIM_CR_CNTSTRT_Msk;
pub const LPTIM_CMP_CMP_Pos: u32 = 0;
pub const LPTIM_CMP_CMP_Msk: u32 = 0xFFFF << LPTIM_CMP_CMP_Pos;
pub const LPTIM_CMP_CMP: u32 = LPTIM_CMP_CMP_Msk;
pub const LPTIM_ARR_ARR_Pos: u32 = 0;
pub const LPTIM_ARR_ARR_Msk: u32 = 0xFFFF << LPTIM_ARR_ARR_Pos;
pub const LPTIM_ARR_ARR: u32 = LPTIM_ARR_ARR_Msk;
pub const LPTIM_CNT_CNT_Pos: u32 = 0;
pub const LPTIM_CNT_CNT_Msk: u32 = 0xFFFF << LPTIM_CNT_CNT_Pos;
pub const LPTIM_CNT_CNT: u32 = LPTIM_CNT_CNT_Msk;
pub const USART_CR1_UE_Pos: u32 = 0;
pub const USART_CR1_UE_Msk: u32 = 0x1 << USART_CR1_UE_Pos;
pub const USART_CR1_UE: u32 = USART_CR1_UE_Msk;
pub const USART_CR1_RE_Pos: u32 = 2;
pub const USART_CR1_RE_Msk: u32 = 0x1 << USART_CR1_RE_Pos;
pub const USART_CR1_RE: u32 = USART_CR1_RE_Msk;
pub const USART_CR1_TE_Pos: u32 = 3;
pub const USART_CR1_TE_Msk: u32 = 0x1 << USART_CR1_TE_Pos;
pub const USART_CR1_TE: u32 = USART_CR1_TE_Msk;
pub const USART_CR1_IDLEIE_Pos: u32 = 4;
pub const USART_CR1_IDLEIE_Msk: u32 = 0x1 << USART_CR1_IDLEIE_Pos;
pub const USART_CR1_IDLEIE: u32 = USART_CR1_IDLEIE_Msk;
pub const USART_CR1_RXNEIE_Pos: u32 = 5;
pub const USART_CR1_RXNEIE_Msk: u32 = 0x1 << USART_CR1_RXNEIE_Pos;
pub const USART_CR1_RXNEIE: u32 = USART_CR1_RXNEIE_Msk;
pub const USART_CR1_TCIE_Pos: u32 = 6;
pub const USART_CR1_TCIE_Msk: u32 = 0x1 << USART_CR1_TCIE_Pos;
pub const USART_CR1_TCIE: u32 = USART_CR1_TCIE_Msk;
pub const USART_CR1_TXEIE_Pos: u32 = 7;
pub const USART_CR1_TXEIE_Msk: u32 = 0x1 << USART_CR1_TXEIE_Pos;
pub const USART_CR1_TXEIE: u32 = USART_CR1_TXEIE_Msk;
pub const USART_CR1_PEIE_Pos: u32 = 8;
pub const USART_CR1_PEIE_Msk: u32 = 0x1 << USART_CR1_PEIE_Pos;
pub const USART_CR1_PEIE: u32 = USART_CR1_PEIE_Msk;
pub const USART_CR1_PS_Pos: u32 = 9;
pub const USART_CR1_PS_Msk: u32 = 0x1 << USART_CR1_PS_Pos;
pub const USART_CR1_PS: u32 = USART_CR1_PS_Msk;
pub const USART_CR1_PCE_Pos: u32 = 10;
pub const USART_CR1_PCE_Msk: u32 = 0x1 << USART_CR1_PCE_Pos;
pub const USART_CR1_PCE: u32 = USART_CR1_PCE_Msk;
pub const USART_CR1_WAKE_Pos: u32 = 11;
pub const USART_CR1_WAKE_Msk: u32 = 0x1 << USART_CR1_WAKE_Pos;
pub const USART_CR1_WAKE: u32 = USART_CR1_WAKE_Msk;
pub const USART_CR1_M_Pos: u32 = 12;
pub const USART_CR1_M_Msk: u32 = 0x10001 << USART_CR1_M_Pos;
pub const USART_CR1_M: u32 = USART_CR1_M_Msk;
pub const USART_CR1_M0: u32 = 0x00001 << USART_CR1_M_Pos;
pub const USART_CR1_MME_Pos: u32 = 13;
pub const USART_CR1_MME_Msk: u32 = 0x1 << USART_CR1_MME_Pos;
pub const USART_CR1_MME: u32 = USART_CR1_MME_Msk;
pub const USART_CR1_CMIE_Pos: u32 = 14;
pub const USART_CR1_CMIE_Msk: u32 = 0x1 << USART_CR1_CMIE_Pos;
pub const USART_CR1_CMIE: u32 = USART_CR1_CMIE_Msk;
pub const USART_CR1_OVER8_Pos: u32 = 15;
pub const USART_CR1_OVER8_Msk: u32 = 0x1 << USART_CR1_OVER8_Pos;
pub const USART_CR1_OVER8: u32 = USART_CR1_OVER8_Msk;
pub const USART_CR1_DEDT_Pos: u32 = 16;
pub const USART_CR1_DEDT_Msk: u32 = 0x1F << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT: u32 = USART_CR1_DEDT_Msk;
pub const USART_CR1_DEDT_0: u32 = 0x01 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_1: u32 = 0x02 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_2: u32 = 0x04 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_3: u32 = 0x08 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_4: u32 = 0x10 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEAT_Pos: u32 = 21;
pub const USART_CR1_DEAT_Msk: u32 = 0x1F << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT: u32 = USART_CR1_DEAT_Msk;
pub const USART_CR1_DEAT_0: u32 = 0x01 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_1: u32 = 0x02 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_2: u32 = 0x04 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_3: u32 = 0x08 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_4: u32 = 0x10 << USART_CR1_DEAT_Pos;
pub const USART_CR1_RTOIE_Pos: u32 = 26;
pub const USART_CR1_RTOIE_Msk: u32 = 0x1 << USART_CR1_RTOIE_Pos;
pub const USART_CR1_RTOIE: u32 = USART_CR1_RTOIE_Msk;
pub const USART_CR1_EOBIE_Pos: u32 = 27;
pub const USART_CR1_EOBIE_Msk: u32 = 0x1 << USART_CR1_EOBIE_Pos;
pub const USART_CR1_EOBIE: u32 = USART_CR1_EOBIE_Msk;
pub const USART_CR1_M1: u32 = 0x10000000;
pub const USART_CR1_M_0: u32 = USART_CR1_M0;
pub const USART_CR1_M_1: u32 = USART_CR1_M1;
pub const USART_CR2_ADDM7_Pos: u32 = 4;
pub const USART_CR2_ADDM7_Msk: u32 = 0x1 << USART_CR2_ADDM7_Pos;
pub const USART_CR2_ADDM7: u32 = USART_CR2_ADDM7_Msk;
pub const USART_CR2_LBDL_Pos: u32 = 5;
pub const USART_CR2_LBDL_Msk: u32 = 0x1 << USART_CR2_LBDL_Pos;
pub const USART_CR2_LBDL: u32 = USART_CR2_LBDL_Msk;
pub const USART_CR2_LBDIE_Pos: u32 = 6;
pub const USART_CR2_LBDIE_Msk: u32 = 0x1 << USART_CR2_LBDIE_Pos;
pub const USART_CR2_LBDIE: u32 = USART_CR2_LBDIE_Msk;
pub const USART_CR2_LBCL_Pos: u32 = 8;
pub const USART_CR2_LBCL_Msk: u32 = 0x1 << USART_CR2_LBCL_Pos;
pub const USART_CR2_LBCL: u32 = USART_CR2_LBCL_Msk;
pub const USART_CR2_CPHA_Pos: u32 = 9;
pub const USART_CR2_CPHA_Msk: u32 = 0x1 << USART_CR2_CPHA_Pos;
pub const USART_CR2_CPHA: u32 = USART_CR2_CPHA_Msk;
pub const USART_CR2_CPOL_Pos: u32 = 10;
pub const USART_CR2_CPOL_Msk: u32 = 0x1 << USART_CR2_CPOL_Pos;
pub const USART_CR2_CPOL: u32 = USART_CR2_CPOL_Msk;
pub const USART_CR2_CLKEN_Pos: u32 = 11;
pub const USART_CR2_CLKEN_Msk: u32 = 0x1 << USART_CR2_CLKEN_Pos;
pub const USART_CR2_CLKEN: u32 = USART_CR2_CLKEN_Msk;
pub const USART_CR2_STOP_Pos: u32 = 12;
pub const USART_CR2_STOP_Msk: u32 = 0x3 << USART_CR2_STOP_Pos;
pub const USART_CR2_STOP: u32 = USART_CR2_STOP_Msk;
pub const USART_CR2_STOP_0: u32 = 0x1 << USART_CR2_STOP_Pos;
pub const USART_CR2_STOP_1: u32 = 0x2 << USART_CR2_STOP_Pos;
pub const USART_CR2_LINEN_Pos: u32 = 14;
pub const USART_CR2_LINEN_Msk: u32 = 0x1 << USART_CR2_LINEN_Pos;
pub const USART_CR2_LINEN: u32 = USART_CR2_LINEN_Msk;
pub const USART_CR2_SWAP_Pos: u32 = 15;
pub const USART_CR2_SWAP_Msk: u32 = 0x1 << USART_CR2_SWAP_Pos;
pub const USART_CR2_SWAP: u32 = USART_CR2_SWAP_Msk;
pub const USART_CR2_RXINV_Pos: u32 = 16;
pub const USART_CR2_RXINV_Msk: u32 = 0x1 << USART_CR2_RXINV_Pos;
pub const USART_CR2_RXINV: u32 = USART_CR2_RXINV_Msk;
pub const USART_CR2_TXINV_Pos: u32 = 17;
pub const USART_CR2_TXINV_Msk: u32 = 0x1 << USART_CR2_TXINV_Pos;
pub const USART_CR2_TXINV: u32 = USART_CR2_TXINV_Msk;
pub const USART_CR2_DATAINV_Pos: u32 = 18;
pub const USART_CR2_DATAINV_Msk: u32 = 0x1 << USART_CR2_DATAINV_Pos;
pub const USART_CR2_DATAINV: u32 = USART_CR2_DATAINV_Msk;
pub const USART_CR2_MSBFIRST_Pos: u32 = 19;
pub const USART_CR2_MSBFIRST_Msk: u32 = 0x1 << USART_CR2_MSBFIRST_Pos;
pub const USART_CR2_MSBFIRST: u32 = USART_CR2_MSBFIRST_Msk;
pub const USART_CR2_ABREN_Pos: u32 = 20;
pub const USART_CR2_ABREN_Msk: u32 = 0x1 << USART_CR2_ABREN_Pos;
pub const USART_CR2_ABREN: u32 = USART_CR2_ABREN_Msk;
pub const USART_CR2_ABRMODE_Pos: u32 = 21;
pub const USART_CR2_ABRMODE_Msk: u32 = 0x3 << USART_CR2_ABRMODE_Pos;
pub const USART_CR2_ABRMODE: u32 = USART_CR2_ABRMODE_Msk;
pub const USART_CR2_ABRMODE_0: u32 = 0x1 << USART_CR2_ABRMODE_Pos;
pub const USART_CR2_ABRMODE_1: u32 = 0x2 << USART_CR2_ABRMODE_Pos;
pub const USART_CR2_RTOEN_Pos: u32 = 23;
pub const USART_CR2_RTOEN_Msk: u32 = 0x1 << USART_CR2_RTOEN_Pos;
pub const USART_CR2_RTOEN: u32 = USART_CR2_RTOEN_Msk;
pub const USART_CR2_ADD_Pos: u32 = 24;
pub const USART_CR2_ADD_Msk: u32 = 0xFF << USART_CR2_ADD_Pos;
pub const USART_CR2_ADD: u32 = USART_CR2_ADD_Msk;
pub const USART_CR3_EIE_Pos: u32 = 0;
pub const USART_CR3_EIE_Msk: u32 = 0x1 << USART_CR3_EIE_Pos;
pub const USART_CR3_EIE: u32 = USART_CR3_EIE_Msk;
pub const USART_CR3_IREN_Pos: u32 = 1;
pub const USART_CR3_IREN_Msk: u32 = 0x1 << USART_CR3_IREN_Pos;
pub const USART_CR3_IREN: u32 = USART_CR3_IREN_Msk;
pub const USART_CR3_IRLP_Pos: u32 = 2;
pub const USART_CR3_IRLP_Msk: u32 = 0x1 << USART_CR3_IRLP_Pos;
pub const USART_CR3_IRLP: u32 = USART_CR3_IRLP_Msk;
pub const USART_CR3_HDSEL_Pos: u32 = 3;
pub const USART_CR3_HDSEL_Msk: u32 = 0x1 << USART_CR3_HDSEL_Pos;
pub const USART_CR3_HDSEL: u32 = USART_CR3_HDSEL_Msk;
pub const USART_CR3_NACK_Pos: u32 = 4;
pub const USART_CR3_NACK_Msk: u32 = 0x1 << USART_CR3_NACK_Pos;
pub const USART_CR3_NACK: u32 = USART_CR3_NACK_Msk;
pub const USART_CR3_SCEN_Pos: u32 = 5;
pub const USART_CR3_SCEN_Msk: u32 = 0x1 << USART_CR3_SCEN_Pos;
pub const USART_CR3_SCEN: u32 = USART_CR3_SCEN_Msk;
pub const USART_CR3_DMAR_Pos: u32 = 6;
pub const USART_CR3_DMAR_Msk: u32 = 0x1 << USART_CR3_DMAR_Pos;
pub const USART_CR3_DMAR: u32 = USART_CR3_DMAR_Msk;
pub const USART_CR3_DMAT_Pos: u32 = 7;
pub const USART_CR3_DMAT_Msk: u32 = 0x1 << USART_CR3_DMAT_Pos;
pub const USART_CR3_DMAT: u32 = USART_CR3_DMAT_Msk;
pub const USART_CR3_RTSE_Pos: u32 = 8;
pub const USART_CR3_RTSE_Msk: u32 = 0x1 << USART_CR3_RTSE_Pos;
pub const USART_CR3_RTSE: u32 = USART_CR3_RTSE_Msk;
pub const USART_CR3_CTSE_Pos: u32 = 9;
pub const USART_CR3_CTSE_Msk: u32 = 0x1 << USART_CR3_CTSE_Pos;
pub const USART_CR3_CTSE: u32 = USART_CR3_CTSE_Msk;
pub const USART_CR3_CTSIE_Pos: u32 = 10;
pub const USART_CR3_CTSIE_Msk: u32 = 0x1 << USART_CR3_CTSIE_Pos;
pub const USART_CR3_CTSIE: u32 = USART_CR3_CTSIE_Msk;
pub const USART_CR3_ONEBIT_Pos: u32 = 11;
pub const USART_CR3_ONEBIT_Msk: u32 = 0x1 << USART_CR3_ONEBIT_Pos;
pub const USART_CR3_ONEBIT: u32 = USART_CR3_ONEBIT_Msk;
pub const USART_CR3_OVRDIS_Pos: u32 = 12;
pub const USART_CR3_OVRDIS_Msk: u32 = 0x1 << USART_CR3_OVRDIS_Pos;
pub const USART_CR3_OVRDIS: u32 = USART_CR3_OVRDIS_Msk;
pub const USART_CR3_DDRE_Pos: u32 = 13;
pub const USART_CR3_DDRE_Msk: u32 = 0x1 << USART_CR3_DDRE_Pos;
pub const USART_CR3_DDRE: u32 = USART_CR3_DDRE_Msk;
pub const USART_CR3_DEM_Pos: u32 = 14;
pub const USART_CR3_DEM_Msk: u32 = 0x1 << USART_CR3_DEM_Pos;
pub const USART_CR3_DEM: u32 = USART_CR3_DEM_Msk;
pub const USART_CR3_DEP_Pos: u32 = 15;
pub const USART_CR3_DEP_Msk: u32 = 0x1 << USART_CR3_DEP_Pos;
pub const USART_CR3_DEP: u32 = USART_CR3_DEP_Msk;
pub const USART_CR3_SCARCNT_Pos: u32 = 17;
pub const USART_CR3_SCARCNT_Msk: u32 = 0x7 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_SCARCNT: u32 = USART_CR3_SCARCNT_Msk;
pub const USART_CR3_SCARCNT_0: u32 = 0x1 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_SCARCNT_1: u32 = 0x2 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_SCARCNT_2: u32 = 0x4 << USART_CR3_SCARCNT_Pos;
pub const USART_BRR_DIV_FRACTION_Pos: u32 = 0;
pub const USART_BRR_DIV_FRACTION_Msk: u32 = 0xF << USART_BRR_DIV_FRACTION_Pos;
pub const USART_BRR_DIV_FRACTION: u32 = USART_BRR_DIV_FRACTION_Msk;
pub const USART_BRR_DIV_MANTISSA_Pos: u32 = 4;
pub const USART_BRR_DIV_MANTISSA_Msk: u32 = 0xFFF << USART_BRR_DIV_MANTISSA_Pos;
pub const USART_BRR_DIV_MANTISSA: u32 = USART_BRR_DIV_MANTISSA_Msk;
pub const USART_GTPR_PSC_Pos: u32 = 0;
pub const USART_GTPR_PSC_Msk: u32 = 0xFF << USART_GTPR_PSC_Pos;
pub const USART_GTPR_PSC: u32 = USART_GTPR_PSC_Msk;
pub const USART_GTPR_GT_Pos: u32 = 8;
pub const USART_GTPR_GT_Msk: u32 = 0xFF << USART_GTPR_GT_Pos;
pub const USART_GTPR_GT: u32 = USART_GTPR_GT_Msk;
pub const USART_RTOR_RTO_Pos: u32 = 0;
pub const USART_RTOR_RTO_Msk: u32 = 0xFFFFFF << USART_RTOR_RTO_Pos;
pub const USART_RTOR_RTO: u32 = USART_RTOR_RTO_Msk;
pub const USART_RTOR_BLEN_Pos: u32 = 24;
pub const USART_RTOR_BLEN_Msk: u32 = 0xFF << USART_RTOR_BLEN_Pos;
pub const USART_RTOR_BLEN: u32 = USART_RTOR_BLEN_Msk;
pub const USART_RQR_ABRRQ_Pos: u32 = 0;
pub const USART_RQR_ABRRQ_Msk: u32 = 0x1 << USART_RQR_ABRRQ_Pos;
pub const USART_RQR_ABRRQ: u32 = USART_RQR_ABRRQ_Msk;
pub const USART_RQR_SBKRQ_Pos: u32 = 1;
pub const USART_RQR_SBKRQ_Msk: u32 = 0x1 << USART_RQR_SBKRQ_Pos;
pub const USART_RQR_SBKRQ: u32 = USART_RQR_SBKRQ_Msk;
pub const USART_RQR_MMRQ_Pos: u32 = 2;
pub const USART_RQR_MMRQ_Msk: u32 = 0x1 << USART_RQR_MMRQ_Pos;
pub const USART_RQR_MMRQ: u32 = USART_RQR_MMRQ_Msk;
pub const USART_RQR_RXFRQ_Pos: u32 = 3;
pub const USART_RQR_RXFRQ_Msk: u32 = 0x1 << USART_RQR_RXFRQ_Pos;
pub const USART_RQR_RXFRQ: u32 = USART_RQR_RXFRQ_Msk;
pub const USART_RQR_TXFRQ_Pos: u32 = 4;
pub const USART_RQR_TXFRQ_Msk: u32 = 0x1 << USART_RQR_TXFRQ_Pos;
pub const USART_RQR_TXFRQ: u32 = USART_RQR_TXFRQ_Msk;
pub const USART_ISR_PE_Pos: u32 = 0;
pub const USART_ISR_PE_Msk: u32 = 0x1 << USART_ISR_PE_Pos;
pub const USART_ISR_PE: u32 = USART_ISR_PE_Msk;
pub const USART_ISR_FE_Pos: u32 = 1;
pub const USART_ISR_FE_Msk: u32 = 0x1 << USART_ISR_FE_Pos;
pub const USART_ISR_FE: u32 = USART_ISR_FE_Msk;
pub const USART_ISR_NE_Pos: u32 = 2;
pub const USART_ISR_NE_Msk: u32 = 0x1 << USART_ISR_NE_Pos;
pub const USART_ISR_NE: u32 = USART_ISR_NE_Msk;
pub const USART_ISR_ORE_Pos: u32 = 3;
pub const USART_ISR_ORE_Msk: u32 = 0x1 << USART_ISR_ORE_Pos;
pub const USART_ISR_ORE: u32 = USART_ISR_ORE_Msk;
pub const USART_ISR_IDLE_Pos: u32 = 4;
pub const USART_ISR_IDLE_Msk: u32 = 0x1 << USART_ISR_IDLE_Pos;
pub const USART_ISR_IDLE: u32 = USART_ISR_IDLE_Msk;
pub const USART_ISR_RXNE_Pos: u32 = 5;
pub const USART_ISR_RXNE_Msk: u32 = 0x1 << USART_ISR_RXNE_Pos;
pub const USART_ISR_RXNE: u32 = USART_ISR_RXNE_Msk;
pub const USART_ISR_TC_Pos: u32 = 6;
pub const USART_ISR_TC_Msk: u32 = 0x1 << USART_ISR_TC_Pos;
pub const USART_ISR_TC: u32 = USART_ISR_TC_Msk;
pub const USART_ISR_TXE_Pos: u32 = 7;
pub const USART_ISR_TXE_Msk: u32 = 0x1 << USART_ISR_TXE_Pos;
pub const USART_ISR_TXE: u32 = USART_ISR_TXE_Msk;
pub const USART_ISR_LBDF_Pos: u32 = 8;
pub const USART_ISR_LBDF_Msk: u32 = 0x1 << USART_ISR_LBDF_Pos;
pub const USART_ISR_LBDF: u32 = USART_ISR_LBDF_Msk;
pub const USART_ISR_CTSIF_Pos: u32 = 9;
pub const USART_ISR_CTSIF_Msk: u32 = 0x1 << USART_ISR_CTSIF_Pos;
pub const USART_ISR_CTSIF: u32 = USART_ISR_CTSIF_Msk;
pub const USART_ISR_CTS_Pos: u32 = 10;
pub const USART_ISR_CTS_Msk: u32 = 0x1 << USART_ISR_CTS_Pos;
pub const USART_ISR_CTS: u32 = USART_ISR_CTS_Msk;
pub const USART_ISR_RTOF_Pos: u32 = 11;
pub const USART_ISR_RTOF_Msk: u32 = 0x1 << USART_ISR_RTOF_Pos;
pub const USART_ISR_RTOF: u32 = USART_ISR_RTOF_Msk;
pub const USART_ISR_EOBF_Pos: u32 = 12;
pub const USART_ISR_EOBF_Msk: u32 = 0x1 << USART_ISR_EOBF_Pos;
pub const USART_ISR_EOBF: u32 = USART_ISR_EOBF_Msk;
pub const USART_ISR_ABRE_Pos: u32 = 14;
pub const USART_ISR_ABRE_Msk: u32 = 0x1 << USART_ISR_ABRE_Pos;
pub const USART_ISR_ABRE: u32 = USART_ISR_ABRE_Msk;
pub const USART_ISR_ABRF_Pos: u32 = 15;
pub const USART_ISR_ABRF_Msk: u32 = 0x1 << USART_ISR_ABRF_Pos;
pub const USART_ISR_ABRF: u32 = USART_ISR_ABRF_Msk;
pub const USART_ISR_BUSY_Pos: u32 = 16;
pub const USART_ISR_BUSY_Msk: u32 = 0x1 << USART_ISR_BUSY_Pos;
pub const USART_ISR_BUSY: u32 = USART_ISR_BUSY_Msk;
pub const USART_ISR_CMF_Pos: u32 = 17;
pub const USART_ISR_CMF_Msk: u32 = 0x1 << USART_ISR_CMF_Pos;
pub const USART_ISR_CMF: u32 = USART_ISR_CMF_Msk;
pub const USART_ISR_SBKF_Pos: u32 = 18;
pub const USART_ISR_SBKF_Msk: u32 = 0x1 << USART_ISR_SBKF_Pos;
pub const USART_ISR_SBKF: u32 = USART_ISR_SBKF_Msk;
pub const USART_ISR_RWU_Pos: u32 = 19;
pub const USART_ISR_RWU_Msk: u32 = 0x1 << USART_ISR_RWU_Pos;
pub const USART_ISR_RWU: u32 = USART_ISR_RWU_Msk;
pub const USART_ISR_TEACK_Pos: u32 = 21;
pub const USART_ISR_TEACK_Msk: u32 = 0x1 << USART_ISR_TEACK_Pos;
pub const USART_ISR_TEACK: u32 = USART_ISR_TEACK_Msk;
pub const USART_ISR_LBD: u32 = USART_ISR_LBDF;
pub const USART_ICR_PECF_Pos: u32 = 0;
pub const USART_ICR_PECF_Msk: u32 = 0x1 << USART_ICR_PECF_Pos;
pub const USART_ICR_PECF: u32 = USART_ICR_PECF_Msk;
pub const USART_ICR_FECF_Pos: u32 = 1;
pub const USART_ICR_FECF_Msk: u32 = 0x1 << USART_ICR_FECF_Pos;
pub const USART_ICR_FECF: u32 = USART_ICR_FECF_Msk;
pub const USART_ICR_NCF_Pos: u32 = 2;
pub const USART_ICR_NCF_Msk: u32 = 0x1 << USART_ICR_NCF_Pos;
pub const USART_ICR_NCF: u32 = USART_ICR_NCF_Msk;
pub const USART_ICR_ORECF_Pos: u32 = 3;
pub const USART_ICR_ORECF_Msk: u32 = 0x1 << USART_ICR_ORECF_Pos;
pub const USART_ICR_ORECF: u32 = USART_ICR_ORECF_Msk;
pub const USART_ICR_IDLECF_Pos: u32 = 4;
pub const USART_ICR_IDLECF_Msk: u32 = 0x1 << USART_ICR_IDLECF_Pos;
pub const USART_ICR_IDLECF: u32 = USART_ICR_IDLECF_Msk;
pub const USART_ICR_TCCF_Pos: u32 = 6;
pub const USART_ICR_TCCF_Msk: u32 = 0x1 << USART_ICR_TCCF_Pos;
pub const USART_ICR_TCCF: u32 = USART_ICR_TCCF_Msk;
pub const USART_ICR_LBDCF_Pos: u32 = 8;
pub const USART_ICR_LBDCF_Msk: u32 = 0x1 << USART_ICR_LBDCF_Pos;
pub const USART_ICR_LBDCF: u32 = USART_ICR_LBDCF_Msk;
pub const USART_ICR_CTSCF_Pos: u32 = 9;
pub const USART_ICR_CTSCF_Msk: u32 = 0x1 << USART_ICR_CTSCF_Pos;
pub const USART_ICR_CTSCF: u32 = USART_ICR_CTSCF_Msk;
pub const USART_ICR_RTOCF_Pos: u32 = 11;
pub const USART_ICR_RTOCF_Msk: u32 = 0x1 << USART_ICR_RTOCF_Pos;
pub const USART_ICR_RTOCF: u32 = USART_ICR_RTOCF_Msk;
pub const USART_ICR_EOBCF_Pos: u32 = 12;
pub const USART_ICR_EOBCF_Msk: u32 = 0x1 << USART_ICR_EOBCF_Pos;
pub const USART_ICR_EOBCF: u32 = USART_ICR_EOBCF_Msk;
pub const USART_ICR_CMCF_Pos: u32 = 17;
pub const USART_ICR_CMCF_Msk: u32 = 0x1 << USART_ICR_CMCF_Pos;
pub const USART_ICR_CMCF: u32 = USART_ICR_CMCF_Msk;
pub const USART_RDR_RDR_Pos: u32 = 0;
pub const USART_RDR_RDR_Msk: u32 = 0x1FF << USART_RDR_RDR_Pos;
pub const USART_RDR_RDR: u32 = USART_RDR_RDR_Msk;
pub const USART_TDR_TDR_Pos: u32 = 0;
pub const USART_TDR_TDR_Msk: u32 = 0x1FF << USART_TDR_TDR_Pos;
pub const USART_TDR_TDR: u32 = USART_TDR_TDR_Msk;
pub const WWDG_CR_T_Pos: u32 = 0;
pub const WWDG_CR_T_Msk: u32 = 0x7F << WWDG_CR_T_Pos;
pub const WWDG_CR_T: u32 = WWDG_CR_T_Msk;
pub const WWDG_CR_T_0: u32 = 0x01 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_1: u32 = 0x02 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_2: u32 = 0x04 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_3: u32 = 0x08 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_4: u32 = 0x10 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_5: u32 = 0x20 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_6: u32 = 0x40 << WWDG_CR_T_Pos;
pub const WWDG_CR_T0: u32 = WWDG_CR_T_0;
pub const WWDG_CR_T1: u32 = WWDG_CR_T_1;
pub const WWDG_CR_T2: u32 = WWDG_CR_T_2;
pub const WWDG_CR_T3: u32 = WWDG_CR_T_3;
pub const WWDG_CR_T4: u32 = WWDG_CR_T_4;
pub const WWDG_CR_T5: u32 = WWDG_CR_T_5;
pub const WWDG_CR_T6: u32 = WWDG_CR_T_6;
pub const WWDG_CR_WDGA_Pos: u32 = 7;
pub const WWDG_CR_WDGA_Msk: u32 = 0x1 << WWDG_CR_WDGA_Pos;
pub const WWDG_CR_WDGA: u32 = WWDG_CR_WDGA_Msk;
pub const WWDG_CFR_W_Pos: u32 = 0;
pub const WWDG_CFR_W_Msk: u32 = 0x7F << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W: u32 = WWDG_CFR_W_Msk;
pub const WWDG_CFR_W_0: u32 = 0x01 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_1: u32 = 0x02 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_2: u32 = 0x04 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_3: u32 = 0x08 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_4: u32 = 0x10 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_5: u32 = 0x20 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_6: u32 = 0x40 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W0: u32 = WWDG_CFR_W_0;
pub const WWDG_CFR_W1: u32 = WWDG_CFR_W_1;
pub const WWDG_CFR_W2: u32 = WWDG_CFR_W_2;
pub const WWDG_CFR_W3: u32 = WWDG_CFR_W_3;
pub const WWDG_CFR_W4: u32 = WWDG_CFR_W_4;
pub const WWDG_CFR_W5: u32 = WWDG_CFR_W_5;
pub const WWDG_CFR_W6: u32 = WWDG_CFR_W_6;
pub const WWDG_CFR_WDGTB_Pos: u32 = 7;
pub const WWDG_CFR_WDGTB_Msk: u32 = 0x3 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_WDGTB: u32 = WWDG_CFR_WDGTB_Msk;
pub const WWDG_CFR_WDGTB_0: u32 = 0x1 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_WDGTB_1: u32 = 0x2 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_WDGTB0: u32 = WWDG_CFR_WDGTB_0;
pub const WWDG_CFR_WDGTB1: u32 = WWDG_CFR_WDGTB_1;
pub const WWDG_CFR_EWI_Pos: u32 = 9;
pub const WWDG_CFR_EWI_Msk: u32 = 0x1 << WWDG_CFR_EWI_Pos;
pub const WWDG_CFR_EWI: u32 = WWDG_CFR_EWI_Msk;
pub const WWDG_SR_EWIF_Pos: u32 = 0;
pub const WWDG_SR_EWIF_Msk: u32 = 0x1 << WWDG_SR_EWIF_Pos;
pub const WWDG_SR_EWIF: u32 = WWDG_SR_EWIF_Msk;
pub const DBGMCU_IDCODE_DEV_ID_Pos: u32 = 0;
pub const DBGMCU_IDCODE_DEV_ID_Msk: u32 = 0xFFF << DBGMCU_IDCODE_DEV_ID_Pos;
pub const DBGMCU_IDCODE_DEV_ID: u32 = DBGMCU_IDCODE_DEV_ID_Msk;
pub const DBGMCU_IDCODE_REV_ID_Pos: u32 = 16;
pub const DBGMCU_IDCODE_REV_ID_Msk: u32 = 0xFFFF << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID: u32 = DBGMCU_IDCODE_REV_ID_Msk;
pub const DBGMCU_CR_DBG_SLEEP_Pos: u32 = 0;
pub const DBGMCU_CR_DBG_SLEEP_Msk: u32 = 0x1 << DBGMCU_CR_DBG_SLEEP_Pos;
pub const DBGMCU_CR_DBG_SLEEP: u32 = DBGMCU_CR_DBG_SLEEP_Msk;
pub const DBGMCU_CR_DBG_STOP_Pos: u32 = 1;
pub const DBGMCU_CR_DBG_STOP_Msk: u32 = 0x1 << DBGMCU_CR_DBG_STOP_Pos;
pub const DBGMCU_CR_DBG_STOP: u32 = DBGMCU_CR_DBG_STOP_Msk;
pub const DBGMCU_CR_DBG_STANDBY_Pos: u32 = 2;
pub const DBGMCU_CR_DBG_STANDBY_Msk: u32 = 0x1 << DBGMCU_CR_DBG_STANDBY_Pos;
pub const DBGMCU_CR_DBG_STANDBY: u32 = DBGMCU_CR_DBG_STANDBY_Msk;
pub const DBGMCU_CR_TRACE_IOEN_Pos: u32 = 5;
pub const DBGMCU_CR_TRACE_IOEN_Msk: u32 = 0x1 << DBGMCU_CR_TRACE_IOEN_Pos;
pub const DBGMCU_CR_TRACE_IOEN: u32 = DBGMCU_CR_TRACE_IOEN_Msk;
pub const DBGMCU_CR_TRACE_MODE_Pos: u32 = 6;
pub const DBGMCU_CR_TRACE_MODE_Msk: u32 = 0x3 << DBGMCU_CR_TRACE_MODE_Pos;
pub const DBGMCU_CR_TRACE_MODE: u32 = DBGMCU_CR_TRACE_MODE_Msk;
pub const DBGMCU_CR_TRACE_MODE_0: u32 = 0x1 << DBGMCU_CR_TRACE_MODE_Pos;
pub const DBGMCU_CR_TRACE_MODE_1: u32 = 0x2 << DBGMCU_CR_TRACE_MODE_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM2_STOP_Pos: u32 = 0;
pub const DBGMCU_APB1_FZ_DBG_TIM2_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_TIM2_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM2_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM2_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_TIM3_STOP_Pos: u32 = 1;
pub const DBGMCU_APB1_FZ_DBG_TIM3_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_TIM3_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM3_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM3_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_TIM4_STOP_Pos: u32 = 2;
pub const DBGMCU_APB1_FZ_DBG_TIM4_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_TIM4_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM4_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM4_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_TIM5_STOP_Pos: u32 = 3;
pub const DBGMCU_APB1_FZ_DBG_TIM5_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_TIM5_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM5_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM5_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_TIM6_STOP_Pos: u32 = 4;
pub const DBGMCU_APB1_FZ_DBG_TIM6_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_TIM6_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM6_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM6_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_TIM7_STOP_Pos: u32 = 5;
pub const DBGMCU_APB1_FZ_DBG_TIM7_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_TIM7_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM7_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM7_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_TIM12_STOP_Pos: u32 = 6;
pub const DBGMCU_APB1_FZ_DBG_TIM12_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_TIM12_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM12_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM12_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_TIM13_STOP_Pos: u32 = 7;
pub const DBGMCU_APB1_FZ_DBG_TIM13_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_TIM13_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM13_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM13_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_TIM14_STOP_Pos: u32 = 8;
pub const DBGMCU_APB1_FZ_DBG_TIM14_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_TIM14_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM14_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM14_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_LPTIM1_STOP_Pos: u32 = 9;
pub const DBGMCU_APB1_FZ_DBG_LPTIM1_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_LPTIM1_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_LPTIM1_STOP: u32 = DBGMCU_APB1_FZ_DBG_LPTIM1_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_RTC_STOP_Pos: u32 = 10;
pub const DBGMCU_APB1_FZ_DBG_RTC_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_RTC_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_RTC_STOP: u32 = DBGMCU_APB1_FZ_DBG_RTC_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_WWDG_STOP_Pos: u32 = 11;
pub const DBGMCU_APB1_FZ_DBG_WWDG_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_WWDG_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_WWDG_STOP: u32 = DBGMCU_APB1_FZ_DBG_WWDG_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_IWDG_STOP_Pos: u32 = 12;
pub const DBGMCU_APB1_FZ_DBG_IWDG_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_IWDG_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_IWDG_STOP: u32 = DBGMCU_APB1_FZ_DBG_IWDG_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT_Pos: u32 = 21;
pub const DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT_Msk: u32 =
    0x1 << DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT_Pos;
pub const DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT: u32 = DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT_Msk;
pub const DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT_Pos: u32 = 22;
pub const DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT_Msk: u32 =
    0x1 << DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT_Pos;
pub const DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT: u32 = DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT_Msk;
pub const DBGMCU_APB1_FZ_DBG_I2C3_SMBUS_TIMEOUT_Pos: u32 = 23;
pub const DBGMCU_APB1_FZ_DBG_I2C3_SMBUS_TIMEOUT_Msk: u32 =
    0x1 << DBGMCU_APB1_FZ_DBG_I2C3_SMBUS_TIMEOUT_Pos;
pub const DBGMCU_APB1_FZ_DBG_I2C3_SMBUS_TIMEOUT: u32 = DBGMCU_APB1_FZ_DBG_I2C3_SMBUS_TIMEOUT_Msk;
pub const DBGMCU_APB1_FZ_DBG_CAN1_STOP_Pos: u32 = 25;
pub const DBGMCU_APB1_FZ_DBG_CAN1_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_CAN1_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_CAN1_STOP: u32 = DBGMCU_APB1_FZ_DBG_CAN1_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_CAN2_STOP_Pos: u32 = 26;
pub const DBGMCU_APB1_FZ_DBG_CAN2_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_CAN2_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_CAN2_STOP: u32 = DBGMCU_APB1_FZ_DBG_CAN2_STOP_Msk;
pub const DBGMCU_APB2_FZ_DBG_TIM1_STOP_Pos: u32 = 0;
pub const DBGMCU_APB2_FZ_DBG_TIM1_STOP_Msk: u32 = 0x1 << DBGMCU_APB2_FZ_DBG_TIM1_STOP_Pos;
pub const DBGMCU_APB2_FZ_DBG_TIM1_STOP: u32 = DBGMCU_APB2_FZ_DBG_TIM1_STOP_Msk;
pub const DBGMCU_APB2_FZ_DBG_TIM8_STOP_Pos: u32 = 1;
pub const DBGMCU_APB2_FZ_DBG_TIM8_STOP_Msk: u32 = 0x1 << DBGMCU_APB2_FZ_DBG_TIM8_STOP_Pos;
pub const DBGMCU_APB2_FZ_DBG_TIM8_STOP: u32 = DBGMCU_APB2_FZ_DBG_TIM8_STOP_Msk;
pub const DBGMCU_APB2_FZ_DBG_TIM9_STOP_Pos: u32 = 16;
pub const DBGMCU_APB2_FZ_DBG_TIM9_STOP_Msk: u32 = 0x1 << DBGMCU_APB2_FZ_DBG_TIM9_STOP_Pos;
pub const DBGMCU_APB2_FZ_DBG_TIM9_STOP: u32 = DBGMCU_APB2_FZ_DBG_TIM9_STOP_Msk;
pub const DBGMCU_APB2_FZ_DBG_TIM10_STOP_Pos: u32 = 17;
pub const DBGMCU_APB2_FZ_DBG_TIM10_STOP_Msk: u32 = 0x1 << DBGMCU_APB2_FZ_DBG_TIM10_STOP_Pos;
pub const DBGMCU_APB2_FZ_DBG_TIM10_STOP: u32 = DBGMCU_APB2_FZ_DBG_TIM10_STOP_Msk;
pub const DBGMCU_APB2_FZ_DBG_TIM11_STOP_Pos: u32 = 18;
pub const DBGMCU_APB2_FZ_DBG_TIM11_STOP_Msk: u32 = 0x1 << DBGMCU_APB2_FZ_DBG_TIM11_STOP_Pos;
pub const DBGMCU_APB2_FZ_DBG_TIM11_STOP: u32 = DBGMCU_APB2_FZ_DBG_TIM11_STOP_Msk;
pub const ETH_MACCR_CSTF_Pos: u32 = 25;
pub const ETH_MACCR_CSTF_Msk: u32 = 0x1 << ETH_MACCR_CSTF_Pos;
pub const ETH_MACCR_CSTF: u32 = ETH_MACCR_CSTF_Msk;
pub const ETH_MACCR_WD_Pos: u32 = 23;
pub const ETH_MACCR_WD_Msk: u32 = 0x1 << ETH_MACCR_WD_Pos;
pub const ETH_MACCR_WD: u32 = ETH_MACCR_WD_Msk;
pub const ETH_MACCR_JD_Pos: u32 = 22;
pub const ETH_MACCR_JD_Msk: u32 = 0x1 << ETH_MACCR_JD_Pos;
pub const ETH_MACCR_JD: u32 = ETH_MACCR_JD_Msk;
pub const ETH_MACCR_IFG_Pos: u32 = 17;
pub const ETH_MACCR_IFG_Msk: u32 = 0x7 << ETH_MACCR_IFG_Pos;
pub const ETH_MACCR_IFG: u32 = ETH_MACCR_IFG_Msk;
pub const ETH_MACCR_IFG_96Bit: u32 = 0x00000000;
pub const ETH_MACCR_IFG_88Bit: u32 = 0x00020000;
pub const ETH_MACCR_IFG_80Bit: u32 = 0x00040000;
pub const ETH_MACCR_IFG_72Bit: u32 = 0x00060000;
pub const ETH_MACCR_IFG_64Bit: u32 = 0x00080000;
pub const ETH_MACCR_IFG_56Bit: u32 = 0x000A0000;
pub const ETH_MACCR_IFG_48Bit: u32 = 0x000C0000;
pub const ETH_MACCR_IFG_40Bit: u32 = 0x000E0000;
pub const ETH_MACCR_CSD_Pos: u32 = 16;
pub const ETH_MACCR_CSD_Msk: u32 = 0x1 << ETH_MACCR_CSD_Pos;
pub const ETH_MACCR_CSD: u32 = ETH_MACCR_CSD_Msk;
pub const ETH_MACCR_FES_Pos: u32 = 14;
pub const ETH_MACCR_FES_Msk: u32 = 0x1 << ETH_MACCR_FES_Pos;
pub const ETH_MACCR_FES: u32 = ETH_MACCR_FES_Msk;
pub const ETH_MACCR_ROD_Pos: u32 = 13;
pub const ETH_MACCR_ROD_Msk: u32 = 0x1 << ETH_MACCR_ROD_Pos;
pub const ETH_MACCR_ROD: u32 = ETH_MACCR_ROD_Msk;
pub const ETH_MACCR_LM_Pos: u32 = 12;
pub const ETH_MACCR_LM_Msk: u32 = 0x1 << ETH_MACCR_LM_Pos;
pub const ETH_MACCR_LM: u32 = ETH_MACCR_LM_Msk;
pub const ETH_MACCR_DM_Pos: u32 = 11;
pub const ETH_MACCR_DM_Msk: u32 = 0x1 << ETH_MACCR_DM_Pos;
pub const ETH_MACCR_DM: u32 = ETH_MACCR_DM_Msk;
pub const ETH_MACCR_IPCO_Pos: u32 = 10;
pub const ETH_MACCR_IPCO_Msk: u32 = 0x1 << ETH_MACCR_IPCO_Pos;
pub const ETH_MACCR_IPCO: u32 = ETH_MACCR_IPCO_Msk;
pub const ETH_MACCR_RD_Pos: u32 = 9;
pub const ETH_MACCR_RD_Msk: u32 = 0x1 << ETH_MACCR_RD_Pos;
pub const ETH_MACCR_RD: u32 = ETH_MACCR_RD_Msk;
pub const ETH_MACCR_APCS_Pos: u32 = 7;
pub const ETH_MACCR_APCS_Msk: u32 = 0x1 << ETH_MACCR_APCS_Pos;
pub const ETH_MACCR_APCS: u32 = ETH_MACCR_APCS_Msk;
pub const ETH_MACCR_BL_Pos: u32 = 5;
pub const ETH_MACCR_BL_Msk: u32 = 0x3 << ETH_MACCR_BL_Pos;
pub const ETH_MACCR_BL: u32 = ETH_MACCR_BL_Msk;
pub const ETH_MACCR_BL_10: u32 = 0x00000000;
pub const ETH_MACCR_BL_8: u32 = 0x00000020;
pub const ETH_MACCR_BL_4: u32 = 0x00000040;
pub const ETH_MACCR_BL_1: u32 = 0x00000060;
pub const ETH_MACCR_DC_Pos: u32 = 4;
pub const ETH_MACCR_DC_Msk: u32 = 0x1 << ETH_MACCR_DC_Pos;
pub const ETH_MACCR_DC: u32 = ETH_MACCR_DC_Msk;
pub const ETH_MACCR_TE_Pos: u32 = 3;
pub const ETH_MACCR_TE_Msk: u32 = 0x1 << ETH_MACCR_TE_Pos;
pub const ETH_MACCR_TE: u32 = ETH_MACCR_TE_Msk;
pub const ETH_MACCR_RE_Pos: u32 = 2;
pub const ETH_MACCR_RE_Msk: u32 = 0x1 << ETH_MACCR_RE_Pos;
pub const ETH_MACCR_RE: u32 = ETH_MACCR_RE_Msk;
pub const ETH_MACFFR_RA_Pos: u32 = 31;
pub const ETH_MACFFR_RA_Msk: u32 = 0x1 << ETH_MACFFR_RA_Pos;
pub const ETH_MACFFR_RA: u32 = ETH_MACFFR_RA_Msk;
pub const ETH_MACFFR_HPF_Pos: u32 = 10;
pub const ETH_MACFFR_HPF_Msk: u32 = 0x1 << ETH_MACFFR_HPF_Pos;
pub const ETH_MACFFR_HPF: u32 = ETH_MACFFR_HPF_Msk;
pub const ETH_MACFFR_SAF_Pos: u32 = 9;
pub const ETH_MACFFR_SAF_Msk: u32 = 0x1 << ETH_MACFFR_SAF_Pos;
pub const ETH_MACFFR_SAF: u32 = ETH_MACFFR_SAF_Msk;
pub const ETH_MACFFR_SAIF_Pos: u32 = 8;
pub const ETH_MACFFR_SAIF_Msk: u32 = 0x1 << ETH_MACFFR_SAIF_Pos;
pub const ETH_MACFFR_SAIF: u32 = ETH_MACFFR_SAIF_Msk;
pub const ETH_MACFFR_PCF_Pos: u32 = 6;
pub const ETH_MACFFR_PCF_Msk: u32 = 0x3 << ETH_MACFFR_PCF_Pos;
pub const ETH_MACFFR_PCF: u32 = ETH_MACFFR_PCF_Msk;
pub const ETH_MACFFR_PCF_BlockAll_Pos: u32 = 6;
pub const ETH_MACFFR_PCF_BlockAll_Msk: u32 = 0x1 << ETH_MACFFR_PCF_BlockAll_Pos;
pub const ETH_MACFFR_PCF_BlockAll: u32 = ETH_MACFFR_PCF_BlockAll_Msk;
pub const ETH_MACFFR_PCF_ForwardAll_Pos: u32 = 7;
pub const ETH_MACFFR_PCF_ForwardAll_Msk: u32 = 0x1 << ETH_MACFFR_PCF_ForwardAll_Pos;
pub const ETH_MACFFR_PCF_ForwardAll: u32 = ETH_MACFFR_PCF_ForwardAll_Msk;
pub const ETH_MACFFR_PCF_ForwardPassedAddrFilter_Pos: u32 = 6;
pub const ETH_MACFFR_PCF_ForwardPassedAddrFilter_Msk: u32 =
    0x3 << ETH_MACFFR_PCF_ForwardPassedAddrFilter_Pos;
pub const ETH_MACFFR_PCF_ForwardPassedAddrFilter: u32 = ETH_MACFFR_PCF_ForwardPassedAddrFilter_Msk;
pub const ETH_MACFFR_BFD_Pos: u32 = 5;
pub const ETH_MACFFR_BFD_Msk: u32 = 0x1 << ETH_MACFFR_BFD_Pos;
pub const ETH_MACFFR_BFD: u32 = ETH_MACFFR_BFD_Msk;
pub const ETH_MACFFR_PAM_Pos: u32 = 4;
pub const ETH_MACFFR_PAM_Msk: u32 = 0x1 << ETH_MACFFR_PAM_Pos;
pub const ETH_MACFFR_PAM: u32 = ETH_MACFFR_PAM_Msk;
pub const ETH_MACFFR_DAIF_Pos: u32 = 3;
pub const ETH_MACFFR_DAIF_Msk: u32 = 0x1 << ETH_MACFFR_DAIF_Pos;
pub const ETH_MACFFR_DAIF: u32 = ETH_MACFFR_DAIF_Msk;
pub const ETH_MACFFR_HM_Pos: u32 = 2;
pub const ETH_MACFFR_HM_Msk: u32 = 0x1 << ETH_MACFFR_HM_Pos;
pub const ETH_MACFFR_HM: u32 = ETH_MACFFR_HM_Msk;
pub const ETH_MACFFR_HU_Pos: u32 = 1;
pub const ETH_MACFFR_HU_Msk: u32 = 0x1 << ETH_MACFFR_HU_Pos;
pub const ETH_MACFFR_HU: u32 = ETH_MACFFR_HU_Msk;
pub const ETH_MACFFR_PM_Pos: u32 = 0;
pub const ETH_MACFFR_PM_Msk: u32 = 0x1 << ETH_MACFFR_PM_Pos;
pub const ETH_MACFFR_PM: u32 = ETH_MACFFR_PM_Msk;
pub const ETH_MACHTHR_HTH_Pos: u32 = 0;
pub const ETH_MACHTHR_HTH_Msk: u32 = 0xFFFFFFFF << ETH_MACHTHR_HTH_Pos;
pub const ETH_MACHTHR_HTH: u32 = ETH_MACHTHR_HTH_Msk;
pub const ETH_MACHTLR_HTL_Pos: u32 = 0;
pub const ETH_MACHTLR_HTL_Msk: u32 = 0xFFFFFFFF << ETH_MACHTLR_HTL_Pos;
pub const ETH_MACHTLR_HTL: u32 = ETH_MACHTLR_HTL_Msk;
pub const ETH_MACMIIAR_PA_Pos: u32 = 11;
pub const ETH_MACMIIAR_PA_Msk: u32 = 0x1F << ETH_MACMIIAR_PA_Pos;
pub const ETH_MACMIIAR_PA: u32 = ETH_MACMIIAR_PA_Msk;
pub const ETH_MACMIIAR_MR_Pos: u32 = 6;
pub const ETH_MACMIIAR_MR_Msk: u32 = 0x1F << ETH_MACMIIAR_MR_Pos;
pub const ETH_MACMIIAR_MR: u32 = ETH_MACMIIAR_MR_Msk;
pub const ETH_MACMIIAR_CR_Pos: u32 = 2;
pub const ETH_MACMIIAR_CR_Msk: u32 = 0x7 << ETH_MACMIIAR_CR_Pos;
pub const ETH_MACMIIAR_CR: u32 = ETH_MACMIIAR_CR_Msk;
pub const ETH_MACMIIAR_CR_Div42: u32 = 0x00000000;
pub const ETH_MACMIIAR_CR_Div62_Pos: u32 = 2;
pub const ETH_MACMIIAR_CR_Div62_Msk: u32 = 0x1 << ETH_MACMIIAR_CR_Div62_Pos;
pub const ETH_MACMIIAR_CR_Div62: u32 = ETH_MACMIIAR_CR_Div62_Msk;
pub const ETH_MACMIIAR_CR_Div16_Pos: u32 = 3;
pub const ETH_MACMIIAR_CR_Div16_Msk: u32 = 0x1 << ETH_MACMIIAR_CR_Div16_Pos;
pub const ETH_MACMIIAR_CR_Div16: u32 = ETH_MACMIIAR_CR_Div16_Msk;
pub const ETH_MACMIIAR_CR_Div26_Pos: u32 = 2;
pub const ETH_MACMIIAR_CR_Div26_Msk: u32 = 0x3 << ETH_MACMIIAR_CR_Div26_Pos;
pub const ETH_MACMIIAR_CR_Div26: u32 = ETH_MACMIIAR_CR_Div26_Msk;
pub const ETH_MACMIIAR_CR_Div102_Pos: u32 = 4;
pub const ETH_MACMIIAR_CR_Div102_Msk: u32 = 0x1 << ETH_MACMIIAR_CR_Div102_Pos;
pub const ETH_MACMIIAR_CR_Div102: u32 = ETH_MACMIIAR_CR_Div102_Msk;
pub const ETH_MACMIIAR_MW_Pos: u32 = 1;
pub const ETH_MACMIIAR_MW_Msk: u32 = 0x1 << ETH_MACMIIAR_MW_Pos;
pub const ETH_MACMIIAR_MW: u32 = ETH_MACMIIAR_MW_Msk;
pub const ETH_MACMIIAR_MB_Pos: u32 = 0;
pub const ETH_MACMIIAR_MB_Msk: u32 = 0x1 << ETH_MACMIIAR_MB_Pos;
pub const ETH_MACMIIAR_MB: u32 = ETH_MACMIIAR_MB_Msk;
pub const ETH_MACMIIDR_MD_Pos: u32 = 0;
pub const ETH_MACMIIDR_MD_Msk: u32 = 0xFFFF << ETH_MACMIIDR_MD_Pos;
pub const ETH_MACMIIDR_MD: u32 = ETH_MACMIIDR_MD_Msk;
pub const ETH_MACFCR_PT_Pos: u32 = 16;
pub const ETH_MACFCR_PT_Msk: u32 = 0xFFFF << ETH_MACFCR_PT_Pos;
pub const ETH_MACFCR_PT: u32 = ETH_MACFCR_PT_Msk;
pub const ETH_MACFCR_ZQPD_Pos: u32 = 7;
pub const ETH_MACFCR_ZQPD_Msk: u32 = 0x1 << ETH_MACFCR_ZQPD_Pos;
pub const ETH_MACFCR_ZQPD: u32 = ETH_MACFCR_ZQPD_Msk;
pub const ETH_MACFCR_PLT_Pos: u32 = 4;
pub const ETH_MACFCR_PLT_Msk: u32 = 0x3 << ETH_MACFCR_PLT_Pos;
pub const ETH_MACFCR_PLT: u32 = ETH_MACFCR_PLT_Msk;
pub const ETH_MACFCR_PLT_Minus4: u32 = 0x00000000;
pub const ETH_MACFCR_PLT_Minus28_Pos: u32 = 4;
pub const ETH_MACFCR_PLT_Minus28_Msk: u32 = 0x1 << ETH_MACFCR_PLT_Minus28_Pos;
pub const ETH_MACFCR_PLT_Minus28: u32 = ETH_MACFCR_PLT_Minus28_Msk;
pub const ETH_MACFCR_PLT_Minus144_Pos: u32 = 5;
pub const ETH_MACFCR_PLT_Minus144_Msk: u32 = 0x1 << ETH_MACFCR_PLT_Minus144_Pos;
pub const ETH_MACFCR_PLT_Minus144: u32 = ETH_MACFCR_PLT_Minus144_Msk;
pub const ETH_MACFCR_PLT_Minus256_Pos: u32 = 4;
pub const ETH_MACFCR_PLT_Minus256_Msk: u32 = 0x3 << ETH_MACFCR_PLT_Minus256_Pos;
pub const ETH_MACFCR_PLT_Minus256: u32 = ETH_MACFCR_PLT_Minus256_Msk;
pub const ETH_MACFCR_UPFD_Pos: u32 = 3;
pub const ETH_MACFCR_UPFD_Msk: u32 = 0x1 << ETH_MACFCR_UPFD_Pos;
pub const ETH_MACFCR_UPFD: u32 = ETH_MACFCR_UPFD_Msk;
pub const ETH_MACFCR_RFCE_Pos: u32 = 2;
pub const ETH_MACFCR_RFCE_Msk: u32 = 0x1 << ETH_MACFCR_RFCE_Pos;
pub const ETH_MACFCR_RFCE: u32 = ETH_MACFCR_RFCE_Msk;
pub const ETH_MACFCR_TFCE_Pos: u32 = 1;
pub const ETH_MACFCR_TFCE_Msk: u32 = 0x1 << ETH_MACFCR_TFCE_Pos;
pub const ETH_MACFCR_TFCE: u32 = ETH_MACFCR_TFCE_Msk;
pub const ETH_MACFCR_FCBBPA_Pos: u32 = 0;
pub const ETH_MACFCR_FCBBPA_Msk: u32 = 0x1 << ETH_MACFCR_FCBBPA_Pos;
pub const ETH_MACFCR_FCBBPA: u32 = ETH_MACFCR_FCBBPA_Msk;
pub const ETH_MACVLANTR_VLANTC_Pos: u32 = 16;
pub const ETH_MACVLANTR_VLANTC_Msk: u32 = 0x1 << ETH_MACVLANTR_VLANTC_Pos;
pub const ETH_MACVLANTR_VLANTC: u32 = ETH_MACVLANTR_VLANTC_Msk;
pub const ETH_MACVLANTR_VLANTI_Pos: u32 = 0;
pub const ETH_MACVLANTR_VLANTI_Msk: u32 = 0xFFFF << ETH_MACVLANTR_VLANTI_Pos;
pub const ETH_MACVLANTR_VLANTI: u32 = ETH_MACVLANTR_VLANTI_Msk;
pub const ETH_MACRWUFFR_D_Pos: u32 = 0;
pub const ETH_MACRWUFFR_D_Msk: u32 = 0xFFFFFFFF << ETH_MACRWUFFR_D_Pos;
pub const ETH_MACRWUFFR_D: u32 = ETH_MACRWUFFR_D_Msk;
pub const ETH_MACPMTCSR_WFFRPR_Pos: u32 = 31;
pub const ETH_MACPMTCSR_WFFRPR_Msk: u32 = 0x1 << ETH_MACPMTCSR_WFFRPR_Pos;
pub const ETH_MACPMTCSR_WFFRPR: u32 = ETH_MACPMTCSR_WFFRPR_Msk;
pub const ETH_MACPMTCSR_GU_Pos: u32 = 9;
pub const ETH_MACPMTCSR_GU_Msk: u32 = 0x1 << ETH_MACPMTCSR_GU_Pos;
pub const ETH_MACPMTCSR_GU: u32 = ETH_MACPMTCSR_GU_Msk;
pub const ETH_MACPMTCSR_WFR_Pos: u32 = 6;
pub const ETH_MACPMTCSR_WFR_Msk: u32 = 0x1 << ETH_MACPMTCSR_WFR_Pos;
pub const ETH_MACPMTCSR_WFR: u32 = ETH_MACPMTCSR_WFR_Msk;
pub const ETH_MACPMTCSR_MPR_Pos: u32 = 5;
pub const ETH_MACPMTCSR_MPR_Msk: u32 = 0x1 << ETH_MACPMTCSR_MPR_Pos;
pub const ETH_MACPMTCSR_MPR: u32 = ETH_MACPMTCSR_MPR_Msk;
pub const ETH_MACPMTCSR_WFE_Pos: u32 = 2;
pub const ETH_MACPMTCSR_WFE_Msk: u32 = 0x1 << ETH_MACPMTCSR_WFE_Pos;
pub const ETH_MACPMTCSR_WFE: u32 = ETH_MACPMTCSR_WFE_Msk;
pub const ETH_MACPMTCSR_MPE_Pos: u32 = 1;
pub const ETH_MACPMTCSR_MPE_Msk: u32 = 0x1 << ETH_MACPMTCSR_MPE_Pos;
pub const ETH_MACPMTCSR_MPE: u32 = ETH_MACPMTCSR_MPE_Msk;
pub const ETH_MACPMTCSR_PD_Pos: u32 = 0;
pub const ETH_MACPMTCSR_PD_Msk: u32 = 0x1 << ETH_MACPMTCSR_PD_Pos;
pub const ETH_MACPMTCSR_PD: u32 = ETH_MACPMTCSR_PD_Msk;
pub const ETH_MACDBGR_TFF_Pos: u32 = 25;
pub const ETH_MACDBGR_TFF_Msk: u32 = 0x1 << ETH_MACDBGR_TFF_Pos;
pub const ETH_MACDBGR_TFF: u32 = ETH_MACDBGR_TFF_Msk;
pub const ETH_MACDBGR_TFNE_Pos: u32 = 24;
pub const ETH_MACDBGR_TFNE_Msk: u32 = 0x1 << ETH_MACDBGR_TFNE_Pos;
pub const ETH_MACDBGR_TFNE: u32 = ETH_MACDBGR_TFNE_Msk;
pub const ETH_MACDBGR_TPWA_Pos: u32 = 22;
pub const ETH_MACDBGR_TPWA_Msk: u32 = 0x1 << ETH_MACDBGR_TPWA_Pos;
pub const ETH_MACDBGR_TPWA: u32 = ETH_MACDBGR_TPWA_Msk;
pub const ETH_MACDBGR_TFRS_Pos: u32 = 20;
pub const ETH_MACDBGR_TFRS_Msk: u32 = 0x3 << ETH_MACDBGR_TFRS_Pos;
pub const ETH_MACDBGR_TFRS: u32 = ETH_MACDBGR_TFRS_Msk;
pub const ETH_MACDBGR_TFRS_WRITING_Pos: u32 = 20;
pub const ETH_MACDBGR_TFRS_WRITING_Msk: u32 = 0x3 << ETH_MACDBGR_TFRS_WRITING_Pos;
pub const ETH_MACDBGR_TFRS_WRITING: u32 = ETH_MACDBGR_TFRS_WRITING_Msk;
pub const ETH_MACDBGR_TFRS_WAITING_Pos: u32 = 21;
pub const ETH_MACDBGR_TFRS_WAITING_Msk: u32 = 0x1 << ETH_MACDBGR_TFRS_WAITING_Pos;
pub const ETH_MACDBGR_TFRS_WAITING: u32 = ETH_MACDBGR_TFRS_WAITING_Msk;
pub const ETH_MACDBGR_TFRS_READ_Pos: u32 = 20;
pub const ETH_MACDBGR_TFRS_READ_Msk: u32 = 0x1 << ETH_MACDBGR_TFRS_READ_Pos;
pub const ETH_MACDBGR_TFRS_READ: u32 = ETH_MACDBGR_TFRS_READ_Msk;
pub const ETH_MACDBGR_TFRS_IDLE: u32 = 0x00000000;
pub const ETH_MACDBGR_MTP_Pos: u32 = 19;
pub const ETH_MACDBGR_MTP_Msk: u32 = 0x1 << ETH_MACDBGR_MTP_Pos;
pub const ETH_MACDBGR_MTP: u32 = ETH_MACDBGR_MTP_Msk;
pub const ETH_MACDBGR_MTFCS_Pos: u32 = 17;
pub const ETH_MACDBGR_MTFCS_Msk: u32 = 0x3 << ETH_MACDBGR_MTFCS_Pos;
pub const ETH_MACDBGR_MTFCS: u32 = ETH_MACDBGR_MTFCS_Msk;
pub const ETH_MACDBGR_MTFCS_TRANSFERRING_Pos: u32 = 17;
pub const ETH_MACDBGR_MTFCS_TRANSFERRING_Msk: u32 = 0x3 << ETH_MACDBGR_MTFCS_TRANSFERRING_Pos;
pub const ETH_MACDBGR_MTFCS_TRANSFERRING: u32 = ETH_MACDBGR_MTFCS_TRANSFERRING_Msk;
pub const ETH_MACDBGR_MTFCS_GENERATINGPCF_Pos: u32 = 18;
pub const ETH_MACDBGR_MTFCS_GENERATINGPCF_Msk: u32 = 0x1 << ETH_MACDBGR_MTFCS_GENERATINGPCF_Pos;
pub const ETH_MACDBGR_MTFCS_GENERATINGPCF: u32 = ETH_MACDBGR_MTFCS_GENERATINGPCF_Msk;
pub const ETH_MACDBGR_MTFCS_WAITING_Pos: u32 = 17;
pub const ETH_MACDBGR_MTFCS_WAITING_Msk: u32 = 0x1 << ETH_MACDBGR_MTFCS_WAITING_Pos;
pub const ETH_MACDBGR_MTFCS_WAITING: u32 = ETH_MACDBGR_MTFCS_WAITING_Msk;
pub const ETH_MACDBGR_MTFCS_IDLE: u32 = 0x00000000;
pub const ETH_MACDBGR_MMTEA_Pos: u32 = 16;
pub const ETH_MACDBGR_MMTEA_Msk: u32 = 0x1 << ETH_MACDBGR_MMTEA_Pos;
pub const ETH_MACDBGR_MMTEA: u32 = ETH_MACDBGR_MMTEA_Msk;
pub const ETH_MACDBGR_RFFL_Pos: u32 = 8;
pub const ETH_MACDBGR_RFFL_Msk: u32 = 0x3 << ETH_MACDBGR_RFFL_Pos;
pub const ETH_MACDBGR_RFFL: u32 = ETH_MACDBGR_RFFL_Msk;
pub const ETH_MACDBGR_RFFL_FULL_Pos: u32 = 8;
pub const ETH_MACDBGR_RFFL_FULL_Msk: u32 = 0x3 << ETH_MACDBGR_RFFL_FULL_Pos;
pub const ETH_MACDBGR_RFFL_FULL: u32 = ETH_MACDBGR_RFFL_FULL_Msk;
pub const ETH_MACDBGR_RFFL_ABOVEFCT_Pos: u32 = 9;
pub const ETH_MACDBGR_RFFL_ABOVEFCT_Msk: u32 = 0x1 << ETH_MACDBGR_RFFL_ABOVEFCT_Pos;
pub const ETH_MACDBGR_RFFL_ABOVEFCT: u32 = ETH_MACDBGR_RFFL_ABOVEFCT_Msk;
pub const ETH_MACDBGR_RFFL_BELOWFCT_Pos: u32 = 8;
pub const ETH_MACDBGR_RFFL_BELOWFCT_Msk: u32 = 0x1 << ETH_MACDBGR_RFFL_BELOWFCT_Pos;
pub const ETH_MACDBGR_RFFL_BELOWFCT: u32 = ETH_MACDBGR_RFFL_BELOWFCT_Msk;
pub const ETH_MACDBGR_RFFL_EMPTY: u32 = 0x00000000;
pub const ETH_MACDBGR_RFRCS_Pos: u32 = 5;
pub const ETH_MACDBGR_RFRCS_Msk: u32 = 0x3 << ETH_MACDBGR_RFRCS_Pos;
pub const ETH_MACDBGR_RFRCS: u32 = ETH_MACDBGR_RFRCS_Msk;
pub const ETH_MACDBGR_RFRCS_FLUSHING_Pos: u32 = 5;
pub const ETH_MACDBGR_RFRCS_FLUSHING_Msk: u32 = 0x3 << ETH_MACDBGR_RFRCS_FLUSHING_Pos;
pub const ETH_MACDBGR_RFRCS_FLUSHING: u32 = ETH_MACDBGR_RFRCS_FLUSHING_Msk;
pub const ETH_MACDBGR_RFRCS_STATUSREADING_Pos: u32 = 6;
pub const ETH_MACDBGR_RFRCS_STATUSREADING_Msk: u32 = 0x1 << ETH_MACDBGR_RFRCS_STATUSREADING_Pos;
pub const ETH_MACDBGR_RFRCS_STATUSREADING: u32 = ETH_MACDBGR_RFRCS_STATUSREADING_Msk;
pub const ETH_MACDBGR_RFRCS_DATAREADING_Pos: u32 = 5;
pub const ETH_MACDBGR_RFRCS_DATAREADING_Msk: u32 = 0x1 << ETH_MACDBGR_RFRCS_DATAREADING_Pos;
pub const ETH_MACDBGR_RFRCS_DATAREADING: u32 = ETH_MACDBGR_RFRCS_DATAREADING_Msk;
pub const ETH_MACDBGR_RFRCS_IDLE: u32 = 0x00000000;
pub const ETH_MACDBGR_RFWRA_Pos: u32 = 4;
pub const ETH_MACDBGR_RFWRA_Msk: u32 = 0x1 << ETH_MACDBGR_RFWRA_Pos;
pub const ETH_MACDBGR_RFWRA: u32 = ETH_MACDBGR_RFWRA_Msk;
pub const ETH_MACDBGR_MSFRWCS_Pos: u32 = 1;
pub const ETH_MACDBGR_MSFRWCS_Msk: u32 = 0x3 << ETH_MACDBGR_MSFRWCS_Pos;
pub const ETH_MACDBGR_MSFRWCS: u32 = ETH_MACDBGR_MSFRWCS_Msk;
pub const ETH_MACDBGR_MSFRWCS_1: u32 = 0x2 << ETH_MACDBGR_MSFRWCS_Pos;
pub const ETH_MACDBGR_MSFRWCS_0: u32 = 0x1 << ETH_MACDBGR_MSFRWCS_Pos;
pub const ETH_MACDBGR_MMRPEA_Pos: u32 = 0;
pub const ETH_MACDBGR_MMRPEA_Msk: u32 = 0x1 << ETH_MACDBGR_MMRPEA_Pos;
pub const ETH_MACDBGR_MMRPEA: u32 = ETH_MACDBGR_MMRPEA_Msk;
pub const ETH_MACSR_TSTS_Pos: u32 = 9;
pub const ETH_MACSR_TSTS_Msk: u32 = 0x1 << ETH_MACSR_TSTS_Pos;
pub const ETH_MACSR_TSTS: u32 = ETH_MACSR_TSTS_Msk;
pub const ETH_MACSR_MMCTS_Pos: u32 = 6;
pub const ETH_MACSR_MMCTS_Msk: u32 = 0x1 << ETH_MACSR_MMCTS_Pos;
pub const ETH_MACSR_MMCTS: u32 = ETH_MACSR_MMCTS_Msk;
pub const ETH_MACSR_MMMCRS_Pos: u32 = 5;
pub const ETH_MACSR_MMMCRS_Msk: u32 = 0x1 << ETH_MACSR_MMMCRS_Pos;
pub const ETH_MACSR_MMMCRS: u32 = ETH_MACSR_MMMCRS_Msk;
pub const ETH_MACSR_MMCS_Pos: u32 = 4;
pub const ETH_MACSR_MMCS_Msk: u32 = 0x1 << ETH_MACSR_MMCS_Pos;
pub const ETH_MACSR_MMCS: u32 = ETH_MACSR_MMCS_Msk;
pub const ETH_MACSR_PMTS_Pos: u32 = 3;
pub const ETH_MACSR_PMTS_Msk: u32 = 0x1 << ETH_MACSR_PMTS_Pos;
pub const ETH_MACSR_PMTS: u32 = ETH_MACSR_PMTS_Msk;
pub const ETH_MACIMR_TSTIM_Pos: u32 = 9;
pub const ETH_MACIMR_TSTIM_Msk: u32 = 0x1 << ETH_MACIMR_TSTIM_Pos;
pub const ETH_MACIMR_TSTIM: u32 = ETH_MACIMR_TSTIM_Msk;
pub const ETH_MACIMR_PMTIM_Pos: u32 = 3;
pub const ETH_MACIMR_PMTIM_Msk: u32 = 0x1 << ETH_MACIMR_PMTIM_Pos;
pub const ETH_MACIMR_PMTIM: u32 = ETH_MACIMR_PMTIM_Msk;
pub const ETH_MACA0HR_MACA0H_Pos: u32 = 0;
pub const ETH_MACA0HR_MACA0H_Msk: u32 = 0xFFFF << ETH_MACA0HR_MACA0H_Pos;
pub const ETH_MACA0HR_MACA0H: u32 = ETH_MACA0HR_MACA0H_Msk;
pub const ETH_MACA0LR_MACA0L_Pos: u32 = 0;
pub const ETH_MACA0LR_MACA0L_Msk: u32 = 0xFFFFFFFF << ETH_MACA0LR_MACA0L_Pos;
pub const ETH_MACA0LR_MACA0L: u32 = ETH_MACA0LR_MACA0L_Msk;
pub const ETH_MACA1HR_AE_Pos: u32 = 31;
pub const ETH_MACA1HR_AE_Msk: u32 = 0x1 << ETH_MACA1HR_AE_Pos;
pub const ETH_MACA1HR_AE: u32 = ETH_MACA1HR_AE_Msk;
pub const ETH_MACA1HR_SA_Pos: u32 = 30;
pub const ETH_MACA1HR_SA_Msk: u32 = 0x1 << ETH_MACA1HR_SA_Pos;
pub const ETH_MACA1HR_SA: u32 = ETH_MACA1HR_SA_Msk;
pub const ETH_MACA1HR_MBC_Pos: u32 = 24;
pub const ETH_MACA1HR_MBC_Msk: u32 = 0x3F << ETH_MACA1HR_MBC_Pos;
pub const ETH_MACA1HR_MBC: u32 = ETH_MACA1HR_MBC_Msk;
pub const ETH_MACA1HR_MBC_HBits15_8: u32 = 0x20000000;
pub const ETH_MACA1HR_MBC_HBits7_0: u32 = 0x10000000;
pub const ETH_MACA1HR_MBC_LBits31_24: u32 = 0x08000000;
pub const ETH_MACA1HR_MBC_LBits23_16: u32 = 0x04000000;
pub const ETH_MACA1HR_MBC_LBits15_8: u32 = 0x02000000;
pub const ETH_MACA1HR_MBC_LBits7_0: u32 = 0x01000000;
pub const ETH_MACA1HR_MACA1H_Pos: u32 = 0;
pub const ETH_MACA1HR_MACA1H_Msk: u32 = 0xFFFF << ETH_MACA1HR_MACA1H_Pos;
pub const ETH_MACA1HR_MACA1H: u32 = ETH_MACA1HR_MACA1H_Msk;
pub const ETH_MACA1LR_MACA1L_Pos: u32 = 0;
pub const ETH_MACA1LR_MACA1L_Msk: u32 = 0xFFFFFFFF << ETH_MACA1LR_MACA1L_Pos;
pub const ETH_MACA1LR_MACA1L: u32 = ETH_MACA1LR_MACA1L_Msk;
pub const ETH_MACA2HR_AE_Pos: u32 = 31;
pub const ETH_MACA2HR_AE_Msk: u32 = 0x1 << ETH_MACA2HR_AE_Pos;
pub const ETH_MACA2HR_AE: u32 = ETH_MACA2HR_AE_Msk;
pub const ETH_MACA2HR_SA_Pos: u32 = 30;
pub const ETH_MACA2HR_SA_Msk: u32 = 0x1 << ETH_MACA2HR_SA_Pos;
pub const ETH_MACA2HR_SA: u32 = ETH_MACA2HR_SA_Msk;
pub const ETH_MACA2HR_MBC_Pos: u32 = 24;
pub const ETH_MACA2HR_MBC_Msk: u32 = 0x3F << ETH_MACA2HR_MBC_Pos;
pub const ETH_MACA2HR_MBC: u32 = ETH_MACA2HR_MBC_Msk;
pub const ETH_MACA2HR_MBC_HBits15_8: u32 = 0x20000000;
pub const ETH_MACA2HR_MBC_HBits7_0: u32 = 0x10000000;
pub const ETH_MACA2HR_MBC_LBits31_24: u32 = 0x08000000;
pub const ETH_MACA2HR_MBC_LBits23_16: u32 = 0x04000000;
pub const ETH_MACA2HR_MBC_LBits15_8: u32 = 0x02000000;
pub const ETH_MACA2HR_MBC_LBits7_0: u32 = 0x01000000;
pub const ETH_MACA2HR_MACA2H_Pos: u32 = 0;
pub const ETH_MACA2HR_MACA2H_Msk: u32 = 0xFFFF << ETH_MACA2HR_MACA2H_Pos;
pub const ETH_MACA2HR_MACA2H: u32 = ETH_MACA2HR_MACA2H_Msk;
pub const ETH_MACA2LR_MACA2L_Pos: u32 = 0;
pub const ETH_MACA2LR_MACA2L_Msk: u32 = 0xFFFFFFFF << ETH_MACA2LR_MACA2L_Pos;
pub const ETH_MACA2LR_MACA2L: u32 = ETH_MACA2LR_MACA2L_Msk;
pub const ETH_MACA3HR_AE_Pos: u32 = 31;
pub const ETH_MACA3HR_AE_Msk: u32 = 0x1 << ETH_MACA3HR_AE_Pos;
pub const ETH_MACA3HR_AE: u32 = ETH_MACA3HR_AE_Msk;
pub const ETH_MACA3HR_SA_Pos: u32 = 30;
pub const ETH_MACA3HR_SA_Msk: u32 = 0x1 << ETH_MACA3HR_SA_Pos;
pub const ETH_MACA3HR_SA: u32 = ETH_MACA3HR_SA_Msk;
pub const ETH_MACA3HR_MBC_Pos: u32 = 24;
pub const ETH_MACA3HR_MBC_Msk: u32 = 0x3F << ETH_MACA3HR_MBC_Pos;
pub const ETH_MACA3HR_MBC: u32 = ETH_MACA3HR_MBC_Msk;
pub const ETH_MACA3HR_MBC_HBits15_8: u32 = 0x20000000;
pub const ETH_MACA3HR_MBC_HBits7_0: u32 = 0x10000000;
pub const ETH_MACA3HR_MBC_LBits31_24: u32 = 0x08000000;
pub const ETH_MACA3HR_MBC_LBits23_16: u32 = 0x04000000;
pub const ETH_MACA3HR_MBC_LBits15_8: u32 = 0x02000000;
pub const ETH_MACA3HR_MBC_LBits7_0: u32 = 0x01000000;
pub const ETH_MACA3HR_MACA3H_Pos: u32 = 0;
pub const ETH_MACA3HR_MACA3H_Msk: u32 = 0xFFFF << ETH_MACA3HR_MACA3H_Pos;
pub const ETH_MACA3HR_MACA3H: u32 = ETH_MACA3HR_MACA3H_Msk;
pub const ETH_MACA3LR_MACA3L_Pos: u32 = 0;
pub const ETH_MACA3LR_MACA3L_Msk: u32 = 0xFFFFFFFF << ETH_MACA3LR_MACA3L_Pos;
pub const ETH_MACA3LR_MACA3L: u32 = ETH_MACA3LR_MACA3L_Msk;
pub const ETH_MMCCR_MCFHP_Pos: u32 = 5;
pub const ETH_MMCCR_MCFHP_Msk: u32 = 0x1 << ETH_MMCCR_MCFHP_Pos;
pub const ETH_MMCCR_MCFHP: u32 = ETH_MMCCR_MCFHP_Msk;
pub const ETH_MMCCR_MCP_Pos: u32 = 4;
pub const ETH_MMCCR_MCP_Msk: u32 = 0x1 << ETH_MMCCR_MCP_Pos;
pub const ETH_MMCCR_MCP: u32 = ETH_MMCCR_MCP_Msk;
pub const ETH_MMCCR_MCF_Pos: u32 = 3;
pub const ETH_MMCCR_MCF_Msk: u32 = 0x1 << ETH_MMCCR_MCF_Pos;
pub const ETH_MMCCR_MCF: u32 = ETH_MMCCR_MCF_Msk;
pub const ETH_MMCCR_ROR_Pos: u32 = 2;
pub const ETH_MMCCR_ROR_Msk: u32 = 0x1 << ETH_MMCCR_ROR_Pos;
pub const ETH_MMCCR_ROR: u32 = ETH_MMCCR_ROR_Msk;
pub const ETH_MMCCR_CSR_Pos: u32 = 1;
pub const ETH_MMCCR_CSR_Msk: u32 = 0x1 << ETH_MMCCR_CSR_Pos;
pub const ETH_MMCCR_CSR: u32 = ETH_MMCCR_CSR_Msk;
pub const ETH_MMCCR_CR_Pos: u32 = 0;
pub const ETH_MMCCR_CR_Msk: u32 = 0x1 << ETH_MMCCR_CR_Pos;
pub const ETH_MMCCR_CR: u32 = ETH_MMCCR_CR_Msk;
pub const ETH_MMCRIR_RGUFS_Pos: u32 = 17;
pub const ETH_MMCRIR_RGUFS_Msk: u32 = 0x1 << ETH_MMCRIR_RGUFS_Pos;
pub const ETH_MMCRIR_RGUFS: u32 = ETH_MMCRIR_RGUFS_Msk;
pub const ETH_MMCRIR_RFAES_Pos: u32 = 6;
pub const ETH_MMCRIR_RFAES_Msk: u32 = 0x1 << ETH_MMCRIR_RFAES_Pos;
pub const ETH_MMCRIR_RFAES: u32 = ETH_MMCRIR_RFAES_Msk;
pub const ETH_MMCRIR_RFCES_Pos: u32 = 5;
pub const ETH_MMCRIR_RFCES_Msk: u32 = 0x1 << ETH_MMCRIR_RFCES_Pos;
pub const ETH_MMCRIR_RFCES: u32 = ETH_MMCRIR_RFCES_Msk;
pub const ETH_MMCTIR_TGFS_Pos: u32 = 21;
pub const ETH_MMCTIR_TGFS_Msk: u32 = 0x1 << ETH_MMCTIR_TGFS_Pos;
pub const ETH_MMCTIR_TGFS: u32 = ETH_MMCTIR_TGFS_Msk;
pub const ETH_MMCTIR_TGFMSCS_Pos: u32 = 15;
pub const ETH_MMCTIR_TGFMSCS_Msk: u32 = 0x1 << ETH_MMCTIR_TGFMSCS_Pos;
pub const ETH_MMCTIR_TGFMSCS: u32 = ETH_MMCTIR_TGFMSCS_Msk;
pub const ETH_MMCTIR_TGFSCS_Pos: u32 = 14;
pub const ETH_MMCTIR_TGFSCS_Msk: u32 = 0x1 << ETH_MMCTIR_TGFSCS_Pos;
pub const ETH_MMCTIR_TGFSCS: u32 = ETH_MMCTIR_TGFSCS_Msk;
pub const ETH_MMCRIMR_RGUFM_Pos: u32 = 17;
pub const ETH_MMCRIMR_RGUFM_Msk: u32 = 0x1 << ETH_MMCRIMR_RGUFM_Pos;
pub const ETH_MMCRIMR_RGUFM: u32 = ETH_MMCRIMR_RGUFM_Msk;
pub const ETH_MMCRIMR_RFAEM_Pos: u32 = 6;
pub const ETH_MMCRIMR_RFAEM_Msk: u32 = 0x1 << ETH_MMCRIMR_RFAEM_Pos;
pub const ETH_MMCRIMR_RFAEM: u32 = ETH_MMCRIMR_RFAEM_Msk;
pub const ETH_MMCRIMR_RFCEM_Pos: u32 = 5;
pub const ETH_MMCRIMR_RFCEM_Msk: u32 = 0x1 << ETH_MMCRIMR_RFCEM_Pos;
pub const ETH_MMCRIMR_RFCEM: u32 = ETH_MMCRIMR_RFCEM_Msk;
pub const ETH_MMCTIMR_TGFM_Pos: u32 = 21;
pub const ETH_MMCTIMR_TGFM_Msk: u32 = 0x1 << ETH_MMCTIMR_TGFM_Pos;
pub const ETH_MMCTIMR_TGFM: u32 = ETH_MMCTIMR_TGFM_Msk;
pub const ETH_MMCTIMR_TGFMSCM_Pos: u32 = 15;
pub const ETH_MMCTIMR_TGFMSCM_Msk: u32 = 0x1 << ETH_MMCTIMR_TGFMSCM_Pos;
pub const ETH_MMCTIMR_TGFMSCM: u32 = ETH_MMCTIMR_TGFMSCM_Msk;
pub const ETH_MMCTIMR_TGFSCM_Pos: u32 = 14;
pub const ETH_MMCTIMR_TGFSCM_Msk: u32 = 0x1 << ETH_MMCTIMR_TGFSCM_Pos;
pub const ETH_MMCTIMR_TGFSCM: u32 = ETH_MMCTIMR_TGFSCM_Msk;
pub const ETH_MMCTGFSCCR_TGFSCC_Pos: u32 = 0;
pub const ETH_MMCTGFSCCR_TGFSCC_Msk: u32 = 0xFFFFFFFF << ETH_MMCTGFSCCR_TGFSCC_Pos;
pub const ETH_MMCTGFSCCR_TGFSCC: u32 = ETH_MMCTGFSCCR_TGFSCC_Msk;
pub const ETH_MMCTGFMSCCR_TGFMSCC_Pos: u32 = 0;
pub const ETH_MMCTGFMSCCR_TGFMSCC_Msk: u32 = 0xFFFFFFFF << ETH_MMCTGFMSCCR_TGFMSCC_Pos;
pub const ETH_MMCTGFMSCCR_TGFMSCC: u32 = ETH_MMCTGFMSCCR_TGFMSCC_Msk;
pub const ETH_MMCTGFCR_TGFC_Pos: u32 = 0;
pub const ETH_MMCTGFCR_TGFC_Msk: u32 = 0xFFFFFFFF << ETH_MMCTGFCR_TGFC_Pos;
pub const ETH_MMCTGFCR_TGFC: u32 = ETH_MMCTGFCR_TGFC_Msk;
pub const ETH_MMCRFCECR_RFCEC_Pos: u32 = 0;
pub const ETH_MMCRFCECR_RFCEC_Msk: u32 = 0xFFFFFFFF << ETH_MMCRFCECR_RFCEC_Pos;
pub const ETH_MMCRFCECR_RFCEC: u32 = ETH_MMCRFCECR_RFCEC_Msk;
pub const ETH_MMCRFAECR_RFAEC_Pos: u32 = 0;
pub const ETH_MMCRFAECR_RFAEC_Msk: u32 = 0xFFFFFFFF << ETH_MMCRFAECR_RFAEC_Pos;
pub const ETH_MMCRFAECR_RFAEC: u32 = ETH_MMCRFAECR_RFAEC_Msk;
pub const ETH_MMCRGUFCR_RGUFC_Pos: u32 = 0;
pub const ETH_MMCRGUFCR_RGUFC_Msk: u32 = 0xFFFFFFFF << ETH_MMCRGUFCR_RGUFC_Pos;
pub const ETH_MMCRGUFCR_RGUFC: u32 = ETH_MMCRGUFCR_RGUFC_Msk;
pub const ETH_PTPTSCR_TSPFFMAE_Pos: u32 = 18;
pub const ETH_PTPTSCR_TSPFFMAE_Msk: u32 = 0x1 << ETH_PTPTSCR_TSPFFMAE_Pos;
pub const ETH_PTPTSCR_TSPFFMAE: u32 = ETH_PTPTSCR_TSPFFMAE_Msk;
pub const ETH_PTPTSCR_TSCNT_Pos: u32 = 16;
pub const ETH_PTPTSCR_TSCNT_Msk: u32 = 0x3 << ETH_PTPTSCR_TSCNT_Pos;
pub const ETH_PTPTSCR_TSCNT: u32 = ETH_PTPTSCR_TSCNT_Msk;
pub const ETH_PTPTSCR_TSSMRME_Pos: u32 = 15;
pub const ETH_PTPTSCR_TSSMRME_Msk: u32 = 0x1 << ETH_PTPTSCR_TSSMRME_Pos;
pub const ETH_PTPTSCR_TSSMRME: u32 = ETH_PTPTSCR_TSSMRME_Msk;
pub const ETH_PTPTSCR_TSSEME_Pos: u32 = 14;
pub const ETH_PTPTSCR_TSSEME_Msk: u32 = 0x1 << ETH_PTPTSCR_TSSEME_Pos;
pub const ETH_PTPTSCR_TSSEME: u32 = ETH_PTPTSCR_TSSEME_Msk;
pub const ETH_PTPTSCR_TSSIPV4FE_Pos: u32 = 13;
pub const ETH_PTPTSCR_TSSIPV4FE_Msk: u32 = 0x1 << ETH_PTPTSCR_TSSIPV4FE_Pos;
pub const ETH_PTPTSCR_TSSIPV4FE: u32 = ETH_PTPTSCR_TSSIPV4FE_Msk;
pub const ETH_PTPTSCR_TSSIPV6FE_Pos: u32 = 12;
pub const ETH_PTPTSCR_TSSIPV6FE_Msk: u32 = 0x1 << ETH_PTPTSCR_TSSIPV6FE_Pos;
pub const ETH_PTPTSCR_TSSIPV6FE: u32 = ETH_PTPTSCR_TSSIPV6FE_Msk;
pub const ETH_PTPTSCR_TSSPTPOEFE_Pos: u32 = 11;
pub const ETH_PTPTSCR_TSSPTPOEFE_Msk: u32 = 0x1 << ETH_PTPTSCR_TSSPTPOEFE_Pos;
pub const ETH_PTPTSCR_TSSPTPOEFE: u32 = ETH_PTPTSCR_TSSPTPOEFE_Msk;
pub const ETH_PTPTSCR_TSPTPPSV2E_Pos: u32 = 10;
pub const ETH_PTPTSCR_TSPTPPSV2E_Msk: u32 = 0x1 << ETH_PTPTSCR_TSPTPPSV2E_Pos;
pub const ETH_PTPTSCR_TSPTPPSV2E: u32 = ETH_PTPTSCR_TSPTPPSV2E_Msk;
pub const ETH_PTPTSCR_TSSSR_Pos: u32 = 9;
pub const ETH_PTPTSCR_TSSSR_Msk: u32 = 0x1 << ETH_PTPTSCR_TSSSR_Pos;
pub const ETH_PTPTSCR_TSSSR: u32 = ETH_PTPTSCR_TSSSR_Msk;
pub const ETH_PTPTSCR_TSSARFE_Pos: u32 = 8;
pub const ETH_PTPTSCR_TSSARFE_Msk: u32 = 0x1 << ETH_PTPTSCR_TSSARFE_Pos;
pub const ETH_PTPTSCR_TSSARFE: u32 = ETH_PTPTSCR_TSSARFE_Msk;
pub const ETH_PTPTSCR_TSARU_Pos: u32 = 5;
pub const ETH_PTPTSCR_TSARU_Msk: u32 = 0x1 << ETH_PTPTSCR_TSARU_Pos;
pub const ETH_PTPTSCR_TSARU: u32 = ETH_PTPTSCR_TSARU_Msk;
pub const ETH_PTPTSCR_TSITE_Pos: u32 = 4;
pub const ETH_PTPTSCR_TSITE_Msk: u32 = 0x1 << ETH_PTPTSCR_TSITE_Pos;
pub const ETH_PTPTSCR_TSITE: u32 = ETH_PTPTSCR_TSITE_Msk;
pub const ETH_PTPTSCR_TSSTU_Pos: u32 = 3;
pub const ETH_PTPTSCR_TSSTU_Msk: u32 = 0x1 << ETH_PTPTSCR_TSSTU_Pos;
pub const ETH_PTPTSCR_TSSTU: u32 = ETH_PTPTSCR_TSSTU_Msk;
pub const ETH_PTPTSCR_TSSTI_Pos: u32 = 2;
pub const ETH_PTPTSCR_TSSTI_Msk: u32 = 0x1 << ETH_PTPTSCR_TSSTI_Pos;
pub const ETH_PTPTSCR_TSSTI: u32 = ETH_PTPTSCR_TSSTI_Msk;
pub const ETH_PTPTSCR_TSFCU_Pos: u32 = 1;
pub const ETH_PTPTSCR_TSFCU_Msk: u32 = 0x1 << ETH_PTPTSCR_TSFCU_Pos;
pub const ETH_PTPTSCR_TSFCU: u32 = ETH_PTPTSCR_TSFCU_Msk;
pub const ETH_PTPTSCR_TSE_Pos: u32 = 0;
pub const ETH_PTPTSCR_TSE_Msk: u32 = 0x1 << ETH_PTPTSCR_TSE_Pos;
pub const ETH_PTPTSCR_TSE: u32 = ETH_PTPTSCR_TSE_Msk;
pub const ETH_PTPSSIR_STSSI_Pos: u32 = 0;
pub const ETH_PTPSSIR_STSSI_Msk: u32 = 0xFF << ETH_PTPSSIR_STSSI_Pos;
pub const ETH_PTPSSIR_STSSI: u32 = ETH_PTPSSIR_STSSI_Msk;
pub const ETH_PTPTSHR_STS_Pos: u32 = 0;
pub const ETH_PTPTSHR_STS_Msk: u32 = 0xFFFFFFFF << ETH_PTPTSHR_STS_Pos;
pub const ETH_PTPTSHR_STS: u32 = ETH_PTPTSHR_STS_Msk;
pub const ETH_PTPTSLR_STPNS_Pos: u32 = 31;
pub const ETH_PTPTSLR_STPNS_Msk: u32 = 0x1 << ETH_PTPTSLR_STPNS_Pos;
pub const ETH_PTPTSLR_STPNS: u32 = ETH_PTPTSLR_STPNS_Msk;
pub const ETH_PTPTSLR_STSS_Pos: u32 = 0;
pub const ETH_PTPTSLR_STSS_Msk: u32 = 0x7FFFFFFF << ETH_PTPTSLR_STSS_Pos;
pub const ETH_PTPTSLR_STSS: u32 = ETH_PTPTSLR_STSS_Msk;
pub const ETH_PTPTSHUR_TSUS_Pos: u32 = 0;
pub const ETH_PTPTSHUR_TSUS_Msk: u32 = 0xFFFFFFFF << ETH_PTPTSHUR_TSUS_Pos;
pub const ETH_PTPTSHUR_TSUS: u32 = ETH_PTPTSHUR_TSUS_Msk;
pub const ETH_PTPTSLUR_TSUPNS_Pos: u32 = 31;
pub const ETH_PTPTSLUR_TSUPNS_Msk: u32 = 0x1 << ETH_PTPTSLUR_TSUPNS_Pos;
pub const ETH_PTPTSLUR_TSUPNS: u32 = ETH_PTPTSLUR_TSUPNS_Msk;
pub const ETH_PTPTSLUR_TSUSS_Pos: u32 = 0;
pub const ETH_PTPTSLUR_TSUSS_Msk: u32 = 0x7FFFFFFF << ETH_PTPTSLUR_TSUSS_Pos;
pub const ETH_PTPTSLUR_TSUSS: u32 = ETH_PTPTSLUR_TSUSS_Msk;
pub const ETH_PTPTSAR_TSA_Pos: u32 = 0;
pub const ETH_PTPTSAR_TSA_Msk: u32 = 0xFFFFFFFF << ETH_PTPTSAR_TSA_Pos;
pub const ETH_PTPTSAR_TSA: u32 = ETH_PTPTSAR_TSA_Msk;
pub const ETH_PTPTTHR_TTSH_Pos: u32 = 0;
pub const ETH_PTPTTHR_TTSH_Msk: u32 = 0xFFFFFFFF << ETH_PTPTTHR_TTSH_Pos;
pub const ETH_PTPTTHR_TTSH: u32 = ETH_PTPTTHR_TTSH_Msk;
pub const ETH_PTPTTLR_TTSL_Pos: u32 = 0;
pub const ETH_PTPTTLR_TTSL_Msk: u32 = 0xFFFFFFFF << ETH_PTPTTLR_TTSL_Pos;
pub const ETH_PTPTTLR_TTSL: u32 = ETH_PTPTTLR_TTSL_Msk;
pub const ETH_PTPTSSR_TSTTR_Pos: u32 = 5;
pub const ETH_PTPTSSR_TSTTR_Msk: u32 = 0x1 << ETH_PTPTSSR_TSTTR_Pos;
pub const ETH_PTPTSSR_TSTTR: u32 = ETH_PTPTSSR_TSTTR_Msk;
pub const ETH_PTPTSSR_TSSO_Pos: u32 = 4;
pub const ETH_PTPTSSR_TSSO_Msk: u32 = 0x1 << ETH_PTPTSSR_TSSO_Pos;
pub const ETH_PTPTSSR_TSSO: u32 = ETH_PTPTSSR_TSSO_Msk;
pub const ETH_PTPPPSCR_PPSFREQ_Pos: u32 = 0;
pub const ETH_PTPPPSCR_PPSFREQ_Msk: u32 = 0x0F << ETH_PTPPPSCR_PPSFREQ_Pos;
pub const ETH_PTPPPSCR_PPSFREQ: u32 = ETH_PTPPPSCR_PPSFREQ_Msk;
pub const ETH_DMABMR_MB_Pos: u32 = 26;
pub const ETH_DMABMR_MB_Msk: u32 = 0x1 << ETH_DMABMR_MB_Pos;
pub const ETH_DMABMR_MB: u32 = ETH_DMABMR_MB_Msk;
pub const ETH_DMABMR_AAB_Pos: u32 = 25;
pub const ETH_DMABMR_AAB_Msk: u32 = 0x1 << ETH_DMABMR_AAB_Pos;
pub const ETH_DMABMR_AAB: u32 = ETH_DMABMR_AAB_Msk;
pub const ETH_DMABMR_FPM_Pos: u32 = 24;
pub const ETH_DMABMR_FPM_Msk: u32 = 0x1 << ETH_DMABMR_FPM_Pos;
pub const ETH_DMABMR_FPM: u32 = ETH_DMABMR_FPM_Msk;
pub const ETH_DMABMR_USP_Pos: u32 = 23;
pub const ETH_DMABMR_USP_Msk: u32 = 0x1 << ETH_DMABMR_USP_Pos;
pub const ETH_DMABMR_USP: u32 = ETH_DMABMR_USP_Msk;
pub const ETH_DMABMR_RDP_Pos: u32 = 17;
pub const ETH_DMABMR_RDP_Msk: u32 = 0x3F << ETH_DMABMR_RDP_Pos;
pub const ETH_DMABMR_RDP: u32 = ETH_DMABMR_RDP_Msk;
pub const ETH_DMABMR_RDP_1Beat: u32 = 0x00020000;
pub const ETH_DMABMR_RDP_2Beat: u32 = 0x00040000;
pub const ETH_DMABMR_RDP_4Beat: u32 = 0x00080000;
pub const ETH_DMABMR_RDP_8Beat: u32 = 0x00100000;
pub const ETH_DMABMR_RDP_16Beat: u32 = 0x00200000;
pub const ETH_DMABMR_RDP_32Beat: u32 = 0x00400000;
pub const ETH_DMABMR_RDP_4xPBL_4Beat: u32 = 0x01020000;
pub const ETH_DMABMR_RDP_4xPBL_8Beat: u32 = 0x01040000;
pub const ETH_DMABMR_RDP_4xPBL_16Beat: u32 = 0x01080000;
pub const ETH_DMABMR_RDP_4xPBL_32Beat: u32 = 0x01100000;
pub const ETH_DMABMR_RDP_4xPBL_64Beat: u32 = 0x01200000;
pub const ETH_DMABMR_RDP_4xPBL_128Beat: u32 = 0x01400000;
pub const ETH_DMABMR_FB_Pos: u32 = 16;
pub const ETH_DMABMR_FB_Msk: u32 = 0x1 << ETH_DMABMR_FB_Pos;
pub const ETH_DMABMR_FB: u32 = ETH_DMABMR_FB_Msk;
pub const ETH_DMABMR_RTPR_Pos: u32 = 14;
pub const ETH_DMABMR_RTPR_Msk: u32 = 0x3 << ETH_DMABMR_RTPR_Pos;
pub const ETH_DMABMR_RTPR: u32 = ETH_DMABMR_RTPR_Msk;
pub const ETH_DMABMR_RTPR_1_1: u32 = 0x00000000;
pub const ETH_DMABMR_RTPR_2_1: u32 = 0x00004000;
pub const ETH_DMABMR_RTPR_3_1: u32 = 0x00008000;
pub const ETH_DMABMR_RTPR_4_1: u32 = 0x0000C000;
pub const ETH_DMABMR_PBL_Pos: u32 = 8;
pub const ETH_DMABMR_PBL_Msk: u32 = 0x3F << ETH_DMABMR_PBL_Pos;
pub const ETH_DMABMR_PBL: u32 = ETH_DMABMR_PBL_Msk;
pub const ETH_DMABMR_PBL_1Beat: u32 = 0x00000100;
pub const ETH_DMABMR_PBL_2Beat: u32 = 0x00000200;
pub const ETH_DMABMR_PBL_4Beat: u32 = 0x00000400;
pub const ETH_DMABMR_PBL_8Beat: u32 = 0x00000800;
pub const ETH_DMABMR_PBL_16Beat: u32 = 0x00001000;
pub const ETH_DMABMR_PBL_32Beat: u32 = 0x00002000;
pub const ETH_DMABMR_PBL_4xPBL_4Beat: u32 = 0x01000100;
pub const ETH_DMABMR_PBL_4xPBL_8Beat: u32 = 0x01000200;
pub const ETH_DMABMR_PBL_4xPBL_16Beat: u32 = 0x01000400;
pub const ETH_DMABMR_PBL_4xPBL_32Beat: u32 = 0x01000800;
pub const ETH_DMABMR_PBL_4xPBL_64Beat: u32 = 0x01001000;
pub const ETH_DMABMR_PBL_4xPBL_128Beat: u32 = 0x01002000;
pub const ETH_DMABMR_EDE_Pos: u32 = 7;
pub const ETH_DMABMR_EDE_Msk: u32 = 0x1 << ETH_DMABMR_EDE_Pos;
pub const ETH_DMABMR_EDE: u32 = ETH_DMABMR_EDE_Msk;
pub const ETH_DMABMR_DSL_Pos: u32 = 2;
pub const ETH_DMABMR_DSL_Msk: u32 = 0x1F << ETH_DMABMR_DSL_Pos;
pub const ETH_DMABMR_DSL: u32 = ETH_DMABMR_DSL_Msk;
pub const ETH_DMABMR_DA_Pos: u32 = 1;
pub const ETH_DMABMR_DA_Msk: u32 = 0x1 << ETH_DMABMR_DA_Pos;
pub const ETH_DMABMR_DA: u32 = ETH_DMABMR_DA_Msk;
pub const ETH_DMABMR_SR_Pos: u32 = 0;
pub const ETH_DMABMR_SR_Msk: u32 = 0x1 << ETH_DMABMR_SR_Pos;
pub const ETH_DMABMR_SR: u32 = ETH_DMABMR_SR_Msk;
pub const ETH_DMATPDR_TPD_Pos: u32 = 0;
pub const ETH_DMATPDR_TPD_Msk: u32 = 0xFFFFFFFF << ETH_DMATPDR_TPD_Pos;
pub const ETH_DMATPDR_TPD: u32 = ETH_DMATPDR_TPD_Msk;
pub const ETH_DMARPDR_RPD_Pos: u32 = 0;
pub const ETH_DMARPDR_RPD_Msk: u32 = 0xFFFFFFFF << ETH_DMARPDR_RPD_Pos;
pub const ETH_DMARPDR_RPD: u32 = ETH_DMARPDR_RPD_Msk;
pub const ETH_DMARDLAR_SRL_Pos: u32 = 0;
pub const ETH_DMARDLAR_SRL_Msk: u32 = 0xFFFFFFFF << ETH_DMARDLAR_SRL_Pos;
pub const ETH_DMARDLAR_SRL: u32 = ETH_DMARDLAR_SRL_Msk;
pub const ETH_DMATDLAR_STL_Pos: u32 = 0;
pub const ETH_DMATDLAR_STL_Msk: u32 = 0xFFFFFFFF << ETH_DMATDLAR_STL_Pos;
pub const ETH_DMATDLAR_STL: u32 = ETH_DMATDLAR_STL_Msk;
pub const ETH_DMASR_TSTS_Pos: u32 = 29;
pub const ETH_DMASR_TSTS_Msk: u32 = 0x1 << ETH_DMASR_TSTS_Pos;
pub const ETH_DMASR_TSTS: u32 = ETH_DMASR_TSTS_Msk;
pub const ETH_DMASR_PMTS_Pos: u32 = 28;
pub const ETH_DMASR_PMTS_Msk: u32 = 0x1 << ETH_DMASR_PMTS_Pos;
pub const ETH_DMASR_PMTS: u32 = ETH_DMASR_PMTS_Msk;
pub const ETH_DMASR_MMCS_Pos: u32 = 27;
pub const ETH_DMASR_MMCS_Msk: u32 = 0x1 << ETH_DMASR_MMCS_Pos;
pub const ETH_DMASR_MMCS: u32 = ETH_DMASR_MMCS_Msk;
pub const ETH_DMASR_EBS_Pos: u32 = 23;
pub const ETH_DMASR_EBS_Msk: u32 = 0x7 << ETH_DMASR_EBS_Pos;
pub const ETH_DMASR_EBS: u32 = ETH_DMASR_EBS_Msk;
pub const ETH_DMASR_EBS_DescAccess_Pos: u32 = 25;
pub const ETH_DMASR_EBS_DescAccess_Msk: u32 = 0x1 << ETH_DMASR_EBS_DescAccess_Pos;
pub const ETH_DMASR_EBS_DescAccess: u32 = ETH_DMASR_EBS_DescAccess_Msk;
pub const ETH_DMASR_EBS_ReadTransf_Pos: u32 = 24;
pub const ETH_DMASR_EBS_ReadTransf_Msk: u32 = 0x1 << ETH_DMASR_EBS_ReadTransf_Pos;
pub const ETH_DMASR_EBS_ReadTransf: u32 = ETH_DMASR_EBS_ReadTransf_Msk;
pub const ETH_DMASR_EBS_DataTransfTx_Pos: u32 = 23;
pub const ETH_DMASR_EBS_DataTransfTx_Msk: u32 = 0x1 << ETH_DMASR_EBS_DataTransfTx_Pos;
pub const ETH_DMASR_EBS_DataTransfTx: u32 = ETH_DMASR_EBS_DataTransfTx_Msk;
pub const ETH_DMASR_TPS_Pos: u32 = 20;
pub const ETH_DMASR_TPS_Msk: u32 = 0x7 << ETH_DMASR_TPS_Pos;
pub const ETH_DMASR_TPS: u32 = ETH_DMASR_TPS_Msk;
pub const ETH_DMASR_TPS_Stopped: u32 = 0x00000000;
pub const ETH_DMASR_TPS_Fetching_Pos: u32 = 20;
pub const ETH_DMASR_TPS_Fetching_Msk: u32 = 0x1 << ETH_DMASR_TPS_Fetching_Pos;
pub const ETH_DMASR_TPS_Fetching: u32 = ETH_DMASR_TPS_Fetching_Msk;
pub const ETH_DMASR_TPS_Waiting_Pos: u32 = 21;
pub const ETH_DMASR_TPS_Waiting_Msk: u32 = 0x1 << ETH_DMASR_TPS_Waiting_Pos;
pub const ETH_DMASR_TPS_Waiting: u32 = ETH_DMASR_TPS_Waiting_Msk;
pub const ETH_DMASR_TPS_Reading_Pos: u32 = 20;
pub const ETH_DMASR_TPS_Reading_Msk: u32 = 0x3 << ETH_DMASR_TPS_Reading_Pos;
pub const ETH_DMASR_TPS_Reading: u32 = ETH_DMASR_TPS_Reading_Msk;
pub const ETH_DMASR_TPS_Suspended_Pos: u32 = 21;
pub const ETH_DMASR_TPS_Suspended_Msk: u32 = 0x3 << ETH_DMASR_TPS_Suspended_Pos;
pub const ETH_DMASR_TPS_Suspended: u32 = ETH_DMASR_TPS_Suspended_Msk;
pub const ETH_DMASR_TPS_Closing_Pos: u32 = 20;
pub const ETH_DMASR_TPS_Closing_Msk: u32 = 0x7 << ETH_DMASR_TPS_Closing_Pos;
pub const ETH_DMASR_TPS_Closing: u32 = ETH_DMASR_TPS_Closing_Msk;
pub const ETH_DMASR_RPS_Pos: u32 = 17;
pub const ETH_DMASR_RPS_Msk: u32 = 0x7 << ETH_DMASR_RPS_Pos;
pub const ETH_DMASR_RPS: u32 = ETH_DMASR_RPS_Msk;
pub const ETH_DMASR_RPS_Stopped: u32 = 0x00000000;
pub const ETH_DMASR_RPS_Fetching_Pos: u32 = 17;
pub const ETH_DMASR_RPS_Fetching_Msk: u32 = 0x1 << ETH_DMASR_RPS_Fetching_Pos;
pub const ETH_DMASR_RPS_Fetching: u32 = ETH_DMASR_RPS_Fetching_Msk;
pub const ETH_DMASR_RPS_Waiting_Pos: u32 = 17;
pub const ETH_DMASR_RPS_Waiting_Msk: u32 = 0x3 << ETH_DMASR_RPS_Waiting_Pos;
pub const ETH_DMASR_RPS_Waiting: u32 = ETH_DMASR_RPS_Waiting_Msk;
pub const ETH_DMASR_RPS_Suspended_Pos: u32 = 19;
pub const ETH_DMASR_RPS_Suspended_Msk: u32 = 0x1 << ETH_DMASR_RPS_Suspended_Pos;
pub const ETH_DMASR_RPS_Suspended: u32 = ETH_DMASR_RPS_Suspended_Msk;
pub const ETH_DMASR_RPS_Closing_Pos: u32 = 17;
pub const ETH_DMASR_RPS_Closing_Msk: u32 = 0x5 << ETH_DMASR_RPS_Closing_Pos;
pub const ETH_DMASR_RPS_Closing: u32 = ETH_DMASR_RPS_Closing_Msk;
pub const ETH_DMASR_RPS_Queuing_Pos: u32 = 17;
pub const ETH_DMASR_RPS_Queuing_Msk: u32 = 0x7 << ETH_DMASR_RPS_Queuing_Pos;
pub const ETH_DMASR_RPS_Queuing: u32 = ETH_DMASR_RPS_Queuing_Msk;
pub const ETH_DMASR_NIS_Pos: u32 = 16;
pub const ETH_DMASR_NIS_Msk: u32 = 0x1 << ETH_DMASR_NIS_Pos;
pub const ETH_DMASR_NIS: u32 = ETH_DMASR_NIS_Msk;
pub const ETH_DMASR_AIS_Pos: u32 = 15;
pub const ETH_DMASR_AIS_Msk: u32 = 0x1 << ETH_DMASR_AIS_Pos;
pub const ETH_DMASR_AIS: u32 = ETH_DMASR_AIS_Msk;
pub const ETH_DMASR_ERS_Pos: u32 = 14;
pub const ETH_DMASR_ERS_Msk: u32 = 0x1 << ETH_DMASR_ERS_Pos;
pub const ETH_DMASR_ERS: u32 = ETH_DMASR_ERS_Msk;
pub const ETH_DMASR_FBES_Pos: u32 = 13;
pub const ETH_DMASR_FBES_Msk: u32 = 0x1 << ETH_DMASR_FBES_Pos;
pub const ETH_DMASR_FBES: u32 = ETH_DMASR_FBES_Msk;
pub const ETH_DMASR_ETS_Pos: u32 = 10;
pub const ETH_DMASR_ETS_Msk: u32 = 0x1 << ETH_DMASR_ETS_Pos;
pub const ETH_DMASR_ETS: u32 = ETH_DMASR_ETS_Msk;
pub const ETH_DMASR_RWTS_Pos: u32 = 9;
pub const ETH_DMASR_RWTS_Msk: u32 = 0x1 << ETH_DMASR_RWTS_Pos;
pub const ETH_DMASR_RWTS: u32 = ETH_DMASR_RWTS_Msk;
pub const ETH_DMASR_RPSS_Pos: u32 = 8;
pub const ETH_DMASR_RPSS_Msk: u32 = 0x1 << ETH_DMASR_RPSS_Pos;
pub const ETH_DMASR_RPSS: u32 = ETH_DMASR_RPSS_Msk;
pub const ETH_DMASR_RBUS_Pos: u32 = 7;
pub const ETH_DMASR_RBUS_Msk: u32 = 0x1 << ETH_DMASR_RBUS_Pos;
pub const ETH_DMASR_RBUS: u32 = ETH_DMASR_RBUS_Msk;
pub const ETH_DMASR_RS_Pos: u32 = 6;
pub const ETH_DMASR_RS_Msk: u32 = 0x1 << ETH_DMASR_RS_Pos;
pub const ETH_DMASR_RS: u32 = ETH_DMASR_RS_Msk;
pub const ETH_DMASR_TUS_Pos: u32 = 5;
pub const ETH_DMASR_TUS_Msk: u32 = 0x1 << ETH_DMASR_TUS_Pos;
pub const ETH_DMASR_TUS: u32 = ETH_DMASR_TUS_Msk;
pub const ETH_DMASR_ROS_Pos: u32 = 4;
pub const ETH_DMASR_ROS_Msk: u32 = 0x1 << ETH_DMASR_ROS_Pos;
pub const ETH_DMASR_ROS: u32 = ETH_DMASR_ROS_Msk;
pub const ETH_DMASR_TJTS_Pos: u32 = 3;
pub const ETH_DMASR_TJTS_Msk: u32 = 0x1 << ETH_DMASR_TJTS_Pos;
pub const ETH_DMASR_TJTS: u32 = ETH_DMASR_TJTS_Msk;
pub const ETH_DMASR_TBUS_Pos: u32 = 2;
pub const ETH_DMASR_TBUS_Msk: u32 = 0x1 << ETH_DMASR_TBUS_Pos;
pub const ETH_DMASR_TBUS: u32 = ETH_DMASR_TBUS_Msk;
pub const ETH_DMASR_TPSS_Pos: u32 = 1;
pub const ETH_DMASR_TPSS_Msk: u32 = 0x1 << ETH_DMASR_TPSS_Pos;
pub const ETH_DMASR_TPSS: u32 = ETH_DMASR_TPSS_Msk;
pub const ETH_DMASR_TS_Pos: u32 = 0;
pub const ETH_DMASR_TS_Msk: u32 = 0x1 << ETH_DMASR_TS_Pos;
pub const ETH_DMASR_TS: u32 = ETH_DMASR_TS_Msk;
pub const ETH_DMAOMR_DTCEFD_Pos: u32 = 26;
pub const ETH_DMAOMR_DTCEFD_Msk: u32 = 0x1 << ETH_DMAOMR_DTCEFD_Pos;
pub const ETH_DMAOMR_DTCEFD: u32 = ETH_DMAOMR_DTCEFD_Msk;
pub const ETH_DMAOMR_RSF_Pos: u32 = 25;
pub const ETH_DMAOMR_RSF_Msk: u32 = 0x1 << ETH_DMAOMR_RSF_Pos;
pub const ETH_DMAOMR_RSF: u32 = ETH_DMAOMR_RSF_Msk;
pub const ETH_DMAOMR_DFRF_Pos: u32 = 24;
pub const ETH_DMAOMR_DFRF_Msk: u32 = 0x1 << ETH_DMAOMR_DFRF_Pos;
pub const ETH_DMAOMR_DFRF: u32 = ETH_DMAOMR_DFRF_Msk;
pub const ETH_DMAOMR_TSF_Pos: u32 = 21;
pub const ETH_DMAOMR_TSF_Msk: u32 = 0x1 << ETH_DMAOMR_TSF_Pos;
pub const ETH_DMAOMR_TSF: u32 = ETH_DMAOMR_TSF_Msk;
pub const ETH_DMAOMR_FTF_Pos: u32 = 20;
pub const ETH_DMAOMR_FTF_Msk: u32 = 0x1 << ETH_DMAOMR_FTF_Pos;
pub const ETH_DMAOMR_FTF: u32 = ETH_DMAOMR_FTF_Msk;
pub const ETH_DMAOMR_TTC_Pos: u32 = 14;
pub const ETH_DMAOMR_TTC_Msk: u32 = 0x7 << ETH_DMAOMR_TTC_Pos;
pub const ETH_DMAOMR_TTC: u32 = ETH_DMAOMR_TTC_Msk;
pub const ETH_DMAOMR_TTC_64Bytes: u32 = 0x00000000;
pub const ETH_DMAOMR_TTC_128Bytes: u32 = 0x00004000;
pub const ETH_DMAOMR_TTC_192Bytes: u32 = 0x00008000;
pub const ETH_DMAOMR_TTC_256Bytes: u32 = 0x0000C000;
pub const ETH_DMAOMR_TTC_40Bytes: u32 = 0x00010000;
pub const ETH_DMAOMR_TTC_32Bytes: u32 = 0x00014000;
pub const ETH_DMAOMR_TTC_24Bytes: u32 = 0x00018000;
pub const ETH_DMAOMR_TTC_16Bytes: u32 = 0x0001C000;
pub const ETH_DMAOMR_ST_Pos: u32 = 13;
pub const ETH_DMAOMR_ST_Msk: u32 = 0x1 << ETH_DMAOMR_ST_Pos;
pub const ETH_DMAOMR_ST: u32 = ETH_DMAOMR_ST_Msk;
pub const ETH_DMAOMR_FEF_Pos: u32 = 7;
pub const ETH_DMAOMR_FEF_Msk: u32 = 0x1 << ETH_DMAOMR_FEF_Pos;
pub const ETH_DMAOMR_FEF: u32 = ETH_DMAOMR_FEF_Msk;
pub const ETH_DMAOMR_FUGF_Pos: u32 = 6;
pub const ETH_DMAOMR_FUGF_Msk: u32 = 0x1 << ETH_DMAOMR_FUGF_Pos;
pub const ETH_DMAOMR_FUGF: u32 = ETH_DMAOMR_FUGF_Msk;
pub const ETH_DMAOMR_RTC_Pos: u32 = 3;
pub const ETH_DMAOMR_RTC_Msk: u32 = 0x3 << ETH_DMAOMR_RTC_Pos;
pub const ETH_DMAOMR_RTC: u32 = ETH_DMAOMR_RTC_Msk;
pub const ETH_DMAOMR_RTC_64Bytes: u32 = 0x00000000;
pub const ETH_DMAOMR_RTC_32Bytes: u32 = 0x00000008;
pub const ETH_DMAOMR_RTC_96Bytes: u32 = 0x00000010;
pub const ETH_DMAOMR_RTC_128Bytes: u32 = 0x00000018;
pub const ETH_DMAOMR_OSF_Pos: u32 = 2;
pub const ETH_DMAOMR_OSF_Msk: u32 = 0x1 << ETH_DMAOMR_OSF_Pos;
pub const ETH_DMAOMR_OSF: u32 = ETH_DMAOMR_OSF_Msk;
pub const ETH_DMAOMR_SR_Pos: u32 = 1;
pub const ETH_DMAOMR_SR_Msk: u32 = 0x1 << ETH_DMAOMR_SR_Pos;
pub const ETH_DMAOMR_SR: u32 = ETH_DMAOMR_SR_Msk;
pub const ETH_DMAIER_NISE_Pos: u32 = 16;
pub const ETH_DMAIER_NISE_Msk: u32 = 0x1 << ETH_DMAIER_NISE_Pos;
pub const ETH_DMAIER_NISE: u32 = ETH_DMAIER_NISE_Msk;
pub const ETH_DMAIER_AISE_Pos: u32 = 15;
pub const ETH_DMAIER_AISE_Msk: u32 = 0x1 << ETH_DMAIER_AISE_Pos;
pub const ETH_DMAIER_AISE: u32 = ETH_DMAIER_AISE_Msk;
pub const ETH_DMAIER_ERIE_Pos: u32 = 14;
pub const ETH_DMAIER_ERIE_Msk: u32 = 0x1 << ETH_DMAIER_ERIE_Pos;
pub const ETH_DMAIER_ERIE: u32 = ETH_DMAIER_ERIE_Msk;
pub const ETH_DMAIER_FBEIE_Pos: u32 = 13;
pub const ETH_DMAIER_FBEIE_Msk: u32 = 0x1 << ETH_DMAIER_FBEIE_Pos;
pub const ETH_DMAIER_FBEIE: u32 = ETH_DMAIER_FBEIE_Msk;
pub const ETH_DMAIER_ETIE_Pos: u32 = 10;
pub const ETH_DMAIER_ETIE_Msk: u32 = 0x1 << ETH_DMAIER_ETIE_Pos;
pub const ETH_DMAIER_ETIE: u32 = ETH_DMAIER_ETIE_Msk;
pub const ETH_DMAIER_RWTIE_Pos: u32 = 9;
pub const ETH_DMAIER_RWTIE_Msk: u32 = 0x1 << ETH_DMAIER_RWTIE_Pos;
pub const ETH_DMAIER_RWTIE: u32 = ETH_DMAIER_RWTIE_Msk;
pub const ETH_DMAIER_RPSIE_Pos: u32 = 8;
pub const ETH_DMAIER_RPSIE_Msk: u32 = 0x1 << ETH_DMAIER_RPSIE_Pos;
pub const ETH_DMAIER_RPSIE: u32 = ETH_DMAIER_RPSIE_Msk;
pub const ETH_DMAIER_RBUIE_Pos: u32 = 7;
pub const ETH_DMAIER_RBUIE_Msk: u32 = 0x1 << ETH_DMAIER_RBUIE_Pos;
pub const ETH_DMAIER_RBUIE: u32 = ETH_DMAIER_RBUIE_Msk;
pub const ETH_DMAIER_RIE_Pos: u32 = 6;
pub const ETH_DMAIER_RIE_Msk: u32 = 0x1 << ETH_DMAIER_RIE_Pos;
pub const ETH_DMAIER_RIE: u32 = ETH_DMAIER_RIE_Msk;
pub const ETH_DMAIER_TUIE_Pos: u32 = 5;
pub const ETH_DMAIER_TUIE_Msk: u32 = 0x1 << ETH_DMAIER_TUIE_Pos;
pub const ETH_DMAIER_TUIE: u32 = ETH_DMAIER_TUIE_Msk;
pub const ETH_DMAIER_ROIE_Pos: u32 = 4;
pub const ETH_DMAIER_ROIE_Msk: u32 = 0x1 << ETH_DMAIER_ROIE_Pos;
pub const ETH_DMAIER_ROIE: u32 = ETH_DMAIER_ROIE_Msk;
pub const ETH_DMAIER_TJTIE_Pos: u32 = 3;
pub const ETH_DMAIER_TJTIE_Msk: u32 = 0x1 << ETH_DMAIER_TJTIE_Pos;
pub const ETH_DMAIER_TJTIE: u32 = ETH_DMAIER_TJTIE_Msk;
pub const ETH_DMAIER_TBUIE_Pos: u32 = 2;
pub const ETH_DMAIER_TBUIE_Msk: u32 = 0x1 << ETH_DMAIER_TBUIE_Pos;
pub const ETH_DMAIER_TBUIE: u32 = ETH_DMAIER_TBUIE_Msk;
pub const ETH_DMAIER_TPSIE_Pos: u32 = 1;
pub const ETH_DMAIER_TPSIE_Msk: u32 = 0x1 << ETH_DMAIER_TPSIE_Pos;
pub const ETH_DMAIER_TPSIE: u32 = ETH_DMAIER_TPSIE_Msk;
pub const ETH_DMAIER_TIE_Pos: u32 = 0;
pub const ETH_DMAIER_TIE_Msk: u32 = 0x1 << ETH_DMAIER_TIE_Pos;
pub const ETH_DMAIER_TIE: u32 = ETH_DMAIER_TIE_Msk;
pub const ETH_DMAMFBOCR_OFOC_Pos: u32 = 28;
pub const ETH_DMAMFBOCR_OFOC_Msk: u32 = 0x1 << ETH_DMAMFBOCR_OFOC_Pos;
pub const ETH_DMAMFBOCR_OFOC: u32 = ETH_DMAMFBOCR_OFOC_Msk;
pub const ETH_DMAMFBOCR_MFA_Pos: u32 = 17;
pub const ETH_DMAMFBOCR_MFA_Msk: u32 = 0x7FF << ETH_DMAMFBOCR_MFA_Pos;
pub const ETH_DMAMFBOCR_MFA: u32 = ETH_DMAMFBOCR_MFA_Msk;
pub const ETH_DMAMFBOCR_OMFC_Pos: u32 = 16;
pub const ETH_DMAMFBOCR_OMFC_Msk: u32 = 0x1 << ETH_DMAMFBOCR_OMFC_Pos;
pub const ETH_DMAMFBOCR_OMFC: u32 = ETH_DMAMFBOCR_OMFC_Msk;
pub const ETH_DMAMFBOCR_MFC_Pos: u32 = 0;
pub const ETH_DMAMFBOCR_MFC_Msk: u32 = 0xFFFF << ETH_DMAMFBOCR_MFC_Pos;
pub const ETH_DMAMFBOCR_MFC: u32 = ETH_DMAMFBOCR_MFC_Msk;
pub const ETH_DMACHTDR_HTDAP_Pos: u32 = 0;
pub const ETH_DMACHTDR_HTDAP_Msk: u32 = 0xFFFFFFFF << ETH_DMACHTDR_HTDAP_Pos;
pub const ETH_DMACHTDR_HTDAP: u32 = ETH_DMACHTDR_HTDAP_Msk;
pub const ETH_DMACHRDR_HRDAP_Pos: u32 = 0;
pub const ETH_DMACHRDR_HRDAP_Msk: u32 = 0xFFFFFFFF << ETH_DMACHRDR_HRDAP_Pos;
pub const ETH_DMACHRDR_HRDAP: u32 = ETH_DMACHRDR_HRDAP_Msk;
pub const ETH_DMACHTBAR_HTBAP_Pos: u32 = 0;
pub const ETH_DMACHTBAR_HTBAP_Msk: u32 = 0xFFFFFFFF << ETH_DMACHTBAR_HTBAP_Pos;
pub const ETH_DMACHTBAR_HTBAP: u32 = ETH_DMACHTBAR_HTBAP_Msk;
pub const ETH_DMACHRBAR_HRBAP_Pos: u32 = 0;
pub const ETH_DMACHRBAR_HRBAP_Msk: u32 = 0xFFFFFFFF << ETH_DMACHRBAR_HRBAP_Pos;
pub const ETH_DMACHRBAR_HRBAP: u32 = ETH_DMACHRBAR_HRBAP_Msk;
pub const USB_OTG_GOTGCTL_SRQSCS_Pos: u32 = 0;
pub const USB_OTG_GOTGCTL_SRQSCS_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_SRQSCS_Pos;
pub const USB_OTG_GOTGCTL_SRQSCS: u32 = USB_OTG_GOTGCTL_SRQSCS_Msk;
pub const USB_OTG_GOTGCTL_SRQ_Pos: u32 = 1;
pub const USB_OTG_GOTGCTL_SRQ_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_SRQ_Pos;
pub const USB_OTG_GOTGCTL_SRQ: u32 = USB_OTG_GOTGCTL_SRQ_Msk;
pub const USB_OTG_GOTGCTL_VBVALOEN_Pos: u32 = 2;
pub const USB_OTG_GOTGCTL_VBVALOEN_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_VBVALOEN_Pos;
pub const USB_OTG_GOTGCTL_VBVALOEN: u32 = USB_OTG_GOTGCTL_VBVALOEN_Msk;
pub const USB_OTG_GOTGCTL_VBVALOVAL_Pos: u32 = 3;
pub const USB_OTG_GOTGCTL_VBVALOVAL_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_VBVALOVAL_Pos;
pub const USB_OTG_GOTGCTL_VBVALOVAL: u32 = USB_OTG_GOTGCTL_VBVALOVAL_Msk;
pub const USB_OTG_GOTGCTL_AVALOEN_Pos: u32 = 4;
pub const USB_OTG_GOTGCTL_AVALOEN_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_AVALOEN_Pos;
pub const USB_OTG_GOTGCTL_AVALOEN: u32 = USB_OTG_GOTGCTL_AVALOEN_Msk;
pub const USB_OTG_GOTGCTL_AVALOVAL_Pos: u32 = 5;
pub const USB_OTG_GOTGCTL_AVALOVAL_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_AVALOVAL_Pos;
pub const USB_OTG_GOTGCTL_AVALOVAL: u32 = USB_OTG_GOTGCTL_AVALOVAL_Msk;
pub const USB_OTG_GOTGCTL_BVALOEN_Pos: u32 = 6;
pub const USB_OTG_GOTGCTL_BVALOEN_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_BVALOEN_Pos;
pub const USB_OTG_GOTGCTL_BVALOEN: u32 = USB_OTG_GOTGCTL_BVALOEN_Msk;
pub const USB_OTG_GOTGCTL_BVALOVAL_Pos: u32 = 7;
pub const USB_OTG_GOTGCTL_BVALOVAL_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_BVALOVAL_Pos;
pub const USB_OTG_GOTGCTL_BVALOVAL: u32 = USB_OTG_GOTGCTL_BVALOVAL_Msk;
pub const USB_OTG_GOTGCTL_HNGSCS_Pos: u32 = 8;
pub const USB_OTG_GOTGCTL_HNGSCS_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_HNGSCS_Pos;
pub const USB_OTG_GOTGCTL_HNGSCS: u32 = USB_OTG_GOTGCTL_HNGSCS_Msk;
pub const USB_OTG_GOTGCTL_HNPRQ_Pos: u32 = 9;
pub const USB_OTG_GOTGCTL_HNPRQ_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_HNPRQ_Pos;
pub const USB_OTG_GOTGCTL_HNPRQ: u32 = USB_OTG_GOTGCTL_HNPRQ_Msk;
pub const USB_OTG_GOTGCTL_HSHNPEN_Pos: u32 = 10;
pub const USB_OTG_GOTGCTL_HSHNPEN_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_HSHNPEN_Pos;
pub const USB_OTG_GOTGCTL_HSHNPEN: u32 = USB_OTG_GOTGCTL_HSHNPEN_Msk;
pub const USB_OTG_GOTGCTL_DHNPEN_Pos: u32 = 11;
pub const USB_OTG_GOTGCTL_DHNPEN_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_DHNPEN_Pos;
pub const USB_OTG_GOTGCTL_DHNPEN: u32 = USB_OTG_GOTGCTL_DHNPEN_Msk;
pub const USB_OTG_GOTGCTL_EHEN_Pos: u32 = 12;
pub const USB_OTG_GOTGCTL_EHEN_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_EHEN_Pos;
pub const USB_OTG_GOTGCTL_EHEN: u32 = USB_OTG_GOTGCTL_EHEN_Msk;
pub const USB_OTG_GOTGCTL_CIDSTS_Pos: u32 = 16;
pub const USB_OTG_GOTGCTL_CIDSTS_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_CIDSTS_Pos;
pub const USB_OTG_GOTGCTL_CIDSTS: u32 = USB_OTG_GOTGCTL_CIDSTS_Msk;
pub const USB_OTG_GOTGCTL_DBCT_Pos: u32 = 17;
pub const USB_OTG_GOTGCTL_DBCT_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_DBCT_Pos;
pub const USB_OTG_GOTGCTL_DBCT: u32 = USB_OTG_GOTGCTL_DBCT_Msk;
pub const USB_OTG_GOTGCTL_ASVLD_Pos: u32 = 18;
pub const USB_OTG_GOTGCTL_ASVLD_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_ASVLD_Pos;
pub const USB_OTG_GOTGCTL_ASVLD: u32 = USB_OTG_GOTGCTL_ASVLD_Msk;
pub const USB_OTG_GOTGCTL_BSESVLD_Pos: u32 = 19;
pub const USB_OTG_GOTGCTL_BSESVLD_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_BSESVLD_Pos;
pub const USB_OTG_GOTGCTL_BSESVLD: u32 = USB_OTG_GOTGCTL_BSESVLD_Msk;
pub const USB_OTG_GOTGCTL_OTGVER_Pos: u32 = 20;
pub const USB_OTG_GOTGCTL_OTGVER_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_OTGVER_Pos;
pub const USB_OTG_GOTGCTL_OTGVER: u32 = USB_OTG_GOTGCTL_OTGVER_Msk;
pub const USB_OTG_HCFG_FSLSPCS_Pos: u32 = 0;
pub const USB_OTG_HCFG_FSLSPCS_Msk: u32 = 0x3 << USB_OTG_HCFG_FSLSPCS_Pos;
pub const USB_OTG_HCFG_FSLSPCS: u32 = USB_OTG_HCFG_FSLSPCS_Msk;
pub const USB_OTG_HCFG_FSLSPCS_0: u32 = 0x1 << USB_OTG_HCFG_FSLSPCS_Pos;
pub const USB_OTG_HCFG_FSLSPCS_1: u32 = 0x2 << USB_OTG_HCFG_FSLSPCS_Pos;
pub const USB_OTG_HCFG_FSLSS_Pos: u32 = 2;
pub const USB_OTG_HCFG_FSLSS_Msk: u32 = 0x1 << USB_OTG_HCFG_FSLSS_Pos;
pub const USB_OTG_HCFG_FSLSS: u32 = USB_OTG_HCFG_FSLSS_Msk;
pub const USB_OTG_DCFG_DSPD_Pos: u32 = 0;
pub const USB_OTG_DCFG_DSPD_Msk: u32 = 0x3 << USB_OTG_DCFG_DSPD_Pos;
pub const USB_OTG_DCFG_DSPD: u32 = USB_OTG_DCFG_DSPD_Msk;
pub const USB_OTG_DCFG_DSPD_0: u32 = 0x1 << USB_OTG_DCFG_DSPD_Pos;
pub const USB_OTG_DCFG_DSPD_1: u32 = 0x2 << USB_OTG_DCFG_DSPD_Pos;
pub const USB_OTG_DCFG_NZLSOHSK_Pos: u32 = 2;
pub const USB_OTG_DCFG_NZLSOHSK_Msk: u32 = 0x1 << USB_OTG_DCFG_NZLSOHSK_Pos;
pub const USB_OTG_DCFG_NZLSOHSK: u32 = USB_OTG_DCFG_NZLSOHSK_Msk;
pub const USB_OTG_DCFG_DAD_Pos: u32 = 4;
pub const USB_OTG_DCFG_DAD_Msk: u32 = 0x7F << USB_OTG_DCFG_DAD_Pos;
pub const USB_OTG_DCFG_DAD: u32 = USB_OTG_DCFG_DAD_Msk;
pub const USB_OTG_DCFG_DAD_0: u32 = 0x01 << USB_OTG_DCFG_DAD_Pos;
pub const USB_OTG_DCFG_DAD_1: u32 = 0x02 << USB_OTG_DCFG_DAD_Pos;
pub const USB_OTG_DCFG_DAD_2: u32 = 0x04 << USB_OTG_DCFG_DAD_Pos;
pub const USB_OTG_DCFG_DAD_3: u32 = 0x08 << USB_OTG_DCFG_DAD_Pos;
pub const USB_OTG_DCFG_DAD_4: u32 = 0x10 << USB_OTG_DCFG_DAD_Pos;
pub const USB_OTG_DCFG_DAD_5: u32 = 0x20 << USB_OTG_DCFG_DAD_Pos;
pub const USB_OTG_DCFG_DAD_6: u32 = 0x40 << USB_OTG_DCFG_DAD_Pos;
pub const USB_OTG_DCFG_PFIVL_Pos: u32 = 11;
pub const USB_OTG_DCFG_PFIVL_Msk: u32 = 0x3 << USB_OTG_DCFG_PFIVL_Pos;
pub const USB_OTG_DCFG_PFIVL: u32 = USB_OTG_DCFG_PFIVL_Msk;
pub const USB_OTG_DCFG_PFIVL_0: u32 = 0x1 << USB_OTG_DCFG_PFIVL_Pos;
pub const USB_OTG_DCFG_PFIVL_1: u32 = 0x2 << USB_OTG_DCFG_PFIVL_Pos;
pub const USB_OTG_DCFG_PERSCHIVL_Pos: u32 = 24;
pub const USB_OTG_DCFG_PERSCHIVL_Msk: u32 = 0x3 << USB_OTG_DCFG_PERSCHIVL_Pos;
pub const USB_OTG_DCFG_PERSCHIVL: u32 = USB_OTG_DCFG_PERSCHIVL_Msk;
pub const USB_OTG_DCFG_PERSCHIVL_0: u32 = 0x1 << USB_OTG_DCFG_PERSCHIVL_Pos;
pub const USB_OTG_DCFG_PERSCHIVL_1: u32 = 0x2 << USB_OTG_DCFG_PERSCHIVL_Pos;
pub const USB_OTG_PCGCR_STPPCLK_Pos: u32 = 0;
pub const USB_OTG_PCGCR_STPPCLK_Msk: u32 = 0x1 << USB_OTG_PCGCR_STPPCLK_Pos;
pub const USB_OTG_PCGCR_STPPCLK: u32 = USB_OTG_PCGCR_STPPCLK_Msk;
pub const USB_OTG_PCGCR_GATEHCLK_Pos: u32 = 1;
pub const USB_OTG_PCGCR_GATEHCLK_Msk: u32 = 0x1 << USB_OTG_PCGCR_GATEHCLK_Pos;
pub const USB_OTG_PCGCR_GATEHCLK: u32 = USB_OTG_PCGCR_GATEHCLK_Msk;
pub const USB_OTG_PCGCR_PHYSUSP_Pos: u32 = 4;
pub const USB_OTG_PCGCR_PHYSUSP_Msk: u32 = 0x1 << USB_OTG_PCGCR_PHYSUSP_Pos;
pub const USB_OTG_PCGCR_PHYSUSP: u32 = USB_OTG_PCGCR_PHYSUSP_Msk;
pub const USB_OTG_GOTGINT_SEDET_Pos: u32 = 2;
pub const USB_OTG_GOTGINT_SEDET_Msk: u32 = 0x1 << USB_OTG_GOTGINT_SEDET_Pos;
pub const USB_OTG_GOTGINT_SEDET: u32 = USB_OTG_GOTGINT_SEDET_Msk;
pub const USB_OTG_GOTGINT_SRSSCHG_Pos: u32 = 8;
pub const USB_OTG_GOTGINT_SRSSCHG_Msk: u32 = 0x1 << USB_OTG_GOTGINT_SRSSCHG_Pos;
pub const USB_OTG_GOTGINT_SRSSCHG: u32 = USB_OTG_GOTGINT_SRSSCHG_Msk;
pub const USB_OTG_GOTGINT_HNSSCHG_Pos: u32 = 9;
pub const USB_OTG_GOTGINT_HNSSCHG_Msk: u32 = 0x1 << USB_OTG_GOTGINT_HNSSCHG_Pos;
pub const USB_OTG_GOTGINT_HNSSCHG: u32 = USB_OTG_GOTGINT_HNSSCHG_Msk;
pub const USB_OTG_GOTGINT_HNGDET_Pos: u32 = 17;
pub const USB_OTG_GOTGINT_HNGDET_Msk: u32 = 0x1 << USB_OTG_GOTGINT_HNGDET_Pos;
pub const USB_OTG_GOTGINT_HNGDET: u32 = USB_OTG_GOTGINT_HNGDET_Msk;
pub const USB_OTG_GOTGINT_ADTOCHG_Pos: u32 = 18;
pub const USB_OTG_GOTGINT_ADTOCHG_Msk: u32 = 0x1 << USB_OTG_GOTGINT_ADTOCHG_Pos;
pub const USB_OTG_GOTGINT_ADTOCHG: u32 = USB_OTG_GOTGINT_ADTOCHG_Msk;
pub const USB_OTG_GOTGINT_DBCDNE_Pos: u32 = 19;
pub const USB_OTG_GOTGINT_DBCDNE_Msk: u32 = 0x1 << USB_OTG_GOTGINT_DBCDNE_Pos;
pub const USB_OTG_GOTGINT_DBCDNE: u32 = USB_OTG_GOTGINT_DBCDNE_Msk;
pub const USB_OTG_GOTGINT_IDCHNG_Pos: u32 = 20;
pub const USB_OTG_GOTGINT_IDCHNG_Msk: u32 = 0x1 << USB_OTG_GOTGINT_IDCHNG_Pos;
pub const USB_OTG_GOTGINT_IDCHNG: u32 = USB_OTG_GOTGINT_IDCHNG_Msk;
pub const USB_OTG_DCTL_RWUSIG_Pos: u32 = 0;
pub const USB_OTG_DCTL_RWUSIG_Msk: u32 = 0x1 << USB_OTG_DCTL_RWUSIG_Pos;
pub const USB_OTG_DCTL_RWUSIG: u32 = USB_OTG_DCTL_RWUSIG_Msk;
pub const USB_OTG_DCTL_SDIS_Pos: u32 = 1;
pub const USB_OTG_DCTL_SDIS_Msk: u32 = 0x1 << USB_OTG_DCTL_SDIS_Pos;
pub const USB_OTG_DCTL_SDIS: u32 = USB_OTG_DCTL_SDIS_Msk;
pub const USB_OTG_DCTL_GINSTS_Pos: u32 = 2;
pub const USB_OTG_DCTL_GINSTS_Msk: u32 = 0x1 << USB_OTG_DCTL_GINSTS_Pos;
pub const USB_OTG_DCTL_GINSTS: u32 = USB_OTG_DCTL_GINSTS_Msk;
pub const USB_OTG_DCTL_GONSTS_Pos: u32 = 3;
pub const USB_OTG_DCTL_GONSTS_Msk: u32 = 0x1 << USB_OTG_DCTL_GONSTS_Pos;
pub const USB_OTG_DCTL_GONSTS: u32 = USB_OTG_DCTL_GONSTS_Msk;
pub const USB_OTG_DCTL_TCTL_Pos: u32 = 4;
pub const USB_OTG_DCTL_TCTL_Msk: u32 = 0x7 << USB_OTG_DCTL_TCTL_Pos;
pub const USB_OTG_DCTL_TCTL: u32 = USB_OTG_DCTL_TCTL_Msk;
pub const USB_OTG_DCTL_TCTL_0: u32 = 0x1 << USB_OTG_DCTL_TCTL_Pos;
pub const USB_OTG_DCTL_TCTL_1: u32 = 0x2 << USB_OTG_DCTL_TCTL_Pos;
pub const USB_OTG_DCTL_TCTL_2: u32 = 0x4 << USB_OTG_DCTL_TCTL_Pos;
pub const USB_OTG_DCTL_SGINAK_Pos: u32 = 7;
pub const USB_OTG_DCTL_SGINAK_Msk: u32 = 0x1 << USB_OTG_DCTL_SGINAK_Pos;
pub const USB_OTG_DCTL_SGINAK: u32 = USB_OTG_DCTL_SGINAK_Msk;
pub const USB_OTG_DCTL_CGINAK_Pos: u32 = 8;
pub const USB_OTG_DCTL_CGINAK_Msk: u32 = 0x1 << USB_OTG_DCTL_CGINAK_Pos;
pub const USB_OTG_DCTL_CGINAK: u32 = USB_OTG_DCTL_CGINAK_Msk;
pub const USB_OTG_DCTL_SGONAK_Pos: u32 = 9;
pub const USB_OTG_DCTL_SGONAK_Msk: u32 = 0x1 << USB_OTG_DCTL_SGONAK_Pos;
pub const USB_OTG_DCTL_SGONAK: u32 = USB_OTG_DCTL_SGONAK_Msk;
pub const USB_OTG_DCTL_CGONAK_Pos: u32 = 10;
pub const USB_OTG_DCTL_CGONAK_Msk: u32 = 0x1 << USB_OTG_DCTL_CGONAK_Pos;
pub const USB_OTG_DCTL_CGONAK: u32 = USB_OTG_DCTL_CGONAK_Msk;
pub const USB_OTG_DCTL_POPRGDNE_Pos: u32 = 11;
pub const USB_OTG_DCTL_POPRGDNE_Msk: u32 = 0x1 << USB_OTG_DCTL_POPRGDNE_Pos;
pub const USB_OTG_DCTL_POPRGDNE: u32 = USB_OTG_DCTL_POPRGDNE_Msk;
pub const USB_OTG_HFIR_FRIVL_Pos: u32 = 0;
pub const USB_OTG_HFIR_FRIVL_Msk: u32 = 0xFFFF << USB_OTG_HFIR_FRIVL_Pos;
pub const USB_OTG_HFIR_FRIVL: u32 = USB_OTG_HFIR_FRIVL_Msk;
pub const USB_OTG_HFNUM_FRNUM_Pos: u32 = 0;
pub const USB_OTG_HFNUM_FRNUM_Msk: u32 = 0xFFFF << USB_OTG_HFNUM_FRNUM_Pos;
pub const USB_OTG_HFNUM_FRNUM: u32 = USB_OTG_HFNUM_FRNUM_Msk;
pub const USB_OTG_HFNUM_FTREM_Pos: u32 = 16;
pub const USB_OTG_HFNUM_FTREM_Msk: u32 = 0xFFFF << USB_OTG_HFNUM_FTREM_Pos;
pub const USB_OTG_HFNUM_FTREM: u32 = USB_OTG_HFNUM_FTREM_Msk;
pub const USB_OTG_DSTS_SUSPSTS_Pos: u32 = 0;
pub const USB_OTG_DSTS_SUSPSTS_Msk: u32 = 0x1 << USB_OTG_DSTS_SUSPSTS_Pos;
pub const USB_OTG_DSTS_SUSPSTS: u32 = USB_OTG_DSTS_SUSPSTS_Msk;
pub const USB_OTG_DSTS_ENUMSPD_Pos: u32 = 1;
pub const USB_OTG_DSTS_ENUMSPD_Msk: u32 = 0x3 << USB_OTG_DSTS_ENUMSPD_Pos;
pub const USB_OTG_DSTS_ENUMSPD: u32 = USB_OTG_DSTS_ENUMSPD_Msk;
pub const USB_OTG_DSTS_ENUMSPD_0: u32 = 0x1 << USB_OTG_DSTS_ENUMSPD_Pos;
pub const USB_OTG_DSTS_ENUMSPD_1: u32 = 0x2 << USB_OTG_DSTS_ENUMSPD_Pos;
pub const USB_OTG_DSTS_EERR_Pos: u32 = 3;
pub const USB_OTG_DSTS_EERR_Msk: u32 = 0x1 << USB_OTG_DSTS_EERR_Pos;
pub const USB_OTG_DSTS_EERR: u32 = USB_OTG_DSTS_EERR_Msk;
pub const USB_OTG_DSTS_FNSOF_Pos: u32 = 8;
pub const USB_OTG_DSTS_FNSOF_Msk: u32 = 0x3FFF << USB_OTG_DSTS_FNSOF_Pos;
pub const USB_OTG_DSTS_FNSOF: u32 = USB_OTG_DSTS_FNSOF_Msk;
pub const USB_OTG_GAHBCFG_GINT_Pos: u32 = 0;
pub const USB_OTG_GAHBCFG_GINT_Msk: u32 = 0x1 << USB_OTG_GAHBCFG_GINT_Pos;
pub const USB_OTG_GAHBCFG_GINT: u32 = USB_OTG_GAHBCFG_GINT_Msk;
pub const USB_OTG_GAHBCFG_HBSTLEN_Pos: u32 = 1;
pub const USB_OTG_GAHBCFG_HBSTLEN_Msk: u32 = 0xF << USB_OTG_GAHBCFG_HBSTLEN_Pos;
pub const USB_OTG_GAHBCFG_HBSTLEN: u32 = USB_OTG_GAHBCFG_HBSTLEN_Msk;
pub const USB_OTG_GAHBCFG_HBSTLEN_0: u32 = 0x0 << USB_OTG_GAHBCFG_HBSTLEN_Pos;
pub const USB_OTG_GAHBCFG_HBSTLEN_1: u32 = 0x1 << USB_OTG_GAHBCFG_HBSTLEN_Pos;
pub const USB_OTG_GAHBCFG_HBSTLEN_2: u32 = 0x3 << USB_OTG_GAHBCFG_HBSTLEN_Pos;
pub const USB_OTG_GAHBCFG_HBSTLEN_3: u32 = 0x5 << USB_OTG_GAHBCFG_HBSTLEN_Pos;
pub const USB_OTG_GAHBCFG_HBSTLEN_4: u32 = 0x7 << USB_OTG_GAHBCFG_HBSTLEN_Pos;
pub const USB_OTG_GAHBCFG_DMAEN_Pos: u32 = 5;
pub const USB_OTG_GAHBCFG_DMAEN_Msk: u32 = 0x1 << USB_OTG_GAHBCFG_DMAEN_Pos;
pub const USB_OTG_GAHBCFG_DMAEN: u32 = USB_OTG_GAHBCFG_DMAEN_Msk;
pub const USB_OTG_GAHBCFG_TXFELVL_Pos: u32 = 7;
pub const USB_OTG_GAHBCFG_TXFELVL_Msk: u32 = 0x1 << USB_OTG_GAHBCFG_TXFELVL_Pos;
pub const USB_OTG_GAHBCFG_TXFELVL: u32 = USB_OTG_GAHBCFG_TXFELVL_Msk;
pub const USB_OTG_GAHBCFG_PTXFELVL_Pos: u32 = 8;
pub const USB_OTG_GAHBCFG_PTXFELVL_Msk: u32 = 0x1 << USB_OTG_GAHBCFG_PTXFELVL_Pos;
pub const USB_OTG_GAHBCFG_PTXFELVL: u32 = USB_OTG_GAHBCFG_PTXFELVL_Msk;
pub const USB_OTG_GUSBCFG_TOCAL_Pos: u32 = 0;
pub const USB_OTG_GUSBCFG_TOCAL_Msk: u32 = 0x7 << USB_OTG_GUSBCFG_TOCAL_Pos;
pub const USB_OTG_GUSBCFG_TOCAL: u32 = USB_OTG_GUSBCFG_TOCAL_Msk;
pub const USB_OTG_GUSBCFG_TOCAL_0: u32 = 0x1 << USB_OTG_GUSBCFG_TOCAL_Pos;
pub const USB_OTG_GUSBCFG_TOCAL_1: u32 = 0x2 << USB_OTG_GUSBCFG_TOCAL_Pos;
pub const USB_OTG_GUSBCFG_TOCAL_2: u32 = 0x4 << USB_OTG_GUSBCFG_TOCAL_Pos;
pub const USB_OTG_GUSBCFG_PHYSEL_Pos: u32 = 6;
pub const USB_OTG_GUSBCFG_PHYSEL_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_PHYSEL_Pos;
pub const USB_OTG_GUSBCFG_PHYSEL: u32 = USB_OTG_GUSBCFG_PHYSEL_Msk;
pub const USB_OTG_GUSBCFG_SRPCAP_Pos: u32 = 8;
pub const USB_OTG_GUSBCFG_SRPCAP_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_SRPCAP_Pos;
pub const USB_OTG_GUSBCFG_SRPCAP: u32 = USB_OTG_GUSBCFG_SRPCAP_Msk;
pub const USB_OTG_GUSBCFG_HNPCAP_Pos: u32 = 9;
pub const USB_OTG_GUSBCFG_HNPCAP_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_HNPCAP_Pos;
pub const USB_OTG_GUSBCFG_HNPCAP: u32 = USB_OTG_GUSBCFG_HNPCAP_Msk;
pub const USB_OTG_GUSBCFG_TRDT_Pos: u32 = 10;
pub const USB_OTG_GUSBCFG_TRDT_Msk: u32 = 0xF << USB_OTG_GUSBCFG_TRDT_Pos;
pub const USB_OTG_GUSBCFG_TRDT: u32 = USB_OTG_GUSBCFG_TRDT_Msk;
pub const USB_OTG_GUSBCFG_TRDT_0: u32 = 0x1 << USB_OTG_GUSBCFG_TRDT_Pos;
pub const USB_OTG_GUSBCFG_TRDT_1: u32 = 0x2 << USB_OTG_GUSBCFG_TRDT_Pos;
pub const USB_OTG_GUSBCFG_TRDT_2: u32 = 0x4 << USB_OTG_GUSBCFG_TRDT_Pos;
pub const USB_OTG_GUSBCFG_TRDT_3: u32 = 0x8 << USB_OTG_GUSBCFG_TRDT_Pos;
pub const USB_OTG_GUSBCFG_PHYLPCS_Pos: u32 = 15;
pub const USB_OTG_GUSBCFG_PHYLPCS_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_PHYLPCS_Pos;
pub const USB_OTG_GUSBCFG_PHYLPCS: u32 = USB_OTG_GUSBCFG_PHYLPCS_Msk;
pub const USB_OTG_GUSBCFG_ULPIFSLS_Pos: u32 = 17;
pub const USB_OTG_GUSBCFG_ULPIFSLS_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_ULPIFSLS_Pos;
pub const USB_OTG_GUSBCFG_ULPIFSLS: u32 = USB_OTG_GUSBCFG_ULPIFSLS_Msk;
pub const USB_OTG_GUSBCFG_ULPIAR_Pos: u32 = 18;
pub const USB_OTG_GUSBCFG_ULPIAR_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_ULPIAR_Pos;
pub const USB_OTG_GUSBCFG_ULPIAR: u32 = USB_OTG_GUSBCFG_ULPIAR_Msk;
pub const USB_OTG_GUSBCFG_ULPICSM_Pos: u32 = 19;
pub const USB_OTG_GUSBCFG_ULPICSM_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_ULPICSM_Pos;
pub const USB_OTG_GUSBCFG_ULPICSM: u32 = USB_OTG_GUSBCFG_ULPICSM_Msk;
pub const USB_OTG_GUSBCFG_ULPIEVBUSD_Pos: u32 = 20;
pub const USB_OTG_GUSBCFG_ULPIEVBUSD_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_ULPIEVBUSD_Pos;
pub const USB_OTG_GUSBCFG_ULPIEVBUSD: u32 = USB_OTG_GUSBCFG_ULPIEVBUSD_Msk;
pub const USB_OTG_GUSBCFG_ULPIEVBUSI_Pos: u32 = 21;
pub const USB_OTG_GUSBCFG_ULPIEVBUSI_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_ULPIEVBUSI_Pos;
pub const USB_OTG_GUSBCFG_ULPIEVBUSI: u32 = USB_OTG_GUSBCFG_ULPIEVBUSI_Msk;
pub const USB_OTG_GUSBCFG_TSDPS_Pos: u32 = 22;
pub const USB_OTG_GUSBCFG_TSDPS_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_TSDPS_Pos;
pub const USB_OTG_GUSBCFG_TSDPS: u32 = USB_OTG_GUSBCFG_TSDPS_Msk;
pub const USB_OTG_GUSBCFG_PCCI_Pos: u32 = 23;
pub const USB_OTG_GUSBCFG_PCCI_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_PCCI_Pos;
pub const USB_OTG_GUSBCFG_PCCI: u32 = USB_OTG_GUSBCFG_PCCI_Msk;
pub const USB_OTG_GUSBCFG_PTCI_Pos: u32 = 24;
pub const USB_OTG_GUSBCFG_PTCI_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_PTCI_Pos;
pub const USB_OTG_GUSBCFG_PTCI: u32 = USB_OTG_GUSBCFG_PTCI_Msk;
pub const USB_OTG_GUSBCFG_ULPIIPD_Pos: u32 = 25;
pub const USB_OTG_GUSBCFG_ULPIIPD_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_ULPIIPD_Pos;
pub const USB_OTG_GUSBCFG_ULPIIPD: u32 = USB_OTG_GUSBCFG_ULPIIPD_Msk;
pub const USB_OTG_GUSBCFG_FHMOD_Pos: u32 = 29;
pub const USB_OTG_GUSBCFG_FHMOD_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_FHMOD_Pos;
pub const USB_OTG_GUSBCFG_FHMOD: u32 = USB_OTG_GUSBCFG_FHMOD_Msk;
pub const USB_OTG_GUSBCFG_FDMOD_Pos: u32 = 30;
pub const USB_OTG_GUSBCFG_FDMOD_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_FDMOD_Pos;
pub const USB_OTG_GUSBCFG_FDMOD: u32 = USB_OTG_GUSBCFG_FDMOD_Msk;
pub const USB_OTG_GUSBCFG_CTXPKT_Pos: u32 = 31;
pub const USB_OTG_GUSBCFG_CTXPKT_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_CTXPKT_Pos;
pub const USB_OTG_GUSBCFG_CTXPKT: u32 = USB_OTG_GUSBCFG_CTXPKT_Msk;
pub const USB_OTG_GRSTCTL_CSRST_Pos: u32 = 0;
pub const USB_OTG_GRSTCTL_CSRST_Msk: u32 = 0x1 << USB_OTG_GRSTCTL_CSRST_Pos;
pub const USB_OTG_GRSTCTL_CSRST: u32 = USB_OTG_GRSTCTL_CSRST_Msk;
pub const USB_OTG_GRSTCTL_HSRST_Pos: u32 = 1;
pub const USB_OTG_GRSTCTL_HSRST_Msk: u32 = 0x1 << USB_OTG_GRSTCTL_HSRST_Pos;
pub const USB_OTG_GRSTCTL_HSRST: u32 = USB_OTG_GRSTCTL_HSRST_Msk;
pub const USB_OTG_GRSTCTL_FCRST_Pos: u32 = 2;
pub const USB_OTG_GRSTCTL_FCRST_Msk: u32 = 0x1 << USB_OTG_GRSTCTL_FCRST_Pos;
pub const USB_OTG_GRSTCTL_FCRST: u32 = USB_OTG_GRSTCTL_FCRST_Msk;
pub const USB_OTG_GRSTCTL_RXFFLSH_Pos: u32 = 4;
pub const USB_OTG_GRSTCTL_RXFFLSH_Msk: u32 = 0x1 << USB_OTG_GRSTCTL_RXFFLSH_Pos;
pub const USB_OTG_GRSTCTL_RXFFLSH: u32 = USB_OTG_GRSTCTL_RXFFLSH_Msk;
pub const USB_OTG_GRSTCTL_TXFFLSH_Pos: u32 = 5;
pub const USB_OTG_GRSTCTL_TXFFLSH_Msk: u32 = 0x1 << USB_OTG_GRSTCTL_TXFFLSH_Pos;
pub const USB_OTG_GRSTCTL_TXFFLSH: u32 = USB_OTG_GRSTCTL_TXFFLSH_Msk;
pub const USB_OTG_GRSTCTL_TXFNUM_Pos: u32 = 6;
pub const USB_OTG_GRSTCTL_TXFNUM_Msk: u32 = 0x1F << USB_OTG_GRSTCTL_TXFNUM_Pos;
pub const USB_OTG_GRSTCTL_TXFNUM: u32 = USB_OTG_GRSTCTL_TXFNUM_Msk;
pub const USB_OTG_GRSTCTL_TXFNUM_0: u32 = 0x01 << USB_OTG_GRSTCTL_TXFNUM_Pos;
pub const USB_OTG_GRSTCTL_TXFNUM_1: u32 = 0x02 << USB_OTG_GRSTCTL_TXFNUM_Pos;
pub const USB_OTG_GRSTCTL_TXFNUM_2: u32 = 0x04 << USB_OTG_GRSTCTL_TXFNUM_Pos;
pub const USB_OTG_GRSTCTL_TXFNUM_3: u32 = 0x08 << USB_OTG_GRSTCTL_TXFNUM_Pos;
pub const USB_OTG_GRSTCTL_TXFNUM_4: u32 = 0x10 << USB_OTG_GRSTCTL_TXFNUM_Pos;
pub const USB_OTG_GRSTCTL_DMAREQ_Pos: u32 = 30;
pub const USB_OTG_GRSTCTL_DMAREQ_Msk: u32 = 0x1 << USB_OTG_GRSTCTL_DMAREQ_Pos;
pub const USB_OTG_GRSTCTL_DMAREQ: u32 = USB_OTG_GRSTCTL_DMAREQ_Msk;
pub const USB_OTG_GRSTCTL_AHBIDL_Pos: u32 = 31;
pub const USB_OTG_GRSTCTL_AHBIDL_Msk: u32 = 0x1 << USB_OTG_GRSTCTL_AHBIDL_Pos;
pub const USB_OTG_GRSTCTL_AHBIDL: u32 = USB_OTG_GRSTCTL_AHBIDL_Msk;
pub const USB_OTG_DIEPMSK_XFRCM_Pos: u32 = 0;
pub const USB_OTG_DIEPMSK_XFRCM_Msk: u32 = 0x1 << USB_OTG_DIEPMSK_XFRCM_Pos;
pub const USB_OTG_DIEPMSK_XFRCM: u32 = USB_OTG_DIEPMSK_XFRCM_Msk;
pub const USB_OTG_DIEPMSK_EPDM_Pos: u32 = 1;
pub const USB_OTG_DIEPMSK_EPDM_Msk: u32 = 0x1 << USB_OTG_DIEPMSK_EPDM_Pos;
pub const USB_OTG_DIEPMSK_EPDM: u32 = USB_OTG_DIEPMSK_EPDM_Msk;
pub const USB_OTG_DIEPMSK_TOM_Pos: u32 = 3;
pub const USB_OTG_DIEPMSK_TOM_Msk: u32 = 0x1 << USB_OTG_DIEPMSK_TOM_Pos;
pub const USB_OTG_DIEPMSK_TOM: u32 = USB_OTG_DIEPMSK_TOM_Msk;
pub const USB_OTG_DIEPMSK_ITTXFEMSK_Pos: u32 = 4;
pub const USB_OTG_DIEPMSK_ITTXFEMSK_Msk: u32 = 0x1 << USB_OTG_DIEPMSK_ITTXFEMSK_Pos;
pub const USB_OTG_DIEPMSK_ITTXFEMSK: u32 = USB_OTG_DIEPMSK_ITTXFEMSK_Msk;
pub const USB_OTG_DIEPMSK_INEPNMM_Pos: u32 = 5;
pub const USB_OTG_DIEPMSK_INEPNMM_Msk: u32 = 0x1 << USB_OTG_DIEPMSK_INEPNMM_Pos;
pub const USB_OTG_DIEPMSK_INEPNMM: u32 = USB_OTG_DIEPMSK_INEPNMM_Msk;
pub const USB_OTG_DIEPMSK_INEPNEM_Pos: u32 = 6;
pub const USB_OTG_DIEPMSK_INEPNEM_Msk: u32 = 0x1 << USB_OTG_DIEPMSK_INEPNEM_Pos;
pub const USB_OTG_DIEPMSK_INEPNEM: u32 = USB_OTG_DIEPMSK_INEPNEM_Msk;
pub const USB_OTG_DIEPMSK_TXFURM_Pos: u32 = 8;
pub const USB_OTG_DIEPMSK_TXFURM_Msk: u32 = 0x1 << USB_OTG_DIEPMSK_TXFURM_Pos;
pub const USB_OTG_DIEPMSK_TXFURM: u32 = USB_OTG_DIEPMSK_TXFURM_Msk;
pub const USB_OTG_DIEPMSK_BIM_Pos: u32 = 9;
pub const USB_OTG_DIEPMSK_BIM_Msk: u32 = 0x1 << USB_OTG_DIEPMSK_BIM_Pos;
pub const USB_OTG_DIEPMSK_BIM: u32 = USB_OTG_DIEPMSK_BIM_Msk;
pub const USB_OTG_HPTXSTS_PTXFSAVL_Pos: u32 = 0;
pub const USB_OTG_HPTXSTS_PTXFSAVL_Msk: u32 = 0xFFFF << USB_OTG_HPTXSTS_PTXFSAVL_Pos;
pub const USB_OTG_HPTXSTS_PTXFSAVL: u32 = USB_OTG_HPTXSTS_PTXFSAVL_Msk;
pub const USB_OTG_HPTXSTS_PTXQSAV_Pos: u32 = 16;
pub const USB_OTG_HPTXSTS_PTXQSAV_Msk: u32 = 0xFF << USB_OTG_HPTXSTS_PTXQSAV_Pos;
pub const USB_OTG_HPTXSTS_PTXQSAV: u32 = USB_OTG_HPTXSTS_PTXQSAV_Msk;
pub const USB_OTG_HPTXSTS_PTXQSAV_0: u32 = 0x01 << USB_OTG_HPTXSTS_PTXQSAV_Pos;
pub const USB_OTG_HPTXSTS_PTXQSAV_1: u32 = 0x02 << USB_OTG_HPTXSTS_PTXQSAV_Pos;
pub const USB_OTG_HPTXSTS_PTXQSAV_2: u32 = 0x04 << USB_OTG_HPTXSTS_PTXQSAV_Pos;
pub const USB_OTG_HPTXSTS_PTXQSAV_3: u32 = 0x08 << USB_OTG_HPTXSTS_PTXQSAV_Pos;
pub const USB_OTG_HPTXSTS_PTXQSAV_4: u32 = 0x10 << USB_OTG_HPTXSTS_PTXQSAV_Pos;
pub const USB_OTG_HPTXSTS_PTXQSAV_5: u32 = 0x20 << USB_OTG_HPTXSTS_PTXQSAV_Pos;
pub const USB_OTG_HPTXSTS_PTXQSAV_6: u32 = 0x40 << USB_OTG_HPTXSTS_PTXQSAV_Pos;
pub const USB_OTG_HPTXSTS_PTXQSAV_7: u32 = 0x80 << USB_OTG_HPTXSTS_PTXQSAV_Pos;
pub const USB_OTG_HPTXSTS_PTXQTOP_Pos: u32 = 24;
pub const USB_OTG_HPTXSTS_PTXQTOP_Msk: u32 = 0xFF << USB_OTG_HPTXSTS_PTXQTOP_Pos;
pub const USB_OTG_HPTXSTS_PTXQTOP: u32 = USB_OTG_HPTXSTS_PTXQTOP_Msk;
pub const USB_OTG_HPTXSTS_PTXQTOP_0: u32 = 0x01 << USB_OTG_HPTXSTS_PTXQTOP_Pos;
pub const USB_OTG_HPTXSTS_PTXQTOP_1: u32 = 0x02 << USB_OTG_HPTXSTS_PTXQTOP_Pos;
pub const USB_OTG_HPTXSTS_PTXQTOP_2: u32 = 0x04 << USB_OTG_HPTXSTS_PTXQTOP_Pos;
pub const USB_OTG_HPTXSTS_PTXQTOP_3: u32 = 0x08 << USB_OTG_HPTXSTS_PTXQTOP_Pos;
pub const USB_OTG_HPTXSTS_PTXQTOP_4: u32 = 0x10 << USB_OTG_HPTXSTS_PTXQTOP_Pos;
pub const USB_OTG_HPTXSTS_PTXQTOP_5: u32 = 0x20 << USB_OTG_HPTXSTS_PTXQTOP_Pos;
pub const USB_OTG_HPTXSTS_PTXQTOP_6: u32 = 0x40 << USB_OTG_HPTXSTS_PTXQTOP_Pos;
pub const USB_OTG_HPTXSTS_PTXQTOP_7: u32 = 0x80 << USB_OTG_HPTXSTS_PTXQTOP_Pos;
pub const USB_OTG_HAINT_HAINT_Pos: u32 = 0;
pub const USB_OTG_HAINT_HAINT_Msk: u32 = 0xFFFF << USB_OTG_HAINT_HAINT_Pos;
pub const USB_OTG_HAINT_HAINT: u32 = USB_OTG_HAINT_HAINT_Msk;
pub const USB_OTG_DOEPMSK_XFRCM_Pos: u32 = 0;
pub const USB_OTG_DOEPMSK_XFRCM_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_XFRCM_Pos;
pub const USB_OTG_DOEPMSK_XFRCM: u32 = USB_OTG_DOEPMSK_XFRCM_Msk;
pub const USB_OTG_DOEPMSK_EPDM_Pos: u32 = 1;
pub const USB_OTG_DOEPMSK_EPDM_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_EPDM_Pos;
pub const USB_OTG_DOEPMSK_EPDM: u32 = USB_OTG_DOEPMSK_EPDM_Msk;
pub const USB_OTG_DOEPMSK_AHBERRM_Pos: u32 = 2;
pub const USB_OTG_DOEPMSK_AHBERRM_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_AHBERRM_Pos;
pub const USB_OTG_DOEPMSK_AHBERRM: u32 = USB_OTG_DOEPMSK_AHBERRM_Msk;
pub const USB_OTG_DOEPMSK_STUPM_Pos: u32 = 3;
pub const USB_OTG_DOEPMSK_STUPM_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_STUPM_Pos;
pub const USB_OTG_DOEPMSK_STUPM: u32 = USB_OTG_DOEPMSK_STUPM_Msk;
pub const USB_OTG_DOEPMSK_OTEPDM_Pos: u32 = 4;
pub const USB_OTG_DOEPMSK_OTEPDM_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_OTEPDM_Pos;
pub const USB_OTG_DOEPMSK_OTEPDM: u32 = USB_OTG_DOEPMSK_OTEPDM_Msk;
pub const USB_OTG_DOEPMSK_OTEPSPRM_Pos: u32 = 5;
pub const USB_OTG_DOEPMSK_OTEPSPRM_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_OTEPSPRM_Pos;
pub const USB_OTG_DOEPMSK_OTEPSPRM: u32 = USB_OTG_DOEPMSK_OTEPSPRM_Msk;
pub const USB_OTG_DOEPMSK_B2BSTUP_Pos: u32 = 6;
pub const USB_OTG_DOEPMSK_B2BSTUP_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_B2BSTUP_Pos;
pub const USB_OTG_DOEPMSK_B2BSTUP: u32 = USB_OTG_DOEPMSK_B2BSTUP_Msk;
pub const USB_OTG_DOEPMSK_OPEM_Pos: u32 = 8;
pub const USB_OTG_DOEPMSK_OPEM_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_OPEM_Pos;
pub const USB_OTG_DOEPMSK_OPEM: u32 = USB_OTG_DOEPMSK_OPEM_Msk;
pub const USB_OTG_DOEPMSK_BOIM_Pos: u32 = 9;
pub const USB_OTG_DOEPMSK_BOIM_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_BOIM_Pos;
pub const USB_OTG_DOEPMSK_BOIM: u32 = USB_OTG_DOEPMSK_BOIM_Msk;
pub const USB_OTG_DOEPMSK_BERRM_Pos: u32 = 12;
pub const USB_OTG_DOEPMSK_BERRM_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_BERRM_Pos;
pub const USB_OTG_DOEPMSK_BERRM: u32 = USB_OTG_DOEPMSK_BERRM_Msk;
pub const USB_OTG_DOEPMSK_NAKM_Pos: u32 = 13;
pub const USB_OTG_DOEPMSK_NAKM_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_NAKM_Pos;
pub const USB_OTG_DOEPMSK_NAKM: u32 = USB_OTG_DOEPMSK_NAKM_Msk;
pub const USB_OTG_DOEPMSK_NYETM_Pos: u32 = 14;
pub const USB_OTG_DOEPMSK_NYETM_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_NYETM_Pos;
pub const USB_OTG_DOEPMSK_NYETM: u32 = USB_OTG_DOEPMSK_NYETM_Msk;
pub const USB_OTG_GINTSTS_CMOD_Pos: u32 = 0;
pub const USB_OTG_GINTSTS_CMOD_Msk: u32 = 0x1 << USB_OTG_GINTSTS_CMOD_Pos;
pub const USB_OTG_GINTSTS_CMOD: u32 = USB_OTG_GINTSTS_CMOD_Msk;
pub const USB_OTG_GINTSTS_MMIS_Pos: u32 = 1;
pub const USB_OTG_GINTSTS_MMIS_Msk: u32 = 0x1 << USB_OTG_GINTSTS_MMIS_Pos;
pub const USB_OTG_GINTSTS_MMIS: u32 = USB_OTG_GINTSTS_MMIS_Msk;
pub const USB_OTG_GINTSTS_OTGINT_Pos: u32 = 2;
pub const USB_OTG_GINTSTS_OTGINT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_OTGINT_Pos;
pub const USB_OTG_GINTSTS_OTGINT: u32 = USB_OTG_GINTSTS_OTGINT_Msk;
pub const USB_OTG_GINTSTS_SOF_Pos: u32 = 3;
pub const USB_OTG_GINTSTS_SOF_Msk: u32 = 0x1 << USB_OTG_GINTSTS_SOF_Pos;
pub const USB_OTG_GINTSTS_SOF: u32 = USB_OTG_GINTSTS_SOF_Msk;
pub const USB_OTG_GINTSTS_RXFLVL_Pos: u32 = 4;
pub const USB_OTG_GINTSTS_RXFLVL_Msk: u32 = 0x1 << USB_OTG_GINTSTS_RXFLVL_Pos;
pub const USB_OTG_GINTSTS_RXFLVL: u32 = USB_OTG_GINTSTS_RXFLVL_Msk;
pub const USB_OTG_GINTSTS_NPTXFE_Pos: u32 = 5;
pub const USB_OTG_GINTSTS_NPTXFE_Msk: u32 = 0x1 << USB_OTG_GINTSTS_NPTXFE_Pos;
pub const USB_OTG_GINTSTS_NPTXFE: u32 = USB_OTG_GINTSTS_NPTXFE_Msk;
pub const USB_OTG_GINTSTS_GINAKEFF_Pos: u32 = 6;
pub const USB_OTG_GINTSTS_GINAKEFF_Msk: u32 = 0x1 << USB_OTG_GINTSTS_GINAKEFF_Pos;
pub const USB_OTG_GINTSTS_GINAKEFF: u32 = USB_OTG_GINTSTS_GINAKEFF_Msk;
pub const USB_OTG_GINTSTS_BOUTNAKEFF_Pos: u32 = 7;
pub const USB_OTG_GINTSTS_BOUTNAKEFF_Msk: u32 = 0x1 << USB_OTG_GINTSTS_BOUTNAKEFF_Pos;
pub const USB_OTG_GINTSTS_BOUTNAKEFF: u32 = USB_OTG_GINTSTS_BOUTNAKEFF_Msk;
pub const USB_OTG_GINTSTS_ESUSP_Pos: u32 = 10;
pub const USB_OTG_GINTSTS_ESUSP_Msk: u32 = 0x1 << USB_OTG_GINTSTS_ESUSP_Pos;
pub const USB_OTG_GINTSTS_ESUSP: u32 = USB_OTG_GINTSTS_ESUSP_Msk;
pub const USB_OTG_GINTSTS_USBSUSP_Pos: u32 = 11;
pub const USB_OTG_GINTSTS_USBSUSP_Msk: u32 = 0x1 << USB_OTG_GINTSTS_USBSUSP_Pos;
pub const USB_OTG_GINTSTS_USBSUSP: u32 = USB_OTG_GINTSTS_USBSUSP_Msk;
pub const USB_OTG_GINTSTS_USBRST_Pos: u32 = 12;
pub const USB_OTG_GINTSTS_USBRST_Msk: u32 = 0x1 << USB_OTG_GINTSTS_USBRST_Pos;
pub const USB_OTG_GINTSTS_USBRST: u32 = USB_OTG_GINTSTS_USBRST_Msk;
pub const USB_OTG_GINTSTS_ENUMDNE_Pos: u32 = 13;
pub const USB_OTG_GINTSTS_ENUMDNE_Msk: u32 = 0x1 << USB_OTG_GINTSTS_ENUMDNE_Pos;
pub const USB_OTG_GINTSTS_ENUMDNE: u32 = USB_OTG_GINTSTS_ENUMDNE_Msk;
pub const USB_OTG_GINTSTS_ISOODRP_Pos: u32 = 14;
pub const USB_OTG_GINTSTS_ISOODRP_Msk: u32 = 0x1 << USB_OTG_GINTSTS_ISOODRP_Pos;
pub const USB_OTG_GINTSTS_ISOODRP: u32 = USB_OTG_GINTSTS_ISOODRP_Msk;
pub const USB_OTG_GINTSTS_EOPF_Pos: u32 = 15;
pub const USB_OTG_GINTSTS_EOPF_Msk: u32 = 0x1 << USB_OTG_GINTSTS_EOPF_Pos;
pub const USB_OTG_GINTSTS_EOPF: u32 = USB_OTG_GINTSTS_EOPF_Msk;
pub const USB_OTG_GINTSTS_IEPINT_Pos: u32 = 18;
pub const USB_OTG_GINTSTS_IEPINT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_IEPINT_Pos;
pub const USB_OTG_GINTSTS_IEPINT: u32 = USB_OTG_GINTSTS_IEPINT_Msk;
pub const USB_OTG_GINTSTS_OEPINT_Pos: u32 = 19;
pub const USB_OTG_GINTSTS_OEPINT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_OEPINT_Pos;
pub const USB_OTG_GINTSTS_OEPINT: u32 = USB_OTG_GINTSTS_OEPINT_Msk;
pub const USB_OTG_GINTSTS_IISOIXFR_Pos: u32 = 20;
pub const USB_OTG_GINTSTS_IISOIXFR_Msk: u32 = 0x1 << USB_OTG_GINTSTS_IISOIXFR_Pos;
pub const USB_OTG_GINTSTS_IISOIXFR: u32 = USB_OTG_GINTSTS_IISOIXFR_Msk;
pub const USB_OTG_GINTSTS_PXFR_INCOMPISOOUT_Pos: u32 = 21;
pub const USB_OTG_GINTSTS_PXFR_INCOMPISOOUT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_PXFR_INCOMPISOOUT_Pos;
pub const USB_OTG_GINTSTS_PXFR_INCOMPISOOUT: u32 = USB_OTG_GINTSTS_PXFR_INCOMPISOOUT_Msk;
pub const USB_OTG_GINTSTS_DATAFSUSP_Pos: u32 = 22;
pub const USB_OTG_GINTSTS_DATAFSUSP_Msk: u32 = 0x1 << USB_OTG_GINTSTS_DATAFSUSP_Pos;
pub const USB_OTG_GINTSTS_DATAFSUSP: u32 = USB_OTG_GINTSTS_DATAFSUSP_Msk;
pub const USB_OTG_GINTSTS_RSTDET_Pos: u32 = 23;
pub const USB_OTG_GINTSTS_RSTDET_Msk: u32 = 0x1 << USB_OTG_GINTSTS_RSTDET_Pos;
pub const USB_OTG_GINTSTS_RSTDET: u32 = USB_OTG_GINTSTS_RSTDET_Msk;
pub const USB_OTG_GINTSTS_HPRTINT_Pos: u32 = 24;
pub const USB_OTG_GINTSTS_HPRTINT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_HPRTINT_Pos;
pub const USB_OTG_GINTSTS_HPRTINT: u32 = USB_OTG_GINTSTS_HPRTINT_Msk;
pub const USB_OTG_GINTSTS_HCINT_Pos: u32 = 25;
pub const USB_OTG_GINTSTS_HCINT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_HCINT_Pos;
pub const USB_OTG_GINTSTS_HCINT: u32 = USB_OTG_GINTSTS_HCINT_Msk;
pub const USB_OTG_GINTSTS_PTXFE_Pos: u32 = 26;
pub const USB_OTG_GINTSTS_PTXFE_Msk: u32 = 0x1 << USB_OTG_GINTSTS_PTXFE_Pos;
pub const USB_OTG_GINTSTS_PTXFE: u32 = USB_OTG_GINTSTS_PTXFE_Msk;
pub const USB_OTG_GINTSTS_LPMINT_Pos: u32 = 27;
pub const USB_OTG_GINTSTS_LPMINT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_LPMINT_Pos;
pub const USB_OTG_GINTSTS_LPMINT: u32 = USB_OTG_GINTSTS_LPMINT_Msk;
pub const USB_OTG_GINTSTS_CIDSCHG_Pos: u32 = 28;
pub const USB_OTG_GINTSTS_CIDSCHG_Msk: u32 = 0x1 << USB_OTG_GINTSTS_CIDSCHG_Pos;
pub const USB_OTG_GINTSTS_CIDSCHG: u32 = USB_OTG_GINTSTS_CIDSCHG_Msk;
pub const USB_OTG_GINTSTS_DISCINT_Pos: u32 = 29;
pub const USB_OTG_GINTSTS_DISCINT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_DISCINT_Pos;
pub const USB_OTG_GINTSTS_DISCINT: u32 = USB_OTG_GINTSTS_DISCINT_Msk;
pub const USB_OTG_GINTSTS_SRQINT_Pos: u32 = 30;
pub const USB_OTG_GINTSTS_SRQINT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_SRQINT_Pos;
pub const USB_OTG_GINTSTS_SRQINT: u32 = USB_OTG_GINTSTS_SRQINT_Msk;
pub const USB_OTG_GINTSTS_WKUINT_Pos: u32 = 31;
pub const USB_OTG_GINTSTS_WKUINT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_WKUINT_Pos;
pub const USB_OTG_GINTSTS_WKUINT: u32 = USB_OTG_GINTSTS_WKUINT_Msk;
pub const USB_OTG_GINTMSK_MMISM_Pos: u32 = 1;
pub const USB_OTG_GINTMSK_MMISM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_MMISM_Pos;
pub const USB_OTG_GINTMSK_MMISM: u32 = USB_OTG_GINTMSK_MMISM_Msk;
pub const USB_OTG_GINTMSK_OTGINT_Pos: u32 = 2;
pub const USB_OTG_GINTMSK_OTGINT_Msk: u32 = 0x1 << USB_OTG_GINTMSK_OTGINT_Pos;
pub const USB_OTG_GINTMSK_OTGINT: u32 = USB_OTG_GINTMSK_OTGINT_Msk;
pub const USB_OTG_GINTMSK_SOFM_Pos: u32 = 3;
pub const USB_OTG_GINTMSK_SOFM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_SOFM_Pos;
pub const USB_OTG_GINTMSK_SOFM: u32 = USB_OTG_GINTMSK_SOFM_Msk;
pub const USB_OTG_GINTMSK_RXFLVLM_Pos: u32 = 4;
pub const USB_OTG_GINTMSK_RXFLVLM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_RXFLVLM_Pos;
pub const USB_OTG_GINTMSK_RXFLVLM: u32 = USB_OTG_GINTMSK_RXFLVLM_Msk;
pub const USB_OTG_GINTMSK_NPTXFEM_Pos: u32 = 5;
pub const USB_OTG_GINTMSK_NPTXFEM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_NPTXFEM_Pos;
pub const USB_OTG_GINTMSK_NPTXFEM: u32 = USB_OTG_GINTMSK_NPTXFEM_Msk;
pub const USB_OTG_GINTMSK_GINAKEFFM_Pos: u32 = 6;
pub const USB_OTG_GINTMSK_GINAKEFFM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_GINAKEFFM_Pos;
pub const USB_OTG_GINTMSK_GINAKEFFM: u32 = USB_OTG_GINTMSK_GINAKEFFM_Msk;
pub const USB_OTG_GINTMSK_GONAKEFFM_Pos: u32 = 7;
pub const USB_OTG_GINTMSK_GONAKEFFM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_GONAKEFFM_Pos;
pub const USB_OTG_GINTMSK_GONAKEFFM: u32 = USB_OTG_GINTMSK_GONAKEFFM_Msk;
pub const USB_OTG_GINTMSK_ESUSPM_Pos: u32 = 10;
pub const USB_OTG_GINTMSK_ESUSPM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_ESUSPM_Pos;
pub const USB_OTG_GINTMSK_ESUSPM: u32 = USB_OTG_GINTMSK_ESUSPM_Msk;
pub const USB_OTG_GINTMSK_USBSUSPM_Pos: u32 = 11;
pub const USB_OTG_GINTMSK_USBSUSPM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_USBSUSPM_Pos;
pub const USB_OTG_GINTMSK_USBSUSPM: u32 = USB_OTG_GINTMSK_USBSUSPM_Msk;
pub const USB_OTG_GINTMSK_USBRST_Pos: u32 = 12;
pub const USB_OTG_GINTMSK_USBRST_Msk: u32 = 0x1 << USB_OTG_GINTMSK_USBRST_Pos;
pub const USB_OTG_GINTMSK_USBRST: u32 = USB_OTG_GINTMSK_USBRST_Msk;
pub const USB_OTG_GINTMSK_ENUMDNEM_Pos: u32 = 13;
pub const USB_OTG_GINTMSK_ENUMDNEM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_ENUMDNEM_Pos;
pub const USB_OTG_GINTMSK_ENUMDNEM: u32 = USB_OTG_GINTMSK_ENUMDNEM_Msk;
pub const USB_OTG_GINTMSK_ISOODRPM_Pos: u32 = 14;
pub const USB_OTG_GINTMSK_ISOODRPM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_ISOODRPM_Pos;
pub const USB_OTG_GINTMSK_ISOODRPM: u32 = USB_OTG_GINTMSK_ISOODRPM_Msk;
pub const USB_OTG_GINTMSK_EOPFM_Pos: u32 = 15;
pub const USB_OTG_GINTMSK_EOPFM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_EOPFM_Pos;
pub const USB_OTG_GINTMSK_EOPFM: u32 = USB_OTG_GINTMSK_EOPFM_Msk;
pub const USB_OTG_GINTMSK_EPMISM_Pos: u32 = 17;
pub const USB_OTG_GINTMSK_EPMISM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_EPMISM_Pos;
pub const USB_OTG_GINTMSK_EPMISM: u32 = USB_OTG_GINTMSK_EPMISM_Msk;
pub const USB_OTG_GINTMSK_IEPINT_Pos: u32 = 18;
pub const USB_OTG_GINTMSK_IEPINT_Msk: u32 = 0x1 << USB_OTG_GINTMSK_IEPINT_Pos;
pub const USB_OTG_GINTMSK_IEPINT: u32 = USB_OTG_GINTMSK_IEPINT_Msk;
pub const USB_OTG_GINTMSK_OEPINT_Pos: u32 = 19;
pub const USB_OTG_GINTMSK_OEPINT_Msk: u32 = 0x1 << USB_OTG_GINTMSK_OEPINT_Pos;
pub const USB_OTG_GINTMSK_OEPINT: u32 = USB_OTG_GINTMSK_OEPINT_Msk;
pub const USB_OTG_GINTMSK_IISOIXFRM_Pos: u32 = 20;
pub const USB_OTG_GINTMSK_IISOIXFRM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_IISOIXFRM_Pos;
pub const USB_OTG_GINTMSK_IISOIXFRM: u32 = USB_OTG_GINTMSK_IISOIXFRM_Msk;
pub const USB_OTG_GINTMSK_PXFRM_IISOOXFRM_Pos: u32 = 21;
pub const USB_OTG_GINTMSK_PXFRM_IISOOXFRM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_PXFRM_IISOOXFRM_Pos;
pub const USB_OTG_GINTMSK_PXFRM_IISOOXFRM: u32 = USB_OTG_GINTMSK_PXFRM_IISOOXFRM_Msk;
pub const USB_OTG_GINTMSK_FSUSPM_Pos: u32 = 22;
pub const USB_OTG_GINTMSK_FSUSPM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_FSUSPM_Pos;
pub const USB_OTG_GINTMSK_FSUSPM: u32 = USB_OTG_GINTMSK_FSUSPM_Msk;
pub const USB_OTG_GINTMSK_RSTDEM_Pos: u32 = 23;
pub const USB_OTG_GINTMSK_RSTDEM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_RSTDEM_Pos;
pub const USB_OTG_GINTMSK_RSTDEM: u32 = USB_OTG_GINTMSK_RSTDEM_Msk;
pub const USB_OTG_GINTMSK_PRTIM_Pos: u32 = 24;
pub const USB_OTG_GINTMSK_PRTIM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_PRTIM_Pos;
pub const USB_OTG_GINTMSK_PRTIM: u32 = USB_OTG_GINTMSK_PRTIM_Msk;
pub const USB_OTG_GINTMSK_HCIM_Pos: u32 = 25;
pub const USB_OTG_GINTMSK_HCIM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_HCIM_Pos;
pub const USB_OTG_GINTMSK_HCIM: u32 = USB_OTG_GINTMSK_HCIM_Msk;
pub const USB_OTG_GINTMSK_PTXFEM_Pos: u32 = 26;
pub const USB_OTG_GINTMSK_PTXFEM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_PTXFEM_Pos;
pub const USB_OTG_GINTMSK_PTXFEM: u32 = USB_OTG_GINTMSK_PTXFEM_Msk;
pub const USB_OTG_GINTMSK_LPMINTM_Pos: u32 = 27;
pub const USB_OTG_GINTMSK_LPMINTM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_LPMINTM_Pos;
pub const USB_OTG_GINTMSK_LPMINTM: u32 = USB_OTG_GINTMSK_LPMINTM_Msk;
pub const USB_OTG_GINTMSK_CIDSCHGM_Pos: u32 = 28;
pub const USB_OTG_GINTMSK_CIDSCHGM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_CIDSCHGM_Pos;
pub const USB_OTG_GINTMSK_CIDSCHGM: u32 = USB_OTG_GINTMSK_CIDSCHGM_Msk;
pub const USB_OTG_GINTMSK_DISCINT_Pos: u32 = 29;
pub const USB_OTG_GINTMSK_DISCINT_Msk: u32 = 0x1 << USB_OTG_GINTMSK_DISCINT_Pos;
pub const USB_OTG_GINTMSK_DISCINT: u32 = USB_OTG_GINTMSK_DISCINT_Msk;
pub const USB_OTG_GINTMSK_SRQIM_Pos: u32 = 30;
pub const USB_OTG_GINTMSK_SRQIM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_SRQIM_Pos;
pub const USB_OTG_GINTMSK_SRQIM: u32 = USB_OTG_GINTMSK_SRQIM_Msk;
pub const USB_OTG_GINTMSK_WUIM_Pos: u32 = 31;
pub const USB_OTG_GINTMSK_WUIM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_WUIM_Pos;
pub const USB_OTG_GINTMSK_WUIM: u32 = USB_OTG_GINTMSK_WUIM_Msk;
pub const USB_OTG_DAINT_IEPINT_Pos: u32 = 0;
pub const USB_OTG_DAINT_IEPINT_Msk: u32 = 0xFFFF << USB_OTG_DAINT_IEPINT_Pos;
pub const USB_OTG_DAINT_IEPINT: u32 = USB_OTG_DAINT_IEPINT_Msk;
pub const USB_OTG_DAINT_OEPINT_Pos: u32 = 16;
pub const USB_OTG_DAINT_OEPINT_Msk: u32 = 0xFFFF << USB_OTG_DAINT_OEPINT_Pos;
pub const USB_OTG_DAINT_OEPINT: u32 = USB_OTG_DAINT_OEPINT_Msk;
pub const USB_OTG_HAINTMSK_HAINTM_Pos: u32 = 0;
pub const USB_OTG_HAINTMSK_HAINTM_Msk: u32 = 0xFFFF << USB_OTG_HAINTMSK_HAINTM_Pos;
pub const USB_OTG_HAINTMSK_HAINTM: u32 = USB_OTG_HAINTMSK_HAINTM_Msk;
pub const USB_OTG_GRXSTSP_EPNUM_Pos: u32 = 0;
pub const USB_OTG_GRXSTSP_EPNUM_Msk: u32 = 0xF << USB_OTG_GRXSTSP_EPNUM_Pos;
pub const USB_OTG_GRXSTSP_EPNUM: u32 = USB_OTG_GRXSTSP_EPNUM_Msk;
pub const USB_OTG_GRXSTSP_BCNT_Pos: u32 = 4;
pub const USB_OTG_GRXSTSP_BCNT_Msk: u32 = 0x7FF << USB_OTG_GRXSTSP_BCNT_Pos;
pub const USB_OTG_GRXSTSP_BCNT: u32 = USB_OTG_GRXSTSP_BCNT_Msk;
pub const USB_OTG_GRXSTSP_DPID_Pos: u32 = 15;
pub const USB_OTG_GRXSTSP_DPID_Msk: u32 = 0x3 << USB_OTG_GRXSTSP_DPID_Pos;
pub const USB_OTG_GRXSTSP_DPID: u32 = USB_OTG_GRXSTSP_DPID_Msk;
pub const USB_OTG_GRXSTSP_PKTSTS_Pos: u32 = 17;
pub const USB_OTG_GRXSTSP_PKTSTS_Msk: u32 = 0xF << USB_OTG_GRXSTSP_PKTSTS_Pos;
pub const USB_OTG_GRXSTSP_PKTSTS: u32 = USB_OTG_GRXSTSP_PKTSTS_Msk;
pub const USB_OTG_DAINTMSK_IEPM_Pos: u32 = 0;
pub const USB_OTG_DAINTMSK_IEPM_Msk: u32 = 0xFFFF << USB_OTG_DAINTMSK_IEPM_Pos;
pub const USB_OTG_DAINTMSK_IEPM: u32 = USB_OTG_DAINTMSK_IEPM_Msk;
pub const USB_OTG_DAINTMSK_OEPM_Pos: u32 = 16;
pub const USB_OTG_DAINTMSK_OEPM_Msk: u32 = 0xFFFF << USB_OTG_DAINTMSK_OEPM_Pos;
pub const USB_OTG_DAINTMSK_OEPM: u32 = USB_OTG_DAINTMSK_OEPM_Msk;
pub const USB_OTG_CHNUM_Pos: u32 = 0;
pub const USB_OTG_CHNUM_Msk: u32 = 0xF << USB_OTG_CHNUM_Pos;
pub const USB_OTG_CHNUM: u32 = USB_OTG_CHNUM_Msk;
pub const USB_OTG_CHNUM_0: u32 = 0x1 << USB_OTG_CHNUM_Pos;
pub const USB_OTG_CHNUM_1: u32 = 0x2 << USB_OTG_CHNUM_Pos;
pub const USB_OTG_CHNUM_2: u32 = 0x4 << USB_OTG_CHNUM_Pos;
pub const USB_OTG_CHNUM_3: u32 = 0x8 << USB_OTG_CHNUM_Pos;
pub const USB_OTG_BCNT_Pos: u32 = 4;
pub const USB_OTG_BCNT_Msk: u32 = 0x7FF << USB_OTG_BCNT_Pos;
pub const USB_OTG_BCNT: u32 = USB_OTG_BCNT_Msk;
pub const USB_OTG_DPID_Pos: u32 = 15;
pub const USB_OTG_DPID_Msk: u32 = 0x3 << USB_OTG_DPID_Pos;
pub const USB_OTG_DPID: u32 = USB_OTG_DPID_Msk;
pub const USB_OTG_DPID_0: u32 = 0x1 << USB_OTG_DPID_Pos;
pub const USB_OTG_DPID_1: u32 = 0x2 << USB_OTG_DPID_Pos;
pub const USB_OTG_PKTSTS_Pos: u32 = 17;
pub const USB_OTG_PKTSTS_Msk: u32 = 0xF << USB_OTG_PKTSTS_Pos;
pub const USB_OTG_PKTSTS: u32 = USB_OTG_PKTSTS_Msk;
pub const USB_OTG_PKTSTS_0: u32 = 0x1 << USB_OTG_PKTSTS_Pos;
pub const USB_OTG_PKTSTS_1: u32 = 0x2 << USB_OTG_PKTSTS_Pos;
pub const USB_OTG_PKTSTS_2: u32 = 0x4 << USB_OTG_PKTSTS_Pos;
pub const USB_OTG_PKTSTS_3: u32 = 0x8 << USB_OTG_PKTSTS_Pos;
pub const USB_OTG_EPNUM_Pos: u32 = 0;
pub const USB_OTG_EPNUM_Msk: u32 = 0xF << USB_OTG_EPNUM_Pos;
pub const USB_OTG_EPNUM: u32 = USB_OTG_EPNUM_Msk;
pub const USB_OTG_EPNUM_0: u32 = 0x1 << USB_OTG_EPNUM_Pos;
pub const USB_OTG_EPNUM_1: u32 = 0x2 << USB_OTG_EPNUM_Pos;
pub const USB_OTG_EPNUM_2: u32 = 0x4 << USB_OTG_EPNUM_Pos;
pub const USB_OTG_EPNUM_3: u32 = 0x8 << USB_OTG_EPNUM_Pos;
pub const USB_OTG_FRMNUM_Pos: u32 = 21;
pub const USB_OTG_FRMNUM_Msk: u32 = 0xF << USB_OTG_FRMNUM_Pos;
pub const USB_OTG_FRMNUM: u32 = USB_OTG_FRMNUM_Msk;
pub const USB_OTG_FRMNUM_0: u32 = 0x1 << USB_OTG_FRMNUM_Pos;
pub const USB_OTG_FRMNUM_1: u32 = 0x2 << USB_OTG_FRMNUM_Pos;
pub const USB_OTG_FRMNUM_2: u32 = 0x4 << USB_OTG_FRMNUM_Pos;
pub const USB_OTG_FRMNUM_3: u32 = 0x8 << USB_OTG_FRMNUM_Pos;
pub const USB_OTG_GRXFSIZ_RXFD_Pos: u32 = 0;
pub const USB_OTG_GRXFSIZ_RXFD_Msk: u32 = 0xFFFF << USB_OTG_GRXFSIZ_RXFD_Pos;
pub const USB_OTG_GRXFSIZ_RXFD: u32 = USB_OTG_GRXFSIZ_RXFD_Msk;
pub const USB_OTG_DVBUSDIS_VBUSDT_Pos: u32 = 0;
pub const USB_OTG_DVBUSDIS_VBUSDT_Msk: u32 = 0xFFFF << USB_OTG_DVBUSDIS_VBUSDT_Pos;
pub const USB_OTG_DVBUSDIS_VBUSDT: u32 = USB_OTG_DVBUSDIS_VBUSDT_Msk;
pub const USB_OTG_NPTXFSA_Pos: u32 = 0;
pub const USB_OTG_NPTXFSA_Msk: u32 = 0xFFFF << USB_OTG_NPTXFSA_Pos;
pub const USB_OTG_NPTXFSA: u32 = USB_OTG_NPTXFSA_Msk;
pub const USB_OTG_NPTXFD_Pos: u32 = 16;
pub const USB_OTG_NPTXFD_Msk: u32 = 0xFFFF << USB_OTG_NPTXFD_Pos;
pub const USB_OTG_NPTXFD: u32 = USB_OTG_NPTXFD_Msk;
pub const USB_OTG_TX0FSA_Pos: u32 = 0;
pub const USB_OTG_TX0FSA_Msk: u32 = 0xFFFF << USB_OTG_TX0FSA_Pos;
pub const USB_OTG_TX0FSA: u32 = USB_OTG_TX0FSA_Msk;
pub const USB_OTG_TX0FD_Pos: u32 = 16;
pub const USB_OTG_TX0FD_Msk: u32 = 0xFFFF << USB_OTG_TX0FD_Pos;
pub const USB_OTG_TX0FD: u32 = USB_OTG_TX0FD_Msk;
pub const USB_OTG_DVBUSPULSE_DVBUSP_Pos: u32 = 0;
pub const USB_OTG_DVBUSPULSE_DVBUSP_Msk: u32 = 0xFFF << USB_OTG_DVBUSPULSE_DVBUSP_Pos;
pub const USB_OTG_DVBUSPULSE_DVBUSP: u32 = USB_OTG_DVBUSPULSE_DVBUSP_Msk;
pub const USB_OTG_GNPTXSTS_NPTXFSAV_Pos: u32 = 0;
pub const USB_OTG_GNPTXSTS_NPTXFSAV_Msk: u32 = 0xFFFF << USB_OTG_GNPTXSTS_NPTXFSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTXFSAV: u32 = USB_OTG_GNPTXSTS_NPTXFSAV_Msk;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_Pos: u32 = 16;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_Msk: u32 = 0xFF << USB_OTG_GNPTXSTS_NPTQXSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTQXSAV: u32 = USB_OTG_GNPTXSTS_NPTQXSAV_Msk;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_0: u32 = 0x01 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_1: u32 = 0x02 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_2: u32 = 0x04 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_3: u32 = 0x08 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_4: u32 = 0x10 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_5: u32 = 0x20 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_6: u32 = 0x40 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_7: u32 = 0x80 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTXQTOP_Pos: u32 = 24;
pub const USB_OTG_GNPTXSTS_NPTXQTOP_Msk: u32 = 0x7F << USB_OTG_GNPTXSTS_NPTXQTOP_Pos;
pub const USB_OTG_GNPTXSTS_NPTXQTOP: u32 = USB_OTG_GNPTXSTS_NPTXQTOP_Msk;
pub const USB_OTG_GNPTXSTS_NPTXQTOP_0: u32 = 0x01 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos;
pub const USB_OTG_GNPTXSTS_NPTXQTOP_1: u32 = 0x02 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos;
pub const USB_OTG_GNPTXSTS_NPTXQTOP_2: u32 = 0x04 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos;
pub const USB_OTG_GNPTXSTS_NPTXQTOP_3: u32 = 0x08 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos;
pub const USB_OTG_GNPTXSTS_NPTXQTOP_4: u32 = 0x10 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos;
pub const USB_OTG_GNPTXSTS_NPTXQTOP_5: u32 = 0x20 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos;
pub const USB_OTG_GNPTXSTS_NPTXQTOP_6: u32 = 0x40 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos;
pub const USB_OTG_DTHRCTL_NONISOTHREN_Pos: u32 = 0;
pub const USB_OTG_DTHRCTL_NONISOTHREN_Msk: u32 = 0x1 << USB_OTG_DTHRCTL_NONISOTHREN_Pos;
pub const USB_OTG_DTHRCTL_NONISOTHREN: u32 = USB_OTG_DTHRCTL_NONISOTHREN_Msk;
pub const USB_OTG_DTHRCTL_ISOTHREN_Pos: u32 = 1;
pub const USB_OTG_DTHRCTL_ISOTHREN_Msk: u32 = 0x1 << USB_OTG_DTHRCTL_ISOTHREN_Pos;
pub const USB_OTG_DTHRCTL_ISOTHREN: u32 = USB_OTG_DTHRCTL_ISOTHREN_Msk;
pub const USB_OTG_DTHRCTL_TXTHRLEN_Pos: u32 = 2;
pub const USB_OTG_DTHRCTL_TXTHRLEN_Msk: u32 = 0x1FF << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_TXTHRLEN: u32 = USB_OTG_DTHRCTL_TXTHRLEN_Msk;
pub const USB_OTG_DTHRCTL_TXTHRLEN_0: u32 = 0x001 << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_TXTHRLEN_1: u32 = 0x002 << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_TXTHRLEN_2: u32 = 0x004 << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_TXTHRLEN_3: u32 = 0x008 << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_TXTHRLEN_4: u32 = 0x010 << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_TXTHRLEN_5: u32 = 0x020 << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_TXTHRLEN_6: u32 = 0x040 << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_TXTHRLEN_7: u32 = 0x080 << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_TXTHRLEN_8: u32 = 0x100 << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHREN_Pos: u32 = 16;
pub const USB_OTG_DTHRCTL_RXTHREN_Msk: u32 = 0x1 << USB_OTG_DTHRCTL_RXTHREN_Pos;
pub const USB_OTG_DTHRCTL_RXTHREN: u32 = USB_OTG_DTHRCTL_RXTHREN_Msk;
pub const USB_OTG_DTHRCTL_RXTHRLEN_Pos: u32 = 17;
pub const USB_OTG_DTHRCTL_RXTHRLEN_Msk: u32 = 0x1FF << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHRLEN: u32 = USB_OTG_DTHRCTL_RXTHRLEN_Msk;
pub const USB_OTG_DTHRCTL_RXTHRLEN_0: u32 = 0x001 << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHRLEN_1: u32 = 0x002 << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHRLEN_2: u32 = 0x004 << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHRLEN_3: u32 = 0x008 << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHRLEN_4: u32 = 0x010 << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHRLEN_5: u32 = 0x020 << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHRLEN_6: u32 = 0x040 << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHRLEN_7: u32 = 0x080 << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHRLEN_8: u32 = 0x100 << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_ARPEN_Pos: u32 = 27;
pub const USB_OTG_DTHRCTL_ARPEN_Msk: u32 = 0x1 << USB_OTG_DTHRCTL_ARPEN_Pos;
pub const USB_OTG_DTHRCTL_ARPEN: u32 = USB_OTG_DTHRCTL_ARPEN_Msk;
pub const USB_OTG_DIEPEMPMSK_INEPTXFEM_Pos: u32 = 0;
pub const USB_OTG_DIEPEMPMSK_INEPTXFEM_Msk: u32 = 0xFFFF << USB_OTG_DIEPEMPMSK_INEPTXFEM_Pos;
pub const USB_OTG_DIEPEMPMSK_INEPTXFEM: u32 = USB_OTG_DIEPEMPMSK_INEPTXFEM_Msk;
pub const USB_OTG_DEACHINT_IEP1INT_Pos: u32 = 1;
pub const USB_OTG_DEACHINT_IEP1INT_Msk: u32 = 0x1 << USB_OTG_DEACHINT_IEP1INT_Pos;
pub const USB_OTG_DEACHINT_IEP1INT: u32 = USB_OTG_DEACHINT_IEP1INT_Msk;
pub const USB_OTG_DEACHINT_OEP1INT_Pos: u32 = 17;
pub const USB_OTG_DEACHINT_OEP1INT_Msk: u32 = 0x1 << USB_OTG_DEACHINT_OEP1INT_Pos;
pub const USB_OTG_DEACHINT_OEP1INT: u32 = USB_OTG_DEACHINT_OEP1INT_Msk;
pub const USB_OTG_GCCFG_PWRDWN_Pos: u32 = 16;
pub const USB_OTG_GCCFG_PWRDWN_Msk: u32 = 0x1 << USB_OTG_GCCFG_PWRDWN_Pos;
pub const USB_OTG_GCCFG_PWRDWN: u32 = USB_OTG_GCCFG_PWRDWN_Msk;
pub const USB_OTG_GCCFG_VBDEN_Pos: u32 = 21;
pub const USB_OTG_GCCFG_VBDEN_Msk: u32 = 0x1 << USB_OTG_GCCFG_VBDEN_Pos;
pub const USB_OTG_GCCFG_VBDEN: u32 = USB_OTG_GCCFG_VBDEN_Msk;
pub const USB_OTG_DEACHINTMSK_IEP1INTM_Pos: u32 = 1;
pub const USB_OTG_DEACHINTMSK_IEP1INTM_Msk: u32 = 0x1 << USB_OTG_DEACHINTMSK_IEP1INTM_Pos;
pub const USB_OTG_DEACHINTMSK_IEP1INTM: u32 = USB_OTG_DEACHINTMSK_IEP1INTM_Msk;
pub const USB_OTG_DEACHINTMSK_OEP1INTM_Pos: u32 = 17;
pub const USB_OTG_DEACHINTMSK_OEP1INTM_Msk: u32 = 0x1 << USB_OTG_DEACHINTMSK_OEP1INTM_Pos;
pub const USB_OTG_DEACHINTMSK_OEP1INTM: u32 = USB_OTG_DEACHINTMSK_OEP1INTM_Msk;
pub const USB_OTG_CID_PRODUCT_ID_Pos: u32 = 0;
pub const USB_OTG_CID_PRODUCT_ID_Msk: u32 = 0xFFFFFFFF << USB_OTG_CID_PRODUCT_ID_Pos;
pub const USB_OTG_CID_PRODUCT_ID: u32 = USB_OTG_CID_PRODUCT_ID_Msk;
pub const USB_OTG_GLPMCFG_LPMEN_Pos: u32 = 0;
pub const USB_OTG_GLPMCFG_LPMEN_Msk: u32 = 0x1 << USB_OTG_GLPMCFG_LPMEN_Pos;
pub const USB_OTG_GLPMCFG_LPMEN: u32 = USB_OTG_GLPMCFG_LPMEN_Msk;
pub const USB_OTG_GLPMCFG_LPMACK_Pos: u32 = 1;
pub const USB_OTG_GLPMCFG_LPMACK_Msk: u32 = 0x1 << USB_OTG_GLPMCFG_LPMACK_Pos;
pub const USB_OTG_GLPMCFG_LPMACK: u32 = USB_OTG_GLPMCFG_LPMACK_Msk;
pub const USB_OTG_GLPMCFG_BESL_Pos: u32 = 2;
pub const USB_OTG_GLPMCFG_BESL_Msk: u32 = 0xF << USB_OTG_GLPMCFG_BESL_Pos;
pub const USB_OTG_GLPMCFG_BESL: u32 = USB_OTG_GLPMCFG_BESL_Msk;
pub const USB_OTG_GLPMCFG_REMWAKE_Pos: u32 = 6;
pub const USB_OTG_GLPMCFG_REMWAKE_Msk: u32 = 0x1 << USB_OTG_GLPMCFG_REMWAKE_Pos;
pub const USB_OTG_GLPMCFG_REMWAKE: u32 = USB_OTG_GLPMCFG_REMWAKE_Msk;
pub const USB_OTG_GLPMCFG_L1SSEN_Pos: u32 = 7;
pub const USB_OTG_GLPMCFG_L1SSEN_Msk: u32 = 0x1 << USB_OTG_GLPMCFG_L1SSEN_Pos;
pub const USB_OTG_GLPMCFG_L1SSEN: u32 = USB_OTG_GLPMCFG_L1SSEN_Msk;
pub const USB_OTG_GLPMCFG_BESLTHRS_Pos: u32 = 8;
pub const USB_OTG_GLPMCFG_BESLTHRS_Msk: u32 = 0xF << USB_OTG_GLPMCFG_BESLTHRS_Pos;
pub const USB_OTG_GLPMCFG_BESLTHRS: u32 = USB_OTG_GLPMCFG_BESLTHRS_Msk;
pub const USB_OTG_GLPMCFG_L1DSEN_Pos: u32 = 12;
pub const USB_OTG_GLPMCFG_L1DSEN_Msk: u32 = 0x1 << USB_OTG_GLPMCFG_L1DSEN_Pos;
pub const USB_OTG_GLPMCFG_L1DSEN: u32 = USB_OTG_GLPMCFG_L1DSEN_Msk;
pub const USB_OTG_GLPMCFG_LPMRSP_Pos: u32 = 13;
pub const USB_OTG_GLPMCFG_LPMRSP_Msk: u32 = 0x3 << USB_OTG_GLPMCFG_LPMRSP_Pos;
pub const USB_OTG_GLPMCFG_LPMRSP: u32 = USB_OTG_GLPMCFG_LPMRSP_Msk;
pub const USB_OTG_GLPMCFG_SLPSTS_Pos: u32 = 15;
pub const USB_OTG_GLPMCFG_SLPSTS_Msk: u32 = 0x1 << USB_OTG_GLPMCFG_SLPSTS_Pos;
pub const USB_OTG_GLPMCFG_SLPSTS: u32 = USB_OTG_GLPMCFG_SLPSTS_Msk;
pub const USB_OTG_GLPMCFG_L1RSMOK_Pos: u32 = 16;
pub const USB_OTG_GLPMCFG_L1RSMOK_Msk: u32 = 0x1 << USB_OTG_GLPMCFG_L1RSMOK_Pos;
pub const USB_OTG_GLPMCFG_L1RSMOK: u32 = USB_OTG_GLPMCFG_L1RSMOK_Msk;
pub const USB_OTG_GLPMCFG_LPMCHIDX_Pos: u32 = 17;
pub const USB_OTG_GLPMCFG_LPMCHIDX_Msk: u32 = 0xF << USB_OTG_GLPMCFG_LPMCHIDX_Pos;
pub const USB_OTG_GLPMCFG_LPMCHIDX: u32 = USB_OTG_GLPMCFG_LPMCHIDX_Msk;
pub const USB_OTG_GLPMCFG_LPMRCNT_Pos: u32 = 21;
pub const USB_OTG_GLPMCFG_LPMRCNT_Msk: u32 = 0x7 << USB_OTG_GLPMCFG_LPMRCNT_Pos;
pub const USB_OTG_GLPMCFG_LPMRCNT: u32 = USB_OTG_GLPMCFG_LPMRCNT_Msk;
pub const USB_OTG_GLPMCFG_SNDLPM_Pos: u32 = 24;
pub const USB_OTG_GLPMCFG_SNDLPM_Msk: u32 = 0x1 << USB_OTG_GLPMCFG_SNDLPM_Pos;
pub const USB_OTG_GLPMCFG_SNDLPM: u32 = USB_OTG_GLPMCFG_SNDLPM_Msk;
pub const USB_OTG_GLPMCFG_LPMRCNTSTS_Pos: u32 = 25;
pub const USB_OTG_GLPMCFG_LPMRCNTSTS_Msk: u32 = 0x7 << USB_OTG_GLPMCFG_LPMRCNTSTS_Pos;
pub const USB_OTG_GLPMCFG_LPMRCNTSTS: u32 = USB_OTG_GLPMCFG_LPMRCNTSTS_Msk;
pub const USB_OTG_GLPMCFG_ENBESL_Pos: u32 = 28;
pub const USB_OTG_GLPMCFG_ENBESL_Msk: u32 = 0x1 << USB_OTG_GLPMCFG_ENBESL_Pos;
pub const USB_OTG_GLPMCFG_ENBESL: u32 = USB_OTG_GLPMCFG_ENBESL_Msk;
pub const USB_OTG_DIEPEACHMSK1_XFRCM_Pos: u32 = 0;
pub const USB_OTG_DIEPEACHMSK1_XFRCM_Msk: u32 = 0x1 << USB_OTG_DIEPEACHMSK1_XFRCM_Pos;
pub const USB_OTG_DIEPEACHMSK1_XFRCM: u32 = USB_OTG_DIEPEACHMSK1_XFRCM_Msk;
pub const USB_OTG_DIEPEACHMSK1_EPDM_Pos: u32 = 1;
pub const USB_OTG_DIEPEACHMSK1_EPDM_Msk: u32 = 0x1 << USB_OTG_DIEPEACHMSK1_EPDM_Pos;
pub const USB_OTG_DIEPEACHMSK1_EPDM: u32 = USB_OTG_DIEPEACHMSK1_EPDM_Msk;
pub const USB_OTG_DIEPEACHMSK1_TOM_Pos: u32 = 3;
pub const USB_OTG_DIEPEACHMSK1_TOM_Msk: u32 = 0x1 << USB_OTG_DIEPEACHMSK1_TOM_Pos;
pub const USB_OTG_DIEPEACHMSK1_TOM: u32 = USB_OTG_DIEPEACHMSK1_TOM_Msk;
pub const USB_OTG_DIEPEACHMSK1_ITTXFEMSK_Pos: u32 = 4;
pub const USB_OTG_DIEPEACHMSK1_ITTXFEMSK_Msk: u32 = 0x1 << USB_OTG_DIEPEACHMSK1_ITTXFEMSK_Pos;
pub const USB_OTG_DIEPEACHMSK1_ITTXFEMSK: u32 = USB_OTG_DIEPEACHMSK1_ITTXFEMSK_Msk;
pub const USB_OTG_DIEPEACHMSK1_INEPNMM_Pos: u32 = 5;
pub const USB_OTG_DIEPEACHMSK1_INEPNMM_Msk: u32 = 0x1 << USB_OTG_DIEPEACHMSK1_INEPNMM_Pos;
pub const USB_OTG_DIEPEACHMSK1_INEPNMM: u32 = USB_OTG_DIEPEACHMSK1_INEPNMM_Msk;
pub const USB_OTG_DIEPEACHMSK1_INEPNEM_Pos: u32 = 6;
pub const USB_OTG_DIEPEACHMSK1_INEPNEM_Msk: u32 = 0x1 << USB_OTG_DIEPEACHMSK1_INEPNEM_Pos;
pub const USB_OTG_DIEPEACHMSK1_INEPNEM: u32 = USB_OTG_DIEPEACHMSK1_INEPNEM_Msk;
pub const USB_OTG_DIEPEACHMSK1_TXFURM_Pos: u32 = 8;
pub const USB_OTG_DIEPEACHMSK1_TXFURM_Msk: u32 = 0x1 << USB_OTG_DIEPEACHMSK1_TXFURM_Pos;
pub const USB_OTG_DIEPEACHMSK1_TXFURM: u32 = USB_OTG_DIEPEACHMSK1_TXFURM_Msk;
pub const USB_OTG_DIEPEACHMSK1_BIM_Pos: u32 = 9;
pub const USB_OTG_DIEPEACHMSK1_BIM_Msk: u32 = 0x1 << USB_OTG_DIEPEACHMSK1_BIM_Pos;
pub const USB_OTG_DIEPEACHMSK1_BIM: u32 = USB_OTG_DIEPEACHMSK1_BIM_Msk;
pub const USB_OTG_DIEPEACHMSK1_NAKM_Pos: u32 = 13;
pub const USB_OTG_DIEPEACHMSK1_NAKM_Msk: u32 = 0x1 << USB_OTG_DIEPEACHMSK1_NAKM_Pos;
pub const USB_OTG_DIEPEACHMSK1_NAKM: u32 = USB_OTG_DIEPEACHMSK1_NAKM_Msk;
pub const USB_OTG_HPRT_PCSTS_Pos: u32 = 0;
pub const USB_OTG_HPRT_PCSTS_Msk: u32 = 0x1 << USB_OTG_HPRT_PCSTS_Pos;
pub const USB_OTG_HPRT_PCSTS: u32 = USB_OTG_HPRT_PCSTS_Msk;
pub const USB_OTG_HPRT_PCDET_Pos: u32 = 1;
pub const USB_OTG_HPRT_PCDET_Msk: u32 = 0x1 << USB_OTG_HPRT_PCDET_Pos;
pub const USB_OTG_HPRT_PCDET: u32 = USB_OTG_HPRT_PCDET_Msk;
pub const USB_OTG_HPRT_PENA_Pos: u32 = 2;
pub const USB_OTG_HPRT_PENA_Msk: u32 = 0x1 << USB_OTG_HPRT_PENA_Pos;
pub const USB_OTG_HPRT_PENA: u32 = USB_OTG_HPRT_PENA_Msk;
pub const USB_OTG_HPRT_PENCHNG_Pos: u32 = 3;
pub const USB_OTG_HPRT_PENCHNG_Msk: u32 = 0x1 << USB_OTG_HPRT_PENCHNG_Pos;
pub const USB_OTG_HPRT_PENCHNG: u32 = USB_OTG_HPRT_PENCHNG_Msk;
pub const USB_OTG_HPRT_POCA_Pos: u32 = 4;
pub const USB_OTG_HPRT_POCA_Msk: u32 = 0x1 << USB_OTG_HPRT_POCA_Pos;
pub const USB_OTG_HPRT_POCA: u32 = USB_OTG_HPRT_POCA_Msk;
pub const USB_OTG_HPRT_POCCHNG_Pos: u32 = 5;
pub const USB_OTG_HPRT_POCCHNG_Msk: u32 = 0x1 << USB_OTG_HPRT_POCCHNG_Pos;
pub const USB_OTG_HPRT_POCCHNG: u32 = USB_OTG_HPRT_POCCHNG_Msk;
pub const USB_OTG_HPRT_PRES_Pos: u32 = 6;
pub const USB_OTG_HPRT_PRES_Msk: u32 = 0x1 << USB_OTG_HPRT_PRES_Pos;
pub const USB_OTG_HPRT_PRES: u32 = USB_OTG_HPRT_PRES_Msk;
pub const USB_OTG_HPRT_PSUSP_Pos: u32 = 7;
pub const USB_OTG_HPRT_PSUSP_Msk: u32 = 0x1 << USB_OTG_HPRT_PSUSP_Pos;
pub const USB_OTG_HPRT_PSUSP: u32 = USB_OTG_HPRT_PSUSP_Msk;
pub const USB_OTG_HPRT_PRST_Pos: u32 = 8;
pub const USB_OTG_HPRT_PRST_Msk: u32 = 0x1 << USB_OTG_HPRT_PRST_Pos;
pub const USB_OTG_HPRT_PRST: u32 = USB_OTG_HPRT_PRST_Msk;
pub const USB_OTG_HPRT_PLSTS_Pos: u32 = 10;
pub const USB_OTG_HPRT_PLSTS_Msk: u32 = 0x3 << USB_OTG_HPRT_PLSTS_Pos;
pub const USB_OTG_HPRT_PLSTS: u32 = USB_OTG_HPRT_PLSTS_Msk;
pub const USB_OTG_HPRT_PLSTS_0: u32 = 0x1 << USB_OTG_HPRT_PLSTS_Pos;
pub const USB_OTG_HPRT_PLSTS_1: u32 = 0x2 << USB_OTG_HPRT_PLSTS_Pos;
pub const USB_OTG_HPRT_PPWR_Pos: u32 = 12;
pub const USB_OTG_HPRT_PPWR_Msk: u32 = 0x1 << USB_OTG_HPRT_PPWR_Pos;
pub const USB_OTG_HPRT_PPWR: u32 = USB_OTG_HPRT_PPWR_Msk;
pub const USB_OTG_HPRT_PTCTL_Pos: u32 = 13;
pub const USB_OTG_HPRT_PTCTL_Msk: u32 = 0xF << USB_OTG_HPRT_PTCTL_Pos;
pub const USB_OTG_HPRT_PTCTL: u32 = USB_OTG_HPRT_PTCTL_Msk;
pub const USB_OTG_HPRT_PTCTL_0: u32 = 0x1 << USB_OTG_HPRT_PTCTL_Pos;
pub const USB_OTG_HPRT_PTCTL_1: u32 = 0x2 << USB_OTG_HPRT_PTCTL_Pos;
pub const USB_OTG_HPRT_PTCTL_2: u32 = 0x4 << USB_OTG_HPRT_PTCTL_Pos;
pub const USB_OTG_HPRT_PTCTL_3: u32 = 0x8 << USB_OTG_HPRT_PTCTL_Pos;
pub const USB_OTG_HPRT_PSPD_Pos: u32 = 17;
pub const USB_OTG_HPRT_PSPD_Msk: u32 = 0x3 << USB_OTG_HPRT_PSPD_Pos;
pub const USB_OTG_HPRT_PSPD: u32 = USB_OTG_HPRT_PSPD_Msk;
pub const USB_OTG_HPRT_PSPD_0: u32 = 0x1 << USB_OTG_HPRT_PSPD_Pos;
pub const USB_OTG_HPRT_PSPD_1: u32 = 0x2 << USB_OTG_HPRT_PSPD_Pos;
pub const USB_OTG_DOEPEACHMSK1_XFRCM_Pos: u32 = 0;
pub const USB_OTG_DOEPEACHMSK1_XFRCM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_XFRCM_Pos;
pub const USB_OTG_DOEPEACHMSK1_XFRCM: u32 = USB_OTG_DOEPEACHMSK1_XFRCM_Msk;
pub const USB_OTG_DOEPEACHMSK1_EPDM_Pos: u32 = 1;
pub const USB_OTG_DOEPEACHMSK1_EPDM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_EPDM_Pos;
pub const USB_OTG_DOEPEACHMSK1_EPDM: u32 = USB_OTG_DOEPEACHMSK1_EPDM_Msk;
pub const USB_OTG_DOEPEACHMSK1_TOM_Pos: u32 = 3;
pub const USB_OTG_DOEPEACHMSK1_TOM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_TOM_Pos;
pub const USB_OTG_DOEPEACHMSK1_TOM: u32 = USB_OTG_DOEPEACHMSK1_TOM_Msk;
pub const USB_OTG_DOEPEACHMSK1_ITTXFEMSK_Pos: u32 = 4;
pub const USB_OTG_DOEPEACHMSK1_ITTXFEMSK_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_ITTXFEMSK_Pos;
pub const USB_OTG_DOEPEACHMSK1_ITTXFEMSK: u32 = USB_OTG_DOEPEACHMSK1_ITTXFEMSK_Msk;
pub const USB_OTG_DOEPEACHMSK1_INEPNMM_Pos: u32 = 5;
pub const USB_OTG_DOEPEACHMSK1_INEPNMM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_INEPNMM_Pos;
pub const USB_OTG_DOEPEACHMSK1_INEPNMM: u32 = USB_OTG_DOEPEACHMSK1_INEPNMM_Msk;
pub const USB_OTG_DOEPEACHMSK1_INEPNEM_Pos: u32 = 6;
pub const USB_OTG_DOEPEACHMSK1_INEPNEM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_INEPNEM_Pos;
pub const USB_OTG_DOEPEACHMSK1_INEPNEM: u32 = USB_OTG_DOEPEACHMSK1_INEPNEM_Msk;
pub const USB_OTG_DOEPEACHMSK1_TXFURM_Pos: u32 = 8;
pub const USB_OTG_DOEPEACHMSK1_TXFURM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_TXFURM_Pos;
pub const USB_OTG_DOEPEACHMSK1_TXFURM: u32 = USB_OTG_DOEPEACHMSK1_TXFURM_Msk;
pub const USB_OTG_DOEPEACHMSK1_BIM_Pos: u32 = 9;
pub const USB_OTG_DOEPEACHMSK1_BIM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_BIM_Pos;
pub const USB_OTG_DOEPEACHMSK1_BIM: u32 = USB_OTG_DOEPEACHMSK1_BIM_Msk;
pub const USB_OTG_DOEPEACHMSK1_BERRM_Pos: u32 = 12;
pub const USB_OTG_DOEPEACHMSK1_BERRM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_BERRM_Pos;
pub const USB_OTG_DOEPEACHMSK1_BERRM: u32 = USB_OTG_DOEPEACHMSK1_BERRM_Msk;
pub const USB_OTG_DOEPEACHMSK1_NAKM_Pos: u32 = 13;
pub const USB_OTG_DOEPEACHMSK1_NAKM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_NAKM_Pos;
pub const USB_OTG_DOEPEACHMSK1_NAKM: u32 = USB_OTG_DOEPEACHMSK1_NAKM_Msk;
pub const USB_OTG_DOEPEACHMSK1_NYETM_Pos: u32 = 14;
pub const USB_OTG_DOEPEACHMSK1_NYETM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_NYETM_Pos;
pub const USB_OTG_DOEPEACHMSK1_NYETM: u32 = USB_OTG_DOEPEACHMSK1_NYETM_Msk;
pub const USB_OTG_HPTXFSIZ_PTXSA_Pos: u32 = 0;
pub const USB_OTG_HPTXFSIZ_PTXSA_Msk: u32 = 0xFFFF << USB_OTG_HPTXFSIZ_PTXSA_Pos;
pub const USB_OTG_HPTXFSIZ_PTXSA: u32 = USB_OTG_HPTXFSIZ_PTXSA_Msk;
pub const USB_OTG_HPTXFSIZ_PTXFD_Pos: u32 = 16;
pub const USB_OTG_HPTXFSIZ_PTXFD_Msk: u32 = 0xFFFF << USB_OTG_HPTXFSIZ_PTXFD_Pos;
pub const USB_OTG_HPTXFSIZ_PTXFD: u32 = USB_OTG_HPTXFSIZ_PTXFD_Msk;
pub const USB_OTG_DIEPCTL_MPSIZ_Pos: u32 = 0;
pub const USB_OTG_DIEPCTL_MPSIZ_Msk: u32 = 0x7FF << USB_OTG_DIEPCTL_MPSIZ_Pos;
pub const USB_OTG_DIEPCTL_MPSIZ: u32 = USB_OTG_DIEPCTL_MPSIZ_Msk;
pub const USB_OTG_DIEPCTL_USBAEP_Pos: u32 = 15;
pub const USB_OTG_DIEPCTL_USBAEP_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_USBAEP_Pos;
pub const USB_OTG_DIEPCTL_USBAEP: u32 = USB_OTG_DIEPCTL_USBAEP_Msk;
pub const USB_OTG_DIEPCTL_EONUM_DPID_Pos: u32 = 16;
pub const USB_OTG_DIEPCTL_EONUM_DPID_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_EONUM_DPID_Pos;
pub const USB_OTG_DIEPCTL_EONUM_DPID: u32 = USB_OTG_DIEPCTL_EONUM_DPID_Msk;
pub const USB_OTG_DIEPCTL_NAKSTS_Pos: u32 = 17;
pub const USB_OTG_DIEPCTL_NAKSTS_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_NAKSTS_Pos;
pub const USB_OTG_DIEPCTL_NAKSTS: u32 = USB_OTG_DIEPCTL_NAKSTS_Msk;
pub const USB_OTG_DIEPCTL_EPTYP_Pos: u32 = 18;
pub const USB_OTG_DIEPCTL_EPTYP_Msk: u32 = 0x3 << USB_OTG_DIEPCTL_EPTYP_Pos;
pub const USB_OTG_DIEPCTL_EPTYP: u32 = USB_OTG_DIEPCTL_EPTYP_Msk;
pub const USB_OTG_DIEPCTL_EPTYP_0: u32 = 0x1 << USB_OTG_DIEPCTL_EPTYP_Pos;
pub const USB_OTG_DIEPCTL_EPTYP_1: u32 = 0x2 << USB_OTG_DIEPCTL_EPTYP_Pos;
pub const USB_OTG_DIEPCTL_STALL_Pos: u32 = 21;
pub const USB_OTG_DIEPCTL_STALL_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_STALL_Pos;
pub const USB_OTG_DIEPCTL_STALL: u32 = USB_OTG_DIEPCTL_STALL_Msk;
pub const USB_OTG_DIEPCTL_TXFNUM_Pos: u32 = 22;
pub const USB_OTG_DIEPCTL_TXFNUM_Msk: u32 = 0xF << USB_OTG_DIEPCTL_TXFNUM_Pos;
pub const USB_OTG_DIEPCTL_TXFNUM: u32 = USB_OTG_DIEPCTL_TXFNUM_Msk;
pub const USB_OTG_DIEPCTL_TXFNUM_0: u32 = 0x1 << USB_OTG_DIEPCTL_TXFNUM_Pos;
pub const USB_OTG_DIEPCTL_TXFNUM_1: u32 = 0x2 << USB_OTG_DIEPCTL_TXFNUM_Pos;
pub const USB_OTG_DIEPCTL_TXFNUM_2: u32 = 0x4 << USB_OTG_DIEPCTL_TXFNUM_Pos;
pub const USB_OTG_DIEPCTL_TXFNUM_3: u32 = 0x8 << USB_OTG_DIEPCTL_TXFNUM_Pos;
pub const USB_OTG_DIEPCTL_CNAK_Pos: u32 = 26;
pub const USB_OTG_DIEPCTL_CNAK_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_CNAK_Pos;
pub const USB_OTG_DIEPCTL_CNAK: u32 = USB_OTG_DIEPCTL_CNAK_Msk;
pub const USB_OTG_DIEPCTL_SNAK_Pos: u32 = 27;
pub const USB_OTG_DIEPCTL_SNAK_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_SNAK_Pos;
pub const USB_OTG_DIEPCTL_SNAK: u32 = USB_OTG_DIEPCTL_SNAK_Msk;
pub const USB_OTG_DIEPCTL_SD0PID_SEVNFRM_Pos: u32 = 28;
pub const USB_OTG_DIEPCTL_SD0PID_SEVNFRM_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_SD0PID_SEVNFRM_Pos;
pub const USB_OTG_DIEPCTL_SD0PID_SEVNFRM: u32 = USB_OTG_DIEPCTL_SD0PID_SEVNFRM_Msk;
pub const USB_OTG_DIEPCTL_SODDFRM_Pos: u32 = 29;
pub const USB_OTG_DIEPCTL_SODDFRM_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_SODDFRM_Pos;
pub const USB_OTG_DIEPCTL_SODDFRM: u32 = USB_OTG_DIEPCTL_SODDFRM_Msk;
pub const USB_OTG_DIEPCTL_EPDIS_Pos: u32 = 30;
pub const USB_OTG_DIEPCTL_EPDIS_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_EPDIS_Pos;
pub const USB_OTG_DIEPCTL_EPDIS: u32 = USB_OTG_DIEPCTL_EPDIS_Msk;
pub const USB_OTG_DIEPCTL_EPENA_Pos: u32 = 31;
pub const USB_OTG_DIEPCTL_EPENA_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_EPENA_Pos;
pub const USB_OTG_DIEPCTL_EPENA: u32 = USB_OTG_DIEPCTL_EPENA_Msk;
pub const USB_OTG_HCCHAR_MPSIZ_Pos: u32 = 0;
pub const USB_OTG_HCCHAR_MPSIZ_Msk: u32 = 0x7FF << USB_OTG_HCCHAR_MPSIZ_Pos;
pub const USB_OTG_HCCHAR_MPSIZ: u32 = USB_OTG_HCCHAR_MPSIZ_Msk;
pub const USB_OTG_HCCHAR_EPNUM_Pos: u32 = 11;
pub const USB_OTG_HCCHAR_EPNUM_Msk: u32 = 0xF << USB_OTG_HCCHAR_EPNUM_Pos;
pub const USB_OTG_HCCHAR_EPNUM: u32 = USB_OTG_HCCHAR_EPNUM_Msk;
pub const USB_OTG_HCCHAR_EPNUM_0: u32 = 0x1 << USB_OTG_HCCHAR_EPNUM_Pos;
pub const USB_OTG_HCCHAR_EPNUM_1: u32 = 0x2 << USB_OTG_HCCHAR_EPNUM_Pos;
pub const USB_OTG_HCCHAR_EPNUM_2: u32 = 0x4 << USB_OTG_HCCHAR_EPNUM_Pos;
pub const USB_OTG_HCCHAR_EPNUM_3: u32 = 0x8 << USB_OTG_HCCHAR_EPNUM_Pos;
pub const USB_OTG_HCCHAR_EPDIR_Pos: u32 = 15;
pub const USB_OTG_HCCHAR_EPDIR_Msk: u32 = 0x1 << USB_OTG_HCCHAR_EPDIR_Pos;
pub const USB_OTG_HCCHAR_EPDIR: u32 = USB_OTG_HCCHAR_EPDIR_Msk;
pub const USB_OTG_HCCHAR_LSDEV_Pos: u32 = 17;
pub const USB_OTG_HCCHAR_LSDEV_Msk: u32 = 0x1 << USB_OTG_HCCHAR_LSDEV_Pos;
pub const USB_OTG_HCCHAR_LSDEV: u32 = USB_OTG_HCCHAR_LSDEV_Msk;
pub const USB_OTG_HCCHAR_EPTYP_Pos: u32 = 18;
pub const USB_OTG_HCCHAR_EPTYP_Msk: u32 = 0x3 << USB_OTG_HCCHAR_EPTYP_Pos;
pub const USB_OTG_HCCHAR_EPTYP: u32 = USB_OTG_HCCHAR_EPTYP_Msk;
pub const USB_OTG_HCCHAR_EPTYP_0: u32 = 0x1 << USB_OTG_HCCHAR_EPTYP_Pos;
pub const USB_OTG_HCCHAR_EPTYP_1: u32 = 0x2 << USB_OTG_HCCHAR_EPTYP_Pos;
pub const USB_OTG_HCCHAR_MC_Pos: u32 = 20;
pub const USB_OTG_HCCHAR_MC_Msk: u32 = 0x3 << USB_OTG_HCCHAR_MC_Pos;
pub const USB_OTG_HCCHAR_MC: u32 = USB_OTG_HCCHAR_MC_Msk;
pub const USB_OTG_HCCHAR_MC_0: u32 = 0x1 << USB_OTG_HCCHAR_MC_Pos;
pub const USB_OTG_HCCHAR_MC_1: u32 = 0x2 << USB_OTG_HCCHAR_MC_Pos;
pub const USB_OTG_HCCHAR_DAD_Pos: u32 = 22;
pub const USB_OTG_HCCHAR_DAD_Msk: u32 = 0x7F << USB_OTG_HCCHAR_DAD_Pos;
pub const USB_OTG_HCCHAR_DAD: u32 = USB_OTG_HCCHAR_DAD_Msk;
pub const USB_OTG_HCCHAR_DAD_0: u32 = 0x01 << USB_OTG_HCCHAR_DAD_Pos;
pub const USB_OTG_HCCHAR_DAD_1: u32 = 0x02 << USB_OTG_HCCHAR_DAD_Pos;
pub const USB_OTG_HCCHAR_DAD_2: u32 = 0x04 << USB_OTG_HCCHAR_DAD_Pos;
pub const USB_OTG_HCCHAR_DAD_3: u32 = 0x08 << USB_OTG_HCCHAR_DAD_Pos;
pub const USB_OTG_HCCHAR_DAD_4: u32 = 0x10 << USB_OTG_HCCHAR_DAD_Pos;
pub const USB_OTG_HCCHAR_DAD_5: u32 = 0x20 << USB_OTG_HCCHAR_DAD_Pos;
pub const USB_OTG_HCCHAR_DAD_6: u32 = 0x40 << USB_OTG_HCCHAR_DAD_Pos;
pub const USB_OTG_HCCHAR_ODDFRM_Pos: u32 = 29;
pub const USB_OTG_HCCHAR_ODDFRM_Msk: u32 = 0x1 << USB_OTG_HCCHAR_ODDFRM_Pos;
pub const USB_OTG_HCCHAR_ODDFRM: u32 = USB_OTG_HCCHAR_ODDFRM_Msk;
pub const USB_OTG_HCCHAR_CHDIS_Pos: u32 = 30;
pub const USB_OTG_HCCHAR_CHDIS_Msk: u32 = 0x1 << USB_OTG_HCCHAR_CHDIS_Pos;
pub const USB_OTG_HCCHAR_CHDIS: u32 = USB_OTG_HCCHAR_CHDIS_Msk;
pub const USB_OTG_HCCHAR_CHENA_Pos: u32 = 31;
pub const USB_OTG_HCCHAR_CHENA_Msk: u32 = 0x1 << USB_OTG_HCCHAR_CHENA_Pos;
pub const USB_OTG_HCCHAR_CHENA: u32 = USB_OTG_HCCHAR_CHENA_Msk;
pub const USB_OTG_HCSPLT_PRTADDR_Pos: u32 = 0;
pub const USB_OTG_HCSPLT_PRTADDR_Msk: u32 = 0x7F << USB_OTG_HCSPLT_PRTADDR_Pos;
pub const USB_OTG_HCSPLT_PRTADDR: u32 = USB_OTG_HCSPLT_PRTADDR_Msk;
pub const USB_OTG_HCSPLT_PRTADDR_0: u32 = 0x01 << USB_OTG_HCSPLT_PRTADDR_Pos;
pub const USB_OTG_HCSPLT_PRTADDR_1: u32 = 0x02 << USB_OTG_HCSPLT_PRTADDR_Pos;
pub const USB_OTG_HCSPLT_PRTADDR_2: u32 = 0x04 << USB_OTG_HCSPLT_PRTADDR_Pos;
pub const USB_OTG_HCSPLT_PRTADDR_3: u32 = 0x08 << USB_OTG_HCSPLT_PRTADDR_Pos;
pub const USB_OTG_HCSPLT_PRTADDR_4: u32 = 0x10 << USB_OTG_HCSPLT_PRTADDR_Pos;
pub const USB_OTG_HCSPLT_PRTADDR_5: u32 = 0x20 << USB_OTG_HCSPLT_PRTADDR_Pos;
pub const USB_OTG_HCSPLT_PRTADDR_6: u32 = 0x40 << USB_OTG_HCSPLT_PRTADDR_Pos;
pub const USB_OTG_HCSPLT_HUBADDR_Pos: u32 = 7;
pub const USB_OTG_HCSPLT_HUBADDR_Msk: u32 = 0x7F << USB_OTG_HCSPLT_HUBADDR_Pos;
pub const USB_OTG_HCSPLT_HUBADDR: u32 = USB_OTG_HCSPLT_HUBADDR_Msk;
pub const USB_OTG_HCSPLT_HUBADDR_0: u32 = 0x01 << USB_OTG_HCSPLT_HUBADDR_Pos;
pub const USB_OTG_HCSPLT_HUBADDR_1: u32 = 0x02 << USB_OTG_HCSPLT_HUBADDR_Pos;
pub const USB_OTG_HCSPLT_HUBADDR_2: u32 = 0x04 << USB_OTG_HCSPLT_HUBADDR_Pos;
pub const USB_OTG_HCSPLT_HUBADDR_3: u32 = 0x08 << USB_OTG_HCSPLT_HUBADDR_Pos;
pub const USB_OTG_HCSPLT_HUBADDR_4: u32 = 0x10 << USB_OTG_HCSPLT_HUBADDR_Pos;
pub const USB_OTG_HCSPLT_HUBADDR_5: u32 = 0x20 << USB_OTG_HCSPLT_HUBADDR_Pos;
pub const USB_OTG_HCSPLT_HUBADDR_6: u32 = 0x40 << USB_OTG_HCSPLT_HUBADDR_Pos;
pub const USB_OTG_HCSPLT_XACTPOS_Pos: u32 = 14;
pub const USB_OTG_HCSPLT_XACTPOS_Msk: u32 = 0x3 << USB_OTG_HCSPLT_XACTPOS_Pos;
pub const USB_OTG_HCSPLT_XACTPOS: u32 = USB_OTG_HCSPLT_XACTPOS_Msk;
pub const USB_OTG_HCSPLT_XACTPOS_0: u32 = 0x1 << USB_OTG_HCSPLT_XACTPOS_Pos;
pub const USB_OTG_HCSPLT_XACTPOS_1: u32 = 0x2 << USB_OTG_HCSPLT_XACTPOS_Pos;
pub const USB_OTG_HCSPLT_COMPLSPLT_Pos: u32 = 16;
pub const USB_OTG_HCSPLT_COMPLSPLT_Msk: u32 = 0x1 << USB_OTG_HCSPLT_COMPLSPLT_Pos;
pub const USB_OTG_HCSPLT_COMPLSPLT: u32 = USB_OTG_HCSPLT_COMPLSPLT_Msk;
pub const USB_OTG_HCSPLT_SPLITEN_Pos: u32 = 31;
pub const USB_OTG_HCSPLT_SPLITEN_Msk: u32 = 0x1 << USB_OTG_HCSPLT_SPLITEN_Pos;
pub const USB_OTG_HCSPLT_SPLITEN: u32 = USB_OTG_HCSPLT_SPLITEN_Msk;
pub const USB_OTG_HCINT_XFRC_Pos: u32 = 0;
pub const USB_OTG_HCINT_XFRC_Msk: u32 = 0x1 << USB_OTG_HCINT_XFRC_Pos;
pub const USB_OTG_HCINT_XFRC: u32 = USB_OTG_HCINT_XFRC_Msk;
pub const USB_OTG_HCINT_CHH_Pos: u32 = 1;
pub const USB_OTG_HCINT_CHH_Msk: u32 = 0x1 << USB_OTG_HCINT_CHH_Pos;
pub const USB_OTG_HCINT_CHH: u32 = USB_OTG_HCINT_CHH_Msk;
pub const USB_OTG_HCINT_AHBERR_Pos: u32 = 2;
pub const USB_OTG_HCINT_AHBERR_Msk: u32 = 0x1 << USB_OTG_HCINT_AHBERR_Pos;
pub const USB_OTG_HCINT_AHBERR: u32 = USB_OTG_HCINT_AHBERR_Msk;
pub const USB_OTG_HCINT_STALL_Pos: u32 = 3;
pub const USB_OTG_HCINT_STALL_Msk: u32 = 0x1 << USB_OTG_HCINT_STALL_Pos;
pub const USB_OTG_HCINT_STALL: u32 = USB_OTG_HCINT_STALL_Msk;
pub const USB_OTG_HCINT_NAK_Pos: u32 = 4;
pub const USB_OTG_HCINT_NAK_Msk: u32 = 0x1 << USB_OTG_HCINT_NAK_Pos;
pub const USB_OTG_HCINT_NAK: u32 = USB_OTG_HCINT_NAK_Msk;
pub const USB_OTG_HCINT_ACK_Pos: u32 = 5;
pub const USB_OTG_HCINT_ACK_Msk: u32 = 0x1 << USB_OTG_HCINT_ACK_Pos;
pub const USB_OTG_HCINT_ACK: u32 = USB_OTG_HCINT_ACK_Msk;
pub const USB_OTG_HCINT_NYET_Pos: u32 = 6;
pub const USB_OTG_HCINT_NYET_Msk: u32 = 0x1 << USB_OTG_HCINT_NYET_Pos;
pub const USB_OTG_HCINT_NYET: u32 = USB_OTG_HCINT_NYET_Msk;
pub const USB_OTG_HCINT_TXERR_Pos: u32 = 7;
pub const USB_OTG_HCINT_TXERR_Msk: u32 = 0x1 << USB_OTG_HCINT_TXERR_Pos;
pub const USB_OTG_HCINT_TXERR: u32 = USB_OTG_HCINT_TXERR_Msk;
pub const USB_OTG_HCINT_BBERR_Pos: u32 = 8;
pub const USB_OTG_HCINT_BBERR_Msk: u32 = 0x1 << USB_OTG_HCINT_BBERR_Pos;
pub const USB_OTG_HCINT_BBERR: u32 = USB_OTG_HCINT_BBERR_Msk;
pub const USB_OTG_HCINT_FRMOR_Pos: u32 = 9;
pub const USB_OTG_HCINT_FRMOR_Msk: u32 = 0x1 << USB_OTG_HCINT_FRMOR_Pos;
pub const USB_OTG_HCINT_FRMOR: u32 = USB_OTG_HCINT_FRMOR_Msk;
pub const USB_OTG_HCINT_DTERR_Pos: u32 = 10;
pub const USB_OTG_HCINT_DTERR_Msk: u32 = 0x1 << USB_OTG_HCINT_DTERR_Pos;
pub const USB_OTG_HCINT_DTERR: u32 = USB_OTG_HCINT_DTERR_Msk;
pub const USB_OTG_DIEPINT_XFRC_Pos: u32 = 0;
pub const USB_OTG_DIEPINT_XFRC_Msk: u32 = 0x1 << USB_OTG_DIEPINT_XFRC_Pos;
pub const USB_OTG_DIEPINT_XFRC: u32 = USB_OTG_DIEPINT_XFRC_Msk;
pub const USB_OTG_DIEPINT_EPDISD_Pos: u32 = 1;
pub const USB_OTG_DIEPINT_EPDISD_Msk: u32 = 0x1 << USB_OTG_DIEPINT_EPDISD_Pos;
pub const USB_OTG_DIEPINT_EPDISD: u32 = USB_OTG_DIEPINT_EPDISD_Msk;
pub const USB_OTG_DIEPINT_AHBERR_Pos: u32 = 2;
pub const USB_OTG_DIEPINT_AHBERR_Msk: u32 = 0x1 << USB_OTG_DIEPINT_AHBERR_Pos;
pub const USB_OTG_DIEPINT_AHBERR: u32 = USB_OTG_DIEPINT_AHBERR_Msk;
pub const USB_OTG_DIEPINT_TOC_Pos: u32 = 3;
pub const USB_OTG_DIEPINT_TOC_Msk: u32 = 0x1 << USB_OTG_DIEPINT_TOC_Pos;
pub const USB_OTG_DIEPINT_TOC: u32 = USB_OTG_DIEPINT_TOC_Msk;
pub const USB_OTG_DIEPINT_ITTXFE_Pos: u32 = 4;
pub const USB_OTG_DIEPINT_ITTXFE_Msk: u32 = 0x1 << USB_OTG_DIEPINT_ITTXFE_Pos;
pub const USB_OTG_DIEPINT_ITTXFE: u32 = USB_OTG_DIEPINT_ITTXFE_Msk;
pub const USB_OTG_DIEPINT_INEPNM_Pos: u32 = 5;
pub const USB_OTG_DIEPINT_INEPNM_Msk: u32 = 0x1 << USB_OTG_DIEPINT_INEPNM_Pos;
pub const USB_OTG_DIEPINT_INEPNM: u32 = USB_OTG_DIEPINT_INEPNM_Msk;
pub const USB_OTG_DIEPINT_INEPNE_Pos: u32 = 6;
pub const USB_OTG_DIEPINT_INEPNE_Msk: u32 = 0x1 << USB_OTG_DIEPINT_INEPNE_Pos;
pub const USB_OTG_DIEPINT_INEPNE: u32 = USB_OTG_DIEPINT_INEPNE_Msk;
pub const USB_OTG_DIEPINT_TXFE_Pos: u32 = 7;
pub const USB_OTG_DIEPINT_TXFE_Msk: u32 = 0x1 << USB_OTG_DIEPINT_TXFE_Pos;
pub const USB_OTG_DIEPINT_TXFE: u32 = USB_OTG_DIEPINT_TXFE_Msk;
pub const USB_OTG_DIEPINT_TXFIFOUDRN_Pos: u32 = 8;
pub const USB_OTG_DIEPINT_TXFIFOUDRN_Msk: u32 = 0x1 << USB_OTG_DIEPINT_TXFIFOUDRN_Pos;
pub const USB_OTG_DIEPINT_TXFIFOUDRN: u32 = USB_OTG_DIEPINT_TXFIFOUDRN_Msk;
pub const USB_OTG_DIEPINT_BNA_Pos: u32 = 9;
pub const USB_OTG_DIEPINT_BNA_Msk: u32 = 0x1 << USB_OTG_DIEPINT_BNA_Pos;
pub const USB_OTG_DIEPINT_BNA: u32 = USB_OTG_DIEPINT_BNA_Msk;
pub const USB_OTG_DIEPINT_PKTDRPSTS_Pos: u32 = 11;
pub const USB_OTG_DIEPINT_PKTDRPSTS_Msk: u32 = 0x1 << USB_OTG_DIEPINT_PKTDRPSTS_Pos;
pub const USB_OTG_DIEPINT_PKTDRPSTS: u32 = USB_OTG_DIEPINT_PKTDRPSTS_Msk;
pub const USB_OTG_DIEPINT_BERR_Pos: u32 = 12;
pub const USB_OTG_DIEPINT_BERR_Msk: u32 = 0x1 << USB_OTG_DIEPINT_BERR_Pos;
pub const USB_OTG_DIEPINT_BERR: u32 = USB_OTG_DIEPINT_BERR_Msk;
pub const USB_OTG_DIEPINT_NAK_Pos: u32 = 13;
pub const USB_OTG_DIEPINT_NAK_Msk: u32 = 0x1 << USB_OTG_DIEPINT_NAK_Pos;
pub const USB_OTG_DIEPINT_NAK: u32 = USB_OTG_DIEPINT_NAK_Msk;
pub const USB_OTG_HCINTMSK_XFRCM_Pos: u32 = 0;
pub const USB_OTG_HCINTMSK_XFRCM_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_XFRCM_Pos;
pub const USB_OTG_HCINTMSK_XFRCM: u32 = USB_OTG_HCINTMSK_XFRCM_Msk;
pub const USB_OTG_HCINTMSK_CHHM_Pos: u32 = 1;
pub const USB_OTG_HCINTMSK_CHHM_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_CHHM_Pos;
pub const USB_OTG_HCINTMSK_CHHM: u32 = USB_OTG_HCINTMSK_CHHM_Msk;
pub const USB_OTG_HCINTMSK_AHBERR_Pos: u32 = 2;
pub const USB_OTG_HCINTMSK_AHBERR_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_AHBERR_Pos;
pub const USB_OTG_HCINTMSK_AHBERR: u32 = USB_OTG_HCINTMSK_AHBERR_Msk;
pub const USB_OTG_HCINTMSK_STALLM_Pos: u32 = 3;
pub const USB_OTG_HCINTMSK_STALLM_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_STALLM_Pos;
pub const USB_OTG_HCINTMSK_STALLM: u32 = USB_OTG_HCINTMSK_STALLM_Msk;
pub const USB_OTG_HCINTMSK_NAKM_Pos: u32 = 4;
pub const USB_OTG_HCINTMSK_NAKM_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_NAKM_Pos;
pub const USB_OTG_HCINTMSK_NAKM: u32 = USB_OTG_HCINTMSK_NAKM_Msk;
pub const USB_OTG_HCINTMSK_ACKM_Pos: u32 = 5;
pub const USB_OTG_HCINTMSK_ACKM_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_ACKM_Pos;
pub const USB_OTG_HCINTMSK_ACKM: u32 = USB_OTG_HCINTMSK_ACKM_Msk;
pub const USB_OTG_HCINTMSK_NYET_Pos: u32 = 6;
pub const USB_OTG_HCINTMSK_NYET_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_NYET_Pos;
pub const USB_OTG_HCINTMSK_NYET: u32 = USB_OTG_HCINTMSK_NYET_Msk;
pub const USB_OTG_HCINTMSK_TXERRM_Pos: u32 = 7;
pub const USB_OTG_HCINTMSK_TXERRM_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_TXERRM_Pos;
pub const USB_OTG_HCINTMSK_TXERRM: u32 = USB_OTG_HCINTMSK_TXERRM_Msk;
pub const USB_OTG_HCINTMSK_BBERRM_Pos: u32 = 8;
pub const USB_OTG_HCINTMSK_BBERRM_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_BBERRM_Pos;
pub const USB_OTG_HCINTMSK_BBERRM: u32 = USB_OTG_HCINTMSK_BBERRM_Msk;
pub const USB_OTG_HCINTMSK_FRMORM_Pos: u32 = 9;
pub const USB_OTG_HCINTMSK_FRMORM_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_FRMORM_Pos;
pub const USB_OTG_HCINTMSK_FRMORM: u32 = USB_OTG_HCINTMSK_FRMORM_Msk;
pub const USB_OTG_HCINTMSK_DTERRM_Pos: u32 = 10;
pub const USB_OTG_HCINTMSK_DTERRM_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_DTERRM_Pos;
pub const USB_OTG_HCINTMSK_DTERRM: u32 = USB_OTG_HCINTMSK_DTERRM_Msk;
pub const USB_OTG_DIEPTSIZ_XFRSIZ_Pos: u32 = 0;
pub const USB_OTG_DIEPTSIZ_XFRSIZ_Msk: u32 = 0x7FFFF << USB_OTG_DIEPTSIZ_XFRSIZ_Pos;
pub const USB_OTG_DIEPTSIZ_XFRSIZ: u32 = USB_OTG_DIEPTSIZ_XFRSIZ_Msk;
pub const USB_OTG_DIEPTSIZ_PKTCNT_Pos: u32 = 19;
pub const USB_OTG_DIEPTSIZ_PKTCNT_Msk: u32 = 0x3FF << USB_OTG_DIEPTSIZ_PKTCNT_Pos;
pub const USB_OTG_DIEPTSIZ_PKTCNT: u32 = USB_OTG_DIEPTSIZ_PKTCNT_Msk;
pub const USB_OTG_DIEPTSIZ_MULCNT_Pos: u32 = 29;
pub const USB_OTG_DIEPTSIZ_MULCNT_Msk: u32 = 0x3 << USB_OTG_DIEPTSIZ_MULCNT_Pos;
pub const USB_OTG_DIEPTSIZ_MULCNT: u32 = USB_OTG_DIEPTSIZ_MULCNT_Msk;
pub const USB_OTG_HCTSIZ_XFRSIZ_Pos: u32 = 0;
pub const USB_OTG_HCTSIZ_XFRSIZ_Msk: u32 = 0x7FFFF << USB_OTG_HCTSIZ_XFRSIZ_Pos;
pub const USB_OTG_HCTSIZ_XFRSIZ: u32 = USB_OTG_HCTSIZ_XFRSIZ_Msk;
pub const USB_OTG_HCTSIZ_PKTCNT_Pos: u32 = 19;
pub const USB_OTG_HCTSIZ_PKTCNT_Msk: u32 = 0x3FF << USB_OTG_HCTSIZ_PKTCNT_Pos;
pub const USB_OTG_HCTSIZ_PKTCNT: u32 = USB_OTG_HCTSIZ_PKTCNT_Msk;
pub const USB_OTG_HCTSIZ_DOPING_Pos: u32 = 31;
pub const USB_OTG_HCTSIZ_DOPING_Msk: u32 = 0x1 << USB_OTG_HCTSIZ_DOPING_Pos;
pub const USB_OTG_HCTSIZ_DOPING: u32 = USB_OTG_HCTSIZ_DOPING_Msk;
pub const USB_OTG_HCTSIZ_DPID_Pos: u32 = 29;
pub const USB_OTG_HCTSIZ_DPID_Msk: u32 = 0x3 << USB_OTG_HCTSIZ_DPID_Pos;
pub const USB_OTG_HCTSIZ_DPID: u32 = USB_OTG_HCTSIZ_DPID_Msk;
pub const USB_OTG_HCTSIZ_DPID_0: u32 = 0x1 << USB_OTG_HCTSIZ_DPID_Pos;
pub const USB_OTG_HCTSIZ_DPID_1: u32 = 0x2 << USB_OTG_HCTSIZ_DPID_Pos;
pub const USB_OTG_DIEPDMA_DMAADDR_Pos: u32 = 0;
pub const USB_OTG_DIEPDMA_DMAADDR_Msk: u32 = 0xFFFFFFFF << USB_OTG_DIEPDMA_DMAADDR_Pos;
pub const USB_OTG_DIEPDMA_DMAADDR: u32 = USB_OTG_DIEPDMA_DMAADDR_Msk;
pub const USB_OTG_HCDMA_DMAADDR_Pos: u32 = 0;
pub const USB_OTG_HCDMA_DMAADDR_Msk: u32 = 0xFFFFFFFF << USB_OTG_HCDMA_DMAADDR_Pos;
pub const USB_OTG_HCDMA_DMAADDR: u32 = USB_OTG_HCDMA_DMAADDR_Msk;
pub const USB_OTG_DTXFSTS_INEPTFSAV_Pos: u32 = 0;
pub const USB_OTG_DTXFSTS_INEPTFSAV_Msk: u32 = 0xFFFF << USB_OTG_DTXFSTS_INEPTFSAV_Pos;
pub const USB_OTG_DTXFSTS_INEPTFSAV: u32 = USB_OTG_DTXFSTS_INEPTFSAV_Msk;
pub const USB_OTG_DIEPTXF_INEPTXSA_Pos: u32 = 0;
pub const USB_OTG_DIEPTXF_INEPTXSA_Msk: u32 = 0xFFFF << USB_OTG_DIEPTXF_INEPTXSA_Pos;
pub const USB_OTG_DIEPTXF_INEPTXSA: u32 = USB_OTG_DIEPTXF_INEPTXSA_Msk;
pub const USB_OTG_DIEPTXF_INEPTXFD_Pos: u32 = 16;
pub const USB_OTG_DIEPTXF_INEPTXFD_Msk: u32 = 0xFFFF << USB_OTG_DIEPTXF_INEPTXFD_Pos;
pub const USB_OTG_DIEPTXF_INEPTXFD: u32 = USB_OTG_DIEPTXF_INEPTXFD_Msk;
pub const USB_OTG_DOEPCTL_MPSIZ_Pos: u32 = 0;
pub const USB_OTG_DOEPCTL_MPSIZ_Msk: u32 = 0x7FF << USB_OTG_DOEPCTL_MPSIZ_Pos;
pub const USB_OTG_DOEPCTL_MPSIZ: u32 = USB_OTG_DOEPCTL_MPSIZ_Msk;
pub const USB_OTG_DOEPCTL_USBAEP_Pos: u32 = 15;
pub const USB_OTG_DOEPCTL_USBAEP_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_USBAEP_Pos;
pub const USB_OTG_DOEPCTL_USBAEP: u32 = USB_OTG_DOEPCTL_USBAEP_Msk;
pub const USB_OTG_DOEPCTL_NAKSTS_Pos: u32 = 17;
pub const USB_OTG_DOEPCTL_NAKSTS_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_NAKSTS_Pos;
pub const USB_OTG_DOEPCTL_NAKSTS: u32 = USB_OTG_DOEPCTL_NAKSTS_Msk;
pub const USB_OTG_DOEPCTL_SD0PID_SEVNFRM_Pos: u32 = 28;
pub const USB_OTG_DOEPCTL_SD0PID_SEVNFRM_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_SD0PID_SEVNFRM_Pos;
pub const USB_OTG_DOEPCTL_SD0PID_SEVNFRM: u32 = USB_OTG_DOEPCTL_SD0PID_SEVNFRM_Msk;
pub const USB_OTG_DOEPCTL_SODDFRM_Pos: u32 = 29;
pub const USB_OTG_DOEPCTL_SODDFRM_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_SODDFRM_Pos;
pub const USB_OTG_DOEPCTL_SODDFRM: u32 = USB_OTG_DOEPCTL_SODDFRM_Msk;
pub const USB_OTG_DOEPCTL_EPTYP_Pos: u32 = 18;
pub const USB_OTG_DOEPCTL_EPTYP_Msk: u32 = 0x3 << USB_OTG_DOEPCTL_EPTYP_Pos;
pub const USB_OTG_DOEPCTL_EPTYP: u32 = USB_OTG_DOEPCTL_EPTYP_Msk;
pub const USB_OTG_DOEPCTL_EPTYP_0: u32 = 0x1 << USB_OTG_DOEPCTL_EPTYP_Pos;
pub const USB_OTG_DOEPCTL_EPTYP_1: u32 = 0x2 << USB_OTG_DOEPCTL_EPTYP_Pos;
pub const USB_OTG_DOEPCTL_SNPM_Pos: u32 = 20;
pub const USB_OTG_DOEPCTL_SNPM_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_SNPM_Pos;
pub const USB_OTG_DOEPCTL_SNPM: u32 = USB_OTG_DOEPCTL_SNPM_Msk;
pub const USB_OTG_DOEPCTL_STALL_Pos: u32 = 21;
pub const USB_OTG_DOEPCTL_STALL_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_STALL_Pos;
pub const USB_OTG_DOEPCTL_STALL: u32 = USB_OTG_DOEPCTL_STALL_Msk;
pub const USB_OTG_DOEPCTL_CNAK_Pos: u32 = 26;
pub const USB_OTG_DOEPCTL_CNAK_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_CNAK_Pos;
pub const USB_OTG_DOEPCTL_CNAK: u32 = USB_OTG_DOEPCTL_CNAK_Msk;
pub const USB_OTG_DOEPCTL_SNAK_Pos: u32 = 27;
pub const USB_OTG_DOEPCTL_SNAK_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_SNAK_Pos;
pub const USB_OTG_DOEPCTL_SNAK: u32 = USB_OTG_DOEPCTL_SNAK_Msk;
pub const USB_OTG_DOEPCTL_EPDIS_Pos: u32 = 30;
pub const USB_OTG_DOEPCTL_EPDIS_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_EPDIS_Pos;
pub const USB_OTG_DOEPCTL_EPDIS: u32 = USB_OTG_DOEPCTL_EPDIS_Msk;
pub const USB_OTG_DOEPCTL_EPENA_Pos: u32 = 31;
pub const USB_OTG_DOEPCTL_EPENA_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_EPENA_Pos;
pub const USB_OTG_DOEPCTL_EPENA: u32 = USB_OTG_DOEPCTL_EPENA_Msk;
pub const USB_OTG_DOEPINT_XFRC_Pos: u32 = 0;
pub const USB_OTG_DOEPINT_XFRC_Msk: u32 = 0x1 << USB_OTG_DOEPINT_XFRC_Pos;
pub const USB_OTG_DOEPINT_XFRC: u32 = USB_OTG_DOEPINT_XFRC_Msk;
pub const USB_OTG_DOEPINT_EPDISD_Pos: u32 = 1;
pub const USB_OTG_DOEPINT_EPDISD_Msk: u32 = 0x1 << USB_OTG_DOEPINT_EPDISD_Pos;
pub const USB_OTG_DOEPINT_EPDISD: u32 = USB_OTG_DOEPINT_EPDISD_Msk;
pub const USB_OTG_DOEPINT_AHBERR_Pos: u32 = 2;
pub const USB_OTG_DOEPINT_AHBERR_Msk: u32 = 0x1 << USB_OTG_DOEPINT_AHBERR_Pos;
pub const USB_OTG_DOEPINT_AHBERR: u32 = USB_OTG_DOEPINT_AHBERR_Msk;
pub const USB_OTG_DOEPINT_STUP_Pos: u32 = 3;
pub const USB_OTG_DOEPINT_STUP_Msk: u32 = 0x1 << USB_OTG_DOEPINT_STUP_Pos;
pub const USB_OTG_DOEPINT_STUP: u32 = USB_OTG_DOEPINT_STUP_Msk;
pub const USB_OTG_DOEPINT_OTEPDIS_Pos: u32 = 4;
pub const USB_OTG_DOEPINT_OTEPDIS_Msk: u32 = 0x1 << USB_OTG_DOEPINT_OTEPDIS_Pos;
pub const USB_OTG_DOEPINT_OTEPDIS: u32 = USB_OTG_DOEPINT_OTEPDIS_Msk;
pub const USB_OTG_DOEPINT_OTEPSPR_Pos: u32 = 5;
pub const USB_OTG_DOEPINT_OTEPSPR_Msk: u32 = 0x1 << USB_OTG_DOEPINT_OTEPSPR_Pos;
pub const USB_OTG_DOEPINT_OTEPSPR: u32 = USB_OTG_DOEPINT_OTEPSPR_Msk;
pub const USB_OTG_DOEPINT_B2BSTUP_Pos: u32 = 6;
pub const USB_OTG_DOEPINT_B2BSTUP_Msk: u32 = 0x1 << USB_OTG_DOEPINT_B2BSTUP_Pos;
pub const USB_OTG_DOEPINT_B2BSTUP: u32 = USB_OTG_DOEPINT_B2BSTUP_Msk;
pub const USB_OTG_DOEPINT_OUTPKTERR_Pos: u32 = 8;
pub const USB_OTG_DOEPINT_OUTPKTERR_Msk: u32 = 0x1 << USB_OTG_DOEPINT_OUTPKTERR_Pos;
pub const USB_OTG_DOEPINT_OUTPKTERR: u32 = USB_OTG_DOEPINT_OUTPKTERR_Msk;
pub const USB_OTG_DOEPINT_NAK_Pos: u32 = 13;
pub const USB_OTG_DOEPINT_NAK_Msk: u32 = 0x1 << USB_OTG_DOEPINT_NAK_Pos;
pub const USB_OTG_DOEPINT_NAK: u32 = USB_OTG_DOEPINT_NAK_Msk;
pub const USB_OTG_DOEPINT_NYET_Pos: u32 = 14;
pub const USB_OTG_DOEPINT_NYET_Msk: u32 = 0x1 << USB_OTG_DOEPINT_NYET_Pos;
pub const USB_OTG_DOEPINT_NYET: u32 = USB_OTG_DOEPINT_NYET_Msk;
pub const USB_OTG_DOEPINT_STPKTRX_Pos: u32 = 15;
pub const USB_OTG_DOEPINT_STPKTRX_Msk: u32 = 0x1 << USB_OTG_DOEPINT_STPKTRX_Pos;
pub const USB_OTG_DOEPINT_STPKTRX: u32 = USB_OTG_DOEPINT_STPKTRX_Msk;
pub const USB_OTG_DOEPTSIZ_XFRSIZ_Pos: u32 = 0;
pub const USB_OTG_DOEPTSIZ_XFRSIZ_Msk: u32 = 0x7FFFF << USB_OTG_DOEPTSIZ_XFRSIZ_Pos;
pub const USB_OTG_DOEPTSIZ_XFRSIZ: u32 = USB_OTG_DOEPTSIZ_XFRSIZ_Msk;
pub const USB_OTG_DOEPTSIZ_PKTCNT_Pos: u32 = 19;
pub const USB_OTG_DOEPTSIZ_PKTCNT_Msk: u32 = 0x3FF << USB_OTG_DOEPTSIZ_PKTCNT_Pos;
pub const USB_OTG_DOEPTSIZ_PKTCNT: u32 = USB_OTG_DOEPTSIZ_PKTCNT_Msk;
pub const USB_OTG_DOEPTSIZ_STUPCNT_Pos: u32 = 29;
pub const USB_OTG_DOEPTSIZ_STUPCNT_Msk: u32 = 0x3 << USB_OTG_DOEPTSIZ_STUPCNT_Pos;
pub const USB_OTG_DOEPTSIZ_STUPCNT: u32 = USB_OTG_DOEPTSIZ_STUPCNT_Msk;
pub const USB_OTG_DOEPTSIZ_STUPCNT_0: u32 = 0x1 << USB_OTG_DOEPTSIZ_STUPCNT_Pos;
pub const USB_OTG_DOEPTSIZ_STUPCNT_1: u32 = 0x2 << USB_OTG_DOEPTSIZ_STUPCNT_Pos;
pub const USB_OTG_PCGCCTL_STOPCLK_Pos: u32 = 0;
pub const USB_OTG_PCGCCTL_STOPCLK_Msk: u32 = 0x1 << USB_OTG_PCGCCTL_STOPCLK_Pos;
pub const USB_OTG_PCGCCTL_STOPCLK: u32 = USB_OTG_PCGCCTL_STOPCLK_Msk;
pub const USB_OTG_PCGCCTL_GATECLK_Pos: u32 = 1;
pub const USB_OTG_PCGCCTL_GATECLK_Msk: u32 = 0x1 << USB_OTG_PCGCCTL_GATECLK_Pos;
pub const USB_OTG_PCGCCTL_GATECLK: u32 = USB_OTG_PCGCCTL_GATECLK_Msk;
pub const USB_OTG_PCGCCTL_PHYSUSP_Pos: u32 = 4;
pub const USB_OTG_PCGCCTL_PHYSUSP_Msk: u32 = 0x1 << USB_OTG_PCGCCTL_PHYSUSP_Pos;
pub const USB_OTG_PCGCCTL_PHYSUSP: u32 = USB_OTG_PCGCCTL_PHYSUSP_Msk;
