#![no_std]
#![allow(non_camel_case_types, non_snake_case, non_upper_case_globals)]
#[repr(i32)]
pub enum IRQn_Type {
    Reset_IRQn = -15,
    NonMaskableInt_IRQn = -14,
    HardFault_IRQn = -13,
    MemoryManagement_IRQn = -12,
    BusFault_IRQn = -11,
    UsageFault_IRQn = -10,
    SVCall_IRQn = -5,
    DebugMonitor_IRQn = -4,
    PendSV_IRQn = -2,
    SysTick_IRQn = -1,
    PVD_PVM_IRQn = 0,
    DTS_IRQn = 2,
    IWDG_IRQn = 3,
    WWDG_IRQn = 4,
    RCC_IRQn = 5,
    FLASH_IRQn = 8,
    RAMECC_IRQn = 9,
    FPU_IRQn = 10,
    TAMP_IRQn = 13,
    EXTI0_IRQn = 16,
    EXTI1_IRQn = 17,
    EXTI2_IRQn = 18,
    EXTI3_IRQn = 19,
    EXTI4_IRQn = 20,
    EXTI5_IRQn = 21,
    EXTI6_IRQn = 22,
    EXTI7_IRQn = 23,
    EXTI8_IRQn = 24,
    EXTI9_IRQn = 25,
    EXTI10_IRQn = 26,
    EXTI11_IRQn = 27,
    EXTI12_IRQn = 28,
    EXTI13_IRQn = 29,
    EXTI14_IRQn = 30,
    EXTI15_IRQn = 31,
    RTC_IRQn = 32,
    SAES_IRQn = 33,
    CRYP_IRQn = 34,
    PKA_IRQn = 35,
    HASH_IRQn = 36,
    RNG_IRQn = 37,
    ADC1_2_IRQn = 38,
    GPDMA1_Channel0_IRQn = 39,
    GPDMA1_Channel1_IRQn = 40,
    GPDMA1_Channel2_IRQn = 41,
    GPDMA1_Channel3_IRQn = 42,
    GPDMA1_Channel4_IRQn = 43,
    GPDMA1_Channel5_IRQn = 44,
    GPDMA1_Channel6_IRQn = 45,
    GPDMA1_Channel7_IRQn = 46,
    TIM1_BRK_IRQn = 47,
    TIM1_UP_IRQn = 48,
    TIM1_TRG_COM_IRQn = 49,
    TIM1_CC_IRQn = 50,
    TIM2_IRQn = 51,
    TIM3_IRQn = 52,
    TIM4_IRQn = 53,
    TIM5_IRQn = 54,
    TIM6_IRQn = 55,
    TIM7_IRQn = 56,
    TIM9_IRQn = 57,
    SPI1_IRQn = 58,
    SPI2_IRQn = 59,
    SPI3_IRQn = 60,
    SPI4_IRQn = 61,
    SPI5_IRQn = 62,
    SPI6_IRQn = 63,
    HPDMA1_Channel0_IRQn = 64,
    HPDMA1_Channel1_IRQn = 65,
    HPDMA1_Channel2_IRQn = 66,
    HPDMA1_Channel3_IRQn = 67,
    HPDMA1_Channel4_IRQn = 68,
    HPDMA1_Channel5_IRQn = 69,
    HPDMA1_Channel6_IRQn = 70,
    HPDMA1_Channel7_IRQn = 71,
    SAI1_A_IRQn = 72,
    SAI1_B_IRQn = 73,
    SAI2_A_IRQn = 74,
    SAI2_B_IRQn = 75,
    I2C1_EV_IRQn = 76,
    I2C1_ER_IRQn = 77,
    I2C2_EV_IRQn = 78,
    I2C2_ER_IRQn = 79,
    I2C3_EV_IRQn = 80,
    I2C3_ER_IRQn = 81,
    USART1_IRQn = 82,
    USART2_IRQn = 83,
    USART3_IRQn = 84,
    UART4_IRQn = 85,
    UART5_IRQn = 86,
    UART7_IRQn = 87,
    UART8_IRQn = 88,
    I3C1_EV_IRQn = 89,
    I3C1_ER_IRQn = 90,
    OTG_HS_IRQn = 91,
    ETH_IRQn = 92,
    CORDIC_IRQn = 93,
    GFXTIM_IRQn = 94,
    DCMIPP_IRQn = 95,
    LTDC_IRQn = 96,
    LTDC_ER_IRQn = 97,
    DMA2D_IRQn = 98,
    JPEG_IRQn = 99,
    GFXMMU_IRQn = 100,
    I3C1_WKUP_IRQn = 101,
    MCE1_IRQn = 102,
    MCE2_IRQn = 103,
    MCE3_IRQn = 104,
    XSPI1_IRQn = 105,
    XSPI2_IRQn = 106,
    FMC_IRQn = 107,
    SDMMC1_IRQn = 108,
    SDMMC2_IRQn = 109,
    OTG_FS_IRQn = 112,
    TIM12_IRQn = 113,
    TIM13_IRQn = 114,
    TIM14_IRQn = 115,
    TIM15_IRQn = 116,
    TIM16_IRQn = 117,
    TIM17_IRQn = 118,
    LPTIM1_IRQn = 119,
    LPTIM2_IRQn = 120,
    LPTIM3_IRQn = 121,
    LPTIM4_IRQn = 122,
    LPTIM5_IRQn = 123,
    SPDIF_RX_IRQn = 124,
    MDIOS_IRQn = 125,
    ADF1_FLT0_IRQn = 126,
    CRS_IRQn = 127,
    UCPD1_IRQn = 128,
    CEC_IRQn = 129,
    PSSI_IRQn = 130,
    LPUART1_IRQn = 131,
    WAKEUP_PIN_IRQn = 132,
    GPDMA1_Channel8_IRQn = 133,
    GPDMA1_Channel9_IRQn = 134,
    GPDMA1_Channel10_IRQn = 135,
    GPDMA1_Channel11_IRQn = 136,
    GPDMA1_Channel12_IRQn = 137,
    GPDMA1_Channel13_IRQn = 138,
    GPDMA1_Channel14_IRQn = 139,
    GPDMA1_Channel15_IRQn = 140,
    HPDMA1_Channel8_IRQn = 141,
    HPDMA1_Channel9_IRQn = 142,
    HPDMA1_Channel10_IRQn = 143,
    HPDMA1_Channel11_IRQn = 144,
    HPDMA1_Channel12_IRQn = 145,
    HPDMA1_Channel13_IRQn = 146,
    HPDMA1_Channel14_IRQn = 147,
    HPDMA1_Channel15_IRQn = 148,
    GPU2D_IRQn = 149,
    GPU2D_ER_IRQn = 150,
    ICACHE_IRQn = 151,
    FDCAN1_IT0_IRQn = 152,
    FDCAN1_IT1_IRQn = 153,
    FDCAN2_IT0_IRQn = 154,
    FDCAN2_IT1_IRQn = 155,
}
#[repr(C)]
pub struct ADC_TypeDef {
    pub ISR: u32,
    pub IER: u32,
    pub CR: u32,
    pub CFGR: u32,
    pub CFGR2: u32,
    pub SMPR1: u32,
    pub SMPR2: u32,
    pub RESERVED1: u32,
    pub TR1: u32,
    pub TR2: u32,
    pub TR3: u32,
    pub RESERVED2: u32,
    pub SQR1: u32,
    pub SQR2: u32,
    pub SQR3: u32,
    pub SQR4: u32,
    pub DR: u32,
    pub RESERVED3: u32,
    pub RESERVED4: u32,
    pub JSQR: u32,
    pub RESERVED5: [u32; 4],
    pub OFR1: u32,
    pub OFR2: u32,
    pub OFR3: u32,
    pub OFR4: u32,
    pub RESERVED6: [u32; 4],
    pub JDR1: u32,
    pub JDR2: u32,
    pub JDR3: u32,
    pub JDR4: u32,
    pub RESERVED7: [u32; 4],
    pub AWD2CR: u32,
    pub AWD3CR: u32,
    pub RESERVED8: u32,
    pub RESERVED9: u32,
    pub DIFSEL: u32,
    pub CALFACT: u32,
    pub RESERVED10: [u32; 4],
    pub OR: u32,
}
#[repr(C)]
pub struct ADC_Common_TypeDef {
    pub CSR: u32,
    pub RESERVED1: u32,
    pub CCR: u32,
    pub CDR: u32,
}
#[repr(C)]
pub struct AXIM_ASIB_TypeDef {
    pub RESERVED1: [u32; 9],
    pub FNMOD2: u32,
    pub RESERVED3: [u32; 54],
    pub READQOS: u32,
    pub WRITEQOS: u32,
    pub FNMOD: u32,
}
#[repr(C)]
pub struct AXIM_AMIB_TypeDef {
    pub RESERVED1: [u32; 2],
    pub FNMODBMISS: u32,
    pub RESERVED2: [u32; 6],
    pub FNMOD2: u32,
    pub RESERVED3: [u32; 1],
    pub FNMODLB: u32,
    pub RESERVED5: [u32; 54],
    pub FNMOD: u32,
}
#[repr(C)]
pub struct VREFBUF_TypeDef {
    pub CSR: u32,
    pub CCR: u32,
}
#[repr(C)]
pub struct CEC_TypeDef {
    pub CR: u32,
    pub CFGR: u32,
    pub TXDR: u32,
    pub RXDR: u32,
    pub ISR: u32,
    pub IER: u32,
}
#[repr(C)]
pub struct CORDIC_TypeDef {
    pub CSR: u32,
    pub WDATA: u32,
    pub RDATA: u32,
}
#[repr(C)]
pub struct GFXTIM_TypeDef {
    pub CR: u32,
    pub CGCR: u32,
    pub TCR: u32,
    pub TDR: u32,
    pub EVCR: u32,
    pub EVSR: u32,
    pub RESERVED1: [u32; 2],
    pub WDGTCR: u32,
    pub RESERVED2: [u32; 3],
    pub ISR: u32,
    pub ICR: u32,
    pub IER: u32,
    pub TSR: u32,
    pub LCCRR: u32,
    pub FCCRR: u32,
    pub RESERVED3: [u32; 2],
    pub ATR: u32,
    pub AFCR: u32,
    pub ALCR: u32,
    pub RESERVED4: [u32; 1],
    pub AFCC1R: u32,
    pub RESERVED5: [u32; 3],
    pub ALCC1R: u32,
    pub ALCC2R: u32,
    pub RESERVED6: [u32; 2],
    pub RFC1R: u32,
    pub RFC1RR: u32,
    pub RFC2R: u32,
    pub RFC2RR: u32,
    pub RESERVED7: [u32; 4],
    pub WDGCR: u32,
    pub WDGRR: u32,
    pub WDGPAR: u32,
    pub RESERVED8: [u32; 209],
    pub HWCFGR: u32,
    pub VERR: u32,
    pub IPIDR: u32,
    pub SIDR: u32,
}
#[repr(C)]
pub struct CRC_TypeDef {
    pub DR: u32,
    pub IDR: u32,
    pub CR: u32,
    pub RESERVED1: u32,
    pub INIT: u32,
    pub POL: u32,
}
#[repr(C)]
pub struct CRS_TypeDef {
    pub CR: u32,
    pub CFGR: u32,
    pub ISR: u32,
    pub ICR: u32,
}
#[repr(C)]
pub struct CRYP_TypeDef {
    pub CR: u32,
    pub SR: u32,
    pub DIN: u32,
    pub DOUT: u32,
    pub DMACR: u32,
    pub IMSCR: u32,
    pub RISR: u32,
    pub MISR: u32,
    pub K0LR: u32,
    pub K0RR: u32,
    pub K1LR: u32,
    pub K1RR: u32,
    pub K2LR: u32,
    pub K2RR: u32,
    pub K3LR: u32,
    pub K3RR: u32,
    pub IV0LR: u32,
    pub IV0RR: u32,
    pub IV1LR: u32,
    pub IV1RR: u32,
    pub CSGCMCCM0R: u32,
    pub CSGCMCCM1R: u32,
    pub CSGCMCCM2R: u32,
    pub CSGCMCCM3R: u32,
    pub CSGCMCCM4R: u32,
    pub CSGCMCCM5R: u32,
    pub CSGCMCCM6R: u32,
    pub CSGCMCCM7R: u32,
    pub CSGCM0R: u32,
    pub CSGCM1R: u32,
    pub CSGCM2R: u32,
    pub CSGCM3R: u32,
    pub CSGCM4R: u32,
    pub CSGCM5R: u32,
    pub CSGCM6R: u32,
    pub CSGCM7R: u32,
}
#[repr(C)]
pub struct DBGMCU_TypeDef {
    pub IDCODE: u32,
    pub CR: u32,
    pub RESERVED1: [u32; 5],
    pub AHB5FZR: u32,
    pub RESERVED2: u32,
    pub AHB1FZR: u32,
    pub RESERVED3: [u32; 5],
    pub APB1FZR: u32,
    pub RESERVED4: [u32; 3],
    pub APB2FZR: u32,
    pub RESERVED5: u32,
    pub APB4FZR: u32,
    pub RESERVED6: [u32; 41],
    pub SR: u32,
    pub DBG_AUTH_HOST: u32,
    pub DBG_AUTH_DEV: u32,
    pub DBG_AUTH_ACK: u32,
    pub RESERVED7: [u32; 945],
    pub PIDR4: u32,
    pub RESERVED8: [u32; 3],
    pub PIDR0: u32,
    pub PIDR1: u32,
    pub PIDR2: u32,
    pub PIDR3: u32,
    pub CIDR0: u32,
    pub CIDR1: u32,
    pub CIDR2: u32,
    pub CIDR3: u32,
}
#[repr(C)]
pub struct DCMIPP_TypeDef {
    pub IPGR1: u32,
    pub IPGR2: u32,
    pub IPGR3: u32,
    pub RESERVED1: [u32; 4],
    pub IPGR8: u32,
    pub IPC1R1: u32,
    pub IPC1R2: u32,
    pub IPC1R3: u32,
    pub RESERVED2: [u32; 54],
    pub PRCR: u32,
    pub PRESCR: u32,
    pub PRESUR: u32,
    pub RESERVED3: [u32; 57],
    pub PRIER: u32,
    pub PRSR: u32,
    pub PRFCR: u32,
    pub RESERVED4: u32,
    pub CMCR: u32,
    pub CMFRCR: u32,
    pub RESERVED5: [u32; 121],
    pub CMIER: u32,
    pub CMSR1: u32,
    pub CMSR2: u32,
    pub CMFCR: u32,
    pub RESERVED6: u32,
    pub P0FSCR: u32,
    pub RESERVED7: [u32; 62],
    pub P0FCTCR: u32,
    pub P0SCSTR: u32,
    pub P0SCSZR: u32,
    pub RESERVED8: [u32; 41],
    pub P0DCCNTR: u32,
    pub P0DCLMTR: u32,
    pub RESERVED9: [u32; 2],
    pub P0PPCR: u32,
    pub P0PPM0AR1: u32,
    pub P0PPM0AR2: u32,
    pub RESERVED10: [u32; 10],
    pub P0IER: u32,
    pub P0SR: u32,
    pub P0FCR: u32,
    pub RESERVED11: [u32; 64],
    pub P0CFCTCR: u32,
    pub P0CSCSTR: u32,
    pub P0CSCSZR: u32,
    pub RESERVED12: [u32; 45],
    pub P0CPPCR: u32,
    pub P0CPPM0AR1: u32,
    pub P0CPPM0AR2: u32,
}
#[repr(C)]
pub struct DLYB_TypeDef {
    pub CR: u32,
    pub CFGR: u32,
}
#[repr(C)]
pub struct DMA_TypeDef {
    pub RESERVED1: u32,
    pub PRIVCFGR: u32,
    pub RCFGLOCKR: u32,
    pub MISR: u32,
}
#[repr(C)]
pub struct DMA_Channel_TypeDef {
    pub CLBAR: u32,
    pub RESERVED1: [u32; 2],
    pub CFCR: u32,
    pub CSR: u32,
    pub CCR: u32,
    pub RESERVED2: [u32; 10],
    pub CTR1: u32,
    pub CTR2: u32,
    pub CBR1: u32,
    pub CSAR: u32,
    pub CDAR: u32,
    pub CTR3: u32,
    pub CBR2: u32,
    pub RESERVED3: [u32; 8],
    pub CLLR: u32,
}
#[repr(C)]
pub struct DMA2D_TypeDef {
    pub CR: u32,
    pub ISR: u32,
    pub IFCR: u32,
    pub FGMAR: u32,
    pub FGOR: u32,
    pub BGMAR: u32,
    pub BGOR: u32,
    pub FGPFCCR: u32,
    pub FGCOLR: u32,
    pub BGPFCCR: u32,
    pub BGCOLR: u32,
    pub FGCMAR: u32,
    pub BGCMAR: u32,
    pub OPFCCR: u32,
    pub OCOLR: u32,
    pub OMAR: u32,
    pub OOR: u32,
    pub NLR: u32,
    pub LWR: u32,
    pub AMTCR: u32,
    pub RESERVED: [u32; 236],
    pub FGCLUT: [u32; 256],
    pub BGCLUT: [u32; 256],
}
#[repr(C)]
pub struct DTS_TypeDef {
    pub CFGR1: u32,
    pub RESERVED0: u32,
    pub T0VALR1: u32,
    pub RESERVED1: u32,
    pub RAMPVALR: u32,
    pub ITR1: u32,
    pub RESERVED2: u32,
    pub DR: u32,
    pub SR: u32,
    pub ITENR: u32,
    pub ICIFR: u32,
    pub OR: u32,
}
#[repr(C)]
pub struct ETH_TypeDef {
    pub MACCR: u32,
    pub MACECR: u32,
    pub MACPFR: u32,
    pub MACWTR: u32,
    pub MACHT0R: u32,
    pub MACHT1R: u32,
    pub RESERVED1: [u32; 14],
    pub MACVTR: u32,
    pub RESERVED2: u32,
    pub MACVHTR: u32,
    pub RESERVED3: u32,
    pub MACVIR: u32,
    pub MACIVIR: u32,
    pub RESERVED4: [u32; 2],
    pub MACTFCR: u32,
    pub RESERVED5: [u32; 7],
    pub MACRFCR: u32,
    pub RESERVED6: [u32; 7],
    pub MACISR: u32,
    pub MACIER: u32,
    pub MACRXTXSR: u32,
    pub RESERVED7: u32,
    pub MACPCSR: u32,
    pub MACRWKPFR: u32,
    pub RESERVED8: [u32; 2],
    pub MACLCSR: u32,
    pub MACLTCR: u32,
    pub MACLETR: u32,
    pub MAC1USTCR: u32,
    pub RESERVED9: [u32; 12],
    pub MACVR: u32,
    pub MACDR: u32,
    pub RESERVED10: u32,
    pub MACHWF0R: u32,
    pub MACHWF1R: u32,
    pub MACHWF2R: u32,
    pub RESERVED11: [u32; 54],
    pub MACMDIOAR: u32,
    pub MACMDIODR: u32,
    pub RESERVED12: [u32; 2],
    pub MACARPAR: u32,
    pub RESERVED13: [u32; 59],
    pub MACA0HR: u32,
    pub MACA0LR: u32,
    pub MACA1HR: u32,
    pub MACA1LR: u32,
    pub MACA2HR: u32,
    pub MACA2LR: u32,
    pub MACA3HR: u32,
    pub MACA3LR: u32,
    pub RESERVED14: [u32; 248],
    pub MMCCR: u32,
    pub MMCRIR: u32,
    pub MMCTIR: u32,
    pub MMCRIMR: u32,
    pub MMCTIMR: u32,
    pub RESERVED15: [u32; 14],
    pub MMCTSCGPR: u32,
    pub MMCTMCGPR: u32,
    pub RESERVED16: [u32; 5],
    pub MMCTPCGR: u32,
    pub RESERVED17: [u32; 10],
    pub MMCRCRCEPR: u32,
    pub MMCRAEPR: u32,
    pub RESERVED18: [u32; 10],
    pub MMCRUPGR: u32,
    pub RESERVED19: [u32; 9],
    pub MMCTLPIMSTR: u32,
    pub MMCTLPITCR: u32,
    pub MMCRLPIMSTR: u32,
    pub MMCRLPITCR: u32,
    pub RESERVED20: [u32; 65],
    pub MACL3L4C0R: u32,
    pub MACL4A0R: u32,
    pub RESERVED21: [u32; 2],
    pub MACL3A0R0R: u32,
    pub MACL3A1R0R: u32,
    pub MACL3A2R0R: u32,
    pub MACL3A3R0R: u32,
    pub RESERVED22: [u32; 4],
    pub MACL3L4C1R: u32,
    pub MACL4A1R: u32,
    pub RESERVED23: [u32; 2],
    pub MACL3A0R1R: u32,
    pub MACL3A1R1R: u32,
    pub MACL3A2R1R: u32,
    pub MACL3A3R1R: u32,
    pub RESERVED24: [u32; 108],
    pub MACTSCR: u32,
    pub MACSSIR: u32,
    pub MACSTSR: u32,
    pub MACSTNR: u32,
    pub MACSTSUR: u32,
    pub MACSTNUR: u32,
    pub MACTSAR: u32,
    pub RESERVED25: u32,
    pub MACTSSR: u32,
    pub RESERVED26: [u32; 3],
    pub MACTTSSNR: u32,
    pub MACTTSSSR: u32,
    pub RESERVED27: [u32; 2],
    pub MACACR: u32,
    pub RESERVED28: u32,
    pub MACATSNR: u32,
    pub MACATSSR: u32,
    pub MACTSIACR: u32,
    pub MACTSEACR: u32,
    pub MACTSICNR: u32,
    pub MACTSECNR: u32,
    pub RESERVED29: [u32; 4],
    pub MACPPSCR: u32,
    pub RESERVED30: [u32; 3],
    pub MACPPSTTSR: u32,
    pub MACPPSTTNR: u32,
    pub MACPPSIR: u32,
    pub MACPPSWR: u32,
    pub RESERVED31: [u32; 12],
    pub MACPOCR: u32,
    pub MACSPI0R: u32,
    pub MACSPI1R: u32,
    pub MACSPI2R: u32,
    pub MACLMIR: u32,
    pub RESERVED32: [u32; 11],
    pub MTLOMR: u32,
    pub RESERVED33: [u32; 7],
    pub MTLISR: u32,
    pub RESERVED34: [u32; 55],
    pub MTLTQOMR: u32,
    pub MTLTQUR: u32,
    pub MTLTQDR: u32,
    pub RESERVED35: [u32; 8],
    pub MTLQICSR: u32,
    pub MTLRQOMR: u32,
    pub MTLRQMPOCR: u32,
    pub MTLRQDR: u32,
    pub RESERVED36: [u32; 177],
    pub DMAMR: u32,
    pub DMASBMR: u32,
    pub DMAISR: u32,
    pub DMADSR: u32,
    pub RESERVED37: [u32; 60],
    pub DMACCR: u32,
    pub DMACTCR: u32,
    pub DMACRCR: u32,
    pub RESERVED38: [u32; 2],
    pub DMACTDLAR: u32,
    pub RESERVED39: u32,
    pub DMACRDLAR: u32,
    pub DMACTDTPR: u32,
    pub RESERVED40: u32,
    pub DMACRDTPR: u32,
    pub DMACTDRLR: u32,
    pub DMACRDRLR: u32,
    pub DMACIER: u32,
    pub DMACRIWTR: u32,
    pub DMACSFCSR: u32,
    pub RESERVED41: u32,
    pub DMACCATDR: u32,
    pub RESERVED42: u32,
    pub DMACCARDR: u32,
    pub RESERVED43: u32,
    pub DMACCATBR: u32,
    pub RESERVED44: u32,
    pub DMACCARBR: u32,
    pub DMACSR: u32,
    pub RESERVED45: [u32; 2],
    pub DMACMFCR: u32,
}
#[repr(C)]
pub struct EXTI_TypeDef {
    pub RTSR1: u32,
    pub FTSR1: u32,
    pub SWIER1: u32,
    pub RESERVED1: [u32; 5],
    pub RTSR2: u32,
    pub FTSR2: u32,
    pub SWIER2: u32,
    pub RESERVED2: [u32; 21],
    pub IMR1: u32,
    pub EMR1: u32,
    pub PR1: u32,
    pub RESERVED3: u32,
    pub IMR2: u32,
    pub EMR2: u32,
    pub PR2: u32,
    pub RESERVED4: u32,
    pub IMR3: u32,
    pub EMR3: u32,
}
#[repr(C)]
pub struct FDCAN_GlobalTypeDef {
    pub CREL: u32,
    pub ENDN: u32,
    pub RESERVED1: u32,
    pub DBTP: u32,
    pub TEST: u32,
    pub RWD: u32,
    pub CCCR: u32,
    pub NBTP: u32,
    pub TSCC: u32,
    pub TSCV: u32,
    pub TOCC: u32,
    pub TOCV: u32,
    pub RESERVED2: [u32; 4],
    pub ECR: u32,
    pub PSR: u32,
    pub TDCR: u32,
    pub RESERVED3: u32,
    pub IR: u32,
    pub IE: u32,
    pub ILS: u32,
    pub ILE: u32,
    pub RESERVED4: [u32; 8],
    pub RXGFC: u32,
    pub XIDAM: u32,
    pub HPMS: u32,
    pub RESERVED5: u32,
    pub RXF0S: u32,
    pub RXF0A: u32,
    pub RXF1S: u32,
    pub RXF1A: u32,
    pub RESERVED6: [u32; 8],
    pub TXBC: u32,
    pub TXFQS: u32,
    pub TXBRP: u32,
    pub TXBAR: u32,
    pub TXBCR: u32,
    pub TXBTO: u32,
    pub TXBCF: u32,
    pub TXBTIE: u32,
    pub TXBCIE: u32,
    pub TXEFS: u32,
    pub TXEFA: u32,
}
#[repr(C)]
pub struct FDCAN_Config_TypeDef {
    pub CKDIV: u32,
    pub RESERVED1: [u32; 128],
    pub OPTR: u32,
    pub RESERVED2: [u32; 58],
    pub HWCFG: u32,
    pub VERR: u32,
    pub IPIDR: u32,
    pub SIDR: u32,
}
#[repr(C)]
pub struct FLASH_TypeDef {
    pub ACR: u32,
    pub KEYR: u32,
    pub RESERVED1: [u32; 2],
    pub CR: u32,
    pub SR: u32,
    pub RESERVED2: [u32; 2],
    pub IER: u32,
    pub ISR: u32,
    pub ICR: u32,
    pub RESERVED3: u32,
    pub CRCCR: u32,
    pub CRCSADDR: u32,
    pub CRCEADDR: u32,
    pub CRCDATAR: u32,
    pub ECCSFADDR: u32,
    pub ECCDFADDR: u32,
    pub RESERVED4: [u32; 46],
    pub OPTKEYR: u32,
    pub OPTCR: u32,
    pub OPTISR: u32,
    pub OPTICR: u32,
    pub OBKCR: u32,
    pub RESERVED5: u32,
    pub OBKDR: [u32; 8],
    pub RESERVED6: [u32; 50],
    pub NVSR: u32,
    pub NVSRP: u32,
    pub ROTSR: u32,
    pub ROTSRP: u32,
    pub OTPLSR: u32,
    pub OTPLSRP: u32,
    pub WRPSR: u32,
    pub WRPSRP: u32,
    pub RESERVED7: [u32; 4],
    pub HDPSR: u32,
    pub HDPSRP: u32,
    pub RESERVED8: [u32; 6],
    pub EPOCHSR: u32,
    pub EPOCHSRP: u32,
    pub RESERVED9: [u32; 2],
    pub OBW1SR: u32,
    pub OBW1SRP: u32,
    pub OBW2SR: u32,
    pub OBW2SRP: u32,
}
#[repr(C)]
pub struct FMC_Bank1_TypeDef {
    pub BTCR: [u32; 8],
}
#[repr(C)]
pub struct FMC_Bank1E_TypeDef {
    pub BWTR: [u32; 7],
}
#[repr(C)]
pub struct FMC_Bank3_TypeDef {
    pub PCR: u32,
    pub SR: u32,
    pub PMEM: u32,
    pub PATT: u32,
    pub RESERVED0: u32,
    pub ECCR: u32,
}
#[repr(C)]
pub struct FMC_Bank5_6_TypeDef {
    pub SDCR: [u32; 2],
    pub SDTR: [u32; 2],
    pub SDCMR: u32,
    pub SDRTR: u32,
    pub SDSR: u32,
}
#[repr(C)]
pub struct GPIO_TypeDef {
    pub MODER: u32,
    pub OTYPER: u32,
    pub OSPEEDR: u32,
    pub PUPDR: u32,
    pub IDR: u32,
    pub ODR: u32,
    pub BSRR: u32,
    pub LCKR: u32,
    pub AFR: [u32; 2],
    pub BRR: u32,
}
#[repr(C)]
pub struct GFXMMU_TypeDef {
    pub CR: u32,
    pub SR: u32,
    pub FCR: u32,
    pub RESERVED0: u32,
    pub DVR: u32,
    pub DAR: u32,
    pub RESERVED1: [u32; 2],
    pub B0CR: u32,
    pub B1CR: u32,
    pub B2CR: u32,
    pub B3CR: u32,
    pub RESERVED2: [u32; 1012],
    pub LUT: [u32; 2048],
}
#[repr(C)]
pub struct HASH_TypeDef {
    pub CR: u32,
    pub DIN: u32,
    pub STR: u32,
    pub HR: [u32; 5],
    pub IMR: u32,
    pub SR: u32,
    pub RESERVED: [u32; 52],
    pub CSR: [u32; 103],
}
#[repr(C)]
pub struct HASH_DIGEST_TypeDef {
    pub HR: [u32; 16],
}
#[repr(C)]
pub struct I2C_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub OAR1: u32,
    pub OAR2: u32,
    pub TIMINGR: u32,
    pub TIMEOUTR: u32,
    pub ISR: u32,
    pub ICR: u32,
    pub PECR: u32,
    pub RXDR: u32,
    pub TXDR: u32,
}
#[repr(C)]
pub struct I3C_TypeDef {
    pub CR: u32,
    pub CFGR: u32,
    pub RESERVED1: [u32; 2],
    pub RDR: u32,
    pub RDWR: u32,
    pub TDR: u32,
    pub TDWR: u32,
    pub IBIDR: u32,
    pub TGTTDR: u32,
    pub RESERVED2: [u32; 2],
    pub SR: u32,
    pub SER: u32,
    pub RESERVED3: [u32; 2],
    pub RMR: u32,
    pub RESERVED4: [u32; 3],
    pub EVR: u32,
    pub IER: u32,
    pub CEVR: u32,
    pub RESERVED5: u32,
    pub DEVR0: u32,
    pub DEVRX: [u32; 4],
    pub RESERVED6: [u32; 7],
    pub MAXRLR: u32,
    pub MAXWLR: u32,
    pub RESERVED7: [u32; 2],
    pub TIMINGR0: u32,
    pub TIMINGR1: u32,
    pub TIMINGR2: u32,
    pub RESERVED9: [u32; 5],
    pub BCR: u32,
    pub DCR: u32,
    pub GETCAPR: u32,
    pub CRCAPR: u32,
    pub GETMXDSR: u32,
    pub EPIDR: u32,
}
#[repr(C)]
pub struct ICACHE_TypeDef {
    pub CR: u32,
    pub SR: u32,
    pub IER: u32,
    pub FCR: u32,
    pub HMONR: u32,
    pub MMONR: u32,
}
#[repr(C)]
pub struct IWDG_TypeDef {
    pub KR: u32,
    pub PR: u32,
    pub RLR: u32,
    pub SR: u32,
    pub WINR: u32,
    pub EWCR: u32,
}
#[repr(C)]
pub struct JPEG_TypeDef {
    pub CONFR0: u32,
    pub CONFR1: u32,
    pub CONFR2: u32,
    pub CONFR3: u32,
    pub CONFR4: u32,
    pub CONFR5: u32,
    pub CONFR6: u32,
    pub CONFR7: u32,
    pub RESERVED0: [u32; 4],
    pub CR: u32,
    pub SR: u32,
    pub CFR: u32,
    pub RESERVED1: u32,
    pub DIR: u32,
    pub DOR: u32,
    pub RESERVED2: [u32; 2],
    pub QMEM0: [u32; 16],
    pub QMEM1: [u32; 16],
    pub QMEM2: [u32; 16],
    pub QMEM3: [u32; 16],
    pub HUFFMIN: [u32; 16],
    pub HUFFBASE: [u32; 32],
    pub HUFFSYMB: [u32; 84],
    pub DHTMEM: [u32; 103],
    pub RESERVED3: u32,
    pub HUFFENC_AC0: [u32; 88],
    pub HUFFENC_AC1: [u32; 88],
    pub HUFFENC_DC0: [u32; 8],
    pub HUFFENC_DC1: [u32; 8],
}
#[repr(C)]
pub struct LPTIM_TypeDef {
    pub ISR: u32,
    pub ICR: u32,
    pub DIER: u32,
    pub CFGR: u32,
    pub CR: u32,
    pub CCR1: u32,
    pub ARR: u32,
    pub CNT: u32,
    pub RESERVED0: u32,
    pub CFGR2: u32,
    pub RCR: u32,
    pub CCMR1: u32,
    pub RESERVED1: u32,
    pub CCR2: u32,
}
#[repr(C)]
pub struct MCE_Region_TypeDef {
    pub REGCR: u32,
    pub SADDR: u32,
    pub EADDR: u32,
    pub ATTR: u32,
}
#[repr(C)]
pub struct MCE_Context_TypeDef {
    pub CCCFGR: u32,
    pub CCNR0: u32,
    pub CCNR1: u32,
    pub CCKEYR0: u32,
    pub CCKEYR1: u32,
    pub CCKEYR2: u32,
    pub CCKEYR3: u32,
}
#[repr(C)]
pub struct MCE_TypeDef {
    pub CR: u32,
    pub SR: u32,
    pub IASR: u32,
    pub IACR: u32,
    pub IAIER: u32,
    pub RESERVED1: [u32; 2],
    pub PRIVCFGR: u32,
    pub IAESR: u32,
    pub IADDR: u32,
    pub RESERVED2: [u32; 118],
    pub MKEYR0: u32,
    pub MKEYR1: u32,
    pub MKEYR2: u32,
    pub MKEYR3: u32,
    pub RESERVED3: [u32; 4],
    pub FMKEYR0: u32,
    pub FMKEYR1: u32,
    pub FMKEYR2: u32,
    pub FMKEYR3: u32,
}
#[repr(C)]
pub struct MDIOS_TypeDef {
    pub CR: u32,
    pub WRFR: u32,
    pub CWRFR: u32,
    pub RDFR: u32,
    pub CRDFR: u32,
    pub SR: u32,
    pub CLRFR: u32,
    pub RESERVED: [u32; 57],
    pub DINR0: u32,
    pub DINR1: u32,
    pub DINR2: u32,
    pub DINR3: u32,
    pub DINR4: u32,
    pub DINR5: u32,
    pub DINR6: u32,
    pub DINR7: u32,
    pub DINR8: u32,
    pub DINR9: u32,
    pub DINR10: u32,
    pub DINR11: u32,
    pub DINR12: u32,
    pub DINR13: u32,
    pub DINR14: u32,
    pub DINR15: u32,
    pub DINR16: u32,
    pub DINR17: u32,
    pub DINR18: u32,
    pub DINR19: u32,
    pub DINR20: u32,
    pub DINR21: u32,
    pub DINR22: u32,
    pub DINR23: u32,
    pub DINR24: u32,
    pub DINR25: u32,
    pub DINR26: u32,
    pub DINR27: u32,
    pub DINR28: u32,
    pub DINR29: u32,
    pub DINR30: u32,
    pub DINR31: u32,
    pub DOUTR0: u32,
    pub DOUTR1: u32,
    pub DOUTR2: u32,
    pub DOUTR3: u32,
    pub DOUTR4: u32,
    pub DOUTR5: u32,
    pub DOUTR6: u32,
    pub DOUTR7: u32,
    pub DOUTR8: u32,
    pub DOUTR9: u32,
    pub DOUTR10: u32,
    pub DOUTR11: u32,
    pub DOUTR12: u32,
    pub DOUTR13: u32,
    pub DOUTR14: u32,
    pub DOUTR15: u32,
    pub DOUTR16: u32,
    pub DOUTR17: u32,
    pub DOUTR18: u32,
    pub DOUTR19: u32,
    pub DOUTR20: u32,
    pub DOUTR21: u32,
    pub DOUTR22: u32,
    pub DOUTR23: u32,
    pub DOUTR24: u32,
    pub DOUTR25: u32,
    pub DOUTR26: u32,
    pub DOUTR27: u32,
    pub DOUTR28: u32,
    pub DOUTR29: u32,
    pub DOUTR30: u32,
    pub DOUTR31: u32,
}
#[repr(C)]
pub struct MDF_TypeDef {
    pub GCR: u32,
    pub CKGCR: u32,
}
#[repr(C)]
pub struct MDF_Filter_TypeDef {
    pub SITFCR: u32,
    pub BSMXCR: u32,
    pub DFLTCR: u32,
    pub DFLTCICR: u32,
    pub DFLTRSFR: u32,
    pub RESERVED0: [u32; 4],
    pub DLYCR: u32,
    pub RESERVED1: [u32; 1],
    pub DFLTIER: u32,
    pub DFLTISR: u32,
    pub RESERVED2: [u32; 1],
    pub SADCR: u32,
    pub SADCFGR: u32,
    pub SADSDLVR: u32,
    pub SADANLVR: u32,
    pub RESERVED3: [u32; 10],
    pub DFLTDR: u32,
}
#[repr(C)]
pub struct LTDC_TypeDef {
    pub RESERVED0: [u32; 2],
    pub SSCR: u32,
    pub BPCR: u32,
    pub AWCR: u32,
    pub TWCR: u32,
    pub GCR: u32,
    pub RESERVED1: [u32; 2],
    pub SRCR: u32,
    pub RESERVED2: [u32; 1],
    pub BCCR: u32,
    pub RESERVED3: [u32; 1],
    pub IER: u32,
    pub ISR: u32,
    pub ICR: u32,
    pub LIPCR: u32,
    pub CPSR: u32,
    pub CDSR: u32,
}
#[repr(C)]
pub struct LTDC_Layer_TypeDef {
    pub CR: u32,
    pub WHPCR: u32,
    pub WVPCR: u32,
    pub CKCR: u32,
    pub PFCR: u32,
    pub CACR: u32,
    pub DCCR: u32,
    pub BFCR: u32,
    pub RESERVED0: [u32; 2],
    pub CFBAR: u32,
    pub CFBLR: u32,
    pub CFBLNR: u32,
    pub RESERVED1: [u32; 3],
    pub CLUTWR: u32,
}
#[repr(C)]
pub struct XSPI_TypeDef {
    pub CR: u32,
    pub RESERVED1: u32,
    pub DCR1: u32,
    pub DCR2: u32,
    pub DCR3: u32,
    pub DCR4: u32,
    pub RESERVED2: [u32; 2],
    pub SR: u32,
    pub FCR: u32,
    pub RESERVED3: [u32; 6],
    pub DLR: u32,
    pub RESERVED4: u32,
    pub AR: u32,
    pub RESERVED5: u32,
    pub DR: u32,
    pub RESERVED6: [u32; 11],
    pub PSMKR: u32,
    pub RESERVED7: u32,
    pub PSMAR: u32,
    pub RESERVED8: u32,
    pub PIR: u32,
    pub RESERVED9: [u32; 27],
    pub CCR: u32,
    pub RESERVED10: u32,
    pub TCR: u32,
    pub RESERVED11: u32,
    pub IR: u32,
    pub RESERVED12: [u32; 3],
    pub ABR: u32,
    pub RESERVED13: [u32; 3],
    pub LPTR: u32,
    pub RESERVED14: [u32; 3],
    pub WPCCR: u32,
    pub RESERVED15: u32,
    pub WPTCR: u32,
    pub RESERVED16: u32,
    pub WPIR: u32,
    pub RESERVED17: [u32; 3],
    pub WPABR: u32,
    pub RESERVED18: [u32; 7],
    pub WCCR: u32,
    pub RESERVED19: u32,
    pub WTCR: u32,
    pub RESERVED20: u32,
    pub WIR: u32,
    pub RESERVED21: [u32; 3],
    pub WABR: u32,
    pub RESERVED22: [u32; 23],
    pub HLCR: u32,
    pub RESERVED23: [u32; 3],
    pub CALFCR: u32,
    pub RESERVED24: u32,
    pub CALMR: u32,
    pub RESERVED25: u32,
    pub CALSOR: u32,
    pub RESERVED26: u32,
    pub CALSIR: u32,
}
#[repr(C)]
pub struct XSPIM_TypeDef {
    pub CR: u32,
}
#[repr(C)]
pub struct PWR_TypeDef {
    pub CR1: u32,
    pub SR1: u32,
    pub CSR1: u32,
    pub CSR2: u32,
    pub CSR3: u32,
    pub CSR4: u32,
    pub RESERVED0: [u32; 2],
    pub WKUPCR: u32,
    pub WKUPFR: u32,
    pub WKUPEPR: u32,
    pub UCPDR: u32,
    pub APCR: u32,
    pub PUCRN: u32,
    pub PDCRN: u32,
    pub PUCRO: u32,
    pub PDCRO: u32,
    pub PDCRP: u32,
    pub RESERVED2: [u32; 2],
    pub PDR1: u32,
}
#[repr(C)]
pub struct PKA_TypeDef {
    pub CR: u32,
    pub SR: u32,
    pub CLRFR: u32,
    pub Reserved1: [u32; 253],
    pub RAM: [u32; 1334],
}
#[repr(C)]
pub struct PSSI_TypeDef {
    pub CR: u32,
    pub SR: u32,
    pub RIS: u32,
    pub IER: u32,
    pub MIS: u32,
    pub ICR: u32,
    pub RESERVED1: [u32; 4],
    pub DR: u32,
}
#[repr(C)]
pub struct RAMECC_MonitorTypeDef {
    pub CR: u32,
    pub SR: u32,
    pub FAR: u32,
    pub FDRL: u32,
    pub FDRH: u32,
    pub FECR: u32,
}
#[repr(C)]
pub struct RAMECC_TypeDef {
    pub IER: u32,
}
#[repr(C)]
pub struct RCC_TypeDef {
    pub CR: u32,
    pub HSICFGR: u32,
    pub CRRCR: u32,
    pub CSICFGR: u32,
    pub CFGR: u32,
    pub RESERVED0: u32,
    pub CDCFGR: u32,
    pub BMCFGR: u32,
    pub APBCFGR: u32,
    pub RESERVED1: u32,
    pub PLLCKSELR: u32,
    pub PLLCFGR: u32,
    pub PLL1DIVR1: u32,
    pub PLL1FRACR: u32,
    pub PLL2DIVR1: u32,
    pub PLL2FRACR: u32,
    pub PLL3DIVR1: u32,
    pub PLL3FRACR: u32,
    pub RESERVED2: u32,
    pub CCIPR1: u32,
    pub CCIPR2: u32,
    pub CCIPR3: u32,
    pub CCIPR4: u32,
    pub RESERVED3: u32,
    pub CIER: u32,
    pub CIFR: u32,
    pub CICR: u32,
    pub RESERVED4: u32,
    pub BDCR: u32,
    pub CSR: u32,
    pub RESERVED5: u32,
    pub AHB5RSTR: u32,
    pub AHB1RSTR: u32,
    pub AHB2RSTR: u32,
    pub AHB4RSTR: u32,
    pub APB5RSTR: u32,
    pub APB1RSTR1: u32,
    pub APB1RSTR2: u32,
    pub APB2RSTR: u32,
    pub APB4RSTR: u32,
    pub RESERVED6: u32,
    pub AHB3RSTR: u32,
    pub RESERVED7: [u32; 2],
    pub CKGDISR: u32,
    pub RESERVED8: [u32; 3],
    pub PLL1DIVR2: u32,
    pub PLL2DIVR2: u32,
    pub PLL3DIVR2: u32,
    pub PLL1SSCGR: u32,
    pub PLL2SSCGR: u32,
    pub PLL3SSCGR: u32,
    pub RESERVED9: [u32; 10],
    pub CKPROTR: u32,
    pub RESERVED10: [u32; 11],
    pub RSR: u32,
    pub AHB5ENR: u32,
    pub AHB1ENR: u32,
    pub AHB2ENR: u32,
    pub AHB4ENR: u32,
    pub APB5ENR: u32,
    pub APB1ENR1: u32,
    pub APB1ENR2: u32,
    pub APB2ENR: u32,
    pub APB4ENR: u32,
    pub AHB3ENR: u32,
    pub AHB5LPENR: u32,
    pub AHB1LPENR: u32,
    pub AHB2LPENR: u32,
    pub AHB4LPENR: u32,
    pub AHB3LPENR: u32,
    pub APB1LPENR1: u32,
    pub APB1LPENR2: u32,
    pub APB2LPENR: u32,
    pub APB4LPENR: u32,
    pub APB5LPENR: u32,
}
#[repr(C)]
pub struct RNG_TypeDef {
    pub CR: u32,
    pub SR: u32,
    pub DR: u32,
    pub RESERVED: u32,
    pub HTCR: u32,
}
#[repr(C)]
pub struct RTC_TypeDef {
    pub TR: u32,
    pub DR: u32,
    pub SSR: u32,
    pub ICSR: u32,
    pub PRER: u32,
    pub WUTR: u32,
    pub CR: u32,
    pub PRIVCFGR: u32,
    pub RESERVED0: u32,
    pub WPR: u32,
    pub CALR: u32,
    pub SHIFTR: u32,
    pub TSTR: u32,
    pub TSDR: u32,
    pub TSSSR: u32,
    pub RESERVED1: u32,
    pub ALRMAR: u32,
    pub ALRMASSR: u32,
    pub ALRMBR: u32,
    pub ALRMBSSR: u32,
    pub SR: u32,
    pub MISR: u32,
    pub RESERVED2: u32,
    pub SCR: u32,
    pub RESERVED3: [u32; 4],
    pub ALRABINR: u32,
    pub ALRBBINR: u32,
}
#[repr(C)]
pub struct SAES_TypeDef {
    pub CR: u32,
    pub SR: u32,
    pub DINR: u32,
    pub DOUTR: u32,
    pub KEYR0: u32,
    pub KEYR1: u32,
    pub KEYR2: u32,
    pub KEYR3: u32,
    pub IVR0: u32,
    pub IVR1: u32,
    pub IVR2: u32,
    pub IVR3: u32,
    pub KEYR4: u32,
    pub KEYR5: u32,
    pub KEYR6: u32,
    pub KEYR7: u32,
    pub SUSP0R: u32,
    pub SUSP1R: u32,
    pub SUSP2R: u32,
    pub SUSP3R: u32,
    pub SUSP4R: u32,
    pub SUSP5R: u32,
    pub SUSP6R: u32,
    pub SUSP7R: u32,
    pub RESERVED1: [u32; 168],
    pub IER: u32,
    pub ISR: u32,
    pub ICR: u32,
}
#[repr(C)]
pub struct SAI_TypeDef {
    pub GCR: u32,
    pub RESERVED: [u32; 16],
    pub PDMCR: u32,
    pub PDMDLY: u32,
}
#[repr(C)]
pub struct SAI_Block_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub FRCR: u32,
    pub SLOTR: u32,
    pub IMR: u32,
    pub SR: u32,
    pub CLRFR: u32,
    pub DR: u32,
}
#[repr(C)]
pub struct SBS_TypeDef {
    pub BOOTSR: u32,
    pub RESERVED1: [u32; 3],
    pub HDPLCR: u32,
    pub HDPLSR: u32,
    pub RESERVED2: [u32; 2],
    pub DBGCR: u32,
    pub DBGLOCKR: u32,
    pub RESERVED3: [u32; 3],
    pub RSSCMDR: u32,
    pub RESERVED4: [u32; 50],
    pub PMCR: u32,
    pub FPUIMR: u32,
    pub MESR: u32,
    pub RESERVED5: u32,
    pub CCCSR: u32,
    pub CCVALR: u32,
    pub CCSWVALR: u32,
    pub RESERVED6: u32,
    pub BKLOCKR: u32,
    pub RESERVED7: [u32; 3],
    pub EXTICR: [u32; 4],
}
#[repr(C)]
pub struct SDMMC_TypeDef {
    pub POWER: u32,
    pub CLKCR: u32,
    pub ARG: u32,
    pub CMD: u32,
    pub RESPCMD: u32,
    pub RESP1: u32,
    pub RESP2: u32,
    pub RESP3: u32,
    pub RESP4: u32,
    pub DTIMER: u32,
    pub DLEN: u32,
    pub DCTRL: u32,
    pub DCOUNT: u32,
    pub STA: u32,
    pub ICR: u32,
    pub MASK: u32,
    pub ACKTIME: u32,
    pub RESERVED0: [u32; 3],
    pub IDMACTRL: u32,
    pub IDMABSIZE: u32,
    pub IDMABASER: u32,
    pub RESERVED1: [u32; 2],
    pub IDMALAR: u32,
    pub IDMABAR: u32,
    pub RESERVED2: [u32; 5],
    pub FIFO: u32,
}
#[repr(C)]
pub struct SPDIFRX_TypeDef {
    pub CR: u32,
    pub IMR: u32,
    pub SR: u32,
    pub IFCR: u32,
    pub DR: u32,
    pub CSR: u32,
    pub DIR: u32,
}
#[repr(C)]
pub struct SPI_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub CFG1: u32,
    pub CFG2: u32,
    pub IER: u32,
    pub SR: u32,
    pub IFCR: u32,
    pub RESERVED0: u32,
    pub TXDR: u32,
    pub RESERVED1: [u32; 3],
    pub RXDR: u32,
    pub RESERVED2: [u32; 3],
    pub CRCPOLY: u32,
    pub TXCRC: u32,
    pub RXCRC: u32,
    pub UDRDR: u32,
    pub I2SCFGR: u32,
}
#[repr(C)]
pub struct TAMP_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub CR3: u32,
    pub FLTCR: u32,
    pub ATCR1: u32,
    pub ATSEEDR: u32,
    pub ATOR: u32,
    pub ATCR2: u32,
    pub CFGR: u32,
    pub PRIVCFGR: u32,
    pub RESERVED2: u32,
    pub IER: u32,
    pub SR: u32,
    pub MISR: u32,
    pub RESERVED3: u32,
    pub SCR: u32,
    pub COUNT1R: u32,
    pub RESERVED4: [u32; 4],
    pub RPCFGR: u32,
    pub RESERVED5: [u32; 42],
    pub BKP0R: u32,
    pub BKP1R: u32,
    pub BKP2R: u32,
    pub BKP3R: u32,
    pub BKP4R: u32,
    pub BKP5R: u32,
    pub BKP6R: u32,
    pub BKP7R: u32,
    pub BKP8R: u32,
    pub BKP9R: u32,
    pub BKP10R: u32,
    pub BKP11R: u32,
    pub BKP12R: u32,
    pub BKP13R: u32,
    pub BKP14R: u32,
    pub BKP15R: u32,
    pub BKP16R: u32,
    pub BKP17R: u32,
    pub BKP18R: u32,
    pub BKP19R: u32,
    pub BKP20R: u32,
    pub BKP21R: u32,
    pub BKP22R: u32,
    pub BKP23R: u32,
    pub BKP24R: u32,
    pub BKP25R: u32,
    pub BKP26R: u32,
    pub BKP27R: u32,
    pub BKP28R: u32,
    pub BKP29R: u32,
    pub BKP30R: u32,
    pub BKP31R: u32,
}
#[repr(C)]
pub struct TIM_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub SMCR: u32,
    pub DIER: u32,
    pub SR: u32,
    pub EGR: u32,
    pub CCMR1: u32,
    pub CCMR2: u32,
    pub CCER: u32,
    pub CNT: u32,
    pub PSC: u32,
    pub ARR: u32,
    pub RCR: u32,
    pub CCR1: u32,
    pub CCR2: u32,
    pub CCR3: u32,
    pub CCR4: u32,
    pub BDTR: u32,
    pub CCR5: u32,
    pub CCR6: u32,
    pub CCMR3: u32,
    pub DTR2: u32,
    pub ECR: u32,
    pub TISEL: u32,
    pub AF1: u32,
    pub AF2: u32,
    pub RESERVED0: [u32; 221],
    pub DCR: u32,
    pub DMAR: u32,
}
#[repr(C)]
pub struct UCPD_TypeDef {
    pub CFG1: u32,
    pub CFG2: u32,
    pub CFG3: u32,
    pub CR: u32,
    pub IMR: u32,
    pub SR: u32,
    pub ICR: u32,
    pub TX_ORDSET: u32,
    pub TX_PAYSZ: u32,
    pub TXDR: u32,
    pub RX_ORDSET: u32,
    pub RX_PAYSZ: u32,
    pub RXDR: u32,
    pub RX_ORDEXT1: u32,
    pub RX_ORDEXT2: u32,
}
#[repr(C)]
pub struct USB_OTG_GlobalTypeDef {
    pub GOTGCTL: u32,
    pub GOTGINT: u32,
    pub GAHBCFG: u32,
    pub GUSBCFG: u32,
    pub GRSTCTL: u32,
    pub GINTSTS: u32,
    pub GINTMSK: u32,
    pub GRXSTSR: u32,
    pub GRXSTSP: u32,
    pub GRXFSIZ: u32,
    pub DIEPTXF0_HNPTXFSIZ: u32,
    pub HNPTXSTS: u32,
    pub Reserved30: [u32; 2],
    pub GCCFG: u32,
    pub CID: u32,
    pub GSNPSID: u32,
    pub GHWCFG1: u32,
    pub GHWCFG2: u32,
    pub GHWCFG3: u32,
    pub Reserved6: u32,
    pub GLPMCFG: u32,
    pub GPWRDN: u32,
    pub GDFIFOCFG: u32,
    pub GADPCTL: u32,
    pub Reserved43: [u32; 39],
    pub HPTXFSIZ: u32,
    pub DIEPTXF: [u32; 0x0F],
}
#[repr(C)]
pub struct USB_OTG_DeviceTypeDef {
    pub DCFG: u32,
    pub DCTL: u32,
    pub DSTS: u32,
    pub Reserved0C: u32,
    pub DIEPMSK: u32,
    pub DOEPMSK: u32,
    pub DAINT: u32,
    pub DAINTMSK: u32,
    pub Reserved20: u32,
    pub Reserved9: u32,
    pub DVBUSDIS: u32,
    pub DVBUSPULSE: u32,
    pub DTHRCTL: u32,
    pub DIEPEMPMSK: u32,
    pub DEACHINT: u32,
    pub DEACHMSK: u32,
    pub Reserved40: u32,
    pub DINEP1MSK: u32,
    pub Reserved44: [u32; 15],
    pub DOUTEP1MSK: u32,
}
#[repr(C)]
pub struct USB_OTG_INEndpointTypeDef {
    pub DIEPCTL: u32,
    pub Reserved04: u32,
    pub DIEPINT: u32,
    pub Reserved0C: u32,
    pub DIEPTSIZ: u32,
    pub DIEPDMA: u32,
    pub DTXFSTS: u32,
    pub Reserved18: u32,
}
#[repr(C)]
pub struct USB_OTG_OUTEndpointTypeDef {
    pub DOEPCTL: u32,
    pub Reserved04: u32,
    pub DOEPINT: u32,
    pub Reserved0C: u32,
    pub DOEPTSIZ: u32,
    pub DOEPDMA: u32,
    pub Reserved18: [u32; 2],
}
#[repr(C)]
pub struct USB_OTG_HostTypeDef {
    pub HCFG: u32,
    pub HFIR: u32,
    pub HFNUM: u32,
    pub Reserved40C: u32,
    pub HPTXSTS: u32,
    pub HAINT: u32,
    pub HAINTMSK: u32,
}
#[repr(C)]
pub struct USB_OTG_HostChannelTypeDef {
    pub HCCHAR: u32,
    pub HCSPLT: u32,
    pub HCINT: u32,
    pub HCINTMSK: u32,
    pub HCTSIZ: u32,
    pub HCDMA: u32,
    pub Reserved: [u32; 2],
}
#[repr(C)]
pub struct USART_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub CR3: u32,
    pub BRR: u32,
    pub GTPR: u32,
    pub RTOR: u32,
    pub RQR: u32,
    pub ISR: u32,
    pub ICR: u32,
    pub RDR: u32,
    pub TDR: u32,
    pub PRESC: u32,
}
#[repr(C)]
pub struct WWDG_TypeDef {
    pub CR: u32,
    pub CFR: u32,
    pub SR: u32,
}
#[repr(C)]
pub struct RSSLIB_DataProvisioningConf_t {
    pub pSource: u32,
    pub Destination: u32,
    pub Size: u32,
    pub DoEncryption: u32,
    pub Crc: u32,
}
#[repr(C)]
pub struct RSSLIB_pFunc_TypeDef {
    pub SetSecOB: u32,
    pub RESERVED1: [u32; 4],
    pub GetRssStatus: u32,
    pub SetProductState: u32,
    pub DataProvisioning: u32,
    pub JumpHDPLvl2: u32,
    pub JumpHDPLvl3: u32,
    pub GetProductState: u32,
}
pub const __CM7_REV: u32 = 0x0102;
pub const __MPU_PRESENT: u32 = 1;
pub const __MPU_REGIONCOUNT: u32 = 16;
pub const __NVIC_PRIO_BITS: u32 = 4;
pub const __Vendor_SysTickConfig: u32 = 0;
pub const __FPU_PRESENT: u32 = 1;
pub const __DCACHE_PRESENT: u32 = 1;
pub const RTC_BKP_NB: u32 = 32;
pub const RTC_TAMP_NB: u32 = 8;
pub const ITCM_BASE: u32 = 0x00000000;
pub const FLASH_BASE: u32 = 0x08000000;
pub const OTP_AREA_BASE: u32 = 0x08FFF000;
pub const ENGI_BYTES_BASE: u32 = 0x52002800;
pub const SYSTEM_FLASH_BASE: u32 = 0x1FF00000;
pub const DTCM_BASE: u32 = 0x20000000;
pub const SRAM1_AXI_BASE: u32 = 0x24000000;
pub const SRAM2_AXI_BASE: u32 = 0x24020000;
pub const SRAM3_AXI_BASE: u32 = 0x24040000;
pub const SRAM4_AXI_BASE: u32 = 0x24060000;
pub const GFXMMU_VIRTUAL_BUFFER0_BASE: u32 = 0x25000000;
pub const GFXMMU_VIRTUAL_BUFFER1_BASE: u32 = 0x25400000;
pub const GFXMMU_VIRTUAL_BUFFER2_BASE: u32 = 0x25800000;
pub const GFXMMU_VIRTUAL_BUFFER3_BASE: u32 = 0x25C00000;
pub const SRAM1_AHB_BASE: u32 = 0x30000000;
pub const SRAM2_AHB_BASE: u32 = 0x30004000;
pub const BKPSRAM_BASE: u32 = 0x38800000;
pub const PERIPH_BASE: u32 = 0x40000000;
pub const XSPI2_BASE: u32 = 0x70000000;
pub const XSPI1_BASE: u32 = 0x90000000;
pub const ITCM_SIZE: u32 = 0x00010000;
pub const DTCM_SIZE: u32 = 0x00010000;
pub const FLASH_SIZE: u32 = 0x00010000;
pub const SRAM1_AXI_SIZE: u32 = 0x00020000;
pub const SRAM2_AXI_SIZE: u32 = 0x00020000;
pub const SRAM3_AXI_SIZE: u32 = 0x00020000;
pub const SRAM4_AXI_SIZE: u32 = 0x00012000;
pub const SRAM_AHB_SIZE: u32 = 0x00004000;
pub const BKPSRAM_SIZE: u32 = 0x00001000;
pub const OTP_SIZE: u32 = 0x400;
pub const APB1PERIPH_BASE: u32 = PERIPH_BASE;
pub const AHB1PERIPH_BASE: u32 = PERIPH_BASE + 0x00020000;
pub const APB2PERIPH_BASE: u32 = PERIPH_BASE + 0x02000000;
pub const AHB2PERIPH_BASE: u32 = PERIPH_BASE + 0x08000000;
pub const AHB3PERIPH_BASE: u32 = PERIPH_BASE + 0x08020000;
pub const APB5PERIPH_BASE: u32 = PERIPH_BASE + 0x10000000;
pub const AHB5PERIPH_BASE: u32 = PERIPH_BASE + 0x12000000;
pub const APB4PERIPH_BASE: u32 = PERIPH_BASE + 0x18000000;
pub const AHB4PERIPH_BASE: u32 = PERIPH_BASE + 0x18020000;
pub const TIM2_BASE: u32 = APB1PERIPH_BASE + 0x0000;
pub const TIM3_BASE: u32 = APB1PERIPH_BASE + 0x0400;
pub const TIM4_BASE: u32 = APB1PERIPH_BASE + 0x0800;
pub const TIM5_BASE: u32 = APB1PERIPH_BASE + 0x0C00;
pub const TIM6_BASE: u32 = APB1PERIPH_BASE + 0x1000;
pub const TIM7_BASE: u32 = APB1PERIPH_BASE + 0x1400;
pub const TIM12_BASE: u32 = APB1PERIPH_BASE + 0x1800;
pub const TIM13_BASE: u32 = APB1PERIPH_BASE + 0x1C00;
pub const TIM14_BASE: u32 = APB1PERIPH_BASE + 0x2000;
pub const LPTIM1_BASE: u32 = APB1PERIPH_BASE + 0x2400;
pub const WWDG_BASE: u32 = APB1PERIPH_BASE + 0x2C00;
pub const SPI2_BASE: u32 = APB1PERIPH_BASE + 0x3800;
pub const SPI3_BASE: u32 = APB1PERIPH_BASE + 0x3C00;
pub const SPDIFRX_BASE: u32 = APB1PERIPH_BASE + 0x4000;
pub const USART2_BASE: u32 = APB1PERIPH_BASE + 0x4400;
pub const USART3_BASE: u32 = APB1PERIPH_BASE + 0x4800;
pub const UART4_BASE: u32 = APB1PERIPH_BASE + 0x4C00;
pub const UART5_BASE: u32 = APB1PERIPH_BASE + 0x5000;
pub const I2C1_BASE: u32 = APB1PERIPH_BASE + 0x5400;
pub const I3C1_BASE: u32 = APB1PERIPH_BASE + 0x5400;
pub const I2C2_BASE: u32 = APB1PERIPH_BASE + 0x5800;
pub const I2C3_BASE: u32 = APB1PERIPH_BASE + 0x5C00;
pub const CEC_BASE: u32 = APB1PERIPH_BASE + 0x6C00;
pub const UART7_BASE: u32 = APB1PERIPH_BASE + 0x7800;
pub const UART8_BASE: u32 = APB1PERIPH_BASE + 0x7C00;
pub const CRS_BASE: u32 = APB1PERIPH_BASE + 0x8400;
pub const MDIOS_BASE: u32 = APB1PERIPH_BASE + 0x9400;
pub const FDCAN1_BASE: u32 = APB1PERIPH_BASE + 0xA000;
pub const FDCAN_CONFIG_BASE: u32 = APB1PERIPH_BASE + 0xA100;
pub const FDCAN2_BASE: u32 = APB1PERIPH_BASE + 0xA400;
pub const SRAMCAN_BASE: u32 = APB1PERIPH_BASE + 0xAC00;
pub const UCPD1_BASE: u32 = APB1PERIPH_BASE + 0xEC00;
pub const TIM1_BASE: u32 = APB2PERIPH_BASE + 0x0000;
pub const USART1_BASE: u32 = APB2PERIPH_BASE + 0x1000;
pub const SPI1_BASE: u32 = APB2PERIPH_BASE + 0x3000;
pub const SPI4_BASE: u32 = APB2PERIPH_BASE + 0x3400;
pub const TIM15_BASE: u32 = APB2PERIPH_BASE + 0x4000;
pub const TIM16_BASE: u32 = APB2PERIPH_BASE + 0x4400;
pub const TIM17_BASE: u32 = APB2PERIPH_BASE + 0x4800;
pub const TIM9_BASE: u32 = APB2PERIPH_BASE + 0x4C00;
pub const SPI5_BASE: u32 = APB2PERIPH_BASE + 0x5000;
pub const SAI1_BASE: u32 = APB2PERIPH_BASE + 0x5800;
pub const SAI1_Block_A_BASE: u32 = SAI1_BASE + 0x0004;
pub const SAI1_Block_B_BASE: u32 = SAI1_BASE + 0x0024;
pub const SAI2_BASE: u32 = APB2PERIPH_BASE + 0x5C00;
pub const SAI2_Block_A_BASE: u32 = SAI2_BASE + 0x0004;
pub const SAI2_Block_B_BASE: u32 = SAI2_BASE + 0x0024;
pub const GPDMA1_BASE: u32 = AHB1PERIPH_BASE + 0x1000;
pub const GPDMA1_Channel0_BASE: u32 = GPDMA1_BASE + 0x0050;
pub const GPDMA1_Channel1_BASE: u32 = GPDMA1_BASE + 0x00D0;
pub const GPDMA1_Channel2_BASE: u32 = GPDMA1_BASE + 0x0150;
pub const GPDMA1_Channel3_BASE: u32 = GPDMA1_BASE + 0x01D0;
pub const GPDMA1_Channel4_BASE: u32 = GPDMA1_BASE + 0x0250;
pub const GPDMA1_Channel5_BASE: u32 = GPDMA1_BASE + 0x02D0;
pub const GPDMA1_Channel6_BASE: u32 = GPDMA1_BASE + 0x0350;
pub const GPDMA1_Channel7_BASE: u32 = GPDMA1_BASE + 0x03D0;
pub const GPDMA1_Channel8_BASE: u32 = GPDMA1_BASE + 0x0450;
pub const GPDMA1_Channel9_BASE: u32 = GPDMA1_BASE + 0x04D0;
pub const GPDMA1_Channel10_BASE: u32 = GPDMA1_BASE + 0x0550;
pub const GPDMA1_Channel11_BASE: u32 = GPDMA1_BASE + 0x05D0;
pub const GPDMA1_Channel12_BASE: u32 = GPDMA1_BASE + 0x0650;
pub const GPDMA1_Channel13_BASE: u32 = GPDMA1_BASE + 0x06D0;
pub const GPDMA1_Channel14_BASE: u32 = GPDMA1_BASE + 0x0750;
pub const GPDMA1_Channel15_BASE: u32 = GPDMA1_BASE + 0x07D0;
pub const ADC1_BASE: u32 = AHB1PERIPH_BASE + 0x2000;
pub const ADC2_BASE: u32 = AHB1PERIPH_BASE + 0x2100;
pub const ADC12_COMMON_BASE: u32 = AHB1PERIPH_BASE + 0x2300;
pub const ETH_BASE: u32 = AHB1PERIPH_BASE + 0x8000;
pub const ETH_MAC_BASE: u32 = ETH_BASE;
pub const ADF1_BASE: u32 = AHB1PERIPH_BASE + 0xF000;
pub const ADF1_Filter0_BASE: u32 = ADF1_BASE + 0x0080;
pub const USB_OTG_HS_PERIPH_BASE: u32 = AHB1PERIPH_BASE + 0x20000;
pub const USB_OTG_FS_PERIPH_BASE: u32 = AHB1PERIPH_BASE + 0x60000;
pub const PSSI_BASE: u32 = AHB2PERIPH_BASE + 0x0400;
pub const SDMMC2_BASE: u32 = AHB2PERIPH_BASE + 0x2400;
pub const DLYB_SDMMC2_BASE: u32 = AHB2PERIPH_BASE + 0x2800;
pub const CORDIC_BASE: u32 = AHB2PERIPH_BASE + 0x4400;
pub const RNG_BASE: u32 = AHB3PERIPH_BASE;
pub const HASH_BASE: u32 = AHB3PERIPH_BASE + 0x0400;
pub const HASH_DIGEST_BASE: u32 = AHB3PERIPH_BASE + 0x0710;
pub const CRYP_BASE: u32 = AHB3PERIPH_BASE + 0x0800;
pub const SAES_BASE: u32 = AHB3PERIPH_BASE + 0x1000;
pub const PKA_BASE: u32 = AHB3PERIPH_BASE + 0x2000;
pub const LTDC_BASE: u32 = APB5PERIPH_BASE + 0x1000;
pub const LTDC_Layer1_BASE: u32 = LTDC_BASE + 0x0084;
pub const LTDC_Layer2_BASE: u32 = LTDC_BASE + 0x0104;
pub const DCMIPP_BASE: u32 = APB5PERIPH_BASE + 0x2000;
pub const GFXTIM_BASE: u32 = APB5PERIPH_BASE + 0x4000;
pub const HPDMA1_BASE: u32 = AHB5PERIPH_BASE;
pub const HPDMA1_Channel0_BASE: u32 = HPDMA1_BASE + 0x0050;
pub const HPDMA1_Channel1_BASE: u32 = HPDMA1_BASE + 0x00D0;
pub const HPDMA1_Channel2_BASE: u32 = HPDMA1_BASE + 0x0150;
pub const HPDMA1_Channel3_BASE: u32 = HPDMA1_BASE + 0x01D0;
pub const HPDMA1_Channel4_BASE: u32 = HPDMA1_BASE + 0x0250;
pub const HPDMA1_Channel5_BASE: u32 = HPDMA1_BASE + 0x02D0;
pub const HPDMA1_Channel6_BASE: u32 = HPDMA1_BASE + 0x0350;
pub const HPDMA1_Channel7_BASE: u32 = HPDMA1_BASE + 0x03D0;
pub const HPDMA1_Channel8_BASE: u32 = HPDMA1_BASE + 0x0450;
pub const HPDMA1_Channel9_BASE: u32 = HPDMA1_BASE + 0x04D0;
pub const HPDMA1_Channel10_BASE: u32 = HPDMA1_BASE + 0x0550;
pub const HPDMA1_Channel11_BASE: u32 = HPDMA1_BASE + 0x05D0;
pub const HPDMA1_Channel12_BASE: u32 = HPDMA1_BASE + 0x0650;
pub const HPDMA1_Channel13_BASE: u32 = HPDMA1_BASE + 0x06D0;
pub const HPDMA1_Channel14_BASE: u32 = HPDMA1_BASE + 0x0750;
pub const HPDMA1_Channel15_BASE: u32 = HPDMA1_BASE + 0x07D0;
pub const DMA2D_BASE: u32 = AHB5PERIPH_BASE + 0x1000;
pub const FLASH_R_BASE: u32 = AHB5PERIPH_BASE + 0x2000;
pub const JPEG_BASE: u32 = AHB5PERIPH_BASE + 0x3000;
pub const FMC_R_BASE: u32 = AHB5PERIPH_BASE + 0x4000;
pub const FMC_Bank1_R_BASE: u32 = FMC_R_BASE + 0x0000;
pub const FMC_Bank1E_R_BASE: u32 = FMC_R_BASE + 0x0104;
pub const FMC_Bank3_R_BASE: u32 = FMC_R_BASE + 0x0080;
pub const FMC_Bank5_6_R_BASE: u32 = FMC_R_BASE + 0x0140;
pub const XSPI1_R_BASE: u32 = AHB5PERIPH_BASE + 0x5000;
pub const SDMMC1_BASE: u32 = AHB5PERIPH_BASE + 0x7000;
pub const DLYB_SDMMC1_BASE: u32 = AHB5PERIPH_BASE + 0x8000;
pub const RAMECC1_BASE: u32 = AHB5PERIPH_BASE + 0x9000;
pub const RAMECC1_Monitor0_BASE: u32 = RAMECC1_BASE + 0x20;
pub const RAMECC1_Monitor1_BASE: u32 = RAMECC1_BASE + 0x40;
pub const RAMECC1_Monitor2_BASE: u32 = RAMECC1_BASE + 0x60;
pub const RAMECC1_Monitor3_BASE: u32 = RAMECC1_BASE + 0x80;
pub const RAMECC1_Monitor4_BASE: u32 = RAMECC1_BASE + 0xA0;
pub const XSPI2_R_BASE: u32 = AHB5PERIPH_BASE + 0xA000;
pub const XSPIM_BASE: u32 = AHB5PERIPH_BASE + 0xB400;
pub const MCE1_BASE: u32 = AHB5PERIPH_BASE + 0xB800;
pub const MCE1_REGION1_BASE: u32 = MCE1_BASE + 0x040;
pub const MCE1_REGION2_BASE: u32 = MCE1_BASE + 0x050;
pub const MCE1_REGION3_BASE: u32 = MCE1_BASE + 0x060;
pub const MCE1_REGION4_BASE: u32 = MCE1_BASE + 0x070;
pub const MCE1_CONTEXT1_BASE: u32 = MCE1_BASE + 0x240;
pub const MCE1_CONTEXT2_BASE: u32 = MCE1_BASE + 0x270;
pub const MCE2_BASE: u32 = AHB5PERIPH_BASE + 0xBC00;
pub const MCE2_REGION1_BASE: u32 = MCE2_BASE + 0x040;
pub const MCE2_REGION2_BASE: u32 = MCE2_BASE + 0x050;
pub const MCE2_REGION3_BASE: u32 = MCE2_BASE + 0x060;
pub const MCE2_REGION4_BASE: u32 = MCE2_BASE + 0x070;
pub const MCE3_BASE: u32 = AHB5PERIPH_BASE + 0xC000;
pub const MCE3_REGION1_BASE: u32 = MCE3_BASE + 0x040;
pub const MCE3_REGION2_BASE: u32 = MCE3_BASE + 0x050;
pub const MCE3_REGION3_BASE: u32 = MCE3_BASE + 0x060;
pub const MCE3_REGION4_BASE: u32 = MCE3_BASE + 0x070;
pub const GFXMMU_BASE: u32 = AHB5PERIPH_BASE + 0x010000;
pub const GPU2D_BASE: u32 = AHB5PERIPH_BASE + 0x014000;
pub const ICACHE_BASE: u32 = AHB5PERIPH_BASE + 0x015000;
pub const EXTI_BASE: u32 = APB4PERIPH_BASE;
pub const SBS_BASE: u32 = APB4PERIPH_BASE + 0x0400;
pub const LPUART1_BASE: u32 = APB4PERIPH_BASE + 0x0C00;
pub const SPI6_BASE: u32 = APB4PERIPH_BASE + 0x1400;
pub const LPTIM2_BASE: u32 = APB4PERIPH_BASE + 0x2400;
pub const LPTIM3_BASE: u32 = APB4PERIPH_BASE + 0x2800;
pub const LPTIM4_BASE: u32 = APB4PERIPH_BASE + 0x2C00;
pub const LPTIM5_BASE: u32 = APB4PERIPH_BASE + 0x3000;
pub const VREFBUF_BASE: u32 = APB4PERIPH_BASE + 0x3C00;
pub const RTC_BASE: u32 = APB4PERIPH_BASE + 0x4000;
pub const TAMP_BASE: u32 = APB4PERIPH_BASE + 0x4400;
pub const IWDG_BASE: u32 = APB4PERIPH_BASE + 0x4800;
pub const DTS_BASE: u32 = APB4PERIPH_BASE + 0x6800;
pub const GPIOA_BASE: u32 = AHB4PERIPH_BASE;
pub const GPIOB_BASE: u32 = AHB4PERIPH_BASE + 0x0400;
pub const GPIOC_BASE: u32 = AHB4PERIPH_BASE + 0x0800;
pub const GPIOD_BASE: u32 = AHB4PERIPH_BASE + 0x0C00;
pub const GPIOE_BASE: u32 = AHB4PERIPH_BASE + 0x1000;
pub const GPIOF_BASE: u32 = AHB4PERIPH_BASE + 0x1400;
pub const GPIOG_BASE: u32 = AHB4PERIPH_BASE + 0x1800;
pub const GPIOH_BASE: u32 = AHB4PERIPH_BASE + 0x1C00;
pub const GPIOM_BASE: u32 = AHB4PERIPH_BASE + 0x3000;
pub const GPION_BASE: u32 = AHB4PERIPH_BASE + 0x3400;
pub const GPIOO_BASE: u32 = AHB4PERIPH_BASE + 0x3800;
pub const GPIOP_BASE: u32 = AHB4PERIPH_BASE + 0x3C00;
pub const RCC_BASE: u32 = AHB4PERIPH_BASE + 0x4400;
pub const PWR_BASE: u32 = AHB4PERIPH_BASE + 0x4800;
pub const CRC_BASE: u32 = AHB4PERIPH_BASE + 0x4C00;
pub const RAMECC2_BASE: u32 = AHB4PERIPH_BASE + 0x7000;
pub const RAMECC2_Monitor1_BASE: u32 = RAMECC2_BASE + 0x40;
pub const DBGMCU_BASE: u32 = 0x5C001000;
pub const AXIM_BASE: u32 = 0xBFF00000;
pub const AXIM_ASIB1_BASE: u32 = AXIM_BASE + 0x42000;
pub const AXIM_ASIB2_BASE: u32 = AXIM_BASE + 0x43000;
pub const AXIM_ASIB3_BASE: u32 = AXIM_BASE + 0x44000;
pub const AXIM_ASIB4_BASE: u32 = AXIM_BASE + 0x45000;
pub const AXIM_ASIB5_BASE: u32 = AXIM_BASE + 0x46000;
pub const AXIM_ASIB6_BASE: u32 = AXIM_BASE + 0x47000;
pub const AXIM_ASIB7_BASE: u32 = AXIM_BASE + 0x48000;
pub const AXIM_ASIB8_BASE: u32 = AXIM_BASE + 0x49000;
pub const AXIM_ASIB9_BASE: u32 = AXIM_BASE + 0x4A000;
pub const AXIM_ASIB10_BASE: u32 = AXIM_BASE + 0x4B000;
pub const AXIM_ASIB11_BASE: u32 = AXIM_BASE + 0x4C000;
pub const AXIM_AMIB1_BASE: u32 = AXIM_BASE + 0x02000;
pub const AXIM_AMIB2_BASE: u32 = AXIM_BASE + 0x03000;
pub const AXIM_AMIB3_BASE: u32 = AXIM_BASE + 0x04000;
pub const AXIM_AMIB4_BASE: u32 = AXIM_BASE + 0x05000;
pub const AXIM_AMIB5_BASE: u32 = AXIM_BASE + 0x06000;
pub const AXIM_AMIB6_BASE: u32 = AXIM_BASE + 0x07000;
pub const AXIM_AMIB7_BASE: u32 = AXIM_BASE + 0x08000;
pub const AXIM_AMIB8_BASE: u32 = AXIM_BASE + 0x09000;
pub const AXIM_AMIB9_BASE: u32 = AXIM_BASE + 0x0A000;
pub const AXIM_AMIB10_BASE: u32 = AXIM_BASE + 0x0B000;
pub const UID_BASE: u32 = 0x08FFF800;
pub const FLASHSIZE_BASE: u32 = 0x08FFF80C;
pub const PACKAGE_BASE: u32 = 0x08FFF80C;
pub const USB_OTG_GLOBAL_BASE: u32 = 0x0000;
pub const USB_OTG_DEVICE_BASE: u32 = 0x0800;
pub const USB_OTG_IN_ENDPOINT_BASE: u32 = 0x0900;
pub const USB_OTG_OUT_ENDPOINT_BASE: u32 = 0x0B00;
pub const USB_OTG_EP_REG_SIZE: u32 = 0x0020;
pub const USB_OTG_HOST_BASE: u32 = 0x0400;
pub const USB_OTG_HOST_PORT_BASE: u32 = 0x0440;
pub const USB_OTG_HOST_CHANNEL_BASE: u32 = 0x0500;
pub const USB_OTG_HOST_CHANNEL_SIZE: u32 = 0x0020;
pub const USB_OTG_PCGCCTL_BASE: u32 = 0x0E00;
pub const USB_OTG_FIFO_BASE: u32 = 0x1000;
pub const USB_OTG_FIFO_SIZE: u32 = 0x1000;
pub const RSSLIB_SYS_FLASH_PFUNC_START: u32 = 0x1FF1FD4C;
pub const RSSLIB_SYS_FLASH_PFUNC_END: u32 = 0x1FF1FD78;
pub const RSSLIB_ERROR: u32 = 0xF5F5F5F5;
pub const RSSLIB_SUCCESS: u32 = 0xEAEAEAEA;
pub const RSSLIB_PFUNC_BASE: u32 = 0x1FF1FD4C;
pub const GPU2D: u32 = GPU2D_BASE;
pub const LSI_STARTUP_TIME: u32 = 130;
pub const ADC_ISR_ADRDY_Pos: u32 = 0;
pub const ADC_ISR_ADRDY_Msk: u32 = 0x1 << ADC_ISR_ADRDY_Pos;
pub const ADC_ISR_ADRDY: u32 = ADC_ISR_ADRDY_Msk;
pub const ADC_ISR_EOSMP_Pos: u32 = 1;
pub const ADC_ISR_EOSMP_Msk: u32 = 0x1 << ADC_ISR_EOSMP_Pos;
pub const ADC_ISR_EOSMP: u32 = ADC_ISR_EOSMP_Msk;
pub const ADC_ISR_EOC_Pos: u32 = 2;
pub const ADC_ISR_EOC_Msk: u32 = 0x1 << ADC_ISR_EOC_Pos;
pub const ADC_ISR_EOC: u32 = ADC_ISR_EOC_Msk;
pub const ADC_ISR_EOS_Pos: u32 = 3;
pub const ADC_ISR_EOS_Msk: u32 = 0x1 << ADC_ISR_EOS_Pos;
pub const ADC_ISR_EOS: u32 = ADC_ISR_EOS_Msk;
pub const ADC_ISR_OVR_Pos: u32 = 4;
pub const ADC_ISR_OVR_Msk: u32 = 0x1 << ADC_ISR_OVR_Pos;
pub const ADC_ISR_OVR: u32 = ADC_ISR_OVR_Msk;
pub const ADC_ISR_JEOC_Pos: u32 = 5;
pub const ADC_ISR_JEOC_Msk: u32 = 0x1 << ADC_ISR_JEOC_Pos;
pub const ADC_ISR_JEOC: u32 = ADC_ISR_JEOC_Msk;
pub const ADC_ISR_JEOS_Pos: u32 = 6;
pub const ADC_ISR_JEOS_Msk: u32 = 0x1 << ADC_ISR_JEOS_Pos;
pub const ADC_ISR_JEOS: u32 = ADC_ISR_JEOS_Msk;
pub const ADC_ISR_AWD1_Pos: u32 = 7;
pub const ADC_ISR_AWD1_Msk: u32 = 0x1 << ADC_ISR_AWD1_Pos;
pub const ADC_ISR_AWD1: u32 = ADC_ISR_AWD1_Msk;
pub const ADC_ISR_AWD2_Pos: u32 = 8;
pub const ADC_ISR_AWD2_Msk: u32 = 0x1 << ADC_ISR_AWD2_Pos;
pub const ADC_ISR_AWD2: u32 = ADC_ISR_AWD2_Msk;
pub const ADC_ISR_AWD3_Pos: u32 = 9;
pub const ADC_ISR_AWD3_Msk: u32 = 0x1 << ADC_ISR_AWD3_Pos;
pub const ADC_ISR_AWD3: u32 = ADC_ISR_AWD3_Msk;
pub const ADC_ISR_JQOVF_Pos: u32 = 10;
pub const ADC_ISR_JQOVF_Msk: u32 = 0x1 << ADC_ISR_JQOVF_Pos;
pub const ADC_ISR_JQOVF: u32 = ADC_ISR_JQOVF_Msk;
pub const ADC_IER_ADRDYIE_Pos: u32 = 0;
pub const ADC_IER_ADRDYIE_Msk: u32 = 0x1 << ADC_IER_ADRDYIE_Pos;
pub const ADC_IER_ADRDYIE: u32 = ADC_IER_ADRDYIE_Msk;
pub const ADC_IER_EOSMPIE_Pos: u32 = 1;
pub const ADC_IER_EOSMPIE_Msk: u32 = 0x1 << ADC_IER_EOSMPIE_Pos;
pub const ADC_IER_EOSMPIE: u32 = ADC_IER_EOSMPIE_Msk;
pub const ADC_IER_EOCIE_Pos: u32 = 2;
pub const ADC_IER_EOCIE_Msk: u32 = 0x1 << ADC_IER_EOCIE_Pos;
pub const ADC_IER_EOCIE: u32 = ADC_IER_EOCIE_Msk;
pub const ADC_IER_EOSIE_Pos: u32 = 3;
pub const ADC_IER_EOSIE_Msk: u32 = 0x1 << ADC_IER_EOSIE_Pos;
pub const ADC_IER_EOSIE: u32 = ADC_IER_EOSIE_Msk;
pub const ADC_IER_OVRIE_Pos: u32 = 4;
pub const ADC_IER_OVRIE_Msk: u32 = 0x1 << ADC_IER_OVRIE_Pos;
pub const ADC_IER_OVRIE: u32 = ADC_IER_OVRIE_Msk;
pub const ADC_IER_JEOCIE_Pos: u32 = 5;
pub const ADC_IER_JEOCIE_Msk: u32 = 0x1 << ADC_IER_JEOCIE_Pos;
pub const ADC_IER_JEOCIE: u32 = ADC_IER_JEOCIE_Msk;
pub const ADC_IER_JEOSIE_Pos: u32 = 6;
pub const ADC_IER_JEOSIE_Msk: u32 = 0x1 << ADC_IER_JEOSIE_Pos;
pub const ADC_IER_JEOSIE: u32 = ADC_IER_JEOSIE_Msk;
pub const ADC_IER_AWD1IE_Pos: u32 = 7;
pub const ADC_IER_AWD1IE_Msk: u32 = 0x1 << ADC_IER_AWD1IE_Pos;
pub const ADC_IER_AWD1IE: u32 = ADC_IER_AWD1IE_Msk;
pub const ADC_IER_AWD2IE_Pos: u32 = 8;
pub const ADC_IER_AWD2IE_Msk: u32 = 0x1 << ADC_IER_AWD2IE_Pos;
pub const ADC_IER_AWD2IE: u32 = ADC_IER_AWD2IE_Msk;
pub const ADC_IER_AWD3IE_Pos: u32 = 9;
pub const ADC_IER_AWD3IE_Msk: u32 = 0x1 << ADC_IER_AWD3IE_Pos;
pub const ADC_IER_AWD3IE: u32 = ADC_IER_AWD3IE_Msk;
pub const ADC_IER_JQOVFIE_Pos: u32 = 10;
pub const ADC_IER_JQOVFIE_Msk: u32 = 0x1 << ADC_IER_JQOVFIE_Pos;
pub const ADC_IER_JQOVFIE: u32 = ADC_IER_JQOVFIE_Msk;
pub const ADC_CR_ADEN_Pos: u32 = 0;
pub const ADC_CR_ADEN_Msk: u32 = 0x1 << ADC_CR_ADEN_Pos;
pub const ADC_CR_ADEN: u32 = ADC_CR_ADEN_Msk;
pub const ADC_CR_ADDIS_Pos: u32 = 1;
pub const ADC_CR_ADDIS_Msk: u32 = 0x1 << ADC_CR_ADDIS_Pos;
pub const ADC_CR_ADDIS: u32 = ADC_CR_ADDIS_Msk;
pub const ADC_CR_ADSTART_Pos: u32 = 2;
pub const ADC_CR_ADSTART_Msk: u32 = 0x1 << ADC_CR_ADSTART_Pos;
pub const ADC_CR_ADSTART: u32 = ADC_CR_ADSTART_Msk;
pub const ADC_CR_JADSTART_Pos: u32 = 3;
pub const ADC_CR_JADSTART_Msk: u32 = 0x1 << ADC_CR_JADSTART_Pos;
pub const ADC_CR_JADSTART: u32 = ADC_CR_JADSTART_Msk;
pub const ADC_CR_ADSTP_Pos: u32 = 4;
pub const ADC_CR_ADSTP_Msk: u32 = 0x1 << ADC_CR_ADSTP_Pos;
pub const ADC_CR_ADSTP: u32 = ADC_CR_ADSTP_Msk;
pub const ADC_CR_JADSTP_Pos: u32 = 5;
pub const ADC_CR_JADSTP_Msk: u32 = 0x1 << ADC_CR_JADSTP_Pos;
pub const ADC_CR_JADSTP: u32 = ADC_CR_JADSTP_Msk;
pub const ADC_CR_ADVREGEN_Pos: u32 = 28;
pub const ADC_CR_ADVREGEN_Msk: u32 = 0x1 << ADC_CR_ADVREGEN_Pos;
pub const ADC_CR_ADVREGEN: u32 = ADC_CR_ADVREGEN_Msk;
pub const ADC_CR_DEEPPWD_Pos: u32 = 29;
pub const ADC_CR_DEEPPWD_Msk: u32 = 0x1 << ADC_CR_DEEPPWD_Pos;
pub const ADC_CR_DEEPPWD: u32 = ADC_CR_DEEPPWD_Msk;
pub const ADC_CR_ADCALDIF_Pos: u32 = 30;
pub const ADC_CR_ADCALDIF_Msk: u32 = 0x1 << ADC_CR_ADCALDIF_Pos;
pub const ADC_CR_ADCALDIF: u32 = ADC_CR_ADCALDIF_Msk;
pub const ADC_CR_ADCAL_Pos: u32 = 31;
pub const ADC_CR_ADCAL_Msk: u32 = 0x1 << ADC_CR_ADCAL_Pos;
pub const ADC_CR_ADCAL: u32 = ADC_CR_ADCAL_Msk;
pub const ADC_CFGR_DMAEN_Pos: u32 = 0;
pub const ADC_CFGR_DMAEN_Msk: u32 = 0x1 << ADC_CFGR_DMAEN_Pos;
pub const ADC_CFGR_DMAEN: u32 = ADC_CFGR_DMAEN_Msk;
pub const ADC_CFGR_DMACFG_Pos: u32 = 1;
pub const ADC_CFGR_DMACFG_Msk: u32 = 0x1 << ADC_CFGR_DMACFG_Pos;
pub const ADC_CFGR_DMACFG: u32 = ADC_CFGR_DMACFG_Msk;
pub const ADC_CFGR_ADFCFG_Pos: u32 = 2;
pub const ADC_CFGR_ADFCFG_Msk: u32 = 0x1 << ADC_CFGR_ADFCFG_Pos;
pub const ADC_CFGR_ADFCFG: u32 = ADC_CFGR_ADFCFG_Msk;
pub const ADC_CFGR_RES_Pos: u32 = 3;
pub const ADC_CFGR_RES_Msk: u32 = 0x3 << ADC_CFGR_RES_Pos;
pub const ADC_CFGR_RES: u32 = ADC_CFGR_RES_Msk;
pub const ADC_CFGR_RES_0: u32 = 0x1 << ADC_CFGR_RES_Pos;
pub const ADC_CFGR_RES_1: u32 = 0x2 << ADC_CFGR_RES_Pos;
pub const ADC_CFGR_EXTSEL_Pos: u32 = 5;
pub const ADC_CFGR_EXTSEL_Msk: u32 = 0x1F << ADC_CFGR_EXTSEL_Pos;
pub const ADC_CFGR_EXTSEL: u32 = ADC_CFGR_EXTSEL_Msk;
pub const ADC_CFGR_EXTSEL_0: u32 = 0x1 << ADC_CFGR_EXTSEL_Pos;
pub const ADC_CFGR_EXTSEL_1: u32 = 0x2 << ADC_CFGR_EXTSEL_Pos;
pub const ADC_CFGR_EXTSEL_2: u32 = 0x4 << ADC_CFGR_EXTSEL_Pos;
pub const ADC_CFGR_EXTSEL_3: u32 = 0x8 << ADC_CFGR_EXTSEL_Pos;
pub const ADC_CFGR_EXTSEL_4: u32 = 0x10 << ADC_CFGR_EXTSEL_Pos;
pub const ADC_CFGR_EXTEN_Pos: u32 = 10;
pub const ADC_CFGR_EXTEN_Msk: u32 = 0x3 << ADC_CFGR_EXTEN_Pos;
pub const ADC_CFGR_EXTEN: u32 = ADC_CFGR_EXTEN_Msk;
pub const ADC_CFGR_EXTEN_0: u32 = 0x1 << ADC_CFGR_EXTEN_Pos;
pub const ADC_CFGR_EXTEN_1: u32 = 0x2 << ADC_CFGR_EXTEN_Pos;
pub const ADC_CFGR_OVRMOD_Pos: u32 = 12;
pub const ADC_CFGR_OVRMOD_Msk: u32 = 0x1 << ADC_CFGR_OVRMOD_Pos;
pub const ADC_CFGR_OVRMOD: u32 = ADC_CFGR_OVRMOD_Msk;
pub const ADC_CFGR_CONT_Pos: u32 = 13;
pub const ADC_CFGR_CONT_Msk: u32 = 0x1 << ADC_CFGR_CONT_Pos;
pub const ADC_CFGR_CONT: u32 = ADC_CFGR_CONT_Msk;
pub const ADC_CFGR_AUTDLY_Pos: u32 = 14;
pub const ADC_CFGR_AUTDLY_Msk: u32 = 0x1 << ADC_CFGR_AUTDLY_Pos;
pub const ADC_CFGR_AUTDLY: u32 = ADC_CFGR_AUTDLY_Msk;
pub const ADC_CFGR_ALIGN_Pos: u32 = 15;
pub const ADC_CFGR_ALIGN_Msk: u32 = 0x1 << ADC_CFGR_ALIGN_Pos;
pub const ADC_CFGR_ALIGN: u32 = ADC_CFGR_ALIGN_Msk;
pub const ADC_CFGR_DISCEN_Pos: u32 = 16;
pub const ADC_CFGR_DISCEN_Msk: u32 = 0x1 << ADC_CFGR_DISCEN_Pos;
pub const ADC_CFGR_DISCEN: u32 = ADC_CFGR_DISCEN_Msk;
pub const ADC_CFGR_DISCNUM_Pos: u32 = 17;
pub const ADC_CFGR_DISCNUM_Msk: u32 = 0x7 << ADC_CFGR_DISCNUM_Pos;
pub const ADC_CFGR_DISCNUM: u32 = ADC_CFGR_DISCNUM_Msk;
pub const ADC_CFGR_DISCNUM_0: u32 = 0x1 << ADC_CFGR_DISCNUM_Pos;
pub const ADC_CFGR_DISCNUM_1: u32 = 0x2 << ADC_CFGR_DISCNUM_Pos;
pub const ADC_CFGR_DISCNUM_2: u32 = 0x4 << ADC_CFGR_DISCNUM_Pos;
pub const ADC_CFGR_JDISCEN_Pos: u32 = 20;
pub const ADC_CFGR_JDISCEN_Msk: u32 = 0x1 << ADC_CFGR_JDISCEN_Pos;
pub const ADC_CFGR_JDISCEN: u32 = ADC_CFGR_JDISCEN_Msk;
pub const ADC_CFGR_JQM_Pos: u32 = 21;
pub const ADC_CFGR_JQM_Msk: u32 = 0x1 << ADC_CFGR_JQM_Pos;
pub const ADC_CFGR_JQM: u32 = ADC_CFGR_JQM_Msk;
pub const ADC_CFGR_AWD1SGL_Pos: u32 = 22;
pub const ADC_CFGR_AWD1SGL_Msk: u32 = 0x1 << ADC_CFGR_AWD1SGL_Pos;
pub const ADC_CFGR_AWD1SGL: u32 = ADC_CFGR_AWD1SGL_Msk;
pub const ADC_CFGR_AWD1EN_Pos: u32 = 23;
pub const ADC_CFGR_AWD1EN_Msk: u32 = 0x1 << ADC_CFGR_AWD1EN_Pos;
pub const ADC_CFGR_AWD1EN: u32 = ADC_CFGR_AWD1EN_Msk;
pub const ADC_CFGR_JAWD1EN_Pos: u32 = 24;
pub const ADC_CFGR_JAWD1EN_Msk: u32 = 0x1 << ADC_CFGR_JAWD1EN_Pos;
pub const ADC_CFGR_JAWD1EN: u32 = ADC_CFGR_JAWD1EN_Msk;
pub const ADC_CFGR_JAUTO_Pos: u32 = 25;
pub const ADC_CFGR_JAUTO_Msk: u32 = 0x1 << ADC_CFGR_JAUTO_Pos;
pub const ADC_CFGR_JAUTO: u32 = ADC_CFGR_JAUTO_Msk;
pub const ADC_CFGR_AWD1CH_Pos: u32 = 26;
pub const ADC_CFGR_AWD1CH_Msk: u32 = 0x1F << ADC_CFGR_AWD1CH_Pos;
pub const ADC_CFGR_AWD1CH: u32 = ADC_CFGR_AWD1CH_Msk;
pub const ADC_CFGR_AWD1CH_0: u32 = 0x01 << ADC_CFGR_AWD1CH_Pos;
pub const ADC_CFGR_AWD1CH_1: u32 = 0x02 << ADC_CFGR_AWD1CH_Pos;
pub const ADC_CFGR_AWD1CH_2: u32 = 0x04 << ADC_CFGR_AWD1CH_Pos;
pub const ADC_CFGR_AWD1CH_3: u32 = 0x08 << ADC_CFGR_AWD1CH_Pos;
pub const ADC_CFGR_AWD1CH_4: u32 = 0x10 << ADC_CFGR_AWD1CH_Pos;
pub const ADC_CFGR_JQDIS_Pos: u32 = 31;
pub const ADC_CFGR_JQDIS_Msk: u32 = 0x1 << ADC_CFGR_JQDIS_Pos;
pub const ADC_CFGR_JQDIS: u32 = ADC_CFGR_JQDIS_Msk;
pub const ADC_CFGR2_ROVSE_Pos: u32 = 0;
pub const ADC_CFGR2_ROVSE_Msk: u32 = 0x1 << ADC_CFGR2_ROVSE_Pos;
pub const ADC_CFGR2_ROVSE: u32 = ADC_CFGR2_ROVSE_Msk;
pub const ADC_CFGR2_JOVSE_Pos: u32 = 1;
pub const ADC_CFGR2_JOVSE_Msk: u32 = 0x1 << ADC_CFGR2_JOVSE_Pos;
pub const ADC_CFGR2_JOVSE: u32 = ADC_CFGR2_JOVSE_Msk;
pub const ADC_CFGR2_OVSR_Pos: u32 = 2;
pub const ADC_CFGR2_OVSR_Msk: u32 = 0x7 << ADC_CFGR2_OVSR_Pos;
pub const ADC_CFGR2_OVSR: u32 = ADC_CFGR2_OVSR_Msk;
pub const ADC_CFGR2_OVSR_0: u32 = 0x1 << ADC_CFGR2_OVSR_Pos;
pub const ADC_CFGR2_OVSR_1: u32 = 0x2 << ADC_CFGR2_OVSR_Pos;
pub const ADC_CFGR2_OVSR_2: u32 = 0x4 << ADC_CFGR2_OVSR_Pos;
pub const ADC_CFGR2_OVSS_Pos: u32 = 5;
pub const ADC_CFGR2_OVSS_Msk: u32 = 0xF << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_OVSS: u32 = ADC_CFGR2_OVSS_Msk;
pub const ADC_CFGR2_OVSS_0: u32 = 0x1 << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_OVSS_1: u32 = 0x2 << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_OVSS_2: u32 = 0x4 << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_OVSS_3: u32 = 0x8 << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_TROVS_Pos: u32 = 9;
pub const ADC_CFGR2_TROVS_Msk: u32 = 0x1 << ADC_CFGR2_TROVS_Pos;
pub const ADC_CFGR2_TROVS: u32 = ADC_CFGR2_TROVS_Msk;
pub const ADC_CFGR2_ROVSM_Pos: u32 = 10;
pub const ADC_CFGR2_ROVSM_Msk: u32 = 0x1 << ADC_CFGR2_ROVSM_Pos;
pub const ADC_CFGR2_ROVSM: u32 = ADC_CFGR2_ROVSM_Msk;
pub const ADC_CFGR2_SWTRIG_Pos: u32 = 25;
pub const ADC_CFGR2_SWTRIG_Msk: u32 = 0x1 << ADC_CFGR2_SWTRIG_Pos;
pub const ADC_CFGR2_SWTRIG: u32 = ADC_CFGR2_SWTRIG_Msk;
pub const ADC_CFGR2_BULB_Pos: u32 = 26;
pub const ADC_CFGR2_BULB_Msk: u32 = 0x1 << ADC_CFGR2_BULB_Pos;
pub const ADC_CFGR2_BULB: u32 = ADC_CFGR2_BULB_Msk;
pub const ADC_CFGR2_SMPTRIG_Pos: u32 = 27;
pub const ADC_CFGR2_SMPTRIG_Msk: u32 = 0x1 << ADC_CFGR2_SMPTRIG_Pos;
pub const ADC_CFGR2_SMPTRIG: u32 = ADC_CFGR2_SMPTRIG_Msk;
pub const ADC_SMPR1_SMP0_Pos: u32 = 0;
pub const ADC_SMPR1_SMP0_Msk: u32 = 0x7 << ADC_SMPR1_SMP0_Pos;
pub const ADC_SMPR1_SMP0: u32 = ADC_SMPR1_SMP0_Msk;
pub const ADC_SMPR1_SMP0_0: u32 = 0x1 << ADC_SMPR1_SMP0_Pos;
pub const ADC_SMPR1_SMP0_1: u32 = 0x2 << ADC_SMPR1_SMP0_Pos;
pub const ADC_SMPR1_SMP0_2: u32 = 0x4 << ADC_SMPR1_SMP0_Pos;
pub const ADC_SMPR1_SMP1_Pos: u32 = 3;
pub const ADC_SMPR1_SMP1_Msk: u32 = 0x7 << ADC_SMPR1_SMP1_Pos;
pub const ADC_SMPR1_SMP1: u32 = ADC_SMPR1_SMP1_Msk;
pub const ADC_SMPR1_SMP1_0: u32 = 0x1 << ADC_SMPR1_SMP1_Pos;
pub const ADC_SMPR1_SMP1_1: u32 = 0x2 << ADC_SMPR1_SMP1_Pos;
pub const ADC_SMPR1_SMP1_2: u32 = 0x4 << ADC_SMPR1_SMP1_Pos;
pub const ADC_SMPR1_SMP2_Pos: u32 = 6;
pub const ADC_SMPR1_SMP2_Msk: u32 = 0x7 << ADC_SMPR1_SMP2_Pos;
pub const ADC_SMPR1_SMP2: u32 = ADC_SMPR1_SMP2_Msk;
pub const ADC_SMPR1_SMP2_0: u32 = 0x1 << ADC_SMPR1_SMP2_Pos;
pub const ADC_SMPR1_SMP2_1: u32 = 0x2 << ADC_SMPR1_SMP2_Pos;
pub const ADC_SMPR1_SMP2_2: u32 = 0x4 << ADC_SMPR1_SMP2_Pos;
pub const ADC_SMPR1_SMP3_Pos: u32 = 9;
pub const ADC_SMPR1_SMP3_Msk: u32 = 0x7 << ADC_SMPR1_SMP3_Pos;
pub const ADC_SMPR1_SMP3: u32 = ADC_SMPR1_SMP3_Msk;
pub const ADC_SMPR1_SMP3_0: u32 = 0x1 << ADC_SMPR1_SMP3_Pos;
pub const ADC_SMPR1_SMP3_1: u32 = 0x2 << ADC_SMPR1_SMP3_Pos;
pub const ADC_SMPR1_SMP3_2: u32 = 0x4 << ADC_SMPR1_SMP3_Pos;
pub const ADC_SMPR1_SMP4_Pos: u32 = 12;
pub const ADC_SMPR1_SMP4_Msk: u32 = 0x7 << ADC_SMPR1_SMP4_Pos;
pub const ADC_SMPR1_SMP4: u32 = ADC_SMPR1_SMP4_Msk;
pub const ADC_SMPR1_SMP4_0: u32 = 0x1 << ADC_SMPR1_SMP4_Pos;
pub const ADC_SMPR1_SMP4_1: u32 = 0x2 << ADC_SMPR1_SMP4_Pos;
pub const ADC_SMPR1_SMP4_2: u32 = 0x4 << ADC_SMPR1_SMP4_Pos;
pub const ADC_SMPR1_SMP5_Pos: u32 = 15;
pub const ADC_SMPR1_SMP5_Msk: u32 = 0x7 << ADC_SMPR1_SMP5_Pos;
pub const ADC_SMPR1_SMP5: u32 = ADC_SMPR1_SMP5_Msk;
pub const ADC_SMPR1_SMP5_0: u32 = 0x1 << ADC_SMPR1_SMP5_Pos;
pub const ADC_SMPR1_SMP5_1: u32 = 0x2 << ADC_SMPR1_SMP5_Pos;
pub const ADC_SMPR1_SMP5_2: u32 = 0x4 << ADC_SMPR1_SMP5_Pos;
pub const ADC_SMPR1_SMP6_Pos: u32 = 18;
pub const ADC_SMPR1_SMP6_Msk: u32 = 0x7 << ADC_SMPR1_SMP6_Pos;
pub const ADC_SMPR1_SMP6: u32 = ADC_SMPR1_SMP6_Msk;
pub const ADC_SMPR1_SMP6_0: u32 = 0x1 << ADC_SMPR1_SMP6_Pos;
pub const ADC_SMPR1_SMP6_1: u32 = 0x2 << ADC_SMPR1_SMP6_Pos;
pub const ADC_SMPR1_SMP6_2: u32 = 0x4 << ADC_SMPR1_SMP6_Pos;
pub const ADC_SMPR1_SMP7_Pos: u32 = 21;
pub const ADC_SMPR1_SMP7_Msk: u32 = 0x7 << ADC_SMPR1_SMP7_Pos;
pub const ADC_SMPR1_SMP7: u32 = ADC_SMPR1_SMP7_Msk;
pub const ADC_SMPR1_SMP7_0: u32 = 0x1 << ADC_SMPR1_SMP7_Pos;
pub const ADC_SMPR1_SMP7_1: u32 = 0x2 << ADC_SMPR1_SMP7_Pos;
pub const ADC_SMPR1_SMP7_2: u32 = 0x4 << ADC_SMPR1_SMP7_Pos;
pub const ADC_SMPR1_SMP8_Pos: u32 = 24;
pub const ADC_SMPR1_SMP8_Msk: u32 = 0x7 << ADC_SMPR1_SMP8_Pos;
pub const ADC_SMPR1_SMP8: u32 = ADC_SMPR1_SMP8_Msk;
pub const ADC_SMPR1_SMP8_0: u32 = 0x1 << ADC_SMPR1_SMP8_Pos;
pub const ADC_SMPR1_SMP8_1: u32 = 0x2 << ADC_SMPR1_SMP8_Pos;
pub const ADC_SMPR1_SMP8_2: u32 = 0x4 << ADC_SMPR1_SMP8_Pos;
pub const ADC_SMPR1_SMP9_Pos: u32 = 27;
pub const ADC_SMPR1_SMP9_Msk: u32 = 0x7 << ADC_SMPR1_SMP9_Pos;
pub const ADC_SMPR1_SMP9: u32 = ADC_SMPR1_SMP9_Msk;
pub const ADC_SMPR1_SMP9_0: u32 = 0x1 << ADC_SMPR1_SMP9_Pos;
pub const ADC_SMPR1_SMP9_1: u32 = 0x2 << ADC_SMPR1_SMP9_Pos;
pub const ADC_SMPR1_SMP9_2: u32 = 0x4 << ADC_SMPR1_SMP9_Pos;
pub const ADC_SMPR1_SMPPLUS_Pos: u32 = 31;
pub const ADC_SMPR1_SMPPLUS_Msk: u32 = 0x1 << ADC_SMPR1_SMPPLUS_Pos;
pub const ADC_SMPR1_SMPPLUS: u32 = ADC_SMPR1_SMPPLUS_Msk;
pub const ADC_SMPR2_SMP10_Pos: u32 = 0;
pub const ADC_SMPR2_SMP10_Msk: u32 = 0x7 << ADC_SMPR2_SMP10_Pos;
pub const ADC_SMPR2_SMP10: u32 = ADC_SMPR2_SMP10_Msk;
pub const ADC_SMPR2_SMP10_0: u32 = 0x1 << ADC_SMPR2_SMP10_Pos;
pub const ADC_SMPR2_SMP10_1: u32 = 0x2 << ADC_SMPR2_SMP10_Pos;
pub const ADC_SMPR2_SMP10_2: u32 = 0x4 << ADC_SMPR2_SMP10_Pos;
pub const ADC_SMPR2_SMP11_Pos: u32 = 3;
pub const ADC_SMPR2_SMP11_Msk: u32 = 0x7 << ADC_SMPR2_SMP11_Pos;
pub const ADC_SMPR2_SMP11: u32 = ADC_SMPR2_SMP11_Msk;
pub const ADC_SMPR2_SMP11_0: u32 = 0x1 << ADC_SMPR2_SMP11_Pos;
pub const ADC_SMPR2_SMP11_1: u32 = 0x2 << ADC_SMPR2_SMP11_Pos;
pub const ADC_SMPR2_SMP11_2: u32 = 0x4 << ADC_SMPR2_SMP11_Pos;
pub const ADC_SMPR2_SMP12_Pos: u32 = 6;
pub const ADC_SMPR2_SMP12_Msk: u32 = 0x7 << ADC_SMPR2_SMP12_Pos;
pub const ADC_SMPR2_SMP12: u32 = ADC_SMPR2_SMP12_Msk;
pub const ADC_SMPR2_SMP12_0: u32 = 0x1 << ADC_SMPR2_SMP12_Pos;
pub const ADC_SMPR2_SMP12_1: u32 = 0x2 << ADC_SMPR2_SMP12_Pos;
pub const ADC_SMPR2_SMP12_2: u32 = 0x4 << ADC_SMPR2_SMP12_Pos;
pub const ADC_SMPR2_SMP13_Pos: u32 = 9;
pub const ADC_SMPR2_SMP13_Msk: u32 = 0x7 << ADC_SMPR2_SMP13_Pos;
pub const ADC_SMPR2_SMP13: u32 = ADC_SMPR2_SMP13_Msk;
pub const ADC_SMPR2_SMP13_0: u32 = 0x1 << ADC_SMPR2_SMP13_Pos;
pub const ADC_SMPR2_SMP13_1: u32 = 0x2 << ADC_SMPR2_SMP13_Pos;
pub const ADC_SMPR2_SMP13_2: u32 = 0x4 << ADC_SMPR2_SMP13_Pos;
pub const ADC_SMPR2_SMP14_Pos: u32 = 12;
pub const ADC_SMPR2_SMP14_Msk: u32 = 0x7 << ADC_SMPR2_SMP14_Pos;
pub const ADC_SMPR2_SMP14: u32 = ADC_SMPR2_SMP14_Msk;
pub const ADC_SMPR2_SMP14_0: u32 = 0x1 << ADC_SMPR2_SMP14_Pos;
pub const ADC_SMPR2_SMP14_1: u32 = 0x2 << ADC_SMPR2_SMP14_Pos;
pub const ADC_SMPR2_SMP14_2: u32 = 0x4 << ADC_SMPR2_SMP14_Pos;
pub const ADC_SMPR2_SMP15_Pos: u32 = 15;
pub const ADC_SMPR2_SMP15_Msk: u32 = 0x7 << ADC_SMPR2_SMP15_Pos;
pub const ADC_SMPR2_SMP15: u32 = ADC_SMPR2_SMP15_Msk;
pub const ADC_SMPR2_SMP15_0: u32 = 0x1 << ADC_SMPR2_SMP15_Pos;
pub const ADC_SMPR2_SMP15_1: u32 = 0x2 << ADC_SMPR2_SMP15_Pos;
pub const ADC_SMPR2_SMP15_2: u32 = 0x4 << ADC_SMPR2_SMP15_Pos;
pub const ADC_SMPR2_SMP16_Pos: u32 = 18;
pub const ADC_SMPR2_SMP16_Msk: u32 = 0x7 << ADC_SMPR2_SMP16_Pos;
pub const ADC_SMPR2_SMP16: u32 = ADC_SMPR2_SMP16_Msk;
pub const ADC_SMPR2_SMP16_0: u32 = 0x1 << ADC_SMPR2_SMP16_Pos;
pub const ADC_SMPR2_SMP16_1: u32 = 0x2 << ADC_SMPR2_SMP16_Pos;
pub const ADC_SMPR2_SMP16_2: u32 = 0x4 << ADC_SMPR2_SMP16_Pos;
pub const ADC_SMPR2_SMP17_Pos: u32 = 21;
pub const ADC_SMPR2_SMP17_Msk: u32 = 0x7 << ADC_SMPR2_SMP17_Pos;
pub const ADC_SMPR2_SMP17: u32 = ADC_SMPR2_SMP17_Msk;
pub const ADC_SMPR2_SMP17_0: u32 = 0x1 << ADC_SMPR2_SMP17_Pos;
pub const ADC_SMPR2_SMP17_1: u32 = 0x2 << ADC_SMPR2_SMP17_Pos;
pub const ADC_SMPR2_SMP17_2: u32 = 0x4 << ADC_SMPR2_SMP17_Pos;
pub const ADC_SMPR2_SMP18_Pos: u32 = 24;
pub const ADC_SMPR2_SMP18_Msk: u32 = 0x7 << ADC_SMPR2_SMP18_Pos;
pub const ADC_SMPR2_SMP18: u32 = ADC_SMPR2_SMP18_Msk;
pub const ADC_SMPR2_SMP18_0: u32 = 0x1 << ADC_SMPR2_SMP18_Pos;
pub const ADC_SMPR2_SMP18_1: u32 = 0x2 << ADC_SMPR2_SMP18_Pos;
pub const ADC_SMPR2_SMP18_2: u32 = 0x4 << ADC_SMPR2_SMP18_Pos;
pub const ADC_TR1_LT1_Pos: u32 = 0;
pub const ADC_TR1_LT1_Msk: u32 = 0xFFF << ADC_TR1_LT1_Pos;
pub const ADC_TR1_LT1: u32 = ADC_TR1_LT1_Msk;
pub const ADC_TR1_AWDFILT_Pos: u32 = 12;
pub const ADC_TR1_AWDFILT_Msk: u32 = 0x7 << ADC_TR1_AWDFILT_Pos;
pub const ADC_TR1_AWDFILT: u32 = ADC_TR1_AWDFILT_Msk;
pub const ADC_TR1_AWDFILT_0: u32 = 0x1 << ADC_TR1_AWDFILT_Pos;
pub const ADC_TR1_AWDFILT_1: u32 = 0x2 << ADC_TR1_AWDFILT_Pos;
pub const ADC_TR1_AWDFILT_2: u32 = 0x4 << ADC_TR1_AWDFILT_Pos;
pub const ADC_TR1_HT1_Pos: u32 = 16;
pub const ADC_TR1_HT1_Msk: u32 = 0xFFF << ADC_TR1_HT1_Pos;
pub const ADC_TR1_HT1: u32 = ADC_TR1_HT1_Msk;
pub const ADC_TR2_LT2_Pos: u32 = 0;
pub const ADC_TR2_LT2_Msk: u32 = 0xFF << ADC_TR2_LT2_Pos;
pub const ADC_TR2_LT2: u32 = ADC_TR2_LT2_Msk;
pub const ADC_TR2_HT2_Pos: u32 = 16;
pub const ADC_TR2_HT2_Msk: u32 = 0xFF << ADC_TR2_HT2_Pos;
pub const ADC_TR2_HT2: u32 = ADC_TR2_HT2_Msk;
pub const ADC_TR3_LT3_Pos: u32 = 0;
pub const ADC_TR3_LT3_Msk: u32 = 0xFF << ADC_TR3_LT3_Pos;
pub const ADC_TR3_LT3: u32 = ADC_TR3_LT3_Msk;
pub const ADC_TR3_HT3_Pos: u32 = 16;
pub const ADC_TR3_HT3_Msk: u32 = 0xFF << ADC_TR3_HT3_Pos;
pub const ADC_TR3_HT3: u32 = ADC_TR3_HT3_Msk;
pub const ADC_SQR1_L_Pos: u32 = 0;
pub const ADC_SQR1_L_Msk: u32 = 0xF << ADC_SQR1_L_Pos;
pub const ADC_SQR1_L: u32 = ADC_SQR1_L_Msk;
pub const ADC_SQR1_L_0: u32 = 0x1 << ADC_SQR1_L_Pos;
pub const ADC_SQR1_L_1: u32 = 0x2 << ADC_SQR1_L_Pos;
pub const ADC_SQR1_L_2: u32 = 0x4 << ADC_SQR1_L_Pos;
pub const ADC_SQR1_L_3: u32 = 0x8 << ADC_SQR1_L_Pos;
pub const ADC_SQR1_SQ1_Pos: u32 = 6;
pub const ADC_SQR1_SQ1_Msk: u32 = 0x1F << ADC_SQR1_SQ1_Pos;
pub const ADC_SQR1_SQ1: u32 = ADC_SQR1_SQ1_Msk;
pub const ADC_SQR1_SQ1_0: u32 = 0x01 << ADC_SQR1_SQ1_Pos;
pub const ADC_SQR1_SQ1_1: u32 = 0x02 << ADC_SQR1_SQ1_Pos;
pub const ADC_SQR1_SQ1_2: u32 = 0x04 << ADC_SQR1_SQ1_Pos;
pub const ADC_SQR1_SQ1_3: u32 = 0x08 << ADC_SQR1_SQ1_Pos;
pub const ADC_SQR1_SQ1_4: u32 = 0x10 << ADC_SQR1_SQ1_Pos;
pub const ADC_SQR1_SQ2_Pos: u32 = 12;
pub const ADC_SQR1_SQ2_Msk: u32 = 0x1F << ADC_SQR1_SQ2_Pos;
pub const ADC_SQR1_SQ2: u32 = ADC_SQR1_SQ2_Msk;
pub const ADC_SQR1_SQ2_0: u32 = 0x01 << ADC_SQR1_SQ2_Pos;
pub const ADC_SQR1_SQ2_1: u32 = 0x02 << ADC_SQR1_SQ2_Pos;
pub const ADC_SQR1_SQ2_2: u32 = 0x04 << ADC_SQR1_SQ2_Pos;
pub const ADC_SQR1_SQ2_3: u32 = 0x08 << ADC_SQR1_SQ2_Pos;
pub const ADC_SQR1_SQ2_4: u32 = 0x10 << ADC_SQR1_SQ2_Pos;
pub const ADC_SQR1_SQ3_Pos: u32 = 18;
pub const ADC_SQR1_SQ3_Msk: u32 = 0x1F << ADC_SQR1_SQ3_Pos;
pub const ADC_SQR1_SQ3: u32 = ADC_SQR1_SQ3_Msk;
pub const ADC_SQR1_SQ3_0: u32 = 0x01 << ADC_SQR1_SQ3_Pos;
pub const ADC_SQR1_SQ3_1: u32 = 0x02 << ADC_SQR1_SQ3_Pos;
pub const ADC_SQR1_SQ3_2: u32 = 0x04 << ADC_SQR1_SQ3_Pos;
pub const ADC_SQR1_SQ3_3: u32 = 0x08 << ADC_SQR1_SQ3_Pos;
pub const ADC_SQR1_SQ3_4: u32 = 0x10 << ADC_SQR1_SQ3_Pos;
pub const ADC_SQR1_SQ4_Pos: u32 = 24;
pub const ADC_SQR1_SQ4_Msk: u32 = 0x1F << ADC_SQR1_SQ4_Pos;
pub const ADC_SQR1_SQ4: u32 = ADC_SQR1_SQ4_Msk;
pub const ADC_SQR1_SQ4_0: u32 = 0x01 << ADC_SQR1_SQ4_Pos;
pub const ADC_SQR1_SQ4_1: u32 = 0x02 << ADC_SQR1_SQ4_Pos;
pub const ADC_SQR1_SQ4_2: u32 = 0x04 << ADC_SQR1_SQ4_Pos;
pub const ADC_SQR1_SQ4_3: u32 = 0x08 << ADC_SQR1_SQ4_Pos;
pub const ADC_SQR1_SQ4_4: u32 = 0x10 << ADC_SQR1_SQ4_Pos;
pub const ADC_SQR2_SQ5_Pos: u32 = 0;
pub const ADC_SQR2_SQ5_Msk: u32 = 0x1F << ADC_SQR2_SQ5_Pos;
pub const ADC_SQR2_SQ5: u32 = ADC_SQR2_SQ5_Msk;
pub const ADC_SQR2_SQ5_0: u32 = 0x01 << ADC_SQR2_SQ5_Pos;
pub const ADC_SQR2_SQ5_1: u32 = 0x02 << ADC_SQR2_SQ5_Pos;
pub const ADC_SQR2_SQ5_2: u32 = 0x04 << ADC_SQR2_SQ5_Pos;
pub const ADC_SQR2_SQ5_3: u32 = 0x08 << ADC_SQR2_SQ5_Pos;
pub const ADC_SQR2_SQ5_4: u32 = 0x10 << ADC_SQR2_SQ5_Pos;
pub const ADC_SQR2_SQ6_Pos: u32 = 6;
pub const ADC_SQR2_SQ6_Msk: u32 = 0x1F << ADC_SQR2_SQ6_Pos;
pub const ADC_SQR2_SQ6: u32 = ADC_SQR2_SQ6_Msk;
pub const ADC_SQR2_SQ6_0: u32 = 0x01 << ADC_SQR2_SQ6_Pos;
pub const ADC_SQR2_SQ6_1: u32 = 0x02 << ADC_SQR2_SQ6_Pos;
pub const ADC_SQR2_SQ6_2: u32 = 0x04 << ADC_SQR2_SQ6_Pos;
pub const ADC_SQR2_SQ6_3: u32 = 0x08 << ADC_SQR2_SQ6_Pos;
pub const ADC_SQR2_SQ6_4: u32 = 0x10 << ADC_SQR2_SQ6_Pos;
pub const ADC_SQR2_SQ7_Pos: u32 = 12;
pub const ADC_SQR2_SQ7_Msk: u32 = 0x1F << ADC_SQR2_SQ7_Pos;
pub const ADC_SQR2_SQ7: u32 = ADC_SQR2_SQ7_Msk;
pub const ADC_SQR2_SQ7_0: u32 = 0x01 << ADC_SQR2_SQ7_Pos;
pub const ADC_SQR2_SQ7_1: u32 = 0x02 << ADC_SQR2_SQ7_Pos;
pub const ADC_SQR2_SQ7_2: u32 = 0x04 << ADC_SQR2_SQ7_Pos;
pub const ADC_SQR2_SQ7_3: u32 = 0x08 << ADC_SQR2_SQ7_Pos;
pub const ADC_SQR2_SQ7_4: u32 = 0x10 << ADC_SQR2_SQ7_Pos;
pub const ADC_SQR2_SQ8_Pos: u32 = 18;
pub const ADC_SQR2_SQ8_Msk: u32 = 0x1F << ADC_SQR2_SQ8_Pos;
pub const ADC_SQR2_SQ8: u32 = ADC_SQR2_SQ8_Msk;
pub const ADC_SQR2_SQ8_0: u32 = 0x01 << ADC_SQR2_SQ8_Pos;
pub const ADC_SQR2_SQ8_1: u32 = 0x02 << ADC_SQR2_SQ8_Pos;
pub const ADC_SQR2_SQ8_2: u32 = 0x04 << ADC_SQR2_SQ8_Pos;
pub const ADC_SQR2_SQ8_3: u32 = 0x08 << ADC_SQR2_SQ8_Pos;
pub const ADC_SQR2_SQ8_4: u32 = 0x10 << ADC_SQR2_SQ8_Pos;
pub const ADC_SQR2_SQ9_Pos: u32 = 24;
pub const ADC_SQR2_SQ9_Msk: u32 = 0x1F << ADC_SQR2_SQ9_Pos;
pub const ADC_SQR2_SQ9: u32 = ADC_SQR2_SQ9_Msk;
pub const ADC_SQR2_SQ9_0: u32 = 0x01 << ADC_SQR2_SQ9_Pos;
pub const ADC_SQR2_SQ9_1: u32 = 0x02 << ADC_SQR2_SQ9_Pos;
pub const ADC_SQR2_SQ9_2: u32 = 0x04 << ADC_SQR2_SQ9_Pos;
pub const ADC_SQR2_SQ9_3: u32 = 0x08 << ADC_SQR2_SQ9_Pos;
pub const ADC_SQR2_SQ9_4: u32 = 0x10 << ADC_SQR2_SQ9_Pos;
pub const ADC_SQR3_SQ10_Pos: u32 = 0;
pub const ADC_SQR3_SQ10_Msk: u32 = 0x1F << ADC_SQR3_SQ10_Pos;
pub const ADC_SQR3_SQ10: u32 = ADC_SQR3_SQ10_Msk;
pub const ADC_SQR3_SQ10_0: u32 = 0x01 << ADC_SQR3_SQ10_Pos;
pub const ADC_SQR3_SQ10_1: u32 = 0x02 << ADC_SQR3_SQ10_Pos;
pub const ADC_SQR3_SQ10_2: u32 = 0x04 << ADC_SQR3_SQ10_Pos;
pub const ADC_SQR3_SQ10_3: u32 = 0x08 << ADC_SQR3_SQ10_Pos;
pub const ADC_SQR3_SQ10_4: u32 = 0x10 << ADC_SQR3_SQ10_Pos;
pub const ADC_SQR3_SQ11_Pos: u32 = 6;
pub const ADC_SQR3_SQ11_Msk: u32 = 0x1F << ADC_SQR3_SQ11_Pos;
pub const ADC_SQR3_SQ11: u32 = ADC_SQR3_SQ11_Msk;
pub const ADC_SQR3_SQ11_0: u32 = 0x01 << ADC_SQR3_SQ11_Pos;
pub const ADC_SQR3_SQ11_1: u32 = 0x02 << ADC_SQR3_SQ11_Pos;
pub const ADC_SQR3_SQ11_2: u32 = 0x04 << ADC_SQR3_SQ11_Pos;
pub const ADC_SQR3_SQ11_3: u32 = 0x08 << ADC_SQR3_SQ11_Pos;
pub const ADC_SQR3_SQ11_4: u32 = 0x10 << ADC_SQR3_SQ11_Pos;
pub const ADC_SQR3_SQ12_Pos: u32 = 12;
pub const ADC_SQR3_SQ12_Msk: u32 = 0x1F << ADC_SQR3_SQ12_Pos;
pub const ADC_SQR3_SQ12: u32 = ADC_SQR3_SQ12_Msk;
pub const ADC_SQR3_SQ12_0: u32 = 0x01 << ADC_SQR3_SQ12_Pos;
pub const ADC_SQR3_SQ12_1: u32 = 0x02 << ADC_SQR3_SQ12_Pos;
pub const ADC_SQR3_SQ12_2: u32 = 0x04 << ADC_SQR3_SQ12_Pos;
pub const ADC_SQR3_SQ12_3: u32 = 0x08 << ADC_SQR3_SQ12_Pos;
pub const ADC_SQR3_SQ12_4: u32 = 0x10 << ADC_SQR3_SQ12_Pos;
pub const ADC_SQR3_SQ13_Pos: u32 = 18;
pub const ADC_SQR3_SQ13_Msk: u32 = 0x1F << ADC_SQR3_SQ13_Pos;
pub const ADC_SQR3_SQ13: u32 = ADC_SQR3_SQ13_Msk;
pub const ADC_SQR3_SQ13_0: u32 = 0x01 << ADC_SQR3_SQ13_Pos;
pub const ADC_SQR3_SQ13_1: u32 = 0x02 << ADC_SQR3_SQ13_Pos;
pub const ADC_SQR3_SQ13_2: u32 = 0x04 << ADC_SQR3_SQ13_Pos;
pub const ADC_SQR3_SQ13_3: u32 = 0x08 << ADC_SQR3_SQ13_Pos;
pub const ADC_SQR3_SQ13_4: u32 = 0x10 << ADC_SQR3_SQ13_Pos;
pub const ADC_SQR3_SQ14_Pos: u32 = 24;
pub const ADC_SQR3_SQ14_Msk: u32 = 0x1F << ADC_SQR3_SQ14_Pos;
pub const ADC_SQR3_SQ14: u32 = ADC_SQR3_SQ14_Msk;
pub const ADC_SQR3_SQ14_0: u32 = 0x01 << ADC_SQR3_SQ14_Pos;
pub const ADC_SQR3_SQ14_1: u32 = 0x02 << ADC_SQR3_SQ14_Pos;
pub const ADC_SQR3_SQ14_2: u32 = 0x04 << ADC_SQR3_SQ14_Pos;
pub const ADC_SQR3_SQ14_3: u32 = 0x08 << ADC_SQR3_SQ14_Pos;
pub const ADC_SQR3_SQ14_4: u32 = 0x10 << ADC_SQR3_SQ14_Pos;
pub const ADC_SQR4_SQ15_Pos: u32 = 0;
pub const ADC_SQR4_SQ15_Msk: u32 = 0x1F << ADC_SQR4_SQ15_Pos;
pub const ADC_SQR4_SQ15: u32 = ADC_SQR4_SQ15_Msk;
pub const ADC_SQR4_SQ15_0: u32 = 0x01 << ADC_SQR4_SQ15_Pos;
pub const ADC_SQR4_SQ15_1: u32 = 0x02 << ADC_SQR4_SQ15_Pos;
pub const ADC_SQR4_SQ15_2: u32 = 0x04 << ADC_SQR4_SQ15_Pos;
pub const ADC_SQR4_SQ15_3: u32 = 0x08 << ADC_SQR4_SQ15_Pos;
pub const ADC_SQR4_SQ15_4: u32 = 0x10 << ADC_SQR4_SQ15_Pos;
pub const ADC_SQR4_SQ16_Pos: u32 = 6;
pub const ADC_SQR4_SQ16_Msk: u32 = 0x1F << ADC_SQR4_SQ16_Pos;
pub const ADC_SQR4_SQ16: u32 = ADC_SQR4_SQ16_Msk;
pub const ADC_SQR4_SQ16_0: u32 = 0x01 << ADC_SQR4_SQ16_Pos;
pub const ADC_SQR4_SQ16_1: u32 = 0x02 << ADC_SQR4_SQ16_Pos;
pub const ADC_SQR4_SQ16_2: u32 = 0x04 << ADC_SQR4_SQ16_Pos;
pub const ADC_SQR4_SQ16_3: u32 = 0x08 << ADC_SQR4_SQ16_Pos;
pub const ADC_SQR4_SQ16_4: u32 = 0x10 << ADC_SQR4_SQ16_Pos;
pub const ADC_DR_RDATA_Pos: u32 = 0;
pub const ADC_DR_RDATA_Msk: u32 = 0xFFFF << ADC_DR_RDATA_Pos;
pub const ADC_DR_RDATA: u32 = ADC_DR_RDATA_Msk;
pub const ADC_JSQR_JL_Pos: u32 = 0;
pub const ADC_JSQR_JL_Msk: u32 = 0x3 << ADC_JSQR_JL_Pos;
pub const ADC_JSQR_JL: u32 = ADC_JSQR_JL_Msk;
pub const ADC_JSQR_JL_0: u32 = 0x1 << ADC_JSQR_JL_Pos;
pub const ADC_JSQR_JL_1: u32 = 0x2 << ADC_JSQR_JL_Pos;
pub const ADC_JSQR_JEXTSEL_Pos: u32 = 2;
pub const ADC_JSQR_JEXTSEL_Msk: u32 = 0x1F << ADC_JSQR_JEXTSEL_Pos;
pub const ADC_JSQR_JEXTSEL: u32 = ADC_JSQR_JEXTSEL_Msk;
pub const ADC_JSQR_JEXTSEL_0: u32 = 0x1 << ADC_JSQR_JEXTSEL_Pos;
pub const ADC_JSQR_JEXTSEL_1: u32 = 0x2 << ADC_JSQR_JEXTSEL_Pos;
pub const ADC_JSQR_JEXTSEL_2: u32 = 0x4 << ADC_JSQR_JEXTSEL_Pos;
pub const ADC_JSQR_JEXTSEL_3: u32 = 0x8 << ADC_JSQR_JEXTSEL_Pos;
pub const ADC_JSQR_JEXTSEL_4: u32 = 0x10 << ADC_JSQR_JEXTSEL_Pos;
pub const ADC_JSQR_JEXTEN_Pos: u32 = 7;
pub const ADC_JSQR_JEXTEN_Msk: u32 = 0x3 << ADC_JSQR_JEXTEN_Pos;
pub const ADC_JSQR_JEXTEN: u32 = ADC_JSQR_JEXTEN_Msk;
pub const ADC_JSQR_JEXTEN_0: u32 = 0x1 << ADC_JSQR_JEXTEN_Pos;
pub const ADC_JSQR_JEXTEN_1: u32 = 0x2 << ADC_JSQR_JEXTEN_Pos;
pub const ADC_JSQR_JSQ1_Pos: u32 = 9;
pub const ADC_JSQR_JSQ1_Msk: u32 = 0x1F << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1: u32 = ADC_JSQR_JSQ1_Msk;
pub const ADC_JSQR_JSQ1_0: u32 = 0x01 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1_1: u32 = 0x02 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1_2: u32 = 0x04 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1_3: u32 = 0x08 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1_4: u32 = 0x10 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ2_Pos: u32 = 15;
pub const ADC_JSQR_JSQ2_Msk: u32 = 0x1F << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2: u32 = ADC_JSQR_JSQ2_Msk;
pub const ADC_JSQR_JSQ2_0: u32 = 0x01 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2_1: u32 = 0x02 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2_2: u32 = 0x04 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2_3: u32 = 0x08 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2_4: u32 = 0x10 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ3_Pos: u32 = 21;
pub const ADC_JSQR_JSQ3_Msk: u32 = 0x1F << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3: u32 = ADC_JSQR_JSQ3_Msk;
pub const ADC_JSQR_JSQ3_0: u32 = 0x01 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3_1: u32 = 0x02 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3_2: u32 = 0x04 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3_3: u32 = 0x08 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3_4: u32 = 0x10 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ4_Pos: u32 = 27;
pub const ADC_JSQR_JSQ4_Msk: u32 = 0x1F << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4: u32 = ADC_JSQR_JSQ4_Msk;
pub const ADC_JSQR_JSQ4_0: u32 = 0x01 << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4_1: u32 = 0x02 << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4_2: u32 = 0x04 << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4_3: u32 = 0x08 << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4_4: u32 = 0x10 << ADC_JSQR_JSQ4_Pos;
pub const ADC_OFR1_OFFSET1_Pos: u32 = 0;
pub const ADC_OFR1_OFFSET1_Msk: u32 = 0xFFF << ADC_OFR1_OFFSET1_Pos;
pub const ADC_OFR1_OFFSET1: u32 = ADC_OFR1_OFFSET1_Msk;
pub const ADC_OFR1_OFFSETPOS_Pos: u32 = 24;
pub const ADC_OFR1_OFFSETPOS_Msk: u32 = 0x1 << ADC_OFR1_OFFSETPOS_Pos;
pub const ADC_OFR1_OFFSETPOS: u32 = ADC_OFR1_OFFSETPOS_Msk;
pub const ADC_OFR1_SATEN_Pos: u32 = 25;
pub const ADC_OFR1_SATEN_Msk: u32 = 0x1 << ADC_OFR1_SATEN_Pos;
pub const ADC_OFR1_SATEN: u32 = ADC_OFR1_SATEN_Msk;
pub const ADC_OFR1_OFFSET1_CH_Pos: u32 = 26;
pub const ADC_OFR1_OFFSET1_CH_Msk: u32 = 0x1F << ADC_OFR1_OFFSET1_CH_Pos;
pub const ADC_OFR1_OFFSET1_CH: u32 = ADC_OFR1_OFFSET1_CH_Msk;
pub const ADC_OFR1_OFFSET1_CH_0: u32 = 0x01 << ADC_OFR1_OFFSET1_CH_Pos;
pub const ADC_OFR1_OFFSET1_CH_1: u32 = 0x02 << ADC_OFR1_OFFSET1_CH_Pos;
pub const ADC_OFR1_OFFSET1_CH_2: u32 = 0x04 << ADC_OFR1_OFFSET1_CH_Pos;
pub const ADC_OFR1_OFFSET1_CH_3: u32 = 0x08 << ADC_OFR1_OFFSET1_CH_Pos;
pub const ADC_OFR1_OFFSET1_CH_4: u32 = 0x10 << ADC_OFR1_OFFSET1_CH_Pos;
pub const ADC_OFR1_OFFSET1_EN_Pos: u32 = 31;
pub const ADC_OFR1_OFFSET1_EN_Msk: u32 = 0x1 << ADC_OFR1_OFFSET1_EN_Pos;
pub const ADC_OFR1_OFFSET1_EN: u32 = ADC_OFR1_OFFSET1_EN_Msk;
pub const ADC_OFR2_OFFSET2_Pos: u32 = 0;
pub const ADC_OFR2_OFFSET2_Msk: u32 = 0xFFF << ADC_OFR2_OFFSET2_Pos;
pub const ADC_OFR2_OFFSET2: u32 = ADC_OFR2_OFFSET2_Msk;
pub const ADC_OFR2_OFFSETPOS_Pos: u32 = 24;
pub const ADC_OFR2_OFFSETPOS_Msk: u32 = 0x1 << ADC_OFR2_OFFSETPOS_Pos;
pub const ADC_OFR2_OFFSETPOS: u32 = ADC_OFR2_OFFSETPOS_Msk;
pub const ADC_OFR2_SATEN_Pos: u32 = 25;
pub const ADC_OFR2_SATEN_Msk: u32 = 0x1 << ADC_OFR2_SATEN_Pos;
pub const ADC_OFR2_SATEN: u32 = ADC_OFR2_SATEN_Msk;
pub const ADC_OFR2_OFFSET2_CH_Pos: u32 = 26;
pub const ADC_OFR2_OFFSET2_CH_Msk: u32 = 0x1F << ADC_OFR2_OFFSET2_CH_Pos;
pub const ADC_OFR2_OFFSET2_CH: u32 = ADC_OFR2_OFFSET2_CH_Msk;
pub const ADC_OFR2_OFFSET2_CH_0: u32 = 0x01 << ADC_OFR2_OFFSET2_CH_Pos;
pub const ADC_OFR2_OFFSET2_CH_1: u32 = 0x02 << ADC_OFR2_OFFSET2_CH_Pos;
pub const ADC_OFR2_OFFSET2_CH_2: u32 = 0x04 << ADC_OFR2_OFFSET2_CH_Pos;
pub const ADC_OFR2_OFFSET2_CH_3: u32 = 0x08 << ADC_OFR2_OFFSET2_CH_Pos;
pub const ADC_OFR2_OFFSET2_CH_4: u32 = 0x10 << ADC_OFR2_OFFSET2_CH_Pos;
pub const ADC_OFR2_OFFSET2_EN_Pos: u32 = 31;
pub const ADC_OFR2_OFFSET2_EN_Msk: u32 = 0x1 << ADC_OFR2_OFFSET2_EN_Pos;
pub const ADC_OFR2_OFFSET2_EN: u32 = ADC_OFR2_OFFSET2_EN_Msk;
pub const ADC_OFR3_OFFSET3_Pos: u32 = 0;
pub const ADC_OFR3_OFFSET3_Msk: u32 = 0xFFF << ADC_OFR3_OFFSET3_Pos;
pub const ADC_OFR3_OFFSET3: u32 = ADC_OFR3_OFFSET3_Msk;
pub const ADC_OFR3_OFFSETPOS_Pos: u32 = 24;
pub const ADC_OFR3_OFFSETPOS_Msk: u32 = 0x1 << ADC_OFR3_OFFSETPOS_Pos;
pub const ADC_OFR3_OFFSETPOS: u32 = ADC_OFR3_OFFSETPOS_Msk;
pub const ADC_OFR3_SATEN_Pos: u32 = 25;
pub const ADC_OFR3_SATEN_Msk: u32 = 0x1 << ADC_OFR3_SATEN_Pos;
pub const ADC_OFR3_SATEN: u32 = ADC_OFR3_SATEN_Msk;
pub const ADC_OFR3_OFFSET3_CH_Pos: u32 = 26;
pub const ADC_OFR3_OFFSET3_CH_Msk: u32 = 0x1F << ADC_OFR3_OFFSET3_CH_Pos;
pub const ADC_OFR3_OFFSET3_CH: u32 = ADC_OFR3_OFFSET3_CH_Msk;
pub const ADC_OFR3_OFFSET3_CH_0: u32 = 0x01 << ADC_OFR3_OFFSET3_CH_Pos;
pub const ADC_OFR3_OFFSET3_CH_1: u32 = 0x02 << ADC_OFR3_OFFSET3_CH_Pos;
pub const ADC_OFR3_OFFSET3_CH_2: u32 = 0x04 << ADC_OFR3_OFFSET3_CH_Pos;
pub const ADC_OFR3_OFFSET3_CH_3: u32 = 0x08 << ADC_OFR3_OFFSET3_CH_Pos;
pub const ADC_OFR3_OFFSET3_CH_4: u32 = 0x10 << ADC_OFR3_OFFSET3_CH_Pos;
pub const ADC_OFR3_OFFSET3_EN_Pos: u32 = 31;
pub const ADC_OFR3_OFFSET3_EN_Msk: u32 = 0x1 << ADC_OFR3_OFFSET3_EN_Pos;
pub const ADC_OFR3_OFFSET3_EN: u32 = ADC_OFR3_OFFSET3_EN_Msk;
pub const ADC_OFR4_OFFSET4_Pos: u32 = 0;
pub const ADC_OFR4_OFFSET4_Msk: u32 = 0xFFF << ADC_OFR4_OFFSET4_Pos;
pub const ADC_OFR4_OFFSET4: u32 = ADC_OFR4_OFFSET4_Msk;
pub const ADC_OFR4_OFFSETPOS_Pos: u32 = 24;
pub const ADC_OFR4_OFFSETPOS_Msk: u32 = 0x1 << ADC_OFR4_OFFSETPOS_Pos;
pub const ADC_OFR4_OFFSETPOS: u32 = ADC_OFR4_OFFSETPOS_Msk;
pub const ADC_OFR4_SATEN_Pos: u32 = 25;
pub const ADC_OFR4_SATEN_Msk: u32 = 0x1 << ADC_OFR4_SATEN_Pos;
pub const ADC_OFR4_SATEN: u32 = ADC_OFR4_SATEN_Msk;
pub const ADC_OFR4_OFFSET4_CH_Pos: u32 = 26;
pub const ADC_OFR4_OFFSET4_CH_Msk: u32 = 0x1F << ADC_OFR4_OFFSET4_CH_Pos;
pub const ADC_OFR4_OFFSET4_CH: u32 = ADC_OFR4_OFFSET4_CH_Msk;
pub const ADC_OFR4_OFFSET4_CH_0: u32 = 0x01 << ADC_OFR4_OFFSET4_CH_Pos;
pub const ADC_OFR4_OFFSET4_CH_1: u32 = 0x02 << ADC_OFR4_OFFSET4_CH_Pos;
pub const ADC_OFR4_OFFSET4_CH_2: u32 = 0x04 << ADC_OFR4_OFFSET4_CH_Pos;
pub const ADC_OFR4_OFFSET4_CH_3: u32 = 0x08 << ADC_OFR4_OFFSET4_CH_Pos;
pub const ADC_OFR4_OFFSET4_CH_4: u32 = 0x10 << ADC_OFR4_OFFSET4_CH_Pos;
pub const ADC_OFR4_OFFSET4_EN_Pos: u32 = 31;
pub const ADC_OFR4_OFFSET4_EN_Msk: u32 = 0x1 << ADC_OFR4_OFFSET4_EN_Pos;
pub const ADC_OFR4_OFFSET4_EN: u32 = ADC_OFR4_OFFSET4_EN_Msk;
pub const ADC_JDR1_JDATA_Pos: u32 = 0;
pub const ADC_JDR1_JDATA_Msk: u32 = 0xFFFF << ADC_JDR1_JDATA_Pos;
pub const ADC_JDR1_JDATA: u32 = ADC_JDR1_JDATA_Msk;
pub const ADC_JDR2_JDATA_Pos: u32 = 0;
pub const ADC_JDR2_JDATA_Msk: u32 = 0xFFFF << ADC_JDR2_JDATA_Pos;
pub const ADC_JDR2_JDATA: u32 = ADC_JDR2_JDATA_Msk;
pub const ADC_JDR3_JDATA_Pos: u32 = 0;
pub const ADC_JDR3_JDATA_Msk: u32 = 0xFFFF << ADC_JDR3_JDATA_Pos;
pub const ADC_JDR3_JDATA: u32 = ADC_JDR3_JDATA_Msk;
pub const ADC_JDR4_JDATA_Pos: u32 = 0;
pub const ADC_JDR4_JDATA_Msk: u32 = 0xFFFF << ADC_JDR4_JDATA_Pos;
pub const ADC_JDR4_JDATA: u32 = ADC_JDR4_JDATA_Msk;
pub const ADC_AWD2CR_AWD2CH_Pos: u32 = 0;
pub const ADC_AWD2CR_AWD2CH_Msk: u32 = 0x7FFFF << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH: u32 = ADC_AWD2CR_AWD2CH_Msk;
pub const ADC_AWD2CR_AWD2CH_0: u32 = 0x00001 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_1: u32 = 0x00002 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_2: u32 = 0x00004 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_3: u32 = 0x00008 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_4: u32 = 0x00010 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_5: u32 = 0x00020 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_6: u32 = 0x00040 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_7: u32 = 0x00080 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_8: u32 = 0x00100 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_9: u32 = 0x00200 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_10: u32 = 0x00400 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_11: u32 = 0x00800 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_12: u32 = 0x01000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_13: u32 = 0x02000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_14: u32 = 0x04000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_15: u32 = 0x08000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_16: u32 = 0x10000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_17: u32 = 0x20000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_18: u32 = 0x40000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD3CR_AWD3CH_Pos: u32 = 0;
pub const ADC_AWD3CR_AWD3CH_Msk: u32 = 0x7FFFF << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH: u32 = ADC_AWD3CR_AWD3CH_Msk;
pub const ADC_AWD3CR_AWD3CH_0: u32 = 0x00001 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_1: u32 = 0x00002 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_2: u32 = 0x00004 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_3: u32 = 0x00008 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_4: u32 = 0x00010 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_5: u32 = 0x00020 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_6: u32 = 0x00040 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_7: u32 = 0x00080 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_8: u32 = 0x00100 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_9: u32 = 0x00200 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_10: u32 = 0x00400 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_11: u32 = 0x00800 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_12: u32 = 0x01000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_13: u32 = 0x02000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_14: u32 = 0x04000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_15: u32 = 0x08000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_16: u32 = 0x10000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_17: u32 = 0x20000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_18: u32 = 0x40000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_DIFSEL_DIFSEL_Pos: u32 = 0;
pub const ADC_DIFSEL_DIFSEL_Msk: u32 = 0x7FFFF << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL: u32 = ADC_DIFSEL_DIFSEL_Msk;
pub const ADC_DIFSEL_DIFSEL_0: u32 = 0x00001 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_1: u32 = 0x00002 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_2: u32 = 0x00004 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_3: u32 = 0x00008 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_4: u32 = 0x00010 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_5: u32 = 0x00020 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_6: u32 = 0x00040 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_7: u32 = 0x00080 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_8: u32 = 0x00100 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_9: u32 = 0x00200 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_10: u32 = 0x00400 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_11: u32 = 0x00800 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_12: u32 = 0x01000 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_13: u32 = 0x02000 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_14: u32 = 0x04000 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_15: u32 = 0x08000 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_16: u32 = 0x10000 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_17: u32 = 0x20000 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_18: u32 = 0x40000 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_CALFACT_CALFACT_S_Pos: u32 = 0;
pub const ADC_CALFACT_CALFACT_S_Msk: u32 = 0x7F << ADC_CALFACT_CALFACT_S_Pos;
pub const ADC_CALFACT_CALFACT_S: u32 = ADC_CALFACT_CALFACT_S_Msk;
pub const ADC_CALFACT_CALFACT_S_0: u32 = 0x01 << ADC_CALFACT_CALFACT_S_Pos;
pub const ADC_CALFACT_CALFACT_S_1: u32 = 0x02 << ADC_CALFACT_CALFACT_S_Pos;
pub const ADC_CALFACT_CALFACT_S_2: u32 = 0x04 << ADC_CALFACT_CALFACT_S_Pos;
pub const ADC_CALFACT_CALFACT_S_3: u32 = 0x08 << ADC_CALFACT_CALFACT_S_Pos;
pub const ADC_CALFACT_CALFACT_S_4: u32 = 0x10 << ADC_CALFACT_CALFACT_S_Pos;
pub const ADC_CALFACT_CALFACT_S_5: u32 = 0x20 << ADC_CALFACT_CALFACT_S_Pos;
pub const ADC_CALFACT_CALFACT_S_6: u32 = 0x40 << ADC_CALFACT_CALFACT_S_Pos;
pub const ADC_CALFACT_CALFACT_D_Pos: u32 = 16;
pub const ADC_CALFACT_CALFACT_D_Msk: u32 = 0x7F << ADC_CALFACT_CALFACT_D_Pos;
pub const ADC_CALFACT_CALFACT_D: u32 = ADC_CALFACT_CALFACT_D_Msk;
pub const ADC_CALFACT_CALFACT_D_0: u32 = 0x01 << ADC_CALFACT_CALFACT_D_Pos;
pub const ADC_CALFACT_CALFACT_D_1: u32 = 0x02 << ADC_CALFACT_CALFACT_D_Pos;
pub const ADC_CALFACT_CALFACT_D_2: u32 = 0x04 << ADC_CALFACT_CALFACT_D_Pos;
pub const ADC_CALFACT_CALFACT_D_3: u32 = 0x08 << ADC_CALFACT_CALFACT_D_Pos;
pub const ADC_CALFACT_CALFACT_D_4: u32 = 0x10 << ADC_CALFACT_CALFACT_D_Pos;
pub const ADC_CALFACT_CALFACT_D_5: u32 = 0x20 << ADC_CALFACT_CALFACT_D_Pos;
pub const ADC_CALFACT_CALFACT_D_6: u32 = 0x40 << ADC_CALFACT_CALFACT_D_Pos;
pub const ADC_OR_OP0_Pos: u32 = 0;
pub const ADC_OR_OP0_Msk: u32 = 0x1 << ADC_OR_OP0_Pos;
pub const ADC_OR_OP0: u32 = ADC_OR_OP0_Msk;
pub const ADC_CSR_ADRDY_MST_Pos: u32 = 0;
pub const ADC_CSR_ADRDY_MST_Msk: u32 = 0x1 << ADC_CSR_ADRDY_MST_Pos;
pub const ADC_CSR_ADRDY_MST: u32 = ADC_CSR_ADRDY_MST_Msk;
pub const ADC_CSR_EOSMP_MST_Pos: u32 = 1;
pub const ADC_CSR_EOSMP_MST_Msk: u32 = 0x1 << ADC_CSR_EOSMP_MST_Pos;
pub const ADC_CSR_EOSMP_MST: u32 = ADC_CSR_EOSMP_MST_Msk;
pub const ADC_CSR_EOC_MST_Pos: u32 = 2;
pub const ADC_CSR_EOC_MST_Msk: u32 = 0x1 << ADC_CSR_EOC_MST_Pos;
pub const ADC_CSR_EOC_MST: u32 = ADC_CSR_EOC_MST_Msk;
pub const ADC_CSR_EOS_MST_Pos: u32 = 3;
pub const ADC_CSR_EOS_MST_Msk: u32 = 0x1 << ADC_CSR_EOS_MST_Pos;
pub const ADC_CSR_EOS_MST: u32 = ADC_CSR_EOS_MST_Msk;
pub const ADC_CSR_OVR_MST_Pos: u32 = 4;
pub const ADC_CSR_OVR_MST_Msk: u32 = 0x1 << ADC_CSR_OVR_MST_Pos;
pub const ADC_CSR_OVR_MST: u32 = ADC_CSR_OVR_MST_Msk;
pub const ADC_CSR_JEOC_MST_Pos: u32 = 5;
pub const ADC_CSR_JEOC_MST_Msk: u32 = 0x1 << ADC_CSR_JEOC_MST_Pos;
pub const ADC_CSR_JEOC_MST: u32 = ADC_CSR_JEOC_MST_Msk;
pub const ADC_CSR_JEOS_MST_Pos: u32 = 6;
pub const ADC_CSR_JEOS_MST_Msk: u32 = 0x1 << ADC_CSR_JEOS_MST_Pos;
pub const ADC_CSR_JEOS_MST: u32 = ADC_CSR_JEOS_MST_Msk;
pub const ADC_CSR_AWD1_MST_Pos: u32 = 7;
pub const ADC_CSR_AWD1_MST_Msk: u32 = 0x1 << ADC_CSR_AWD1_MST_Pos;
pub const ADC_CSR_AWD1_MST: u32 = ADC_CSR_AWD1_MST_Msk;
pub const ADC_CSR_AWD2_MST_Pos: u32 = 8;
pub const ADC_CSR_AWD2_MST_Msk: u32 = 0x1 << ADC_CSR_AWD2_MST_Pos;
pub const ADC_CSR_AWD2_MST: u32 = ADC_CSR_AWD2_MST_Msk;
pub const ADC_CSR_AWD3_MST_Pos: u32 = 9;
pub const ADC_CSR_AWD3_MST_Msk: u32 = 0x1 << ADC_CSR_AWD3_MST_Pos;
pub const ADC_CSR_AWD3_MST: u32 = ADC_CSR_AWD3_MST_Msk;
pub const ADC_CSR_JQOVF_MST_Pos: u32 = 10;
pub const ADC_CSR_JQOVF_MST_Msk: u32 = 0x1 << ADC_CSR_JQOVF_MST_Pos;
pub const ADC_CSR_JQOVF_MST: u32 = ADC_CSR_JQOVF_MST_Msk;
pub const ADC_CSR_ADRDY_SLV_Pos: u32 = 16;
pub const ADC_CSR_ADRDY_SLV_Msk: u32 = 0x1 << ADC_CSR_ADRDY_SLV_Pos;
pub const ADC_CSR_ADRDY_SLV: u32 = ADC_CSR_ADRDY_SLV_Msk;
pub const ADC_CSR_EOSMP_SLV_Pos: u32 = 17;
pub const ADC_CSR_EOSMP_SLV_Msk: u32 = 0x1 << ADC_CSR_EOSMP_SLV_Pos;
pub const ADC_CSR_EOSMP_SLV: u32 = ADC_CSR_EOSMP_SLV_Msk;
pub const ADC_CSR_EOC_SLV_Pos: u32 = 18;
pub const ADC_CSR_EOC_SLV_Msk: u32 = 0x1 << ADC_CSR_EOC_SLV_Pos;
pub const ADC_CSR_EOC_SLV: u32 = ADC_CSR_EOC_SLV_Msk;
pub const ADC_CSR_EOS_SLV_Pos: u32 = 19;
pub const ADC_CSR_EOS_SLV_Msk: u32 = 0x1 << ADC_CSR_EOS_SLV_Pos;
pub const ADC_CSR_EOS_SLV: u32 = ADC_CSR_EOS_SLV_Msk;
pub const ADC_CSR_OVR_SLV_Pos: u32 = 20;
pub const ADC_CSR_OVR_SLV_Msk: u32 = 0x1 << ADC_CSR_OVR_SLV_Pos;
pub const ADC_CSR_OVR_SLV: u32 = ADC_CSR_OVR_SLV_Msk;
pub const ADC_CSR_JEOC_SLV_Pos: u32 = 21;
pub const ADC_CSR_JEOC_SLV_Msk: u32 = 0x1 << ADC_CSR_JEOC_SLV_Pos;
pub const ADC_CSR_JEOC_SLV: u32 = ADC_CSR_JEOC_SLV_Msk;
pub const ADC_CSR_JEOS_SLV_Pos: u32 = 22;
pub const ADC_CSR_JEOS_SLV_Msk: u32 = 0x1 << ADC_CSR_JEOS_SLV_Pos;
pub const ADC_CSR_JEOS_SLV: u32 = ADC_CSR_JEOS_SLV_Msk;
pub const ADC_CSR_AWD1_SLV_Pos: u32 = 23;
pub const ADC_CSR_AWD1_SLV_Msk: u32 = 0x1 << ADC_CSR_AWD1_SLV_Pos;
pub const ADC_CSR_AWD1_SLV: u32 = ADC_CSR_AWD1_SLV_Msk;
pub const ADC_CSR_AWD2_SLV_Pos: u32 = 24;
pub const ADC_CSR_AWD2_SLV_Msk: u32 = 0x1 << ADC_CSR_AWD2_SLV_Pos;
pub const ADC_CSR_AWD2_SLV: u32 = ADC_CSR_AWD2_SLV_Msk;
pub const ADC_CSR_AWD3_SLV_Pos: u32 = 25;
pub const ADC_CSR_AWD3_SLV_Msk: u32 = 0x1 << ADC_CSR_AWD3_SLV_Pos;
pub const ADC_CSR_AWD3_SLV: u32 = ADC_CSR_AWD3_SLV_Msk;
pub const ADC_CSR_JQOVF_SLV_Pos: u32 = 26;
pub const ADC_CSR_JQOVF_SLV_Msk: u32 = 0x1 << ADC_CSR_JQOVF_SLV_Pos;
pub const ADC_CSR_JQOVF_SLV: u32 = ADC_CSR_JQOVF_SLV_Msk;
pub const ADC_CCR_DUAL_Pos: u32 = 0;
pub const ADC_CCR_DUAL_Msk: u32 = 0x1F << ADC_CCR_DUAL_Pos;
pub const ADC_CCR_DUAL: u32 = ADC_CCR_DUAL_Msk;
pub const ADC_CCR_DUAL_0: u32 = 0x01 << ADC_CCR_DUAL_Pos;
pub const ADC_CCR_DUAL_1: u32 = 0x02 << ADC_CCR_DUAL_Pos;
pub const ADC_CCR_DUAL_2: u32 = 0x04 << ADC_CCR_DUAL_Pos;
pub const ADC_CCR_DUAL_3: u32 = 0x08 << ADC_CCR_DUAL_Pos;
pub const ADC_CCR_DUAL_4: u32 = 0x10 << ADC_CCR_DUAL_Pos;
pub const ADC_CCR_DELAY_Pos: u32 = 8;
pub const ADC_CCR_DELAY_Msk: u32 = 0xF << ADC_CCR_DELAY_Pos;
pub const ADC_CCR_DELAY: u32 = ADC_CCR_DELAY_Msk;
pub const ADC_CCR_DELAY_0: u32 = 0x1 << ADC_CCR_DELAY_Pos;
pub const ADC_CCR_DELAY_1: u32 = 0x2 << ADC_CCR_DELAY_Pos;
pub const ADC_CCR_DELAY_2: u32 = 0x4 << ADC_CCR_DELAY_Pos;
pub const ADC_CCR_DELAY_3: u32 = 0x8 << ADC_CCR_DELAY_Pos;
pub const ADC_CCR_DMACFG_Pos: u32 = 13;
pub const ADC_CCR_DMACFG_Msk: u32 = 0x1 << ADC_CCR_DMACFG_Pos;
pub const ADC_CCR_DMACFG: u32 = ADC_CCR_DMACFG_Msk;
pub const ADC_CCR_MDMA_Pos: u32 = 14;
pub const ADC_CCR_MDMA_Msk: u32 = 0x3 << ADC_CCR_MDMA_Pos;
pub const ADC_CCR_MDMA: u32 = ADC_CCR_MDMA_Msk;
pub const ADC_CCR_MDMA_0: u32 = 0x1 << ADC_CCR_MDMA_Pos;
pub const ADC_CCR_MDMA_1: u32 = 0x2 << ADC_CCR_MDMA_Pos;
pub const ADC_CCR_CKMODE_Pos: u32 = 16;
pub const ADC_CCR_CKMODE_Msk: u32 = 0x3 << ADC_CCR_CKMODE_Pos;
pub const ADC_CCR_CKMODE: u32 = ADC_CCR_CKMODE_Msk;
pub const ADC_CCR_CKMODE_0: u32 = 0x1 << ADC_CCR_CKMODE_Pos;
pub const ADC_CCR_CKMODE_1: u32 = 0x2 << ADC_CCR_CKMODE_Pos;
pub const ADC_CCR_PRESC_Pos: u32 = 18;
pub const ADC_CCR_PRESC_Msk: u32 = 0xF << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_PRESC: u32 = ADC_CCR_PRESC_Msk;
pub const ADC_CCR_PRESC_0: u32 = 0x1 << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_PRESC_1: u32 = 0x2 << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_PRESC_2: u32 = 0x4 << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_PRESC_3: u32 = 0x8 << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_VREFEN_Pos: u32 = 22;
pub const ADC_CCR_VREFEN_Msk: u32 = 0x1 << ADC_CCR_VREFEN_Pos;
pub const ADC_CCR_VREFEN: u32 = ADC_CCR_VREFEN_Msk;
pub const ADC_CCR_TSEN_Pos: u32 = 23;
pub const ADC_CCR_TSEN_Msk: u32 = 0x1 << ADC_CCR_TSEN_Pos;
pub const ADC_CCR_TSEN: u32 = ADC_CCR_TSEN_Msk;
pub const ADC_CCR_VBATEN_Pos: u32 = 24;
pub const ADC_CCR_VBATEN_Msk: u32 = 0x1 << ADC_CCR_VBATEN_Pos;
pub const ADC_CCR_VBATEN: u32 = ADC_CCR_VBATEN_Msk;
pub const ADC_CDR_RDATA_MST_Pos: u32 = 0;
pub const ADC_CDR_RDATA_MST_Msk: u32 = 0xFFFF << ADC_CDR_RDATA_MST_Pos;
pub const ADC_CDR_RDATA_MST: u32 = ADC_CDR_RDATA_MST_Msk;
pub const ADC_CDR_RDATA_SLV_Pos: u32 = 16;
pub const ADC_CDR_RDATA_SLV_Msk: u32 = 0xFFFF << ADC_CDR_RDATA_SLV_Pos;
pub const ADC_CDR_RDATA_SLV: u32 = ADC_CDR_RDATA_SLV_Msk;
pub const AXIM_ASIB_FNMOD2_BYPASS_MERGE_Pos: u32 = 0;
pub const AXIM_ASIB_FNMOD2_BYPASS_MERGE_Msk: u32 = 0x1 << AXIM_ASIB_FNMOD2_BYPASS_MERGE_Pos;
pub const AXIM_ASIB_FNMOD2_BYPASS_MERGE: u32 = AXIM_ASIB_FNMOD2_BYPASS_MERGE_Msk;
pub const AXIM_ASIB_READQOS_AR_QOS_Pos: u32 = 0;
pub const AXIM_ASIB_READQOS_AR_QOS_Msk: u32 = 0xF << AXIM_ASIB_READQOS_AR_QOS_Pos;
pub const AXIM_ASIB_READQOS_AR_QOS: u32 = AXIM_ASIB_READQOS_AR_QOS_Msk;
pub const AXIM_ASIB_WRITEQOS_AW_QOS_Pos: u32 = 0;
pub const AXIM_ASIB_WRITEQOS_AW_QOS_Msk: u32 = 0xF << AXIM_ASIB_WRITEQOS_AW_QOS_Pos;
pub const AXIM_ASIB_WRITEQOS_AW_QOS: u32 = AXIM_ASIB_WRITEQOS_AW_QOS_Msk;
pub const AXIM_ASIB_FNMOD_READ_ISS_Pos: u32 = 0;
pub const AXIM_ASIB_FNMOD_READ_ISS_Msk: u32 = 0x1 << AXIM_ASIB_FNMOD_READ_ISS_Pos;
pub const AXIM_ASIB_FNMOD_READ_ISS: u32 = AXIM_ASIB_FNMOD_READ_ISS_Msk;
pub const AXIM_ASIB_FNMOD_WRITE_ISS_Pos: u32 = 1;
pub const AXIM_ASIB_FNMOD_WRITE_ISS_Msk: u32 = 0x1 << AXIM_ASIB_FNMOD_WRITE_ISS_Pos;
pub const AXIM_ASIB_FNMOD_WRITE_ISS: u32 = AXIM_ASIB_FNMOD_WRITE_ISS_Msk;
pub const AXIM_AMIB_FNMODBMISS_READ_ISS_Pos: u32 = 0;
pub const AXIM_AMIB_FNMODBMISS_READ_ISS_Msk: u32 = 0x1 << AXIM_AMIB_FNMODBMISS_READ_ISS_Pos;
pub const AXIM_AMIB_FNMODBMISS_READ_ISS: u32 = AXIM_AMIB_FNMODBMISS_READ_ISS_Msk;
pub const AXIM_AMIB_FNMODBMISS_WRITE_ISS_Pos: u32 = 1;
pub const AXIM_AMIB_FNMODBMISS_WRITE_ISS_Msk: u32 = 0x1 << AXIM_AMIB_FNMODBMISS_WRITE_ISS_Pos;
pub const AXIM_AMIB_FNMODBMISS_WRITE_ISS: u32 = AXIM_AMIB_FNMODBMISS_WRITE_ISS_Msk;
pub const AXIM_AMIB_FNMOD2_BYPASS_MERGE_Pos: u32 = 0;
pub const AXIM_AMIB_FNMOD2_BYPASS_MERGE_Msk: u32 = 0x1 << AXIM_AMIB_FNMOD2_BYPASS_MERGE_Pos;
pub const AXIM_AMIB_FNMOD2_BYPASS_MERGE: u32 = AXIM_AMIB_FNMOD2_BYPASS_MERGE_Msk;
pub const AXIM_AMIB_FNMODLB_LONG_BURST_Pos: u32 = 0;
pub const AXIM_AMIB_FNMODLB_LONG_BURST_Msk: u32 = 0x1 << AXIM_AMIB_FNMODLB_LONG_BURST_Pos;
pub const AXIM_AMIB_FNMODLB_LONG_BURST: u32 = AXIM_AMIB_FNMODLB_LONG_BURST_Msk;
pub const AXIM_AMIB_FNMOD_READ_ISS_Pos: u32 = 0;
pub const AXIM_AMIB_FNMOD_READ_ISS_Msk: u32 = 0x1 << AXIM_AMIB_FNMOD_READ_ISS_Pos;
pub const AXIM_AMIB_FNMOD_READ_ISS: u32 = AXIM_AMIB_FNMOD_READ_ISS_Msk;
pub const AXIM_AMIB_FNMOD_WRITE_ISS_Pos: u32 = 1;
pub const AXIM_AMIB_FNMOD_WRITE_ISS_Msk: u32 = 0x1 << AXIM_AMIB_FNMOD_WRITE_ISS_Pos;
pub const AXIM_AMIB_FNMOD_WRITE_ISS: u32 = AXIM_AMIB_FNMOD_WRITE_ISS_Msk;
pub const VREFBUF_CSR_ENVR_Pos: u32 = 0;
pub const VREFBUF_CSR_ENVR_Msk: u32 = 0x1 << VREFBUF_CSR_ENVR_Pos;
pub const VREFBUF_CSR_ENVR: u32 = VREFBUF_CSR_ENVR_Msk;
pub const VREFBUF_CSR_HIZ_Pos: u32 = 1;
pub const VREFBUF_CSR_HIZ_Msk: u32 = 0x1 << VREFBUF_CSR_HIZ_Pos;
pub const VREFBUF_CSR_HIZ: u32 = VREFBUF_CSR_HIZ_Msk;
pub const VREFBUF_CSR_VRR_Pos: u32 = 3;
pub const VREFBUF_CSR_VRR_Msk: u32 = 0x1 << VREFBUF_CSR_VRR_Pos;
pub const VREFBUF_CSR_VRR: u32 = VREFBUF_CSR_VRR_Msk;
pub const VREFBUF_CSR_VRS_Pos: u32 = 4;
pub const VREFBUF_CSR_VRS_Msk: u32 = 0x7 << VREFBUF_CSR_VRS_Pos;
pub const VREFBUF_CSR_VRS: u32 = VREFBUF_CSR_VRS_Msk;
pub const VREFBUF_CSR_VRS_OUT1: u32 = uint32_t0x00000000;
pub const VREFBUF_CSR_VRS_OUT2_Pos: u32 = 4;
pub const VREFBUF_CSR_VRS_OUT2_Msk: u32 = 0x1 << VREFBUF_CSR_VRS_OUT2_Pos;
pub const VREFBUF_CSR_VRS_OUT2: u32 = VREFBUF_CSR_VRS_OUT2_Msk;
pub const VREFBUF_CSR_VRS_OUT3_Pos: u32 = 5;
pub const VREFBUF_CSR_VRS_OUT3_Msk: u32 = 0x1 << VREFBUF_CSR_VRS_OUT3_Pos;
pub const VREFBUF_CSR_VRS_OUT3: u32 = VREFBUF_CSR_VRS_OUT3_Msk;
pub const VREFBUF_CSR_VRS_OUT4_Pos: u32 = 4;
pub const VREFBUF_CSR_VRS_OUT4_Msk: u32 = 0x3 << VREFBUF_CSR_VRS_OUT4_Pos;
pub const VREFBUF_CSR_VRS_OUT4: u32 = VREFBUF_CSR_VRS_OUT4_Msk;
pub const VREFBUF_CCR_TRIM_Pos: u32 = 0;
pub const VREFBUF_CCR_TRIM_Msk: u32 = 0x3F << VREFBUF_CCR_TRIM_Pos;
pub const VREFBUF_CCR_TRIM: u32 = VREFBUF_CCR_TRIM_Msk;
pub const CEC_CR_CECEN_Pos: u32 = 0;
pub const CEC_CR_CECEN_Msk: u32 = 0x1 << CEC_CR_CECEN_Pos;
pub const CEC_CR_CECEN: u32 = CEC_CR_CECEN_Msk;
pub const CEC_CR_TXSOM_Pos: u32 = 1;
pub const CEC_CR_TXSOM_Msk: u32 = 0x1 << CEC_CR_TXSOM_Pos;
pub const CEC_CR_TXSOM: u32 = CEC_CR_TXSOM_Msk;
pub const CEC_CR_TXEOM_Pos: u32 = 2;
pub const CEC_CR_TXEOM_Msk: u32 = 0x1 << CEC_CR_TXEOM_Pos;
pub const CEC_CR_TXEOM: u32 = CEC_CR_TXEOM_Msk;
pub const CEC_CFGR_SFT_Pos: u32 = 0;
pub const CEC_CFGR_SFT_Msk: u32 = 0x7 << CEC_CFGR_SFT_Pos;
pub const CEC_CFGR_SFT: u32 = CEC_CFGR_SFT_Msk;
pub const CEC_CFGR_RXTOL_Pos: u32 = 3;
pub const CEC_CFGR_RXTOL_Msk: u32 = 0x1 << CEC_CFGR_RXTOL_Pos;
pub const CEC_CFGR_RXTOL: u32 = CEC_CFGR_RXTOL_Msk;
pub const CEC_CFGR_BRESTP_Pos: u32 = 4;
pub const CEC_CFGR_BRESTP_Msk: u32 = 0x1 << CEC_CFGR_BRESTP_Pos;
pub const CEC_CFGR_BRESTP: u32 = CEC_CFGR_BRESTP_Msk;
pub const CEC_CFGR_BREGEN_Pos: u32 = 5;
pub const CEC_CFGR_BREGEN_Msk: u32 = 0x1 << CEC_CFGR_BREGEN_Pos;
pub const CEC_CFGR_BREGEN: u32 = CEC_CFGR_BREGEN_Msk;
pub const CEC_CFGR_LBPEGEN_Pos: u32 = 6;
pub const CEC_CFGR_LBPEGEN_Msk: u32 = 0x1 << CEC_CFGR_LBPEGEN_Pos;
pub const CEC_CFGR_LBPEGEN: u32 = CEC_CFGR_LBPEGEN_Msk;
pub const CEC_CFGR_SFTOPT_Pos: u32 = 8;
pub const CEC_CFGR_SFTOPT_Msk: u32 = 0x1 << CEC_CFGR_SFTOPT_Pos;
pub const CEC_CFGR_SFTOPT: u32 = CEC_CFGR_SFTOPT_Msk;
pub const CEC_CFGR_BRDNOGEN_Pos: u32 = 7;
pub const CEC_CFGR_BRDNOGEN_Msk: u32 = 0x1 << CEC_CFGR_BRDNOGEN_Pos;
pub const CEC_CFGR_BRDNOGEN: u32 = CEC_CFGR_BRDNOGEN_Msk;
pub const CEC_CFGR_OAR_Pos: u32 = 16;
pub const CEC_CFGR_OAR_Msk: u32 = 0x7FFF << CEC_CFGR_OAR_Pos;
pub const CEC_CFGR_OAR: u32 = CEC_CFGR_OAR_Msk;
pub const CEC_CFGR_LSTN_Pos: u32 = 31;
pub const CEC_CFGR_LSTN_Msk: u32 = 0x1 << CEC_CFGR_LSTN_Pos;
pub const CEC_CFGR_LSTN: u32 = CEC_CFGR_LSTN_Msk;
pub const CEC_TXDR_TXD_Pos: u32 = 0;
pub const CEC_TXDR_TXD_Msk: u32 = 0xFF << CEC_TXDR_TXD_Pos;
pub const CEC_TXDR_TXD: u32 = CEC_TXDR_TXD_Msk;
pub const CEC_RXDR_RXD_Pos: u32 = 0;
pub const CEC_RXDR_RXD_Msk: u32 = 0xFF << CEC_RXDR_RXD_Pos;
pub const CEC_RXDR_RXD: u32 = CEC_RXDR_RXD_Msk;
pub const CEC_ISR_RXBR_Pos: u32 = 0;
pub const CEC_ISR_RXBR_Msk: u32 = 0x1 << CEC_ISR_RXBR_Pos;
pub const CEC_ISR_RXBR: u32 = CEC_ISR_RXBR_Msk;
pub const CEC_ISR_RXEND_Pos: u32 = 1;
pub const CEC_ISR_RXEND_Msk: u32 = 0x1 << CEC_ISR_RXEND_Pos;
pub const CEC_ISR_RXEND: u32 = CEC_ISR_RXEND_Msk;
pub const CEC_ISR_RXOVR_Pos: u32 = 2;
pub const CEC_ISR_RXOVR_Msk: u32 = 0x1 << CEC_ISR_RXOVR_Pos;
pub const CEC_ISR_RXOVR: u32 = CEC_ISR_RXOVR_Msk;
pub const CEC_ISR_BRE_Pos: u32 = 3;
pub const CEC_ISR_BRE_Msk: u32 = 0x1 << CEC_ISR_BRE_Pos;
pub const CEC_ISR_BRE: u32 = CEC_ISR_BRE_Msk;
pub const CEC_ISR_SBPE_Pos: u32 = 4;
pub const CEC_ISR_SBPE_Msk: u32 = 0x1 << CEC_ISR_SBPE_Pos;
pub const CEC_ISR_SBPE: u32 = CEC_ISR_SBPE_Msk;
pub const CEC_ISR_LBPE_Pos: u32 = 5;
pub const CEC_ISR_LBPE_Msk: u32 = 0x1 << CEC_ISR_LBPE_Pos;
pub const CEC_ISR_LBPE: u32 = CEC_ISR_LBPE_Msk;
pub const CEC_ISR_RXACKE_Pos: u32 = 6;
pub const CEC_ISR_RXACKE_Msk: u32 = 0x1 << CEC_ISR_RXACKE_Pos;
pub const CEC_ISR_RXACKE: u32 = CEC_ISR_RXACKE_Msk;
pub const CEC_ISR_ARBLST_Pos: u32 = 7;
pub const CEC_ISR_ARBLST_Msk: u32 = 0x1 << CEC_ISR_ARBLST_Pos;
pub const CEC_ISR_ARBLST: u32 = CEC_ISR_ARBLST_Msk;
pub const CEC_ISR_TXBR_Pos: u32 = 8;
pub const CEC_ISR_TXBR_Msk: u32 = 0x1 << CEC_ISR_TXBR_Pos;
pub const CEC_ISR_TXBR: u32 = CEC_ISR_TXBR_Msk;
pub const CEC_ISR_TXEND_Pos: u32 = 9;
pub const CEC_ISR_TXEND_Msk: u32 = 0x1 << CEC_ISR_TXEND_Pos;
pub const CEC_ISR_TXEND: u32 = CEC_ISR_TXEND_Msk;
pub const CEC_ISR_TXUDR_Pos: u32 = 10;
pub const CEC_ISR_TXUDR_Msk: u32 = 0x1 << CEC_ISR_TXUDR_Pos;
pub const CEC_ISR_TXUDR: u32 = CEC_ISR_TXUDR_Msk;
pub const CEC_ISR_TXERR_Pos: u32 = 11;
pub const CEC_ISR_TXERR_Msk: u32 = 0x1 << CEC_ISR_TXERR_Pos;
pub const CEC_ISR_TXERR: u32 = CEC_ISR_TXERR_Msk;
pub const CEC_ISR_TXACKE_Pos: u32 = 12;
pub const CEC_ISR_TXACKE_Msk: u32 = 0x1 << CEC_ISR_TXACKE_Pos;
pub const CEC_ISR_TXACKE: u32 = CEC_ISR_TXACKE_Msk;
pub const CEC_IER_RXBRIE_Pos: u32 = 0;
pub const CEC_IER_RXBRIE_Msk: u32 = 0x1 << CEC_IER_RXBRIE_Pos;
pub const CEC_IER_RXBRIE: u32 = CEC_IER_RXBRIE_Msk;
pub const CEC_IER_RXENDIE_Pos: u32 = 1;
pub const CEC_IER_RXENDIE_Msk: u32 = 0x1 << CEC_IER_RXENDIE_Pos;
pub const CEC_IER_RXENDIE: u32 = CEC_IER_RXENDIE_Msk;
pub const CEC_IER_RXOVRIE_Pos: u32 = 2;
pub const CEC_IER_RXOVRIE_Msk: u32 = 0x1 << CEC_IER_RXOVRIE_Pos;
pub const CEC_IER_RXOVRIE: u32 = CEC_IER_RXOVRIE_Msk;
pub const CEC_IER_BREIE_Pos: u32 = 3;
pub const CEC_IER_BREIE_Msk: u32 = 0x1 << CEC_IER_BREIE_Pos;
pub const CEC_IER_BREIE: u32 = CEC_IER_BREIE_Msk;
pub const CEC_IER_SBPEIE_Pos: u32 = 4;
pub const CEC_IER_SBPEIE_Msk: u32 = 0x1 << CEC_IER_SBPEIE_Pos;
pub const CEC_IER_SBPEIE: u32 = CEC_IER_SBPEIE_Msk;
pub const CEC_IER_LBPEIE_Pos: u32 = 5;
pub const CEC_IER_LBPEIE_Msk: u32 = 0x1 << CEC_IER_LBPEIE_Pos;
pub const CEC_IER_LBPEIE: u32 = CEC_IER_LBPEIE_Msk;
pub const CEC_IER_RXACKEIE_Pos: u32 = 6;
pub const CEC_IER_RXACKEIE_Msk: u32 = 0x1 << CEC_IER_RXACKEIE_Pos;
pub const CEC_IER_RXACKEIE: u32 = CEC_IER_RXACKEIE_Msk;
pub const CEC_IER_ARBLSTIE_Pos: u32 = 7;
pub const CEC_IER_ARBLSTIE_Msk: u32 = 0x1 << CEC_IER_ARBLSTIE_Pos;
pub const CEC_IER_ARBLSTIE: u32 = CEC_IER_ARBLSTIE_Msk;
pub const CEC_IER_TXBRIE_Pos: u32 = 8;
pub const CEC_IER_TXBRIE_Msk: u32 = 0x1 << CEC_IER_TXBRIE_Pos;
pub const CEC_IER_TXBRIE: u32 = CEC_IER_TXBRIE_Msk;
pub const CEC_IER_TXENDIE_Pos: u32 = 9;
pub const CEC_IER_TXENDIE_Msk: u32 = 0x1 << CEC_IER_TXENDIE_Pos;
pub const CEC_IER_TXENDIE: u32 = CEC_IER_TXENDIE_Msk;
pub const CEC_IER_TXUDRIE_Pos: u32 = 10;
pub const CEC_IER_TXUDRIE_Msk: u32 = 0x1 << CEC_IER_TXUDRIE_Pos;
pub const CEC_IER_TXUDRIE: u32 = CEC_IER_TXUDRIE_Msk;
pub const CEC_IER_TXERRIE_Pos: u32 = 11;
pub const CEC_IER_TXERRIE_Msk: u32 = 0x1 << CEC_IER_TXERRIE_Pos;
pub const CEC_IER_TXERRIE: u32 = CEC_IER_TXERRIE_Msk;
pub const CEC_IER_TXACKEIE_Pos: u32 = 12;
pub const CEC_IER_TXACKEIE_Msk: u32 = 0x1 << CEC_IER_TXACKEIE_Pos;
pub const CEC_IER_TXACKEIE: u32 = CEC_IER_TXACKEIE_Msk;
pub const CORDIC_CSR_FUNC_Pos: u32 = 0;
pub const CORDIC_CSR_FUNC_Msk: u32 = 0xF << CORDIC_CSR_FUNC_Pos;
pub const CORDIC_CSR_FUNC: u32 = CORDIC_CSR_FUNC_Msk;
pub const CORDIC_CSR_FUNC_0: u32 = 0x1 << CORDIC_CSR_FUNC_Pos;
pub const CORDIC_CSR_FUNC_1: u32 = 0x2 << CORDIC_CSR_FUNC_Pos;
pub const CORDIC_CSR_FUNC_2: u32 = 0x4 << CORDIC_CSR_FUNC_Pos;
pub const CORDIC_CSR_FUNC_3: u32 = 0x8 << CORDIC_CSR_FUNC_Pos;
pub const CORDIC_CSR_PRECISION_Pos: u32 = 4;
pub const CORDIC_CSR_PRECISION_Msk: u32 = 0xF << CORDIC_CSR_PRECISION_Pos;
pub const CORDIC_CSR_PRECISION: u32 = CORDIC_CSR_PRECISION_Msk;
pub const CORDIC_CSR_PRECISION_0: u32 = 0x1 << CORDIC_CSR_PRECISION_Pos;
pub const CORDIC_CSR_PRECISION_1: u32 = 0x2 << CORDIC_CSR_PRECISION_Pos;
pub const CORDIC_CSR_PRECISION_2: u32 = 0x4 << CORDIC_CSR_PRECISION_Pos;
pub const CORDIC_CSR_PRECISION_3: u32 = 0x8 << CORDIC_CSR_PRECISION_Pos;
pub const CORDIC_CSR_SCALE_Pos: u32 = 8;
pub const CORDIC_CSR_SCALE_Msk: u32 = 0x7 << CORDIC_CSR_SCALE_Pos;
pub const CORDIC_CSR_SCALE: u32 = CORDIC_CSR_SCALE_Msk;
pub const CORDIC_CSR_SCALE_0: u32 = 0x1 << CORDIC_CSR_SCALE_Pos;
pub const CORDIC_CSR_SCALE_1: u32 = 0x2 << CORDIC_CSR_SCALE_Pos;
pub const CORDIC_CSR_SCALE_2: u32 = 0x4 << CORDIC_CSR_SCALE_Pos;
pub const CORDIC_CSR_IEN_Pos: u32 = 16;
pub const CORDIC_CSR_IEN_Msk: u32 = 0x1 << CORDIC_CSR_IEN_Pos;
pub const CORDIC_CSR_IEN: u32 = CORDIC_CSR_IEN_Msk;
pub const CORDIC_CSR_DMAREN_Pos: u32 = 17;
pub const CORDIC_CSR_DMAREN_Msk: u32 = 0x1 << CORDIC_CSR_DMAREN_Pos;
pub const CORDIC_CSR_DMAREN: u32 = CORDIC_CSR_DMAREN_Msk;
pub const CORDIC_CSR_DMAWEN_Pos: u32 = 18;
pub const CORDIC_CSR_DMAWEN_Msk: u32 = 0x1 << CORDIC_CSR_DMAWEN_Pos;
pub const CORDIC_CSR_DMAWEN: u32 = CORDIC_CSR_DMAWEN_Msk;
pub const CORDIC_CSR_NRES_Pos: u32 = 19;
pub const CORDIC_CSR_NRES_Msk: u32 = 0x1 << CORDIC_CSR_NRES_Pos;
pub const CORDIC_CSR_NRES: u32 = CORDIC_CSR_NRES_Msk;
pub const CORDIC_CSR_NARGS_Pos: u32 = 20;
pub const CORDIC_CSR_NARGS_Msk: u32 = 0x1 << CORDIC_CSR_NARGS_Pos;
pub const CORDIC_CSR_NARGS: u32 = CORDIC_CSR_NARGS_Msk;
pub const CORDIC_CSR_RESSIZE_Pos: u32 = 21;
pub const CORDIC_CSR_RESSIZE_Msk: u32 = 0x1 << CORDIC_CSR_RESSIZE_Pos;
pub const CORDIC_CSR_RESSIZE: u32 = CORDIC_CSR_RESSIZE_Msk;
pub const CORDIC_CSR_ARGSIZE_Pos: u32 = 22;
pub const CORDIC_CSR_ARGSIZE_Msk: u32 = 0x1 << CORDIC_CSR_ARGSIZE_Pos;
pub const CORDIC_CSR_ARGSIZE: u32 = CORDIC_CSR_ARGSIZE_Msk;
pub const CORDIC_CSR_RRDY_Pos: u32 = 31;
pub const CORDIC_CSR_RRDY_Msk: u32 = 0x1 << CORDIC_CSR_RRDY_Pos;
pub const CORDIC_CSR_RRDY: u32 = CORDIC_CSR_RRDY_Msk;
pub const CORDIC_WDATA_ARG_Pos: u32 = 0;
pub const CORDIC_WDATA_ARG_Msk: u32 = 0xFFFFFFFF << CORDIC_WDATA_ARG_Pos;
pub const CORDIC_WDATA_ARG: u32 = CORDIC_WDATA_ARG_Msk;
pub const CORDIC_RDATA_RES_Pos: u32 = 0;
pub const CORDIC_RDATA_RES_Msk: u32 = 0xFFFFFFFF << CORDIC_RDATA_RES_Pos;
pub const CORDIC_RDATA_RES: u32 = CORDIC_RDATA_RES_Msk;
pub const CRC_DR_DR_Pos: u32 = 0;
pub const CRC_DR_DR_Msk: u32 = 0xFFFFFFFF << CRC_DR_DR_Pos;
pub const CRC_DR_DR: u32 = CRC_DR_DR_Msk;
pub const CRC_IDR_IDR_Pos: u32 = 0;
pub const CRC_IDR_IDR_Msk: u32 = 0xFFFFFFFF << CRC_IDR_IDR_Pos;
pub const CRC_IDR_IDR: u32 = CRC_IDR_IDR_Msk;
pub const CRC_CR_RESET_Pos: u32 = 0;
pub const CRC_CR_RESET_Msk: u32 = 0x1 << CRC_CR_RESET_Pos;
pub const CRC_CR_RESET: u32 = CRC_CR_RESET_Msk;
pub const CRC_CR_POLYSIZE_Pos: u32 = 3;
pub const CRC_CR_POLYSIZE_Msk: u32 = 0x3 << CRC_CR_POLYSIZE_Pos;
pub const CRC_CR_POLYSIZE: u32 = CRC_CR_POLYSIZE_Msk;
pub const CRC_CR_POLYSIZE_0: u32 = 0x1 << CRC_CR_POLYSIZE_Pos;
pub const CRC_CR_POLYSIZE_1: u32 = 0x2 << CRC_CR_POLYSIZE_Pos;
pub const CRC_CR_REV_IN_Pos: u32 = 5;
pub const CRC_CR_REV_IN_Msk: u32 = 0x3 << CRC_CR_REV_IN_Pos;
pub const CRC_CR_REV_IN: u32 = CRC_CR_REV_IN_Msk;
pub const CRC_CR_REV_IN_0: u32 = 0x1 << CRC_CR_REV_IN_Pos;
pub const CRC_CR_REV_IN_1: u32 = 0x2 << CRC_CR_REV_IN_Pos;
pub const CRC_CR_REV_OUT_Pos: u32 = 7;
pub const CRC_CR_REV_OUT_Msk: u32 = 0x1 << CRC_CR_REV_OUT_Pos;
pub const CRC_CR_REV_OUT: u32 = CRC_CR_REV_OUT_Msk;
pub const CRC_INIT_INIT_Pos: u32 = 0;
pub const CRC_INIT_INIT_Msk: u32 = 0xFFFFFFFF << CRC_INIT_INIT_Pos;
pub const CRC_INIT_INIT: u32 = CRC_INIT_INIT_Msk;
pub const CRC_POL_POL_Pos: u32 = 0;
pub const CRC_POL_POL_Msk: u32 = 0xFFFFFFFF << CRC_POL_POL_Pos;
pub const CRC_POL_POL: u32 = CRC_POL_POL_Msk;
pub const CRS_CR_SYNCOKIE_Pos: u32 = 0;
pub const CRS_CR_SYNCOKIE_Msk: u32 = 0x1 << CRS_CR_SYNCOKIE_Pos;
pub const CRS_CR_SYNCOKIE: u32 = CRS_CR_SYNCOKIE_Msk;
pub const CRS_CR_SYNCWARNIE_Pos: u32 = 1;
pub const CRS_CR_SYNCWARNIE_Msk: u32 = 0x1 << CRS_CR_SYNCWARNIE_Pos;
pub const CRS_CR_SYNCWARNIE: u32 = CRS_CR_SYNCWARNIE_Msk;
pub const CRS_CR_ERRIE_Pos: u32 = 2;
pub const CRS_CR_ERRIE_Msk: u32 = 0x1 << CRS_CR_ERRIE_Pos;
pub const CRS_CR_ERRIE: u32 = CRS_CR_ERRIE_Msk;
pub const CRS_CR_ESYNCIE_Pos: u32 = 3;
pub const CRS_CR_ESYNCIE_Msk: u32 = 0x1 << CRS_CR_ESYNCIE_Pos;
pub const CRS_CR_ESYNCIE: u32 = CRS_CR_ESYNCIE_Msk;
pub const CRS_CR_CEN_Pos: u32 = 5;
pub const CRS_CR_CEN_Msk: u32 = 0x1 << CRS_CR_CEN_Pos;
pub const CRS_CR_CEN: u32 = CRS_CR_CEN_Msk;
pub const CRS_CR_AUTOTRIMEN_Pos: u32 = 6;
pub const CRS_CR_AUTOTRIMEN_Msk: u32 = 0x1 << CRS_CR_AUTOTRIMEN_Pos;
pub const CRS_CR_AUTOTRIMEN: u32 = CRS_CR_AUTOTRIMEN_Msk;
pub const CRS_CR_SWSYNC_Pos: u32 = 7;
pub const CRS_CR_SWSYNC_Msk: u32 = 0x1 << CRS_CR_SWSYNC_Pos;
pub const CRS_CR_SWSYNC: u32 = CRS_CR_SWSYNC_Msk;
pub const CRS_CR_TRIM_Pos: u32 = 8;
pub const CRS_CR_TRIM_Msk: u32 = 0x3F << CRS_CR_TRIM_Pos;
pub const CRS_CR_TRIM: u32 = CRS_CR_TRIM_Msk;
pub const CRS_CFGR_RELOAD_Pos: u32 = 0;
pub const CRS_CFGR_RELOAD_Msk: u32 = 0xFFFF << CRS_CFGR_RELOAD_Pos;
pub const CRS_CFGR_RELOAD: u32 = CRS_CFGR_RELOAD_Msk;
pub const CRS_CFGR_FELIM_Pos: u32 = 16;
pub const CRS_CFGR_FELIM_Msk: u32 = 0xFF << CRS_CFGR_FELIM_Pos;
pub const CRS_CFGR_FELIM: u32 = CRS_CFGR_FELIM_Msk;
pub const CRS_CFGR_SYNCDIV_Pos: u32 = 24;
pub const CRS_CFGR_SYNCDIV_Msk: u32 = 0x7 << CRS_CFGR_SYNCDIV_Pos;
pub const CRS_CFGR_SYNCDIV: u32 = CRS_CFGR_SYNCDIV_Msk;
pub const CRS_CFGR_SYNCDIV_0: u32 = 0x1 << CRS_CFGR_SYNCDIV_Pos;
pub const CRS_CFGR_SYNCDIV_1: u32 = 0x2 << CRS_CFGR_SYNCDIV_Pos;
pub const CRS_CFGR_SYNCDIV_2: u32 = 0x4 << CRS_CFGR_SYNCDIV_Pos;
pub const CRS_CFGR_SYNCSRC_Pos: u32 = 28;
pub const CRS_CFGR_SYNCSRC_Msk: u32 = 0x3 << CRS_CFGR_SYNCSRC_Pos;
pub const CRS_CFGR_SYNCSRC: u32 = CRS_CFGR_SYNCSRC_Msk;
pub const CRS_CFGR_SYNCSRC_0: u32 = 0x1 << CRS_CFGR_SYNCSRC_Pos;
pub const CRS_CFGR_SYNCSRC_1: u32 = 0x2 << CRS_CFGR_SYNCSRC_Pos;
pub const CRS_CFGR_SYNCPOL_Pos: u32 = 31;
pub const CRS_CFGR_SYNCPOL_Msk: u32 = 0x1 << CRS_CFGR_SYNCPOL_Pos;
pub const CRS_CFGR_SYNCPOL: u32 = CRS_CFGR_SYNCPOL_Msk;
pub const CRS_ISR_SYNCOKF_Pos: u32 = 0;
pub const CRS_ISR_SYNCOKF_Msk: u32 = 0x1 << CRS_ISR_SYNCOKF_Pos;
pub const CRS_ISR_SYNCOKF: u32 = CRS_ISR_SYNCOKF_Msk;
pub const CRS_ISR_SYNCWARNF_Pos: u32 = 1;
pub const CRS_ISR_SYNCWARNF_Msk: u32 = 0x1 << CRS_ISR_SYNCWARNF_Pos;
pub const CRS_ISR_SYNCWARNF: u32 = CRS_ISR_SYNCWARNF_Msk;
pub const CRS_ISR_ERRF_Pos: u32 = 2;
pub const CRS_ISR_ERRF_Msk: u32 = 0x1 << CRS_ISR_ERRF_Pos;
pub const CRS_ISR_ERRF: u32 = CRS_ISR_ERRF_Msk;
pub const CRS_ISR_ESYNCF_Pos: u32 = 3;
pub const CRS_ISR_ESYNCF_Msk: u32 = 0x1 << CRS_ISR_ESYNCF_Pos;
pub const CRS_ISR_ESYNCF: u32 = CRS_ISR_ESYNCF_Msk;
pub const CRS_ISR_SYNCERR_Pos: u32 = 8;
pub const CRS_ISR_SYNCERR_Msk: u32 = 0x1 << CRS_ISR_SYNCERR_Pos;
pub const CRS_ISR_SYNCERR: u32 = CRS_ISR_SYNCERR_Msk;
pub const CRS_ISR_SYNCMISS_Pos: u32 = 9;
pub const CRS_ISR_SYNCMISS_Msk: u32 = 0x1 << CRS_ISR_SYNCMISS_Pos;
pub const CRS_ISR_SYNCMISS: u32 = CRS_ISR_SYNCMISS_Msk;
pub const CRS_ISR_TRIMOVF_Pos: u32 = 10;
pub const CRS_ISR_TRIMOVF_Msk: u32 = 0x1 << CRS_ISR_TRIMOVF_Pos;
pub const CRS_ISR_TRIMOVF: u32 = CRS_ISR_TRIMOVF_Msk;
pub const CRS_ISR_FEDIR_Pos: u32 = 15;
pub const CRS_ISR_FEDIR_Msk: u32 = 0x1 << CRS_ISR_FEDIR_Pos;
pub const CRS_ISR_FEDIR: u32 = CRS_ISR_FEDIR_Msk;
pub const CRS_ISR_FECAP_Pos: u32 = 16;
pub const CRS_ISR_FECAP_Msk: u32 = 0xFFFF << CRS_ISR_FECAP_Pos;
pub const CRS_ISR_FECAP: u32 = CRS_ISR_FECAP_Msk;
pub const CRS_ICR_SYNCOKC_Pos: u32 = 0;
pub const CRS_ICR_SYNCOKC_Msk: u32 = 0x1 << CRS_ICR_SYNCOKC_Pos;
pub const CRS_ICR_SYNCOKC: u32 = CRS_ICR_SYNCOKC_Msk;
pub const CRS_ICR_SYNCWARNC_Pos: u32 = 1;
pub const CRS_ICR_SYNCWARNC_Msk: u32 = 0x1 << CRS_ICR_SYNCWARNC_Pos;
pub const CRS_ICR_SYNCWARNC: u32 = CRS_ICR_SYNCWARNC_Msk;
pub const CRS_ICR_ERRC_Pos: u32 = 2;
pub const CRS_ICR_ERRC_Msk: u32 = 0x1 << CRS_ICR_ERRC_Pos;
pub const CRS_ICR_ERRC: u32 = CRS_ICR_ERRC_Msk;
pub const CRS_ICR_ESYNCC_Pos: u32 = 3;
pub const CRS_ICR_ESYNCC_Msk: u32 = 0x1 << CRS_ICR_ESYNCC_Pos;
pub const CRS_ICR_ESYNCC: u32 = CRS_ICR_ESYNCC_Msk;
pub const CRYP_CR_ALGODIR_Pos: u32 = 2;
pub const CRYP_CR_ALGODIR_Msk: u32 = 0x1 << CRYP_CR_ALGODIR_Pos;
pub const CRYP_CR_ALGODIR: u32 = CRYP_CR_ALGODIR_Msk;
pub const CRYP_CR_ALGOMODE_Pos: u32 = 3;
pub const CRYP_CR_ALGOMODE_Msk: u32 = 0x10007 << CRYP_CR_ALGOMODE_Pos;
pub const CRYP_CR_ALGOMODE: u32 = CRYP_CR_ALGOMODE_Msk;
pub const CRYP_CR_ALGOMODE_0: u32 = 0x00001 << CRYP_CR_ALGOMODE_Pos;
pub const CRYP_CR_ALGOMODE_1: u32 = 0x00002 << CRYP_CR_ALGOMODE_Pos;
pub const CRYP_CR_ALGOMODE_2: u32 = 0x00004 << CRYP_CR_ALGOMODE_Pos;
pub const CRYP_CR_ALGOMODE_3: u32 = 0x10000 << CRYP_CR_ALGOMODE_Pos;
pub const CRYP_CR_ALGOMODE_AES_ECB_Pos: u32 = 5;
pub const CRYP_CR_ALGOMODE_AES_ECB_Msk: u32 = 0x1 << CRYP_CR_ALGOMODE_AES_ECB_Pos;
pub const CRYP_CR_ALGOMODE_AES_ECB: u32 = CRYP_CR_ALGOMODE_AES_ECB_Msk;
pub const CRYP_CR_ALGOMODE_AES_CBC_Pos: u32 = 3;
pub const CRYP_CR_ALGOMODE_AES_CBC_Msk: u32 = 0x5 << CRYP_CR_ALGOMODE_AES_CBC_Pos;
pub const CRYP_CR_ALGOMODE_AES_CBC: u32 = CRYP_CR_ALGOMODE_AES_CBC_Msk;
pub const CRYP_CR_ALGOMODE_AES_CTR_Pos: u32 = 4;
pub const CRYP_CR_ALGOMODE_AES_CTR_Msk: u32 = 0x3 << CRYP_CR_ALGOMODE_AES_CTR_Pos;
pub const CRYP_CR_ALGOMODE_AES_CTR: u32 = CRYP_CR_ALGOMODE_AES_CTR_Msk;
pub const CRYP_CR_ALGOMODE_AES_KEY_Pos: u32 = 3;
pub const CRYP_CR_ALGOMODE_AES_KEY_Msk: u32 = 0x7 << CRYP_CR_ALGOMODE_AES_KEY_Pos;
pub const CRYP_CR_ALGOMODE_AES_KEY: u32 = CRYP_CR_ALGOMODE_AES_KEY_Msk;
pub const CRYP_CR_ALGOMODE_AES_GCM_Pos: u32 = 19;
pub const CRYP_CR_ALGOMODE_AES_GCM_Msk: u32 = 0x1 << CRYP_CR_ALGOMODE_AES_GCM_Pos;
pub const CRYP_CR_ALGOMODE_AES_GCM: u32 = CRYP_CR_ALGOMODE_AES_GCM_Msk;
pub const CRYP_CR_ALGOMODE_AES_CCM_Pos: u32 = 3;
pub const CRYP_CR_ALGOMODE_AES_CCM_Msk: u32 = 0x10001 << CRYP_CR_ALGOMODE_AES_CCM_Pos;
pub const CRYP_CR_ALGOMODE_AES_CCM: u32 = CRYP_CR_ALGOMODE_AES_CCM_Msk;
pub const CRYP_CR_DATATYPE_Pos: u32 = 6;
pub const CRYP_CR_DATATYPE_Msk: u32 = 0x3 << CRYP_CR_DATATYPE_Pos;
pub const CRYP_CR_DATATYPE: u32 = CRYP_CR_DATATYPE_Msk;
pub const CRYP_CR_DATATYPE_0: u32 = 0x1 << CRYP_CR_DATATYPE_Pos;
pub const CRYP_CR_DATATYPE_1: u32 = 0x2 << CRYP_CR_DATATYPE_Pos;
pub const CRYP_CR_KEYSIZE_Pos: u32 = 8;
pub const CRYP_CR_KEYSIZE_Msk: u32 = 0x3 << CRYP_CR_KEYSIZE_Pos;
pub const CRYP_CR_KEYSIZE: u32 = CRYP_CR_KEYSIZE_Msk;
pub const CRYP_CR_KEYSIZE_0: u32 = 0x1 << CRYP_CR_KEYSIZE_Pos;
pub const CRYP_CR_KEYSIZE_1: u32 = 0x2 << CRYP_CR_KEYSIZE_Pos;
pub const CRYP_CR_FFLUSH_Pos: u32 = 14;
pub const CRYP_CR_FFLUSH_Msk: u32 = 0x1 << CRYP_CR_FFLUSH_Pos;
pub const CRYP_CR_FFLUSH: u32 = CRYP_CR_FFLUSH_Msk;
pub const CRYP_CR_CRYPEN_Pos: u32 = 15;
pub const CRYP_CR_CRYPEN_Msk: u32 = 0x1 << CRYP_CR_CRYPEN_Pos;
pub const CRYP_CR_CRYPEN: u32 = CRYP_CR_CRYPEN_Msk;
pub const CRYP_CR_GCM_CCMPH_Pos: u32 = 16;
pub const CRYP_CR_GCM_CCMPH_Msk: u32 = 0x3 << CRYP_CR_GCM_CCMPH_Pos;
pub const CRYP_CR_GCM_CCMPH: u32 = CRYP_CR_GCM_CCMPH_Msk;
pub const CRYP_CR_GCM_CCMPH_0: u32 = 0x1 << CRYP_CR_GCM_CCMPH_Pos;
pub const CRYP_CR_GCM_CCMPH_1: u32 = 0x2 << CRYP_CR_GCM_CCMPH_Pos;
pub const CRYP_CR_NPBLB_Pos: u32 = 20;
pub const CRYP_CR_NPBLB_Msk: u32 = 0xF << CRYP_CR_NPBLB_Pos;
pub const CRYP_CR_NPBLB: u32 = CRYP_CR_NPBLB_Msk;
pub const CRYP_CR_KMOD_Pos: u32 = 24;
pub const CRYP_CR_KMOD_Msk: u32 = 0x3 << CRYP_CR_KMOD_Pos;
pub const CRYP_CR_KMOD: u32 = CRYP_CR_KMOD_Msk;
pub const CRYP_CR_KMOD_0: u32 = 0x1 << CRYP_CR_KMOD_Pos;
pub const CRYP_CR_KMOD_1: u32 = 0x2 << CRYP_CR_KMOD_Pos;
pub const CRYP_CR_IPRST_Pos: u32 = 31;
pub const CRYP_CR_IPRST_Msk: u32 = 0x1 << CRYP_CR_IPRST_Pos;
pub const CRYP_CR_IPRST: u32 = CRYP_CR_IPRST_Msk;
pub const CRYP_SR_IFEM_Pos: u32 = 0;
pub const CRYP_SR_IFEM_Msk: u32 = 0x1 << CRYP_SR_IFEM_Pos;
pub const CRYP_SR_IFEM: u32 = CRYP_SR_IFEM_Msk;
pub const CRYP_SR_IFNF_Pos: u32 = 1;
pub const CRYP_SR_IFNF_Msk: u32 = 0x1 << CRYP_SR_IFNF_Pos;
pub const CRYP_SR_IFNF: u32 = CRYP_SR_IFNF_Msk;
pub const CRYP_SR_OFNE_Pos: u32 = 2;
pub const CRYP_SR_OFNE_Msk: u32 = 0x1 << CRYP_SR_OFNE_Pos;
pub const CRYP_SR_OFNE: u32 = CRYP_SR_OFNE_Msk;
pub const CRYP_SR_OFFU_Pos: u32 = 3;
pub const CRYP_SR_OFFU_Msk: u32 = 0x1 << CRYP_SR_OFFU_Pos;
pub const CRYP_SR_OFFU: u32 = CRYP_SR_OFFU_Msk;
pub const CRYP_SR_BUSY_Pos: u32 = 4;
pub const CRYP_SR_BUSY_Msk: u32 = 0x1 << CRYP_SR_BUSY_Pos;
pub const CRYP_SR_BUSY: u32 = CRYP_SR_BUSY_Msk;
pub const CRYP_SR_KERF_Pos: u32 = 6;
pub const CRYP_SR_KERF_Msk: u32 = 0x1 << CRYP_SR_KERF_Pos;
pub const CRYP_SR_KERF: u32 = CRYP_SR_KERF_Msk;
pub const CRYP_SR_KEYVALID_Pos: u32 = 7;
pub const CRYP_SR_KEYVALID_Msk: u32 = 0x1 << CRYP_SR_KEYVALID_Pos;
pub const CRYP_SR_KEYVALID: u32 = CRYP_SR_KEYVALID_Msk;
pub const CRYP_DIN_DATAIN_Pos: u32 = 0;
pub const CRYP_DIN_DATAIN_Msk: u32 = 0xFFFFFFFF << CRYP_DIN_DATAIN_Pos;
pub const CRYP_DIN_DATAIN: u32 = CRYP_DIN_DATAIN_Msk;
pub const CRYP_DOUT_DATAOUT_Pos: u32 = 0;
pub const CRYP_DOUT_DATAOUT_Msk: u32 = 0xFFFFFFFF << CRYP_DOUT_DATAOUT_Pos;
pub const CRYP_DOUT_DATAOUT: u32 = CRYP_DOUT_DATAOUT_Msk;
pub const CRYP_DMACR_DIEN_Pos: u32 = 0;
pub const CRYP_DMACR_DIEN_Msk: u32 = 0x1 << CRYP_DMACR_DIEN_Pos;
pub const CRYP_DMACR_DIEN: u32 = CRYP_DMACR_DIEN_Msk;
pub const CRYP_DMACR_DOEN_Pos: u32 = 1;
pub const CRYP_DMACR_DOEN_Msk: u32 = 0x1 << CRYP_DMACR_DOEN_Pos;
pub const CRYP_DMACR_DOEN: u32 = CRYP_DMACR_DOEN_Msk;
pub const CRYP_IMSCR_INIM_Pos: u32 = 0;
pub const CRYP_IMSCR_INIM_Msk: u32 = 0x1 << CRYP_IMSCR_INIM_Pos;
pub const CRYP_IMSCR_INIM: u32 = CRYP_IMSCR_INIM_Msk;
pub const CRYP_IMSCR_OUTIM_Pos: u32 = 1;
pub const CRYP_IMSCR_OUTIM_Msk: u32 = 0x1 << CRYP_IMSCR_OUTIM_Pos;
pub const CRYP_IMSCR_OUTIM: u32 = CRYP_IMSCR_OUTIM_Msk;
pub const CRYP_RISR_INRIS_Pos: u32 = 0;
pub const CRYP_RISR_INRIS_Msk: u32 = 0x1 << CRYP_RISR_INRIS_Pos;
pub const CRYP_RISR_INRIS: u32 = CRYP_RISR_INRIS_Msk;
pub const CRYP_RISR_OUTRIS_Pos: u32 = 1;
pub const CRYP_RISR_OUTRIS_Msk: u32 = 0x1 << CRYP_RISR_OUTRIS_Pos;
pub const CRYP_RISR_OUTRIS: u32 = CRYP_RISR_OUTRIS_Msk;
pub const CRYP_MISR_INMIS_Pos: u32 = 0;
pub const CRYP_MISR_INMIS_Msk: u32 = 0x1 << CRYP_MISR_INMIS_Pos;
pub const CRYP_MISR_INMIS: u32 = CRYP_MISR_INMIS_Msk;
pub const CRYP_MISR_OUTMIS_Pos: u32 = 1;
pub const CRYP_MISR_OUTMIS_Msk: u32 = 0x1 << CRYP_MISR_OUTMIS_Pos;
pub const CRYP_MISR_OUTMIS: u32 = CRYP_MISR_OUTMIS_Msk;
pub const CRYP_K0LR_K_Pos: u32 = 0;
pub const CRYP_K0LR_K_Msk: u32 = 0xFFFFFFFF << CRYP_K0LR_K_Pos;
pub const CRYP_K0LR_K: u32 = CRYP_K0LR_K_Msk;
pub const CRYP_K0RR_K_Pos: u32 = 0;
pub const CRYP_K0RR_K_Msk: u32 = 0xFFFFFFFF << CRYP_K0RR_K_Pos;
pub const CRYP_K0RR_K: u32 = CRYP_K0RR_K_Msk;
pub const CRYP_K1LR_Pos: u32 = 0;
pub const CRYP_K1LR_Msk: u32 = 0xFFFFFFFF << CRYP_K1LR_Pos;
pub const CRYP_K1LR: u32 = CRYP_K1LR_Msk;
pub const CRYP_K1RR_Pos: u32 = 0;
pub const CRYP_K1RR_Msk: u32 = 0xFFFFFFFF << CRYP_K1RR_Pos;
pub const CRYP_K1RR: u32 = CRYP_K1RR_Msk;
pub const CRYP_K2LR_K_Pos: u32 = 0;
pub const CRYP_K2LR_K_Msk: u32 = 0xFFFFFFFF << CRYP_K2LR_K_Pos;
pub const CRYP_K2LR_K: u32 = CRYP_K2LR_K_Msk;
pub const CRYP_K2RR_K_Pos: u32 = 0;
pub const CRYP_K2RR_K_Msk: u32 = 0xFFFFFFFF << CRYP_K2RR_K_Pos;
pub const CRYP_K2RR_K: u32 = CRYP_K2RR_K_Msk;
pub const CRYP_K3LR_K_Pos: u32 = 0;
pub const CRYP_K3LR_K_Msk: u32 = 0xFFFFFFFF << CRYP_K3LR_K_Pos;
pub const CRYP_K3LR_K: u32 = CRYP_K3LR_K_Msk;
pub const CRYP_K3RR_K_Pos: u32 = 0;
pub const CRYP_K3RR_K_Msk: u32 = 0xFFFFFFFF << CRYP_K3RR_K_Pos;
pub const CRYP_K3RR_K: u32 = CRYP_K3RR_K_Msk;
pub const CRYP_IV0LR_IV_Pos: u32 = 0;
pub const CRYP_IV0LR_IV_Msk: u32 = 0xFFFFFFFF << CRYP_IV0LR_IV_Pos;
pub const CRYP_IV0LR_IV: u32 = CRYP_IV0LR_IV_Msk;
pub const CRYP_IV0RR_IV_Pos: u32 = 0;
pub const CRYP_IV0RR_IV_Msk: u32 = 0xFFFFFFFF << CRYP_IV0RR_IV_Pos;
pub const CRYP_IV0RR_IV: u32 = CRYP_IV0RR_IV_Msk;
pub const CRYP_IV1LR_IV_Pos: u32 = 0;
pub const CRYP_IV1LR_IV_Msk: u32 = 0xFFFFFFFF << CRYP_IV1LR_IV_Pos;
pub const CRYP_IV1LR_IV: u32 = CRYP_IV1LR_IV_Msk;
pub const CRYP_IV1RR_IV_Pos: u32 = 0;
pub const CRYP_IV1RR_IV_Msk: u32 = 0xFFFFFFFF << CRYP_IV1RR_IV_Pos;
pub const CRYP_IV1RR_IV: u32 = CRYP_IV1RR_IV_Msk;
pub const CRYP_CSGCMCCM0R_CSGCMCCM0_Pos: u32 = 0;
pub const CRYP_CSGCMCCM0R_CSGCMCCM0_Msk: u32 = 0xFFFFFFFF << CRYP_CSGCMCCM0R_CSGCMCCM0_Pos;
pub const CRYP_CSGCMCCM0R_CSGCMCCM0: u32 = CRYP_CSGCMCCM0R_CSGCMCCM0_Msk;
pub const CRYP_CSGCMCCM1R_CSGCMCCM1_Pos: u32 = 0;
pub const CRYP_CSGCMCCM1R_CSGCMCCM1_Msk: u32 = 0xFFFFFFFF << CRYP_CSGCMCCM1R_CSGCMCCM1_Pos;
pub const CRYP_CSGCMCCM1R_CSGCMCCM1: u32 = CRYP_CSGCMCCM1R_CSGCMCCM1_Msk;
pub const CRYP_CSGCMCCM2R_CSGCMCCM2_Pos: u32 = 0;
pub const CRYP_CSGCMCCM2R_CSGCMCCM2_Msk: u32 = 0xFFFFFFFF << CRYP_CSGCMCCM2R_CSGCMCCM2_Pos;
pub const CRYP_CSGCMCCM2R_CSGCMCCM2: u32 = CRYP_CSGCMCCM2R_CSGCMCCM2_Msk;
pub const CRYP_CSGCMCCM3R_CSGCMCCM3_Pos: u32 = 0;
pub const CRYP_CSGCMCCM3R_CSGCMCCM3_Msk: u32 = 0xFFFFFFFF << CRYP_CSGCMCCM3R_CSGCMCCM3_Pos;
pub const CRYP_CSGCMCCM3R_CSGCMCCM3: u32 = CRYP_CSGCMCCM3R_CSGCMCCM3_Msk;
pub const CRYP_CSGCMCCM4R_CSGCMCCM4_Pos: u32 = 0;
pub const CRYP_CSGCMCCM4R_CSGCMCCM4_Msk: u32 = 0xFFFFFFFF << CRYP_CSGCMCCM4R_CSGCMCCM4_Pos;
pub const CRYP_CSGCMCCM4R_CSGCMCCM4: u32 = CRYP_CSGCMCCM4R_CSGCMCCM4_Msk;
pub const CRYP_CSGCMCCM5R_CSGCMCCM5_Pos: u32 = 0;
pub const CRYP_CSGCMCCM5R_CSGCMCCM5_Msk: u32 = 0xFFFFFFFF << CRYP_CSGCMCCM5R_CSGCMCCM5_Pos;
pub const CRYP_CSGCMCCM5R_CSGCMCCM5: u32 = CRYP_CSGCMCCM5R_CSGCMCCM5_Msk;
pub const CRYP_CSGCMCCM6R_CSGCMCCM6_Pos: u32 = 0;
pub const CRYP_CSGCMCCM6R_CSGCMCCM6_Msk: u32 = 0xFFFFFFFF << CRYP_CSGCMCCM6R_CSGCMCCM6_Pos;
pub const CRYP_CSGCMCCM6R_CSGCMCCM6: u32 = CRYP_CSGCMCCM6R_CSGCMCCM6_Msk;
pub const CRYP_CSGCMCCM7R_CSGCMCCM7_Pos: u32 = 0;
pub const CRYP_CSGCMCCM7R_CSGCMCCM7_Msk: u32 = 0xFFFFFFFF << CRYP_CSGCMCCM7R_CSGCMCCM7_Pos;
pub const CRYP_CSGCMCCM7R_CSGCMCCM7: u32 = CRYP_CSGCMCCM7R_CSGCMCCM7_Msk;
pub const CRYP_CSGCM0R_CSGCM0_Pos: u32 = 0;
pub const CRYP_CSGCM0R_CSGCM0_Msk: u32 = 0xFFFFFFFF << CRYP_CSGCM0R_CSGCM0_Pos;
pub const CRYP_CSGCM0R_CSGCM0: u32 = CRYP_CSGCM0R_CSGCM0_Msk;
pub const CRYP_CSGCM1R_CSGCM1_Pos: u32 = 0;
pub const CRYP_CSGCM1R_CSGCM1_Msk: u32 = 0xFFFFFFFF << CRYP_CSGCM1R_CSGCM1_Pos;
pub const CRYP_CSGCM1R_CSGCM1: u32 = CRYP_CSGCM1R_CSGCM1_Msk;
pub const CRYP_CSGCM2R_CSGCM2_Pos: u32 = 0;
pub const CRYP_CSGCM2R_CSGCM2_Msk: u32 = 0xFFFFFFFF << CRYP_CSGCM2R_CSGCM2_Pos;
pub const CRYP_CSGCM2R_CSGCM2: u32 = CRYP_CSGCM2R_CSGCM2_Msk;
pub const CRYP_CSGCM3R_CSGCM3_Pos: u32 = 0;
pub const CRYP_CSGCM3R_CSGCM3_Msk: u32 = 0xFFFFFFFF << CRYP_CSGCM3R_CSGCM3_Pos;
pub const CRYP_CSGCM3R_CSGCM3: u32 = CRYP_CSGCM3R_CSGCM3_Msk;
pub const CRYP_CSGCM4R_CSGCM4_Pos: u32 = 0;
pub const CRYP_CSGCM4R_CSGCM4_Msk: u32 = 0xFFFFFFFF << CRYP_CSGCM4R_CSGCM4_Pos;
pub const CRYP_CSGCM4R_CSGCM4: u32 = CRYP_CSGCM4R_CSGCM4_Msk;
pub const CRYP_CSGCM5R_CSGCM5_Pos: u32 = 0;
pub const CRYP_CSGCM5R_CSGCM5_Msk: u32 = 0xFFFFFFFF << CRYP_CSGCM5R_CSGCM5_Pos;
pub const CRYP_CSGCM5R_CSGCM5: u32 = CRYP_CSGCM5R_CSGCM5_Msk;
pub const CRYP_CSGCM6R_CSGCM6_Pos: u32 = 0;
pub const CRYP_CSGCM6R_CSGCM6_Msk: u32 = 0xFFFFFFFF << CRYP_CSGCM6R_CSGCM6_Pos;
pub const CRYP_CSGCM6R_CSGCM6: u32 = CRYP_CSGCM6R_CSGCM6_Msk;
pub const CRYP_CSGCM7R_CSGCM7_Pos: u32 = 0;
pub const CRYP_CSGCM7R_CSGCM7_Msk: u32 = 0xFFFFFFFF << CRYP_CSGCM7R_CSGCM7_Pos;
pub const CRYP_CSGCM7R_CSGCM7: u32 = CRYP_CSGCM7R_CSGCM7_Msk;
pub const DBGMCU_IDCODE_DEV_ID_Pos: u32 = 0;
pub const DBGMCU_IDCODE_DEV_ID_Msk: u32 = 0xFFF << DBGMCU_IDCODE_DEV_ID_Pos;
pub const DBGMCU_IDCODE_DEV_ID: u32 = DBGMCU_IDCODE_DEV_ID_Msk;
pub const DBGMCU_IDCODE_REV_ID_Pos: u32 = 16;
pub const DBGMCU_IDCODE_REV_ID_Msk: u32 = 0xFFFF << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID: u32 = DBGMCU_IDCODE_REV_ID_Msk;
pub const DBGMCU_CR_DBG_SLEEP_Pos: u32 = 0;
pub const DBGMCU_CR_DBG_SLEEP_Msk: u32 = 0x1 << DBGMCU_CR_DBG_SLEEP_Pos;
pub const DBGMCU_CR_DBG_SLEEP: u32 = DBGMCU_CR_DBG_SLEEP_Msk;
pub const DBGMCU_CR_DBG_STOP_Pos: u32 = 1;
pub const DBGMCU_CR_DBG_STOP_Msk: u32 = 0x1 << DBGMCU_CR_DBG_STOP_Pos;
pub const DBGMCU_CR_DBG_STOP: u32 = DBGMCU_CR_DBG_STOP_Msk;
pub const DBGMCU_CR_DBG_STANDBY_Pos: u32 = 2;
pub const DBGMCU_CR_DBG_STANDBY_Msk: u32 = 0x1 << DBGMCU_CR_DBG_STANDBY_Pos;
pub const DBGMCU_CR_DBG_STANDBY: u32 = DBGMCU_CR_DBG_STANDBY_Msk;
pub const DBGMCU_CR_DCRT_Pos: u32 = 16;
pub const DBGMCU_CR_DCRT_Msk: u32 = 0x1 << DBGMCU_CR_DCRT_Pos;
pub const DBGMCU_CR_DCRT: u32 = DBGMCU_CR_DCRT_Msk;
pub const DBGMCU_CR_TRACECLKEN_Pos: u32 = 20;
pub const DBGMCU_CR_TRACECLKEN_Msk: u32 = 0x1 << DBGMCU_CR_TRACECLKEN_Pos;
pub const DBGMCU_CR_TRACECLKEN: u32 = DBGMCU_CR_TRACECLKEN_Msk;
pub const DBGMCU_CR_DBGCKEN_Pos: u32 = 21;
pub const DBGMCU_CR_DBGCKEN_Msk: u32 = 0x1 << DBGMCU_CR_DBGCKEN_Pos;
pub const DBGMCU_CR_DBGCKEN: u32 = DBGMCU_CR_DBGCKEN_Msk;
pub const DBGMCU_CR_TRGOEN_Pos: u32 = 28;
pub const DBGMCU_CR_TRGOEN_Msk: u32 = 0x1 << DBGMCU_CR_TRGOEN_Pos;
pub const DBGMCU_CR_TRGOEN: u32 = DBGMCU_CR_TRGOEN_Msk;
pub const DBGMCU_AHB5FZR_HPDMA_0_Pos: u32 = 0;
pub const DBGMCU_AHB5FZR_HPDMA_0_Msk: u32 = 0x1 << DBGMCU_AHB5FZR_HPDMA_0_Pos;
pub const DBGMCU_AHB5FZR_HPDMA_0: u32 = DBGMCU_AHB5FZR_HPDMA_0_Msk;
pub const DBGMCU_AHB5FZR_HPDMA_1_Pos: u32 = 1;
pub const DBGMCU_AHB5FZR_HPDMA_1_Msk: u32 = 0x1 << DBGMCU_AHB5FZR_HPDMA_1_Pos;
pub const DBGMCU_AHB5FZR_HPDMA_1: u32 = DBGMCU_AHB5FZR_HPDMA_1_Msk;
pub const DBGMCU_AHB5FZR_HPDMA_2_Pos: u32 = 2;
pub const DBGMCU_AHB5FZR_HPDMA_2_Msk: u32 = 0x1 << DBGMCU_AHB5FZR_HPDMA_2_Pos;
pub const DBGMCU_AHB5FZR_HPDMA_2: u32 = DBGMCU_AHB5FZR_HPDMA_2_Msk;
pub const DBGMCU_AHB5FZR_HPDMA_3_Pos: u32 = 3;
pub const DBGMCU_AHB5FZR_HPDMA_3_Msk: u32 = 0x1 << DBGMCU_AHB5FZR_HPDMA_3_Pos;
pub const DBGMCU_AHB5FZR_HPDMA_3: u32 = DBGMCU_AHB5FZR_HPDMA_3_Msk;
pub const DBGMCU_AHB5FZR_HPDMA_4_Pos: u32 = 4;
pub const DBGMCU_AHB5FZR_HPDMA_4_Msk: u32 = 0x1 << DBGMCU_AHB5FZR_HPDMA_4_Pos;
pub const DBGMCU_AHB5FZR_HPDMA_4: u32 = DBGMCU_AHB5FZR_HPDMA_4_Msk;
pub const DBGMCU_AHB5FZR_HPDMA_5_Pos: u32 = 5;
pub const DBGMCU_AHB5FZR_HPDMA_5_Msk: u32 = 0x1 << DBGMCU_AHB5FZR_HPDMA_5_Pos;
pub const DBGMCU_AHB5FZR_HPDMA_5: u32 = DBGMCU_AHB5FZR_HPDMA_5_Msk;
pub const DBGMCU_AHB5FZR_HPDMA_6_Pos: u32 = 6;
pub const DBGMCU_AHB5FZR_HPDMA_6_Msk: u32 = 0x1 << DBGMCU_AHB5FZR_HPDMA_6_Pos;
pub const DBGMCU_AHB5FZR_HPDMA_6: u32 = DBGMCU_AHB5FZR_HPDMA_6_Msk;
pub const DBGMCU_AHB5FZR_HPDMA_7_Pos: u32 = 7;
pub const DBGMCU_AHB5FZR_HPDMA_7_Msk: u32 = 0x1 << DBGMCU_AHB5FZR_HPDMA_7_Pos;
pub const DBGMCU_AHB5FZR_HPDMA_7: u32 = DBGMCU_AHB5FZR_HPDMA_7_Msk;
pub const DBGMCU_AHB5FZR_HPDMA_8_Pos: u32 = 8;
pub const DBGMCU_AHB5FZR_HPDMA_8_Msk: u32 = 0x1 << DBGMCU_AHB5FZR_HPDMA_8_Pos;
pub const DBGMCU_AHB5FZR_HPDMA_8: u32 = DBGMCU_AHB5FZR_HPDMA_8_Msk;
pub const DBGMCU_AHB5FZR_HPDMA_9_Pos: u32 = 9;
pub const DBGMCU_AHB5FZR_HPDMA_9_Msk: u32 = 0x1 << DBGMCU_AHB5FZR_HPDMA_9_Pos;
pub const DBGMCU_AHB5FZR_HPDMA_9: u32 = DBGMCU_AHB5FZR_HPDMA_9_Msk;
pub const DBGMCU_AHB5FZR_HPDMA_10_Pos: u32 = 10;
pub const DBGMCU_AHB5FZR_HPDMA_10_Msk: u32 = 0x1 << DBGMCU_AHB5FZR_HPDMA_10_Pos;
pub const DBGMCU_AHB5FZR_HPDMA_10: u32 = DBGMCU_AHB5FZR_HPDMA_10_Msk;
pub const DBGMCU_AHB5FZR_HPDMA_11_Pos: u32 = 11;
pub const DBGMCU_AHB5FZR_HPDMA_11_Msk: u32 = 0x1 << DBGMCU_AHB5FZR_HPDMA_11_Pos;
pub const DBGMCU_AHB5FZR_HPDMA_11: u32 = DBGMCU_AHB5FZR_HPDMA_11_Msk;
pub const DBGMCU_AHB5FZR_HPDMA_12_Pos: u32 = 12;
pub const DBGMCU_AHB5FZR_HPDMA_12_Msk: u32 = 0x1 << DBGMCU_AHB5FZR_HPDMA_12_Pos;
pub const DBGMCU_AHB5FZR_HPDMA_12: u32 = DBGMCU_AHB5FZR_HPDMA_12_Msk;
pub const DBGMCU_AHB5FZR_HPDMA_13_Pos: u32 = 13;
pub const DBGMCU_AHB5FZR_HPDMA_13_Msk: u32 = 0x1 << DBGMCU_AHB5FZR_HPDMA_13_Pos;
pub const DBGMCU_AHB5FZR_HPDMA_13: u32 = DBGMCU_AHB5FZR_HPDMA_13_Msk;
pub const DBGMCU_AHB5FZR_HPDMA_14_Pos: u32 = 14;
pub const DBGMCU_AHB5FZR_HPDMA_14_Msk: u32 = 0x1 << DBGMCU_AHB5FZR_HPDMA_14_Pos;
pub const DBGMCU_AHB5FZR_HPDMA_14: u32 = DBGMCU_AHB5FZR_HPDMA_14_Msk;
pub const DBGMCU_AHB5FZR_HPDMA_15_Pos: u32 = 15;
pub const DBGMCU_AHB5FZR_HPDMA_15_Msk: u32 = 0x1 << DBGMCU_AHB5FZR_HPDMA_15_Pos;
pub const DBGMCU_AHB5FZR_HPDMA_15: u32 = DBGMCU_AHB5FZR_HPDMA_15_Msk;
pub const DBGMCU_AHB1FZR_GPDMA_0_Pos: u32 = 0;
pub const DBGMCU_AHB1FZR_GPDMA_0_Msk: u32 = 0x1 << DBGMCU_AHB1FZR_GPDMA_0_Pos;
pub const DBGMCU_AHB1FZR_GPDMA_0: u32 = DBGMCU_AHB1FZR_GPDMA_0_Msk;
pub const DBGMCU_AHB1FZR_GPDMA_1_Pos: u32 = 1;
pub const DBGMCU_AHB1FZR_GPDMA_1_Msk: u32 = 0x1 << DBGMCU_AHB1FZR_GPDMA_1_Pos;
pub const DBGMCU_AHB1FZR_GPDMA_1: u32 = DBGMCU_AHB1FZR_GPDMA_1_Msk;
pub const DBGMCU_AHB1FZR_GPDMA_2_Pos: u32 = 2;
pub const DBGMCU_AHB1FZR_GPDMA_2_Msk: u32 = 0x1 << DBGMCU_AHB1FZR_GPDMA_2_Pos;
pub const DBGMCU_AHB1FZR_GPDMA_2: u32 = DBGMCU_AHB1FZR_GPDMA_2_Msk;
pub const DBGMCU_AHB1FZR_GPDMA_3_Pos: u32 = 3;
pub const DBGMCU_AHB1FZR_GPDMA_3_Msk: u32 = 0x1 << DBGMCU_AHB1FZR_GPDMA_3_Pos;
pub const DBGMCU_AHB1FZR_GPDMA_3: u32 = DBGMCU_AHB1FZR_GPDMA_3_Msk;
pub const DBGMCU_AHB1FZR_GPDMA_4_Pos: u32 = 4;
pub const DBGMCU_AHB1FZR_GPDMA_4_Msk: u32 = 0x1 << DBGMCU_AHB1FZR_GPDMA_4_Pos;
pub const DBGMCU_AHB1FZR_GPDMA_4: u32 = DBGMCU_AHB1FZR_GPDMA_4_Msk;
pub const DBGMCU_AHB1FZR_GPDMA_5_Pos: u32 = 5;
pub const DBGMCU_AHB1FZR_GPDMA_5_Msk: u32 = 0x1 << DBGMCU_AHB1FZR_GPDMA_5_Pos;
pub const DBGMCU_AHB1FZR_GPDMA_5: u32 = DBGMCU_AHB1FZR_GPDMA_5_Msk;
pub const DBGMCU_AHB1FZR_GPDMA_6_Pos: u32 = 6;
pub const DBGMCU_AHB1FZR_GPDMA_6_Msk: u32 = 0x1 << DBGMCU_AHB1FZR_GPDMA_6_Pos;
pub const DBGMCU_AHB1FZR_GPDMA_6: u32 = DBGMCU_AHB1FZR_GPDMA_6_Msk;
pub const DBGMCU_AHB1FZR_GPDMA_7_Pos: u32 = 7;
pub const DBGMCU_AHB1FZR_GPDMA_7_Msk: u32 = 0x1 << DBGMCU_AHB1FZR_GPDMA_7_Pos;
pub const DBGMCU_AHB1FZR_GPDMA_7: u32 = DBGMCU_AHB1FZR_GPDMA_7_Msk;
pub const DBGMCU_AHB1FZR_GPDMA_8_Pos: u32 = 8;
pub const DBGMCU_AHB1FZR_GPDMA_8_Msk: u32 = 0x1 << DBGMCU_AHB1FZR_GPDMA_8_Pos;
pub const DBGMCU_AHB1FZR_GPDMA_8: u32 = DBGMCU_AHB1FZR_GPDMA_8_Msk;
pub const DBGMCU_AHB1FZR_GPDMA_9_Pos: u32 = 9;
pub const DBGMCU_AHB1FZR_GPDMA_9_Msk: u32 = 0x1 << DBGMCU_AHB1FZR_GPDMA_9_Pos;
pub const DBGMCU_AHB1FZR_GPDMA_9: u32 = DBGMCU_AHB1FZR_GPDMA_9_Msk;
pub const DBGMCU_AHB1FZR_GPDMA_10_Pos: u32 = 10;
pub const DBGMCU_AHB1FZR_GPDMA_10_Msk: u32 = 0x1 << DBGMCU_AHB1FZR_GPDMA_10_Pos;
pub const DBGMCU_AHB1FZR_GPDMA_10: u32 = DBGMCU_AHB1FZR_GPDMA_10_Msk;
pub const DBGMCU_AHB1FZR_GPDMA_11_Pos: u32 = 11;
pub const DBGMCU_AHB1FZR_GPDMA_11_Msk: u32 = 0x1 << DBGMCU_AHB1FZR_GPDMA_11_Pos;
pub const DBGMCU_AHB1FZR_GPDMA_11: u32 = DBGMCU_AHB1FZR_GPDMA_11_Msk;
pub const DBGMCU_AHB1FZR_GPDMA_12_Pos: u32 = 12;
pub const DBGMCU_AHB1FZR_GPDMA_12_Msk: u32 = 0x1 << DBGMCU_AHB1FZR_GPDMA_12_Pos;
pub const DBGMCU_AHB1FZR_GPDMA_12: u32 = DBGMCU_AHB1FZR_GPDMA_12_Msk;
pub const DBGMCU_AHB1FZR_GPDMA_13_Pos: u32 = 13;
pub const DBGMCU_AHB1FZR_GPDMA_13_Msk: u32 = 0x1 << DBGMCU_AHB1FZR_GPDMA_13_Pos;
pub const DBGMCU_AHB1FZR_GPDMA_13: u32 = DBGMCU_AHB1FZR_GPDMA_13_Msk;
pub const DBGMCU_AHB1FZR_GPDMA_14_Pos: u32 = 14;
pub const DBGMCU_AHB1FZR_GPDMA_14_Msk: u32 = 0x1 << DBGMCU_AHB1FZR_GPDMA_14_Pos;
pub const DBGMCU_AHB1FZR_GPDMA_14: u32 = DBGMCU_AHB1FZR_GPDMA_14_Msk;
pub const DBGMCU_AHB1FZR_GPDMA_15_Pos: u32 = 15;
pub const DBGMCU_AHB1FZR_GPDMA_15_Msk: u32 = 0x1 << DBGMCU_AHB1FZR_GPDMA_15_Pos;
pub const DBGMCU_AHB1FZR_GPDMA_15: u32 = DBGMCU_AHB1FZR_GPDMA_15_Msk;
pub const DBGMCU_APB1FZR_TIM2_Pos: u32 = 0;
pub const DBGMCU_APB1FZR_TIM2_Msk: u32 = 0x1 << DBGMCU_APB1FZR_TIM2_Pos;
pub const DBGMCU_APB1FZR_TIM2: u32 = DBGMCU_APB1FZR_TIM2_Msk;
pub const DBGMCU_APB1FZR_TIM3_Pos: u32 = 1;
pub const DBGMCU_APB1FZR_TIM3_Msk: u32 = 0x1 << DBGMCU_APB1FZR_TIM3_Pos;
pub const DBGMCU_APB1FZR_TIM3: u32 = DBGMCU_APB1FZR_TIM3_Msk;
pub const DBGMCU_APB1FZR_TIM4_Pos: u32 = 2;
pub const DBGMCU_APB1FZR_TIM4_Msk: u32 = 0x1 << DBGMCU_APB1FZR_TIM4_Pos;
pub const DBGMCU_APB1FZR_TIM4: u32 = DBGMCU_APB1FZR_TIM4_Msk;
pub const DBGMCU_APB1FZR_TIM5_Pos: u32 = 3;
pub const DBGMCU_APB1FZR_TIM5_Msk: u32 = 0x1 << DBGMCU_APB1FZR_TIM5_Pos;
pub const DBGMCU_APB1FZR_TIM5: u32 = DBGMCU_APB1FZR_TIM5_Msk;
pub const DBGMCU_APB1FZR_TIM6_Pos: u32 = 4;
pub const DBGMCU_APB1FZR_TIM6_Msk: u32 = 0x1 << DBGMCU_APB1FZR_TIM6_Pos;
pub const DBGMCU_APB1FZR_TIM6: u32 = DBGMCU_APB1FZR_TIM6_Msk;
pub const DBGMCU_APB1FZR_TIM7_Pos: u32 = 5;
pub const DBGMCU_APB1FZR_TIM7_Msk: u32 = 0x1 << DBGMCU_APB1FZR_TIM7_Pos;
pub const DBGMCU_APB1FZR_TIM7: u32 = DBGMCU_APB1FZR_TIM7_Msk;
pub const DBGMCU_APB1FZR_TIM12_Pos: u32 = 6;
pub const DBGMCU_APB1FZR_TIM12_Msk: u32 = 0x1 << DBGMCU_APB1FZR_TIM12_Pos;
pub const DBGMCU_APB1FZR_TIM12: u32 = DBGMCU_APB1FZR_TIM12_Msk;
pub const DBGMCU_APB1FZR_TIM13_Pos: u32 = 7;
pub const DBGMCU_APB1FZR_TIM13_Msk: u32 = 0x1 << DBGMCU_APB1FZR_TIM13_Pos;
pub const DBGMCU_APB1FZR_TIM13: u32 = DBGMCU_APB1FZR_TIM13_Msk;
pub const DBGMCU_APB1FZR_TIM14_Pos: u32 = 8;
pub const DBGMCU_APB1FZR_TIM14_Msk: u32 = 0x1 << DBGMCU_APB1FZR_TIM14_Pos;
pub const DBGMCU_APB1FZR_TIM14: u32 = DBGMCU_APB1FZR_TIM14_Msk;
pub const DBGMCU_APB1FZR_LPTIM1_Pos: u32 = 9;
pub const DBGMCU_APB1FZR_LPTIM1_Msk: u32 = 0x1 << DBGMCU_APB1FZR_LPTIM1_Pos;
pub const DBGMCU_APB1FZR_LPTIM1: u32 = DBGMCU_APB1FZR_LPTIM1_Msk;
pub const DBGMCU_APB1FZR_WWDG_Pos: u32 = 11;
pub const DBGMCU_APB1FZR_WWDG_Msk: u32 = 0x1 << DBGMCU_APB1FZR_WWDG_Pos;
pub const DBGMCU_APB1FZR_WWDG: u32 = DBGMCU_APB1FZR_WWDG_Msk;
pub const DBGMCU_APB1FZR_I2C1_Pos: u32 = 21;
pub const DBGMCU_APB1FZR_I2C1_Msk: u32 = 0x1 << DBGMCU_APB1FZR_I2C1_Pos;
pub const DBGMCU_APB1FZR_I2C1: u32 = DBGMCU_APB1FZR_I2C1_Msk;
pub const DBGMCU_APB1FZR_I2C2_Pos: u32 = 22;
pub const DBGMCU_APB1FZR_I2C2_Msk: u32 = 0x1 << DBGMCU_APB1FZR_I2C2_Pos;
pub const DBGMCU_APB1FZR_I2C2: u32 = DBGMCU_APB1FZR_I2C2_Msk;
pub const DBGMCU_APB1FZR_I2C3_Pos: u32 = 23;
pub const DBGMCU_APB1FZR_I2C3_Msk: u32 = 0x1 << DBGMCU_APB1FZR_I2C3_Pos;
pub const DBGMCU_APB1FZR_I2C3: u32 = DBGMCU_APB1FZR_I2C3_Msk;
pub const DBGMCU_APB2FZR_TIM1_Pos: u32 = 0;
pub const DBGMCU_APB2FZR_TIM1_Msk: u32 = 0x1 << DBGMCU_APB2FZR_TIM1_Pos;
pub const DBGMCU_APB2FZR_TIM1: u32 = DBGMCU_APB2FZR_TIM1_Msk;
pub const DBGMCU_APB2FZR_TIM15_Pos: u32 = 16;
pub const DBGMCU_APB2FZR_TIM15_Msk: u32 = 0x1 << DBGMCU_APB2FZR_TIM15_Pos;
pub const DBGMCU_APB2FZR_TIM15: u32 = DBGMCU_APB2FZR_TIM15_Msk;
pub const DBGMCU_APB2FZR_TIM16_Pos: u32 = 17;
pub const DBGMCU_APB2FZR_TIM16_Msk: u32 = 0x1 << DBGMCU_APB2FZR_TIM16_Pos;
pub const DBGMCU_APB2FZR_TIM16: u32 = DBGMCU_APB2FZR_TIM16_Msk;
pub const DBGMCU_APB2FZR_TIM17_Pos: u32 = 18;
pub const DBGMCU_APB2FZR_TIM17_Msk: u32 = 0x1 << DBGMCU_APB2FZR_TIM17_Pos;
pub const DBGMCU_APB2FZR_TIM17: u32 = DBGMCU_APB2FZR_TIM17_Msk;
pub const DBGMCU_APB2FZR_TIM9_Pos: u32 = 19;
pub const DBGMCU_APB2FZR_TIM9_Msk: u32 = 0x1 << DBGMCU_APB2FZR_TIM9_Pos;
pub const DBGMCU_APB2FZR_TIM9: u32 = DBGMCU_APB2FZR_TIM9_Msk;
pub const DBGMCU_APB4FZR_LPTIM2_Pos: u32 = 9;
pub const DBGMCU_APB4FZR_LPTIM2_Msk: u32 = 0x1 << DBGMCU_APB4FZR_LPTIM2_Pos;
pub const DBGMCU_APB4FZR_LPTIM2: u32 = DBGMCU_APB4FZR_LPTIM2_Msk;
pub const DBGMCU_APB4FZR_LPTIM3_Pos: u32 = 10;
pub const DBGMCU_APB4FZR_LPTIM3_Msk: u32 = 0x1 << DBGMCU_APB4FZR_LPTIM3_Pos;
pub const DBGMCU_APB4FZR_LPTIM3: u32 = DBGMCU_APB4FZR_LPTIM3_Msk;
pub const DBGMCU_APB4FZR_LPTIM4_Pos: u32 = 11;
pub const DBGMCU_APB4FZR_LPTIM4_Msk: u32 = 0x1 << DBGMCU_APB4FZR_LPTIM4_Pos;
pub const DBGMCU_APB4FZR_LPTIM4: u32 = DBGMCU_APB4FZR_LPTIM4_Msk;
pub const DBGMCU_APB4FZR_LPTIM5_Pos: u32 = 12;
pub const DBGMCU_APB4FZR_LPTIM5_Msk: u32 = 0x1 << DBGMCU_APB4FZR_LPTIM5_Pos;
pub const DBGMCU_APB4FZR_LPTIM5: u32 = DBGMCU_APB4FZR_LPTIM5_Msk;
pub const DBGMCU_APB4FZR_RTC_Pos: u32 = 16;
pub const DBGMCU_APB4FZR_RTC_Msk: u32 = 0x1 << DBGMCU_APB4FZR_RTC_Pos;
pub const DBGMCU_APB4FZR_RTC: u32 = DBGMCU_APB4FZR_RTC_Msk;
pub const DBGMCU_APB4FZR_IWDG_Pos: u32 = 18;
pub const DBGMCU_APB4FZR_IWDG_Msk: u32 = 0x1 << DBGMCU_APB4FZR_IWDG_Pos;
pub const DBGMCU_APB4FZR_IWDG: u32 = DBGMCU_APB4FZR_IWDG_Msk;
pub const DBGMCU_SR_AP_PRESENT_Pos: u32 = 0;
pub const DBGMCU_SR_AP_PRESENT_Msk: u32 = 0xFFFF << DBGMCU_SR_AP_PRESENT_Pos;
pub const DBGMCU_SR_AP_PRESENT: u32 = DBGMCU_SR_AP_PRESENT_Msk;
pub const DBGMCU_SR_AP_ENABLED_Pos: u32 = 16;
pub const DBGMCU_SR_AP_ENABLED_Msk: u32 = 0xFFFF << DBGMCU_SR_AP_ENABLED_Pos;
pub const DBGMCU_SR_AP_ENABLED: u32 = DBGMCU_SR_AP_ENABLED_Msk;
pub const DBGMCU_DBG_AUTH_HOST_MESSAGE_Pos: u32 = 0;
pub const DBGMCU_DBG_AUTH_HOST_MESSAGE_Msk: u32 = 0xFFFFFFFF << DBGMCU_DBG_AUTH_HOST_MESSAGE_Pos;
pub const DBGMCU_DBG_AUTH_HOST_MESSAGE: u32 = DBGMCU_DBG_AUTH_HOST_MESSAGE_Msk;
pub const DBGMCU_DBG_AUTH_DEVICE_MESSAGE_Pos: u32 = 0;
pub const DBGMCU_DBG_AUTH_DEVICE_MESSAGE_Msk: u32 =
    0xFFFFFFFF << DBGMCU_DBG_AUTH_DEVICE_MESSAGE_Pos;
pub const DBGMCU_DBG_AUTH_DEVICE_MESSAGE: u32 = DBGMCU_DBG_AUTH_DEVICE_MESSAGE_Msk;
pub const DBGMCU_DBG_AUTH_ACK_HOST_ACK_Pos: u32 = 0;
pub const DBGMCU_DBG_AUTH_ACK_HOST_ACK_Msk: u32 = 0x1 << DBGMCU_DBG_AUTH_ACK_HOST_ACK_Pos;
pub const DBGMCU_DBG_AUTH_ACK_HOST_ACK: u32 = DBGMCU_DBG_AUTH_ACK_HOST_ACK_Msk;
pub const DBGMCU_DBG_AUTH_ACK_DEV_ACK_Pos: u32 = 1;
pub const DBGMCU_DBG_AUTH_ACK_DEV_ACK_Msk: u32 = 0x1 << DBGMCU_DBG_AUTH_ACK_DEV_ACK_Pos;
pub const DBGMCU_DBG_AUTH_ACK_DEV_ACK: u32 = DBGMCU_DBG_AUTH_ACK_DEV_ACK_Msk;
pub const DBGMCU_PIDR4_JEP106CON_Pos: u32 = 0;
pub const DBGMCU_PIDR4_JEP106CON_Msk: u32 = 0xF << DBGMCU_PIDR4_JEP106CON_Pos;
pub const DBGMCU_PIDR4_JEP106CON: u32 = DBGMCU_PIDR4_JEP106CON_Msk;
pub const DBGMCU_PIDR4_SIZE_Pos: u32 = 4;
pub const DBGMCU_PIDR4_SIZE_Msk: u32 = 0xF << DBGMCU_PIDR4_SIZE_Pos;
pub const DBGMCU_PIDR4_SIZE: u32 = DBGMCU_PIDR4_SIZE_Msk;
pub const DBGMCU_PIDR0_PARTNUM_Pos: u32 = 0;
pub const DBGMCU_PIDR0_PARTNUM_Msk: u32 = 0xFF << DBGMCU_PIDR0_PARTNUM_Pos;
pub const DBGMCU_PIDR0_PARTNUM: u32 = DBGMCU_PIDR0_PARTNUM_Msk;
pub const DBGMCU_PIDR1_PARTNUM_Pos: u32 = 0;
pub const DBGMCU_PIDR1_PARTNUM_Msk: u32 = 0xF << DBGMCU_PIDR1_PARTNUM_Pos;
pub const DBGMCU_PIDR1_PARTNUM: u32 = DBGMCU_PIDR1_PARTNUM_Msk;
pub const DBGMCU_PIDR1_JEP106ID_Pos: u32 = 4;
pub const DBGMCU_PIDR1_JEP106ID_Msk: u32 = 0xF << DBGMCU_PIDR1_JEP106ID_Pos;
pub const DBGMCU_PIDR1_JEP106ID: u32 = DBGMCU_PIDR1_JEP106ID_Msk;
pub const DBGMCU_PIDR2_JEP106ID_Pos: u32 = 0;
pub const DBGMCU_PIDR2_JEP106ID_Msk: u32 = 0x7 << DBGMCU_PIDR2_JEP106ID_Pos;
pub const DBGMCU_PIDR2_JEP106ID: u32 = DBGMCU_PIDR2_JEP106ID_Msk;
pub const DBGMCU_PIDR2_JEDEC_Pos: u32 = 3;
pub const DBGMCU_PIDR2_JEDEC_Msk: u32 = 0x1 << DBGMCU_PIDR2_JEDEC_Pos;
pub const DBGMCU_PIDR2_JEDEC: u32 = DBGMCU_PIDR2_JEDEC_Msk;
pub const DBGMCU_PIDR2_REVISION_Pos: u32 = 4;
pub const DBGMCU_PIDR2_REVISION_Msk: u32 = 0xF << DBGMCU_PIDR2_REVISION_Pos;
pub const DBGMCU_PIDR2_REVISION: u32 = DBGMCU_PIDR2_REVISION_Msk;
pub const DBGMCU_PIDR3_CMOD_Pos: u32 = 0;
pub const DBGMCU_PIDR3_CMOD_Msk: u32 = 0xF << DBGMCU_PIDR3_CMOD_Pos;
pub const DBGMCU_PIDR3_CMOD: u32 = DBGMCU_PIDR3_CMOD_Msk;
pub const DBGMCU_PIDR3_REVAND_Pos: u32 = 4;
pub const DBGMCU_PIDR3_REVAND_Msk: u32 = 0xF << DBGMCU_PIDR3_REVAND_Pos;
pub const DBGMCU_PIDR3_REVAND: u32 = DBGMCU_PIDR3_REVAND_Msk;
pub const DBGMCU_CIDR0_PREAMBLE_Pos: u32 = 0;
pub const DBGMCU_CIDR0_PREAMBLE_Msk: u32 = 0xFF << DBGMCU_CIDR0_PREAMBLE_Pos;
pub const DBGMCU_CIDR0_PREAMBLE: u32 = DBGMCU_CIDR0_PREAMBLE_Msk;
pub const DBGMCU_CIDR1_PREAMBLE_Pos: u32 = 0;
pub const DBGMCU_CIDR1_PREAMBLE_Msk: u32 = 0xF << DBGMCU_CIDR1_PREAMBLE_Pos;
pub const DBGMCU_CIDR1_PREAMBLE: u32 = DBGMCU_CIDR1_PREAMBLE_Msk;
pub const DBGMCU_CIDR1_CLASS_Pos: u32 = 4;
pub const DBGMCU_CIDR1_CLASS_Msk: u32 = 0xF << DBGMCU_CIDR1_CLASS_Pos;
pub const DBGMCU_CIDR1_CLASS: u32 = DBGMCU_CIDR1_CLASS_Msk;
pub const DBGMCU_CIDR2_PREAMBLE_Pos: u32 = 0;
pub const DBGMCU_CIDR2_PREAMBLE_Msk: u32 = 0xFF << DBGMCU_CIDR2_PREAMBLE_Pos;
pub const DBGMCU_CIDR2_PREAMBLE: u32 = DBGMCU_CIDR2_PREAMBLE_Msk;
pub const DBGMCU_CIDR3_PREAMBLE_Pos: u32 = 0;
pub const DBGMCU_CIDR3_PREAMBLE_Msk: u32 = 0xFF << DBGMCU_CIDR3_PREAMBLE_Pos;
pub const DBGMCU_CIDR3_PREAMBLE: u32 = DBGMCU_CIDR3_PREAMBLE_Msk;
pub const DCMIPP_NUM_OF_PIPES: u32 = 0x1;
pub const DCMIPP_IPGR1_MEMORYPAGE_Pos: u32 = 0;
pub const DCMIPP_IPGR1_MEMORYPAGE_Msk: u32 = 0x7 << DCMIPP_IPGR1_MEMORYPAGE_Pos;
pub const DCMIPP_IPGR1_MEMORYPAGE: u32 = DCMIPP_IPGR1_MEMORYPAGE_Msk;
pub const DCMIPP_IPGR1_QOS_MODE_Pos: u32 = 24;
pub const DCMIPP_IPGR1_QOS_MODE_Msk: u32 = 0x1 << DCMIPP_IPGR1_QOS_MODE_Pos;
pub const DCMIPP_IPGR1_QOS_MODE: u32 = DCMIPP_IPGR1_QOS_MODE_Msk;
pub const DCMIPP_IPGR2_PSTART_Pos: u32 = 0;
pub const DCMIPP_IPGR2_PSTART_Msk: u32 = 0x1 << DCMIPP_IPGR2_PSTART_Pos;
pub const DCMIPP_IPGR2_PSTART: u32 = DCMIPP_IPGR2_PSTART_Msk;
pub const DCMIPP_IPGR3_IDLE_Pos: u32 = 0;
pub const DCMIPP_IPGR3_IDLE_Msk: u32 = 0x1 << DCMIPP_IPGR3_IDLE_Pos;
pub const DCMIPP_IPGR3_IDLE: u32 = DCMIPP_IPGR3_IDLE_Msk;
pub const DCMIPP_IPGR8_DID_Pos: u32 = 0;
pub const DCMIPP_IPGR8_DID_Msk: u32 = 0x3F << DCMIPP_IPGR8_DID_Pos;
pub const DCMIPP_IPGR8_DID: u32 = DCMIPP_IPGR8_DID_Msk;
pub const DCMIPP_IPGR8_REVID_Pos: u32 = 8;
pub const DCMIPP_IPGR8_REVID_Msk: u32 = 0x1F << DCMIPP_IPGR8_REVID_Pos;
pub const DCMIPP_IPGR8_REVID: u32 = DCMIPP_IPGR8_REVID_Msk;
pub const DCMIPP_IPGR8_ARCHIID_Pos: u32 = 16;
pub const DCMIPP_IPGR8_ARCHIID_Msk: u32 = 0x1F << DCMIPP_IPGR8_ARCHIID_Pos;
pub const DCMIPP_IPGR8_ARCHIID: u32 = DCMIPP_IPGR8_ARCHIID_Msk;
pub const DCMIPP_IPGR8_IPID_Pos: u32 = 24;
pub const DCMIPP_IPGR8_IPID_Msk: u32 = 0xFF << DCMIPP_IPGR8_IPID_Pos;
pub const DCMIPP_IPGR8_IPID: u32 = DCMIPP_IPGR8_IPID_Msk;
pub const DCMIPP_IPC1R1_TRAFFIC_Pos: u32 = 0;
pub const DCMIPP_IPC1R1_TRAFFIC_Msk: u32 = 0x7 << DCMIPP_IPC1R1_TRAFFIC_Pos;
pub const DCMIPP_IPC1R1_TRAFFIC: u32 = DCMIPP_IPC1R1_TRAFFIC_Msk;
pub const DCMIPP_IPC1R1_OTR_Pos: u32 = 8;
pub const DCMIPP_IPC1R1_OTR_Msk: u32 = 0x3 << DCMIPP_IPC1R1_OTR_Pos;
pub const DCMIPP_IPC1R1_OTR: u32 = DCMIPP_IPC1R1_OTR_Msk;
pub const DCMIPP_IPC1R2_WLRU_Pos: u32 = 16;
pub const DCMIPP_IPC1R2_WLRU_Msk: u32 = 0xF << DCMIPP_IPC1R2_WLRU_Pos;
pub const DCMIPP_IPC1R2_WLRU: u32 = DCMIPP_IPC1R2_WLRU_Msk;
pub const DCMIPP_IPC1R3_DPREGSTART_Pos: u32 = 0;
pub const DCMIPP_IPC1R3_DPREGSTART_Msk: u32 = 0x1F << DCMIPP_IPC1R3_DPREGSTART_Pos;
pub const DCMIPP_IPC1R3_DPREGSTART: u32 = DCMIPP_IPC1R3_DPREGSTART_Msk;
pub const DCMIPP_IPC1R3_DPREGEND_Pos: u32 = 16;
pub const DCMIPP_IPC1R3_DPREGEND_Msk: u32 = 0x1F << DCMIPP_IPC1R3_DPREGEND_Pos;
pub const DCMIPP_IPC1R3_DPREGEND: u32 = DCMIPP_IPC1R3_DPREGEND_Msk;
pub const DCMIPP_PRCR_ESS_Pos: u32 = 4;
pub const DCMIPP_PRCR_ESS_Msk: u32 = 0x1 << DCMIPP_PRCR_ESS_Pos;
pub const DCMIPP_PRCR_ESS: u32 = DCMIPP_PRCR_ESS_Msk;
pub const DCMIPP_PRCR_PCKPOL_Pos: u32 = 5;
pub const DCMIPP_PRCR_PCKPOL_Msk: u32 = 0x1 << DCMIPP_PRCR_PCKPOL_Pos;
pub const DCMIPP_PRCR_PCKPOL: u32 = DCMIPP_PRCR_PCKPOL_Msk;
pub const DCMIPP_PRCR_HSPOL_Pos: u32 = 6;
pub const DCMIPP_PRCR_HSPOL_Msk: u32 = 0x1 << DCMIPP_PRCR_HSPOL_Pos;
pub const DCMIPP_PRCR_HSPOL: u32 = DCMIPP_PRCR_HSPOL_Msk;
pub const DCMIPP_PRCR_VSPOL_Pos: u32 = 7;
pub const DCMIPP_PRCR_VSPOL_Msk: u32 = 0x1 << DCMIPP_PRCR_VSPOL_Pos;
pub const DCMIPP_PRCR_VSPOL: u32 = DCMIPP_PRCR_VSPOL_Msk;
pub const DCMIPP_PRCR_EDM_Pos: u32 = 10;
pub const DCMIPP_PRCR_EDM_Msk: u32 = 0x7 << DCMIPP_PRCR_EDM_Pos;
pub const DCMIPP_PRCR_EDM: u32 = DCMIPP_PRCR_EDM_Msk;
pub const DCMIPP_PRCR_ENABLE_Pos: u32 = 14;
pub const DCMIPP_PRCR_ENABLE_Msk: u32 = 0x1 << DCMIPP_PRCR_ENABLE_Pos;
pub const DCMIPP_PRCR_ENABLE: u32 = DCMIPP_PRCR_ENABLE_Msk;
pub const DCMIPP_PRCR_FORMAT_Pos: u32 = 16;
pub const DCMIPP_PRCR_FORMAT_Msk: u32 = 0xFF << DCMIPP_PRCR_FORMAT_Pos;
pub const DCMIPP_PRCR_FORMAT: u32 = DCMIPP_PRCR_FORMAT_Msk;
pub const DCMIPP_PRCR_SWAPCYCLES_Pos: u32 = 25;
pub const DCMIPP_PRCR_SWAPCYCLES_Msk: u32 = 0x1 << DCMIPP_PRCR_SWAPCYCLES_Pos;
pub const DCMIPP_PRCR_SWAPCYCLES: u32 = DCMIPP_PRCR_SWAPCYCLES_Msk;
pub const DCMIPP_PRCR_SWAPBITS_Pos: u32 = 26;
pub const DCMIPP_PRCR_SWAPBITS_Msk: u32 = 0x1 << DCMIPP_PRCR_SWAPBITS_Pos;
pub const DCMIPP_PRCR_SWAPBITS: u32 = DCMIPP_PRCR_SWAPBITS_Msk;
pub const DCMIPP_PRESCR_FSC_Pos: u32 = 0;
pub const DCMIPP_PRESCR_FSC_Msk: u32 = 0xFF << DCMIPP_PRESCR_FSC_Pos;
pub const DCMIPP_PRESCR_FSC: u32 = DCMIPP_PRESCR_FSC_Msk;
pub const DCMIPP_PRESCR_LSC_Pos: u32 = 8;
pub const DCMIPP_PRESCR_LSC_Msk: u32 = 0xFF << DCMIPP_PRESCR_LSC_Pos;
pub const DCMIPP_PRESCR_LSC: u32 = DCMIPP_PRESCR_LSC_Msk;
pub const DCMIPP_PRESCR_LEC_Pos: u32 = 16;
pub const DCMIPP_PRESCR_LEC_Msk: u32 = 0xFF << DCMIPP_PRESCR_LEC_Pos;
pub const DCMIPP_PRESCR_LEC: u32 = DCMIPP_PRESCR_LEC_Msk;
pub const DCMIPP_PRESCR_FEC_Pos: u32 = 24;
pub const DCMIPP_PRESCR_FEC_Msk: u32 = 0xFF << DCMIPP_PRESCR_FEC_Pos;
pub const DCMIPP_PRESCR_FEC: u32 = DCMIPP_PRESCR_FEC_Msk;
pub const DCMIPP_PRESUR_FSU_Pos: u32 = 0;
pub const DCMIPP_PRESUR_FSU_Msk: u32 = 0xFF << DCMIPP_PRESUR_FSU_Pos;
pub const DCMIPP_PRESUR_FSU: u32 = DCMIPP_PRESUR_FSU_Msk;
pub const DCMIPP_PRESUR_LSU_Pos: u32 = 8;
pub const DCMIPP_PRESUR_LSU_Msk: u32 = 0xFF << DCMIPP_PRESUR_LSU_Pos;
pub const DCMIPP_PRESUR_LSU: u32 = DCMIPP_PRESUR_LSU_Msk;
pub const DCMIPP_PRESUR_LEU_Pos: u32 = 16;
pub const DCMIPP_PRESUR_LEU_Msk: u32 = 0xFF << DCMIPP_PRESUR_LEU_Pos;
pub const DCMIPP_PRESUR_LEU: u32 = DCMIPP_PRESUR_LEU_Msk;
pub const DCMIPP_PRESUR_FEU_Pos: u32 = 24;
pub const DCMIPP_PRESUR_FEU_Msk: u32 = 0xFF << DCMIPP_PRESUR_FEU_Pos;
pub const DCMIPP_PRESUR_FEU: u32 = DCMIPP_PRESUR_FEU_Msk;
pub const DCMIPP_PRIER_ERRIE_Pos: u32 = 6;
pub const DCMIPP_PRIER_ERRIE_Msk: u32 = 0x1 << DCMIPP_PRIER_ERRIE_Pos;
pub const DCMIPP_PRIER_ERRIE: u32 = DCMIPP_PRIER_ERRIE_Msk;
pub const DCMIPP_PRSR_ERRF_Pos: u32 = 6;
pub const DCMIPP_PRSR_ERRF_Msk: u32 = 0x1 << DCMIPP_PRSR_ERRF_Pos;
pub const DCMIPP_PRSR_ERRF: u32 = DCMIPP_PRSR_ERRF_Msk;
pub const DCMIPP_PRSR_HSYNC_Pos: u32 = 16;
pub const DCMIPP_PRSR_HSYNC_Msk: u32 = 0x1 << DCMIPP_PRSR_HSYNC_Pos;
pub const DCMIPP_PRSR_HSYNC: u32 = DCMIPP_PRSR_HSYNC_Msk;
pub const DCMIPP_PRSR_VSYNC_Pos: u32 = 17;
pub const DCMIPP_PRSR_VSYNC_Msk: u32 = 0x1 << DCMIPP_PRSR_VSYNC_Pos;
pub const DCMIPP_PRSR_VSYNC: u32 = DCMIPP_PRSR_VSYNC_Msk;
pub const DCMIPP_PRFCR_CERRF_Pos: u32 = 6;
pub const DCMIPP_PRFCR_CERRF_Msk: u32 = 0x1 << DCMIPP_PRFCR_CERRF_Pos;
pub const DCMIPP_PRFCR_CERRF: u32 = DCMIPP_PRFCR_CERRF_Msk;
pub const DCMIPP_CMCR_CFC_Pos: u32 = 4;
pub const DCMIPP_CMCR_CFC_Msk: u32 = 0x1 << DCMIPP_CMCR_CFC_Pos;
pub const DCMIPP_CMCR_CFC: u32 = DCMIPP_CMCR_CFC_Msk;
pub const DCMIPP_CMFRCR_FRMCNT_Pos: u32 = 0;
pub const DCMIPP_CMFRCR_FRMCNT_Msk: u32 = 0xFFFFFFFF << DCMIPP_CMFRCR_FRMCNT_Pos;
pub const DCMIPP_CMFRCR_FRMCNT: u32 = DCMIPP_CMFRCR_FRMCNT_Msk;
pub const DCMIPP_CMIER_ATXERRIE_Pos: u32 = 5;
pub const DCMIPP_CMIER_ATXERRIE_Msk: u32 = 0x1 << DCMIPP_CMIER_ATXERRIE_Pos;
pub const DCMIPP_CMIER_ATXERRIE: u32 = DCMIPP_CMIER_ATXERRIE_Msk;
pub const DCMIPP_CMIER_PRERRIE_Pos: u32 = 6;
pub const DCMIPP_CMIER_PRERRIE_Msk: u32 = 0x1 << DCMIPP_CMIER_PRERRIE_Pos;
pub const DCMIPP_CMIER_PRERRIE: u32 = DCMIPP_CMIER_PRERRIE_Msk;
pub const DCMIPP_CMIER_P0LINEIE_Pos: u32 = 8;
pub const DCMIPP_CMIER_P0LINEIE_Msk: u32 = 0x1 << DCMIPP_CMIER_P0LINEIE_Pos;
pub const DCMIPP_CMIER_P0LINEIE: u32 = DCMIPP_CMIER_P0LINEIE_Msk;
pub const DCMIPP_CMIER_P0FRAMEIE_Pos: u32 = 9;
pub const DCMIPP_CMIER_P0FRAMEIE_Msk: u32 = 0x1 << DCMIPP_CMIER_P0FRAMEIE_Pos;
pub const DCMIPP_CMIER_P0FRAMEIE: u32 = DCMIPP_CMIER_P0FRAMEIE_Msk;
pub const DCMIPP_CMIER_P0VSYNCIE_Pos: u32 = 10;
pub const DCMIPP_CMIER_P0VSYNCIE_Msk: u32 = 0x1 << DCMIPP_CMIER_P0VSYNCIE_Pos;
pub const DCMIPP_CMIER_P0VSYNCIE: u32 = DCMIPP_CMIER_P0VSYNCIE_Msk;
pub const DCMIPP_CMIER_P0LIMITIE_Pos: u32 = 14;
pub const DCMIPP_CMIER_P0LIMITIE_Msk: u32 = 0x1 << DCMIPP_CMIER_P0LIMITIE_Pos;
pub const DCMIPP_CMIER_P0LIMITIE: u32 = DCMIPP_CMIER_P0LIMITIE_Msk;
pub const DCMIPP_CMIER_P0OVRIE_Pos: u32 = 15;
pub const DCMIPP_CMIER_P0OVRIE_Msk: u32 = 0x1 << DCMIPP_CMIER_P0OVRIE_Pos;
pub const DCMIPP_CMIER_P0OVRIE: u32 = DCMIPP_CMIER_P0OVRIE_Msk;
pub const DCMIPP_CMSR1_PRHSYNC_Pos: u32 = 0;
pub const DCMIPP_CMSR1_PRHSYNC_Msk: u32 = 0x1 << DCMIPP_CMSR1_PRHSYNC_Pos;
pub const DCMIPP_CMSR1_PRHSYNC: u32 = DCMIPP_CMSR1_PRHSYNC_Msk;
pub const DCMIPP_CMSR1_PRVSYNC_Pos: u32 = 1;
pub const DCMIPP_CMSR1_PRVSYNC_Msk: u32 = 0x1 << DCMIPP_CMSR1_PRVSYNC_Pos;
pub const DCMIPP_CMSR1_PRVSYNC: u32 = DCMIPP_CMSR1_PRVSYNC_Msk;
pub const DCMIPP_CMSR1_P0CPTACT_Pos: u32 = 15;
pub const DCMIPP_CMSR1_P0CPTACT_Msk: u32 = 0x1 << DCMIPP_CMSR1_P0CPTACT_Pos;
pub const DCMIPP_CMSR1_P0CPTACT: u32 = DCMIPP_CMSR1_P0CPTACT_Msk;
pub const DCMIPP_CMSR2_ATXERRF_Pos: u32 = 5;
pub const DCMIPP_CMSR2_ATXERRF_Msk: u32 = 0x1 << DCMIPP_CMSR2_ATXERRF_Pos;
pub const DCMIPP_CMSR2_ATXERRF: u32 = DCMIPP_CMSR2_ATXERRF_Msk;
pub const DCMIPP_CMSR2_PRERRF_Pos: u32 = 6;
pub const DCMIPP_CMSR2_PRERRF_Msk: u32 = 0x1 << DCMIPP_CMSR2_PRERRF_Pos;
pub const DCMIPP_CMSR2_PRERRF: u32 = DCMIPP_CMSR2_PRERRF_Msk;
pub const DCMIPP_CMSR2_P0LINEF_Pos: u32 = 8;
pub const DCMIPP_CMSR2_P0LINEF_Msk: u32 = 0x1 << DCMIPP_CMSR2_P0LINEF_Pos;
pub const DCMIPP_CMSR2_P0LINEF: u32 = DCMIPP_CMSR2_P0LINEF_Msk;
pub const DCMIPP_CMSR2_P0FRAMEF_Pos: u32 = 9;
pub const DCMIPP_CMSR2_P0FRAMEF_Msk: u32 = 0x1 << DCMIPP_CMSR2_P0FRAMEF_Pos;
pub const DCMIPP_CMSR2_P0FRAMEF: u32 = DCMIPP_CMSR2_P0FRAMEF_Msk;
pub const DCMIPP_CMSR2_P0VSYNCF_Pos: u32 = 10;
pub const DCMIPP_CMSR2_P0VSYNCF_Msk: u32 = 0x1 << DCMIPP_CMSR2_P0VSYNCF_Pos;
pub const DCMIPP_CMSR2_P0VSYNCF: u32 = DCMIPP_CMSR2_P0VSYNCF_Msk;
pub const DCMIPP_CMSR2_P0LIMITF_Pos: u32 = 14;
pub const DCMIPP_CMSR2_P0LIMITF_Msk: u32 = 0x1 << DCMIPP_CMSR2_P0LIMITF_Pos;
pub const DCMIPP_CMSR2_P0LIMITF: u32 = DCMIPP_CMSR2_P0LIMITF_Msk;
pub const DCMIPP_CMSR2_P0OVRF_Pos: u32 = 15;
pub const DCMIPP_CMSR2_P0OVRF_Msk: u32 = 0x1 << DCMIPP_CMSR2_P0OVRF_Pos;
pub const DCMIPP_CMSR2_P0OVRF: u32 = DCMIPP_CMSR2_P0OVRF_Msk;
pub const DCMIPP_CMFCR_CATXERRF_Pos: u32 = 5;
pub const DCMIPP_CMFCR_CATXERRF_Msk: u32 = 0x1 << DCMIPP_CMFCR_CATXERRF_Pos;
pub const DCMIPP_CMFCR_CATXERRF: u32 = DCMIPP_CMFCR_CATXERRF_Msk;
pub const DCMIPP_CMFCR_CPRERRF_Pos: u32 = 6;
pub const DCMIPP_CMFCR_CPRERRF_Msk: u32 = 0x1 << DCMIPP_CMFCR_CPRERRF_Pos;
pub const DCMIPP_CMFCR_CPRERRF: u32 = DCMIPP_CMFCR_CPRERRF_Msk;
pub const DCMIPP_CMFCR_CP0LINEF_Pos: u32 = 8;
pub const DCMIPP_CMFCR_CP0LINEF_Msk: u32 = 0x1 << DCMIPP_CMFCR_CP0LINEF_Pos;
pub const DCMIPP_CMFCR_CP0LINEF: u32 = DCMIPP_CMFCR_CP0LINEF_Msk;
pub const DCMIPP_CMFCR_CP0FRAMEF_Pos: u32 = 9;
pub const DCMIPP_CMFCR_CP0FRAMEF_Msk: u32 = 0x1 << DCMIPP_CMFCR_CP0FRAMEF_Pos;
pub const DCMIPP_CMFCR_CP0FRAMEF: u32 = DCMIPP_CMFCR_CP0FRAMEF_Msk;
pub const DCMIPP_CMFCR_CP0VSYNCF_Pos: u32 = 10;
pub const DCMIPP_CMFCR_CP0VSYNCF_Msk: u32 = 0x1 << DCMIPP_CMFCR_CP0VSYNCF_Pos;
pub const DCMIPP_CMFCR_CP0VSYNCF: u32 = DCMIPP_CMFCR_CP0VSYNCF_Msk;
pub const DCMIPP_CMFCR_CP0LIMITF_Pos: u32 = 14;
pub const DCMIPP_CMFCR_CP0LIMITF_Msk: u32 = 0x1 << DCMIPP_CMFCR_CP0LIMITF_Pos;
pub const DCMIPP_CMFCR_CP0LIMITF: u32 = DCMIPP_CMFCR_CP0LIMITF_Msk;
pub const DCMIPP_CMFCR_CP0OVRF_Pos: u32 = 15;
pub const DCMIPP_CMFCR_CP0OVRF_Msk: u32 = 0x1 << DCMIPP_CMFCR_CP0OVRF_Pos;
pub const DCMIPP_CMFCR_CP0OVRF: u32 = DCMIPP_CMFCR_CP0OVRF_Msk;
pub const DCMIPP_P0FSCR_PIPEN_Pos: u32 = 31;
pub const DCMIPP_P0FSCR_PIPEN_Msk: u32 = 0x1 << DCMIPP_P0FSCR_PIPEN_Pos;
pub const DCMIPP_P0FSCR_PIPEN: u32 = DCMIPP_P0FSCR_PIPEN_Msk;
pub const DCMIPP_P0FCTCR_FRATE_Pos: u32 = 0;
pub const DCMIPP_P0FCTCR_FRATE_Msk: u32 = 0x3 << DCMIPP_P0FCTCR_FRATE_Pos;
pub const DCMIPP_P0FCTCR_FRATE: u32 = DCMIPP_P0FCTCR_FRATE_Msk;
pub const DCMIPP_P0FCTCR_CPTMODE_Pos: u32 = 2;
pub const DCMIPP_P0FCTCR_CPTMODE_Msk: u32 = 0x1 << DCMIPP_P0FCTCR_CPTMODE_Pos;
pub const DCMIPP_P0FCTCR_CPTMODE: u32 = DCMIPP_P0FCTCR_CPTMODE_Msk;
pub const DCMIPP_P0FCTCR_CPTREQ_Pos: u32 = 3;
pub const DCMIPP_P0FCTCR_CPTREQ_Msk: u32 = 0x1 << DCMIPP_P0FCTCR_CPTREQ_Pos;
pub const DCMIPP_P0FCTCR_CPTREQ: u32 = DCMIPP_P0FCTCR_CPTREQ_Msk;
pub const DCMIPP_P0SCSTR_HSTART_Pos: u32 = 0;
pub const DCMIPP_P0SCSTR_HSTART_Msk: u32 = 0xFFF << DCMIPP_P0SCSTR_HSTART_Pos;
pub const DCMIPP_P0SCSTR_HSTART: u32 = DCMIPP_P0SCSTR_HSTART_Msk;
pub const DCMIPP_P0SCSTR_VSTART_Pos: u32 = 16;
pub const DCMIPP_P0SCSTR_VSTART_Msk: u32 = 0xFFF << DCMIPP_P0SCSTR_VSTART_Pos;
pub const DCMIPP_P0SCSTR_VSTART: u32 = DCMIPP_P0SCSTR_VSTART_Msk;
pub const DCMIPP_P0SCSZR_HSIZE_Pos: u32 = 0;
pub const DCMIPP_P0SCSZR_HSIZE_Msk: u32 = 0xFFF << DCMIPP_P0SCSZR_HSIZE_Pos;
pub const DCMIPP_P0SCSZR_HSIZE: u32 = DCMIPP_P0SCSZR_HSIZE_Msk;
pub const DCMIPP_P0SCSZR_VSIZE_Pos: u32 = 16;
pub const DCMIPP_P0SCSZR_VSIZE_Msk: u32 = 0xFFF << DCMIPP_P0SCSZR_VSIZE_Pos;
pub const DCMIPP_P0SCSZR_VSIZE: u32 = DCMIPP_P0SCSZR_VSIZE_Msk;
pub const DCMIPP_P0SCSZR_POSNEG_Pos: u32 = 30;
pub const DCMIPP_P0SCSZR_POSNEG_Msk: u32 = 0x1 << DCMIPP_P0SCSZR_POSNEG_Pos;
pub const DCMIPP_P0SCSZR_POSNEG: u32 = DCMIPP_P0SCSZR_POSNEG_Msk;
pub const DCMIPP_P0SCSZR_ENABLE_Pos: u32 = 31;
pub const DCMIPP_P0SCSZR_ENABLE_Msk: u32 = 0x1 << DCMIPP_P0SCSZR_ENABLE_Pos;
pub const DCMIPP_P0SCSZR_ENABLE: u32 = DCMIPP_P0SCSZR_ENABLE_Msk;
pub const DCMIPP_P0DCCNTR_CNT_Pos: u32 = 0;
pub const DCMIPP_P0DCCNTR_CNT_Msk: u32 = 0x3FFFFFF << DCMIPP_P0DCCNTR_CNT_Pos;
pub const DCMIPP_P0DCCNTR_CNT: u32 = DCMIPP_P0DCCNTR_CNT_Msk;
pub const DCMIPP_P0DCLMTR_LIMIT_Pos: u32 = 0;
pub const DCMIPP_P0DCLMTR_LIMIT_Msk: u32 = 0xFFFFFF << DCMIPP_P0DCLMTR_LIMIT_Pos;
pub const DCMIPP_P0DCLMTR_LIMIT: u32 = DCMIPP_P0DCLMTR_LIMIT_Msk;
pub const DCMIPP_P0DCLMTR_ENABLE_Pos: u32 = 31;
pub const DCMIPP_P0DCLMTR_ENABLE_Msk: u32 = 0x1 << DCMIPP_P0DCLMTR_ENABLE_Pos;
pub const DCMIPP_P0DCLMTR_ENABLE: u32 = DCMIPP_P0DCLMTR_ENABLE_Msk;
pub const DCMIPP_P0PPCR_PAD_Pos: u32 = 5;
pub const DCMIPP_P0PPCR_PAD_Msk: u32 = 0x1 << DCMIPP_P0PPCR_PAD_Pos;
pub const DCMIPP_P0PPCR_PAD: u32 = DCMIPP_P0PPCR_PAD_Msk;
pub const DCMIPP_P0PPCR_BSM_Pos: u32 = 7;
pub const DCMIPP_P0PPCR_BSM_Msk: u32 = 0x3 << DCMIPP_P0PPCR_BSM_Pos;
pub const DCMIPP_P0PPCR_BSM: u32 = DCMIPP_P0PPCR_BSM_Msk;
pub const DCMIPP_P0PPCR_OEBS_Pos: u32 = 9;
pub const DCMIPP_P0PPCR_OEBS_Msk: u32 = 0x1 << DCMIPP_P0PPCR_OEBS_Pos;
pub const DCMIPP_P0PPCR_OEBS: u32 = DCMIPP_P0PPCR_OEBS_Msk;
pub const DCMIPP_P0PPCR_LSM_Pos: u32 = 10;
pub const DCMIPP_P0PPCR_LSM_Msk: u32 = 0x1 << DCMIPP_P0PPCR_LSM_Pos;
pub const DCMIPP_P0PPCR_LSM: u32 = DCMIPP_P0PPCR_LSM_Msk;
pub const DCMIPP_P0PPCR_OELS_Pos: u32 = 11;
pub const DCMIPP_P0PPCR_OELS_Msk: u32 = 0x1 << DCMIPP_P0PPCR_OELS_Pos;
pub const DCMIPP_P0PPCR_OELS: u32 = DCMIPP_P0PPCR_OELS_Msk;
pub const DCMIPP_P0PPCR_LINEMULT_Pos: u32 = 13;
pub const DCMIPP_P0PPCR_LINEMULT_Msk: u32 = 0x7 << DCMIPP_P0PPCR_LINEMULT_Pos;
pub const DCMIPP_P0PPCR_LINEMULT: u32 = DCMIPP_P0PPCR_LINEMULT_Msk;
pub const DCMIPP_P0PPCR_DBM_Pos: u32 = 16;
pub const DCMIPP_P0PPCR_DBM_Msk: u32 = 0x1 << DCMIPP_P0PPCR_DBM_Pos;
pub const DCMIPP_P0PPCR_DBM: u32 = DCMIPP_P0PPCR_DBM_Msk;
pub const DCMIPP_P0PPM0AR1_MOA_Pos: u32 = 0;
pub const DCMIPP_P0PPM0AR1_MOA_Msk: u32 = 0xFFFFFFFF << DCMIPP_P0PPM0AR1_MOA_Pos;
pub const DCMIPP_P0PPM0AR1_MOA: u32 = DCMIPP_P0PPM0AR1_MOA_Msk;
pub const DCMIPP_P0PPM0AR2_MOA_Pos: u32 = 0;
pub const DCMIPP_P0PPM0AR2_MOA_Msk: u32 = 0xFFFFFFFF << DCMIPP_P0PPM0AR2_MOA_Pos;
pub const DCMIPP_P0PPM0AR2_MOA: u32 = DCMIPP_P0PPM0AR2_MOA_Msk;
pub const DCMIPP_P0IER_LINEIE_Pos: u32 = 0;
pub const DCMIPP_P0IER_LINEIE_Msk: u32 = 0x1 << DCMIPP_P0IER_LINEIE_Pos;
pub const DCMIPP_P0IER_LINEIE: u32 = DCMIPP_P0IER_LINEIE_Msk;
pub const DCMIPP_P0IER_FRAMEIE_Pos: u32 = 1;
pub const DCMIPP_P0IER_FRAMEIE_Msk: u32 = 0x1 << DCMIPP_P0IER_FRAMEIE_Pos;
pub const DCMIPP_P0IER_FRAMEIE: u32 = DCMIPP_P0IER_FRAMEIE_Msk;
pub const DCMIPP_P0IER_VSYNCIE_Pos: u32 = 2;
pub const DCMIPP_P0IER_VSYNCIE_Msk: u32 = 0x1 << DCMIPP_P0IER_VSYNCIE_Pos;
pub const DCMIPP_P0IER_VSYNCIE: u32 = DCMIPP_P0IER_VSYNCIE_Msk;
pub const DCMIPP_P0IER_LIMITIE_Pos: u32 = 6;
pub const DCMIPP_P0IER_LIMITIE_Msk: u32 = 0x1 << DCMIPP_P0IER_LIMITIE_Pos;
pub const DCMIPP_P0IER_LIMITIE: u32 = DCMIPP_P0IER_LIMITIE_Msk;
pub const DCMIPP_P0IER_OVRIE_Pos: u32 = 7;
pub const DCMIPP_P0IER_OVRIE_Msk: u32 = 0x1 << DCMIPP_P0IER_OVRIE_Pos;
pub const DCMIPP_P0IER_OVRIE: u32 = DCMIPP_P0IER_OVRIE_Msk;
pub const DCMIPP_P0SR_LINEF_Pos: u32 = 0;
pub const DCMIPP_P0SR_LINEF_Msk: u32 = 0x1 << DCMIPP_P0SR_LINEF_Pos;
pub const DCMIPP_P0SR_LINEF: u32 = DCMIPP_P0SR_LINEF_Msk;
pub const DCMIPP_P0SR_FRAMEF_Pos: u32 = 1;
pub const DCMIPP_P0SR_FRAMEF_Msk: u32 = 0x1 << DCMIPP_P0SR_FRAMEF_Pos;
pub const DCMIPP_P0SR_FRAMEF: u32 = DCMIPP_P0SR_FRAMEF_Msk;
pub const DCMIPP_P0SR_VSYNCF_Pos: u32 = 2;
pub const DCMIPP_P0SR_VSYNCF_Msk: u32 = 0x1 << DCMIPP_P0SR_VSYNCF_Pos;
pub const DCMIPP_P0SR_VSYNCF: u32 = DCMIPP_P0SR_VSYNCF_Msk;
pub const DCMIPP_P0SR_LIMITF_Pos: u32 = 6;
pub const DCMIPP_P0SR_LIMITF_Msk: u32 = 0x1 << DCMIPP_P0SR_LIMITF_Pos;
pub const DCMIPP_P0SR_LIMITF: u32 = DCMIPP_P0SR_LIMITF_Msk;
pub const DCMIPP_P0SR_OVRF_Pos: u32 = 7;
pub const DCMIPP_P0SR_OVRF_Msk: u32 = 0x1 << DCMIPP_P0SR_OVRF_Pos;
pub const DCMIPP_P0SR_OVRF: u32 = DCMIPP_P0SR_OVRF_Msk;
pub const DCMIPP_P0SR_LSTLINE_Pos: u32 = 16;
pub const DCMIPP_P0SR_LSTLINE_Msk: u32 = 0x1 << DCMIPP_P0SR_LSTLINE_Pos;
pub const DCMIPP_P0SR_LSTLINE: u32 = DCMIPP_P0SR_LSTLINE_Msk;
pub const DCMIPP_P0SR_CPTACT_Pos: u32 = 23;
pub const DCMIPP_P0SR_CPTACT_Msk: u32 = 0x1 << DCMIPP_P0SR_CPTACT_Pos;
pub const DCMIPP_P0SR_CPTACT: u32 = DCMIPP_P0SR_CPTACT_Msk;
pub const DCMIPP_P0FCR_CLINEF_Pos: u32 = 0;
pub const DCMIPP_P0FCR_CLINEF_Msk: u32 = 0x1 << DCMIPP_P0FCR_CLINEF_Pos;
pub const DCMIPP_P0FCR_CLINEF: u32 = DCMIPP_P0FCR_CLINEF_Msk;
pub const DCMIPP_P0FCR_CFRAMEF_Pos: u32 = 1;
pub const DCMIPP_P0FCR_CFRAMEF_Msk: u32 = 0x1 << DCMIPP_P0FCR_CFRAMEF_Pos;
pub const DCMIPP_P0FCR_CFRAMEF: u32 = DCMIPP_P0FCR_CFRAMEF_Msk;
pub const DCMIPP_P0FCR_CVSYNCF_Pos: u32 = 2;
pub const DCMIPP_P0FCR_CVSYNCF_Msk: u32 = 0x1 << DCMIPP_P0FCR_CVSYNCF_Pos;
pub const DCMIPP_P0FCR_CVSYNCF: u32 = DCMIPP_P0FCR_CVSYNCF_Msk;
pub const DCMIPP_P0FCR_CLIMITF_Pos: u32 = 6;
pub const DCMIPP_P0FCR_CLIMITF_Msk: u32 = 0x1 << DCMIPP_P0FCR_CLIMITF_Pos;
pub const DCMIPP_P0FCR_CLIMITF: u32 = DCMIPP_P0FCR_CLIMITF_Msk;
pub const DCMIPP_P0FCR_COVRF_Pos: u32 = 7;
pub const DCMIPP_P0FCR_COVRF_Msk: u32 = 0x1 << DCMIPP_P0FCR_COVRF_Pos;
pub const DCMIPP_P0FCR_COVRF: u32 = DCMIPP_P0FCR_COVRF_Msk;
pub const DCMIPP_P0CFCTCR_FRATE_Pos: u32 = 0;
pub const DCMIPP_P0CFCTCR_FRATE_Msk: u32 = 0x3 << DCMIPP_P0CFCTCR_FRATE_Pos;
pub const DCMIPP_P0CFCTCR_FRATE: u32 = DCMIPP_P0CFCTCR_FRATE_Msk;
pub const DCMIPP_P0CFCTCR_CPTMODE_Pos: u32 = 2;
pub const DCMIPP_P0CFCTCR_CPTMODE_Msk: u32 = 0x1 << DCMIPP_P0CFCTCR_CPTMODE_Pos;
pub const DCMIPP_P0CFCTCR_CPTMODE: u32 = DCMIPP_P0CFCTCR_CPTMODE_Msk;
pub const DCMIPP_P0CFCTCR_CPTREQ_Pos: u32 = 3;
pub const DCMIPP_P0CFCTCR_CPTREQ_Msk: u32 = 0x1 << DCMIPP_P0CFCTCR_CPTREQ_Pos;
pub const DCMIPP_P0CFCTCR_CPTREQ: u32 = DCMIPP_P0CFCTCR_CPTREQ_Msk;
pub const DCMIPP_P0CSCSTR_HSTART_Pos: u32 = 0;
pub const DCMIPP_P0CSCSTR_HSTART_Msk: u32 = 0xFFF << DCMIPP_P0CSCSTR_HSTART_Pos;
pub const DCMIPP_P0CSCSTR_HSTART: u32 = DCMIPP_P0CSCSTR_HSTART_Msk;
pub const DCMIPP_P0CSCSTR_VSTART_Pos: u32 = 16;
pub const DCMIPP_P0CSCSTR_VSTART_Msk: u32 = 0xFFF << DCMIPP_P0CSCSTR_VSTART_Pos;
pub const DCMIPP_P0CSCSTR_VSTART: u32 = DCMIPP_P0CSCSTR_VSTART_Msk;
pub const DCMIPP_P0CSCSZR_HSIZE_Pos: u32 = 0;
pub const DCMIPP_P0CSCSZR_HSIZE_Msk: u32 = 0xFFF << DCMIPP_P0CSCSZR_HSIZE_Pos;
pub const DCMIPP_P0CSCSZR_HSIZE: u32 = DCMIPP_P0CSCSZR_HSIZE_Msk;
pub const DCMIPP_P0CSCSZR_VSIZE_Pos: u32 = 16;
pub const DCMIPP_P0CSCSZR_VSIZE_Msk: u32 = 0xFFF << DCMIPP_P0CSCSZR_VSIZE_Pos;
pub const DCMIPP_P0CSCSZR_VSIZE: u32 = DCMIPP_P0CSCSZR_VSIZE_Msk;
pub const DCMIPP_P0CSCSZR_POSNEG_Pos: u32 = 30;
pub const DCMIPP_P0CSCSZR_POSNEG_Msk: u32 = 0x1 << DCMIPP_P0CSCSZR_POSNEG_Pos;
pub const DCMIPP_P0CSCSZR_POSNEG: u32 = DCMIPP_P0CSCSZR_POSNEG_Msk;
pub const DCMIPP_P0CSCSZR_ENABLE_Pos: u32 = 31;
pub const DCMIPP_P0CSCSZR_ENABLE_Msk: u32 = 0x1 << DCMIPP_P0CSCSZR_ENABLE_Pos;
pub const DCMIPP_P0CSCSZR_ENABLE: u32 = DCMIPP_P0CSCSZR_ENABLE_Msk;
pub const DCMIPP_P0CPPCR_PAD_Pos: u32 = 5;
pub const DCMIPP_P0CPPCR_PAD_Msk: u32 = 0x1 << DCMIPP_P0CPPCR_PAD_Pos;
pub const DCMIPP_P0CPPCR_PAD: u32 = DCMIPP_P0CPPCR_PAD_Msk;
pub const DCMIPP_P0CPPCR_BSM_Pos: u32 = 7;
pub const DCMIPP_P0CPPCR_BSM_Msk: u32 = 0x3 << DCMIPP_P0CPPCR_BSM_Pos;
pub const DCMIPP_P0CPPCR_BSM: u32 = DCMIPP_P0CPPCR_BSM_Msk;
pub const DCMIPP_P0CPPCR_OEBS_Pos: u32 = 9;
pub const DCMIPP_P0CPPCR_OEBS_Msk: u32 = 0x1 << DCMIPP_P0CPPCR_OEBS_Pos;
pub const DCMIPP_P0CPPCR_OEBS: u32 = DCMIPP_P0CPPCR_OEBS_Msk;
pub const DCMIPP_P0CPPCR_LSM_Pos: u32 = 10;
pub const DCMIPP_P0CPPCR_LSM_Msk: u32 = 0x1 << DCMIPP_P0CPPCR_LSM_Pos;
pub const DCMIPP_P0CPPCR_LSM: u32 = DCMIPP_P0CPPCR_LSM_Msk;
pub const DCMIPP_P0CPPCR_OELS_Pos: u32 = 11;
pub const DCMIPP_P0CPPCR_OELS_Msk: u32 = 0x1 << DCMIPP_P0CPPCR_OELS_Pos;
pub const DCMIPP_P0CPPCR_OELS: u32 = DCMIPP_P0CPPCR_OELS_Msk;
pub const DCMIPP_P0CPPCR_LINEMULT_Pos: u32 = 13;
pub const DCMIPP_P0CPPCR_LINEMULT_Msk: u32 = 0x7 << DCMIPP_P0CPPCR_LINEMULT_Pos;
pub const DCMIPP_P0CPPCR_LINEMULT: u32 = DCMIPP_P0CPPCR_LINEMULT_Msk;
pub const DCMIPP_P0CPPCR_DBM_Pos: u32 = 16;
pub const DCMIPP_P0CPPCR_DBM_Msk: u32 = 0x1 << DCMIPP_P0CPPCR_DBM_Pos;
pub const DCMIPP_P0CPPCR_DBM: u32 = DCMIPP_P0CPPCR_DBM_Msk;
pub const DCMIPP_P0CPPM0AR1_MOA_Pos: u32 = 0;
pub const DCMIPP_P0CPPM0AR1_MOA_Msk: u32 = 0xFFFFFFFF << DCMIPP_P0CPPM0AR1_MOA_Pos;
pub const DCMIPP_P0CPPM0AR1_MOA: u32 = DCMIPP_P0CPPM0AR1_MOA_Msk;
pub const DCMIPP_P0CPPM0AR2_MOA_Pos: u32 = 0;
pub const DCMIPP_P0CPPM0AR2_MOA_Msk: u32 = 0xFFFFFFFF << DCMIPP_P0CPPM0AR2_MOA_Pos;
pub const DCMIPP_P0CPPM0AR2_MOA: u32 = DCMIPP_P0CPPM0AR2_MOA_Msk;
pub const DLYB_CR_DEN_Pos: u32 = 0;
pub const DLYB_CR_DEN_Msk: u32 = 0x1 << DLYB_CR_DEN_Pos;
pub const DLYB_CR_DEN: u32 = DLYB_CR_DEN_Msk;
pub const DLYB_CR_SEN_Pos: u32 = 1;
pub const DLYB_CR_SEN_Msk: u32 = 0x1 << DLYB_CR_SEN_Pos;
pub const DLYB_CR_SEN: u32 = DLYB_CR_SEN_Msk;
pub const DLYB_CFGR_SEL_Pos: u32 = 0;
pub const DLYB_CFGR_SEL_Msk: u32 = 0xF << DLYB_CFGR_SEL_Pos;
pub const DLYB_CFGR_SEL: u32 = DLYB_CFGR_SEL_Msk;
pub const DLYB_CFGR_SEL_0: u32 = 0x1 << DLYB_CFGR_SEL_Pos;
pub const DLYB_CFGR_SEL_1: u32 = 0x2 << DLYB_CFGR_SEL_Pos;
pub const DLYB_CFGR_SEL_2: u32 = 0x3 << DLYB_CFGR_SEL_Pos;
pub const DLYB_CFGR_SEL_3: u32 = 0x8 << DLYB_CFGR_SEL_Pos;
pub const DLYB_CFGR_UNIT_Pos: u32 = 8;
pub const DLYB_CFGR_UNIT_Msk: u32 = 0x7F << DLYB_CFGR_UNIT_Pos;
pub const DLYB_CFGR_UNIT: u32 = DLYB_CFGR_UNIT_Msk;
pub const DLYB_CFGR_UNIT_0: u32 = 0x01 << DLYB_CFGR_UNIT_Pos;
pub const DLYB_CFGR_UNIT_1: u32 = 0x02 << DLYB_CFGR_UNIT_Pos;
pub const DLYB_CFGR_UNIT_2: u32 = 0x04 << DLYB_CFGR_UNIT_Pos;
pub const DLYB_CFGR_UNIT_3: u32 = 0x08 << DLYB_CFGR_UNIT_Pos;
pub const DLYB_CFGR_UNIT_4: u32 = 0x10 << DLYB_CFGR_UNIT_Pos;
pub const DLYB_CFGR_UNIT_5: u32 = 0x20 << DLYB_CFGR_UNIT_Pos;
pub const DLYB_CFGR_UNIT_6: u32 = 0x40 << DLYB_CFGR_UNIT_Pos;
pub const DLYB_CFGR_LNG_Pos: u32 = 16;
pub const DLYB_CFGR_LNG_Msk: u32 = 0xFFF << DLYB_CFGR_LNG_Pos;
pub const DLYB_CFGR_LNG: u32 = DLYB_CFGR_LNG_Msk;
pub const DLYB_CFGR_LNG_0: u32 = 0x001 << DLYB_CFGR_LNG_Pos;
pub const DLYB_CFGR_LNG_1: u32 = 0x002 << DLYB_CFGR_LNG_Pos;
pub const DLYB_CFGR_LNG_2: u32 = 0x004 << DLYB_CFGR_LNG_Pos;
pub const DLYB_CFGR_LNG_3: u32 = 0x008 << DLYB_CFGR_LNG_Pos;
pub const DLYB_CFGR_LNG_4: u32 = 0x010 << DLYB_CFGR_LNG_Pos;
pub const DLYB_CFGR_LNG_5: u32 = 0x020 << DLYB_CFGR_LNG_Pos;
pub const DLYB_CFGR_LNG_6: u32 = 0x040 << DLYB_CFGR_LNG_Pos;
pub const DLYB_CFGR_LNG_7: u32 = 0x080 << DLYB_CFGR_LNG_Pos;
pub const DLYB_CFGR_LNG_8: u32 = 0x100 << DLYB_CFGR_LNG_Pos;
pub const DLYB_CFGR_LNG_9: u32 = 0x200 << DLYB_CFGR_LNG_Pos;
pub const DLYB_CFGR_LNG_10: u32 = 0x400 << DLYB_CFGR_LNG_Pos;
pub const DLYB_CFGR_LNG_11: u32 = 0x800 << DLYB_CFGR_LNG_Pos;
pub const DLYB_CFGR_LNGF_Pos: u32 = 31;
pub const DLYB_CFGR_LNGF_Msk: u32 = 0x1 << DLYB_CFGR_LNGF_Pos;
pub const DLYB_CFGR_LNGF: u32 = DLYB_CFGR_LNGF_Msk;
pub const DMA_PRIVCFGR_PRIV0_Pos: u32 = 0;
pub const DMA_PRIVCFGR_PRIV0_Msk: u32 = 0x1 << DMA_PRIVCFGR_PRIV0_Pos;
pub const DMA_PRIVCFGR_PRIV0: u32 = DMA_PRIVCFGR_PRIV0_Msk;
pub const DMA_PRIVCFGR_PRIV1_Pos: u32 = 1;
pub const DMA_PRIVCFGR_PRIV1_Msk: u32 = 0x1 << DMA_PRIVCFGR_PRIV1_Pos;
pub const DMA_PRIVCFGR_PRIV1: u32 = DMA_PRIVCFGR_PRIV1_Msk;
pub const DMA_PRIVCFGR_PRIV2_Pos: u32 = 2;
pub const DMA_PRIVCFGR_PRIV2_Msk: u32 = 0x1 << DMA_PRIVCFGR_PRIV2_Pos;
pub const DMA_PRIVCFGR_PRIV2: u32 = DMA_PRIVCFGR_PRIV2_Msk;
pub const DMA_PRIVCFGR_PRIV3_Pos: u32 = 3;
pub const DMA_PRIVCFGR_PRIV3_Msk: u32 = 0x1 << DMA_PRIVCFGR_PRIV3_Pos;
pub const DMA_PRIVCFGR_PRIV3: u32 = DMA_PRIVCFGR_PRIV3_Msk;
pub const DMA_PRIVCFGR_PRIV4_Pos: u32 = 4;
pub const DMA_PRIVCFGR_PRIV4_Msk: u32 = 0x1 << DMA_PRIVCFGR_PRIV4_Pos;
pub const DMA_PRIVCFGR_PRIV4: u32 = DMA_PRIVCFGR_PRIV4_Msk;
pub const DMA_PRIVCFGR_PRIV5_Pos: u32 = 5;
pub const DMA_PRIVCFGR_PRIV5_Msk: u32 = 0x1 << DMA_PRIVCFGR_PRIV5_Pos;
pub const DMA_PRIVCFGR_PRIV5: u32 = DMA_PRIVCFGR_PRIV5_Msk;
pub const DMA_PRIVCFGR_PRIV6_Pos: u32 = 6;
pub const DMA_PRIVCFGR_PRIV6_Msk: u32 = 0x1 << DMA_PRIVCFGR_PRIV6_Pos;
pub const DMA_PRIVCFGR_PRIV6: u32 = DMA_PRIVCFGR_PRIV6_Msk;
pub const DMA_PRIVCFGR_PRIV7_Pos: u32 = 7;
pub const DMA_PRIVCFGR_PRIV7_Msk: u32 = 0x1 << DMA_PRIVCFGR_PRIV7_Pos;
pub const DMA_PRIVCFGR_PRIV7: u32 = DMA_PRIVCFGR_PRIV7_Msk;
pub const DMA_PRIVCFGR_PRIV8_Pos: u32 = 8;
pub const DMA_PRIVCFGR_PRIV8_Msk: u32 = 0x1 << DMA_PRIVCFGR_PRIV8_Pos;
pub const DMA_PRIVCFGR_PRIV8: u32 = DMA_PRIVCFGR_PRIV8_Msk;
pub const DMA_PRIVCFGR_PRIV9_Pos: u32 = 9;
pub const DMA_PRIVCFGR_PRIV9_Msk: u32 = 0x1 << DMA_PRIVCFGR_PRIV9_Pos;
pub const DMA_PRIVCFGR_PRIV9: u32 = DMA_PRIVCFGR_PRIV9_Msk;
pub const DMA_PRIVCFGR_PRIV10_Pos: u32 = 10;
pub const DMA_PRIVCFGR_PRIV10_Msk: u32 = 0x1 << DMA_PRIVCFGR_PRIV10_Pos;
pub const DMA_PRIVCFGR_PRIV10: u32 = DMA_PRIVCFGR_PRIV10_Msk;
pub const DMA_PRIVCFGR_PRIV11_Pos: u32 = 11;
pub const DMA_PRIVCFGR_PRIV11_Msk: u32 = 0x1 << DMA_PRIVCFGR_PRIV11_Pos;
pub const DMA_PRIVCFGR_PRIV11: u32 = DMA_PRIVCFGR_PRIV11_Msk;
pub const DMA_PRIVCFGR_PRIV12_Pos: u32 = 12;
pub const DMA_PRIVCFGR_PRIV12_Msk: u32 = 0x1 << DMA_PRIVCFGR_PRIV12_Pos;
pub const DMA_PRIVCFGR_PRIV12: u32 = DMA_PRIVCFGR_PRIV12_Msk;
pub const DMA_PRIVCFGR_PRIV13_Pos: u32 = 13;
pub const DMA_PRIVCFGR_PRIV13_Msk: u32 = 0x1 << DMA_PRIVCFGR_PRIV13_Pos;
pub const DMA_PRIVCFGR_PRIV13: u32 = DMA_PRIVCFGR_PRIV13_Msk;
pub const DMA_PRIVCFGR_PRIV14_Pos: u32 = 14;
pub const DMA_PRIVCFGR_PRIV14_Msk: u32 = 0x1 << DMA_PRIVCFGR_PRIV14_Pos;
pub const DMA_PRIVCFGR_PRIV14: u32 = DMA_PRIVCFGR_PRIV14_Msk;
pub const DMA_PRIVCFGR_PRIV15_Pos: u32 = 15;
pub const DMA_PRIVCFGR_PRIV15_Msk: u32 = 0x1 << DMA_PRIVCFGR_PRIV15_Pos;
pub const DMA_PRIVCFGR_PRIV15: u32 = DMA_PRIVCFGR_PRIV15_Msk;
pub const DMA_RCFGLOCKR_LOCK0_Pos: u32 = 0;
pub const DMA_RCFGLOCKR_LOCK0_Msk: u32 = 0x1 << DMA_RCFGLOCKR_LOCK0_Pos;
pub const DMA_RCFGLOCKR_LOCK0: u32 = DMA_RCFGLOCKR_LOCK0_Msk;
pub const DMA_RCFGLOCKR_LOCK1_Pos: u32 = 1;
pub const DMA_RCFGLOCKR_LOCK1_Msk: u32 = 0x1 << DMA_RCFGLOCKR_LOCK1_Pos;
pub const DMA_RCFGLOCKR_LOCK1: u32 = DMA_RCFGLOCKR_LOCK1_Msk;
pub const DMA_RCFGLOCKR_LOCK2_Pos: u32 = 2;
pub const DMA_RCFGLOCKR_LOCK2_Msk: u32 = 0x1 << DMA_RCFGLOCKR_LOCK2_Pos;
pub const DMA_RCFGLOCKR_LOCK2: u32 = DMA_RCFGLOCKR_LOCK2_Msk;
pub const DMA_RCFGLOCKR_LOCK3_Pos: u32 = 3;
pub const DMA_RCFGLOCKR_LOCK3_Msk: u32 = 0x1 << DMA_RCFGLOCKR_LOCK3_Pos;
pub const DMA_RCFGLOCKR_LOCK3: u32 = DMA_RCFGLOCKR_LOCK3_Msk;
pub const DMA_RCFGLOCKR_LOCK4_Pos: u32 = 4;
pub const DMA_RCFGLOCKR_LOCK4_Msk: u32 = 0x1 << DMA_RCFGLOCKR_LOCK4_Pos;
pub const DMA_RCFGLOCKR_LOCK4: u32 = DMA_RCFGLOCKR_LOCK4_Msk;
pub const DMA_RCFGLOCKR_LOCK5_Pos: u32 = 5;
pub const DMA_RCFGLOCKR_LOCK5_Msk: u32 = 0x1 << DMA_RCFGLOCKR_LOCK5_Pos;
pub const DMA_RCFGLOCKR_LOCK5: u32 = DMA_RCFGLOCKR_LOCK5_Msk;
pub const DMA_RCFGLOCKR_LOCK6_Pos: u32 = 6;
pub const DMA_RCFGLOCKR_LOCK6_Msk: u32 = 0x1 << DMA_RCFGLOCKR_LOCK6_Pos;
pub const DMA_RCFGLOCKR_LOCK6: u32 = DMA_RCFGLOCKR_LOCK6_Msk;
pub const DMA_RCFGLOCKR_LOCK7_Pos: u32 = 7;
pub const DMA_RCFGLOCKR_LOCK7_Msk: u32 = 0x1 << DMA_RCFGLOCKR_LOCK7_Pos;
pub const DMA_RCFGLOCKR_LOCK7: u32 = DMA_RCFGLOCKR_LOCK7_Msk;
pub const DMA_RCFGLOCKR_LOCK8_Pos: u32 = 8;
pub const DMA_RCFGLOCKR_LOCK8_Msk: u32 = 0x1 << DMA_RCFGLOCKR_LOCK8_Pos;
pub const DMA_RCFGLOCKR_LOCK8: u32 = DMA_RCFGLOCKR_LOCK8_Msk;
pub const DMA_RCFGLOCKR_LOCK9_Pos: u32 = 9;
pub const DMA_RCFGLOCKR_LOCK9_Msk: u32 = 0x1 << DMA_RCFGLOCKR_LOCK9_Pos;
pub const DMA_RCFGLOCKR_LOCK9: u32 = DMA_RCFGLOCKR_LOCK9_Msk;
pub const DMA_RCFGLOCKR_LOCK10_Pos: u32 = 10;
pub const DMA_RCFGLOCKR_LOCK10_Msk: u32 = 0x1 << DMA_RCFGLOCKR_LOCK10_Pos;
pub const DMA_RCFGLOCKR_LOCK10: u32 = DMA_RCFGLOCKR_LOCK10_Msk;
pub const DMA_RCFGLOCKR_LOCK11_Pos: u32 = 11;
pub const DMA_RCFGLOCKR_LOCK11_Msk: u32 = 0x1 << DMA_RCFGLOCKR_LOCK11_Pos;
pub const DMA_RCFGLOCKR_LOCK11: u32 = DMA_RCFGLOCKR_LOCK11_Msk;
pub const DMA_RCFGLOCKR_LOCK12_Pos: u32 = 12;
pub const DMA_RCFGLOCKR_LOCK12_Msk: u32 = 0x1 << DMA_RCFGLOCKR_LOCK12_Pos;
pub const DMA_RCFGLOCKR_LOCK12: u32 = DMA_RCFGLOCKR_LOCK12_Msk;
pub const DMA_RCFGLOCKR_LOCK13_Pos: u32 = 13;
pub const DMA_RCFGLOCKR_LOCK13_Msk: u32 = 0x1 << DMA_RCFGLOCKR_LOCK13_Pos;
pub const DMA_RCFGLOCKR_LOCK13: u32 = DMA_RCFGLOCKR_LOCK13_Msk;
pub const DMA_RCFGLOCKR_LOCK14_Pos: u32 = 14;
pub const DMA_RCFGLOCKR_LOCK14_Msk: u32 = 0x1 << DMA_RCFGLOCKR_LOCK14_Pos;
pub const DMA_RCFGLOCKR_LOCK14: u32 = DMA_RCFGLOCKR_LOCK14_Msk;
pub const DMA_RCFGLOCKR_LOCK15_Pos: u32 = 15;
pub const DMA_RCFGLOCKR_LOCK15_Msk: u32 = 0x1 << DMA_RCFGLOCKR_LOCK15_Pos;
pub const DMA_RCFGLOCKR_LOCK15: u32 = DMA_RCFGLOCKR_LOCK15_Msk;
pub const DMA_MISR_MIS0_Pos: u32 = 0;
pub const DMA_MISR_MIS0_Msk: u32 = 0x1 << DMA_MISR_MIS0_Pos;
pub const DMA_MISR_MIS0: u32 = DMA_MISR_MIS0_Msk;
pub const DMA_MISR_MIS1_Pos: u32 = 1;
pub const DMA_MISR_MIS1_Msk: u32 = 0x1 << DMA_MISR_MIS1_Pos;
pub const DMA_MISR_MIS1: u32 = DMA_MISR_MIS1_Msk;
pub const DMA_MISR_MIS2_Pos: u32 = 2;
pub const DMA_MISR_MIS2_Msk: u32 = 0x1 << DMA_MISR_MIS2_Pos;
pub const DMA_MISR_MIS2: u32 = DMA_MISR_MIS2_Msk;
pub const DMA_MISR_MIS3_Pos: u32 = 3;
pub const DMA_MISR_MIS3_Msk: u32 = 0x1 << DMA_MISR_MIS3_Pos;
pub const DMA_MISR_MIS3: u32 = DMA_MISR_MIS3_Msk;
pub const DMA_MISR_MIS4_Pos: u32 = 4;
pub const DMA_MISR_MIS4_Msk: u32 = 0x1 << DMA_MISR_MIS4_Pos;
pub const DMA_MISR_MIS4: u32 = DMA_MISR_MIS4_Msk;
pub const DMA_MISR_MIS5_Pos: u32 = 5;
pub const DMA_MISR_MIS5_Msk: u32 = 0x1 << DMA_MISR_MIS5_Pos;
pub const DMA_MISR_MIS5: u32 = DMA_MISR_MIS5_Msk;
pub const DMA_MISR_MIS6_Pos: u32 = 6;
pub const DMA_MISR_MIS6_Msk: u32 = 0x1 << DMA_MISR_MIS6_Pos;
pub const DMA_MISR_MIS6: u32 = DMA_MISR_MIS6_Msk;
pub const DMA_MISR_MIS7_Pos: u32 = 7;
pub const DMA_MISR_MIS7_Msk: u32 = 0x1 << DMA_MISR_MIS7_Pos;
pub const DMA_MISR_MIS7: u32 = DMA_MISR_MIS7_Msk;
pub const DMA_MISR_MIS8_Pos: u32 = 8;
pub const DMA_MISR_MIS8_Msk: u32 = 0x1 << DMA_MISR_MIS8_Pos;
pub const DMA_MISR_MIS8: u32 = DMA_MISR_MIS8_Msk;
pub const DMA_MISR_MIS9_Pos: u32 = 9;
pub const DMA_MISR_MIS9_Msk: u32 = 0x1 << DMA_MISR_MIS9_Pos;
pub const DMA_MISR_MIS9: u32 = DMA_MISR_MIS9_Msk;
pub const DMA_MISR_MIS10_Pos: u32 = 10;
pub const DMA_MISR_MIS10_Msk: u32 = 0x1 << DMA_MISR_MIS10_Pos;
pub const DMA_MISR_MIS10: u32 = DMA_MISR_MIS10_Msk;
pub const DMA_MISR_MIS11_Pos: u32 = 11;
pub const DMA_MISR_MIS11_Msk: u32 = 0x1 << DMA_MISR_MIS11_Pos;
pub const DMA_MISR_MIS11: u32 = DMA_MISR_MIS11_Msk;
pub const DMA_MISR_MIS12_Pos: u32 = 12;
pub const DMA_MISR_MIS12_Msk: u32 = 0x1 << DMA_MISR_MIS12_Pos;
pub const DMA_MISR_MIS12: u32 = DMA_MISR_MIS12_Msk;
pub const DMA_MISR_MIS13_Pos: u32 = 13;
pub const DMA_MISR_MIS13_Msk: u32 = 0x1 << DMA_MISR_MIS13_Pos;
pub const DMA_MISR_MIS13: u32 = DMA_MISR_MIS13_Msk;
pub const DMA_MISR_MIS14_Pos: u32 = 14;
pub const DMA_MISR_MIS14_Msk: u32 = 0x1 << DMA_MISR_MIS14_Pos;
pub const DMA_MISR_MIS14: u32 = DMA_MISR_MIS14_Msk;
pub const DMA_MISR_MIS15_Pos: u32 = 15;
pub const DMA_MISR_MIS15_Msk: u32 = 0x1 << DMA_MISR_MIS15_Pos;
pub const DMA_MISR_MIS15: u32 = DMA_MISR_MIS14_Msk;
pub const DMA_CLBAR_LBA_Pos: u32 = 16;
pub const DMA_CLBAR_LBA_Msk: u32 = 0xFFFF << DMA_CLBAR_LBA_Pos;
pub const DMA_CLBAR_LBA: u32 = DMA_CLBAR_LBA_Msk;
pub const DMA_CFCR_TCF_Pos: u32 = 8;
pub const DMA_CFCR_TCF_Msk: u32 = 0x1 << DMA_CFCR_TCF_Pos;
pub const DMA_CFCR_TCF: u32 = DMA_CFCR_TCF_Msk;
pub const DMA_CFCR_HTF_Pos: u32 = 9;
pub const DMA_CFCR_HTF_Msk: u32 = 0x1 << DMA_CFCR_HTF_Pos;
pub const DMA_CFCR_HTF: u32 = DMA_CFCR_HTF_Msk;
pub const DMA_CFCR_DTEF_Pos: u32 = 10;
pub const DMA_CFCR_DTEF_Msk: u32 = 0x1 << DMA_CFCR_DTEF_Pos;
pub const DMA_CFCR_DTEF: u32 = DMA_CFCR_DTEF_Msk;
pub const DMA_CFCR_ULEF_Pos: u32 = 11;
pub const DMA_CFCR_ULEF_Msk: u32 = 0x1 << DMA_CFCR_ULEF_Pos;
pub const DMA_CFCR_ULEF: u32 = DMA_CFCR_ULEF_Msk;
pub const DMA_CFCR_USEF_Pos: u32 = 12;
pub const DMA_CFCR_USEF_Msk: u32 = 0x1 << DMA_CFCR_USEF_Pos;
pub const DMA_CFCR_USEF: u32 = DMA_CFCR_USEF_Msk;
pub const DMA_CFCR_SUSPF_Pos: u32 = 13;
pub const DMA_CFCR_SUSPF_Msk: u32 = 0x1 << DMA_CFCR_SUSPF_Pos;
pub const DMA_CFCR_SUSPF: u32 = DMA_CFCR_SUSPF_Msk;
pub const DMA_CFCR_TOF_Pos: u32 = 14;
pub const DMA_CFCR_TOF_Msk: u32 = 0x1 << DMA_CFCR_TOF_Pos;
pub const DMA_CFCR_TOF: u32 = DMA_CFCR_TOF_Msk;
pub const DMA_CSR_IDLEF_Pos: u32 = 0;
pub const DMA_CSR_IDLEF_Msk: u32 = 0x1 << DMA_CSR_IDLEF_Pos;
pub const DMA_CSR_IDLEF: u32 = DMA_CSR_IDLEF_Msk;
pub const DMA_CSR_TCF_Pos: u32 = 8;
pub const DMA_CSR_TCF_Msk: u32 = 0x1 << DMA_CSR_TCF_Pos;
pub const DMA_CSR_TCF: u32 = DMA_CSR_TCF_Msk;
pub const DMA_CSR_HTF_Pos: u32 = 9;
pub const DMA_CSR_HTF_Msk: u32 = 0x1 << DMA_CSR_HTF_Pos;
pub const DMA_CSR_HTF: u32 = DMA_CSR_HTF_Msk;
pub const DMA_CSR_DTEF_Pos: u32 = 10;
pub const DMA_CSR_DTEF_Msk: u32 = 0x1 << DMA_CSR_DTEF_Pos;
pub const DMA_CSR_DTEF: u32 = DMA_CSR_DTEF_Msk;
pub const DMA_CSR_ULEF_Pos: u32 = 11;
pub const DMA_CSR_ULEF_Msk: u32 = 0x1 << DMA_CSR_ULEF_Pos;
pub const DMA_CSR_ULEF: u32 = DMA_CSR_ULEF_Msk;
pub const DMA_CSR_USEF_Pos: u32 = 12;
pub const DMA_CSR_USEF_Msk: u32 = 0x1 << DMA_CSR_USEF_Pos;
pub const DMA_CSR_USEF: u32 = DMA_CSR_USEF_Msk;
pub const DMA_CSR_SUSPF_Pos: u32 = 13;
pub const DMA_CSR_SUSPF_Msk: u32 = 0x1 << DMA_CSR_SUSPF_Pos;
pub const DMA_CSR_SUSPF: u32 = DMA_CSR_SUSPF_Msk;
pub const DMA_CSR_TOF_Pos: u32 = 14;
pub const DMA_CSR_TOF_Msk: u32 = 0x1 << DMA_CSR_TOF_Pos;
pub const DMA_CSR_TOF: u32 = DMA_CSR_TOF_Msk;
pub const DMA_CSR_FIFOL_Pos: u32 = 16;
pub const DMA_CSR_FIFOL_Msk: u32 = 0xFF << DMA_CSR_FIFOL_Pos;
pub const DMA_CSR_FIFOL: u32 = DMA_CSR_FIFOL_Msk;
pub const DMA_CCR_EN_Pos: u32 = 0;
pub const DMA_CCR_EN_Msk: u32 = 0x1 << DMA_CCR_EN_Pos;
pub const DMA_CCR_EN: u32 = DMA_CCR_EN_Msk;
pub const DMA_CCR_RESET_Pos: u32 = 1;
pub const DMA_CCR_RESET_Msk: u32 = 0x1 << DMA_CCR_RESET_Pos;
pub const DMA_CCR_RESET: u32 = DMA_CCR_RESET_Msk;
pub const DMA_CCR_SUSP_Pos: u32 = 2;
pub const DMA_CCR_SUSP_Msk: u32 = 0x1 << DMA_CCR_SUSP_Pos;
pub const DMA_CCR_SUSP: u32 = DMA_CCR_SUSP_Msk;
pub const DMA_CCR_TCIE_Pos: u32 = 8;
pub const DMA_CCR_TCIE_Msk: u32 = 0x1 << DMA_CCR_TCIE_Pos;
pub const DMA_CCR_TCIE: u32 = DMA_CCR_TCIE_Msk;
pub const DMA_CCR_HTIE_Pos: u32 = 9;
pub const DMA_CCR_HTIE_Msk: u32 = 0x1 << DMA_CCR_HTIE_Pos;
pub const DMA_CCR_HTIE: u32 = DMA_CCR_HTIE_Msk;
pub const DMA_CCR_DTEIE_Pos: u32 = 10;
pub const DMA_CCR_DTEIE_Msk: u32 = 0x1 << DMA_CCR_DTEIE_Pos;
pub const DMA_CCR_DTEIE: u32 = DMA_CCR_DTEIE_Msk;
pub const DMA_CCR_ULEIE_Pos: u32 = 11;
pub const DMA_CCR_ULEIE_Msk: u32 = 0x1 << DMA_CCR_ULEIE_Pos;
pub const DMA_CCR_ULEIE: u32 = DMA_CCR_ULEIE_Msk;
pub const DMA_CCR_USEIE_Pos: u32 = 12;
pub const DMA_CCR_USEIE_Msk: u32 = 0x1 << DMA_CCR_USEIE_Pos;
pub const DMA_CCR_USEIE: u32 = DMA_CCR_USEIE_Msk;
pub const DMA_CCR_SUSPIE_Pos: u32 = 13;
pub const DMA_CCR_SUSPIE_Msk: u32 = 0x1 << DMA_CCR_SUSPIE_Pos;
pub const DMA_CCR_SUSPIE: u32 = DMA_CCR_SUSPIE_Msk;
pub const DMA_CCR_TOIE_Pos: u32 = 14;
pub const DMA_CCR_TOIE_Msk: u32 = 0x1 << DMA_CCR_TOIE_Pos;
pub const DMA_CCR_TOIE: u32 = DMA_CCR_TOIE_Msk;
pub const DMA_CCR_LSM_Pos: u32 = 16;
pub const DMA_CCR_LSM_Msk: u32 = 0x1 << DMA_CCR_LSM_Pos;
pub const DMA_CCR_LSM: u32 = DMA_CCR_LSM_Msk;
pub const DMA_CCR_LAP_Pos: u32 = 17;
pub const DMA_CCR_LAP_Msk: u32 = 0x1 << DMA_CCR_LAP_Pos;
pub const DMA_CCR_LAP: u32 = DMA_CCR_LAP_Msk;
pub const DMA_CCR_PRIO_Pos: u32 = 22;
pub const DMA_CCR_PRIO_Msk: u32 = 0x3 << DMA_CCR_PRIO_Pos;
pub const DMA_CCR_PRIO: u32 = DMA_CCR_PRIO_Msk;
pub const DMA_CCR_PRIO_0: u32 = 0x1 << DMA_CCR_PRIO_Pos;
pub const DMA_CCR_PRIO_1: u32 = 0x2 << DMA_CCR_PRIO_Pos;
pub const DMA_CTR1_SDW_LOG2_Pos: u32 = 0;
pub const DMA_CTR1_SDW_LOG2_Msk: u32 = 0x3 << DMA_CTR1_SDW_LOG2_Pos;
pub const DMA_CTR1_SDW_LOG2: u32 = DMA_CTR1_SDW_LOG2_Msk;
pub const DMA_CTR1_SDW_LOG2_0: u32 = 0x1 << DMA_CTR1_SDW_LOG2_Pos;
pub const DMA_CTR1_SDW_LOG2_1: u32 = 0x2 << DMA_CTR1_SDW_LOG2_Pos;
pub const DMA_CTR1_SINC_Pos: u32 = 3;
pub const DMA_CTR1_SINC_Msk: u32 = 0x1 << DMA_CTR1_SINC_Pos;
pub const DMA_CTR1_SINC: u32 = DMA_CTR1_SINC_Msk;
pub const DMA_CTR1_SBL_1_Pos: u32 = 4;
pub const DMA_CTR1_SBL_1_Msk: u32 = 0x3F << DMA_CTR1_SBL_1_Pos;
pub const DMA_CTR1_SBL_1: u32 = DMA_CTR1_SBL_1_Msk;
pub const DMA_CTR1_PAM_Pos: u32 = 11;
pub const DMA_CTR1_PAM_Msk: u32 = 0x3 << DMA_CTR1_PAM_Pos;
pub const DMA_CTR1_PAM: u32 = DMA_CTR1_PAM_Msk;
pub const DMA_CTR1_PAM_0: u32 = 0x1 << DMA_CTR1_PAM_Pos;
pub const DMA_CTR1_PAM_1: u32 = 0x2 << DMA_CTR1_PAM_Pos;
pub const DMA_CTR1_SBX_Pos: u32 = 13;
pub const DMA_CTR1_SBX_Msk: u32 = 0x1 << DMA_CTR1_SBX_Pos;
pub const DMA_CTR1_SBX: u32 = DMA_CTR1_SBX_Msk;
pub const DMA_CTR1_SAP_Pos: u32 = 14;
pub const DMA_CTR1_SAP_Msk: u32 = 0x1 << DMA_CTR1_SAP_Pos;
pub const DMA_CTR1_SAP: u32 = DMA_CTR1_SAP_Msk;
pub const DMA_CTR1_DDW_LOG2_Pos: u32 = 16;
pub const DMA_CTR1_DDW_LOG2_Msk: u32 = 0x3 << DMA_CTR1_DDW_LOG2_Pos;
pub const DMA_CTR1_DDW_LOG2: u32 = DMA_CTR1_DDW_LOG2_Msk;
pub const DMA_CTR1_DDW_LOG2_0: u32 = 0x1 << DMA_CTR1_DDW_LOG2_Pos;
pub const DMA_CTR1_DDW_LOG2_1: u32 = 0x2 << DMA_CTR1_DDW_LOG2_Pos;
pub const DMA_CTR1_DINC_Pos: u32 = 19;
pub const DMA_CTR1_DINC_Msk: u32 = 0x1 << DMA_CTR1_DINC_Pos;
pub const DMA_CTR1_DINC: u32 = DMA_CTR1_DINC_Msk;
pub const DMA_CTR1_DBL_1_Pos: u32 = 20;
pub const DMA_CTR1_DBL_1_Msk: u32 = 0x3F << DMA_CTR1_DBL_1_Pos;
pub const DMA_CTR1_DBL_1: u32 = DMA_CTR1_DBL_1_Msk;
pub const DMA_CTR1_DBX_Pos: u32 = 26;
pub const DMA_CTR1_DBX_Msk: u32 = 0x1 << DMA_CTR1_DBX_Pos;
pub const DMA_CTR1_DBX: u32 = DMA_CTR1_DBX_Msk;
pub const DMA_CTR1_DHX_Pos: u32 = 27;
pub const DMA_CTR1_DHX_Msk: u32 = 0x1 << DMA_CTR1_DHX_Pos;
pub const DMA_CTR1_DHX: u32 = DMA_CTR1_DHX_Msk;
pub const DMA_CTR1_DWX_Pos: u32 = 28;
pub const DMA_CTR1_DWX_Msk: u32 = 0x1 << DMA_CTR1_DWX_Pos;
pub const DMA_CTR1_DWX: u32 = DMA_CTR1_DWX_Msk;
pub const DMA_CTR1_DAP_Pos: u32 = 30;
pub const DMA_CTR1_DAP_Msk: u32 = 0x1 << DMA_CTR1_DAP_Pos;
pub const DMA_CTR1_DAP: u32 = DMA_CTR1_DAP_Msk;
pub const DMA_CTR2_REQSEL_Pos: u32 = 0;
pub const DMA_CTR2_REQSEL_Msk: u32 = 0x7F << DMA_CTR2_REQSEL_Pos;
pub const DMA_CTR2_REQSEL: u32 = DMA_CTR2_REQSEL_Msk;
pub const DMA_CTR2_SWREQ_Pos: u32 = 9;
pub const DMA_CTR2_SWREQ_Msk: u32 = 0x1 << DMA_CTR2_SWREQ_Pos;
pub const DMA_CTR2_SWREQ: u32 = DMA_CTR2_SWREQ_Msk;
pub const DMA_CTR2_DREQ_Pos: u32 = 10;
pub const DMA_CTR2_DREQ_Msk: u32 = 0x1 << DMA_CTR2_DREQ_Pos;
pub const DMA_CTR2_DREQ: u32 = DMA_CTR2_DREQ_Msk;
pub const DMA_CTR2_BREQ_Pos: u32 = 11;
pub const DMA_CTR2_BREQ_Msk: u32 = 0x1 << DMA_CTR2_BREQ_Pos;
pub const DMA_CTR2_BREQ: u32 = DMA_CTR2_BREQ_Msk;
pub const DMA_CTR2_PFREQ_Pos: u32 = 12;
pub const DMA_CTR2_PFREQ_Msk: u32 = 0x1 << DMA_CTR2_PFREQ_Pos;
pub const DMA_CTR2_PFREQ: u32 = DMA_CTR2_PFREQ_Msk;
pub const DMA_CTR2_TRIGM_Pos: u32 = 14;
pub const DMA_CTR2_TRIGM_Msk: u32 = 0x3 << DMA_CTR2_TRIGM_Pos;
pub const DMA_CTR2_TRIGM: u32 = DMA_CTR2_TRIGM_Msk;
pub const DMA_CTR2_TRIGM_0: u32 = 0x1 << DMA_CTR2_TRIGM_Pos;
pub const DMA_CTR2_TRIGM_1: u32 = 0x2 << DMA_CTR2_TRIGM_Pos;
pub const DMA_CTR2_TRIGSEL_Pos: u32 = 16;
pub const DMA_CTR2_TRIGSEL_Msk: u32 = 0x3F << DMA_CTR2_TRIGSEL_Pos;
pub const DMA_CTR2_TRIGSEL: u32 = DMA_CTR2_TRIGSEL_Msk;
pub const DMA_CTR2_TRIGPOL_Pos: u32 = 24;
pub const DMA_CTR2_TRIGPOL_Msk: u32 = 0x3 << DMA_CTR2_TRIGPOL_Pos;
pub const DMA_CTR2_TRIGPOL: u32 = DMA_CTR2_TRIGPOL_Msk;
pub const DMA_CTR2_TRIGPOL_0: u32 = 0x1 << DMA_CTR2_TRIGPOL_Pos;
pub const DMA_CTR2_TRIGPOL_1: u32 = 0x2 << DMA_CTR2_TRIGPOL_Pos;
pub const DMA_CTR2_TCEM_Pos: u32 = 30;
pub const DMA_CTR2_TCEM_Msk: u32 = 0x3 << DMA_CTR2_TCEM_Pos;
pub const DMA_CTR2_TCEM: u32 = DMA_CTR2_TCEM_Msk;
pub const DMA_CTR2_TCEM_0: u32 = 0x1 << DMA_CTR2_TCEM_Pos;
pub const DMA_CTR2_TCEM_1: u32 = 0x2 << DMA_CTR2_TCEM_Pos;
pub const DMA_CBR1_BNDT_Pos: u32 = 0;
pub const DMA_CBR1_BNDT_Msk: u32 = 0xFFFF << DMA_CBR1_BNDT_Pos;
pub const DMA_CBR1_BNDT: u32 = DMA_CBR1_BNDT_Msk;
pub const DMA_CBR1_BRC_Pos: u32 = 16;
pub const DMA_CBR1_BRC_Msk: u32 = 0x7FF << DMA_CBR1_BRC_Pos;
pub const DMA_CBR1_BRC: u32 = DMA_CBR1_BRC_Msk;
pub const DMA_CBR1_SDEC_Pos: u32 = 28;
pub const DMA_CBR1_SDEC_Msk: u32 = 0x1 << DMA_CBR1_SDEC_Pos;
pub const DMA_CBR1_SDEC: u32 = DMA_CBR1_SDEC_Msk;
pub const DMA_CBR1_DDEC_Pos: u32 = 29;
pub const DMA_CBR1_DDEC_Msk: u32 = 0x1 << DMA_CBR1_DDEC_Pos;
pub const DMA_CBR1_DDEC: u32 = DMA_CBR1_DDEC_Msk;
pub const DMA_CBR1_BRSDEC_Pos: u32 = 30;
pub const DMA_CBR1_BRSDEC_Msk: u32 = 0x1 << DMA_CBR1_BRSDEC_Pos;
pub const DMA_CBR1_BRSDEC: u32 = DMA_CBR1_BRSDEC_Msk;
pub const DMA_CBR1_BRDDEC_Pos: u32 = 31;
pub const DMA_CBR1_BRDDEC_Msk: u32 = 0x1 << DMA_CBR1_BRDDEC_Pos;
pub const DMA_CBR1_BRDDEC: u32 = DMA_CBR1_BRDDEC_Msk;
pub const DMA_CSAR_SA_Pos: u32 = 0;
pub const DMA_CSAR_SA_Msk: u32 = 0xFFFFFFFF << DMA_CSAR_SA_Pos;
pub const DMA_CSAR_SA: u32 = DMA_CSAR_SA_Msk;
pub const DMA_CDAR_DA_Pos: u32 = 0;
pub const DMA_CDAR_DA_Msk: u32 = 0xFFFFFFFF << DMA_CDAR_DA_Pos;
pub const DMA_CDAR_DA: u32 = DMA_CDAR_DA_Msk;
pub const DMA_CTR3_SAO_Pos: u32 = 0;
pub const DMA_CTR3_SAO_Msk: u32 = 0x1FFF << DMA_CTR3_SAO_Pos;
pub const DMA_CTR3_SAO: u32 = DMA_CTR3_SAO_Msk;
pub const DMA_CTR3_DAO_Pos: u32 = 16;
pub const DMA_CTR3_DAO_Msk: u32 = 0x1FFF << DMA_CTR3_DAO_Pos;
pub const DMA_CTR3_DAO: u32 = DMA_CTR3_DAO_Msk;
pub const DMA_CBR2_BRSAO_Pos: u32 = 0;
pub const DMA_CBR2_BRSAO_Msk: u32 = 0xFFFF << DMA_CBR2_BRSAO_Pos;
pub const DMA_CBR2_BRSAO: u32 = DMA_CBR2_BRSAO_Msk;
pub const DMA_CBR2_BRDAO_Pos: u32 = 16;
pub const DMA_CBR2_BRDAO_Msk: u32 = 0xFFFF << DMA_CBR2_BRDAO_Pos;
pub const DMA_CBR2_BRDAO: u32 = DMA_CBR2_BRDAO_Msk;
pub const DMA_CLLR_LA_Pos: u32 = 2;
pub const DMA_CLLR_LA_Msk: u32 = 0x3FFF << DMA_CLLR_LA_Pos;
pub const DMA_CLLR_LA: u32 = DMA_CLLR_LA_Msk;
pub const DMA_CLLR_ULL_Pos: u32 = 16;
pub const DMA_CLLR_ULL_Msk: u32 = 0x1 << DMA_CLLR_ULL_Pos;
pub const DMA_CLLR_ULL: u32 = DMA_CLLR_ULL_Msk;
pub const DMA_CLLR_UB2_Pos: u32 = 25;
pub const DMA_CLLR_UB2_Msk: u32 = 0x1 << DMA_CLLR_UB2_Pos;
pub const DMA_CLLR_UB2: u32 = DMA_CLLR_UB2_Msk;
pub const DMA_CLLR_UT3_Pos: u32 = 26;
pub const DMA_CLLR_UT3_Msk: u32 = 0x1 << DMA_CLLR_UT3_Pos;
pub const DMA_CLLR_UT3: u32 = DMA_CLLR_UT3_Msk;
pub const DMA_CLLR_UDA_Pos: u32 = 27;
pub const DMA_CLLR_UDA_Msk: u32 = 0x1 << DMA_CLLR_UDA_Pos;
pub const DMA_CLLR_UDA: u32 = DMA_CLLR_UDA_Msk;
pub const DMA_CLLR_USA_Pos: u32 = 28;
pub const DMA_CLLR_USA_Msk: u32 = 0x1 << DMA_CLLR_USA_Pos;
pub const DMA_CLLR_USA: u32 = DMA_CLLR_USA_Msk;
pub const DMA_CLLR_UB1_Pos: u32 = 29;
pub const DMA_CLLR_UB1_Msk: u32 = 0x1 << DMA_CLLR_UB1_Pos;
pub const DMA_CLLR_UB1: u32 = DMA_CLLR_UB1_Msk;
pub const DMA_CLLR_UT2_Pos: u32 = 30;
pub const DMA_CLLR_UT2_Msk: u32 = 0x1 << DMA_CLLR_UT2_Pos;
pub const DMA_CLLR_UT2: u32 = DMA_CLLR_UT2_Msk;
pub const DMA_CLLR_UT1_Pos: u32 = 31;
pub const DMA_CLLR_UT1_Msk: u32 = 0x1 << DMA_CLLR_UT1_Pos;
pub const DMA_CLLR_UT1: u32 = DMA_CLLR_UT1_Msk;
pub const DMA2D_CR_START_Pos: u32 = 0;
pub const DMA2D_CR_START_Msk: u32 = 0x1 << DMA2D_CR_START_Pos;
pub const DMA2D_CR_START: u32 = DMA2D_CR_START_Msk;
pub const DMA2D_CR_SUSP_Pos: u32 = 1;
pub const DMA2D_CR_SUSP_Msk: u32 = 0x1 << DMA2D_CR_SUSP_Pos;
pub const DMA2D_CR_SUSP: u32 = DMA2D_CR_SUSP_Msk;
pub const DMA2D_CR_ABORT_Pos: u32 = 2;
pub const DMA2D_CR_ABORT_Msk: u32 = 0x1 << DMA2D_CR_ABORT_Pos;
pub const DMA2D_CR_ABORT: u32 = DMA2D_CR_ABORT_Msk;
pub const DMA2D_CR_LOM_Pos: u32 = 6;
pub const DMA2D_CR_LOM_Msk: u32 = 0x1 << DMA2D_CR_LOM_Pos;
pub const DMA2D_CR_LOM: u32 = DMA2D_CR_LOM_Msk;
pub const DMA2D_CR_TEIE_Pos: u32 = 8;
pub const DMA2D_CR_TEIE_Msk: u32 = 0x1 << DMA2D_CR_TEIE_Pos;
pub const DMA2D_CR_TEIE: u32 = DMA2D_CR_TEIE_Msk;
pub const DMA2D_CR_TCIE_Pos: u32 = 9;
pub const DMA2D_CR_TCIE_Msk: u32 = 0x1 << DMA2D_CR_TCIE_Pos;
pub const DMA2D_CR_TCIE: u32 = DMA2D_CR_TCIE_Msk;
pub const DMA2D_CR_TWIE_Pos: u32 = 10;
pub const DMA2D_CR_TWIE_Msk: u32 = 0x1 << DMA2D_CR_TWIE_Pos;
pub const DMA2D_CR_TWIE: u32 = DMA2D_CR_TWIE_Msk;
pub const DMA2D_CR_CAEIE_Pos: u32 = 11;
pub const DMA2D_CR_CAEIE_Msk: u32 = 0x1 << DMA2D_CR_CAEIE_Pos;
pub const DMA2D_CR_CAEIE: u32 = DMA2D_CR_CAEIE_Msk;
pub const DMA2D_CR_CTCIE_Pos: u32 = 12;
pub const DMA2D_CR_CTCIE_Msk: u32 = 0x1 << DMA2D_CR_CTCIE_Pos;
pub const DMA2D_CR_CTCIE: u32 = DMA2D_CR_CTCIE_Msk;
pub const DMA2D_CR_CEIE_Pos: u32 = 13;
pub const DMA2D_CR_CEIE_Msk: u32 = 0x1 << DMA2D_CR_CEIE_Pos;
pub const DMA2D_CR_CEIE: u32 = DMA2D_CR_CEIE_Msk;
pub const DMA2D_CR_MODE_Pos: u32 = 16;
pub const DMA2D_CR_MODE_Msk: u32 = 0x7 << DMA2D_CR_MODE_Pos;
pub const DMA2D_CR_MODE: u32 = DMA2D_CR_MODE_Msk;
pub const DMA2D_CR_MODE_0: u32 = 0x1 << DMA2D_CR_MODE_Pos;
pub const DMA2D_CR_MODE_1: u32 = 0x2 << DMA2D_CR_MODE_Pos;
pub const DMA2D_CR_MODE_2: u32 = 0x4 << DMA2D_CR_MODE_Pos;
pub const DMA2D_ISR_TEIF_Pos: u32 = 0;
pub const DMA2D_ISR_TEIF_Msk: u32 = 0x1 << DMA2D_ISR_TEIF_Pos;
pub const DMA2D_ISR_TEIF: u32 = DMA2D_ISR_TEIF_Msk;
pub const DMA2D_ISR_TCIF_Pos: u32 = 1;
pub const DMA2D_ISR_TCIF_Msk: u32 = 0x1 << DMA2D_ISR_TCIF_Pos;
pub const DMA2D_ISR_TCIF: u32 = DMA2D_ISR_TCIF_Msk;
pub const DMA2D_ISR_TWIF_Pos: u32 = 2;
pub const DMA2D_ISR_TWIF_Msk: u32 = 0x1 << DMA2D_ISR_TWIF_Pos;
pub const DMA2D_ISR_TWIF: u32 = DMA2D_ISR_TWIF_Msk;
pub const DMA2D_ISR_CAEIF_Pos: u32 = 3;
pub const DMA2D_ISR_CAEIF_Msk: u32 = 0x1 << DMA2D_ISR_CAEIF_Pos;
pub const DMA2D_ISR_CAEIF: u32 = DMA2D_ISR_CAEIF_Msk;
pub const DMA2D_ISR_CTCIF_Pos: u32 = 4;
pub const DMA2D_ISR_CTCIF_Msk: u32 = 0x1 << DMA2D_ISR_CTCIF_Pos;
pub const DMA2D_ISR_CTCIF: u32 = DMA2D_ISR_CTCIF_Msk;
pub const DMA2D_ISR_CEIF_Pos: u32 = 5;
pub const DMA2D_ISR_CEIF_Msk: u32 = 0x1 << DMA2D_ISR_CEIF_Pos;
pub const DMA2D_ISR_CEIF: u32 = DMA2D_ISR_CEIF_Msk;
pub const DMA2D_IFCR_CTEIF_Pos: u32 = 0;
pub const DMA2D_IFCR_CTEIF_Msk: u32 = 0x1 << DMA2D_IFCR_CTEIF_Pos;
pub const DMA2D_IFCR_CTEIF: u32 = DMA2D_IFCR_CTEIF_Msk;
pub const DMA2D_IFCR_CTCIF_Pos: u32 = 1;
pub const DMA2D_IFCR_CTCIF_Msk: u32 = 0x1 << DMA2D_IFCR_CTCIF_Pos;
pub const DMA2D_IFCR_CTCIF: u32 = DMA2D_IFCR_CTCIF_Msk;
pub const DMA2D_IFCR_CTWIF_Pos: u32 = 2;
pub const DMA2D_IFCR_CTWIF_Msk: u32 = 0x1 << DMA2D_IFCR_CTWIF_Pos;
pub const DMA2D_IFCR_CTWIF: u32 = DMA2D_IFCR_CTWIF_Msk;
pub const DMA2D_IFCR_CAECIF_Pos: u32 = 3;
pub const DMA2D_IFCR_CAECIF_Msk: u32 = 0x1 << DMA2D_IFCR_CAECIF_Pos;
pub const DMA2D_IFCR_CAECIF: u32 = DMA2D_IFCR_CAECIF_Msk;
pub const DMA2D_IFCR_CCTCIF_Pos: u32 = 4;
pub const DMA2D_IFCR_CCTCIF_Msk: u32 = 0x1 << DMA2D_IFCR_CCTCIF_Pos;
pub const DMA2D_IFCR_CCTCIF: u32 = DMA2D_IFCR_CCTCIF_Msk;
pub const DMA2D_IFCR_CCEIF_Pos: u32 = 5;
pub const DMA2D_IFCR_CCEIF_Msk: u32 = 0x1 << DMA2D_IFCR_CCEIF_Pos;
pub const DMA2D_IFCR_CCEIF: u32 = DMA2D_IFCR_CCEIF_Msk;
pub const DMA2D_FGMAR_MA_Pos: u32 = 0;
pub const DMA2D_FGMAR_MA_Msk: u32 = 0xFFFFFFFF << DMA2D_FGMAR_MA_Pos;
pub const DMA2D_FGMAR_MA: u32 = DMA2D_FGMAR_MA_Msk;
pub const DMA2D_FGOR_LO_Pos: u32 = 0;
pub const DMA2D_FGOR_LO_Msk: u32 = 0xFFFF << DMA2D_FGOR_LO_Pos;
pub const DMA2D_FGOR_LO: u32 = DMA2D_FGOR_LO_Msk;
pub const DMA2D_BGMAR_MA_Pos: u32 = 0;
pub const DMA2D_BGMAR_MA_Msk: u32 = 0xFFFFFFFF << DMA2D_BGMAR_MA_Pos;
pub const DMA2D_BGMAR_MA: u32 = DMA2D_BGMAR_MA_Msk;
pub const DMA2D_BGOR_LO_Pos: u32 = 0;
pub const DMA2D_BGOR_LO_Msk: u32 = 0xFFFF << DMA2D_BGOR_LO_Pos;
pub const DMA2D_BGOR_LO: u32 = DMA2D_BGOR_LO_Msk;
pub const DMA2D_FGPFCCR_CM_Pos: u32 = 0;
pub const DMA2D_FGPFCCR_CM_Msk: u32 = 0xF << DMA2D_FGPFCCR_CM_Pos;
pub const DMA2D_FGPFCCR_CM: u32 = DMA2D_FGPFCCR_CM_Msk;
pub const DMA2D_FGPFCCR_CM_0: u32 = 0x1 << DMA2D_FGPFCCR_CM_Pos;
pub const DMA2D_FGPFCCR_CM_1: u32 = 0x2 << DMA2D_FGPFCCR_CM_Pos;
pub const DMA2D_FGPFCCR_CM_2: u32 = 0x4 << DMA2D_FGPFCCR_CM_Pos;
pub const DMA2D_FGPFCCR_CM_3: u32 = 0x8 << DMA2D_FGPFCCR_CM_Pos;
pub const DMA2D_FGPFCCR_CCM_Pos: u32 = 4;
pub const DMA2D_FGPFCCR_CCM_Msk: u32 = 0x1 << DMA2D_FGPFCCR_CCM_Pos;
pub const DMA2D_FGPFCCR_CCM: u32 = DMA2D_FGPFCCR_CCM_Msk;
pub const DMA2D_FGPFCCR_START_Pos: u32 = 5;
pub const DMA2D_FGPFCCR_START_Msk: u32 = 0x1 << DMA2D_FGPFCCR_START_Pos;
pub const DMA2D_FGPFCCR_START: u32 = DMA2D_FGPFCCR_START_Msk;
pub const DMA2D_FGPFCCR_CS_Pos: u32 = 8;
pub const DMA2D_FGPFCCR_CS_Msk: u32 = 0xFF << DMA2D_FGPFCCR_CS_Pos;
pub const DMA2D_FGPFCCR_CS: u32 = DMA2D_FGPFCCR_CS_Msk;
pub const DMA2D_FGPFCCR_AM_Pos: u32 = 16;
pub const DMA2D_FGPFCCR_AM_Msk: u32 = 0x3 << DMA2D_FGPFCCR_AM_Pos;
pub const DMA2D_FGPFCCR_AM: u32 = DMA2D_FGPFCCR_AM_Msk;
pub const DMA2D_FGPFCCR_AM_0: u32 = 0x1 << DMA2D_FGPFCCR_AM_Pos;
pub const DMA2D_FGPFCCR_AM_1: u32 = 0x2 << DMA2D_FGPFCCR_AM_Pos;
pub const DMA2D_FGPFCCR_CSS_Pos: u32 = 18;
pub const DMA2D_FGPFCCR_CSS_Msk: u32 = 0x3 << DMA2D_FGPFCCR_CSS_Pos;
pub const DMA2D_FGPFCCR_CSS: u32 = DMA2D_FGPFCCR_CSS_Msk;
pub const DMA2D_FGPFCCR_CSS_0: u32 = 0x1 << DMA2D_FGPFCCR_CSS_Pos;
pub const DMA2D_FGPFCCR_CSS_1: u32 = 0x2 << DMA2D_FGPFCCR_CSS_Pos;
pub const DMA2D_FGPFCCR_AI_Pos: u32 = 20;
pub const DMA2D_FGPFCCR_AI_Msk: u32 = 0x1 << DMA2D_FGPFCCR_AI_Pos;
pub const DMA2D_FGPFCCR_AI: u32 = DMA2D_FGPFCCR_AI_Msk;
pub const DMA2D_FGPFCCR_RBS_Pos: u32 = 21;
pub const DMA2D_FGPFCCR_RBS_Msk: u32 = 0x1 << DMA2D_FGPFCCR_RBS_Pos;
pub const DMA2D_FGPFCCR_RBS: u32 = DMA2D_FGPFCCR_RBS_Msk;
pub const DMA2D_FGPFCCR_ALPHA_Pos: u32 = 24;
pub const DMA2D_FGPFCCR_ALPHA_Msk: u32 = 0xFF << DMA2D_FGPFCCR_ALPHA_Pos;
pub const DMA2D_FGPFCCR_ALPHA: u32 = DMA2D_FGPFCCR_ALPHA_Msk;
pub const DMA2D_FGCOLR_BLUE_Pos: u32 = 0;
pub const DMA2D_FGCOLR_BLUE_Msk: u32 = 0xFF << DMA2D_FGCOLR_BLUE_Pos;
pub const DMA2D_FGCOLR_BLUE: u32 = DMA2D_FGCOLR_BLUE_Msk;
pub const DMA2D_FGCOLR_GREEN_Pos: u32 = 8;
pub const DMA2D_FGCOLR_GREEN_Msk: u32 = 0xFF << DMA2D_FGCOLR_GREEN_Pos;
pub const DMA2D_FGCOLR_GREEN: u32 = DMA2D_FGCOLR_GREEN_Msk;
pub const DMA2D_FGCOLR_RED_Pos: u32 = 16;
pub const DMA2D_FGCOLR_RED_Msk: u32 = 0xFF << DMA2D_FGCOLR_RED_Pos;
pub const DMA2D_FGCOLR_RED: u32 = DMA2D_FGCOLR_RED_Msk;
pub const DMA2D_BGPFCCR_CM_Pos: u32 = 0;
pub const DMA2D_BGPFCCR_CM_Msk: u32 = 0xF << DMA2D_BGPFCCR_CM_Pos;
pub const DMA2D_BGPFCCR_CM: u32 = DMA2D_BGPFCCR_CM_Msk;
pub const DMA2D_BGPFCCR_CM_0: u32 = 0x1 << DMA2D_BGPFCCR_CM_Pos;
pub const DMA2D_BGPFCCR_CM_1: u32 = 0x2 << DMA2D_BGPFCCR_CM_Pos;
pub const DMA2D_BGPFCCR_CM_2: u32 = 0x4 << DMA2D_BGPFCCR_CM_Pos;
pub const DMA2D_BGPFCCR_CM_3: u32 = 0x8 << DMA2D_BGPFCCR_CM_Pos;
pub const DMA2D_BGPFCCR_CCM_Pos: u32 = 4;
pub const DMA2D_BGPFCCR_CCM_Msk: u32 = 0x1 << DMA2D_BGPFCCR_CCM_Pos;
pub const DMA2D_BGPFCCR_CCM: u32 = DMA2D_BGPFCCR_CCM_Msk;
pub const DMA2D_BGPFCCR_START_Pos: u32 = 5;
pub const DMA2D_BGPFCCR_START_Msk: u32 = 0x1 << DMA2D_BGPFCCR_START_Pos;
pub const DMA2D_BGPFCCR_START: u32 = DMA2D_BGPFCCR_START_Msk;
pub const DMA2D_BGPFCCR_CS_Pos: u32 = 8;
pub const DMA2D_BGPFCCR_CS_Msk: u32 = 0xFF << DMA2D_BGPFCCR_CS_Pos;
pub const DMA2D_BGPFCCR_CS: u32 = DMA2D_BGPFCCR_CS_Msk;
pub const DMA2D_BGPFCCR_AM_Pos: u32 = 16;
pub const DMA2D_BGPFCCR_AM_Msk: u32 = 0x3 << DMA2D_BGPFCCR_AM_Pos;
pub const DMA2D_BGPFCCR_AM: u32 = DMA2D_BGPFCCR_AM_Msk;
pub const DMA2D_BGPFCCR_AM_0: u32 = 0x1 << DMA2D_BGPFCCR_AM_Pos;
pub const DMA2D_BGPFCCR_AM_1: u32 = 0x2 << DMA2D_BGPFCCR_AM_Pos;
pub const DMA2D_BGPFCCR_AI_Pos: u32 = 20;
pub const DMA2D_BGPFCCR_AI_Msk: u32 = 0x1 << DMA2D_BGPFCCR_AI_Pos;
pub const DMA2D_BGPFCCR_AI: u32 = DMA2D_BGPFCCR_AI_Msk;
pub const DMA2D_BGPFCCR_RBS_Pos: u32 = 21;
pub const DMA2D_BGPFCCR_RBS_Msk: u32 = 0x1 << DMA2D_BGPFCCR_RBS_Pos;
pub const DMA2D_BGPFCCR_RBS: u32 = DMA2D_BGPFCCR_RBS_Msk;
pub const DMA2D_BGPFCCR_ALPHA_Pos: u32 = 24;
pub const DMA2D_BGPFCCR_ALPHA_Msk: u32 = 0xFF << DMA2D_BGPFCCR_ALPHA_Pos;
pub const DMA2D_BGPFCCR_ALPHA: u32 = DMA2D_BGPFCCR_ALPHA_Msk;
pub const DMA2D_BGCOLR_BLUE_Pos: u32 = 0;
pub const DMA2D_BGCOLR_BLUE_Msk: u32 = 0xFF << DMA2D_BGCOLR_BLUE_Pos;
pub const DMA2D_BGCOLR_BLUE: u32 = DMA2D_BGCOLR_BLUE_Msk;
pub const DMA2D_BGCOLR_GREEN_Pos: u32 = 8;
pub const DMA2D_BGCOLR_GREEN_Msk: u32 = 0xFF << DMA2D_BGCOLR_GREEN_Pos;
pub const DMA2D_BGCOLR_GREEN: u32 = DMA2D_BGCOLR_GREEN_Msk;
pub const DMA2D_BGCOLR_RED_Pos: u32 = 16;
pub const DMA2D_BGCOLR_RED_Msk: u32 = 0xFF << DMA2D_BGCOLR_RED_Pos;
pub const DMA2D_BGCOLR_RED: u32 = DMA2D_BGCOLR_RED_Msk;
pub const DMA2D_FGCMAR_MA_Pos: u32 = 0;
pub const DMA2D_FGCMAR_MA_Msk: u32 = 0xFFFFFFFF << DMA2D_FGCMAR_MA_Pos;
pub const DMA2D_FGCMAR_MA: u32 = DMA2D_FGCMAR_MA_Msk;
pub const DMA2D_BGCMAR_MA_Pos: u32 = 0;
pub const DMA2D_BGCMAR_MA_Msk: u32 = 0xFFFFFFFF << DMA2D_BGCMAR_MA_Pos;
pub const DMA2D_BGCMAR_MA: u32 = DMA2D_BGCMAR_MA_Msk;
pub const DMA2D_OPFCCR_CM_Pos: u32 = 0;
pub const DMA2D_OPFCCR_CM_Msk: u32 = 0x7 << DMA2D_OPFCCR_CM_Pos;
pub const DMA2D_OPFCCR_CM: u32 = DMA2D_OPFCCR_CM_Msk;
pub const DMA2D_OPFCCR_CM_0: u32 = 0x1 << DMA2D_OPFCCR_CM_Pos;
pub const DMA2D_OPFCCR_CM_1: u32 = 0x2 << DMA2D_OPFCCR_CM_Pos;
pub const DMA2D_OPFCCR_CM_2: u32 = 0x4 << DMA2D_OPFCCR_CM_Pos;
pub const DMA2D_OPFCCR_SB_Pos: u32 = 8;
pub const DMA2D_OPFCCR_SB_Msk: u32 = 0x1 << DMA2D_OPFCCR_SB_Pos;
pub const DMA2D_OPFCCR_SB: u32 = DMA2D_OPFCCR_SB_Msk;
pub const DMA2D_OPFCCR_AI_Pos: u32 = 20;
pub const DMA2D_OPFCCR_AI_Msk: u32 = 0x1 << DMA2D_OPFCCR_AI_Pos;
pub const DMA2D_OPFCCR_AI: u32 = DMA2D_OPFCCR_AI_Msk;
pub const DMA2D_OPFCCR_RBS_Pos: u32 = 21;
pub const DMA2D_OPFCCR_RBS_Msk: u32 = 0x1 << DMA2D_OPFCCR_RBS_Pos;
pub const DMA2D_OPFCCR_RBS: u32 = DMA2D_OPFCCR_RBS_Msk;
pub const DMA2D_OCOLR_BLUE_1: u32 = 0x000000FF;
pub const DMA2D_OCOLR_GREEN_1: u32 = 0x0000FF00;
pub const DMA2D_OCOLR_RED_1: u32 = 0x00FF0000;
pub const DMA2D_OCOLR_ALPHA_1: u32 = 0xFF000000;
pub const DMA2D_OCOLR_BLUE_2: u32 = 0x0000001F;
pub const DMA2D_OCOLR_GREEN_2: u32 = 0x000007E0;
pub const DMA2D_OCOLR_RED_2: u32 = 0x0000F800;
pub const DMA2D_OCOLR_BLUE_3: u32 = 0x0000001F;
pub const DMA2D_OCOLR_GREEN_3: u32 = 0x000003E0;
pub const DMA2D_OCOLR_RED_3: u32 = 0x00007C00;
pub const DMA2D_OCOLR_ALPHA_3: u32 = 0x00008000;
pub const DMA2D_OCOLR_BLUE_4: u32 = 0x0000000F;
pub const DMA2D_OCOLR_GREEN_4: u32 = 0x000000F0;
pub const DMA2D_OCOLR_RED_4: u32 = 0x00000F00;
pub const DMA2D_OCOLR_ALPHA_4: u32 = 0x0000F000;
pub const DMA2D_OMAR_MA_Pos: u32 = 0;
pub const DMA2D_OMAR_MA_Msk: u32 = 0xFFFFFFFF << DMA2D_OMAR_MA_Pos;
pub const DMA2D_OMAR_MA: u32 = DMA2D_OMAR_MA_Msk;
pub const DMA2D_OOR_LO_Pos: u32 = 0;
pub const DMA2D_OOR_LO_Msk: u32 = 0xFFFF << DMA2D_OOR_LO_Pos;
pub const DMA2D_OOR_LO: u32 = DMA2D_OOR_LO_Msk;
pub const DMA2D_NLR_NL_Pos: u32 = 0;
pub const DMA2D_NLR_NL_Msk: u32 = 0xFFFF << DMA2D_NLR_NL_Pos;
pub const DMA2D_NLR_NL: u32 = DMA2D_NLR_NL_Msk;
pub const DMA2D_NLR_PL_Pos: u32 = 16;
pub const DMA2D_NLR_PL_Msk: u32 = 0x3FFF << DMA2D_NLR_PL_Pos;
pub const DMA2D_NLR_PL: u32 = DMA2D_NLR_PL_Msk;
pub const DMA2D_LWR_LW_Pos: u32 = 0;
pub const DMA2D_LWR_LW_Msk: u32 = 0xFFFF << DMA2D_LWR_LW_Pos;
pub const DMA2D_LWR_LW: u32 = DMA2D_LWR_LW_Msk;
pub const DMA2D_AMTCR_EN_Pos: u32 = 0;
pub const DMA2D_AMTCR_EN_Msk: u32 = 0x1 << DMA2D_AMTCR_EN_Pos;
pub const DMA2D_AMTCR_EN: u32 = DMA2D_AMTCR_EN_Msk;
pub const DMA2D_AMTCR_DT_Pos: u32 = 8;
pub const DMA2D_AMTCR_DT_Msk: u32 = 0xFF << DMA2D_AMTCR_DT_Pos;
pub const DMA2D_AMTCR_DT: u32 = DMA2D_AMTCR_DT_Msk;
pub const DTS_CFGR1_TS1_EN_Pos: u32 = 0;
pub const DTS_CFGR1_TS1_EN_Msk: u32 = 0x1 << DTS_CFGR1_TS1_EN_Pos;
pub const DTS_CFGR1_TS1_EN: u32 = DTS_CFGR1_TS1_EN_Msk;
pub const DTS_CFGR1_TS1_START_Pos: u32 = 4;
pub const DTS_CFGR1_TS1_START_Msk: u32 = 0x1 << DTS_CFGR1_TS1_START_Pos;
pub const DTS_CFGR1_TS1_START: u32 = DTS_CFGR1_TS1_START_Msk;
pub const DTS_CFGR1_TS1_INTRIG_SEL_Pos: u32 = 8;
pub const DTS_CFGR1_TS1_INTRIG_SEL_Msk: u32 = 0xF << DTS_CFGR1_TS1_INTRIG_SEL_Pos;
pub const DTS_CFGR1_TS1_INTRIG_SEL: u32 = DTS_CFGR1_TS1_INTRIG_SEL_Msk;
pub const DTS_CFGR1_TS1_INTRIG_SEL_0: u32 = 0x1 << DTS_CFGR1_TS1_INTRIG_SEL_Pos;
pub const DTS_CFGR1_TS1_INTRIG_SEL_1: u32 = 0x2 << DTS_CFGR1_TS1_INTRIG_SEL_Pos;
pub const DTS_CFGR1_TS1_INTRIG_SEL_2: u32 = 0x4 << DTS_CFGR1_TS1_INTRIG_SEL_Pos;
pub const DTS_CFGR1_TS1_INTRIG_SEL_3: u32 = 0x8 << DTS_CFGR1_TS1_INTRIG_SEL_Pos;
pub const DTS_CFGR1_TS1_SMP_TIME_Pos: u32 = 16;
pub const DTS_CFGR1_TS1_SMP_TIME_Msk: u32 = 0xF << DTS_CFGR1_TS1_SMP_TIME_Pos;
pub const DTS_CFGR1_TS1_SMP_TIME: u32 = DTS_CFGR1_TS1_SMP_TIME_Msk;
pub const DTS_CFGR1_TS1_SMP_TIME_0: u32 = 0x1 << DTS_CFGR1_TS1_SMP_TIME_Pos;
pub const DTS_CFGR1_TS1_SMP_TIME_1: u32 = 0x2 << DTS_CFGR1_TS1_SMP_TIME_Pos;
pub const DTS_CFGR1_TS1_SMP_TIME_2: u32 = 0x4 << DTS_CFGR1_TS1_SMP_TIME_Pos;
pub const DTS_CFGR1_TS1_SMP_TIME_3: u32 = 0x8 << DTS_CFGR1_TS1_SMP_TIME_Pos;
pub const DTS_CFGR1_REFCLK_SEL_Pos: u32 = 20;
pub const DTS_CFGR1_REFCLK_SEL_Msk: u32 = 0x1 << DTS_CFGR1_REFCLK_SEL_Pos;
pub const DTS_CFGR1_REFCLK_SEL: u32 = DTS_CFGR1_REFCLK_SEL_Msk;
pub const DTS_CFGR1_Q_MEAS_OPT_Pos: u32 = 21;
pub const DTS_CFGR1_Q_MEAS_OPT_Msk: u32 = 0x1 << DTS_CFGR1_Q_MEAS_OPT_Pos;
pub const DTS_CFGR1_Q_MEAS_OPT: u32 = DTS_CFGR1_Q_MEAS_OPT_Msk;
pub const DTS_CFGR1_HSREF_CLK_DIV_Pos: u32 = 24;
pub const DTS_CFGR1_HSREF_CLK_DIV_Msk: u32 = 0x7F << DTS_CFGR1_HSREF_CLK_DIV_Pos;
pub const DTS_CFGR1_HSREF_CLK_DIV: u32 = DTS_CFGR1_HSREF_CLK_DIV_Msk;
pub const DTS_T0VALR1_TS1_FMT0_Pos: u32 = 0;
pub const DTS_T0VALR1_TS1_FMT0_Msk: u32 = 0xFFFF << DTS_T0VALR1_TS1_FMT0_Pos;
pub const DTS_T0VALR1_TS1_FMT0: u32 = DTS_T0VALR1_TS1_FMT0_Msk;
pub const DTS_T0VALR1_TS1_T0_Pos: u32 = 16;
pub const DTS_T0VALR1_TS1_T0_Msk: u32 = 0x3 << DTS_T0VALR1_TS1_T0_Pos;
pub const DTS_T0VALR1_TS1_T0: u32 = DTS_T0VALR1_TS1_T0_Msk;
pub const DTS_RAMPVALR_TS1_RAMP_COEFF_Pos: u32 = 0;
pub const DTS_RAMPVALR_TS1_RAMP_COEFF_Msk: u32 = 0xFFFF << DTS_RAMPVALR_TS1_RAMP_COEFF_Pos;
pub const DTS_RAMPVALR_TS1_RAMP_COEFF: u32 = DTS_RAMPVALR_TS1_RAMP_COEFF_Msk;
pub const DTS_ITR1_TS1_LITTHD_Pos: u32 = 0;
pub const DTS_ITR1_TS1_LITTHD_Msk: u32 = 0xFFFF << DTS_ITR1_TS1_LITTHD_Pos;
pub const DTS_ITR1_TS1_LITTHD: u32 = DTS_ITR1_TS1_LITTHD_Msk;
pub const DTS_ITR1_TS1_HITTHD_Pos: u32 = 16;
pub const DTS_ITR1_TS1_HITTHD_Msk: u32 = 0xFFFF << DTS_ITR1_TS1_HITTHD_Pos;
pub const DTS_ITR1_TS1_HITTHD: u32 = DTS_ITR1_TS1_HITTHD_Msk;
pub const DTS_DR_TS1_MFREQ_Pos: u32 = 0;
pub const DTS_DR_TS1_MFREQ_Msk: u32 = 0xFFFF << DTS_DR_TS1_MFREQ_Pos;
pub const DTS_DR_TS1_MFREQ: u32 = DTS_DR_TS1_MFREQ_Msk;
pub const DTS_SR_TS1_ITEF_Pos: u32 = 0;
pub const DTS_SR_TS1_ITEF_Msk: u32 = 0x1 << DTS_SR_TS1_ITEF_Pos;
pub const DTS_SR_TS1_ITEF: u32 = DTS_SR_TS1_ITEF_Msk;
pub const DTS_SR_TS1_ITLF_Pos: u32 = 1;
pub const DTS_SR_TS1_ITLF_Msk: u32 = 0x1 << DTS_SR_TS1_ITLF_Pos;
pub const DTS_SR_TS1_ITLF: u32 = DTS_SR_TS1_ITLF_Msk;
pub const DTS_SR_TS1_ITHF_Pos: u32 = 2;
pub const DTS_SR_TS1_ITHF_Msk: u32 = 0x1 << DTS_SR_TS1_ITHF_Pos;
pub const DTS_SR_TS1_ITHF: u32 = DTS_SR_TS1_ITHF_Msk;
pub const DTS_SR_TS1_AITEF_Pos: u32 = 4;
pub const DTS_SR_TS1_AITEF_Msk: u32 = 0x1 << DTS_SR_TS1_AITEF_Pos;
pub const DTS_SR_TS1_AITEF: u32 = DTS_SR_TS1_AITEF_Msk;
pub const DTS_SR_TS1_AITLF_Pos: u32 = 5;
pub const DTS_SR_TS1_AITLF_Msk: u32 = 0x1 << DTS_SR_TS1_AITLF_Pos;
pub const DTS_SR_TS1_AITLF: u32 = DTS_SR_TS1_AITLF_Msk;
pub const DTS_SR_TS1_AITHF_Pos: u32 = 6;
pub const DTS_SR_TS1_AITHF_Msk: u32 = 0x1 << DTS_SR_TS1_AITHF_Pos;
pub const DTS_SR_TS1_AITHF: u32 = DTS_SR_TS1_AITHF_Msk;
pub const DTS_SR_TS1_RDY_Pos: u32 = 15;
pub const DTS_SR_TS1_RDY_Msk: u32 = 0x1 << DTS_SR_TS1_RDY_Pos;
pub const DTS_SR_TS1_RDY: u32 = DTS_SR_TS1_RDY_Msk;
pub const DTS_ITENR_TS1_ITEEN_Pos: u32 = 0;
pub const DTS_ITENR_TS1_ITEEN_Msk: u32 = 0x1 << DTS_ITENR_TS1_ITEEN_Pos;
pub const DTS_ITENR_TS1_ITEEN: u32 = DTS_ITENR_TS1_ITEEN_Msk;
pub const DTS_ITENR_TS1_ITLEN_Pos: u32 = 1;
pub const DTS_ITENR_TS1_ITLEN_Msk: u32 = 0x1 << DTS_ITENR_TS1_ITLEN_Pos;
pub const DTS_ITENR_TS1_ITLEN: u32 = DTS_ITENR_TS1_ITLEN_Msk;
pub const DTS_ITENR_TS1_ITHEN_Pos: u32 = 2;
pub const DTS_ITENR_TS1_ITHEN_Msk: u32 = 0x1 << DTS_ITENR_TS1_ITHEN_Pos;
pub const DTS_ITENR_TS1_ITHEN: u32 = DTS_ITENR_TS1_ITHEN_Msk;
pub const DTS_ITENR_TS1_AITEEN_Pos: u32 = 4;
pub const DTS_ITENR_TS1_AITEEN_Msk: u32 = 0x1 << DTS_ITENR_TS1_AITEEN_Pos;
pub const DTS_ITENR_TS1_AITEEN: u32 = DTS_ITENR_TS1_AITEEN_Msk;
pub const DTS_ITENR_TS1_AITLEN_Pos: u32 = 5;
pub const DTS_ITENR_TS1_AITLEN_Msk: u32 = 0x1 << DTS_ITENR_TS1_AITLEN_Pos;
pub const DTS_ITENR_TS1_AITLEN: u32 = DTS_ITENR_TS1_AITLEN_Msk;
pub const DTS_ITENR_TS1_AITHEN_Pos: u32 = 6;
pub const DTS_ITENR_TS1_AITHEN_Msk: u32 = 0x1 << DTS_ITENR_TS1_AITHEN_Pos;
pub const DTS_ITENR_TS1_AITHEN: u32 = DTS_ITENR_TS1_AITHEN_Msk;
pub const DTS_ICIFR_TS1_CITEF_Pos: u32 = 0;
pub const DTS_ICIFR_TS1_CITEF_Msk: u32 = 0x1 << DTS_ICIFR_TS1_CITEF_Pos;
pub const DTS_ICIFR_TS1_CITEF: u32 = DTS_ICIFR_TS1_CITEF_Msk;
pub const DTS_ICIFR_TS1_CITLF_Pos: u32 = 1;
pub const DTS_ICIFR_TS1_CITLF_Msk: u32 = 0x1 << DTS_ICIFR_TS1_CITLF_Pos;
pub const DTS_ICIFR_TS1_CITLF: u32 = DTS_ICIFR_TS1_CITLF_Msk;
pub const DTS_ICIFR_TS1_CITHF_Pos: u32 = 2;
pub const DTS_ICIFR_TS1_CITHF_Msk: u32 = 0x1 << DTS_ICIFR_TS1_CITHF_Pos;
pub const DTS_ICIFR_TS1_CITHF: u32 = DTS_ICIFR_TS1_CITHF_Msk;
pub const DTS_ICIFR_TS1_CAITEF_Pos: u32 = 4;
pub const DTS_ICIFR_TS1_CAITEF_Msk: u32 = 0x1 << DTS_ICIFR_TS1_CAITEF_Pos;
pub const DTS_ICIFR_TS1_CAITEF: u32 = DTS_ICIFR_TS1_CAITEF_Msk;
pub const DTS_ICIFR_TS1_CAITLF_Pos: u32 = 5;
pub const DTS_ICIFR_TS1_CAITLF_Msk: u32 = 0x1 << DTS_ICIFR_TS1_CAITLF_Pos;
pub const DTS_ICIFR_TS1_CAITLF: u32 = DTS_ICIFR_TS1_CAITLF_Msk;
pub const DTS_ICIFR_TS1_CAITHF_Pos: u32 = 6;
pub const DTS_ICIFR_TS1_CAITHF_Msk: u32 = 0x1 << DTS_ICIFR_TS1_CAITHF_Pos;
pub const DTS_ICIFR_TS1_CAITHF: u32 = DTS_ICIFR_TS1_CAITHF_Msk;
pub const ETH_MACCR_ARP_Pos: u32 = 31;
pub const ETH_MACCR_ARP_Msk: u32 = 0x1 << ETH_MACCR_ARP_Pos;
pub const ETH_MACCR_ARP: u32 = ETH_MACCR_ARP_Msk;
pub const ETH_MACCR_SARC_Pos: u32 = 28;
pub const ETH_MACCR_SARC_Msk: u32 = 0x7 << ETH_MACCR_SARC_Pos;
pub const ETH_MACCR_SARC: u32 = ETH_MACCR_SARC_Msk;
pub const ETH_MACCR_SARC_MTIATI: u32 = uint32_t0x00000000;
pub const ETH_MACCR_SARC_INSADDR0_Pos: u32 = 29;
pub const ETH_MACCR_SARC_INSADDR0_Msk: u32 = 0x1 << ETH_MACCR_SARC_INSADDR0_Pos;
pub const ETH_MACCR_SARC_INSADDR0: u32 = ETH_MACCR_SARC_INSADDR0_Msk;
pub const ETH_MACCR_SARC_INSADDR1_Pos: u32 = 29;
pub const ETH_MACCR_SARC_INSADDR1_Msk: u32 = 0x3 << ETH_MACCR_SARC_INSADDR1_Pos;
pub const ETH_MACCR_SARC_INSADDR1: u32 = ETH_MACCR_SARC_INSADDR1_Msk;
pub const ETH_MACCR_SARC_REPADDR0_Pos: u32 = 28;
pub const ETH_MACCR_SARC_REPADDR0_Msk: u32 = 0x3 << ETH_MACCR_SARC_REPADDR0_Pos;
pub const ETH_MACCR_SARC_REPADDR0: u32 = ETH_MACCR_SARC_REPADDR0_Msk;
pub const ETH_MACCR_SARC_REPADDR1_Pos: u32 = 28;
pub const ETH_MACCR_SARC_REPADDR1_Msk: u32 = 0x7 << ETH_MACCR_SARC_REPADDR1_Pos;
pub const ETH_MACCR_SARC_REPADDR1: u32 = ETH_MACCR_SARC_REPADDR1_Msk;
pub const ETH_MACCR_IPC_Pos: u32 = 27;
pub const ETH_MACCR_IPC_Msk: u32 = 0x1 << ETH_MACCR_IPC_Pos;
pub const ETH_MACCR_IPC: u32 = ETH_MACCR_IPC_Msk;
pub const ETH_MACCR_IPG_Pos: u32 = 24;
pub const ETH_MACCR_IPG_Msk: u32 = 0x7 << ETH_MACCR_IPG_Pos;
pub const ETH_MACCR_IPG: u32 = ETH_MACCR_IPG_Msk;
pub const ETH_MACCR_IPG_96BIT: u32 = uint32_t0x00000000;
pub const ETH_MACCR_IPG_88BIT: u32 = uint32_t0x01000000;
pub const ETH_MACCR_IPG_80BIT: u32 = uint32_t0x02000000;
pub const ETH_MACCR_IPG_72BIT: u32 = uint32_t0x03000000;
pub const ETH_MACCR_IPG_64BIT: u32 = uint32_t0x04000000;
pub const ETH_MACCR_IPG_56BIT: u32 = uint32_t0x05000000;
pub const ETH_MACCR_IPG_48BIT: u32 = uint32_t0x06000000;
pub const ETH_MACCR_IPG_40BIT: u32 = uint32_t0x07000000;
pub const ETH_MACCR_GPSLCE_Pos: u32 = 23;
pub const ETH_MACCR_GPSLCE_Msk: u32 = 0x1 << ETH_MACCR_GPSLCE_Pos;
pub const ETH_MACCR_GPSLCE: u32 = ETH_MACCR_GPSLCE_Msk;
pub const ETH_MACCR_S2KP_Pos: u32 = 22;
pub const ETH_MACCR_S2KP_Msk: u32 = 0x1 << ETH_MACCR_S2KP_Pos;
pub const ETH_MACCR_S2KP: u32 = ETH_MACCR_S2KP_Msk;
pub const ETH_MACCR_CST_Pos: u32 = 21;
pub const ETH_MACCR_CST_Msk: u32 = 0x1 << ETH_MACCR_CST_Pos;
pub const ETH_MACCR_CST: u32 = ETH_MACCR_CST_Msk;
pub const ETH_MACCR_ACS_Pos: u32 = 20;
pub const ETH_MACCR_ACS_Msk: u32 = 0x1 << ETH_MACCR_ACS_Pos;
pub const ETH_MACCR_ACS: u32 = ETH_MACCR_ACS_Msk;
pub const ETH_MACCR_WD_Pos: u32 = 19;
pub const ETH_MACCR_WD_Msk: u32 = 0x1 << ETH_MACCR_WD_Pos;
pub const ETH_MACCR_WD: u32 = ETH_MACCR_WD_Msk;
pub const ETH_MACCR_JD_Pos: u32 = 17;
pub const ETH_MACCR_JD_Msk: u32 = 0x1 << ETH_MACCR_JD_Pos;
pub const ETH_MACCR_JD: u32 = ETH_MACCR_JD_Msk;
pub const ETH_MACCR_JE_Pos: u32 = 16;
pub const ETH_MACCR_JE_Msk: u32 = 0x1 << ETH_MACCR_JE_Pos;
pub const ETH_MACCR_JE: u32 = ETH_MACCR_JE_Msk;
pub const ETH_MACCR_FES_Pos: u32 = 14;
pub const ETH_MACCR_FES_Msk: u32 = 0x1 << ETH_MACCR_FES_Pos;
pub const ETH_MACCR_FES: u32 = ETH_MACCR_FES_Msk;
pub const ETH_MACCR_DM_Pos: u32 = 13;
pub const ETH_MACCR_DM_Msk: u32 = 0x1 << ETH_MACCR_DM_Pos;
pub const ETH_MACCR_DM: u32 = ETH_MACCR_DM_Msk;
pub const ETH_MACCR_LM_Pos: u32 = 12;
pub const ETH_MACCR_LM_Msk: u32 = 0x1 << ETH_MACCR_LM_Pos;
pub const ETH_MACCR_LM: u32 = ETH_MACCR_LM_Msk;
pub const ETH_MACCR_ECRSFD_Pos: u32 = 11;
pub const ETH_MACCR_ECRSFD_Msk: u32 = 0x1 << ETH_MACCR_ECRSFD_Pos;
pub const ETH_MACCR_ECRSFD: u32 = ETH_MACCR_ECRSFD_Msk;
pub const ETH_MACCR_DO_Pos: u32 = 10;
pub const ETH_MACCR_DO_Msk: u32 = 0x1 << ETH_MACCR_DO_Pos;
pub const ETH_MACCR_DO: u32 = ETH_MACCR_DO_Msk;
pub const ETH_MACCR_DCRS_Pos: u32 = 9;
pub const ETH_MACCR_DCRS_Msk: u32 = 0x1 << ETH_MACCR_DCRS_Pos;
pub const ETH_MACCR_DCRS: u32 = ETH_MACCR_DCRS_Msk;
pub const ETH_MACCR_DR_Pos: u32 = 8;
pub const ETH_MACCR_DR_Msk: u32 = 0x1 << ETH_MACCR_DR_Pos;
pub const ETH_MACCR_DR: u32 = ETH_MACCR_DR_Msk;
pub const ETH_MACCR_BL_Pos: u32 = 5;
pub const ETH_MACCR_BL_Msk: u32 = 0x3 << ETH_MACCR_BL_Pos;
pub const ETH_MACCR_BL: u32 = ETH_MACCR_BL_Msk;
pub const ETH_MACCR_BL_10: u32 = 0x0 << ETH_MACCR_BL_Pos;
pub const ETH_MACCR_BL_8: u32 = 0x1 << ETH_MACCR_BL_Pos;
pub const ETH_MACCR_BL_4: u32 = 0x2 << ETH_MACCR_BL_Pos;
pub const ETH_MACCR_BL_1: u32 = 0x3 << ETH_MACCR_BL_Pos;
pub const ETH_MACCR_DC_Pos: u32 = 4;
pub const ETH_MACCR_DC_Msk: u32 = 0x1 << ETH_MACCR_DC_Pos;
pub const ETH_MACCR_DC: u32 = ETH_MACCR_DC_Msk;
pub const ETH_MACCR_PRELEN_Pos: u32 = 2;
pub const ETH_MACCR_PRELEN_Msk: u32 = 0x3 << ETH_MACCR_PRELEN_Pos;
pub const ETH_MACCR_PRELEN: u32 = ETH_MACCR_PRELEN_Msk;
pub const ETH_MACCR_PRELEN_7: u32 = 0x0 << ETH_MACCR_PRELEN_Pos;
pub const ETH_MACCR_PRELEN_5: u32 = 0x1 << ETH_MACCR_PRELEN_Pos;
pub const ETH_MACCR_PRELEN_3: u32 = 0x2 << ETH_MACCR_PRELEN_Pos;
pub const ETH_MACCR_TE_Pos: u32 = 1;
pub const ETH_MACCR_TE_Msk: u32 = 0x1 << ETH_MACCR_TE_Pos;
pub const ETH_MACCR_TE: u32 = ETH_MACCR_TE_Msk;
pub const ETH_MACCR_RE_Pos: u32 = 0;
pub const ETH_MACCR_RE_Msk: u32 = 0x1 << ETH_MACCR_RE_Pos;
pub const ETH_MACCR_RE: u32 = ETH_MACCR_RE_Msk;
pub const ETH_MACECR_EIPG_Pos: u32 = 25;
pub const ETH_MACECR_EIPG_Msk: u32 = 0x1F << ETH_MACECR_EIPG_Pos;
pub const ETH_MACECR_EIPG: u32 = ETH_MACECR_EIPG_Msk;
pub const ETH_MACECR_EIPGEN_Pos: u32 = 24;
pub const ETH_MACECR_EIPGEN_Msk: u32 = 0x1 << ETH_MACECR_EIPGEN_Pos;
pub const ETH_MACECR_EIPGEN: u32 = ETH_MACECR_EIPGEN_Msk;
pub const ETH_MACECR_USP_Pos: u32 = 18;
pub const ETH_MACECR_USP_Msk: u32 = 0x1 << ETH_MACECR_USP_Pos;
pub const ETH_MACECR_USP: u32 = ETH_MACECR_USP_Msk;
pub const ETH_MACECR_SPEN_Pos: u32 = 17;
pub const ETH_MACECR_SPEN_Msk: u32 = 0x1 << ETH_MACECR_SPEN_Pos;
pub const ETH_MACECR_SPEN: u32 = ETH_MACECR_SPEN_Msk;
pub const ETH_MACECR_DCRCC_Pos: u32 = 16;
pub const ETH_MACECR_DCRCC_Msk: u32 = 0x1 << ETH_MACECR_DCRCC_Pos;
pub const ETH_MACECR_DCRCC: u32 = ETH_MACECR_DCRCC_Msk;
pub const ETH_MACECR_GPSL_Pos: u32 = 0;
pub const ETH_MACECR_GPSL_Msk: u32 = 0x3FFF << ETH_MACECR_GPSL_Pos;
pub const ETH_MACECR_GPSL: u32 = ETH_MACECR_GPSL_Msk;
pub const ETH_MACPFR_RA_Pos: u32 = 31;
pub const ETH_MACPFR_RA_Msk: u32 = 0x1 << ETH_MACPFR_RA_Pos;
pub const ETH_MACPFR_RA: u32 = ETH_MACPFR_RA_Msk;
pub const ETH_MACPFR_DNTU_Pos: u32 = 21;
pub const ETH_MACPFR_DNTU_Msk: u32 = 0x1 << ETH_MACPFR_DNTU_Pos;
pub const ETH_MACPFR_DNTU: u32 = ETH_MACPFR_DNTU_Msk;
pub const ETH_MACPFR_IPFE_Pos: u32 = 20;
pub const ETH_MACPFR_IPFE_Msk: u32 = 0x1 << ETH_MACPFR_IPFE_Pos;
pub const ETH_MACPFR_IPFE: u32 = ETH_MACPFR_IPFE_Msk;
pub const ETH_MACPFR_VTFE_Pos: u32 = 16;
pub const ETH_MACPFR_VTFE_Msk: u32 = 0x1 << ETH_MACPFR_VTFE_Pos;
pub const ETH_MACPFR_VTFE: u32 = ETH_MACPFR_VTFE_Msk;
pub const ETH_MACPFR_HPF_Pos: u32 = 10;
pub const ETH_MACPFR_HPF_Msk: u32 = 0x1 << ETH_MACPFR_HPF_Pos;
pub const ETH_MACPFR_HPF: u32 = ETH_MACPFR_HPF_Msk;
pub const ETH_MACPFR_SAF_Pos: u32 = 9;
pub const ETH_MACPFR_SAF_Msk: u32 = 0x1 << ETH_MACPFR_SAF_Pos;
pub const ETH_MACPFR_SAF: u32 = ETH_MACPFR_SAF_Msk;
pub const ETH_MACPFR_SAIF_Pos: u32 = 8;
pub const ETH_MACPFR_SAIF_Msk: u32 = 0x1 << ETH_MACPFR_SAIF_Pos;
pub const ETH_MACPFR_SAIF: u32 = ETH_MACPFR_SAIF_Msk;
pub const ETH_MACPFR_PCF_Pos: u32 = 6;
pub const ETH_MACPFR_PCF_Msk: u32 = 0x3 << ETH_MACPFR_PCF_Pos;
pub const ETH_MACPFR_PCF: u32 = ETH_MACPFR_PCF_Msk;
pub const ETH_MACPFR_PCF_BLOCKALL: u32 = uint32_t0x00000000;
pub const ETH_MACPFR_PCF_FORWARDALLEXCEPTPA_Pos: u32 = 6;
pub const ETH_MACPFR_PCF_FORWARDALLEXCEPTPA_Msk: u32 = 0x1 << ETH_MACPFR_PCF_FORWARDALLEXCEPTPA_Pos;
pub const ETH_MACPFR_PCF_FORWARDALLEXCEPTPA: u32 = ETH_MACPFR_PCF_FORWARDALLEXCEPTPA_Msk;
pub const ETH_MACPFR_PCF_FORWARDALL_Pos: u32 = 7;
pub const ETH_MACPFR_PCF_FORWARDALL_Msk: u32 = 0x1 << ETH_MACPFR_PCF_FORWARDALL_Pos;
pub const ETH_MACPFR_PCF_FORWARDALL: u32 = ETH_MACPFR_PCF_FORWARDALL_Msk;
pub const ETH_MACPFR_PCF_FORWARDPASSEDADDRFILTER_Pos: u32 = 6;
pub const ETH_MACPFR_PCF_FORWARDPASSEDADDRFILTER_Msk: u32 =
    0x3 << ETH_MACPFR_PCF_FORWARDPASSEDADDRFILTER_Pos;
pub const ETH_MACPFR_PCF_FORWARDPASSEDADDRFILTER: u32 = ETH_MACPFR_PCF_FORWARDPASSEDADDRFILTER_Msk;
pub const ETH_MACPFR_DBF_Pos: u32 = 5;
pub const ETH_MACPFR_DBF_Msk: u32 = 0x1 << ETH_MACPFR_DBF_Pos;
pub const ETH_MACPFR_DBF: u32 = ETH_MACPFR_DBF_Msk;
pub const ETH_MACPFR_PM_Pos: u32 = 4;
pub const ETH_MACPFR_PM_Msk: u32 = 0x1 << ETH_MACPFR_PM_Pos;
pub const ETH_MACPFR_PM: u32 = ETH_MACPFR_PM_Msk;
pub const ETH_MACPFR_DAIF_Pos: u32 = 3;
pub const ETH_MACPFR_DAIF_Msk: u32 = 0x1 << ETH_MACPFR_DAIF_Pos;
pub const ETH_MACPFR_DAIF: u32 = ETH_MACPFR_DAIF_Msk;
pub const ETH_MACPFR_HMC_Pos: u32 = 2;
pub const ETH_MACPFR_HMC_Msk: u32 = 0x1 << ETH_MACPFR_HMC_Pos;
pub const ETH_MACPFR_HMC: u32 = ETH_MACPFR_HMC_Msk;
pub const ETH_MACPFR_HUC_Pos: u32 = 1;
pub const ETH_MACPFR_HUC_Msk: u32 = 0x1 << ETH_MACPFR_HUC_Pos;
pub const ETH_MACPFR_HUC: u32 = ETH_MACPFR_HUC_Msk;
pub const ETH_MACPFR_PR_Pos: u32 = 0;
pub const ETH_MACPFR_PR_Msk: u32 = 0x1 << ETH_MACPFR_PR_Pos;
pub const ETH_MACPFR_PR: u32 = ETH_MACPFR_PR_Msk;
pub const ETH_MACWTR_PWE_Pos: u32 = 8;
pub const ETH_MACWTR_PWE_Msk: u32 = 0x1 << ETH_MACWTR_PWE_Pos;
pub const ETH_MACWTR_PWE: u32 = ETH_MACWTR_PWE_Msk;
pub const ETH_MACWTR_WTO_Pos: u32 = 0;
pub const ETH_MACWTR_WTO_Msk: u32 = 0xF << ETH_MACWTR_WTO_Pos;
pub const ETH_MACWTR_WTO: u32 = ETH_MACWTR_WTO_Msk;
pub const ETH_MACWTR_WTO_2KB: u32 = uint32_t0x00000000;
pub const ETH_MACWTR_WTO_3KB: u32 = uint32_t0x00000001;
pub const ETH_MACWTR_WTO_4KB: u32 = uint32_t0x00000002;
pub const ETH_MACWTR_WTO_5KB: u32 = uint32_t0x00000003;
pub const ETH_MACWTR_WTO_6KB: u32 = uint32_t0x00000004;
pub const ETH_MACWTR_WTO_7KB: u32 = uint32_t0x00000005;
pub const ETH_MACWTR_WTO_8KB: u32 = uint32_t0x00000006;
pub const ETH_MACWTR_WTO_9KB: u32 = uint32_t0x00000007;
pub const ETH_MACWTR_WTO_10KB: u32 = uint32_t0x00000008;
pub const ETH_MACWTR_WTO_11KB: u32 = uint32_t0x00000009;
pub const ETH_MACWTR_WTO_12KB: u32 = uint32_t0x0000000A;
pub const ETH_MACWTR_WTO_13KB: u32 = uint32_t0x0000000B;
pub const ETH_MACWTR_WTO_14KB: u32 = uint32_t0x0000000C;
pub const ETH_MACWTR_WTO_15KB: u32 = uint32_t0x0000000D;
pub const ETH_MACWTR_WTO_16KB: u32 = uint32_t0x0000000E;
pub const ETH_MACHTHR_HTH_Pos: u32 = 0;
pub const ETH_MACHTHR_HTH_Msk: u32 = 0xFFFFFFFF << ETH_MACHTHR_HTH_Pos;
pub const ETH_MACHTHR_HTH: u32 = ETH_MACHTHR_HTH_Msk;
pub const ETH_MACHTLR_HTL_Pos: u32 = 0;
pub const ETH_MACHTLR_HTL_Msk: u32 = 0xFFFFFFFF << ETH_MACHTLR_HTL_Pos;
pub const ETH_MACHTLR_HTL: u32 = ETH_MACHTLR_HTL_Msk;
pub const ETH_MACVTR_EIVLRXS_Pos: u32 = 31;
pub const ETH_MACVTR_EIVLRXS_Msk: u32 = 0x1 << ETH_MACVTR_EIVLRXS_Pos;
pub const ETH_MACVTR_EIVLRXS: u32 = ETH_MACVTR_EIVLRXS_Msk;
pub const ETH_MACVTR_EIVLS_Pos: u32 = 28;
pub const ETH_MACVTR_EIVLS_Msk: u32 = 0x3 << ETH_MACVTR_EIVLS_Pos;
pub const ETH_MACVTR_EIVLS: u32 = ETH_MACVTR_EIVLS_Msk;
pub const ETH_MACVTR_EIVLS_DONOTSTRIP: u32 = uint32_t0x00000000;
pub const ETH_MACVTR_EIVLS_STRIPIFPASS_Pos: u32 = 28;
pub const ETH_MACVTR_EIVLS_STRIPIFPASS_Msk: u32 = 0x1 << ETH_MACVTR_EIVLS_STRIPIFPASS_Pos;
pub const ETH_MACVTR_EIVLS_STRIPIFPASS: u32 = ETH_MACVTR_EIVLS_STRIPIFPASS_Msk;
pub const ETH_MACVTR_EIVLS_STRIPIFFAILS_Pos: u32 = 29;
pub const ETH_MACVTR_EIVLS_STRIPIFFAILS_Msk: u32 = 0x1 << ETH_MACVTR_EIVLS_STRIPIFFAILS_Pos;
pub const ETH_MACVTR_EIVLS_STRIPIFFAILS: u32 = ETH_MACVTR_EIVLS_STRIPIFFAILS_Msk;
pub const ETH_MACVTR_EIVLS_ALWAYSSTRIP_Pos: u32 = 28;
pub const ETH_MACVTR_EIVLS_ALWAYSSTRIP_Msk: u32 = 0x3 << ETH_MACVTR_EIVLS_ALWAYSSTRIP_Pos;
pub const ETH_MACVTR_EIVLS_ALWAYSSTRIP: u32 = ETH_MACVTR_EIVLS_ALWAYSSTRIP_Msk;
pub const ETH_MACVTR_ERIVLT_Pos: u32 = 27;
pub const ETH_MACVTR_ERIVLT_Msk: u32 = 0x1 << ETH_MACVTR_ERIVLT_Pos;
pub const ETH_MACVTR_ERIVLT: u32 = ETH_MACVTR_ERIVLT_Msk;
pub const ETH_MACVTR_EDVLP_Pos: u32 = 26;
pub const ETH_MACVTR_EDVLP_Msk: u32 = 0x1 << ETH_MACVTR_EDVLP_Pos;
pub const ETH_MACVTR_EDVLP: u32 = ETH_MACVTR_EDVLP_Msk;
pub const ETH_MACVTR_VTHM_Pos: u32 = 25;
pub const ETH_MACVTR_VTHM_Msk: u32 = 0x1 << ETH_MACVTR_VTHM_Pos;
pub const ETH_MACVTR_VTHM: u32 = ETH_MACVTR_VTHM_Msk;
pub const ETH_MACVTR_EVLRXS_Pos: u32 = 24;
pub const ETH_MACVTR_EVLRXS_Msk: u32 = 0x1 << ETH_MACVTR_EVLRXS_Pos;
pub const ETH_MACVTR_EVLRXS: u32 = ETH_MACVTR_EVLRXS_Msk;
pub const ETH_MACVTR_EVLS_Pos: u32 = 21;
pub const ETH_MACVTR_EVLS_Msk: u32 = 0x3 << ETH_MACVTR_EVLS_Pos;
pub const ETH_MACVTR_EVLS: u32 = ETH_MACVTR_EVLS_Msk;
pub const ETH_MACVTR_EVLS_DONOTSTRIP: u32 = uint32_t0x00000000;
pub const ETH_MACVTR_EVLS_STRIPIFPASS_Pos: u32 = 21;
pub const ETH_MACVTR_EVLS_STRIPIFPASS_Msk: u32 = 0x1 << ETH_MACVTR_EVLS_STRIPIFPASS_Pos;
pub const ETH_MACVTR_EVLS_STRIPIFPASS: u32 = ETH_MACVTR_EVLS_STRIPIFPASS_Msk;
pub const ETH_MACVTR_EVLS_STRIPIFFAILS_Pos: u32 = 22;
pub const ETH_MACVTR_EVLS_STRIPIFFAILS_Msk: u32 = 0x1 << ETH_MACVTR_EVLS_STRIPIFFAILS_Pos;
pub const ETH_MACVTR_EVLS_STRIPIFFAILS: u32 = ETH_MACVTR_EVLS_STRIPIFFAILS_Msk;
pub const ETH_MACVTR_EVLS_ALWAYSSTRIP_Pos: u32 = 21;
pub const ETH_MACVTR_EVLS_ALWAYSSTRIP_Msk: u32 = 0x3 << ETH_MACVTR_EVLS_ALWAYSSTRIP_Pos;
pub const ETH_MACVTR_EVLS_ALWAYSSTRIP: u32 = ETH_MACVTR_EVLS_ALWAYSSTRIP_Msk;
pub const ETH_MACVTR_DOVLTC_Pos: u32 = 20;
pub const ETH_MACVTR_DOVLTC_Msk: u32 = 0x1 << ETH_MACVTR_DOVLTC_Pos;
pub const ETH_MACVTR_DOVLTC: u32 = ETH_MACVTR_DOVLTC_Msk;
pub const ETH_MACVTR_ERSVLM_Pos: u32 = 19;
pub const ETH_MACVTR_ERSVLM_Msk: u32 = 0x1 << ETH_MACVTR_ERSVLM_Pos;
pub const ETH_MACVTR_ERSVLM: u32 = ETH_MACVTR_ERSVLM_Msk;
pub const ETH_MACVTR_ESVL_Pos: u32 = 18;
pub const ETH_MACVTR_ESVL_Msk: u32 = 0x1 << ETH_MACVTR_ESVL_Pos;
pub const ETH_MACVTR_ESVL: u32 = ETH_MACVTR_ESVL_Msk;
pub const ETH_MACVTR_VTIM_Pos: u32 = 17;
pub const ETH_MACVTR_VTIM_Msk: u32 = 0x1 << ETH_MACVTR_VTIM_Pos;
pub const ETH_MACVTR_VTIM: u32 = ETH_MACVTR_VTIM_Msk;
pub const ETH_MACVTR_ETV_Pos: u32 = 16;
pub const ETH_MACVTR_ETV_Msk: u32 = 0x1 << ETH_MACVTR_ETV_Pos;
pub const ETH_MACVTR_ETV: u32 = ETH_MACVTR_ETV_Msk;
pub const ETH_MACVTR_VL_Pos: u32 = 0;
pub const ETH_MACVTR_VL_Msk: u32 = 0xFFFF << ETH_MACVTR_VL_Pos;
pub const ETH_MACVTR_VL: u32 = ETH_MACVTR_VL_Msk;
pub const ETH_MACVTR_VL_UP_Pos: u32 = 13;
pub const ETH_MACVTR_VL_UP_Msk: u32 = 0x7 << ETH_MACVTR_VL_UP_Pos;
pub const ETH_MACVTR_VL_UP: u32 = ETH_MACVTR_VL_UP_Msk;
pub const ETH_MACVTR_VL_CFIDEI_Pos: u32 = 12;
pub const ETH_MACVTR_VL_CFIDEI_Msk: u32 = 0x1 << ETH_MACVTR_VL_CFIDEI_Pos;
pub const ETH_MACVTR_VL_CFIDEI: u32 = ETH_MACVTR_VL_CFIDEI_Msk;
pub const ETH_MACVTR_VL_VID_Pos: u32 = 0;
pub const ETH_MACVTR_VL_VID_Msk: u32 = 0xFFF << ETH_MACVTR_VL_VID_Pos;
pub const ETH_MACVTR_VL_VID: u32 = ETH_MACVTR_VL_VID_Msk;
pub const ETH_MACVHTR_VLHT_Pos: u32 = 0;
pub const ETH_MACVHTR_VLHT_Msk: u32 = 0xFFFF << ETH_MACVHTR_VLHT_Pos;
pub const ETH_MACVHTR_VLHT: u32 = ETH_MACVHTR_VLHT_Msk;
pub const ETH_MACVIR_VLTI_Pos: u32 = 20;
pub const ETH_MACVIR_VLTI_Msk: u32 = 0x1 << ETH_MACVIR_VLTI_Pos;
pub const ETH_MACVIR_VLTI: u32 = ETH_MACVIR_VLTI_Msk;
pub const ETH_MACVIR_CSVL_Pos: u32 = 19;
pub const ETH_MACVIR_CSVL_Msk: u32 = 0x1 << ETH_MACVIR_CSVL_Pos;
pub const ETH_MACVIR_CSVL: u32 = ETH_MACVIR_CSVL_Msk;
pub const ETH_MACVIR_VLP_Pos: u32 = 18;
pub const ETH_MACVIR_VLP_Msk: u32 = 0x1 << ETH_MACVIR_VLP_Pos;
pub const ETH_MACVIR_VLP: u32 = ETH_MACVIR_VLP_Msk;
pub const ETH_MACVIR_VLC_Pos: u32 = 16;
pub const ETH_MACVIR_VLC_Msk: u32 = 0x3 << ETH_MACVIR_VLC_Pos;
pub const ETH_MACVIR_VLC: u32 = ETH_MACVIR_VLC_Msk;
pub const ETH_MACVIR_VLC_NOVLANTAG: u32 = uint32_t0x00000000;
pub const ETH_MACVIR_VLC_VLANTAGDELETE_Pos: u32 = 16;
pub const ETH_MACVIR_VLC_VLANTAGDELETE_Msk: u32 = 0x1 << ETH_MACVIR_VLC_VLANTAGDELETE_Pos;
pub const ETH_MACVIR_VLC_VLANTAGDELETE: u32 = ETH_MACVIR_VLC_VLANTAGDELETE_Msk;
pub const ETH_MACVIR_VLC_VLANTAGINSERT_Pos: u32 = 17;
pub const ETH_MACVIR_VLC_VLANTAGINSERT_Msk: u32 = 0x1 << ETH_MACVIR_VLC_VLANTAGINSERT_Pos;
pub const ETH_MACVIR_VLC_VLANTAGINSERT: u32 = ETH_MACVIR_VLC_VLANTAGINSERT_Msk;
pub const ETH_MACVIR_VLC_VLANTAGREPLACE_Pos: u32 = 16;
pub const ETH_MACVIR_VLC_VLANTAGREPLACE_Msk: u32 = 0x3 << ETH_MACVIR_VLC_VLANTAGREPLACE_Pos;
pub const ETH_MACVIR_VLC_VLANTAGREPLACE: u32 = ETH_MACVIR_VLC_VLANTAGREPLACE_Msk;
pub const ETH_MACVIR_VLT_Pos: u32 = 0;
pub const ETH_MACVIR_VLT_Msk: u32 = 0xFFFF << ETH_MACVIR_VLT_Pos;
pub const ETH_MACVIR_VLT: u32 = ETH_MACVIR_VLT_Msk;
pub const ETH_MACVIR_VLT_UP_Pos: u32 = 13;
pub const ETH_MACVIR_VLT_UP_Msk: u32 = 0x7 << ETH_MACVIR_VLT_UP_Pos;
pub const ETH_MACVIR_VLT_UP: u32 = ETH_MACVIR_VLT_UP_Msk;
pub const ETH_MACVIR_VLT_CFIDEI_Pos: u32 = 12;
pub const ETH_MACVIR_VLT_CFIDEI_Msk: u32 = 0x1 << ETH_MACVIR_VLT_CFIDEI_Pos;
pub const ETH_MACVIR_VLT_CFIDEI: u32 = ETH_MACVIR_VLT_CFIDEI_Msk;
pub const ETH_MACVIR_VLT_VID_Pos: u32 = 0;
pub const ETH_MACVIR_VLT_VID_Msk: u32 = 0xFFF << ETH_MACVIR_VLT_VID_Pos;
pub const ETH_MACVIR_VLT_VID: u32 = ETH_MACVIR_VLT_VID_Msk;
pub const ETH_MACIVIR_VLTI_Pos: u32 = 20;
pub const ETH_MACIVIR_VLTI_Msk: u32 = 0x1 << ETH_MACIVIR_VLTI_Pos;
pub const ETH_MACIVIR_VLTI: u32 = ETH_MACIVIR_VLTI_Msk;
pub const ETH_MACIVIR_CSVL_Pos: u32 = 19;
pub const ETH_MACIVIR_CSVL_Msk: u32 = 0x1 << ETH_MACIVIR_CSVL_Pos;
pub const ETH_MACIVIR_CSVL: u32 = ETH_MACIVIR_CSVL_Msk;
pub const ETH_MACIVIR_VLP_Pos: u32 = 18;
pub const ETH_MACIVIR_VLP_Msk: u32 = 0x1 << ETH_MACIVIR_VLP_Pos;
pub const ETH_MACIVIR_VLP: u32 = ETH_MACIVIR_VLP_Msk;
pub const ETH_MACIVIR_VLC_Pos: u32 = 16;
pub const ETH_MACIVIR_VLC_Msk: u32 = 0x3 << ETH_MACIVIR_VLC_Pos;
pub const ETH_MACIVIR_VLC: u32 = ETH_MACIVIR_VLC_Msk;
pub const ETH_MACIVIR_VLC_NOVLANTAG: u32 = uint32_t0x00000000;
pub const ETH_MACIVIR_VLC_VLANTAGDELETE_Pos: u32 = 16;
pub const ETH_MACIVIR_VLC_VLANTAGDELETE_Msk: u32 = 0x1 << ETH_MACIVIR_VLC_VLANTAGDELETE_Pos;
pub const ETH_MACIVIR_VLC_VLANTAGDELETE: u32 = ETH_MACIVIR_VLC_VLANTAGDELETE_Msk;
pub const ETH_MACIVIR_VLC_VLANTAGINSERT_Pos: u32 = 17;
pub const ETH_MACIVIR_VLC_VLANTAGINSERT_Msk: u32 = 0x1 << ETH_MACIVIR_VLC_VLANTAGINSERT_Pos;
pub const ETH_MACIVIR_VLC_VLANTAGINSERT: u32 = ETH_MACIVIR_VLC_VLANTAGINSERT_Msk;
pub const ETH_MACIVIR_VLC_VLANTAGREPLACE_Pos: u32 = 16;
pub const ETH_MACIVIR_VLC_VLANTAGREPLACE_Msk: u32 = 0x3 << ETH_MACIVIR_VLC_VLANTAGREPLACE_Pos;
pub const ETH_MACIVIR_VLC_VLANTAGREPLACE: u32 = ETH_MACIVIR_VLC_VLANTAGREPLACE_Msk;
pub const ETH_MACIVIR_VLT_Pos: u32 = 0;
pub const ETH_MACIVIR_VLT_Msk: u32 = 0xFFFF << ETH_MACIVIR_VLT_Pos;
pub const ETH_MACIVIR_VLT: u32 = ETH_MACIVIR_VLT_Msk;
pub const ETH_MACIVIR_VLT_UP_Pos: u32 = 13;
pub const ETH_MACIVIR_VLT_UP_Msk: u32 = 0x7 << ETH_MACIVIR_VLT_UP_Pos;
pub const ETH_MACIVIR_VLT_UP: u32 = ETH_MACIVIR_VLT_UP_Msk;
pub const ETH_MACIVIR_VLT_CFIDEI_Pos: u32 = 12;
pub const ETH_MACIVIR_VLT_CFIDEI_Msk: u32 = 0x1 << ETH_MACIVIR_VLT_CFIDEI_Pos;
pub const ETH_MACIVIR_VLT_CFIDEI: u32 = ETH_MACIVIR_VLT_CFIDEI_Msk;
pub const ETH_MACIVIR_VLT_VID_Pos: u32 = 0;
pub const ETH_MACIVIR_VLT_VID_Msk: u32 = 0xFFF << ETH_MACIVIR_VLT_VID_Pos;
pub const ETH_MACIVIR_VLT_VID: u32 = ETH_MACIVIR_VLT_VID_Msk;
pub const ETH_MACTFCR_PT_Pos: u32 = 16;
pub const ETH_MACTFCR_PT_Msk: u32 = 0xFFFF << ETH_MACTFCR_PT_Pos;
pub const ETH_MACTFCR_PT: u32 = ETH_MACTFCR_PT_Msk;
pub const ETH_MACTFCR_DZPQ_Pos: u32 = 7;
pub const ETH_MACTFCR_DZPQ_Msk: u32 = 0x1 << ETH_MACTFCR_DZPQ_Pos;
pub const ETH_MACTFCR_DZPQ: u32 = ETH_MACTFCR_DZPQ_Msk;
pub const ETH_MACTFCR_PLT_Pos: u32 = 4;
pub const ETH_MACTFCR_PLT_Msk: u32 = 0x7 << ETH_MACTFCR_PLT_Pos;
pub const ETH_MACTFCR_PLT: u32 = ETH_MACTFCR_PLT_Msk;
pub const ETH_MACTFCR_PLT_MINUS4: u32 = uint32_t0x00000000;
pub const ETH_MACTFCR_PLT_MINUS28_Pos: u32 = 4;
pub const ETH_MACTFCR_PLT_MINUS28_Msk: u32 = 0x1 << ETH_MACTFCR_PLT_MINUS28_Pos;
pub const ETH_MACTFCR_PLT_MINUS28: u32 = ETH_MACTFCR_PLT_MINUS28_Msk;
pub const ETH_MACTFCR_PLT_MINUS36_Pos: u32 = 5;
pub const ETH_MACTFCR_PLT_MINUS36_Msk: u32 = 0x1 << ETH_MACTFCR_PLT_MINUS36_Pos;
pub const ETH_MACTFCR_PLT_MINUS36: u32 = ETH_MACTFCR_PLT_MINUS36_Msk;
pub const ETH_MACTFCR_PLT_MINUS144_Pos: u32 = 4;
pub const ETH_MACTFCR_PLT_MINUS144_Msk: u32 = 0x3 << ETH_MACTFCR_PLT_MINUS144_Pos;
pub const ETH_MACTFCR_PLT_MINUS144: u32 = ETH_MACTFCR_PLT_MINUS144_Msk;
pub const ETH_MACTFCR_PLT_MINUS256_Pos: u32 = 6;
pub const ETH_MACTFCR_PLT_MINUS256_Msk: u32 = 0x1 << ETH_MACTFCR_PLT_MINUS256_Pos;
pub const ETH_MACTFCR_PLT_MINUS256: u32 = ETH_MACTFCR_PLT_MINUS256_Msk;
pub const ETH_MACTFCR_PLT_MINUS512_Pos: u32 = 4;
pub const ETH_MACTFCR_PLT_MINUS512_Msk: u32 = 0x5 << ETH_MACTFCR_PLT_MINUS512_Pos;
pub const ETH_MACTFCR_PLT_MINUS512: u32 = ETH_MACTFCR_PLT_MINUS512_Msk;
pub const ETH_MACTFCR_TFE_Pos: u32 = 1;
pub const ETH_MACTFCR_TFE_Msk: u32 = 0x1 << ETH_MACTFCR_TFE_Pos;
pub const ETH_MACTFCR_TFE: u32 = ETH_MACTFCR_TFE_Msk;
pub const ETH_MACTFCR_FCB_Pos: u32 = 0;
pub const ETH_MACTFCR_FCB_Msk: u32 = 0x1 << ETH_MACTFCR_FCB_Pos;
pub const ETH_MACTFCR_FCB: u32 = ETH_MACTFCR_FCB_Msk;
pub const ETH_MACRFCR_UP_Pos: u32 = 1;
pub const ETH_MACRFCR_UP_Msk: u32 = 0x1 << ETH_MACRFCR_UP_Pos;
pub const ETH_MACRFCR_UP: u32 = ETH_MACRFCR_UP_Msk;
pub const ETH_MACRFCR_RFE_Pos: u32 = 0;
pub const ETH_MACRFCR_RFE_Msk: u32 = 0x1 << ETH_MACRFCR_RFE_Pos;
pub const ETH_MACRFCR_RFE: u32 = ETH_MACRFCR_RFE_Msk;
pub const ETH_MACISR_RXSTSIS_Pos: u32 = 14;
pub const ETH_MACISR_RXSTSIS_Msk: u32 = 0x1 << ETH_MACISR_RXSTSIS_Pos;
pub const ETH_MACISR_RXSTSIS: u32 = ETH_MACISR_RXSTSIS_Msk;
pub const ETH_MACISR_TXSTSIS_Pos: u32 = 13;
pub const ETH_MACISR_TXSTSIS_Msk: u32 = 0x1 << ETH_MACISR_TXSTSIS_Pos;
pub const ETH_MACISR_TXSTSIS: u32 = ETH_MACISR_TXSTSIS_Msk;
pub const ETH_MACISR_TSIS_Pos: u32 = 12;
pub const ETH_MACISR_TSIS_Msk: u32 = 0x1 << ETH_MACISR_TSIS_Pos;
pub const ETH_MACISR_TSIS: u32 = ETH_MACISR_TSIS_Msk;
pub const ETH_MACISR_MMCTXIS_Pos: u32 = 10;
pub const ETH_MACISR_MMCTXIS_Msk: u32 = 0x1 << ETH_MACISR_MMCTXIS_Pos;
pub const ETH_MACISR_MMCTXIS: u32 = ETH_MACISR_MMCTXIS_Msk;
pub const ETH_MACISR_MMCRXIS_Pos: u32 = 9;
pub const ETH_MACISR_MMCRXIS_Msk: u32 = 0x1 << ETH_MACISR_MMCRXIS_Pos;
pub const ETH_MACISR_MMCRXIS: u32 = ETH_MACISR_MMCRXIS_Msk;
pub const ETH_MACISR_MMCIS_Pos: u32 = 8;
pub const ETH_MACISR_MMCIS_Msk: u32 = 0x1 << ETH_MACISR_MMCIS_Pos;
pub const ETH_MACISR_MMCIS: u32 = ETH_MACISR_MMCIS_Msk;
pub const ETH_MACISR_LPIIS_Pos: u32 = 5;
pub const ETH_MACISR_LPIIS_Msk: u32 = 0x1 << ETH_MACISR_LPIIS_Pos;
pub const ETH_MACISR_LPIIS: u32 = ETH_MACISR_LPIIS_Msk;
pub const ETH_MACISR_PMTIS_Pos: u32 = 4;
pub const ETH_MACISR_PMTIS_Msk: u32 = 0x1 << ETH_MACISR_PMTIS_Pos;
pub const ETH_MACISR_PMTIS: u32 = ETH_MACISR_PMTIS_Msk;
pub const ETH_MACISR_PHYIS_Pos: u32 = 3;
pub const ETH_MACISR_PHYIS_Msk: u32 = 0x1 << ETH_MACISR_PHYIS_Pos;
pub const ETH_MACISR_PHYIS: u32 = ETH_MACISR_PHYIS_Msk;
pub const ETH_MACIER_RXSTSIE_Pos: u32 = 14;
pub const ETH_MACIER_RXSTSIE_Msk: u32 = 0x1 << ETH_MACIER_RXSTSIE_Pos;
pub const ETH_MACIER_RXSTSIE: u32 = ETH_MACIER_RXSTSIE_Msk;
pub const ETH_MACIER_TXSTSIE_Pos: u32 = 13;
pub const ETH_MACIER_TXSTSIE_Msk: u32 = 0x1 << ETH_MACIER_TXSTSIE_Pos;
pub const ETH_MACIER_TXSTSIE: u32 = ETH_MACIER_TXSTSIE_Msk;
pub const ETH_MACIER_TSIE_Pos: u32 = 12;
pub const ETH_MACIER_TSIE_Msk: u32 = 0x1 << ETH_MACIER_TSIE_Pos;
pub const ETH_MACIER_TSIE: u32 = ETH_MACIER_TSIE_Msk;
pub const ETH_MACIER_LPIIE_Pos: u32 = 5;
pub const ETH_MACIER_LPIIE_Msk: u32 = 0x1 << ETH_MACIER_LPIIE_Pos;
pub const ETH_MACIER_LPIIE: u32 = ETH_MACIER_LPIIE_Msk;
pub const ETH_MACIER_PMTIE_Pos: u32 = 4;
pub const ETH_MACIER_PMTIE_Msk: u32 = 0x1 << ETH_MACIER_PMTIE_Pos;
pub const ETH_MACIER_PMTIE: u32 = ETH_MACIER_PMTIE_Msk;
pub const ETH_MACIER_PHYIE_Pos: u32 = 3;
pub const ETH_MACIER_PHYIE_Msk: u32 = 0x1 << ETH_MACIER_PHYIE_Pos;
pub const ETH_MACIER_PHYIE: u32 = ETH_MACIER_PHYIE_Msk;
pub const ETH_MACRXTXSR_RWT_Pos: u32 = 8;
pub const ETH_MACRXTXSR_RWT_Msk: u32 = 0x1 << ETH_MACRXTXSR_RWT_Pos;
pub const ETH_MACRXTXSR_RWT: u32 = ETH_MACRXTXSR_RWT_Msk;
pub const ETH_MACRXTXSR_EXCOL_Pos: u32 = 5;
pub const ETH_MACRXTXSR_EXCOL_Msk: u32 = 0x1 << ETH_MACRXTXSR_EXCOL_Pos;
pub const ETH_MACRXTXSR_EXCOL: u32 = ETH_MACRXTXSR_EXCOL_Msk;
pub const ETH_MACRXTXSR_LCOL_Pos: u32 = 4;
pub const ETH_MACRXTXSR_LCOL_Msk: u32 = 0x1 << ETH_MACRXTXSR_LCOL_Pos;
pub const ETH_MACRXTXSR_LCOL: u32 = ETH_MACRXTXSR_LCOL_Msk;
pub const ETH_MACRXTXSR_EXDEF_Pos: u32 = 3;
pub const ETH_MACRXTXSR_EXDEF_Msk: u32 = 0x1 << ETH_MACRXTXSR_EXDEF_Pos;
pub const ETH_MACRXTXSR_EXDEF: u32 = ETH_MACRXTXSR_EXDEF_Msk;
pub const ETH_MACRXTXSR_LCARR_Pos: u32 = 2;
pub const ETH_MACRXTXSR_LCARR_Msk: u32 = 0x1 << ETH_MACRXTXSR_LCARR_Pos;
pub const ETH_MACRXTXSR_LCARR: u32 = ETH_MACRXTXSR_LCARR_Msk;
pub const ETH_MACRXTXSR_NCARR_Pos: u32 = 1;
pub const ETH_MACRXTXSR_NCARR_Msk: u32 = 0x1 << ETH_MACRXTXSR_NCARR_Pos;
pub const ETH_MACRXTXSR_NCARR: u32 = ETH_MACRXTXSR_NCARR_Msk;
pub const ETH_MACRXTXSR_TJT_Pos: u32 = 0;
pub const ETH_MACRXTXSR_TJT_Msk: u32 = 0x1 << ETH_MACRXTXSR_TJT_Pos;
pub const ETH_MACRXTXSR_TJT: u32 = ETH_MACRXTXSR_TJT_Msk;
pub const ETH_MACPCSR_RWKFILTRST_Pos: u32 = 31;
pub const ETH_MACPCSR_RWKFILTRST_Msk: u32 = 0x1 << ETH_MACPCSR_RWKFILTRST_Pos;
pub const ETH_MACPCSR_RWKFILTRST: u32 = ETH_MACPCSR_RWKFILTRST_Msk;
pub const ETH_MACPCSR_RWKPTR_Pos: u32 = 24;
pub const ETH_MACPCSR_RWKPTR_Msk: u32 = 0x1F << ETH_MACPCSR_RWKPTR_Pos;
pub const ETH_MACPCSR_RWKPTR: u32 = ETH_MACPCSR_RWKPTR_Msk;
pub const ETH_MACPCSR_RWKPFE_Pos: u32 = 10;
pub const ETH_MACPCSR_RWKPFE_Msk: u32 = 0x1 << ETH_MACPCSR_RWKPFE_Pos;
pub const ETH_MACPCSR_RWKPFE: u32 = ETH_MACPCSR_RWKPFE_Msk;
pub const ETH_MACPCSR_GLBLUCAST_Pos: u32 = 9;
pub const ETH_MACPCSR_GLBLUCAST_Msk: u32 = 0x1 << ETH_MACPCSR_GLBLUCAST_Pos;
pub const ETH_MACPCSR_GLBLUCAST: u32 = ETH_MACPCSR_GLBLUCAST_Msk;
pub const ETH_MACPCSR_RWKPRCVD_Pos: u32 = 6;
pub const ETH_MACPCSR_RWKPRCVD_Msk: u32 = 0x1 << ETH_MACPCSR_RWKPRCVD_Pos;
pub const ETH_MACPCSR_RWKPRCVD: u32 = ETH_MACPCSR_RWKPRCVD_Msk;
pub const ETH_MACPCSR_MGKPRCVD_Pos: u32 = 5;
pub const ETH_MACPCSR_MGKPRCVD_Msk: u32 = 0x1 << ETH_MACPCSR_MGKPRCVD_Pos;
pub const ETH_MACPCSR_MGKPRCVD: u32 = ETH_MACPCSR_MGKPRCVD_Msk;
pub const ETH_MACPCSR_RWKPKTEN_Pos: u32 = 2;
pub const ETH_MACPCSR_RWKPKTEN_Msk: u32 = 0x1 << ETH_MACPCSR_RWKPKTEN_Pos;
pub const ETH_MACPCSR_RWKPKTEN: u32 = ETH_MACPCSR_RWKPKTEN_Msk;
pub const ETH_MACPCSR_MGKPKTEN_Pos: u32 = 1;
pub const ETH_MACPCSR_MGKPKTEN_Msk: u32 = 0x1 << ETH_MACPCSR_MGKPKTEN_Pos;
pub const ETH_MACPCSR_MGKPKTEN: u32 = ETH_MACPCSR_MGKPKTEN_Msk;
pub const ETH_MACPCSR_PWRDWN_Pos: u32 = 0;
pub const ETH_MACPCSR_PWRDWN_Msk: u32 = 0x1 << ETH_MACPCSR_PWRDWN_Pos;
pub const ETH_MACPCSR_PWRDWN: u32 = ETH_MACPCSR_PWRDWN_Msk;
pub const ETH_MACRWUPFR_D_Pos: u32 = 0;
pub const ETH_MACRWUPFR_D_Msk: u32 = 0xFFFFFFFF << ETH_MACRWUPFR_D_Pos;
pub const ETH_MACRWUPFR_D: u32 = ETH_MACRWUPFR_D_Msk;
pub const ETH_MACLCSR_LPITCSE_Pos: u32 = 21;
pub const ETH_MACLCSR_LPITCSE_Msk: u32 = 0x1 << ETH_MACLCSR_LPITCSE_Pos;
pub const ETH_MACLCSR_LPITCSE: u32 = ETH_MACLCSR_LPITCSE_Msk;
pub const ETH_MACLCSR_LPITE_Pos: u32 = 20;
pub const ETH_MACLCSR_LPITE_Msk: u32 = 0x1 << ETH_MACLCSR_LPITE_Pos;
pub const ETH_MACLCSR_LPITE: u32 = ETH_MACLCSR_LPITE_Msk;
pub const ETH_MACLCSR_LPITXA_Pos: u32 = 19;
pub const ETH_MACLCSR_LPITXA_Msk: u32 = 0x1 << ETH_MACLCSR_LPITXA_Pos;
pub const ETH_MACLCSR_LPITXA: u32 = ETH_MACLCSR_LPITXA_Msk;
pub const ETH_MACLCSR_PLS_Pos: u32 = 17;
pub const ETH_MACLCSR_PLS_Msk: u32 = 0x1 << ETH_MACLCSR_PLS_Pos;
pub const ETH_MACLCSR_PLS: u32 = ETH_MACLCSR_PLS_Msk;
pub const ETH_MACLCSR_LPIEN_Pos: u32 = 16;
pub const ETH_MACLCSR_LPIEN_Msk: u32 = 0x1 << ETH_MACLCSR_LPIEN_Pos;
pub const ETH_MACLCSR_LPIEN: u32 = ETH_MACLCSR_LPIEN_Msk;
pub const ETH_MACLCSR_RLPIST_Pos: u32 = 9;
pub const ETH_MACLCSR_RLPIST_Msk: u32 = 0x1 << ETH_MACLCSR_RLPIST_Pos;
pub const ETH_MACLCSR_RLPIST: u32 = ETH_MACLCSR_RLPIST_Msk;
pub const ETH_MACLCSR_TLPIST_Pos: u32 = 8;
pub const ETH_MACLCSR_TLPIST_Msk: u32 = 0x1 << ETH_MACLCSR_TLPIST_Pos;
pub const ETH_MACLCSR_TLPIST: u32 = ETH_MACLCSR_TLPIST_Msk;
pub const ETH_MACLCSR_RLPIEX_Pos: u32 = 3;
pub const ETH_MACLCSR_RLPIEX_Msk: u32 = 0x1 << ETH_MACLCSR_RLPIEX_Pos;
pub const ETH_MACLCSR_RLPIEX: u32 = ETH_MACLCSR_RLPIEX_Msk;
pub const ETH_MACLCSR_RLPIEN_Pos: u32 = 2;
pub const ETH_MACLCSR_RLPIEN_Msk: u32 = 0x1 << ETH_MACLCSR_RLPIEN_Pos;
pub const ETH_MACLCSR_RLPIEN: u32 = ETH_MACLCSR_RLPIEN_Msk;
pub const ETH_MACLCSR_TLPIEX_Pos: u32 = 1;
pub const ETH_MACLCSR_TLPIEX_Msk: u32 = 0x1 << ETH_MACLCSR_TLPIEX_Pos;
pub const ETH_MACLCSR_TLPIEX: u32 = ETH_MACLCSR_TLPIEX_Msk;
pub const ETH_MACLCSR_TLPIEN_Pos: u32 = 0;
pub const ETH_MACLCSR_TLPIEN_Msk: u32 = 0x1 << ETH_MACLCSR_TLPIEN_Pos;
pub const ETH_MACLCSR_TLPIEN: u32 = ETH_MACLCSR_TLPIEN_Msk;
pub const ETH_MACLTCR_LST_Pos: u32 = 16;
pub const ETH_MACLTCR_LST_Msk: u32 = 0x3FF << ETH_MACLTCR_LST_Pos;
pub const ETH_MACLTCR_LST: u32 = ETH_MACLTCR_LST_Msk;
pub const ETH_MACLTCR_TWT_Pos: u32 = 0;
pub const ETH_MACLTCR_TWT_Msk: u32 = 0xFFFF << ETH_MACLTCR_TWT_Pos;
pub const ETH_MACLTCR_TWT: u32 = ETH_MACLTCR_TWT_Msk;
pub const ETH_MACLETR_LPIET_Pos: u32 = 0;
pub const ETH_MACLETR_LPIET_Msk: u32 = 0xFFFFF << ETH_MACLETR_LPIET_Pos;
pub const ETH_MACLETR_LPIET: u32 = ETH_MACLETR_LPIET_Msk;
pub const ETH_MAC1USTCR_TIC1USCNTR_Pos: u32 = 0;
pub const ETH_MAC1USTCR_TIC1USCNTR_Msk: u32 = 0xFFF << ETH_MAC1USTCR_TIC1USCNTR_Pos;
pub const ETH_MAC1USTCR_TIC1USCNTR: u32 = ETH_MAC1USTCR_TIC1USCNTR_Msk;
pub const ETH_MACVR_USERVER_Pos: u32 = 8;
pub const ETH_MACVR_USERVER_Msk: u32 = 0xFF << ETH_MACVR_USERVER_Pos;
pub const ETH_MACVR_USERVER: u32 = ETH_MACVR_USERVER_Msk;
pub const ETH_MACVR_SNPSVER_Pos: u32 = 0;
pub const ETH_MACVR_SNPSVER_Msk: u32 = 0xFF << ETH_MACVR_SNPSVER_Pos;
pub const ETH_MACVR_SNPSVER: u32 = ETH_MACVR_SNPSVER_Msk;
pub const ETH_MACDR_TFCSTS_Pos: u32 = 17;
pub const ETH_MACDR_TFCSTS_Msk: u32 = 0x3 << ETH_MACDR_TFCSTS_Pos;
pub const ETH_MACDR_TFCSTS: u32 = ETH_MACDR_TFCSTS_Msk;
pub const ETH_MACDR_TFCSTS_IDLE: u32 = uint32_t0x00000000;
pub const ETH_MACDR_TFCSTS_WAIT_Pos: u32 = 17;
pub const ETH_MACDR_TFCSTS_WAIT_Msk: u32 = 0x1 << ETH_MACDR_TFCSTS_WAIT_Pos;
pub const ETH_MACDR_TFCSTS_WAIT: u32 = ETH_MACDR_TFCSTS_WAIT_Msk;
pub const ETH_MACDR_TFCSTS_GENERATEPCP_Pos: u32 = 18;
pub const ETH_MACDR_TFCSTS_GENERATEPCP_Msk: u32 = 0x1 << ETH_MACDR_TFCSTS_GENERATEPCP_Pos;
pub const ETH_MACDR_TFCSTS_GENERATEPCP: u32 = ETH_MACDR_TFCSTS_GENERATEPCP_Msk;
pub const ETH_MACDR_TFCSTS_TRASFERIP_Pos: u32 = 17;
pub const ETH_MACDR_TFCSTS_TRASFERIP_Msk: u32 = 0x3 << ETH_MACDR_TFCSTS_TRASFERIP_Pos;
pub const ETH_MACDR_TFCSTS_TRASFERIP: u32 = ETH_MACDR_TFCSTS_TRASFERIP_Msk;
pub const ETH_MACDR_TPESTS_Pos: u32 = 16;
pub const ETH_MACDR_TPESTS_Msk: u32 = 0x1 << ETH_MACDR_TPESTS_Pos;
pub const ETH_MACDR_TPESTS: u32 = ETH_MACDR_TPESTS_Msk;
pub const ETH_MACDR_RFCFCSTS_Pos: u32 = 1;
pub const ETH_MACDR_RFCFCSTS_Msk: u32 = 0x3 << ETH_MACDR_RFCFCSTS_Pos;
pub const ETH_MACDR_RFCFCSTS: u32 = ETH_MACDR_RFCFCSTS_Msk;
pub const ETH_MACDR_RPESTS_Pos: u32 = 0;
pub const ETH_MACDR_RPESTS_Msk: u32 = 0x1 << ETH_MACDR_RPESTS_Pos;
pub const ETH_MACDR_RPESTS: u32 = ETH_MACDR_RPESTS_Msk;
pub const ETH_MACHWF0R_ACTPHYSEL_Pos: u32 = 28;
pub const ETH_MACHWF0R_ACTPHYSEL_Msk: u32 = 0x7 << ETH_MACHWF0R_ACTPHYSEL_Pos;
pub const ETH_MACHWF0R_ACTPHYSEL: u32 = ETH_MACHWF0R_ACTPHYSEL_Msk;
pub const ETH_MACHWF0R_ACTPHYSEL_MII: u32 = uint32_t0x00000000;
pub const ETH_MACHWF0R_ACTPHYSEL_RMII_Pos: u32 = 30;
pub const ETH_MACHWF0R_ACTPHYSEL_RMII_Msk: u32 = 0x1 << ETH_MACHWF0R_ACTPHYSEL_RMII_Pos;
pub const ETH_MACHWF0R_ACTPHYSEL_RMII: u32 = ETH_MACHWF0R_ACTPHYSEL_RMII_Msk;
pub const ETH_MACHWF0R_ACTPHYSEL_REVMII_Pos: u32 = 28;
pub const ETH_MACHWF0R_ACTPHYSEL_REVMII_Msk: u32 = 0x7 << ETH_MACHWF0R_ACTPHYSEL_REVMII_Pos;
pub const ETH_MACHWF0R_ACTPHYSEL_REVMII: u32 = ETH_MACHWF0R_ACTPHYSEL_REVMII_Msk;
pub const ETH_MACHWF0R_SAVLANINS_Pos: u32 = 27;
pub const ETH_MACHWF0R_SAVLANINS_Msk: u32 = 0x1 << ETH_MACHWF0R_SAVLANINS_Pos;
pub const ETH_MACHWF0R_SAVLANINS: u32 = ETH_MACHWF0R_SAVLANINS_Msk;
pub const ETH_MACHWF0R_TSSTSSEL_Pos: u32 = 25;
pub const ETH_MACHWF0R_TSSTSSEL_Msk: u32 = 0x3 << ETH_MACHWF0R_TSSTSSEL_Pos;
pub const ETH_MACHWF0R_TSSTSSEL: u32 = ETH_MACHWF0R_TSSTSSEL_Msk;
pub const ETH_MACHWF0R_TSSTSSEL_INTERNAL_Pos: u32 = 25;
pub const ETH_MACHWF0R_TSSTSSEL_INTERNAL_Msk: u32 = 0x1 << ETH_MACHWF0R_TSSTSSEL_INTERNAL_Pos;
pub const ETH_MACHWF0R_TSSTSSEL_INTERNAL: u32 = ETH_MACHWF0R_TSSTSSEL_INTERNAL_Msk;
pub const ETH_MACHWF0R_TSSTSSEL_EXTERNAL_Pos: u32 = 26;
pub const ETH_MACHWF0R_TSSTSSEL_EXTERNAL_Msk: u32 = 0x1 << ETH_MACHWF0R_TSSTSSEL_EXTERNAL_Pos;
pub const ETH_MACHWF0R_TSSTSSEL_EXTERNAL: u32 = ETH_MACHWF0R_TSSTSSEL_EXTERNAL_Msk;
pub const ETH_MACHWF0R_TSSTSSEL_BOTH_Pos: u32 = 25;
pub const ETH_MACHWF0R_TSSTSSEL_BOTH_Msk: u32 = 0x3 << ETH_MACHWF0R_TSSTSSEL_BOTH_Pos;
pub const ETH_MACHWF0R_TSSTSSEL_BOTH: u32 = ETH_MACHWF0R_TSSTSSEL_BOTH_Msk;
pub const ETH_MACHWF0R_MACADR64SEL_Pos: u32 = 24;
pub const ETH_MACHWF0R_MACADR64SEL_Msk: u32 = 0x1 << ETH_MACHWF0R_MACADR64SEL_Pos;
pub const ETH_MACHWF0R_MACADR64SEL: u32 = ETH_MACHWF0R_MACADR64SEL_Msk;
pub const ETH_MACHWF0R_MACADR32SEL_Pos: u32 = 23;
pub const ETH_MACHWF0R_MACADR32SEL_Msk: u32 = 0x1 << ETH_MACHWF0R_MACADR32SEL_Pos;
pub const ETH_MACHWF0R_MACADR32SEL: u32 = ETH_MACHWF0R_MACADR32SEL_Msk;
pub const ETH_MACHWF0R_ADDMACADRSEL_Pos: u32 = 18;
pub const ETH_MACHWF0R_ADDMACADRSEL_Msk: u32 = 0x1F << ETH_MACHWF0R_ADDMACADRSEL_Pos;
pub const ETH_MACHWF0R_ADDMACADRSEL: u32 = ETH_MACHWF0R_ADDMACADRSEL_Msk;
pub const ETH_MACHWF0R_RXCOESEL_Pos: u32 = 16;
pub const ETH_MACHWF0R_RXCOESEL_Msk: u32 = 0x1 << ETH_MACHWF0R_RXCOESEL_Pos;
pub const ETH_MACHWF0R_RXCOESEL: u32 = ETH_MACHWF0R_RXCOESEL_Msk;
pub const ETH_MACHWF0R_TXCOESEL_Pos: u32 = 14;
pub const ETH_MACHWF0R_TXCOESEL_Msk: u32 = 0x1 << ETH_MACHWF0R_TXCOESEL_Pos;
pub const ETH_MACHWF0R_TXCOESEL: u32 = ETH_MACHWF0R_TXCOESEL_Msk;
pub const ETH_MACHWF0R_EEESEL_Pos: u32 = 13;
pub const ETH_MACHWF0R_EEESEL_Msk: u32 = 0x1 << ETH_MACHWF0R_EEESEL_Pos;
pub const ETH_MACHWF0R_EEESEL: u32 = ETH_MACHWF0R_EEESEL_Msk;
pub const ETH_MACHWF0R_TSSEL_Pos: u32 = 12;
pub const ETH_MACHWF0R_TSSEL_Msk: u32 = 0x1 << ETH_MACHWF0R_TSSEL_Pos;
pub const ETH_MACHWF0R_TSSEL: u32 = ETH_MACHWF0R_TSSEL_Msk;
pub const ETH_MACHWF0R_ARPOFFSEL_Pos: u32 = 9;
pub const ETH_MACHWF0R_ARPOFFSEL_Msk: u32 = 0x1 << ETH_MACHWF0R_ARPOFFSEL_Pos;
pub const ETH_MACHWF0R_ARPOFFSEL: u32 = ETH_MACHWF0R_ARPOFFSEL_Msk;
pub const ETH_MACHWF0R_MMCSEL_Pos: u32 = 8;
pub const ETH_MACHWF0R_MMCSEL_Msk: u32 = 0x1 << ETH_MACHWF0R_MMCSEL_Pos;
pub const ETH_MACHWF0R_MMCSEL: u32 = ETH_MACHWF0R_MMCSEL_Msk;
pub const ETH_MACHWF0R_MGKSEL_Pos: u32 = 7;
pub const ETH_MACHWF0R_MGKSEL_Msk: u32 = 0x1 << ETH_MACHWF0R_MGKSEL_Pos;
pub const ETH_MACHWF0R_MGKSEL: u32 = ETH_MACHWF0R_MGKSEL_Msk;
pub const ETH_MACHWF0R_RWKSEL_Pos: u32 = 6;
pub const ETH_MACHWF0R_RWKSEL_Msk: u32 = 0x1 << ETH_MACHWF0R_RWKSEL_Pos;
pub const ETH_MACHWF0R_RWKSEL: u32 = ETH_MACHWF0R_RWKSEL_Msk;
pub const ETH_MACHWF0R_SMASEL_Pos: u32 = 5;
pub const ETH_MACHWF0R_SMASEL_Msk: u32 = 0x1 << ETH_MACHWF0R_SMASEL_Pos;
pub const ETH_MACHWF0R_SMASEL: u32 = ETH_MACHWF0R_SMASEL_Msk;
pub const ETH_MACHWF0R_VLHASH_Pos: u32 = 4;
pub const ETH_MACHWF0R_VLHASH_Msk: u32 = 0x1 << ETH_MACHWF0R_VLHASH_Pos;
pub const ETH_MACHWF0R_VLHASH: u32 = ETH_MACHWF0R_VLHASH_Msk;
pub const ETH_MACHWF0R_PCSSEL_Pos: u32 = 3;
pub const ETH_MACHWF0R_PCSSEL_Msk: u32 = 0x1 << ETH_MACHWF0R_PCSSEL_Pos;
pub const ETH_MACHWF0R_PCSSEL: u32 = ETH_MACHWF0R_PCSSEL_Msk;
pub const ETH_MACHWF0R_HDSEL_Pos: u32 = 2;
pub const ETH_MACHWF0R_HDSEL_Msk: u32 = 0x1 << ETH_MACHWF0R_HDSEL_Pos;
pub const ETH_MACHWF0R_HDSEL: u32 = ETH_MACHWF0R_HDSEL_Msk;
pub const ETH_MACHWF0R_GMIISEL_Pos: u32 = 1;
pub const ETH_MACHWF0R_GMIISEL_Msk: u32 = 0x1 << ETH_MACHWF0R_GMIISEL_Pos;
pub const ETH_MACHWF0R_GMIISEL: u32 = ETH_MACHWF0R_GMIISEL_Msk;
pub const ETH_MACHWF0R_MIISEL_Pos: u32 = 0;
pub const ETH_MACHWF0R_MIISEL_Msk: u32 = 0x1 << ETH_MACHWF0R_MIISEL_Pos;
pub const ETH_MACHWF0R_MIISEL: u32 = ETH_MACHWF0R_MIISEL_Msk;
pub const ETH_MACHWF1R_L3L4FNUM_Pos: u32 = 27;
pub const ETH_MACHWF1R_L3L4FNUM_Msk: u32 = 0xF << ETH_MACHWF1R_L3L4FNUM_Pos;
pub const ETH_MACHWF1R_L3L4FNUM: u32 = ETH_MACHWF1R_L3L4FNUM_Msk;
pub const ETH_MACHWF1R_HASHTBLSZ_Pos: u32 = 24;
pub const ETH_MACHWF1R_HASHTBLSZ_Msk: u32 = 0x3 << ETH_MACHWF1R_HASHTBLSZ_Pos;
pub const ETH_MACHWF1R_HASHTBLSZ: u32 = ETH_MACHWF1R_HASHTBLSZ_Msk;
pub const ETH_MACHWF1R_AVSEL_Pos: u32 = 20;
pub const ETH_MACHWF1R_AVSEL_Msk: u32 = 0x1 << ETH_MACHWF1R_AVSEL_Pos;
pub const ETH_MACHWF1R_AVSEL: u32 = ETH_MACHWF1R_AVSEL_Msk;
pub const ETH_MACHWF1R_DBGMEMA_Pos: u32 = 19;
pub const ETH_MACHWF1R_DBGMEMA_Msk: u32 = 0x1 << ETH_MACHWF1R_DBGMEMA_Pos;
pub const ETH_MACHWF1R_DBGMEMA: u32 = ETH_MACHWF1R_DBGMEMA_Msk;
pub const ETH_MACHWF1R_TSOEN_Pos: u32 = 18;
pub const ETH_MACHWF1R_TSOEN_Msk: u32 = 0x1 << ETH_MACHWF1R_TSOEN_Pos;
pub const ETH_MACHWF1R_TSOEN: u32 = ETH_MACHWF1R_TSOEN_Msk;
pub const ETH_MACHWF1R_SPHEN_Pos: u32 = 17;
pub const ETH_MACHWF1R_SPHEN_Msk: u32 = 0x1 << ETH_MACHWF1R_SPHEN_Pos;
pub const ETH_MACHWF1R_SPHEN: u32 = ETH_MACHWF1R_SPHEN_Msk;
pub const ETH_MACHWF1R_DCBEN_Pos: u32 = 16;
pub const ETH_MACHWF1R_DCBEN_Msk: u32 = 0x1 << ETH_MACHWF1R_DCBEN_Pos;
pub const ETH_MACHWF1R_DCBEN: u32 = ETH_MACHWF1R_DCBEN_Msk;
pub const ETH_MACHWF1R_ADDR64_Pos: u32 = 14;
pub const ETH_MACHWF1R_ADDR64_Msk: u32 = 0x3 << ETH_MACHWF1R_ADDR64_Pos;
pub const ETH_MACHWF1R_ADDR64: u32 = ETH_MACHWF1R_ADDR64_Msk;
pub const ETH_MACHWF1R_ADDR64_32: u32 = 0x0 << ETH_MACHWF1R_ADDR64_Pos;
pub const ETH_MACHWF1R_ADDR64_40: u32 = 0x1 << ETH_MACHWF1R_ADDR64_Pos;
pub const ETH_MACHWF1R_ADDR64_48: u32 = 0x2 << ETH_MACHWF1R_ADDR64_Pos;
pub const ETH_MACHWF1R_ADVTHWORD_Pos: u32 = 13;
pub const ETH_MACHWF1R_ADVTHWORD_Msk: u32 = 0x1 << ETH_MACHWF1R_ADVTHWORD_Pos;
pub const ETH_MACHWF1R_ADVTHWORD: u32 = ETH_MACHWF1R_ADVTHWORD_Msk;
pub const ETH_MACHWF1R_PTOEN_Pos: u32 = 12;
pub const ETH_MACHWF1R_PTOEN_Msk: u32 = 0x1 << ETH_MACHWF1R_PTOEN_Pos;
pub const ETH_MACHWF1R_PTOEN: u32 = ETH_MACHWF1R_PTOEN_Msk;
pub const ETH_MACHWF1R_OSTEN_Pos: u32 = 11;
pub const ETH_MACHWF1R_OSTEN_Msk: u32 = 0x1 << ETH_MACHWF1R_OSTEN_Pos;
pub const ETH_MACHWF1R_OSTEN: u32 = ETH_MACHWF1R_OSTEN_Msk;
pub const ETH_MACHWF1R_TXFIFOSIZE_Pos: u32 = 6;
pub const ETH_MACHWF1R_TXFIFOSIZE_Msk: u32 = 0x1F << ETH_MACHWF1R_TXFIFOSIZE_Pos;
pub const ETH_MACHWF1R_TXFIFOSIZE: u32 = ETH_MACHWF1R_TXFIFOSIZE_Msk;
pub const ETH_MACHWF1R_RXFIFOSIZE_Pos: u32 = 0;
pub const ETH_MACHWF1R_RXFIFOSIZE_Msk: u32 = 0x1F << ETH_MACHWF1R_RXFIFOSIZE_Pos;
pub const ETH_MACHWF1R_RXFIFOSIZE: u32 = ETH_MACHWF1R_RXFIFOSIZE_Msk;
pub const ETH_MACHWF2R_AUXSNAPNUM_Pos: u32 = 28;
pub const ETH_MACHWF2R_AUXSNAPNUM_Msk: u32 = 0x7 << ETH_MACHWF2R_AUXSNAPNUM_Pos;
pub const ETH_MACHWF2R_AUXSNAPNUM: u32 = ETH_MACHWF2R_AUXSNAPNUM_Msk;
pub const ETH_MACHWF2R_PPSOUTNUM_Pos: u32 = 24;
pub const ETH_MACHWF2R_PPSOUTNUM_Msk: u32 = 0x7 << ETH_MACHWF2R_PPSOUTNUM_Pos;
pub const ETH_MACHWF2R_PPSOUTNUM: u32 = ETH_MACHWF2R_PPSOUTNUM_Msk;
pub const ETH_MACHWF2R_TXCHCNT_Pos: u32 = 18;
pub const ETH_MACHWF2R_TXCHCNT_Msk: u32 = 0xF << ETH_MACHWF2R_TXCHCNT_Pos;
pub const ETH_MACHWF2R_TXCHCNT: u32 = ETH_MACHWF2R_TXCHCNT_Msk;
pub const ETH_MACHWF2R_RXCHCNT_Pos: u32 = 13;
pub const ETH_MACHWF2R_RXCHCNT_Msk: u32 = 0x7 << ETH_MACHWF2R_RXCHCNT_Pos;
pub const ETH_MACHWF2R_RXCHCNT: u32 = ETH_MACHWF2R_RXCHCNT_Msk;
pub const ETH_MACHWF2R_TXQCNT_Pos: u32 = 6;
pub const ETH_MACHWF2R_TXQCNT_Msk: u32 = 0xF << ETH_MACHWF2R_TXQCNT_Pos;
pub const ETH_MACHWF2R_TXQCNT: u32 = ETH_MACHWF2R_TXQCNT_Msk;
pub const ETH_MACHWF2R_RXQCNT_Pos: u32 = 0;
pub const ETH_MACHWF2R_RXQCNT_Msk: u32 = 0xF << ETH_MACHWF2R_RXQCNT_Pos;
pub const ETH_MACHWF2R_RXQCNT: u32 = ETH_MACHWF2R_RXQCNT_Msk;
pub const ETH_MACMDIOAR_PSE_Pos: u32 = 27;
pub const ETH_MACMDIOAR_PSE_Msk: u32 = 0x1 << ETH_MACMDIOAR_PSE_Pos;
pub const ETH_MACMDIOAR_PSE: u32 = ETH_MACMDIOAR_PSE_Msk;
pub const ETH_MACMDIOAR_BTB_Pos: u32 = 26;
pub const ETH_MACMDIOAR_BTB_Msk: u32 = 0x1 << ETH_MACMDIOAR_BTB_Pos;
pub const ETH_MACMDIOAR_BTB: u32 = ETH_MACMDIOAR_BTB_Msk;
pub const ETH_MACMDIOAR_PA_Pos: u32 = 21;
pub const ETH_MACMDIOAR_PA_Msk: u32 = 0x1F << ETH_MACMDIOAR_PA_Pos;
pub const ETH_MACMDIOAR_PA: u32 = ETH_MACMDIOAR_PA_Msk;
pub const ETH_MACMDIOAR_RDA_Pos: u32 = 16;
pub const ETH_MACMDIOAR_RDA_Msk: u32 = 0x1F << ETH_MACMDIOAR_RDA_Pos;
pub const ETH_MACMDIOAR_RDA: u32 = ETH_MACMDIOAR_RDA_Msk;
pub const ETH_MACMDIOAR_NTC_Pos: u32 = 12;
pub const ETH_MACMDIOAR_NTC_Msk: u32 = 0x7 << ETH_MACMDIOAR_NTC_Pos;
pub const ETH_MACMDIOAR_NTC: u32 = ETH_MACMDIOAR_NTC_Msk;
pub const ETH_MACMDIOAR_CR_Pos: u32 = 8;
pub const ETH_MACMDIOAR_CR_Msk: u32 = 0xF << ETH_MACMDIOAR_CR_Pos;
pub const ETH_MACMDIOAR_CR: u32 = ETH_MACMDIOAR_CR_Msk;
pub const ETH_MACMDIOAR_CR_DIV42: u32 = uint32_t0x00000000;
pub const ETH_MACMDIOAR_CR_DIV62_Pos: u32 = 8;
pub const ETH_MACMDIOAR_CR_DIV62_Msk: u32 = 0x1 << ETH_MACMDIOAR_CR_DIV62_Pos;
pub const ETH_MACMDIOAR_CR_DIV62: u32 = ETH_MACMDIOAR_CR_DIV62_Msk;
pub const ETH_MACMDIOAR_CR_DIV16_Pos: u32 = 9;
pub const ETH_MACMDIOAR_CR_DIV16_Msk: u32 = 0x1 << ETH_MACMDIOAR_CR_DIV16_Pos;
pub const ETH_MACMDIOAR_CR_DIV16: u32 = ETH_MACMDIOAR_CR_DIV16_Msk;
pub const ETH_MACMDIOAR_CR_DIV26_Pos: u32 = 8;
pub const ETH_MACMDIOAR_CR_DIV26_Msk: u32 = 0x3 << ETH_MACMDIOAR_CR_DIV26_Pos;
pub const ETH_MACMDIOAR_CR_DIV26: u32 = ETH_MACMDIOAR_CR_DIV26_Msk;
pub const ETH_MACMDIOAR_CR_DIV102_Pos: u32 = 10;
pub const ETH_MACMDIOAR_CR_DIV102_Msk: u32 = 0x1 << ETH_MACMDIOAR_CR_DIV102_Pos;
pub const ETH_MACMDIOAR_CR_DIV102: u32 = ETH_MACMDIOAR_CR_DIV102_Msk;
pub const ETH_MACMDIOAR_CR_DIV124_Pos: u32 = 8;
pub const ETH_MACMDIOAR_CR_DIV124_Msk: u32 = 0x5 << ETH_MACMDIOAR_CR_DIV124_Pos;
pub const ETH_MACMDIOAR_CR_DIV124: u32 = ETH_MACMDIOAR_CR_DIV124_Msk;
pub const ETH_MACMDIOAR_CR_DIV4AR_Pos: u32 = 11;
pub const ETH_MACMDIOAR_CR_DIV4AR_Msk: u32 = 0x1 << ETH_MACMDIOAR_CR_DIV4AR_Pos;
pub const ETH_MACMDIOAR_CR_DIV4AR: u32 = ETH_MACMDIOAR_CR_DIV4AR_Msk;
pub const ETH_MACMDIOAR_CR_DIV6AR_Pos: u32 = 8;
pub const ETH_MACMDIOAR_CR_DIV6AR_Msk: u32 = 0x9 << ETH_MACMDIOAR_CR_DIV6AR_Pos;
pub const ETH_MACMDIOAR_CR_DIV6AR: u32 = ETH_MACMDIOAR_CR_DIV6AR_Msk;
pub const ETH_MACMDIOAR_CR_DIV8AR_Pos: u32 = 9;
pub const ETH_MACMDIOAR_CR_DIV8AR_Msk: u32 = 0x5 << ETH_MACMDIOAR_CR_DIV8AR_Pos;
pub const ETH_MACMDIOAR_CR_DIV8AR: u32 = ETH_MACMDIOAR_CR_DIV8AR_Msk;
pub const ETH_MACMDIOAR_CR_DIV10AR_Pos: u32 = 8;
pub const ETH_MACMDIOAR_CR_DIV10AR_Msk: u32 = 0xB << ETH_MACMDIOAR_CR_DIV10AR_Pos;
pub const ETH_MACMDIOAR_CR_DIV10AR: u32 = ETH_MACMDIOAR_CR_DIV10AR_Msk;
pub const ETH_MACMDIOAR_CR_DIV12AR_Pos: u32 = 10;
pub const ETH_MACMDIOAR_CR_DIV12AR_Msk: u32 = 0x3 << ETH_MACMDIOAR_CR_DIV12AR_Pos;
pub const ETH_MACMDIOAR_CR_DIV12AR: u32 = ETH_MACMDIOAR_CR_DIV12AR_Msk;
pub const ETH_MACMDIOAR_CR_DIV14AR_Pos: u32 = 8;
pub const ETH_MACMDIOAR_CR_DIV14AR_Msk: u32 = 0xD << ETH_MACMDIOAR_CR_DIV14AR_Pos;
pub const ETH_MACMDIOAR_CR_DIV14AR: u32 = ETH_MACMDIOAR_CR_DIV14AR_Msk;
pub const ETH_MACMDIOAR_CR_DIV16AR_Pos: u32 = 9;
pub const ETH_MACMDIOAR_CR_DIV16AR_Msk: u32 = 0x7 << ETH_MACMDIOAR_CR_DIV16AR_Pos;
pub const ETH_MACMDIOAR_CR_DIV16AR: u32 = ETH_MACMDIOAR_CR_DIV16AR_Msk;
pub const ETH_MACMDIOAR_CR_DIV18AR_Pos: u32 = 8;
pub const ETH_MACMDIOAR_CR_DIV18AR_Msk: u32 = 0xF << ETH_MACMDIOAR_CR_DIV18AR_Pos;
pub const ETH_MACMDIOAR_CR_DIV18AR: u32 = ETH_MACMDIOAR_CR_DIV18AR_Msk;
pub const ETH_MACMDIOAR_SKAP_Pos: u32 = 4;
pub const ETH_MACMDIOAR_SKAP_Msk: u32 = 0x1 << ETH_MACMDIOAR_SKAP_Pos;
pub const ETH_MACMDIOAR_SKAP: u32 = ETH_MACMDIOAR_SKAP_Msk;
pub const ETH_MACMDIOAR_MOC_Pos: u32 = 2;
pub const ETH_MACMDIOAR_MOC_Msk: u32 = 0x3 << ETH_MACMDIOAR_MOC_Pos;
pub const ETH_MACMDIOAR_MOC: u32 = ETH_MACMDIOAR_MOC_Msk;
pub const ETH_MACMDIOAR_MOC_WR_Pos: u32 = 2;
pub const ETH_MACMDIOAR_MOC_WR_Msk: u32 = 0x1 << ETH_MACMDIOAR_MOC_WR_Pos;
pub const ETH_MACMDIOAR_MOC_WR: u32 = ETH_MACMDIOAR_MOC_WR_Msk;
pub const ETH_MACMDIOAR_MOC_PRDIA_Pos: u32 = 3;
pub const ETH_MACMDIOAR_MOC_PRDIA_Msk: u32 = 0x1 << ETH_MACMDIOAR_MOC_PRDIA_Pos;
pub const ETH_MACMDIOAR_MOC_PRDIA: u32 = ETH_MACMDIOAR_MOC_PRDIA_Msk;
pub const ETH_MACMDIOAR_MOC_RD_Pos: u32 = 2;
pub const ETH_MACMDIOAR_MOC_RD_Msk: u32 = 0x3 << ETH_MACMDIOAR_MOC_RD_Pos;
pub const ETH_MACMDIOAR_MOC_RD: u32 = ETH_MACMDIOAR_MOC_RD_Msk;
pub const ETH_MACMDIOAR_C45E_Pos: u32 = 1;
pub const ETH_MACMDIOAR_C45E_Msk: u32 = 0x1 << ETH_MACMDIOAR_C45E_Pos;
pub const ETH_MACMDIOAR_C45E: u32 = ETH_MACMDIOAR_C45E_Msk;
pub const ETH_MACMDIOAR_MB_Pos: u32 = 0;
pub const ETH_MACMDIOAR_MB_Msk: u32 = 0x1 << ETH_MACMDIOAR_MB_Pos;
pub const ETH_MACMDIOAR_MB: u32 = ETH_MACMDIOAR_MB_Msk;
pub const ETH_MACMDIODR_RA_Pos: u32 = 16;
pub const ETH_MACMDIODR_RA_Msk: u32 = 0xFFFF << ETH_MACMDIODR_RA_Pos;
pub const ETH_MACMDIODR_RA: u32 = ETH_MACMDIODR_RA_Msk;
pub const ETH_MACMDIODR_MD_Pos: u32 = 0;
pub const ETH_MACMDIODR_MD_Msk: u32 = 0xFFFF << ETH_MACMDIODR_MD_Pos;
pub const ETH_MACMDIODR_MD: u32 = ETH_MACMDIODR_MD_Msk;
pub const ETH_MACARPAR_ARPPA_Pos: u32 = 0;
pub const ETH_MACARPAR_ARPPA_Msk: u32 = 0xFFFFFFFF << ETH_MACARPAR_ARPPA_Pos;
pub const ETH_MACARPAR_ARPPA: u32 = ETH_MACARPAR_ARPPA_Msk;
pub const ETH_MACA0HR_AE_Pos: u32 = 31;
pub const ETH_MACA0HR_AE_Msk: u32 = 0x1 << ETH_MACA0HR_AE_Pos;
pub const ETH_MACA0HR_AE: u32 = ETH_MACA0HR_AE_Msk;
pub const ETH_MACA0HR_ADDRHI_Pos: u32 = 0;
pub const ETH_MACA0HR_ADDRHI_Msk: u32 = 0xFFFF << ETH_MACA0HR_ADDRHI_Pos;
pub const ETH_MACA0HR_ADDRHI: u32 = ETH_MACA0HR_ADDRHI_Msk;
pub const ETH_MACA0LR_ADDRLO_Pos: u32 = 0;
pub const ETH_MACA0LR_ADDRLO_Msk: u32 = 0xFFFFFFFF << ETH_MACA0LR_ADDRLO_Pos;
pub const ETH_MACA0LR_ADDRLO: u32 = ETH_MACA0LR_ADDRLO_Msk;
pub const ETH_MACA1HR_AE_Pos: u32 = 31;
pub const ETH_MACA1HR_AE_Msk: u32 = 0x1 << ETH_MACA1HR_AE_Pos;
pub const ETH_MACA1HR_AE: u32 = ETH_MACA1HR_AE_Msk;
pub const ETH_MACA1HR_SA_Pos: u32 = 30;
pub const ETH_MACA1HR_SA_Msk: u32 = 0x1 << ETH_MACA1HR_SA_Pos;
pub const ETH_MACA1HR_SA: u32 = ETH_MACA1HR_SA_Msk;
pub const ETH_MACA1HR_MBC_Pos: u32 = 24;
pub const ETH_MACA1HR_MBC_Msk: u32 = 0x3F << ETH_MACA1HR_MBC_Pos;
pub const ETH_MACA1HR_MBC: u32 = ETH_MACA1HR_MBC_Msk;
pub const ETH_MACA1HR_ADDRHI_Pos: u32 = 0;
pub const ETH_MACA1HR_ADDRHI_Msk: u32 = 0xFFFF << ETH_MACA1HR_ADDRHI_Pos;
pub const ETH_MACA1HR_ADDRHI: u32 = ETH_MACA1HR_ADDRHI_Msk;
pub const ETH_MACA1LR_ADDRLO_Pos: u32 = 0;
pub const ETH_MACA1LR_ADDRLO_Msk: u32 = 0xFFFFFFFF << ETH_MACA1LR_ADDRLO_Pos;
pub const ETH_MACA1LR_ADDRLO: u32 = ETH_MACA1LR_ADDRLO_Msk;
pub const ETH_MACA2HR_AE_Pos: u32 = 31;
pub const ETH_MACA2HR_AE_Msk: u32 = 0x1 << ETH_MACA2HR_AE_Pos;
pub const ETH_MACA2HR_AE: u32 = ETH_MACA2HR_AE_Msk;
pub const ETH_MACA2HR_SA_Pos: u32 = 30;
pub const ETH_MACA2HR_SA_Msk: u32 = 0x1 << ETH_MACA2HR_SA_Pos;
pub const ETH_MACA2HR_SA: u32 = ETH_MACA2HR_SA_Msk;
pub const ETH_MACA2HR_MBC_Pos: u32 = 24;
pub const ETH_MACA2HR_MBC_Msk: u32 = 0x3F << ETH_MACA2HR_MBC_Pos;
pub const ETH_MACA2HR_MBC: u32 = ETH_MACA2HR_MBC_Msk;
pub const ETH_MACA2HR_ADDRHI_Pos: u32 = 0;
pub const ETH_MACA2HR_ADDRHI_Msk: u32 = 0xFFFF << ETH_MACA2HR_ADDRHI_Pos;
pub const ETH_MACA2HR_ADDRHI: u32 = ETH_MACA2HR_ADDRHI_Msk;
pub const ETH_MACA2LR_ADDRLO_Pos: u32 = 0;
pub const ETH_MACA2LR_ADDRLO_Msk: u32 = 0xFFFFFFFF << ETH_MACA2LR_ADDRLO_Pos;
pub const ETH_MACA2LR_ADDRLO: u32 = ETH_MACA2LR_ADDRLO_Msk;
pub const ETH_MACA3HR_AE_Pos: u32 = 31;
pub const ETH_MACA3HR_AE_Msk: u32 = 0x1 << ETH_MACA3HR_AE_Pos;
pub const ETH_MACA3HR_AE: u32 = ETH_MACA3HR_AE_Msk;
pub const ETH_MACA3HR_SA_Pos: u32 = 30;
pub const ETH_MACA3HR_SA_Msk: u32 = 0x1 << ETH_MACA3HR_SA_Pos;
pub const ETH_MACA3HR_SA: u32 = ETH_MACA3HR_SA_Msk;
pub const ETH_MACA3HR_MBC_Pos: u32 = 24;
pub const ETH_MACA3HR_MBC_Msk: u32 = 0x3F << ETH_MACA3HR_MBC_Pos;
pub const ETH_MACA3HR_MBC: u32 = ETH_MACA3HR_MBC_Msk;
pub const ETH_MACA3HR_ADDRHI_Pos: u32 = 0;
pub const ETH_MACA3HR_ADDRHI_Msk: u32 = 0xFFFF << ETH_MACA3HR_ADDRHI_Pos;
pub const ETH_MACA3HR_ADDRHI: u32 = ETH_MACA3HR_ADDRHI_Msk;
pub const ETH_MACA3LR_ADDRLO_Pos: u32 = 0;
pub const ETH_MACA3LR_ADDRLO_Msk: u32 = 0xFFFFFFFF << ETH_MACA3LR_ADDRLO_Pos;
pub const ETH_MACA3LR_ADDRLO: u32 = ETH_MACA3LR_ADDRLO_Msk;
pub const ETH_MACAHR_AE_Pos: u32 = 31;
pub const ETH_MACAHR_AE_Msk: u32 = 0x1 << ETH_MACAHR_AE_Pos;
pub const ETH_MACAHR_AE: u32 = ETH_MACAHR_AE_Msk;
pub const ETH_MACAHR_SA_Pos: u32 = 30;
pub const ETH_MACAHR_SA_Msk: u32 = 0x1 << ETH_MACAHR_SA_Pos;
pub const ETH_MACAHR_SA: u32 = ETH_MACAHR_SA_Msk;
pub const ETH_MACAHR_MBC_Pos: u32 = 24;
pub const ETH_MACAHR_MBC_Msk: u32 = 0x3F << ETH_MACAHR_MBC_Pos;
pub const ETH_MACAHR_MBC: u32 = ETH_MACAHR_MBC_Msk;
pub const ETH_MACAHR_MBC_HBITS15_8: u32 = uint32_t0x20000000;
pub const ETH_MACAHR_MBC_HBITS7_0: u32 = uint32_t0x10000000;
pub const ETH_MACAHR_MBC_LBITS31_24: u32 = uint32_t0x08000000;
pub const ETH_MACAHR_MBC_LBITS23_16: u32 = uint32_t0x04000000;
pub const ETH_MACAHR_MBC_LBITS15_8: u32 = uint32_t0x02000000;
pub const ETH_MACAHR_MBC_LBITS7_0: u32 = uint32_t0x01000000;
pub const ETH_MACAHR_MACAH_Pos: u32 = 0;
pub const ETH_MACAHR_MACAH_Msk: u32 = 0xFFFF << ETH_MACAHR_MACAH_Pos;
pub const ETH_MACAHR_MACAH: u32 = ETH_MACAHR_MACAH_Msk;
pub const ETH_MACALR_MACAL_Pos: u32 = 0;
pub const ETH_MACALR_MACAL_Msk: u32 = 0xFFFFFFFF << ETH_MACALR_MACAL_Pos;
pub const ETH_MACALR_MACAL: u32 = ETH_MACALR_MACAL_Msk;
pub const ETH_MMCCR_UCDBC_Pos: u32 = 8;
pub const ETH_MMCCR_UCDBC_Msk: u32 = 0x1 << ETH_MMCCR_UCDBC_Pos;
pub const ETH_MMCCR_UCDBC: u32 = ETH_MMCCR_UCDBC_Msk;
pub const ETH_MMCCR_CNTPRSTLVL_Pos: u32 = 5;
pub const ETH_MMCCR_CNTPRSTLVL_Msk: u32 = 0x1 << ETH_MMCCR_CNTPRSTLVL_Pos;
pub const ETH_MMCCR_CNTPRSTLVL: u32 = ETH_MMCCR_CNTPRSTLVL_Msk;
pub const ETH_MMCCR_CNTPRST_Pos: u32 = 4;
pub const ETH_MMCCR_CNTPRST_Msk: u32 = 0x1 << ETH_MMCCR_CNTPRST_Pos;
pub const ETH_MMCCR_CNTPRST: u32 = ETH_MMCCR_CNTPRST_Msk;
pub const ETH_MMCCR_CNTFREEZ_Pos: u32 = 3;
pub const ETH_MMCCR_CNTFREEZ_Msk: u32 = 0x1 << ETH_MMCCR_CNTFREEZ_Pos;
pub const ETH_MMCCR_CNTFREEZ: u32 = ETH_MMCCR_CNTFREEZ_Msk;
pub const ETH_MMCCR_RSTONRD_Pos: u32 = 2;
pub const ETH_MMCCR_RSTONRD_Msk: u32 = 0x1 << ETH_MMCCR_RSTONRD_Pos;
pub const ETH_MMCCR_RSTONRD: u32 = ETH_MMCCR_RSTONRD_Msk;
pub const ETH_MMCCR_CNTSTOPRO_Pos: u32 = 1;
pub const ETH_MMCCR_CNTSTOPRO_Msk: u32 = 0x1 << ETH_MMCCR_CNTSTOPRO_Pos;
pub const ETH_MMCCR_CNTSTOPRO: u32 = ETH_MMCCR_CNTSTOPRO_Msk;
pub const ETH_MMCCR_CNTRST_Pos: u32 = 0;
pub const ETH_MMCCR_CNTRST_Msk: u32 = 0x1 << ETH_MMCCR_CNTRST_Pos;
pub const ETH_MMCCR_CNTRST: u32 = ETH_MMCCR_CNTRST_Msk;
pub const ETH_MMCRIR_RXLPITRCIS_Pos: u32 = 27;
pub const ETH_MMCRIR_RXLPITRCIS_Msk: u32 = 0x1 << ETH_MMCRIR_RXLPITRCIS_Pos;
pub const ETH_MMCRIR_RXLPITRCIS: u32 = ETH_MMCRIR_RXLPITRCIS_Msk;
pub const ETH_MMCRIR_RXLPIUSCIS_Pos: u32 = 26;
pub const ETH_MMCRIR_RXLPIUSCIS_Msk: u32 = 0x1 << ETH_MMCRIR_RXLPIUSCIS_Pos;
pub const ETH_MMCRIR_RXLPIUSCIS: u32 = ETH_MMCRIR_RXLPIUSCIS_Msk;
pub const ETH_MMCRIR_RXUCGPIS_Pos: u32 = 17;
pub const ETH_MMCRIR_RXUCGPIS_Msk: u32 = 0x1 << ETH_MMCRIR_RXUCGPIS_Pos;
pub const ETH_MMCRIR_RXUCGPIS: u32 = ETH_MMCRIR_RXUCGPIS_Msk;
pub const ETH_MMCRIR_RXALGNERPIS_Pos: u32 = 6;
pub const ETH_MMCRIR_RXALGNERPIS_Msk: u32 = 0x1 << ETH_MMCRIR_RXALGNERPIS_Pos;
pub const ETH_MMCRIR_RXALGNERPIS: u32 = ETH_MMCRIR_RXALGNERPIS_Msk;
pub const ETH_MMCRIR_RXCRCERPIS_Pos: u32 = 5;
pub const ETH_MMCRIR_RXCRCERPIS_Msk: u32 = 0x1 << ETH_MMCRIR_RXCRCERPIS_Pos;
pub const ETH_MMCRIR_RXCRCERPIS: u32 = ETH_MMCRIR_RXCRCERPIS_Msk;
pub const ETH_MMCTIR_TXLPITRCIS_Pos: u32 = 27;
pub const ETH_MMCTIR_TXLPITRCIS_Msk: u32 = 0x1 << ETH_MMCTIR_TXLPITRCIS_Pos;
pub const ETH_MMCTIR_TXLPITRCIS: u32 = ETH_MMCTIR_TXLPITRCIS_Msk;
pub const ETH_MMCTIR_TXLPIUSCIS_Pos: u32 = 26;
pub const ETH_MMCTIR_TXLPIUSCIS_Msk: u32 = 0x1 << ETH_MMCTIR_TXLPIUSCIS_Pos;
pub const ETH_MMCTIR_TXLPIUSCIS: u32 = ETH_MMCTIR_TXLPIUSCIS_Msk;
pub const ETH_MMCTIR_TXGPKTIS_Pos: u32 = 21;
pub const ETH_MMCTIR_TXGPKTIS_Msk: u32 = 0x1 << ETH_MMCTIR_TXGPKTIS_Pos;
pub const ETH_MMCTIR_TXGPKTIS: u32 = ETH_MMCTIR_TXGPKTIS_Msk;
pub const ETH_MMCTIR_TXMCOLGPIS_Pos: u32 = 15;
pub const ETH_MMCTIR_TXMCOLGPIS_Msk: u32 = 0x1 << ETH_MMCTIR_TXMCOLGPIS_Pos;
pub const ETH_MMCTIR_TXMCOLGPIS: u32 = ETH_MMCTIR_TXMCOLGPIS_Msk;
pub const ETH_MMCTIR_TXSCOLGPIS_Pos: u32 = 14;
pub const ETH_MMCTIR_TXSCOLGPIS_Msk: u32 = 0x1 << ETH_MMCTIR_TXSCOLGPIS_Pos;
pub const ETH_MMCTIR_TXSCOLGPIS: u32 = ETH_MMCTIR_TXSCOLGPIS_Msk;
pub const ETH_MMCRIMR_RXLPITRCIM_Pos: u32 = 27;
pub const ETH_MMCRIMR_RXLPITRCIM_Msk: u32 = 0x1 << ETH_MMCRIMR_RXLPITRCIM_Pos;
pub const ETH_MMCRIMR_RXLPITRCIM: u32 = ETH_MMCRIMR_RXLPITRCIM_Msk;
pub const ETH_MMCRIMR_RXLPIUSCIM_Pos: u32 = 26;
pub const ETH_MMCRIMR_RXLPIUSCIM_Msk: u32 = 0x1 << ETH_MMCRIMR_RXLPIUSCIM_Pos;
pub const ETH_MMCRIMR_RXLPIUSCIM: u32 = ETH_MMCRIMR_RXLPIUSCIM_Msk;
pub const ETH_MMCRIMR_RXUCGPIM_Pos: u32 = 17;
pub const ETH_MMCRIMR_RXUCGPIM_Msk: u32 = 0x1 << ETH_MMCRIMR_RXUCGPIM_Pos;
pub const ETH_MMCRIMR_RXUCGPIM: u32 = ETH_MMCRIMR_RXUCGPIM_Msk;
pub const ETH_MMCRIMR_RXALGNERPIM_Pos: u32 = 6;
pub const ETH_MMCRIMR_RXALGNERPIM_Msk: u32 = 0x1 << ETH_MMCRIMR_RXALGNERPIM_Pos;
pub const ETH_MMCRIMR_RXALGNERPIM: u32 = ETH_MMCRIMR_RXALGNERPIM_Msk;
pub const ETH_MMCRIMR_RXCRCERPIM_Pos: u32 = 5;
pub const ETH_MMCRIMR_RXCRCERPIM_Msk: u32 = 0x1 << ETH_MMCRIMR_RXCRCERPIM_Pos;
pub const ETH_MMCRIMR_RXCRCERPIM: u32 = ETH_MMCRIMR_RXCRCERPIM_Msk;
pub const ETH_MMCTIMR_TXLPITRCIM_Pos: u32 = 27;
pub const ETH_MMCTIMR_TXLPITRCIM_Msk: u32 = 0x1 << ETH_MMCTIMR_TXLPITRCIM_Pos;
pub const ETH_MMCTIMR_TXLPITRCIM: u32 = ETH_MMCTIMR_TXLPITRCIM_Msk;
pub const ETH_MMCTIMR_TXLPIUSCIM_Pos: u32 = 26;
pub const ETH_MMCTIMR_TXLPIUSCIM_Msk: u32 = 0x1 << ETH_MMCTIMR_TXLPIUSCIM_Pos;
pub const ETH_MMCTIMR_TXLPIUSCIM: u32 = ETH_MMCTIMR_TXLPIUSCIM_Msk;
pub const ETH_MMCTIMR_TXGPKTIM_Pos: u32 = 21;
pub const ETH_MMCTIMR_TXGPKTIM_Msk: u32 = 0x1 << ETH_MMCTIMR_TXGPKTIM_Pos;
pub const ETH_MMCTIMR_TXGPKTIM: u32 = ETH_MMCTIMR_TXGPKTIM_Msk;
pub const ETH_MMCTIMR_TXMCOLGPIM_Pos: u32 = 15;
pub const ETH_MMCTIMR_TXMCOLGPIM_Msk: u32 = 0x1 << ETH_MMCTIMR_TXMCOLGPIM_Pos;
pub const ETH_MMCTIMR_TXMCOLGPIM: u32 = ETH_MMCTIMR_TXMCOLGPIM_Msk;
pub const ETH_MMCTIMR_TXSCOLGPIM_Pos: u32 = 14;
pub const ETH_MMCTIMR_TXSCOLGPIM_Msk: u32 = 0x1 << ETH_MMCTIMR_TXSCOLGPIM_Pos;
pub const ETH_MMCTIMR_TXSCOLGPIM: u32 = ETH_MMCTIMR_TXSCOLGPIM_Msk;
pub const ETH_MMCTSCGPR_TXSNGLCOLG_Pos: u32 = 0;
pub const ETH_MMCTSCGPR_TXSNGLCOLG_msk: u32 = 0xFFFFFFFF << ETH_MMCTSCGPR_TXSNGLCOLG_Pos;
pub const ETH_MMCTSCGPR_TXSNGLCOLG: u32 = ETH_MMCTSCGPR_TXSNGLCOLG_msk;
pub const ETH_MMCTMCGPR_TXMULTCOLG_Pos: u32 = 0;
pub const ETH_MMCTMCGPR_TXMULTCOLG_msk: u32 = 0xFFFFFFFF << ETH_MMCTMCGPR_TXMULTCOLG_Pos;
pub const ETH_MMCTMCGPR_TXMULTCOLG: u32 = ETH_MMCTMCGPR_TXMULTCOLG_msk;
pub const ETH_MMCTPCGR_TXPKTG_Pos: u32 = 0;
pub const ETH_MMCTPCGR_TXPKTG_msk: u32 = 0xFFFFFFFF << ETH_MMCTPCGR_TXPKTG_Pos;
pub const ETH_MMCTPCGR_TXPKTG: u32 = ETH_MMCTPCGR_TXPKTG_msk;
pub const ETH_MMCRCRCEPR_RXCRCERR_Pos: u32 = 0;
pub const ETH_MMCRCRCEPR_RXCRCERR_msk: u32 = 0xFFFFFFFF << ETH_MMCRCRCEPR_RXCRCERR_Pos;
pub const ETH_MMCRCRCEPR_RXCRCERR: u32 = ETH_MMCRCRCEPR_RXCRCERR_msk;
pub const ETH_MMCRAEPR_RXALGNERR_Pos: u32 = 0;
pub const ETH_MMCRAEPR_RXALGNERR_msk: u32 = 0xFFFFFFFF << ETH_MMCRAEPR_RXALGNERR_Pos;
pub const ETH_MMCRAEPR_RXALGNERR: u32 = ETH_MMCRAEPR_RXALGNERR_msk;
pub const ETH_MMCRUPGR_RXUCASTG_Pos: u32 = 0;
pub const ETH_MMCRUPGR_RXUCASTG_msk: u32 = 0xFFFFFFFF << ETH_MMCRUPGR_RXUCASTG_Pos;
pub const ETH_MMCRUPGR_RXUCASTG: u32 = ETH_MMCRUPGR_RXUCASTG_msk;
pub const ETH_MMCTLPIMSTR_TXLPIUSC_Pos: u32 = 0;
pub const ETH_MMCTLPIMSTR_TXLPIUSC_msk: u32 = 0xFFFFFFFF << ETH_MMCTLPIMSTR_TXLPIUSC_Pos;
pub const ETH_MMCTLPIMSTR_TXLPIUSC: u32 = ETH_MMCTLPIMSTR_TXLPIUSC_msk;
pub const ETH_MMCTLPITCR_TXLPITRC_Pos: u32 = 0;
pub const ETH_MMCTLPITCR_TXLPITRC_msk: u32 = 0xFFFFFFFF << ETH_MMCTLPITCR_TXLPITRC_Pos;
pub const ETH_MMCTLPITCR_TXLPITRC: u32 = ETH_MMCTLPITCR_TXLPITRC_msk;
pub const ETH_MMCRLPIMSTR_RXLPIUSC_Pos: u32 = 0;
pub const ETH_MMCRLPIMSTR_RXLPIUSC_msk: u32 = 0xFFFFFFFF << ETH_MMCRLPIMSTR_RXLPIUSC_Pos;
pub const ETH_MMCRLPIMSTR_RXLPIUSC: u32 = ETH_MMCRLPIMSTR_RXLPIUSC_msk;
pub const ETH_MMCRLPITCR_RXLPITRC_Pos: u32 = 0;
pub const ETH_MMCRLPITCR_RXLPITRC_msk: u32 = 0xFFFFFFFF << ETH_MMCRLPITCR_RXLPITRC_Pos;
pub const ETH_MMCRLPITCR_RXLPITRC: u32 = ETH_MMCRLPITCR_RXLPITRC_msk;
pub const ETH_MACL3L4CR_L4DPIM_Pos: u32 = 21;
pub const ETH_MACL3L4CR_L4DPIM_Msk: u32 = 0x1 << ETH_MACL3L4CR_L4DPIM_Pos;
pub const ETH_MACL3L4CR_L4DPIM: u32 = ETH_MACL3L4CR_L4DPIM_Msk;
pub const ETH_MACL3L4CR_L4DPM_Pos: u32 = 20;
pub const ETH_MACL3L4CR_L4DPM_Msk: u32 = 0x1 << ETH_MACL3L4CR_L4DPM_Pos;
pub const ETH_MACL3L4CR_L4DPM: u32 = ETH_MACL3L4CR_L4DPM_Msk;
pub const ETH_MACL3L4CR_L4SPIM_Pos: u32 = 19;
pub const ETH_MACL3L4CR_L4SPIM_Msk: u32 = 0x1 << ETH_MACL3L4CR_L4SPIM_Pos;
pub const ETH_MACL3L4CR_L4SPIM: u32 = ETH_MACL3L4CR_L4SPIM_Msk;
pub const ETH_MACL3L4CR_L4SPM_Pos: u32 = 18;
pub const ETH_MACL3L4CR_L4SPM_Msk: u32 = 0x1 << ETH_MACL3L4CR_L4SPM_Pos;
pub const ETH_MACL3L4CR_L4SPM: u32 = ETH_MACL3L4CR_L4SPM_Msk;
pub const ETH_MACL3L4CR_L4PEN_Pos: u32 = 16;
pub const ETH_MACL3L4CR_L4PEN_Msk: u32 = 0x1 << ETH_MACL3L4CR_L4PEN_Pos;
pub const ETH_MACL3L4CR_L4PEN: u32 = ETH_MACL3L4CR_L4PEN_Msk;
pub const ETH_MACL3L4CR_L3HDBM_Pos: u32 = 11;
pub const ETH_MACL3L4CR_L3HDBM_Msk: u32 = 0x1F << ETH_MACL3L4CR_L3HDBM_Pos;
pub const ETH_MACL3L4CR_L3HDBM: u32 = ETH_MACL3L4CR_L3HDBM_Msk;
pub const ETH_MACL3L4CR_L3HSBM_Pos: u32 = 6;
pub const ETH_MACL3L4CR_L3HSBM_Msk: u32 = 0x1F << ETH_MACL3L4CR_L3HSBM_Pos;
pub const ETH_MACL3L4CR_L3HSBM: u32 = ETH_MACL3L4CR_L3HSBM_Msk;
pub const ETH_MACL3L4CR_L3DAIM_Pos: u32 = 5;
pub const ETH_MACL3L4CR_L3DAIM_Msk: u32 = 0x1 << ETH_MACL3L4CR_L3DAIM_Pos;
pub const ETH_MACL3L4CR_L3DAIM: u32 = ETH_MACL3L4CR_L3DAIM_Msk;
pub const ETH_MACL3L4CR_L3DAM_Pos: u32 = 4;
pub const ETH_MACL3L4CR_L3DAM_Msk: u32 = 0x1 << ETH_MACL3L4CR_L3DAM_Pos;
pub const ETH_MACL3L4CR_L3DAM: u32 = ETH_MACL3L4CR_L3DAM_Msk;
pub const ETH_MACL3L4CR_L3SAIM_Pos: u32 = 3;
pub const ETH_MACL3L4CR_L3SAIM_Msk: u32 = 0x1 << ETH_MACL3L4CR_L3SAIM_Pos;
pub const ETH_MACL3L4CR_L3SAIM: u32 = ETH_MACL3L4CR_L3SAIM_Msk;
pub const ETH_MACL3L4CR_L3SAM_Pos: u32 = 2;
pub const ETH_MACL3L4CR_L3SAM_Msk: u32 = 0x1 << ETH_MACL3L4CR_L3SAM_Pos;
pub const ETH_MACL3L4CR_L3SAM: u32 = ETH_MACL3L4CR_L3SAM_Msk;
pub const ETH_MACL3L4CR_L3PEN_Pos: u32 = 0;
pub const ETH_MACL3L4CR_L3PEN_Msk: u32 = 0x1 << ETH_MACL3L4CR_L3PEN_Pos;
pub const ETH_MACL3L4CR_L3PEN: u32 = ETH_MACL3L4CR_L3PEN_Msk;
pub const ETH_MACL4AR_L4DP_Pos: u32 = 16;
pub const ETH_MACL4AR_L4DP_Msk: u32 = 0xFFFF << ETH_MACL4AR_L4DP_Pos;
pub const ETH_MACL4AR_L4DP: u32 = ETH_MACL4AR_L4DP_Msk;
pub const ETH_MACL4AR_L4SP_Pos: u32 = 0;
pub const ETH_MACL4AR_L4SP_Msk: u32 = 0xFFFF << ETH_MACL4AR_L4SP_Pos;
pub const ETH_MACL4AR_L4SP: u32 = ETH_MACL4AR_L4SP_Msk;
pub const ETH_MACL3A0R_L3A0_Pos: u32 = 0;
pub const ETH_MACL3A0R_L3A0_Msk: u32 = 0xFFFFFFFF << ETH_MACL3A0R_L3A0_Pos;
pub const ETH_MACL3A0R_L3A0: u32 = ETH_MACL3A0R_L3A0_Msk;
pub const ETH_MACL3A1R_L3A1_Pos: u32 = 0;
pub const ETH_MACL3A1R_L3A1_Msk: u32 = 0xFFFFFFFF << ETH_MACL3A1R_L3A1_Pos;
pub const ETH_MACL3A1R_L3A1: u32 = ETH_MACL3A1R_L3A1_Msk;
pub const ETH_MACL3A2R_L3A2_Pos: u32 = 0;
pub const ETH_MACL3A2R_L3A2_Msk: u32 = 0xFFFFFFFF << ETH_MACL3A2R_L3A2_Pos;
pub const ETH_MACL3A2R_L3A2: u32 = ETH_MACL3A2R_L3A2_Msk;
pub const ETH_MACL3A3R_L3A3_Pos: u32 = 0;
pub const ETH_MACL3A3R_L3A3_Msk: u32 = 0xFFFFFFFF << ETH_MACL3A3R_L3A3_Pos;
pub const ETH_MACL3A3R_L3A3: u32 = ETH_MACL3A3R_L3A3_Msk;
pub const ETH_MACTSCR_TXTSSTSM_Pos: u32 = 24;
pub const ETH_MACTSCR_TXTSSTSM_Msk: u32 = 0x1 << ETH_MACTSCR_TXTSSTSM_Pos;
pub const ETH_MACTSCR_TXTSSTSM: u32 = ETH_MACTSCR_TXTSSTSM_Msk;
pub const ETH_MACTSCR_CSC_Pos: u32 = 19;
pub const ETH_MACTSCR_CSC_Msk: u32 = 0x1 << ETH_MACTSCR_CSC_Pos;
pub const ETH_MACTSCR_CSC: u32 = ETH_MACTSCR_CSC_Msk;
pub const ETH_MACTSCR_TSENMACADDR_Pos: u32 = 18;
pub const ETH_MACTSCR_TSENMACADDR_Msk: u32 = 0x1 << ETH_MACTSCR_TSENMACADDR_Pos;
pub const ETH_MACTSCR_TSENMACADDR: u32 = ETH_MACTSCR_TSENMACADDR_Msk;
pub const ETH_MACTSCR_SNAPTYPSEL_Pos: u32 = 16;
pub const ETH_MACTSCR_SNAPTYPSEL_Msk: u32 = 0x3 << ETH_MACTSCR_SNAPTYPSEL_Pos;
pub const ETH_MACTSCR_SNAPTYPSEL: u32 = ETH_MACTSCR_SNAPTYPSEL_Msk;
pub const ETH_MACTSCR_TSMSTRENA_Pos: u32 = 15;
pub const ETH_MACTSCR_TSMSTRENA_Msk: u32 = 0x1 << ETH_MACTSCR_TSMSTRENA_Pos;
pub const ETH_MACTSCR_TSMSTRENA: u32 = ETH_MACTSCR_TSMSTRENA_Msk;
pub const ETH_MACTSCR_TSEVNTENA_Pos: u32 = 14;
pub const ETH_MACTSCR_TSEVNTENA_Msk: u32 = 0x1 << ETH_MACTSCR_TSEVNTENA_Pos;
pub const ETH_MACTSCR_TSEVNTENA: u32 = ETH_MACTSCR_TSEVNTENA_Msk;
pub const ETH_MACTSCR_TSIPV4ENA_Pos: u32 = 13;
pub const ETH_MACTSCR_TSIPV4ENA_Msk: u32 = 0x1 << ETH_MACTSCR_TSIPV4ENA_Pos;
pub const ETH_MACTSCR_TSIPV4ENA: u32 = ETH_MACTSCR_TSIPV4ENA_Msk;
pub const ETH_MACTSCR_TSIPV6ENA_Pos: u32 = 12;
pub const ETH_MACTSCR_TSIPV6ENA_Msk: u32 = 0x1 << ETH_MACTSCR_TSIPV6ENA_Pos;
pub const ETH_MACTSCR_TSIPV6ENA: u32 = ETH_MACTSCR_TSIPV6ENA_Msk;
pub const ETH_MACTSCR_TSIPENA_Pos: u32 = 11;
pub const ETH_MACTSCR_TSIPENA_Msk: u32 = 0x1 << ETH_MACTSCR_TSIPENA_Pos;
pub const ETH_MACTSCR_TSIPENA: u32 = ETH_MACTSCR_TSIPENA_Msk;
pub const ETH_MACTSCR_TSVER2ENA_Pos: u32 = 10;
pub const ETH_MACTSCR_TSVER2ENA_Msk: u32 = 0x1 << ETH_MACTSCR_TSVER2ENA_Pos;
pub const ETH_MACTSCR_TSVER2ENA: u32 = ETH_MACTSCR_TSVER2ENA_Msk;
pub const ETH_MACTSCR_TSCTRLSSR_Pos: u32 = 9;
pub const ETH_MACTSCR_TSCTRLSSR_Msk: u32 = 0x1 << ETH_MACTSCR_TSCTRLSSR_Pos;
pub const ETH_MACTSCR_TSCTRLSSR: u32 = ETH_MACTSCR_TSCTRLSSR_Msk;
pub const ETH_MACTSCR_TSENALL_Pos: u32 = 8;
pub const ETH_MACTSCR_TSENALL_Msk: u32 = 0x1 << ETH_MACTSCR_TSENALL_Pos;
pub const ETH_MACTSCR_TSENALL: u32 = ETH_MACTSCR_TSENALL_Msk;
pub const ETH_MACTSCR_TSADDREG_Pos: u32 = 5;
pub const ETH_MACTSCR_TSADDREG_Msk: u32 = 0x1 << ETH_MACTSCR_TSADDREG_Pos;
pub const ETH_MACTSCR_TSADDREG: u32 = ETH_MACTSCR_TSADDREG_Msk;
pub const ETH_MACTSCR_TSUPDT_Pos: u32 = 3;
pub const ETH_MACTSCR_TSUPDT_Msk: u32 = 0x1 << ETH_MACTSCR_TSUPDT_Pos;
pub const ETH_MACTSCR_TSUPDT: u32 = ETH_MACTSCR_TSUPDT_Msk;
pub const ETH_MACTSCR_TSINIT_Pos: u32 = 2;
pub const ETH_MACTSCR_TSINIT_Msk: u32 = 0x1 << ETH_MACTSCR_TSINIT_Pos;
pub const ETH_MACTSCR_TSINIT: u32 = ETH_MACTSCR_TSINIT_Msk;
pub const ETH_MACTSCR_TSCFUPDT_Pos: u32 = 1;
pub const ETH_MACTSCR_TSCFUPDT_Msk: u32 = 0x1 << ETH_MACTSCR_TSCFUPDT_Pos;
pub const ETH_MACTSCR_TSCFUPDT: u32 = ETH_MACTSCR_TSCFUPDT_Msk;
pub const ETH_MACTSCR_TSENA_Pos: u32 = 0;
pub const ETH_MACTSCR_TSENA_Msk: u32 = 0x1 << ETH_MACTSCR_TSENA_Pos;
pub const ETH_MACTSCR_TSENA: u32 = ETH_MACTSCR_TSENA_Msk;
pub const ETH_MACMACSSIR_SSINC_Pos: u32 = 16;
pub const ETH_MACMACSSIR_SSINC_Msk: u32 = 0xFF << ETH_MACMACSSIR_SSINC_Pos;
pub const ETH_MACMACSSIR_SSINC: u32 = ETH_MACMACSSIR_SSINC_Msk;
pub const ETH_MACMACSSIR_SNSINC_Pos: u32 = 8;
pub const ETH_MACMACSSIR_SNSINC_Msk: u32 = 0xFF << ETH_MACMACSSIR_SNSINC_Pos;
pub const ETH_MACMACSSIR_SNSINC: u32 = ETH_MACMACSSIR_SNSINC_Msk;
pub const ETH_MACSTSR_TSS_Pos: u32 = 0;
pub const ETH_MACSTSR_TSS_Msk: u32 = 0xFFFFFFFF << ETH_MACSTSR_TSS_Pos;
pub const ETH_MACSTSR_TSS: u32 = ETH_MACSTSR_TSS_Msk;
pub const ETH_MACSTNR_TSSS_Pos: u32 = 0;
pub const ETH_MACSTNR_TSSS_Msk: u32 = 0x7FFFFFFF << ETH_MACSTNR_TSSS_Pos;
pub const ETH_MACSTNR_TSSS: u32 = ETH_MACSTNR_TSSS_Msk;
pub const ETH_MACSTSUR_TSS_Pos: u32 = 0;
pub const ETH_MACSTSUR_TSS_Msk: u32 = 0xFFFFFFFF << ETH_MACSTSUR_TSS_Pos;
pub const ETH_MACSTSUR_TSS: u32 = ETH_MACSTSUR_TSS_Msk;
pub const ETH_MACSTNUR_ADDSUB_Pos: u32 = 31;
pub const ETH_MACSTNUR_ADDSUB_Msk: u32 = 0x1 << ETH_MACSTNUR_ADDSUB_Pos;
pub const ETH_MACSTNUR_ADDSUB: u32 = ETH_MACSTNUR_ADDSUB_Msk;
pub const ETH_MACSTNUR_TSSS_Pos: u32 = 0;
pub const ETH_MACSTNUR_TSSS_Msk: u32 = 0x7FFFFFFF << ETH_MACSTNUR_TSSS_Pos;
pub const ETH_MACSTNUR_TSSS: u32 = ETH_MACSTNUR_TSSS_Msk;
pub const ETH_MACTSAR_TSAR_Pos: u32 = 0;
pub const ETH_MACTSAR_TSAR_Msk: u32 = 0xFFFFFFFF << ETH_MACTSAR_TSAR_Pos;
pub const ETH_MACTSAR_TSAR: u32 = ETH_MACTSAR_TSAR_Msk;
pub const ETH_MACTSSR_ATSNS_Pos: u32 = 25;
pub const ETH_MACTSSR_ATSNS_Msk: u32 = 0x1F << ETH_MACTSSR_ATSNS_Pos;
pub const ETH_MACTSSR_ATSNS: u32 = ETH_MACTSSR_ATSNS_Msk;
pub const ETH_MACTSSR_ATSSTM_Pos: u32 = 24;
pub const ETH_MACTSSR_ATSSTM_Msk: u32 = 0x1 << ETH_MACTSSR_ATSSTM_Pos;
pub const ETH_MACTSSR_ATSSTM: u32 = ETH_MACTSSR_ATSSTM_Msk;
pub const ETH_MACTSSR_ATSSTN_Pos: u32 = 16;
pub const ETH_MACTSSR_ATSSTN_Msk: u32 = 0xF << ETH_MACTSSR_ATSSTN_Pos;
pub const ETH_MACTSSR_ATSSTN: u32 = ETH_MACTSSR_ATSSTN_Msk;
pub const ETH_MACTSSR_TXTSSIS_Pos: u32 = 15;
pub const ETH_MACTSSR_TXTSSIS_Msk: u32 = 0x1 << ETH_MACTSSR_TXTSSIS_Pos;
pub const ETH_MACTSSR_TXTSSIS: u32 = ETH_MACTSSR_TXTSSIS_Msk;
pub const ETH_MACTSSR_TSTRGTERR0_Pos: u32 = 3;
pub const ETH_MACTSSR_TSTRGTERR0_Msk: u32 = 0x1 << ETH_MACTSSR_TSTRGTERR0_Pos;
pub const ETH_MACTSSR_TSTRGTERR0: u32 = ETH_MACTSSR_TSTRGTERR0_Msk;
pub const ETH_MACTSSR_AUXTSTRIG_Pos: u32 = 2;
pub const ETH_MACTSSR_AUXTSTRIG_Msk: u32 = 0x1 << ETH_MACTSSR_AUXTSTRIG_Pos;
pub const ETH_MACTSSR_AUXTSTRIG: u32 = ETH_MACTSSR_AUXTSTRIG_Msk;
pub const ETH_MACTSSR_TSTARGT0_Pos: u32 = 1;
pub const ETH_MACTSSR_TSTARGT0_Msk: u32 = 0x1 << ETH_MACTSSR_TSTARGT0_Pos;
pub const ETH_MACTSSR_TSTARGT0: u32 = ETH_MACTSSR_TSTARGT0_Msk;
pub const ETH_MACTSSR_TSSOVF_Pos: u32 = 0;
pub const ETH_MACTSSR_TSSOVF_Msk: u32 = 0x1 << ETH_MACTSSR_TSSOVF_Pos;
pub const ETH_MACTSSR_TSSOVF: u32 = ETH_MACTSSR_TSSOVF_Msk;
pub const ETH_MACTTSSNR_TXTSSMIS_Pos: u32 = 31;
pub const ETH_MACTTSSNR_TXTSSMIS_Msk: u32 = 0x1 << ETH_MACTTSSNR_TXTSSMIS_Pos;
pub const ETH_MACTTSSNR_TXTSSMIS: u32 = ETH_MACTTSSNR_TXTSSMIS_Msk;
pub const ETH_MACTTSSNR_TXTSSLO_Pos: u32 = 0;
pub const ETH_MACTTSSNR_TXTSSLO_Msk: u32 = 0x7FFFFFFF << ETH_MACTTSSNR_TXTSSLO_Pos;
pub const ETH_MACTTSSNR_TXTSSLO: u32 = ETH_MACTTSSNR_TXTSSLO_Msk;
pub const ETH_MACTTSSSR_TXTSSHI_Pos: u32 = 0;
pub const ETH_MACTTSSSR_TXTSSHI_Msk: u32 = 0xFFFFFFFF << ETH_MACTTSSSR_TXTSSHI_Pos;
pub const ETH_MACTTSSSR_TXTSSHI: u32 = ETH_MACTTSSSR_TXTSSHI_Msk;
pub const ETH_MACACR_ATSEN3_Pos: u32 = 7;
pub const ETH_MACACR_ATSEN3_Msk: u32 = 0x1 << ETH_MACACR_ATSEN3_Pos;
pub const ETH_MACACR_ATSEN3: u32 = ETH_MACACR_ATSEN3_Msk;
pub const ETH_MACACR_ATSEN2_Pos: u32 = 6;
pub const ETH_MACACR_ATSEN2_Msk: u32 = 0x1 << ETH_MACACR_ATSEN2_Pos;
pub const ETH_MACACR_ATSEN2: u32 = ETH_MACACR_ATSEN2_Msk;
pub const ETH_MACACR_ATSEN1_Pos: u32 = 5;
pub const ETH_MACACR_ATSEN1_Msk: u32 = 0x1 << ETH_MACACR_ATSEN1_Pos;
pub const ETH_MACACR_ATSEN1: u32 = ETH_MACACR_ATSEN1_Msk;
pub const ETH_MACACR_ATSEN0_Pos: u32 = 4;
pub const ETH_MACACR_ATSEN0_Msk: u32 = 0x1 << ETH_MACACR_ATSEN0_Pos;
pub const ETH_MACACR_ATSEN0: u32 = ETH_MACACR_ATSEN0_Msk;
pub const ETH_MACACR_ATSFC_Pos: u32 = 0;
pub const ETH_MACACR_ATSFC_Msk: u32 = 0x1 << ETH_MACACR_ATSFC_Pos;
pub const ETH_MACACR_ATSFC: u32 = ETH_MACACR_ATSFC_Msk;
pub const ETH_MACATSNR_AUXTSLO_Pos: u32 = 0;
pub const ETH_MACATSNR_AUXTSLO_Msk: u32 = 0x7FFFFFFF << ETH_MACATSNR_AUXTSLO_Pos;
pub const ETH_MACATSNR_AUXTSLO: u32 = ETH_MACATSNR_AUXTSLO_Msk;
pub const ETH_MACATSSR_AUXTSHI_Pos: u32 = 0;
pub const ETH_MACATSSR_AUXTSHI_Msk: u32 = 0xFFFFFFFF << ETH_MACATSSR_AUXTSHI_Pos;
pub const ETH_MACATSSR_AUXTSHI: u32 = ETH_MACATSSR_AUXTSHI_Msk;
pub const ETH_MACTSIACR_OSTIAC_Pos: u32 = 0;
pub const ETH_MACTSIACR_OSTIAC_Msk: u32 = 0xFFFFFFFF << ETH_MACTSIACR_OSTIAC_Pos;
pub const ETH_MACTSIACR_OSTIAC: u32 = ETH_MACTSIACR_OSTIAC_Msk;
pub const ETH_MACTSEACR_OSTEAC_Pos: u32 = 0;
pub const ETH_MACTSEACR_OSTEAC_Msk: u32 = 0xFFFFFFFF << ETH_MACTSEACR_OSTEAC_Pos;
pub const ETH_MACTSEACR_OSTEAC: u32 = ETH_MACTSEACR_OSTEAC_Msk;
pub const ETH_MACTSICNR_TSIC_Pos: u32 = 0;
pub const ETH_MACTSICNR_TSIC_Msk: u32 = 0xFFFFFFFF << ETH_MACTSICNR_TSIC_Pos;
pub const ETH_MACTSICNR_TSIC: u32 = ETH_MACTSICNR_TSIC_Msk;
pub const ETH_MACTSECNR_TSEC_Pos: u32 = 0;
pub const ETH_MACTSECNR_TSEC_Msk: u32 = 0xFFFFFFFF << ETH_MACTSECNR_TSEC_Pos;
pub const ETH_MACTSECNR_TSEC: u32 = ETH_MACTSECNR_TSEC_Msk;
pub const ETH_MACPPSCR_TRGTMODSEL0_Pos: u32 = 5;
pub const ETH_MACPPSCR_TRGTMODSEL0_Msk: u32 = 0x3 << ETH_MACPPSCR_TRGTMODSEL0_Pos;
pub const ETH_MACPPSCR_TRGTMODSEL0: u32 = ETH_MACPPSCR_TRGTMODSEL0_Msk;
pub const ETH_MACPPSCR_PPSEN0_Pos: u32 = 4;
pub const ETH_MACPPSCR_PPSEN0_Msk: u32 = 0x1 << ETH_MACPPSCR_PPSEN0_Pos;
pub const ETH_MACPPSCR_PPSEN0: u32 = ETH_MACPPSCR_PPSEN0_Msk;
pub const ETH_MACPPSCR_PPSCTRL_Pos: u32 = 0;
pub const ETH_MACPPSCR_PPSCTRL_Msk: u32 = 0xF << ETH_MACPPSCR_PPSCTRL_Pos;
pub const ETH_MACPPSCR_PPSCTRL: u32 = ETH_MACPPSCR_PPSCTRL_Msk;
pub const ETH_MACPPSTTSR_TSTRH0_Pos: u32 = 0;
pub const ETH_MACPPSTTSR_TSTRH0_Msk: u32 = 0xFFFFFFFF << ETH_MACPPSTTSR_TSTRH0_Pos;
pub const ETH_MACPPSTTSR_TSTRH0: u32 = ETH_MACPPSTTSR_TSTRH0_Msk;
pub const ETH_MACPPSTTNR_TRGTBUSY0_Pos: u32 = 31;
pub const ETH_MACPPSTTNR_TRGTBUSY0_Msk: u32 = 0x1 << ETH_MACPPSTTNR_TRGTBUSY0_Pos;
pub const ETH_MACPPSTTNR_TRGTBUSY0: u32 = ETH_MACPPSTTNR_TRGTBUSY0_Msk;
pub const ETH_MACPPSTTNR_TTSL0_Pos: u32 = 0;
pub const ETH_MACPPSTTNR_TTSL0_Msk: u32 = 0x7FFFFFFF << ETH_MACPPSTTNR_TTSL0_Pos;
pub const ETH_MACPPSTTNR_TTSL0: u32 = ETH_MACPPSTTNR_TTSL0_Msk;
pub const ETH_MACPPSIR_PPSINT0_Pos: u32 = 0;
pub const ETH_MACPPSIR_PPSINT0_Msk: u32 = 0xFFFFFFFF << ETH_MACPPSIR_PPSINT0_Pos;
pub const ETH_MACPPSIR_PPSINT0: u32 = ETH_MACPPSIR_PPSINT0_Msk;
pub const ETH_MACPPSWR_PPSWIDTH0_Pos: u32 = 0;
pub const ETH_MACPPSWR_PPSWIDTH0_Msk: u32 = 0xFFFFFFFF << ETH_MACPPSWR_PPSWIDTH0_Pos;
pub const ETH_MACPPSWR_PPSWIDTH0: u32 = ETH_MACPPSWR_PPSWIDTH0_Msk;
pub const ETH_MACPOCR_DN_Pos: u32 = 8;
pub const ETH_MACPOCR_DN_Msk: u32 = 0xFF << ETH_MACPOCR_DN_Pos;
pub const ETH_MACPOCR_DN: u32 = ETH_MACPOCR_DN_Msk;
pub const ETH_MACPOCR_DRRDIS_Pos: u32 = 6;
pub const ETH_MACPOCR_DRRDIS_Msk: u32 = 0x1 << ETH_MACPOCR_DRRDIS_Pos;
pub const ETH_MACPOCR_DRRDIS: u32 = ETH_MACPOCR_DRRDIS_Msk;
pub const ETH_MACPOCR_APDREQTRIG_Pos: u32 = 5;
pub const ETH_MACPOCR_APDREQTRIG_Msk: u32 = 0x1 << ETH_MACPOCR_APDREQTRIG_Pos;
pub const ETH_MACPOCR_APDREQTRIG: u32 = ETH_MACPOCR_APDREQTRIG_Msk;
pub const ETH_MACPOCR_ASYNCTRIG_Pos: u32 = 4;
pub const ETH_MACPOCR_ASYNCTRIG_Msk: u32 = 0x1 << ETH_MACPOCR_ASYNCTRIG_Pos;
pub const ETH_MACPOCR_ASYNCTRIG: u32 = ETH_MACPOCR_ASYNCTRIG_Msk;
pub const ETH_MACPOCR_APDREQEN_Pos: u32 = 2;
pub const ETH_MACPOCR_APDREQEN_Msk: u32 = 0x1 << ETH_MACPOCR_APDREQEN_Pos;
pub const ETH_MACPOCR_APDREQEN: u32 = ETH_MACPOCR_APDREQEN_Msk;
pub const ETH_MACPOCR_ASYNCEN_Pos: u32 = 1;
pub const ETH_MACPOCR_ASYNCEN_Msk: u32 = 0x1 << ETH_MACPOCR_ASYNCEN_Pos;
pub const ETH_MACPOCR_ASYNCEN: u32 = ETH_MACPOCR_ASYNCEN_Msk;
pub const ETH_MACPOCR_PTOEN_Pos: u32 = 0;
pub const ETH_MACPOCR_PTOEN_Msk: u32 = 0x1 << ETH_MACPOCR_PTOEN_Pos;
pub const ETH_MACPOCR_PTOEN: u32 = ETH_MACPOCR_PTOEN_Msk;
pub const ETH_MACSPI0R_SPI0_Pos: u32 = 0;
pub const ETH_MACSPI0R_SPI0_Msk: u32 = 0xFFFFFFFF << ETH_MACSPI0R_SPI0_Pos;
pub const ETH_MACSPI0R_SPI0: u32 = ETH_MACSPI0R_SPI0_Msk;
pub const ETH_MACSPI1R_SPI1_Pos: u32 = 0;
pub const ETH_MACSPI1R_SPI1_Msk: u32 = 0xFFFFFFFF << ETH_MACSPI1R_SPI1_Pos;
pub const ETH_MACSPI1R_SPI1: u32 = ETH_MACSPI1R_SPI1_Msk;
pub const ETH_MACSPI2R_SPI2_Pos: u32 = 0;
pub const ETH_MACSPI2R_SPI2_Msk: u32 = 0xFFFF << ETH_MACSPI2R_SPI2_Pos;
pub const ETH_MACSPI2R_SPI2: u32 = ETH_MACSPI2R_SPI2_Msk;
pub const ETH_MACLMIR_LMPDRI_Pos: u32 = 24;
pub const ETH_MACLMIR_LMPDRI_Msk: u32 = 0xFF << ETH_MACLMIR_LMPDRI_Pos;
pub const ETH_MACLMIR_LMPDRI: u32 = ETH_MACLMIR_LMPDRI_Msk;
pub const ETH_MACLMIR_DRSYNCR_Pos: u32 = 8;
pub const ETH_MACLMIR_DRSYNCR_Msk: u32 = 0x7 << ETH_MACLMIR_DRSYNCR_Pos;
pub const ETH_MACLMIR_DRSYNCR: u32 = ETH_MACLMIR_DRSYNCR_Msk;
pub const ETH_MACLMIR_LSI_Pos: u32 = 0;
pub const ETH_MACLMIR_LSI_Msk: u32 = 0xFF << ETH_MACLMIR_LSI_Pos;
pub const ETH_MACLMIR_LSI: u32 = ETH_MACLMIR_LSI_Msk;
pub const ETH_MTLOMR_CNTCLR_Pos: u32 = 9;
pub const ETH_MTLOMR_CNTCLR_Msk: u32 = 0x1 << ETH_MTLOMR_CNTCLR_Pos;
pub const ETH_MTLOMR_CNTCLR: u32 = ETH_MTLOMR_CNTCLR_Msk;
pub const ETH_MTLOMR_CNTPRST_Pos: u32 = 8;
pub const ETH_MTLOMR_CNTPRST_Msk: u32 = 0x1 << ETH_MTLOMR_CNTPRST_Pos;
pub const ETH_MTLOMR_CNTPRST: u32 = ETH_MTLOMR_CNTPRST_Msk;
pub const ETH_MTLOMR_DTXSTS_Pos: u32 = 1;
pub const ETH_MTLOMR_DTXSTS_Msk: u32 = 0x1 << ETH_MTLOMR_DTXSTS_Pos;
pub const ETH_MTLOMR_DTXSTS: u32 = ETH_MTLOMR_DTXSTS_Msk;
pub const ETH_MTLISR_MACIS_Pos: u32 = 16;
pub const ETH_MTLISR_MACIS_Msk: u32 = 0x1 << ETH_MTLISR_MACIS_Pos;
pub const ETH_MTLISR_MACIS: u32 = ETH_MTLISR_MACIS_Msk;
pub const ETH_MTLISR_QIS_Pos: u32 = 0;
pub const ETH_MTLISR_QIS_Msk: u32 = 0x1 << ETH_MTLISR_QIS_Pos;
pub const ETH_MTLISR_QIS: u32 = ETH_MTLISR_QIS_Msk;
pub const ETH_MTLTQOMR_TTC_Pos: u32 = 4;
pub const ETH_MTLTQOMR_TTC_Msk: u32 = 0x7 << ETH_MTLTQOMR_TTC_Pos;
pub const ETH_MTLTQOMR_TTC: u32 = ETH_MTLTQOMR_TTC_Msk;
pub const ETH_MTLTQOMR_TTC_32BITS: u32 = uint32_t0x00000000;
pub const ETH_MTLTQOMR_TTC_64BITS: u32 = uint32_t0x00000010;
pub const ETH_MTLTQOMR_TTC_96BITS: u32 = uint32_t0x00000020;
pub const ETH_MTLTQOMR_TTC_128BITS: u32 = uint32_t0x00000030;
pub const ETH_MTLTQOMR_TTC_192BITS: u32 = uint32_t0x00000040;
pub const ETH_MTLTQOMR_TTC_256BITS: u32 = uint32_t0x00000050;
pub const ETH_MTLTQOMR_TTC_384BITS: u32 = uint32_t0x00000060;
pub const ETH_MTLTQOMR_TTC_512BITS: u32 = uint32_t0x00000070;
pub const ETH_MTLTQOMR_TSF_Pos: u32 = 1;
pub const ETH_MTLTQOMR_TSF_Msk: u32 = 0x1 << ETH_MTLTQOMR_TSF_Pos;
pub const ETH_MTLTQOMR_TSF: u32 = ETH_MTLTQOMR_TSF_Msk;
pub const ETH_MTLTQOMR_FTQ_Pos: u32 = 0;
pub const ETH_MTLTQOMR_FTQ_Msk: u32 = 0x1 << ETH_MTLTQOMR_FTQ_Pos;
pub const ETH_MTLTQOMR_FTQ: u32 = ETH_MTLTQOMR_FTQ_Msk;
pub const ETH_MTLTQUR_UFCNTOVF_Pos: u32 = 11;
pub const ETH_MTLTQUR_UFCNTOVF_Msk: u32 = 0x1 << ETH_MTLTQUR_UFCNTOVF_Pos;
pub const ETH_MTLTQUR_UFCNTOVF: u32 = ETH_MTLTQUR_UFCNTOVF_Msk;
pub const ETH_MTLTQUR_UFPKTCNT_Pos: u32 = 0;
pub const ETH_MTLTQUR_UFPKTCNT_Msk: u32 = 0x7FF << ETH_MTLTQUR_UFPKTCNT_Pos;
pub const ETH_MTLTQUR_UFPKTCNT: u32 = ETH_MTLTQUR_UFPKTCNT_Msk;
pub const ETH_MTLTQDR_STXSTSF_Pos: u32 = 20;
pub const ETH_MTLTQDR_STXSTSF_Msk: u32 = 0x7 << ETH_MTLTQDR_STXSTSF_Pos;
pub const ETH_MTLTQDR_STXSTSF: u32 = ETH_MTLTQDR_STXSTSF_Msk;
pub const ETH_MTLTQDR_PTXQ_Pos: u32 = 16;
pub const ETH_MTLTQDR_PTXQ_Msk: u32 = 0x7 << ETH_MTLTQDR_PTXQ_Pos;
pub const ETH_MTLTQDR_PTXQ: u32 = ETH_MTLTQDR_PTXQ_Msk;
pub const ETH_MTLTQDR_TXSTSFSTS_Pos: u32 = 5;
pub const ETH_MTLTQDR_TXSTSFSTS_Msk: u32 = 0x1 << ETH_MTLTQDR_TXSTSFSTS_Pos;
pub const ETH_MTLTQDR_TXSTSFSTS: u32 = ETH_MTLTQDR_TXSTSFSTS_Msk;
pub const ETH_MTLTQDR_TXQSTS_Pos: u32 = 4;
pub const ETH_MTLTQDR_TXQSTS_Msk: u32 = 0x1 << ETH_MTLTQDR_TXQSTS_Pos;
pub const ETH_MTLTQDR_TXQSTS: u32 = ETH_MTLTQDR_TXQSTS_Msk;
pub const ETH_MTLTQDR_TWCSTS_Pos: u32 = 3;
pub const ETH_MTLTQDR_TWCSTS_Msk: u32 = 0x1 << ETH_MTLTQDR_TWCSTS_Pos;
pub const ETH_MTLTQDR_TWCSTS: u32 = ETH_MTLTQDR_TWCSTS_Msk;
pub const ETH_MTLTQDR_TRCSTS_Pos: u32 = 1;
pub const ETH_MTLTQDR_TRCSTS_Msk: u32 = 0x3 << ETH_MTLTQDR_TRCSTS_Pos;
pub const ETH_MTLTQDR_TRCSTS: u32 = ETH_MTLTQDR_TRCSTS_Msk;
pub const ETH_MTLTQDR_TRCSTS_IDLE: u32 = uint32_t0x00000000;
pub const ETH_MTLTQDR_TRCSTS_READ: u32 = uint32_t0x00000002;
pub const ETH_MTLTQDR_TRCSTS_WAITING: u32 = uint32_t0x00000004;
pub const ETH_MTLTQDR_TRCSTS_FLUSHING: u32 = uint32_t0x00000006;
pub const ETH_MTLTQDR_TXQPAUSED_Pos: u32 = 0;
pub const ETH_MTLTQDR_TXQPAUSED_Msk: u32 = 0x1 << ETH_MTLTQDR_TXQPAUSED_Pos;
pub const ETH_MTLTQDR_TXQPAUSED: u32 = ETH_MTLTQDR_TXQPAUSED_Msk;
pub const ETH_MTLQICSR_RXOIE_Pos: u32 = 24;
pub const ETH_MTLQICSR_RXOIE_Msk: u32 = 0x1 << ETH_MTLQICSR_RXOIE_Pos;
pub const ETH_MTLQICSR_RXOIE: u32 = ETH_MTLQICSR_RXOIE_Msk;
pub const ETH_MTLQICSR_RXOVFIS_Pos: u32 = 16;
pub const ETH_MTLQICSR_RXOVFIS_Msk: u32 = 0x1 << ETH_MTLQICSR_RXOVFIS_Pos;
pub const ETH_MTLQICSR_RXOVFIS: u32 = ETH_MTLQICSR_RXOVFIS_Msk;
pub const ETH_MTLQICSR_TXUIE_Pos: u32 = 8;
pub const ETH_MTLQICSR_TXUIE_Msk: u32 = 0x1 << ETH_MTLQICSR_TXUIE_Pos;
pub const ETH_MTLQICSR_TXUIE: u32 = ETH_MTLQICSR_TXUIE_Msk;
pub const ETH_MTLQICSR_TXUNFIS_Pos: u32 = 0;
pub const ETH_MTLQICSR_TXUNFIS_Msk: u32 = 0x1 << ETH_MTLQICSR_TXUNFIS_Pos;
pub const ETH_MTLQICSR_TXUNFIS: u32 = ETH_MTLQICSR_TXUNFIS_Msk;
pub const ETH_MTLRQOMR_RQS_Pos: u32 = 20;
pub const ETH_MTLRQOMR_RQS_Msk: u32 = 0x7 << ETH_MTLRQOMR_RQS_Pos;
pub const ETH_MTLRQOMR_RQS: u32 = ETH_MTLRQOMR_RQS_Msk;
pub const ETH_MTLRQOMR_RFD_Pos: u32 = 14;
pub const ETH_MTLRQOMR_RFD_Msk: u32 = 0x7 << ETH_MTLRQOMR_RFD_Pos;
pub const ETH_MTLRQOMR_RFD: u32 = ETH_MTLRQOMR_RFD_Msk;
pub const ETH_MTLRQOMR_RFA_Pos: u32 = 8;
pub const ETH_MTLRQOMR_RFA_Msk: u32 = 0x7 << ETH_MTLRQOMR_RFA_Pos;
pub const ETH_MTLRQOMR_RFA: u32 = ETH_MTLRQOMR_RFA_Msk;
pub const ETH_MTLRQOMR_EHFC_Pos: u32 = 7;
pub const ETH_MTLRQOMR_EHFC_Msk: u32 = 0x1 << ETH_MTLRQOMR_EHFC_Pos;
pub const ETH_MTLRQOMR_EHFC: u32 = ETH_MTLRQOMR_EHFC_Msk;
pub const ETH_MTLRQOMR_DISTCPEF_Pos: u32 = 6;
pub const ETH_MTLRQOMR_DISTCPEF_Msk: u32 = 0x1 << ETH_MTLRQOMR_DISTCPEF_Pos;
pub const ETH_MTLRQOMR_DISTCPEF: u32 = ETH_MTLRQOMR_DISTCPEF_Msk;
pub const ETH_MTLRQOMR_RSF_Pos: u32 = 5;
pub const ETH_MTLRQOMR_RSF_Msk: u32 = 0x1 << ETH_MTLRQOMR_RSF_Pos;
pub const ETH_MTLRQOMR_RSF: u32 = ETH_MTLRQOMR_RSF_Msk;
pub const ETH_MTLRQOMR_FEP_Pos: u32 = 4;
pub const ETH_MTLRQOMR_FEP_Msk: u32 = 0x1 << ETH_MTLRQOMR_FEP_Pos;
pub const ETH_MTLRQOMR_FEP: u32 = ETH_MTLRQOMR_FEP_Msk;
pub const ETH_MTLRQOMR_FUP_Pos: u32 = 3;
pub const ETH_MTLRQOMR_FUP_Msk: u32 = 0x1 << ETH_MTLRQOMR_FUP_Pos;
pub const ETH_MTLRQOMR_FUP: u32 = ETH_MTLRQOMR_FUP_Msk;
pub const ETH_MTLRQOMR_RTC_Pos: u32 = 0;
pub const ETH_MTLRQOMR_RTC_Msk: u32 = 0x3 << ETH_MTLRQOMR_RTC_Pos;
pub const ETH_MTLRQOMR_RTC: u32 = ETH_MTLRQOMR_RTC_Msk;
pub const ETH_MTLRQOMR_RTC_64BITS: u32 = uint32_t0x00000000;
pub const ETH_MTLRQOMR_RTC_32BITS: u32 = uint32_t0x00000001;
pub const ETH_MTLRQOMR_RTC_96BITS: u32 = uint32_t0x00000002;
pub const ETH_MTLRQOMR_RTC_128BITS: u32 = uint32_t0x00000003;
pub const ETH_MTLRQMPOCR_MISCNTOVF_Pos: u32 = 27;
pub const ETH_MTLRQMPOCR_MISCNTOVF_Msk: u32 = 0x1 << ETH_MTLRQMPOCR_MISCNTOVF_Pos;
pub const ETH_MTLRQMPOCR_MISCNTOVF: u32 = ETH_MTLRQMPOCR_MISCNTOVF_Msk;
pub const ETH_MTLRQMPOCR_MISPKTCNT_Pos: u32 = 16;
pub const ETH_MTLRQMPOCR_MISPKTCNT_Msk: u32 = 0x7FF << ETH_MTLRQMPOCR_MISPKTCNT_Pos;
pub const ETH_MTLRQMPOCR_MISPKTCNT: u32 = ETH_MTLRQMPOCR_MISPKTCNT_Msk;
pub const ETH_MTLRQMPOCR_OVFCNTOVF_Pos: u32 = 11;
pub const ETH_MTLRQMPOCR_OVFCNTOVF_Msk: u32 = 0x1 << ETH_MTLRQMPOCR_OVFCNTOVF_Pos;
pub const ETH_MTLRQMPOCR_OVFCNTOVF: u32 = ETH_MTLRQMPOCR_OVFCNTOVF_Msk;
pub const ETH_MTLRQMPOCR_OVFPKTCNT_Pos: u32 = 0;
pub const ETH_MTLRQMPOCR_OVFPKTCNT_Msk: u32 = 0x7FF << ETH_MTLRQMPOCR_OVFPKTCNT_Pos;
pub const ETH_MTLRQMPOCR_OVFPKTCNT: u32 = ETH_MTLRQMPOCR_OVFPKTCNT_Msk;
pub const ETH_MTLRQDR_PRXQ_Pos: u32 = 16;
pub const ETH_MTLRQDR_PRXQ_Msk: u32 = 0x3FFF << ETH_MTLRQDR_PRXQ_Pos;
pub const ETH_MTLRQDR_PRXQ: u32 = ETH_MTLRQDR_PRXQ_Msk;
pub const ETH_MTLRQDR_RXQSTS_Pos: u32 = 4;
pub const ETH_MTLRQDR_RXQSTS_Msk: u32 = 0x3 << ETH_MTLRQDR_RXQSTS_Pos;
pub const ETH_MTLRQDR_RXQSTS: u32 = ETH_MTLRQDR_RXQSTS_Msk;
pub const ETH_MTLRQDR_RXQSTS_EMPTY: u32 = uint32_t0x00000000;
pub const ETH_MTLRQDR_RXQSTS_BELOWTHRESHOLD_Pos: u32 = 4;
pub const ETH_MTLRQDR_RXQSTS_BELOWTHRESHOLD_Msk: u32 = 0x1 << ETH_MTLRQDR_RXQSTS_BELOWTHRESHOLD_Pos;
pub const ETH_MTLRQDR_RXQSTS_BELOWTHRESHOLD: u32 = ETH_MTLRQDR_RXQSTS_BELOWTHRESHOLD_Msk;
pub const ETH_MTLRQDR_RXQSTS_ABOVETHRESHOLD_Pos: u32 = 5;
pub const ETH_MTLRQDR_RXQSTS_ABOVETHRESHOLD_Msk: u32 = 0x1 << ETH_MTLRQDR_RXQSTS_ABOVETHRESHOLD_Pos;
pub const ETH_MTLRQDR_RXQSTS_ABOVETHRESHOLD: u32 = ETH_MTLRQDR_RXQSTS_ABOVETHRESHOLD_Msk;
pub const ETH_MTLRQDR_RXQSTS_FULL_Pos: u32 = 4;
pub const ETH_MTLRQDR_RXQSTS_FULL_Msk: u32 = 0x3 << ETH_MTLRQDR_RXQSTS_FULL_Pos;
pub const ETH_MTLRQDR_RXQSTS_FULL: u32 = ETH_MTLRQDR_RXQSTS_FULL_Msk;
pub const ETH_MTLRQDR_RRCSTS_Pos: u32 = 1;
pub const ETH_MTLRQDR_RRCSTS_Msk: u32 = 0x3 << ETH_MTLRQDR_RRCSTS_Pos;
pub const ETH_MTLRQDR_RRCSTS: u32 = ETH_MTLRQDR_RRCSTS_Msk;
pub const ETH_MTLRQDR_RRCSTS_IDLE: u32 = uint32_t0x00000000;
pub const ETH_MTLRQDR_RRCSTS_READINGDATA_Pos: u32 = 1;
pub const ETH_MTLRQDR_RRCSTS_READINGDATA_Msk: u32 = 0x1 << ETH_MTLRQDR_RRCSTS_READINGDATA_Pos;
pub const ETH_MTLRQDR_RRCSTS_READINGDATA: u32 = ETH_MTLRQDR_RRCSTS_READINGDATA_Msk;
pub const ETH_MTLRQDR_RRCSTS_READINGSTATUS_Pos: u32 = 2;
pub const ETH_MTLRQDR_RRCSTS_READINGSTATUS_Msk: u32 = 0x1 << ETH_MTLRQDR_RRCSTS_READINGSTATUS_Pos;
pub const ETH_MTLRQDR_RRCSTS_READINGSTATUS: u32 = ETH_MTLRQDR_RRCSTS_READINGSTATUS_Msk;
pub const ETH_MTLRQDR_RRCSTS_FLUSHING_Pos: u32 = 1;
pub const ETH_MTLRQDR_RRCSTS_FLUSHING_Msk: u32 = 0x3 << ETH_MTLRQDR_RRCSTS_FLUSHING_Pos;
pub const ETH_MTLRQDR_RRCSTS_FLUSHING: u32 = ETH_MTLRQDR_RRCSTS_FLUSHING_Msk;
pub const ETH_MTLRQDR_RWCSTS_Pos: u32 = 0;
pub const ETH_MTLRQDR_RWCSTS_Msk: u32 = 0x1 << ETH_MTLRQDR_RWCSTS_Pos;
pub const ETH_MTLRQDR_RWCSTS: u32 = ETH_MTLRQDR_RWCSTS_Msk;
pub const ETH_MTLRQCR_RQPA_Pos: u32 = 3;
pub const ETH_MTLRQCR_RQPA_Msk: u32 = 0x1 << ETH_MTLRQCR_RQPA_Pos;
pub const ETH_MTLRQCR_RQPA: u32 = ETH_MTLRQCR_RQPA_Msk;
pub const ETH_MTLRQCR_RQW_Pos: u32 = 0;
pub const ETH_MTLRQCR_RQW_Msk: u32 = 0x7 << ETH_MTLRQCR_RQW_Pos;
pub const ETH_MTLRQCR_RQW: u32 = ETH_MTLRQCR_RQW_Msk;
pub const ETH_DMAMR_INTM_Pos: u32 = 16;
pub const ETH_DMAMR_INTM_Msk: u32 = 0x3 << ETH_DMAMR_INTM_Pos;
pub const ETH_DMAMR_INTM: u32 = ETH_DMAMR_INTM_Msk;
pub const ETH_DMAMR_INTM_0: u32 = 0x0 << ETH_DMAMR_INTM_Pos;
pub const ETH_DMAMR_INTM_1: u32 = 0x1 << ETH_DMAMR_INTM_Pos;
pub const ETH_DMAMR_INTM_2: u32 = 0x2 << ETH_DMAMR_INTM_Pos;
pub const ETH_DMAMR_PR_Pos: u32 = 12;
pub const ETH_DMAMR_PR_Msk: u32 = 0x7 << ETH_DMAMR_PR_Pos;
pub const ETH_DMAMR_PR: u32 = ETH_DMAMR_PR_Msk;
pub const ETH_DMAMR_PR_1_1: u32 = uint32_t0x00000000;
pub const ETH_DMAMR_PR_2_1: u32 = uint32_t0x00001000;
pub const ETH_DMAMR_PR_3_1: u32 = uint32_t0x00002000;
pub const ETH_DMAMR_PR_4_1: u32 = uint32_t0x00003000;
pub const ETH_DMAMR_PR_5_1: u32 = uint32_t0x00004000;
pub const ETH_DMAMR_PR_6_1: u32 = uint32_t0x00005000;
pub const ETH_DMAMR_PR_7_1: u32 = uint32_t0x00006000;
pub const ETH_DMAMR_PR_8_1: u32 = uint32_t0x00007000;
pub const ETH_DMAMR_TXPR_Pos: u32 = 11;
pub const ETH_DMAMR_TXPR_Msk: u32 = 0x1 << ETH_DMAMR_TXPR_Pos;
pub const ETH_DMAMR_TXPR: u32 = ETH_DMAMR_TXPR_Msk;
pub const ETH_DMAMR_DA_Pos: u32 = 1;
pub const ETH_DMAMR_DA_Msk: u32 = 0x1 << ETH_DMAMR_DA_Pos;
pub const ETH_DMAMR_DA: u32 = ETH_DMAMR_DA_Msk;
pub const ETH_DMAMR_SWR_Pos: u32 = 0;
pub const ETH_DMAMR_SWR_Msk: u32 = 0x1 << ETH_DMAMR_SWR_Pos;
pub const ETH_DMAMR_SWR: u32 = ETH_DMAMR_SWR_Msk;
pub const ETH_DMASBMR_RB_Pos: u32 = 15;
pub const ETH_DMASBMR_RB_Msk: u32 = 0x1 << ETH_DMASBMR_RB_Pos;
pub const ETH_DMASBMR_RB: u32 = ETH_DMASBMR_RB_Msk;
pub const ETH_DMASBMR_MB_Pos: u32 = 14;
pub const ETH_DMASBMR_MB_Msk: u32 = 0x1 << ETH_DMASBMR_MB_Pos;
pub const ETH_DMASBMR_MB: u32 = ETH_DMASBMR_MB_Msk;
pub const ETH_DMASBMR_AAL_Pos: u32 = 12;
pub const ETH_DMASBMR_AAL_Msk: u32 = 0x1 << ETH_DMASBMR_AAL_Pos;
pub const ETH_DMASBMR_AAL: u32 = ETH_DMASBMR_AAL_Msk;
pub const ETH_DMASBMR_FB_Pos: u32 = 0;
pub const ETH_DMASBMR_FB_Msk: u32 = 0x1 << ETH_DMASBMR_FB_Pos;
pub const ETH_DMASBMR_FB: u32 = ETH_DMASBMR_FB_Msk;
pub const ETH_DMAISR_MACIS_Pos: u32 = 17;
pub const ETH_DMAISR_MACIS_Msk: u32 = 0x1 << ETH_DMAISR_MACIS_Pos;
pub const ETH_DMAISR_MACIS: u32 = ETH_DMAISR_MACIS_Msk;
pub const ETH_DMAISR_MTLIS_Pos: u32 = 16;
pub const ETH_DMAISR_MTLIS_Msk: u32 = 0x1 << ETH_DMAISR_MTLIS_Pos;
pub const ETH_DMAISR_MTLIS: u32 = ETH_DMAISR_MTLIS_Msk;
pub const ETH_DMAISR_DMACIS_Pos: u32 = 0;
pub const ETH_DMAISR_DMACIS_Msk: u32 = 0x1 << ETH_DMAISR_DMACIS_Pos;
pub const ETH_DMAISR_DMACIS: u32 = ETH_DMAISR_DMACIS_Msk;
pub const ETH_DMADSR_TPS_Pos: u32 = 12;
pub const ETH_DMADSR_TPS_Msk: u32 = 0xF << ETH_DMADSR_TPS_Pos;
pub const ETH_DMADSR_TPS: u32 = ETH_DMADSR_TPS_Msk;
pub const ETH_DMADSR_TPS_STOPPED: u32 = uint32_t0x00000000;
pub const ETH_DMADSR_TPS_FETCHING_Pos: u32 = 12;
pub const ETH_DMADSR_TPS_FETCHING_Msk: u32 = 0x1 << ETH_DMADSR_TPS_FETCHING_Pos;
pub const ETH_DMADSR_TPS_FETCHING: u32 = ETH_DMADSR_TPS_FETCHING_Msk;
pub const ETH_DMADSR_TPS_WAITING_Pos: u32 = 13;
pub const ETH_DMADSR_TPS_WAITING_Msk: u32 = 0x1 << ETH_DMADSR_TPS_WAITING_Pos;
pub const ETH_DMADSR_TPS_WAITING: u32 = ETH_DMADSR_TPS_WAITING_Msk;
pub const ETH_DMADSR_TPS_READING_Pos: u32 = 12;
pub const ETH_DMADSR_TPS_READING_Msk: u32 = 0x3 << ETH_DMADSR_TPS_READING_Pos;
pub const ETH_DMADSR_TPS_READING: u32 = ETH_DMADSR_TPS_READING_Msk;
pub const ETH_DMADSR_TPS_TIMESTAMP_WR_Pos: u32 = 14;
pub const ETH_DMADSR_TPS_TIMESTAMP_WR_Msk: u32 = 0x1 << ETH_DMADSR_TPS_TIMESTAMP_WR_Pos;
pub const ETH_DMADSR_TPS_TIMESTAMP_WR: u32 = ETH_DMADSR_TPS_TIMESTAMP_WR_Msk;
pub const ETH_DMADSR_TPS_SUSPENDED_Pos: u32 = 13;
pub const ETH_DMADSR_TPS_SUSPENDED_Msk: u32 = 0x3 << ETH_DMADSR_TPS_SUSPENDED_Pos;
pub const ETH_DMADSR_TPS_SUSPENDED: u32 = ETH_DMADSR_TPS_SUSPENDED_Msk;
pub const ETH_DMADSR_TPS_CLOSING_Pos: u32 = 12;
pub const ETH_DMADSR_TPS_CLOSING_Msk: u32 = 0x7 << ETH_DMADSR_TPS_CLOSING_Pos;
pub const ETH_DMADSR_TPS_CLOSING: u32 = ETH_DMADSR_TPS_CLOSING_Msk;
pub const ETH_DMADSR_RPS_Pos: u32 = 8;
pub const ETH_DMADSR_RPS_Msk: u32 = 0xF << ETH_DMADSR_RPS_Pos;
pub const ETH_DMADSR_RPS: u32 = ETH_DMADSR_RPS_Msk;
pub const ETH_DMADSR_RPS_STOPPED: u32 = uint32_t0x00000000;
pub const ETH_DMADSR_RPS_FETCHING_Pos: u32 = 12;
pub const ETH_DMADSR_RPS_FETCHING_Msk: u32 = 0x1 << ETH_DMADSR_RPS_FETCHING_Pos;
pub const ETH_DMADSR_RPS_FETCHING: u32 = ETH_DMADSR_RPS_FETCHING_Msk;
pub const ETH_DMADSR_RPS_WAITING_Pos: u32 = 12;
pub const ETH_DMADSR_RPS_WAITING_Msk: u32 = 0x3 << ETH_DMADSR_RPS_WAITING_Pos;
pub const ETH_DMADSR_RPS_WAITING: u32 = ETH_DMADSR_RPS_WAITING_Msk;
pub const ETH_DMADSR_RPS_SUSPENDED_Pos: u32 = 14;
pub const ETH_DMADSR_RPS_SUSPENDED_Msk: u32 = 0x1 << ETH_DMADSR_RPS_SUSPENDED_Pos;
pub const ETH_DMADSR_RPS_SUSPENDED: u32 = ETH_DMADSR_RPS_SUSPENDED_Msk;
pub const ETH_DMADSR_RPS_CLOSING_Pos: u32 = 12;
pub const ETH_DMADSR_RPS_CLOSING_Msk: u32 = 0x5 << ETH_DMADSR_RPS_CLOSING_Pos;
pub const ETH_DMADSR_RPS_CLOSING: u32 = ETH_DMADSR_RPS_CLOSING_Msk;
pub const ETH_DMADSR_RPS_TIMESTAMP_WR_Pos: u32 = 13;
pub const ETH_DMADSR_RPS_TIMESTAMP_WR_Msk: u32 = 0x3 << ETH_DMADSR_RPS_TIMESTAMP_WR_Pos;
pub const ETH_DMADSR_RPS_TIMESTAMP_WR: u32 = ETH_DMADSR_RPS_TIMESTAMP_WR_Msk;
pub const ETH_DMADSR_RPS_TRANSFERRING_Pos: u32 = 12;
pub const ETH_DMADSR_RPS_TRANSFERRING_Msk: u32 = 0x7 << ETH_DMADSR_RPS_TRANSFERRING_Pos;
pub const ETH_DMADSR_RPS_TRANSFERRING: u32 = ETH_DMADSR_RPS_TRANSFERRING_Msk;
pub const ETH_DMACCR_DSL_Pos: u32 = 18;
pub const ETH_DMACCR_DSL_Msk: u32 = 0x7 << ETH_DMACCR_DSL_Pos;
pub const ETH_DMACCR_DSL: u32 = ETH_DMACCR_DSL_Msk;
pub const ETH_DMACCR_DSL_0BIT: u32 = uint32_t0x00000000;
pub const ETH_DMACCR_DSL_32BIT: u32 = uint32_t0x00040000;
pub const ETH_DMACCR_DSL_64BIT: u32 = uint32_t0x00080000;
pub const ETH_DMACCR_DSL_128BIT: u32 = uint32_t0x00100000;
pub const ETH_DMACCR_8PBL: u32 = uint32_t0x00010000;
pub const ETH_DMACCR_MSS_Pos: u32 = 0;
pub const ETH_DMACCR_MSS_Msk: u32 = 0x3FFF << ETH_DMACCR_MSS_Pos;
pub const ETH_DMACCR_MSS: u32 = ETH_DMACCR_MSS_Msk;
pub const ETH_DMACTCR_TPBL_Pos: u32 = 16;
pub const ETH_DMACTCR_TPBL_Msk: u32 = 0x3F << ETH_DMACTCR_TPBL_Pos;
pub const ETH_DMACTCR_TPBL: u32 = ETH_DMACTCR_TPBL_Msk;
pub const ETH_DMACTCR_TPBL_1PBL: u32 = uint32_t0x00010000;
pub const ETH_DMACTCR_TPBL_2PBL: u32 = uint32_t0x00020000;
pub const ETH_DMACTCR_TPBL_4PBL: u32 = uint32_t0x00040000;
pub const ETH_DMACTCR_TPBL_8PBL: u32 = uint32_t0x00080000;
pub const ETH_DMACTCR_TPBL_16PBL: u32 = uint32_t0x00100000;
pub const ETH_DMACTCR_TPBL_32PBL: u32 = uint32_t0x00200000;
pub const ETH_DMACTCR_TSE_Pos: u32 = 12;
pub const ETH_DMACTCR_TSE_Msk: u32 = 0x1 << ETH_DMACTCR_TSE_Pos;
pub const ETH_DMACTCR_TSE: u32 = ETH_DMACTCR_TSE_Msk;
pub const ETH_DMACTCR_OSP_Pos: u32 = 4;
pub const ETH_DMACTCR_OSP_Msk: u32 = 0x1 << ETH_DMACTCR_OSP_Pos;
pub const ETH_DMACTCR_OSP: u32 = ETH_DMACTCR_OSP_Msk;
pub const ETH_DMACTCR_ST_Pos: u32 = 0;
pub const ETH_DMACTCR_ST_Msk: u32 = 0x1 << ETH_DMACTCR_ST_Pos;
pub const ETH_DMACTCR_ST: u32 = ETH_DMACTCR_ST_Msk;
pub const ETH_DMACRCR_RPF_Pos: u32 = 31;
pub const ETH_DMACRCR_RPF_Msk: u32 = 0x1 << ETH_DMACRCR_RPF_Pos;
pub const ETH_DMACRCR_RPF: u32 = ETH_DMACRCR_RPF_Msk;
pub const ETH_DMACRCR_RPBL_Pos: u32 = 16;
pub const ETH_DMACRCR_RPBL_Msk: u32 = 0x3F << ETH_DMACRCR_RPBL_Pos;
pub const ETH_DMACRCR_RPBL: u32 = ETH_DMACRCR_RPBL_Msk;
pub const ETH_DMACRCR_RPBL_1PBL: u32 = uint32_t0x00010000;
pub const ETH_DMACRCR_RPBL_2PBL: u32 = uint32_t0x00020000;
pub const ETH_DMACRCR_RPBL_4PBL: u32 = uint32_t0x00040000;
pub const ETH_DMACRCR_RPBL_8PBL: u32 = uint32_t0x00080000;
pub const ETH_DMACRCR_RPBL_16PBL: u32 = uint32_t0x00100000;
pub const ETH_DMACRCR_RPBL_32PBL: u32 = uint32_t0x00200000;
pub const ETH_DMACRCR_RBSZ_Pos: u32 = 1;
pub const ETH_DMACRCR_RBSZ_Msk: u32 = 0x3FFF << ETH_DMACRCR_RBSZ_Pos;
pub const ETH_DMACRCR_RBSZ: u32 = ETH_DMACRCR_RBSZ_Msk;
pub const ETH_DMACRCR_SR_Pos: u32 = 0;
pub const ETH_DMACRCR_SR_Msk: u32 = 0x1 << ETH_DMACRCR_SR_Pos;
pub const ETH_DMACRCR_SR: u32 = ETH_DMACRCR_SR_Msk;
pub const ETH_DMACTDLAR_TDESLA_Pos: u32 = 2;
pub const ETH_DMACTDLAR_TDESLA_Msk: u32 = 0x3FFFFFFF << ETH_DMACTDLAR_TDESLA_Pos;
pub const ETH_DMACTDLAR_TDESLA: u32 = ETH_DMACTDLAR_TDESLA_Msk;
pub const ETH_DMACRDLAR_RDESLA_Pos: u32 = 2;
pub const ETH_DMACRDLAR_RDESLA_Msk: u32 = 0x3FFFFFFF << ETH_DMACRDLAR_RDESLA_Pos;
pub const ETH_DMACRDLAR_RDESLA: u32 = ETH_DMACRDLAR_RDESLA_Msk;
pub const ETH_DMACTDTPR_TDT_Pos: u32 = 2;
pub const ETH_DMACTDTPR_TDT_Msk: u32 = 0x3FFFFFFF << ETH_DMACTDTPR_TDT_Pos;
pub const ETH_DMACTDTPR_TDT: u32 = ETH_DMACTDTPR_TDT_Msk;
pub const ETH_DMACRDTPR_RDT_Pos: u32 = 2;
pub const ETH_DMACRDTPR_RDT_Msk: u32 = 0x3FFFFFFF << ETH_DMACRDTPR_RDT_Pos;
pub const ETH_DMACRDTPR_RDT: u32 = ETH_DMACRDTPR_RDT_Msk;
pub const ETH_DMACTDRLR_TDRL_Pos: u32 = 0;
pub const ETH_DMACTDRLR_TDRL_Msk: u32 = 0x3FF << ETH_DMACTDRLR_TDRL_Pos;
pub const ETH_DMACTDRLR_TDRL: u32 = ETH_DMACTDRLR_TDRL_Msk;
pub const ETH_DMACRDRLR_RDRL_Pos: u32 = 0;
pub const ETH_DMACRDRLR_RDRL_Msk: u32 = 0x3FF << ETH_DMACRDRLR_RDRL_Pos;
pub const ETH_DMACRDRLR_RDRL: u32 = ETH_DMACRDRLR_RDRL_Msk;
pub const ETH_DMACIER_NIE_Pos: u32 = 15;
pub const ETH_DMACIER_NIE_Msk: u32 = 0x1 << ETH_DMACIER_NIE_Pos;
pub const ETH_DMACIER_NIE: u32 = ETH_DMACIER_NIE_Msk;
pub const ETH_DMACIER_AIE_Pos: u32 = 14;
pub const ETH_DMACIER_AIE_Msk: u32 = 0x1 << ETH_DMACIER_AIE_Pos;
pub const ETH_DMACIER_AIE: u32 = ETH_DMACIER_AIE_Msk;
pub const ETH_DMACIER_CDEE_Pos: u32 = 13;
pub const ETH_DMACIER_CDEE_Msk: u32 = 0x1 << ETH_DMACIER_CDEE_Pos;
pub const ETH_DMACIER_CDEE: u32 = ETH_DMACIER_CDEE_Msk;
pub const ETH_DMACIER_FBEE_Pos: u32 = 12;
pub const ETH_DMACIER_FBEE_Msk: u32 = 0x1 << ETH_DMACIER_FBEE_Pos;
pub const ETH_DMACIER_FBEE: u32 = ETH_DMACIER_FBEE_Msk;
pub const ETH_DMACIER_ERIE_Pos: u32 = 11;
pub const ETH_DMACIER_ERIE_Msk: u32 = 0x1 << ETH_DMACIER_ERIE_Pos;
pub const ETH_DMACIER_ERIE: u32 = ETH_DMACIER_ERIE_Msk;
pub const ETH_DMACIER_ETIE_Pos: u32 = 10;
pub const ETH_DMACIER_ETIE_Msk: u32 = 0x1 << ETH_DMACIER_ETIE_Pos;
pub const ETH_DMACIER_ETIE: u32 = ETH_DMACIER_ETIE_Msk;
pub const ETH_DMACIER_RWTE_Pos: u32 = 9;
pub const ETH_DMACIER_RWTE_Msk: u32 = 0x1 << ETH_DMACIER_RWTE_Pos;
pub const ETH_DMACIER_RWTE: u32 = ETH_DMACIER_RWTE_Msk;
pub const ETH_DMACIER_RSE_Pos: u32 = 8;
pub const ETH_DMACIER_RSE_Msk: u32 = 0x1 << ETH_DMACIER_RSE_Pos;
pub const ETH_DMACIER_RSE: u32 = ETH_DMACIER_RSE_Msk;
pub const ETH_DMACIER_RBUE_Pos: u32 = 7;
pub const ETH_DMACIER_RBUE_Msk: u32 = 0x1 << ETH_DMACIER_RBUE_Pos;
pub const ETH_DMACIER_RBUE: u32 = ETH_DMACIER_RBUE_Msk;
pub const ETH_DMACIER_RIE_Pos: u32 = 6;
pub const ETH_DMACIER_RIE_Msk: u32 = 0x1 << ETH_DMACIER_RIE_Pos;
pub const ETH_DMACIER_RIE: u32 = ETH_DMACIER_RIE_Msk;
pub const ETH_DMACIER_TBUE_Pos: u32 = 2;
pub const ETH_DMACIER_TBUE_Msk: u32 = 0x1 << ETH_DMACIER_TBUE_Pos;
pub const ETH_DMACIER_TBUE: u32 = ETH_DMACIER_TBUE_Msk;
pub const ETH_DMACIER_TXSE_Pos: u32 = 1;
pub const ETH_DMACIER_TXSE_Msk: u32 = 0x1 << ETH_DMACIER_TXSE_Pos;
pub const ETH_DMACIER_TXSE: u32 = ETH_DMACIER_TXSE_Msk;
pub const ETH_DMACIER_TIE_Pos: u32 = 0;
pub const ETH_DMACIER_TIE_Msk: u32 = 0x1 << ETH_DMACIER_TIE_Pos;
pub const ETH_DMACIER_TIE: u32 = ETH_DMACIER_TIE_Msk;
pub const ETH_DMACRIWTR_RWT_Pos: u32 = 0;
pub const ETH_DMACRIWTR_RWT_Msk: u32 = 0xFF << ETH_DMACRIWTR_RWT_Pos;
pub const ETH_DMACRIWTR_RWT: u32 = ETH_DMACRIWTR_RWT_Msk;
pub const ETH_DMACCATDR_CURTDESAPTR_Pos: u32 = 0;
pub const ETH_DMACCATDR_CURTDESAPTR_Msk: u32 = 0xFFFFFFFF << ETH_DMACCATDR_CURTDESAPTR_Pos;
pub const ETH_DMACCATDR_CURTDESAPTR: u32 = ETH_DMACCATDR_CURTDESAPTR_Msk;
pub const ETH_DMACCARDR_CURRDESAPTR_Pos: u32 = 0;
pub const ETH_DMACCARDR_CURRDESAPTR_Msk: u32 = 0xFFFFFFFF << ETH_DMACCARDR_CURRDESAPTR_Pos;
pub const ETH_DMACCARDR_CURRDESAPTR: u32 = ETH_DMACCARDR_CURRDESAPTR_Msk;
pub const ETH_DMACCATBR_CURTBUFAPTR_Pos: u32 = 0;
pub const ETH_DMACCATBR_CURTBUFAPTR_Msk: u32 = 0xFFFFFFFF << ETH_DMACCATBR_CURTBUFAPTR_Pos;
pub const ETH_DMACCATBR_CURTBUFAPTR: u32 = ETH_DMACCATBR_CURTBUFAPTR_Msk;
pub const ETH_DMACCARBR_CURRBUFAPTR_Pos: u32 = 0;
pub const ETH_DMACCARBR_CURRBUFAPTR_Msk: u32 = 0xFFFFFFFF << ETH_DMACCARBR_CURRBUFAPTR_Pos;
pub const ETH_DMACCARBR_CURRBUFAPTR: u32 = ETH_DMACCARBR_CURRBUFAPTR_Msk;
pub const ETH_DMACSR_REB_Pos: u32 = 19;
pub const ETH_DMACSR_REB_Msk: u32 = 0x7 << ETH_DMACSR_REB_Pos;
pub const ETH_DMACSR_REB: u32 = ETH_DMACSR_REB_Msk;
pub const ETH_DMACSR_TEB_Pos: u32 = 16;
pub const ETH_DMACSR_TEB_Msk: u32 = 0x7 << ETH_DMACSR_TEB_Pos;
pub const ETH_DMACSR_TEB: u32 = ETH_DMACSR_TEB_Msk;
pub const ETH_DMACSR_NIS_Pos: u32 = 15;
pub const ETH_DMACSR_NIS_Msk: u32 = 0x1 << ETH_DMACSR_NIS_Pos;
pub const ETH_DMACSR_NIS: u32 = ETH_DMACSR_NIS_Msk;
pub const ETH_DMACSR_AIS_Pos: u32 = 14;
pub const ETH_DMACSR_AIS_Msk: u32 = 0x1 << ETH_DMACSR_AIS_Pos;
pub const ETH_DMACSR_AIS: u32 = ETH_DMACSR_AIS_Msk;
pub const ETH_DMACSR_CDE_Pos: u32 = 13;
pub const ETH_DMACSR_CDE_Msk: u32 = 0x1 << ETH_DMACSR_CDE_Pos;
pub const ETH_DMACSR_CDE: u32 = ETH_DMACSR_CDE_Msk;
pub const ETH_DMACSR_FBE_Pos: u32 = 12;
pub const ETH_DMACSR_FBE_Msk: u32 = 0x1 << ETH_DMACSR_FBE_Pos;
pub const ETH_DMACSR_FBE: u32 = ETH_DMACSR_FBE_Msk;
pub const ETH_DMACSR_ERI_Pos: u32 = 11;
pub const ETH_DMACSR_ERI_Msk: u32 = 0x1 << ETH_DMACSR_ERI_Pos;
pub const ETH_DMACSR_ERI: u32 = ETH_DMACSR_ERI_Msk;
pub const ETH_DMACSR_ETI_Pos: u32 = 10;
pub const ETH_DMACSR_ETI_Msk: u32 = 0x1 << ETH_DMACSR_ETI_Pos;
pub const ETH_DMACSR_ETI: u32 = ETH_DMACSR_ETI_Msk;
pub const ETH_DMACSR_RWT_Pos: u32 = 9;
pub const ETH_DMACSR_RWT_Msk: u32 = 0x1 << ETH_DMACSR_RWT_Pos;
pub const ETH_DMACSR_RWT: u32 = ETH_DMACSR_RWT_Msk;
pub const ETH_DMACSR_RPS_Pos: u32 = 8;
pub const ETH_DMACSR_RPS_Msk: u32 = 0x1 << ETH_DMACSR_RPS_Pos;
pub const ETH_DMACSR_RPS: u32 = ETH_DMACSR_RPS_Msk;
pub const ETH_DMACSR_RBU_Pos: u32 = 7;
pub const ETH_DMACSR_RBU_Msk: u32 = 0x1 << ETH_DMACSR_RBU_Pos;
pub const ETH_DMACSR_RBU: u32 = ETH_DMACSR_RBU_Msk;
pub const ETH_DMACSR_RI_Pos: u32 = 6;
pub const ETH_DMACSR_RI_Msk: u32 = 0x1 << ETH_DMACSR_RI_Pos;
pub const ETH_DMACSR_RI: u32 = ETH_DMACSR_RI_Msk;
pub const ETH_DMACSR_TBU_Pos: u32 = 2;
pub const ETH_DMACSR_TBU_Msk: u32 = 0x1 << ETH_DMACSR_TBU_Pos;
pub const ETH_DMACSR_TBU: u32 = ETH_DMACSR_TBU_Msk;
pub const ETH_DMACSR_TPS_Pos: u32 = 1;
pub const ETH_DMACSR_TPS_Msk: u32 = 0x1 << ETH_DMACSR_TPS_Pos;
pub const ETH_DMACSR_TPS: u32 = ETH_DMACSR_TPS_Msk;
pub const ETH_DMACSR_TI_Pos: u32 = 0;
pub const ETH_DMACSR_TI_Msk: u32 = 0x1 << ETH_DMACSR_TI_Pos;
pub const ETH_DMACSR_TI: u32 = ETH_DMACSR_TI_Msk;
pub const ETH_DMACMFCR_MFCO_Pos: u32 = 15;
pub const ETH_DMACMFCR_MFCO_Msk: u32 = 0x1 << ETH_DMACMFCR_MFCO_Pos;
pub const ETH_DMACMFCR_MFCO: u32 = ETH_DMACMFCR_MFCO_Msk;
pub const ETH_DMACMFCR_MFC_Pos: u32 = 0;
pub const ETH_DMACMFCR_MFC_Msk: u32 = 0x7FF << ETH_DMACMFCR_MFC_Pos;
pub const ETH_DMACMFCR_MFC: u32 = ETH_DMACMFCR_MFC_Msk;
pub const EXTI_RTSR1_RT0_Pos: u32 = 0;
pub const EXTI_RTSR1_RT0_Msk: u32 = 0x1 << EXTI_RTSR1_RT0_Pos;
pub const EXTI_RTSR1_RT0: u32 = EXTI_RTSR1_RT0_Msk;
pub const EXTI_RTSR1_RT1_Pos: u32 = 1;
pub const EXTI_RTSR1_RT1_Msk: u32 = 0x1 << EXTI_RTSR1_RT1_Pos;
pub const EXTI_RTSR1_RT1: u32 = EXTI_RTSR1_RT1_Msk;
pub const EXTI_RTSR1_RT2_Pos: u32 = 2;
pub const EXTI_RTSR1_RT2_Msk: u32 = 0x1 << EXTI_RTSR1_RT2_Pos;
pub const EXTI_RTSR1_RT2: u32 = EXTI_RTSR1_RT2_Msk;
pub const EXTI_RTSR1_RT3_Pos: u32 = 3;
pub const EXTI_RTSR1_RT3_Msk: u32 = 0x1 << EXTI_RTSR1_RT3_Pos;
pub const EXTI_RTSR1_RT3: u32 = EXTI_RTSR1_RT3_Msk;
pub const EXTI_RTSR1_RT4_Pos: u32 = 4;
pub const EXTI_RTSR1_RT4_Msk: u32 = 0x1 << EXTI_RTSR1_RT4_Pos;
pub const EXTI_RTSR1_RT4: u32 = EXTI_RTSR1_RT4_Msk;
pub const EXTI_RTSR1_RT5_Pos: u32 = 5;
pub const EXTI_RTSR1_RT5_Msk: u32 = 0x1 << EXTI_RTSR1_RT5_Pos;
pub const EXTI_RTSR1_RT5: u32 = EXTI_RTSR1_RT5_Msk;
pub const EXTI_RTSR1_RT6_Pos: u32 = 6;
pub const EXTI_RTSR1_RT6_Msk: u32 = 0x1 << EXTI_RTSR1_RT6_Pos;
pub const EXTI_RTSR1_RT6: u32 = EXTI_RTSR1_RT6_Msk;
pub const EXTI_RTSR1_RT7_Pos: u32 = 7;
pub const EXTI_RTSR1_RT7_Msk: u32 = 0x1 << EXTI_RTSR1_RT7_Pos;
pub const EXTI_RTSR1_RT7: u32 = EXTI_RTSR1_RT7_Msk;
pub const EXTI_RTSR1_RT8_Pos: u32 = 8;
pub const EXTI_RTSR1_RT8_Msk: u32 = 0x1 << EXTI_RTSR1_RT8_Pos;
pub const EXTI_RTSR1_RT8: u32 = EXTI_RTSR1_RT8_Msk;
pub const EXTI_RTSR1_RT9_Pos: u32 = 9;
pub const EXTI_RTSR1_RT9_Msk: u32 = 0x1 << EXTI_RTSR1_RT9_Pos;
pub const EXTI_RTSR1_RT9: u32 = EXTI_RTSR1_RT9_Msk;
pub const EXTI_RTSR1_RT10_Pos: u32 = 10;
pub const EXTI_RTSR1_RT10_Msk: u32 = 0x1 << EXTI_RTSR1_RT10_Pos;
pub const EXTI_RTSR1_RT10: u32 = EXTI_RTSR1_RT10_Msk;
pub const EXTI_RTSR1_RT11_Pos: u32 = 11;
pub const EXTI_RTSR1_RT11_Msk: u32 = 0x1 << EXTI_RTSR1_RT11_Pos;
pub const EXTI_RTSR1_RT11: u32 = EXTI_RTSR1_RT11_Msk;
pub const EXTI_RTSR1_RT12_Pos: u32 = 12;
pub const EXTI_RTSR1_RT12_Msk: u32 = 0x1 << EXTI_RTSR1_RT12_Pos;
pub const EXTI_RTSR1_RT12: u32 = EXTI_RTSR1_RT12_Msk;
pub const EXTI_RTSR1_RT13_Pos: u32 = 13;
pub const EXTI_RTSR1_RT13_Msk: u32 = 0x1 << EXTI_RTSR1_RT13_Pos;
pub const EXTI_RTSR1_RT13: u32 = EXTI_RTSR1_RT13_Msk;
pub const EXTI_RTSR1_RT14_Pos: u32 = 14;
pub const EXTI_RTSR1_RT14_Msk: u32 = 0x1 << EXTI_RTSR1_RT14_Pos;
pub const EXTI_RTSR1_RT14: u32 = EXTI_RTSR1_RT14_Msk;
pub const EXTI_RTSR1_RT15_Pos: u32 = 15;
pub const EXTI_RTSR1_RT15_Msk: u32 = 0x1 << EXTI_RTSR1_RT15_Pos;
pub const EXTI_RTSR1_RT15: u32 = EXTI_RTSR1_RT15_Msk;
pub const EXTI_RTSR1_RT16_Pos: u32 = 16;
pub const EXTI_RTSR1_RT16_Msk: u32 = 0x1 << EXTI_RTSR1_RT16_Pos;
pub const EXTI_RTSR1_RT16: u32 = EXTI_RTSR1_RT16_Msk;
pub const EXTI_RTSR1_RT17_Pos: u32 = 17;
pub const EXTI_RTSR1_RT17_Msk: u32 = 0x1 << EXTI_RTSR1_RT17_Pos;
pub const EXTI_RTSR1_RT17: u32 = EXTI_RTSR1_RT17_Msk;
pub const EXTI_RTSR1_RT18_Pos: u32 = 18;
pub const EXTI_RTSR1_RT18_Msk: u32 = 0x1 << EXTI_RTSR1_RT18_Pos;
pub const EXTI_RTSR1_RT18: u32 = EXTI_RTSR1_RT18_Msk;
pub const EXTI_RTSR1_RT19_Pos: u32 = 19;
pub const EXTI_RTSR1_RT19_Msk: u32 = 0x1 << EXTI_RTSR1_RT19_Pos;
pub const EXTI_RTSR1_RT19: u32 = EXTI_RTSR1_RT19_Msk;
pub const EXTI_RTSR1_RT20_Pos: u32 = 20;
pub const EXTI_RTSR1_RT20_Msk: u32 = 0x1 << EXTI_RTSR1_RT20_Pos;
pub const EXTI_RTSR1_RT20: u32 = EXTI_RTSR1_RT20_Msk;
pub const EXTI_RTSR1_RT21_Pos: u32 = 21;
pub const EXTI_RTSR1_RT21_Msk: u32 = 0x1 << EXTI_RTSR1_RT21_Pos;
pub const EXTI_RTSR1_RT21: u32 = EXTI_RTSR1_RT21_Msk;
pub const EXTI_RTSR2_RT34_Pos: u32 = 2;
pub const EXTI_RTSR2_RT34_Msk: u32 = 0x1 << EXTI_RTSR2_RT34_Pos;
pub const EXTI_RTSR2_RT34: u32 = EXTI_RTSR2_RT34_Msk;
pub const EXTI_RTSR2_RT46_Pos: u32 = 14;
pub const EXTI_RTSR2_RT46_Msk: u32 = 0x1 << EXTI_RTSR2_RT46_Pos;
pub const EXTI_RTSR2_RT46: u32 = EXTI_RTSR2_RT46_Msk;
pub const EXTI_RTSR2_RT49_Pos: u32 = 17;
pub const EXTI_RTSR2_RT49_Msk: u32 = 0x1 << EXTI_RTSR2_RT49_Pos;
pub const EXTI_RTSR2_RT49: u32 = EXTI_RTSR2_RT49_Msk;
pub const EXTI_RTSR2_RT51_Pos: u32 = 19;
pub const EXTI_RTSR2_RT51_Msk: u32 = 0x1 << EXTI_RTSR2_RT51_Pos;
pub const EXTI_RTSR2_RT51: u32 = EXTI_RTSR2_RT51_Msk;
pub const EXTI_RTSR2_RT54_Pos: u32 = 22;
pub const EXTI_RTSR2_RT54_Msk: u32 = 0x1 << EXTI_RTSR2_RT54_Pos;
pub const EXTI_RTSR2_RT54: u32 = EXTI_RTSR2_RT54_Msk;
pub const EXTI_FTSR1_FT0_Pos: u32 = 0;
pub const EXTI_FTSR1_FT0_Msk: u32 = 0x1 << EXTI_FTSR1_FT0_Pos;
pub const EXTI_FTSR1_FT0: u32 = EXTI_FTSR1_FT0_Msk;
pub const EXTI_FTSR1_FT1_Pos: u32 = 1;
pub const EXTI_FTSR1_FT1_Msk: u32 = 0x1 << EXTI_FTSR1_FT1_Pos;
pub const EXTI_FTSR1_FT1: u32 = EXTI_FTSR1_FT1_Msk;
pub const EXTI_FTSR1_FT2_Pos: u32 = 2;
pub const EXTI_FTSR1_FT2_Msk: u32 = 0x1 << EXTI_FTSR1_FT2_Pos;
pub const EXTI_FTSR1_FT2: u32 = EXTI_FTSR1_FT2_Msk;
pub const EXTI_FTSR1_FT3_Pos: u32 = 3;
pub const EXTI_FTSR1_FT3_Msk: u32 = 0x1 << EXTI_FTSR1_FT3_Pos;
pub const EXTI_FTSR1_FT3: u32 = EXTI_FTSR1_FT3_Msk;
pub const EXTI_FTSR1_FT4_Pos: u32 = 4;
pub const EXTI_FTSR1_FT4_Msk: u32 = 0x1 << EXTI_FTSR1_FT4_Pos;
pub const EXTI_FTSR1_FT4: u32 = EXTI_FTSR1_FT4_Msk;
pub const EXTI_FTSR1_FT5_Pos: u32 = 5;
pub const EXTI_FTSR1_FT5_Msk: u32 = 0x1 << EXTI_FTSR1_FT5_Pos;
pub const EXTI_FTSR1_FT5: u32 = EXTI_FTSR1_FT5_Msk;
pub const EXTI_FTSR1_FT6_Pos: u32 = 6;
pub const EXTI_FTSR1_FT6_Msk: u32 = 0x1 << EXTI_FTSR1_FT6_Pos;
pub const EXTI_FTSR1_FT6: u32 = EXTI_FTSR1_FT6_Msk;
pub const EXTI_FTSR1_FT7_Pos: u32 = 7;
pub const EXTI_FTSR1_FT7_Msk: u32 = 0x1 << EXTI_FTSR1_FT7_Pos;
pub const EXTI_FTSR1_FT7: u32 = EXTI_FTSR1_FT7_Msk;
pub const EXTI_FTSR1_FT8_Pos: u32 = 8;
pub const EXTI_FTSR1_FT8_Msk: u32 = 0x1 << EXTI_FTSR1_FT8_Pos;
pub const EXTI_FTSR1_FT8: u32 = EXTI_FTSR1_FT8_Msk;
pub const EXTI_FTSR1_FT9_Pos: u32 = 9;
pub const EXTI_FTSR1_FT9_Msk: u32 = 0x1 << EXTI_FTSR1_FT9_Pos;
pub const EXTI_FTSR1_FT9: u32 = EXTI_FTSR1_FT9_Msk;
pub const EXTI_FTSR1_FT10_Pos: u32 = 10;
pub const EXTI_FTSR1_FT10_Msk: u32 = 0x1 << EXTI_FTSR1_FT10_Pos;
pub const EXTI_FTSR1_FT10: u32 = EXTI_FTSR1_FT10_Msk;
pub const EXTI_FTSR1_FT11_Pos: u32 = 11;
pub const EXTI_FTSR1_FT11_Msk: u32 = 0x1 << EXTI_FTSR1_FT11_Pos;
pub const EXTI_FTSR1_FT11: u32 = EXTI_FTSR1_FT11_Msk;
pub const EXTI_FTSR1_FT12_Pos: u32 = 12;
pub const EXTI_FTSR1_FT12_Msk: u32 = 0x1 << EXTI_FTSR1_FT12_Pos;
pub const EXTI_FTSR1_FT12: u32 = EXTI_FTSR1_FT12_Msk;
pub const EXTI_FTSR1_FT13_Pos: u32 = 13;
pub const EXTI_FTSR1_FT13_Msk: u32 = 0x1 << EXTI_FTSR1_FT13_Pos;
pub const EXTI_FTSR1_FT13: u32 = EXTI_FTSR1_FT13_Msk;
pub const EXTI_FTSR1_FT14_Pos: u32 = 14;
pub const EXTI_FTSR1_FT14_Msk: u32 = 0x1 << EXTI_FTSR1_FT14_Pos;
pub const EXTI_FTSR1_FT14: u32 = EXTI_FTSR1_FT14_Msk;
pub const EXTI_FTSR1_FT15_Pos: u32 = 15;
pub const EXTI_FTSR1_FT15_Msk: u32 = 0x1 << EXTI_FTSR1_FT15_Pos;
pub const EXTI_FTSR1_FT15: u32 = EXTI_FTSR1_FT15_Msk;
pub const EXTI_FTSR1_FT16_Pos: u32 = 16;
pub const EXTI_FTSR1_FT16_Msk: u32 = 0x1 << EXTI_FTSR1_FT16_Pos;
pub const EXTI_FTSR1_FT16: u32 = EXTI_FTSR1_FT16_Msk;
pub const EXTI_FTSR1_FT17_Pos: u32 = 17;
pub const EXTI_FTSR1_FT17_Msk: u32 = 0x1 << EXTI_FTSR1_FT17_Pos;
pub const EXTI_FTSR1_FT17: u32 = EXTI_FTSR1_FT17_Msk;
pub const EXTI_FTSR1_FT18_Pos: u32 = 18;
pub const EXTI_FTSR1_FT18_Msk: u32 = 0x1 << EXTI_FTSR1_FT18_Pos;
pub const EXTI_FTSR1_FT18: u32 = EXTI_FTSR1_FT18_Msk;
pub const EXTI_FTSR1_FT19_Pos: u32 = 19;
pub const EXTI_FTSR1_FT19_Msk: u32 = 0x1 << EXTI_FTSR1_FT19_Pos;
pub const EXTI_FTSR1_FT19: u32 = EXTI_FTSR1_FT19_Msk;
pub const EXTI_FTSR1_FT20_Pos: u32 = 20;
pub const EXTI_FTSR1_FT20_Msk: u32 = 0x1 << EXTI_FTSR1_FT20_Pos;
pub const EXTI_FTSR1_FT20: u32 = EXTI_FTSR1_FT20_Msk;
pub const EXTI_FTSR1_FT21_Pos: u32 = 21;
pub const EXTI_FTSR1_FT21_Msk: u32 = 0x1 << EXTI_FTSR1_FT21_Pos;
pub const EXTI_FTSR1_FT21: u32 = EXTI_FTSR1_FT21_Msk;
pub const EXTI_FTSR2_FT34_Pos: u32 = 2;
pub const EXTI_FTSR2_FT34_Msk: u32 = 0x1 << EXTI_FTSR2_FT34_Pos;
pub const EXTI_FTSR2_FT34: u32 = EXTI_FTSR2_FT34_Msk;
pub const EXTI_FTSR2_FT46_Pos: u32 = 14;
pub const EXTI_FTSR2_FT46_Msk: u32 = 0x1 << EXTI_FTSR2_FT46_Pos;
pub const EXTI_FTSR2_FT46: u32 = EXTI_FTSR2_FT46_Msk;
pub const EXTI_FTSR2_FT49_Pos: u32 = 17;
pub const EXTI_FTSR2_FT49_Msk: u32 = 0x1 << EXTI_FTSR2_FT49_Pos;
pub const EXTI_FTSR2_FT49: u32 = EXTI_FTSR2_FT49_Msk;
pub const EXTI_FTSR2_FT51_Pos: u32 = 19;
pub const EXTI_FTSR2_FT51_Msk: u32 = 0x1 << EXTI_FTSR2_FT51_Pos;
pub const EXTI_FTSR2_FT51: u32 = EXTI_FTSR2_FT51_Msk;
pub const EXTI_FTSR2_FT54_Pos: u32 = 22;
pub const EXTI_FTSR2_FT54_Msk: u32 = 0x1 << EXTI_FTSR2_FT54_Pos;
pub const EXTI_FTSR2_FT54: u32 = EXTI_FTSR2_FT54_Msk;
pub const EXTI_SWIER1_SWI0_Pos: u32 = 0;
pub const EXTI_SWIER1_SWI0_Msk: u32 = 0x1 << EXTI_SWIER1_SWI0_Pos;
pub const EXTI_SWIER1_SWI0: u32 = EXTI_SWIER1_SWI0_Msk;
pub const EXTI_SWIER1_SWI1_Pos: u32 = 1;
pub const EXTI_SWIER1_SWI1_Msk: u32 = 0x1 << EXTI_SWIER1_SWI1_Pos;
pub const EXTI_SWIER1_SWI1: u32 = EXTI_SWIER1_SWI1_Msk;
pub const EXTI_SWIER1_SWI2_Pos: u32 = 2;
pub const EXTI_SWIER1_SWI2_Msk: u32 = 0x1 << EXTI_SWIER1_SWI2_Pos;
pub const EXTI_SWIER1_SWI2: u32 = EXTI_SWIER1_SWI2_Msk;
pub const EXTI_SWIER1_SWI3_Pos: u32 = 3;
pub const EXTI_SWIER1_SWI3_Msk: u32 = 0x1 << EXTI_SWIER1_SWI3_Pos;
pub const EXTI_SWIER1_SWI3: u32 = EXTI_SWIER1_SWI3_Msk;
pub const EXTI_SWIER1_SWI4_Pos: u32 = 4;
pub const EXTI_SWIER1_SWI4_Msk: u32 = 0x1 << EXTI_SWIER1_SWI4_Pos;
pub const EXTI_SWIER1_SWI4: u32 = EXTI_SWIER1_SWI4_Msk;
pub const EXTI_SWIER1_SWI5_Pos: u32 = 5;
pub const EXTI_SWIER1_SWI5_Msk: u32 = 0x1 << EXTI_SWIER1_SWI5_Pos;
pub const EXTI_SWIER1_SWI5: u32 = EXTI_SWIER1_SWI5_Msk;
pub const EXTI_SWIER1_SWI6_Pos: u32 = 6;
pub const EXTI_SWIER1_SWI6_Msk: u32 = 0x1 << EXTI_SWIER1_SWI6_Pos;
pub const EXTI_SWIER1_SWI6: u32 = EXTI_SWIER1_SWI6_Msk;
pub const EXTI_SWIER1_SWI7_Pos: u32 = 7;
pub const EXTI_SWIER1_SWI7_Msk: u32 = 0x1 << EXTI_SWIER1_SWI7_Pos;
pub const EXTI_SWIER1_SWI7: u32 = EXTI_SWIER1_SWI7_Msk;
pub const EXTI_SWIER1_SWI8_Pos: u32 = 8;
pub const EXTI_SWIER1_SWI8_Msk: u32 = 0x1 << EXTI_SWIER1_SWI8_Pos;
pub const EXTI_SWIER1_SWI8: u32 = EXTI_SWIER1_SWI8_Msk;
pub const EXTI_SWIER1_SWI9_Pos: u32 = 9;
pub const EXTI_SWIER1_SWI9_Msk: u32 = 0x1 << EXTI_SWIER1_SWI9_Pos;
pub const EXTI_SWIER1_SWI9: u32 = EXTI_SWIER1_SWI9_Msk;
pub const EXTI_SWIER1_SWI10_Pos: u32 = 10;
pub const EXTI_SWIER1_SWI10_Msk: u32 = 0x1 << EXTI_SWIER1_SWI10_Pos;
pub const EXTI_SWIER1_SWI10: u32 = EXTI_SWIER1_SWI10_Msk;
pub const EXTI_SWIER1_SWI11_Pos: u32 = 11;
pub const EXTI_SWIER1_SWI11_Msk: u32 = 0x1 << EXTI_SWIER1_SWI11_Pos;
pub const EXTI_SWIER1_SWI11: u32 = EXTI_SWIER1_SWI11_Msk;
pub const EXTI_SWIER1_SWI12_Pos: u32 = 12;
pub const EXTI_SWIER1_SWI12_Msk: u32 = 0x1 << EXTI_SWIER1_SWI12_Pos;
pub const EXTI_SWIER1_SWI12: u32 = EXTI_SWIER1_SWI12_Msk;
pub const EXTI_SWIER1_SWI13_Pos: u32 = 13;
pub const EXTI_SWIER1_SWI13_Msk: u32 = 0x1 << EXTI_SWIER1_SWI13_Pos;
pub const EXTI_SWIER1_SWI13: u32 = EXTI_SWIER1_SWI13_Msk;
pub const EXTI_SWIER1_SWI14_Pos: u32 = 14;
pub const EXTI_SWIER1_SWI14_Msk: u32 = 0x1 << EXTI_SWIER1_SWI14_Pos;
pub const EXTI_SWIER1_SWI14: u32 = EXTI_SWIER1_SWI14_Msk;
pub const EXTI_SWIER1_SWI15_Pos: u32 = 15;
pub const EXTI_SWIER1_SWI15_Msk: u32 = 0x1 << EXTI_SWIER1_SWI15_Pos;
pub const EXTI_SWIER1_SWI15: u32 = EXTI_SWIER1_SWI15_Msk;
pub const EXTI_SWIER1_SWI16_Pos: u32 = 16;
pub const EXTI_SWIER1_SWI16_Msk: u32 = 0x1 << EXTI_SWIER1_SWI16_Pos;
pub const EXTI_SWIER1_SWI16: u32 = EXTI_SWIER1_SWI16_Msk;
pub const EXTI_SWIER1_SWI17_Pos: u32 = 17;
pub const EXTI_SWIER1_SWI17_Msk: u32 = 0x1 << EXTI_SWIER1_SWI17_Pos;
pub const EXTI_SWIER1_SWI17: u32 = EXTI_SWIER1_SWI17_Msk;
pub const EXTI_SWIER1_SWI18_Pos: u32 = 18;
pub const EXTI_SWIER1_SWI18_Msk: u32 = 0x1 << EXTI_SWIER1_SWI18_Pos;
pub const EXTI_SWIER1_SWI18: u32 = EXTI_SWIER1_SWI18_Msk;
pub const EXTI_SWIER1_SWI19_Pos: u32 = 19;
pub const EXTI_SWIER1_SWI19_Msk: u32 = 0x1 << EXTI_SWIER1_SWI19_Pos;
pub const EXTI_SWIER1_SWI19: u32 = EXTI_SWIER1_SWI19_Msk;
pub const EXTI_SWIER1_SWI20_Pos: u32 = 20;
pub const EXTI_SWIER1_SWI20_Msk: u32 = 0x1 << EXTI_SWIER1_SWI20_Pos;
pub const EXTI_SWIER1_SWI20: u32 = EXTI_SWIER1_SWI20_Msk;
pub const EXTI_SWIER1_SWI21_Pos: u32 = 21;
pub const EXTI_SWIER1_SWI21_Msk: u32 = 0x1 << EXTI_SWIER1_SWI21_Pos;
pub const EXTI_SWIER1_SWI21: u32 = EXTI_SWIER1_SWI21_Msk;
pub const EXTI_SWIER2_SWI34_Pos: u32 = 2;
pub const EXTI_SWIER2_SWI34_Msk: u32 = 0x1 << EXTI_SWIER2_SWI34_Pos;
pub const EXTI_SWIER2_SWI34: u32 = EXTI_SWIER2_SWI34_Msk;
pub const EXTI_SWIER2_SWI46_Pos: u32 = 14;
pub const EXTI_SWIER2_SWI46_Msk: u32 = 0x1 << EXTI_SWIER2_SWI46_Pos;
pub const EXTI_SWIER2_SWI46: u32 = EXTI_SWIER2_SWI46_Msk;
pub const EXTI_SWIER2_SWI49_Pos: u32 = 17;
pub const EXTI_SWIER2_SWI49_Msk: u32 = 0x1 << EXTI_SWIER2_SWI49_Pos;
pub const EXTI_SWIER2_SWI49: u32 = EXTI_SWIER2_SWI49_Msk;
pub const EXTI_SWIER2_SWI51_Pos: u32 = 19;
pub const EXTI_SWIER2_SWI51_Msk: u32 = 0x1 << EXTI_SWIER2_SWI51_Pos;
pub const EXTI_SWIER2_SWI51: u32 = EXTI_SWIER2_SWI51_Msk;
pub const EXTI_SWIER2_SWI54_Pos: u32 = 22;
pub const EXTI_SWIER2_SWI54_Msk: u32 = 0x1 << EXTI_SWIER2_SWI54_Pos;
pub const EXTI_SWIER2_SWI54: u32 = EXTI_SWIER2_SWI54_Msk;
pub const EXTI_IMR1_IM0_Pos: u32 = 0;
pub const EXTI_IMR1_IM0_Msk: u32 = 0x1 << EXTI_IMR1_IM0_Pos;
pub const EXTI_IMR1_IM0: u32 = EXTI_IMR1_IM0_Msk;
pub const EXTI_IMR1_IM1_Pos: u32 = 1;
pub const EXTI_IMR1_IM1_Msk: u32 = 0x1 << EXTI_IMR1_IM1_Pos;
pub const EXTI_IMR1_IM1: u32 = EXTI_IMR1_IM1_Msk;
pub const EXTI_IMR1_IM2_Pos: u32 = 2;
pub const EXTI_IMR1_IM2_Msk: u32 = 0x1 << EXTI_IMR1_IM2_Pos;
pub const EXTI_IMR1_IM2: u32 = EXTI_IMR1_IM2_Msk;
pub const EXTI_IMR1_IM3_Pos: u32 = 3;
pub const EXTI_IMR1_IM3_Msk: u32 = 0x1 << EXTI_IMR1_IM3_Pos;
pub const EXTI_IMR1_IM3: u32 = EXTI_IMR1_IM3_Msk;
pub const EXTI_IMR1_IM4_Pos: u32 = 4;
pub const EXTI_IMR1_IM4_Msk: u32 = 0x1 << EXTI_IMR1_IM4_Pos;
pub const EXTI_IMR1_IM4: u32 = EXTI_IMR1_IM4_Msk;
pub const EXTI_IMR1_IM5_Pos: u32 = 5;
pub const EXTI_IMR1_IM5_Msk: u32 = 0x1 << EXTI_IMR1_IM5_Pos;
pub const EXTI_IMR1_IM5: u32 = EXTI_IMR1_IM5_Msk;
pub const EXTI_IMR1_IM6_Pos: u32 = 6;
pub const EXTI_IMR1_IM6_Msk: u32 = 0x1 << EXTI_IMR1_IM6_Pos;
pub const EXTI_IMR1_IM6: u32 = EXTI_IMR1_IM6_Msk;
pub const EXTI_IMR1_IM7_Pos: u32 = 7;
pub const EXTI_IMR1_IM7_Msk: u32 = 0x1 << EXTI_IMR1_IM7_Pos;
pub const EXTI_IMR1_IM7: u32 = EXTI_IMR1_IM7_Msk;
pub const EXTI_IMR1_IM8_Pos: u32 = 8;
pub const EXTI_IMR1_IM8_Msk: u32 = 0x1 << EXTI_IMR1_IM8_Pos;
pub const EXTI_IMR1_IM8: u32 = EXTI_IMR1_IM8_Msk;
pub const EXTI_IMR1_IM9_Pos: u32 = 9;
pub const EXTI_IMR1_IM9_Msk: u32 = 0x1 << EXTI_IMR1_IM9_Pos;
pub const EXTI_IMR1_IM9: u32 = EXTI_IMR1_IM9_Msk;
pub const EXTI_IMR1_IM10_Pos: u32 = 10;
pub const EXTI_IMR1_IM10_Msk: u32 = 0x1 << EXTI_IMR1_IM10_Pos;
pub const EXTI_IMR1_IM10: u32 = EXTI_IMR1_IM10_Msk;
pub const EXTI_IMR1_IM11_Pos: u32 = 11;
pub const EXTI_IMR1_IM11_Msk: u32 = 0x1 << EXTI_IMR1_IM11_Pos;
pub const EXTI_IMR1_IM11: u32 = EXTI_IMR1_IM11_Msk;
pub const EXTI_IMR1_IM12_Pos: u32 = 12;
pub const EXTI_IMR1_IM12_Msk: u32 = 0x1 << EXTI_IMR1_IM12_Pos;
pub const EXTI_IMR1_IM12: u32 = EXTI_IMR1_IM12_Msk;
pub const EXTI_IMR1_IM13_Pos: u32 = 13;
pub const EXTI_IMR1_IM13_Msk: u32 = 0x1 << EXTI_IMR1_IM13_Pos;
pub const EXTI_IMR1_IM13: u32 = EXTI_IMR1_IM13_Msk;
pub const EXTI_IMR1_IM14_Pos: u32 = 14;
pub const EXTI_IMR1_IM14_Msk: u32 = 0x1 << EXTI_IMR1_IM14_Pos;
pub const EXTI_IMR1_IM14: u32 = EXTI_IMR1_IM14_Msk;
pub const EXTI_IMR1_IM15_Pos: u32 = 15;
pub const EXTI_IMR1_IM15_Msk: u32 = 0x1 << EXTI_IMR1_IM15_Pos;
pub const EXTI_IMR1_IM15: u32 = EXTI_IMR1_IM15_Msk;
pub const EXTI_IMR1_IM16_Pos: u32 = 16;
pub const EXTI_IMR1_IM16_Msk: u32 = 0x1 << EXTI_IMR1_IM16_Pos;
pub const EXTI_IMR1_IM16: u32 = EXTI_IMR1_IM16_Msk;
pub const EXTI_IMR1_IM17_Pos: u32 = 17;
pub const EXTI_IMR1_IM17_Msk: u32 = 0x1 << EXTI_IMR1_IM17_Pos;
pub const EXTI_IMR1_IM17: u32 = EXTI_IMR1_IM17_Msk;
pub const EXTI_IMR1_IM18_Pos: u32 = 18;
pub const EXTI_IMR1_IM18_Msk: u32 = 0x1 << EXTI_IMR1_IM18_Pos;
pub const EXTI_IMR1_IM18: u32 = EXTI_IMR1_IM18_Msk;
pub const EXTI_IMR1_IM19_Pos: u32 = 19;
pub const EXTI_IMR1_IM19_Msk: u32 = 0x1 << EXTI_IMR1_IM19_Pos;
pub const EXTI_IMR1_IM19: u32 = EXTI_IMR1_IM19_Msk;
pub const EXTI_IMR1_IM20_Pos: u32 = 20;
pub const EXTI_IMR1_IM20_Msk: u32 = 0x1 << EXTI_IMR1_IM20_Pos;
pub const EXTI_IMR1_IM20: u32 = EXTI_IMR1_IM20_Msk;
pub const EXTI_IMR1_IM21_Pos: u32 = 21;
pub const EXTI_IMR1_IM21_Msk: u32 = 0x1 << EXTI_IMR1_IM21_Pos;
pub const EXTI_IMR1_IM21: u32 = EXTI_IMR1_IM21_Msk;
pub const EXTI_IMR1_IM22_Pos: u32 = 22;
pub const EXTI_IMR1_IM22_Msk: u32 = 0x1 << EXTI_IMR1_IM22_Pos;
pub const EXTI_IMR1_IM22: u32 = EXTI_IMR1_IM22_Msk;
pub const EXTI_IMR1_IM23_Pos: u32 = 23;
pub const EXTI_IMR1_IM23_Msk: u32 = 0x1 << EXTI_IMR1_IM23_Pos;
pub const EXTI_IMR1_IM23: u32 = EXTI_IMR1_IM23_Msk;
pub const EXTI_IMR1_IM24_Pos: u32 = 24;
pub const EXTI_IMR1_IM24_Msk: u32 = 0x1 << EXTI_IMR1_IM24_Pos;
pub const EXTI_IMR1_IM24: u32 = EXTI_IMR1_IM24_Msk;
pub const EXTI_IMR1_IM25_Pos: u32 = 25;
pub const EXTI_IMR1_IM25_Msk: u32 = 0x1 << EXTI_IMR1_IM25_Pos;
pub const EXTI_IMR1_IM25: u32 = EXTI_IMR1_IM25_Msk;
pub const EXTI_IMR1_IM26_Pos: u32 = 26;
pub const EXTI_IMR1_IM26_Msk: u32 = 0x1 << EXTI_IMR1_IM26_Pos;
pub const EXTI_IMR1_IM26: u32 = EXTI_IMR1_IM26_Msk;
pub const EXTI_IMR1_IM27_Pos: u32 = 27;
pub const EXTI_IMR1_IM27_Msk: u32 = 0x1 << EXTI_IMR1_IM27_Pos;
pub const EXTI_IMR1_IM27: u32 = EXTI_IMR1_IM27_Msk;
pub const EXTI_IMR1_IM28_Pos: u32 = 28;
pub const EXTI_IMR1_IM28_Msk: u32 = 0x1 << EXTI_IMR1_IM28_Pos;
pub const EXTI_IMR1_IM28: u32 = EXTI_IMR1_IM28_Msk;
pub const EXTI_IMR1_IM29_Pos: u32 = 29;
pub const EXTI_IMR1_IM29_Msk: u32 = 0x1 << EXTI_IMR1_IM29_Pos;
pub const EXTI_IMR1_IM29: u32 = EXTI_IMR1_IM29_Msk;
pub const EXTI_IMR1_IM30_Pos: u32 = 30;
pub const EXTI_IMR1_IM30_Msk: u32 = 0x1 << EXTI_IMR1_IM30_Pos;
pub const EXTI_IMR1_IM30: u32 = EXTI_IMR1_IM30_Msk;
pub const EXTI_IMR1_IM31_Pos: u32 = 31;
pub const EXTI_IMR1_IM31_Msk: u32 = 0x1 << EXTI_IMR1_IM31_Pos;
pub const EXTI_IMR1_IM31: u32 = EXTI_IMR1_IM31_Msk;
pub const EXTI_IMR2_IM32_Pos: u32 = 0;
pub const EXTI_IMR2_IM32_Msk: u32 = 0x1 << EXTI_IMR2_IM32_Pos;
pub const EXTI_IMR2_IM32: u32 = EXTI_IMR2_IM32_Msk;
pub const EXTI_IMR2_IM33_Pos: u32 = 1;
pub const EXTI_IMR2_IM33_Msk: u32 = 0x1 << EXTI_IMR2_IM33_Pos;
pub const EXTI_IMR2_IM33: u32 = EXTI_IMR2_IM33_Msk;
pub const EXTI_IMR2_IM34_Pos: u32 = 2;
pub const EXTI_IMR2_IM34_Msk: u32 = 0x1 << EXTI_IMR2_IM34_Pos;
pub const EXTI_IMR2_IM34: u32 = EXTI_IMR2_IM34_Msk;
pub const EXTI_IMR2_IM35_Pos: u32 = 3;
pub const EXTI_IMR2_IM35_Msk: u32 = 0x1 << EXTI_IMR2_IM35_Pos;
pub const EXTI_IMR2_IM35: u32 = EXTI_IMR2_IM35_Msk;
pub const EXTI_IMR2_IM36_Pos: u32 = 4;
pub const EXTI_IMR2_IM36_Msk: u32 = 0x1 << EXTI_IMR2_IM36_Pos;
pub const EXTI_IMR2_IM36: u32 = EXTI_IMR2_IM36_Msk;
pub const EXTI_IMR2_IM37_Pos: u32 = 5;
pub const EXTI_IMR2_IM37_Msk: u32 = 0x1 << EXTI_IMR2_IM37_Pos;
pub const EXTI_IMR2_IM37: u32 = EXTI_IMR2_IM37_Msk;
pub const EXTI_IMR2_IM38_Pos: u32 = 6;
pub const EXTI_IMR2_IM38_Msk: u32 = 0x1 << EXTI_IMR2_IM38_Pos;
pub const EXTI_IMR2_IM38: u32 = EXTI_IMR2_IM38_Msk;
pub const EXTI_IMR2_IM39_Pos: u32 = 7;
pub const EXTI_IMR2_IM39_Msk: u32 = 0x1 << EXTI_IMR2_IM39_Pos;
pub const EXTI_IMR2_IM39: u32 = EXTI_IMR2_IM39_Msk;
pub const EXTI_IMR2_IM40_Pos: u32 = 8;
pub const EXTI_IMR2_IM40_Msk: u32 = 0x1 << EXTI_IMR2_IM40_Pos;
pub const EXTI_IMR2_IM40: u32 = EXTI_IMR2_IM40_Msk;
pub const EXTI_IMR2_IM41_Pos: u32 = 9;
pub const EXTI_IMR2_IM41_Msk: u32 = 0x1 << EXTI_IMR2_IM41_Pos;
pub const EXTI_IMR2_IM41: u32 = EXTI_IMR2_IM41_Msk;
pub const EXTI_IMR2_IM42_Pos: u32 = 10;
pub const EXTI_IMR2_IM42_Msk: u32 = 0x1 << EXTI_IMR2_IM42_Pos;
pub const EXTI_IMR2_IM42: u32 = EXTI_IMR2_IM42_Msk;
pub const EXTI_IMR2_IM43_Pos: u32 = 11;
pub const EXTI_IMR2_IM43_Msk: u32 = 0x1 << EXTI_IMR2_IM43_Pos;
pub const EXTI_IMR2_IM43: u32 = EXTI_IMR2_IM43_Msk;
pub const EXTI_IMR2_IM44_Pos: u32 = 12;
pub const EXTI_IMR2_IM44_Msk: u32 = 0x1 << EXTI_IMR2_IM44_Pos;
pub const EXTI_IMR2_IM44: u32 = EXTI_IMR2_IM44_Msk;
pub const EXTI_IMR2_IM45_Pos: u32 = 13;
pub const EXTI_IMR2_IM45_Msk: u32 = 0x1 << EXTI_IMR2_IM45_Pos;
pub const EXTI_IMR2_IM45: u32 = EXTI_IMR2_IM45_Msk;
pub const EXTI_IMR2_IM46_Pos: u32 = 14;
pub const EXTI_IMR2_IM46_Msk: u32 = 0x1 << EXTI_IMR2_IM46_Pos;
pub const EXTI_IMR2_IM46: u32 = EXTI_IMR2_IM46_Msk;
pub const EXTI_IMR2_IM47_Pos: u32 = 15;
pub const EXTI_IMR2_IM47_Msk: u32 = 0x1 << EXTI_IMR2_IM47_Pos;
pub const EXTI_IMR2_IM47: u32 = EXTI_IMR2_IM47_Msk;
pub const EXTI_IMR2_IM48_Pos: u32 = 16;
pub const EXTI_IMR2_IM48_Msk: u32 = 0x1 << EXTI_IMR2_IM48_Pos;
pub const EXTI_IMR2_IM48: u32 = EXTI_IMR2_IM48_Msk;
pub const EXTI_IMR2_IM49_Pos: u32 = 17;
pub const EXTI_IMR2_IM49_Msk: u32 = 0x1 << EXTI_IMR2_IM49_Pos;
pub const EXTI_IMR2_IM49: u32 = EXTI_IMR2_IM49_Msk;
pub const EXTI_IMR2_IM50_Pos: u32 = 18;
pub const EXTI_IMR2_IM50_Msk: u32 = 0x1 << EXTI_IMR2_IM50_Pos;
pub const EXTI_IMR2_IM50: u32 = EXTI_IMR2_IM50_Msk;
pub const EXTI_IMR2_IM51_Pos: u32 = 19;
pub const EXTI_IMR2_IM51_Msk: u32 = 0x1 << EXTI_IMR2_IM51_Pos;
pub const EXTI_IMR2_IM51: u32 = EXTI_IMR2_IM51_Msk;
pub const EXTI_IMR2_IM52_Pos: u32 = 20;
pub const EXTI_IMR2_IM52_Msk: u32 = 0x1 << EXTI_IMR2_IM52_Pos;
pub const EXTI_IMR2_IM52: u32 = EXTI_IMR2_IM52_Msk;
pub const EXTI_IMR2_IM53_Pos: u32 = 21;
pub const EXTI_IMR2_IM53_Msk: u32 = 0x1 << EXTI_IMR2_IM53_Pos;
pub const EXTI_IMR2_IM53: u32 = EXTI_IMR2_IM53_Msk;
pub const EXTI_IMR2_IM54_Pos: u32 = 22;
pub const EXTI_IMR2_IM54_Msk: u32 = 0x1 << EXTI_IMR2_IM54_Pos;
pub const EXTI_IMR2_IM54: u32 = EXTI_IMR2_IM54_Msk;
pub const EXTI_IMR2_IM55_Pos: u32 = 23;
pub const EXTI_IMR2_IM55_Msk: u32 = 0x1 << EXTI_IMR2_IM55_Pos;
pub const EXTI_IMR2_IM55: u32 = EXTI_IMR2_IM55_Msk;
pub const EXTI_IMR2_IM56_Pos: u32 = 24;
pub const EXTI_IMR2_IM56_Msk: u32 = 0x1 << EXTI_IMR2_IM56_Pos;
pub const EXTI_IMR2_IM56: u32 = EXTI_IMR2_IM56_Msk;
pub const EXTI_IMR2_IM57_Pos: u32 = 25;
pub const EXTI_IMR2_IM57_Msk: u32 = 0x1 << EXTI_IMR2_IM57_Pos;
pub const EXTI_IMR2_IM57: u32 = EXTI_IMR2_IM57_Msk;
pub const EXTI_IMR2_IM58_Pos: u32 = 26;
pub const EXTI_IMR2_IM58_Msk: u32 = 0x1 << EXTI_IMR2_IM58_Pos;
pub const EXTI_IMR2_IM58: u32 = EXTI_IMR2_IM58_Msk;
pub const EXTI_IMR2_IM59_Pos: u32 = 27;
pub const EXTI_IMR2_IM59_Msk: u32 = 0x1 << EXTI_IMR2_IM59_Pos;
pub const EXTI_IMR2_IM59: u32 = EXTI_IMR2_IM59_Msk;
pub const EXTI_IMR3_IM77_Pos: u32 = 13;
pub const EXTI_IMR3_IM77_Msk: u32 = 0x1 << EXTI_IMR3_IM77_Pos;
pub const EXTI_IMR3_IM77: u32 = EXTI_IMR3_IM77_Msk;
pub const EXTI_EMR1_EM0_Pos: u32 = 0;
pub const EXTI_EMR1_EM0_Msk: u32 = 0x1 << EXTI_EMR1_EM0_Pos;
pub const EXTI_EMR1_EM0: u32 = EXTI_EMR1_EM0_Msk;
pub const EXTI_EMR1_EM1_Pos: u32 = 1;
pub const EXTI_EMR1_EM1_Msk: u32 = 0x1 << EXTI_EMR1_EM1_Pos;
pub const EXTI_EMR1_EM1: u32 = EXTI_EMR1_EM1_Msk;
pub const EXTI_EMR1_EM2_Pos: u32 = 2;
pub const EXTI_EMR1_EM2_Msk: u32 = 0x1 << EXTI_EMR1_EM2_Pos;
pub const EXTI_EMR1_EM2: u32 = EXTI_EMR1_EM2_Msk;
pub const EXTI_EMR1_EM3_Pos: u32 = 3;
pub const EXTI_EMR1_EM3_Msk: u32 = 0x1 << EXTI_EMR1_EM3_Pos;
pub const EXTI_EMR1_EM3: u32 = EXTI_EMR1_EM3_Msk;
pub const EXTI_EMR1_EM4_Pos: u32 = 4;
pub const EXTI_EMR1_EM4_Msk: u32 = 0x1 << EXTI_EMR1_EM4_Pos;
pub const EXTI_EMR1_EM4: u32 = EXTI_EMR1_EM4_Msk;
pub const EXTI_EMR1_EM5_Pos: u32 = 5;
pub const EXTI_EMR1_EM5_Msk: u32 = 0x1 << EXTI_EMR1_EM5_Pos;
pub const EXTI_EMR1_EM5: u32 = EXTI_EMR1_EM5_Msk;
pub const EXTI_EMR1_EM6_Pos: u32 = 6;
pub const EXTI_EMR1_EM6_Msk: u32 = 0x1 << EXTI_EMR1_EM6_Pos;
pub const EXTI_EMR1_EM6: u32 = EXTI_EMR1_EM6_Msk;
pub const EXTI_EMR1_EM7_Pos: u32 = 7;
pub const EXTI_EMR1_EM7_Msk: u32 = 0x1 << EXTI_EMR1_EM7_Pos;
pub const EXTI_EMR1_EM7: u32 = EXTI_EMR1_EM7_Msk;
pub const EXTI_EMR1_EM8_Pos: u32 = 8;
pub const EXTI_EMR1_EM8_Msk: u32 = 0x1 << EXTI_EMR1_EM8_Pos;
pub const EXTI_EMR1_EM8: u32 = EXTI_EMR1_EM8_Msk;
pub const EXTI_EMR1_EM9_Pos: u32 = 9;
pub const EXTI_EMR1_EM9_Msk: u32 = 0x1 << EXTI_EMR1_EM9_Pos;
pub const EXTI_EMR1_EM9: u32 = EXTI_EMR1_EM9_Msk;
pub const EXTI_EMR1_EM10_Pos: u32 = 10;
pub const EXTI_EMR1_EM10_Msk: u32 = 0x1 << EXTI_EMR1_EM10_Pos;
pub const EXTI_EMR1_EM10: u32 = EXTI_EMR1_EM10_Msk;
pub const EXTI_EMR1_EM11_Pos: u32 = 11;
pub const EXTI_EMR1_EM11_Msk: u32 = 0x1 << EXTI_EMR1_EM11_Pos;
pub const EXTI_EMR1_EM11: u32 = EXTI_EMR1_EM11_Msk;
pub const EXTI_EMR1_EM12_Pos: u32 = 12;
pub const EXTI_EMR1_EM12_Msk: u32 = 0x1 << EXTI_EMR1_EM12_Pos;
pub const EXTI_EMR1_EM12: u32 = EXTI_EMR1_EM12_Msk;
pub const EXTI_EMR1_EM13_Pos: u32 = 13;
pub const EXTI_EMR1_EM13_Msk: u32 = 0x1 << EXTI_EMR1_EM13_Pos;
pub const EXTI_EMR1_EM13: u32 = EXTI_EMR1_EM13_Msk;
pub const EXTI_EMR1_EM14_Pos: u32 = 14;
pub const EXTI_EMR1_EM14_Msk: u32 = 0x1 << EXTI_EMR1_EM14_Pos;
pub const EXTI_EMR1_EM14: u32 = EXTI_EMR1_EM14_Msk;
pub const EXTI_EMR1_EM15_Pos: u32 = 15;
pub const EXTI_EMR1_EM15_Msk: u32 = 0x1 << EXTI_EMR1_EM15_Pos;
pub const EXTI_EMR1_EM15: u32 = EXTI_EMR1_EM15_Msk;
pub const EXTI_EMR1_EM16_Pos: u32 = 16;
pub const EXTI_EMR1_EM16_Msk: u32 = 0x1 << EXTI_EMR1_EM16_Pos;
pub const EXTI_EMR1_EM16: u32 = EXTI_EMR1_EM16_Msk;
pub const EXTI_EMR1_EM17_Pos: u32 = 17;
pub const EXTI_EMR1_EM17_Msk: u32 = 0x1 << EXTI_EMR1_EM17_Pos;
pub const EXTI_EMR1_EM17: u32 = EXTI_EMR1_EM17_Msk;
pub const EXTI_EMR1_EM18_Pos: u32 = 18;
pub const EXTI_EMR1_EM18_Msk: u32 = 0x1 << EXTI_EMR1_EM18_Pos;
pub const EXTI_EMR1_EM18: u32 = EXTI_EMR1_EM18_Msk;
pub const EXTI_EMR1_EM19_Pos: u32 = 19;
pub const EXTI_EMR1_EM19_Msk: u32 = 0x1 << EXTI_EMR1_EM19_Pos;
pub const EXTI_EMR1_EM19: u32 = EXTI_EMR1_EM19_Msk;
pub const EXTI_EMR1_EM20_Pos: u32 = 20;
pub const EXTI_EMR1_EM20_Msk: u32 = 0x1 << EXTI_EMR1_EM20_Pos;
pub const EXTI_EMR1_EM20: u32 = EXTI_EMR1_EM20_Msk;
pub const EXTI_EMR1_EM21_Pos: u32 = 21;
pub const EXTI_EMR1_EM21_Msk: u32 = 0x1 << EXTI_EMR1_EM21_Pos;
pub const EXTI_EMR1_EM21: u32 = EXTI_EMR1_EM21_Msk;
pub const EXTI_EMR1_EM22_Pos: u32 = 22;
pub const EXTI_EMR1_EM22_Msk: u32 = 0x1 << EXTI_EMR1_EM22_Pos;
pub const EXTI_EMR1_EM22: u32 = EXTI_EMR1_EM22_Msk;
pub const EXTI_EMR1_EM23_Pos: u32 = 23;
pub const EXTI_EMR1_EM23_Msk: u32 = 0x1 << EXTI_EMR1_EM23_Pos;
pub const EXTI_EMR1_EM23: u32 = EXTI_EMR1_EM23_Msk;
pub const EXTI_EMR1_EM24_Pos: u32 = 24;
pub const EXTI_EMR1_EM24_Msk: u32 = 0x1 << EXTI_EMR1_EM24_Pos;
pub const EXTI_EMR1_EM24: u32 = EXTI_EMR1_EM24_Msk;
pub const EXTI_EMR1_EM25_Pos: u32 = 25;
pub const EXTI_EMR1_EM25_Msk: u32 = 0x1 << EXTI_EMR1_EM25_Pos;
pub const EXTI_EMR1_EM25: u32 = EXTI_EMR1_EM25_Msk;
pub const EXTI_EMR1_EM26_Pos: u32 = 26;
pub const EXTI_EMR1_EM26_Msk: u32 = 0x1 << EXTI_EMR1_EM26_Pos;
pub const EXTI_EMR1_EM26: u32 = EXTI_EMR1_EM26_Msk;
pub const EXTI_EMR1_EM27_Pos: u32 = 27;
pub const EXTI_EMR1_EM27_Msk: u32 = 0x1 << EXTI_EMR1_EM27_Pos;
pub const EXTI_EMR1_EM27: u32 = EXTI_EMR1_EM27_Msk;
pub const EXTI_EMR1_EM28_Pos: u32 = 28;
pub const EXTI_EMR1_EM28_Msk: u32 = 0x1 << EXTI_EMR1_EM28_Pos;
pub const EXTI_EMR1_EM28: u32 = EXTI_EMR1_EM28_Msk;
pub const EXTI_EMR1_EM30_Pos: u32 = 30;
pub const EXTI_EMR1_EM30_Msk: u32 = 0x1 << EXTI_EMR1_EM30_Pos;
pub const EXTI_EMR1_EM30: u32 = EXTI_EMR1_EM30_Msk;
pub const EXTI_EMR1_EM31_Pos: u32 = 31;
pub const EXTI_EMR1_EM31_Msk: u32 = 0x1 << EXTI_EMR1_EM31_Pos;
pub const EXTI_EMR1_EM31: u32 = EXTI_EMR1_EM31_Msk;
pub const EXTI_EMR2_EM32_Pos: u32 = 0;
pub const EXTI_EMR2_EM32_Msk: u32 = 0x1 << EXTI_EMR2_EM32_Pos;
pub const EXTI_EMR2_EM32: u32 = EXTI_EMR2_EM32_Msk;
pub const EXTI_EMR2_EM33_Pos: u32 = 1;
pub const EXTI_EMR2_EM33_Msk: u32 = 0x1 << EXTI_EMR2_EM33_Pos;
pub const EXTI_EMR2_EM33: u32 = EXTI_EMR2_EM33_Msk;
pub const EXTI_EMR2_EM34_Pos: u32 = 2;
pub const EXTI_EMR2_EM34_Msk: u32 = 0x1 << EXTI_EMR2_EM34_Pos;
pub const EXTI_EMR2_EM34: u32 = EXTI_EMR2_EM34_Msk;
pub const EXTI_EMR2_EM35_Pos: u32 = 3;
pub const EXTI_EMR2_EM35_Msk: u32 = 0x1 << EXTI_EMR2_EM35_Pos;
pub const EXTI_EMR2_EM35: u32 = EXTI_EMR2_EM35_Msk;
pub const EXTI_EMR2_EM36_Pos: u32 = 4;
pub const EXTI_EMR2_EM36_Msk: u32 = 0x1 << EXTI_EMR2_EM36_Pos;
pub const EXTI_EMR2_EM36: u32 = EXTI_EMR2_EM36_Msk;
pub const EXTI_EMR2_EM37_Pos: u32 = 5;
pub const EXTI_EMR2_EM37_Msk: u32 = 0x1 << EXTI_EMR2_EM37_Pos;
pub const EXTI_EMR2_EM37: u32 = EXTI_EMR2_EM37_Msk;
pub const EXTI_EMR2_EM38_Pos: u32 = 6;
pub const EXTI_EMR2_EM38_Msk: u32 = 0x1 << EXTI_EMR2_EM38_Pos;
pub const EXTI_EMR2_EM38: u32 = EXTI_EMR2_EM38_Msk;
pub const EXTI_EMR2_EM39_Pos: u32 = 7;
pub const EXTI_EMR2_EM39_Msk: u32 = 0x1 << EXTI_EMR2_EM39_Pos;
pub const EXTI_EMR2_EM39: u32 = EXTI_EMR2_EM39_Msk;
pub const EXTI_EMR2_EM40_Pos: u32 = 8;
pub const EXTI_EMR2_EM40_Msk: u32 = 0x1 << EXTI_EMR2_EM40_Pos;
pub const EXTI_EMR2_EM40: u32 = EXTI_EMR2_EM40_Msk;
pub const EXTI_EMR2_EM41_Pos: u32 = 9;
pub const EXTI_EMR2_EM41_Msk: u32 = 0x1 << EXTI_EMR2_EM41_Pos;
pub const EXTI_EMR2_EM41: u32 = EXTI_EMR2_EM41_Msk;
pub const EXTI_EMR2_EM42_Pos: u32 = 10;
pub const EXTI_EMR2_EM42_Msk: u32 = 0x1 << EXTI_EMR2_EM42_Pos;
pub const EXTI_EMR2_EM42: u32 = EXTI_EMR2_EM42_Msk;
pub const EXTI_EMR2_EM43_Pos: u32 = 11;
pub const EXTI_EMR2_EM43_Msk: u32 = 0x1 << EXTI_EMR2_EM43_Pos;
pub const EXTI_EMR2_EM43: u32 = EXTI_EMR2_EM43_Msk;
pub const EXTI_EMR2_EM44_Pos: u32 = 12;
pub const EXTI_EMR2_EM44_Msk: u32 = 0x1 << EXTI_EMR2_EM44_Pos;
pub const EXTI_EMR2_EM44: u32 = EXTI_EMR2_EM44_Msk;
pub const EXTI_EMR2_EM45_Pos: u32 = 13;
pub const EXTI_EMR2_EM45_Msk: u32 = 0x1 << EXTI_EMR2_EM45_Pos;
pub const EXTI_EMR2_EM45: u32 = EXTI_EMR2_EM45_Msk;
pub const EXTI_EMR2_EM46_Pos: u32 = 14;
pub const EXTI_EMR2_EM46_Msk: u32 = 0x1 << EXTI_EMR2_EM46_Pos;
pub const EXTI_EMR2_EM46: u32 = EXTI_EMR2_EM46_Msk;
pub const EXTI_EMR2_EM47_Pos: u32 = 15;
pub const EXTI_EMR2_EM47_Msk: u32 = 0x1 << EXTI_EMR2_EM47_Pos;
pub const EXTI_EMR2_EM47: u32 = EXTI_EMR2_EM47_Msk;
pub const EXTI_EMR2_EM48_Pos: u32 = 16;
pub const EXTI_EMR2_EM48_Msk: u32 = 0x1 << EXTI_EMR2_EM48_Pos;
pub const EXTI_EMR2_EM48: u32 = EXTI_EMR2_EM48_Msk;
pub const EXTI_EMR2_EM49_Pos: u32 = 17;
pub const EXTI_EMR2_EM49_Msk: u32 = 0x1 << EXTI_EMR2_EM49_Pos;
pub const EXTI_EMR2_EM49: u32 = EXTI_EMR2_EM49_Msk;
pub const EXTI_EMR2_EM50_Pos: u32 = 18;
pub const EXTI_EMR2_EM50_Msk: u32 = 0x1 << EXTI_EMR2_EM50_Pos;
pub const EXTI_EMR2_EM50: u32 = EXTI_EMR2_EM50_Msk;
pub const EXTI_EMR2_EM51_Pos: u32 = 19;
pub const EXTI_EMR2_EM51_Msk: u32 = 0x1 << EXTI_EMR2_EM51_Pos;
pub const EXTI_EMR2_EM51: u32 = EXTI_EMR2_EM51_Msk;
pub const EXTI_EMR2_EM52_Pos: u32 = 20;
pub const EXTI_EMR2_EM52_Msk: u32 = 0x1 << EXTI_EMR2_EM52_Pos;
pub const EXTI_EMR2_EM52: u32 = EXTI_EMR2_EM52_Msk;
pub const EXTI_EMR2_EM53_Pos: u32 = 21;
pub const EXTI_EMR2_EM53_Msk: u32 = 0x1 << EXTI_EMR2_EM53_Pos;
pub const EXTI_EMR2_EM53: u32 = EXTI_EMR2_EM53_Msk;
pub const EXTI_EMR2_EM54_Pos: u32 = 22;
pub const EXTI_EMR2_EM54_Msk: u32 = 0x1 << EXTI_EMR2_EM54_Pos;
pub const EXTI_EMR2_EM54: u32 = EXTI_EMR2_EM54_Msk;
pub const EXTI_EMR2_EM55_Pos: u32 = 23;
pub const EXTI_EMR2_EM55_Msk: u32 = 0x1 << EXTI_EMR2_EM55_Pos;
pub const EXTI_EMR2_EM55: u32 = EXTI_EMR2_EM55_Msk;
pub const EXTI_EMR2_EM56_Pos: u32 = 24;
pub const EXTI_EMR2_EM56_Msk: u32 = 0x1 << EXTI_EMR2_EM56_Pos;
pub const EXTI_EMR2_EM56: u32 = EXTI_EMR2_EM56_Msk;
pub const EXTI_EMR2_EM57_Pos: u32 = 25;
pub const EXTI_EMR2_EM57_Msk: u32 = 0x1 << EXTI_EMR2_EM57_Pos;
pub const EXTI_EMR2_EM57: u32 = EXTI_EMR2_EM57_Msk;
pub const EXTI_EMR2_EM58_Pos: u32 = 26;
pub const EXTI_EMR2_EM58_Msk: u32 = 0x1 << EXTI_EMR2_EM58_Pos;
pub const EXTI_EMR2_EM58: u32 = EXTI_EMR2_EM58_Msk;
pub const EXTI_EMR2_EM59_Pos: u32 = 27;
pub const EXTI_EMR2_EM59_Msk: u32 = 0x1 << EXTI_EMR2_EM59_Pos;
pub const EXTI_EMR2_EM59: u32 = EXTI_EMR2_EM59_Msk;
pub const EXTI_EMR3_EM77_Pos: u32 = 13;
pub const EXTI_EMR3_EM77_Msk: u32 = 0x1 << EXTI_EMR3_EM77_Pos;
pub const EXTI_EMR3_EM77: u32 = EXTI_EMR3_EM77_Msk;
pub const EXTI_PR1_PR0_Pos: u32 = 0;
pub const EXTI_PR1_PR0_Msk: u32 = 0x1 << EXTI_PR1_PR0_Pos;
pub const EXTI_PR1_PR0: u32 = EXTI_PR1_PR0_Msk;
pub const EXTI_PR1_PR1_Pos: u32 = 1;
pub const EXTI_PR1_PR1_Msk: u32 = 0x1 << EXTI_PR1_PR1_Pos;
pub const EXTI_PR1_PR1: u32 = EXTI_PR1_PR1_Msk;
pub const EXTI_PR1_PR2_Pos: u32 = 2;
pub const EXTI_PR1_PR2_Msk: u32 = 0x1 << EXTI_PR1_PR2_Pos;
pub const EXTI_PR1_PR2: u32 = EXTI_PR1_PR2_Msk;
pub const EXTI_PR1_PR3_Pos: u32 = 3;
pub const EXTI_PR1_PR3_Msk: u32 = 0x1 << EXTI_PR1_PR3_Pos;
pub const EXTI_PR1_PR3: u32 = EXTI_PR1_PR3_Msk;
pub const EXTI_PR1_PR4_Pos: u32 = 4;
pub const EXTI_PR1_PR4_Msk: u32 = 0x1 << EXTI_PR1_PR4_Pos;
pub const EXTI_PR1_PR4: u32 = EXTI_PR1_PR4_Msk;
pub const EXTI_PR1_PR5_Pos: u32 = 5;
pub const EXTI_PR1_PR5_Msk: u32 = 0x1 << EXTI_PR1_PR5_Pos;
pub const EXTI_PR1_PR5: u32 = EXTI_PR1_PR5_Msk;
pub const EXTI_PR1_PR6_Pos: u32 = 6;
pub const EXTI_PR1_PR6_Msk: u32 = 0x1 << EXTI_PR1_PR6_Pos;
pub const EXTI_PR1_PR6: u32 = EXTI_PR1_PR6_Msk;
pub const EXTI_PR1_PR7_Pos: u32 = 7;
pub const EXTI_PR1_PR7_Msk: u32 = 0x1 << EXTI_PR1_PR7_Pos;
pub const EXTI_PR1_PR7: u32 = EXTI_PR1_PR7_Msk;
pub const EXTI_PR1_PR8_Pos: u32 = 8;
pub const EXTI_PR1_PR8_Msk: u32 = 0x1 << EXTI_PR1_PR8_Pos;
pub const EXTI_PR1_PR8: u32 = EXTI_PR1_PR8_Msk;
pub const EXTI_PR1_PR9_Pos: u32 = 9;
pub const EXTI_PR1_PR9_Msk: u32 = 0x1 << EXTI_PR1_PR9_Pos;
pub const EXTI_PR1_PR9: u32 = EXTI_PR1_PR9_Msk;
pub const EXTI_PR1_PR10_Pos: u32 = 10;
pub const EXTI_PR1_PR10_Msk: u32 = 0x1 << EXTI_PR1_PR10_Pos;
pub const EXTI_PR1_PR10: u32 = EXTI_PR1_PR10_Msk;
pub const EXTI_PR1_PR11_Pos: u32 = 11;
pub const EXTI_PR1_PR11_Msk: u32 = 0x1 << EXTI_PR1_PR11_Pos;
pub const EXTI_PR1_PR11: u32 = EXTI_PR1_PR11_Msk;
pub const EXTI_PR1_PR12_Pos: u32 = 12;
pub const EXTI_PR1_PR12_Msk: u32 = 0x1 << EXTI_PR1_PR12_Pos;
pub const EXTI_PR1_PR12: u32 = EXTI_PR1_PR12_Msk;
pub const EXTI_PR1_PR13_Pos: u32 = 13;
pub const EXTI_PR1_PR13_Msk: u32 = 0x1 << EXTI_PR1_PR13_Pos;
pub const EXTI_PR1_PR13: u32 = EXTI_PR1_PR13_Msk;
pub const EXTI_PR1_PR14_Pos: u32 = 14;
pub const EXTI_PR1_PR14_Msk: u32 = 0x1 << EXTI_PR1_PR14_Pos;
pub const EXTI_PR1_PR14: u32 = EXTI_PR1_PR14_Msk;
pub const EXTI_PR1_PR15_Pos: u32 = 15;
pub const EXTI_PR1_PR15_Msk: u32 = 0x1 << EXTI_PR1_PR15_Pos;
pub const EXTI_PR1_PR15: u32 = EXTI_PR1_PR15_Msk;
pub const EXTI_PR1_PR16_Pos: u32 = 16;
pub const EXTI_PR1_PR16_Msk: u32 = 0x1 << EXTI_PR1_PR16_Pos;
pub const EXTI_PR1_PR16: u32 = EXTI_PR1_PR16_Msk;
pub const EXTI_PR1_PR17_Pos: u32 = 17;
pub const EXTI_PR1_PR17_Msk: u32 = 0x1 << EXTI_PR1_PR17_Pos;
pub const EXTI_PR1_PR17: u32 = EXTI_PR1_PR17_Msk;
pub const EXTI_PR1_PR18_Pos: u32 = 18;
pub const EXTI_PR1_PR18_Msk: u32 = 0x1 << EXTI_PR1_PR18_Pos;
pub const EXTI_PR1_PR18: u32 = EXTI_PR1_PR18_Msk;
pub const EXTI_PR1_PR19_Pos: u32 = 19;
pub const EXTI_PR1_PR19_Msk: u32 = 0x1 << EXTI_PR1_PR19_Pos;
pub const EXTI_PR1_PR19: u32 = EXTI_PR1_PR19_Msk;
pub const EXTI_PR1_PR20_Pos: u32 = 20;
pub const EXTI_PR1_PR20_Msk: u32 = 0x1 << EXTI_PR1_PR20_Pos;
pub const EXTI_PR1_PR20: u32 = EXTI_PR1_PR20_Msk;
pub const EXTI_PR1_PR21_Pos: u32 = 21;
pub const EXTI_PR1_PR21_Msk: u32 = 0x1 << EXTI_PR1_PR21_Pos;
pub const EXTI_PR1_PR21: u32 = EXTI_PR1_PR21_Msk;
pub const EXTI_PR2_PR34_Pos: u32 = 2;
pub const EXTI_PR2_PR34_Msk: u32 = 0x1 << EXTI_PR2_PR34_Pos;
pub const EXTI_PR2_PR34: u32 = EXTI_PR2_PR34_Msk;
pub const EXTI_PR2_PR46_Pos: u32 = 14;
pub const EXTI_PR2_PR46_Msk: u32 = 0x1 << EXTI_PR2_PR46_Pos;
pub const EXTI_PR2_PR46: u32 = EXTI_PR2_PR46_Msk;
pub const EXTI_PR2_PR49_Pos: u32 = 17;
pub const EXTI_PR2_PR49_Msk: u32 = 0x1 << EXTI_PR2_PR49_Pos;
pub const EXTI_PR2_PR49: u32 = EXTI_PR2_PR49_Msk;
pub const EXTI_PR2_PR51_Pos: u32 = 19;
pub const EXTI_PR2_PR51_Msk: u32 = 0x1 << EXTI_PR2_PR51_Pos;
pub const EXTI_PR2_PR51: u32 = EXTI_PR2_PR51_Msk;
pub const EXTI_PR2_PR54_Pos: u32 = 22;
pub const EXTI_PR2_PR54_Msk: u32 = 0x1 << EXTI_PR2_PR54_Pos;
pub const EXTI_PR2_PR54: u32 = EXTI_PR2_PR54_Msk;
pub const FDCAN_CREL_DAY_Pos: u32 = 0;
pub const FDCAN_CREL_DAY_Msk: u32 = 0xFF << FDCAN_CREL_DAY_Pos;
pub const FDCAN_CREL_DAY: u32 = FDCAN_CREL_DAY_Msk;
pub const FDCAN_CREL_MON_Pos: u32 = 8;
pub const FDCAN_CREL_MON_Msk: u32 = 0xFF << FDCAN_CREL_MON_Pos;
pub const FDCAN_CREL_MON: u32 = FDCAN_CREL_MON_Msk;
pub const FDCAN_CREL_YEAR_Pos: u32 = 16;
pub const FDCAN_CREL_YEAR_Msk: u32 = 0xF << FDCAN_CREL_YEAR_Pos;
pub const FDCAN_CREL_YEAR: u32 = FDCAN_CREL_YEAR_Msk;
pub const FDCAN_CREL_SUBSTEP_Pos: u32 = 20;
pub const FDCAN_CREL_SUBSTEP_Msk: u32 = 0xF << FDCAN_CREL_SUBSTEP_Pos;
pub const FDCAN_CREL_SUBSTEP: u32 = FDCAN_CREL_SUBSTEP_Msk;
pub const FDCAN_CREL_STEP_Pos: u32 = 24;
pub const FDCAN_CREL_STEP_Msk: u32 = 0xF << FDCAN_CREL_STEP_Pos;
pub const FDCAN_CREL_STEP: u32 = FDCAN_CREL_STEP_Msk;
pub const FDCAN_CREL_REL_Pos: u32 = 28;
pub const FDCAN_CREL_REL_Msk: u32 = 0xF << FDCAN_CREL_REL_Pos;
pub const FDCAN_CREL_REL: u32 = FDCAN_CREL_REL_Msk;
pub const FDCAN_ENDN_ETV_Pos: u32 = 0;
pub const FDCAN_ENDN_ETV_Msk: u32 = 0xFFFFFFFF << FDCAN_ENDN_ETV_Pos;
pub const FDCAN_ENDN_ETV: u32 = FDCAN_ENDN_ETV_Msk;
pub const FDCAN_DBTP_DSJW_Pos: u32 = 0;
pub const FDCAN_DBTP_DSJW_Msk: u32 = 0xF << FDCAN_DBTP_DSJW_Pos;
pub const FDCAN_DBTP_DSJW: u32 = FDCAN_DBTP_DSJW_Msk;
pub const FDCAN_DBTP_DTSEG2_Pos: u32 = 4;
pub const FDCAN_DBTP_DTSEG2_Msk: u32 = 0xF << FDCAN_DBTP_DTSEG2_Pos;
pub const FDCAN_DBTP_DTSEG2: u32 = FDCAN_DBTP_DTSEG2_Msk;
pub const FDCAN_DBTP_DTSEG1_Pos: u32 = 8;
pub const FDCAN_DBTP_DTSEG1_Msk: u32 = 0x1F << FDCAN_DBTP_DTSEG1_Pos;
pub const FDCAN_DBTP_DTSEG1: u32 = FDCAN_DBTP_DTSEG1_Msk;
pub const FDCAN_DBTP_DBRP_Pos: u32 = 16;
pub const FDCAN_DBTP_DBRP_Msk: u32 = 0x1F << FDCAN_DBTP_DBRP_Pos;
pub const FDCAN_DBTP_DBRP: u32 = FDCAN_DBTP_DBRP_Msk;
pub const FDCAN_DBTP_TDC_Pos: u32 = 23;
pub const FDCAN_DBTP_TDC_Msk: u32 = 0x1 << FDCAN_DBTP_TDC_Pos;
pub const FDCAN_DBTP_TDC: u32 = FDCAN_DBTP_TDC_Msk;
pub const FDCAN_TEST_LBCK_Pos: u32 = 4;
pub const FDCAN_TEST_LBCK_Msk: u32 = 0x1 << FDCAN_TEST_LBCK_Pos;
pub const FDCAN_TEST_LBCK: u32 = FDCAN_TEST_LBCK_Msk;
pub const FDCAN_TEST_TX_Pos: u32 = 5;
pub const FDCAN_TEST_TX_Msk: u32 = 0x3 << FDCAN_TEST_TX_Pos;
pub const FDCAN_TEST_TX: u32 = FDCAN_TEST_TX_Msk;
pub const FDCAN_TEST_RX_Pos: u32 = 7;
pub const FDCAN_TEST_RX_Msk: u32 = 0x1 << FDCAN_TEST_RX_Pos;
pub const FDCAN_TEST_RX: u32 = FDCAN_TEST_RX_Msk;
pub const FDCAN_RWD_WDC_Pos: u32 = 0;
pub const FDCAN_RWD_WDC_Msk: u32 = 0xFF << FDCAN_RWD_WDC_Pos;
pub const FDCAN_RWD_WDC: u32 = FDCAN_RWD_WDC_Msk;
pub const FDCAN_RWD_WDV_Pos: u32 = 8;
pub const FDCAN_RWD_WDV_Msk: u32 = 0xFF << FDCAN_RWD_WDV_Pos;
pub const FDCAN_RWD_WDV: u32 = FDCAN_RWD_WDV_Msk;
pub const FDCAN_CCCR_INIT_Pos: u32 = 0;
pub const FDCAN_CCCR_INIT_Msk: u32 = 0x1 << FDCAN_CCCR_INIT_Pos;
pub const FDCAN_CCCR_INIT: u32 = FDCAN_CCCR_INIT_Msk;
pub const FDCAN_CCCR_CCE_Pos: u32 = 1;
pub const FDCAN_CCCR_CCE_Msk: u32 = 0x1 << FDCAN_CCCR_CCE_Pos;
pub const FDCAN_CCCR_CCE: u32 = FDCAN_CCCR_CCE_Msk;
pub const FDCAN_CCCR_ASM_Pos: u32 = 2;
pub const FDCAN_CCCR_ASM_Msk: u32 = 0x1 << FDCAN_CCCR_ASM_Pos;
pub const FDCAN_CCCR_ASM: u32 = FDCAN_CCCR_ASM_Msk;
pub const FDCAN_CCCR_CSA_Pos: u32 = 3;
pub const FDCAN_CCCR_CSA_Msk: u32 = 0x1 << FDCAN_CCCR_CSA_Pos;
pub const FDCAN_CCCR_CSA: u32 = FDCAN_CCCR_CSA_Msk;
pub const FDCAN_CCCR_CSR_Pos: u32 = 4;
pub const FDCAN_CCCR_CSR_Msk: u32 = 0x1 << FDCAN_CCCR_CSR_Pos;
pub const FDCAN_CCCR_CSR: u32 = FDCAN_CCCR_CSR_Msk;
pub const FDCAN_CCCR_MON_Pos: u32 = 5;
pub const FDCAN_CCCR_MON_Msk: u32 = 0x1 << FDCAN_CCCR_MON_Pos;
pub const FDCAN_CCCR_MON: u32 = FDCAN_CCCR_MON_Msk;
pub const FDCAN_CCCR_DAR_Pos: u32 = 6;
pub const FDCAN_CCCR_DAR_Msk: u32 = 0x1 << FDCAN_CCCR_DAR_Pos;
pub const FDCAN_CCCR_DAR: u32 = FDCAN_CCCR_DAR_Msk;
pub const FDCAN_CCCR_TEST_Pos: u32 = 7;
pub const FDCAN_CCCR_TEST_Msk: u32 = 0x1 << FDCAN_CCCR_TEST_Pos;
pub const FDCAN_CCCR_TEST: u32 = FDCAN_CCCR_TEST_Msk;
pub const FDCAN_CCCR_FDOE_Pos: u32 = 8;
pub const FDCAN_CCCR_FDOE_Msk: u32 = 0x1 << FDCAN_CCCR_FDOE_Pos;
pub const FDCAN_CCCR_FDOE: u32 = FDCAN_CCCR_FDOE_Msk;
pub const FDCAN_CCCR_BRSE_Pos: u32 = 9;
pub const FDCAN_CCCR_BRSE_Msk: u32 = 0x1 << FDCAN_CCCR_BRSE_Pos;
pub const FDCAN_CCCR_BRSE: u32 = FDCAN_CCCR_BRSE_Msk;
pub const FDCAN_CCCR_PXHD_Pos: u32 = 12;
pub const FDCAN_CCCR_PXHD_Msk: u32 = 0x1 << FDCAN_CCCR_PXHD_Pos;
pub const FDCAN_CCCR_PXHD: u32 = FDCAN_CCCR_PXHD_Msk;
pub const FDCAN_CCCR_EFBI_Pos: u32 = 13;
pub const FDCAN_CCCR_EFBI_Msk: u32 = 0x1 << FDCAN_CCCR_EFBI_Pos;
pub const FDCAN_CCCR_EFBI: u32 = FDCAN_CCCR_EFBI_Msk;
pub const FDCAN_CCCR_TXP_Pos: u32 = 14;
pub const FDCAN_CCCR_TXP_Msk: u32 = 0x1 << FDCAN_CCCR_TXP_Pos;
pub const FDCAN_CCCR_TXP: u32 = FDCAN_CCCR_TXP_Msk;
pub const FDCAN_CCCR_NISO_Pos: u32 = 15;
pub const FDCAN_CCCR_NISO_Msk: u32 = 0x1 << FDCAN_CCCR_NISO_Pos;
pub const FDCAN_CCCR_NISO: u32 = FDCAN_CCCR_NISO_Msk;
pub const FDCAN_NBTP_NTSEG2_Pos: u32 = 0;
pub const FDCAN_NBTP_NTSEG2_Msk: u32 = 0x7F << FDCAN_NBTP_NTSEG2_Pos;
pub const FDCAN_NBTP_NTSEG2: u32 = FDCAN_NBTP_NTSEG2_Msk;
pub const FDCAN_NBTP_NTSEG1_Pos: u32 = 8;
pub const FDCAN_NBTP_NTSEG1_Msk: u32 = 0xFF << FDCAN_NBTP_NTSEG1_Pos;
pub const FDCAN_NBTP_NTSEG1: u32 = FDCAN_NBTP_NTSEG1_Msk;
pub const FDCAN_NBTP_NBRP_Pos: u32 = 16;
pub const FDCAN_NBTP_NBRP_Msk: u32 = 0x1FF << FDCAN_NBTP_NBRP_Pos;
pub const FDCAN_NBTP_NBRP: u32 = FDCAN_NBTP_NBRP_Msk;
pub const FDCAN_NBTP_NSJW_Pos: u32 = 25;
pub const FDCAN_NBTP_NSJW_Msk: u32 = 0x7F << FDCAN_NBTP_NSJW_Pos;
pub const FDCAN_NBTP_NSJW: u32 = FDCAN_NBTP_NSJW_Msk;
pub const FDCAN_TSCC_TSS_Pos: u32 = 0;
pub const FDCAN_TSCC_TSS_Msk: u32 = 0x3 << FDCAN_TSCC_TSS_Pos;
pub const FDCAN_TSCC_TSS: u32 = FDCAN_TSCC_TSS_Msk;
pub const FDCAN_TSCC_TCP_Pos: u32 = 16;
pub const FDCAN_TSCC_TCP_Msk: u32 = 0xF << FDCAN_TSCC_TCP_Pos;
pub const FDCAN_TSCC_TCP: u32 = FDCAN_TSCC_TCP_Msk;
pub const FDCAN_TSCV_TSC_Pos: u32 = 0;
pub const FDCAN_TSCV_TSC_Msk: u32 = 0xFFFF << FDCAN_TSCV_TSC_Pos;
pub const FDCAN_TSCV_TSC: u32 = FDCAN_TSCV_TSC_Msk;
pub const FDCAN_TOCC_ETOC_Pos: u32 = 0;
pub const FDCAN_TOCC_ETOC_Msk: u32 = 0x1 << FDCAN_TOCC_ETOC_Pos;
pub const FDCAN_TOCC_ETOC: u32 = FDCAN_TOCC_ETOC_Msk;
pub const FDCAN_TOCC_TOS_Pos: u32 = 1;
pub const FDCAN_TOCC_TOS_Msk: u32 = 0x3 << FDCAN_TOCC_TOS_Pos;
pub const FDCAN_TOCC_TOS: u32 = FDCAN_TOCC_TOS_Msk;
pub const FDCAN_TOCC_TOP_Pos: u32 = 16;
pub const FDCAN_TOCC_TOP_Msk: u32 = 0xFFFF << FDCAN_TOCC_TOP_Pos;
pub const FDCAN_TOCC_TOP: u32 = FDCAN_TOCC_TOP_Msk;
pub const FDCAN_TOCV_TOC_Pos: u32 = 0;
pub const FDCAN_TOCV_TOC_Msk: u32 = 0xFFFF << FDCAN_TOCV_TOC_Pos;
pub const FDCAN_TOCV_TOC: u32 = FDCAN_TOCV_TOC_Msk;
pub const FDCAN_ECR_TEC_Pos: u32 = 0;
pub const FDCAN_ECR_TEC_Msk: u32 = 0xFF << FDCAN_ECR_TEC_Pos;
pub const FDCAN_ECR_TEC: u32 = FDCAN_ECR_TEC_Msk;
pub const FDCAN_ECR_REC_Pos: u32 = 8;
pub const FDCAN_ECR_REC_Msk: u32 = 0x7F << FDCAN_ECR_REC_Pos;
pub const FDCAN_ECR_REC: u32 = FDCAN_ECR_REC_Msk;
pub const FDCAN_ECR_RP_Pos: u32 = 15;
pub const FDCAN_ECR_RP_Msk: u32 = 0x1 << FDCAN_ECR_RP_Pos;
pub const FDCAN_ECR_RP: u32 = FDCAN_ECR_RP_Msk;
pub const FDCAN_ECR_CEL_Pos: u32 = 16;
pub const FDCAN_ECR_CEL_Msk: u32 = 0xFF << FDCAN_ECR_CEL_Pos;
pub const FDCAN_ECR_CEL: u32 = FDCAN_ECR_CEL_Msk;
pub const FDCAN_PSR_LEC_Pos: u32 = 0;
pub const FDCAN_PSR_LEC_Msk: u32 = 0x7 << FDCAN_PSR_LEC_Pos;
pub const FDCAN_PSR_LEC: u32 = FDCAN_PSR_LEC_Msk;
pub const FDCAN_PSR_ACT_Pos: u32 = 3;
pub const FDCAN_PSR_ACT_Msk: u32 = 0x3 << FDCAN_PSR_ACT_Pos;
pub const FDCAN_PSR_ACT: u32 = FDCAN_PSR_ACT_Msk;
pub const FDCAN_PSR_EP_Pos: u32 = 5;
pub const FDCAN_PSR_EP_Msk: u32 = 0x1 << FDCAN_PSR_EP_Pos;
pub const FDCAN_PSR_EP: u32 = FDCAN_PSR_EP_Msk;
pub const FDCAN_PSR_EW_Pos: u32 = 6;
pub const FDCAN_PSR_EW_Msk: u32 = 0x1 << FDCAN_PSR_EW_Pos;
pub const FDCAN_PSR_EW: u32 = FDCAN_PSR_EW_Msk;
pub const FDCAN_PSR_BO_Pos: u32 = 7;
pub const FDCAN_PSR_BO_Msk: u32 = 0x1 << FDCAN_PSR_BO_Pos;
pub const FDCAN_PSR_BO: u32 = FDCAN_PSR_BO_Msk;
pub const FDCAN_PSR_DLEC_Pos: u32 = 8;
pub const FDCAN_PSR_DLEC_Msk: u32 = 0x7 << FDCAN_PSR_DLEC_Pos;
pub const FDCAN_PSR_DLEC: u32 = FDCAN_PSR_DLEC_Msk;
pub const FDCAN_PSR_RESI_Pos: u32 = 11;
pub const FDCAN_PSR_RESI_Msk: u32 = 0x1 << FDCAN_PSR_RESI_Pos;
pub const FDCAN_PSR_RESI: u32 = FDCAN_PSR_RESI_Msk;
pub const FDCAN_PSR_RBRS_Pos: u32 = 12;
pub const FDCAN_PSR_RBRS_Msk: u32 = 0x1 << FDCAN_PSR_RBRS_Pos;
pub const FDCAN_PSR_RBRS: u32 = FDCAN_PSR_RBRS_Msk;
pub const FDCAN_PSR_REDL_Pos: u32 = 13;
pub const FDCAN_PSR_REDL_Msk: u32 = 0x1 << FDCAN_PSR_REDL_Pos;
pub const FDCAN_PSR_REDL: u32 = FDCAN_PSR_REDL_Msk;
pub const FDCAN_PSR_PXE_Pos: u32 = 14;
pub const FDCAN_PSR_PXE_Msk: u32 = 0x1 << FDCAN_PSR_PXE_Pos;
pub const FDCAN_PSR_PXE: u32 = FDCAN_PSR_PXE_Msk;
pub const FDCAN_PSR_TDCV_Pos: u32 = 16;
pub const FDCAN_PSR_TDCV_Msk: u32 = 0x7F << FDCAN_PSR_TDCV_Pos;
pub const FDCAN_PSR_TDCV: u32 = FDCAN_PSR_TDCV_Msk;
pub const FDCAN_TDCR_TDCF_Pos: u32 = 0;
pub const FDCAN_TDCR_TDCF_Msk: u32 = 0x7F << FDCAN_TDCR_TDCF_Pos;
pub const FDCAN_TDCR_TDCF: u32 = FDCAN_TDCR_TDCF_Msk;
pub const FDCAN_TDCR_TDCO_Pos: u32 = 8;
pub const FDCAN_TDCR_TDCO_Msk: u32 = 0x7F << FDCAN_TDCR_TDCO_Pos;
pub const FDCAN_TDCR_TDCO: u32 = FDCAN_TDCR_TDCO_Msk;
pub const FDCAN_IR_RF0N_Pos: u32 = 0;
pub const FDCAN_IR_RF0N_Msk: u32 = 0x1 << FDCAN_IR_RF0N_Pos;
pub const FDCAN_IR_RF0N: u32 = FDCAN_IR_RF0N_Msk;
pub const FDCAN_IR_RF0F_Pos: u32 = 1;
pub const FDCAN_IR_RF0F_Msk: u32 = 0x1 << FDCAN_IR_RF0F_Pos;
pub const FDCAN_IR_RF0F: u32 = FDCAN_IR_RF0F_Msk;
pub const FDCAN_IR_RF0L_Pos: u32 = 2;
pub const FDCAN_IR_RF0L_Msk: u32 = 0x1 << FDCAN_IR_RF0L_Pos;
pub const FDCAN_IR_RF0L: u32 = FDCAN_IR_RF0L_Msk;
pub const FDCAN_IR_RF1N_Pos: u32 = 3;
pub const FDCAN_IR_RF1N_Msk: u32 = 0x1 << FDCAN_IR_RF1N_Pos;
pub const FDCAN_IR_RF1N: u32 = FDCAN_IR_RF1N_Msk;
pub const FDCAN_IR_RF1F_Pos: u32 = 4;
pub const FDCAN_IR_RF1F_Msk: u32 = 0x1 << FDCAN_IR_RF1F_Pos;
pub const FDCAN_IR_RF1F: u32 = FDCAN_IR_RF1F_Msk;
pub const FDCAN_IR_RF1L_Pos: u32 = 5;
pub const FDCAN_IR_RF1L_Msk: u32 = 0x1 << FDCAN_IR_RF1L_Pos;
pub const FDCAN_IR_RF1L: u32 = FDCAN_IR_RF1L_Msk;
pub const FDCAN_IR_HPM_Pos: u32 = 6;
pub const FDCAN_IR_HPM_Msk: u32 = 0x1 << FDCAN_IR_HPM_Pos;
pub const FDCAN_IR_HPM: u32 = FDCAN_IR_HPM_Msk;
pub const FDCAN_IR_TC_Pos: u32 = 7;
pub const FDCAN_IR_TC_Msk: u32 = 0x1 << FDCAN_IR_TC_Pos;
pub const FDCAN_IR_TC: u32 = FDCAN_IR_TC_Msk;
pub const FDCAN_IR_TCF_Pos: u32 = 8;
pub const FDCAN_IR_TCF_Msk: u32 = 0x1 << FDCAN_IR_TCF_Pos;
pub const FDCAN_IR_TCF: u32 = FDCAN_IR_TCF_Msk;
pub const FDCAN_IR_TFE_Pos: u32 = 9;
pub const FDCAN_IR_TFE_Msk: u32 = 0x1 << FDCAN_IR_TFE_Pos;
pub const FDCAN_IR_TFE: u32 = FDCAN_IR_TFE_Msk;
pub const FDCAN_IR_TEFN_Pos: u32 = 10;
pub const FDCAN_IR_TEFN_Msk: u32 = 0x1 << FDCAN_IR_TEFN_Pos;
pub const FDCAN_IR_TEFN: u32 = FDCAN_IR_TEFN_Msk;
pub const FDCAN_IR_TEFF_Pos: u32 = 11;
pub const FDCAN_IR_TEFF_Msk: u32 = 0x1 << FDCAN_IR_TEFF_Pos;
pub const FDCAN_IR_TEFF: u32 = FDCAN_IR_TEFF_Msk;
pub const FDCAN_IR_TEFL_Pos: u32 = 12;
pub const FDCAN_IR_TEFL_Msk: u32 = 0x1 << FDCAN_IR_TEFL_Pos;
pub const FDCAN_IR_TEFL: u32 = FDCAN_IR_TEFL_Msk;
pub const FDCAN_IR_TSW_Pos: u32 = 13;
pub const FDCAN_IR_TSW_Msk: u32 = 0x1 << FDCAN_IR_TSW_Pos;
pub const FDCAN_IR_TSW: u32 = FDCAN_IR_TSW_Msk;
pub const FDCAN_IR_MRAF_Pos: u32 = 14;
pub const FDCAN_IR_MRAF_Msk: u32 = 0x1 << FDCAN_IR_MRAF_Pos;
pub const FDCAN_IR_MRAF: u32 = FDCAN_IR_MRAF_Msk;
pub const FDCAN_IR_TOO_Pos: u32 = 15;
pub const FDCAN_IR_TOO_Msk: u32 = 0x1 << FDCAN_IR_TOO_Pos;
pub const FDCAN_IR_TOO: u32 = FDCAN_IR_TOO_Msk;
pub const FDCAN_IR_ELO_Pos: u32 = 16;
pub const FDCAN_IR_ELO_Msk: u32 = 0x1 << FDCAN_IR_ELO_Pos;
pub const FDCAN_IR_ELO: u32 = FDCAN_IR_ELO_Msk;
pub const FDCAN_IR_EP_Pos: u32 = 17;
pub const FDCAN_IR_EP_Msk: u32 = 0x1 << FDCAN_IR_EP_Pos;
pub const FDCAN_IR_EP: u32 = FDCAN_IR_EP_Msk;
pub const FDCAN_IR_EW_Pos: u32 = 18;
pub const FDCAN_IR_EW_Msk: u32 = 0x1 << FDCAN_IR_EW_Pos;
pub const FDCAN_IR_EW: u32 = FDCAN_IR_EW_Msk;
pub const FDCAN_IR_BO_Pos: u32 = 19;
pub const FDCAN_IR_BO_Msk: u32 = 0x1 << FDCAN_IR_BO_Pos;
pub const FDCAN_IR_BO: u32 = FDCAN_IR_BO_Msk;
pub const FDCAN_IR_WDI_Pos: u32 = 20;
pub const FDCAN_IR_WDI_Msk: u32 = 0x1 << FDCAN_IR_WDI_Pos;
pub const FDCAN_IR_WDI: u32 = FDCAN_IR_WDI_Msk;
pub const FDCAN_IR_PEA_Pos: u32 = 21;
pub const FDCAN_IR_PEA_Msk: u32 = 0x1 << FDCAN_IR_PEA_Pos;
pub const FDCAN_IR_PEA: u32 = FDCAN_IR_PEA_Msk;
pub const FDCAN_IR_PED_Pos: u32 = 22;
pub const FDCAN_IR_PED_Msk: u32 = 0x1 << FDCAN_IR_PED_Pos;
pub const FDCAN_IR_PED: u32 = FDCAN_IR_PED_Msk;
pub const FDCAN_IR_ARA_Pos: u32 = 23;
pub const FDCAN_IR_ARA_Msk: u32 = 0x1 << FDCAN_IR_ARA_Pos;
pub const FDCAN_IR_ARA: u32 = FDCAN_IR_ARA_Msk;
pub const FDCAN_IE_RF0NE_Pos: u32 = 0;
pub const FDCAN_IE_RF0NE_Msk: u32 = 0x1 << FDCAN_IE_RF0NE_Pos;
pub const FDCAN_IE_RF0NE: u32 = FDCAN_IE_RF0NE_Msk;
pub const FDCAN_IE_RF0FE_Pos: u32 = 1;
pub const FDCAN_IE_RF0FE_Msk: u32 = 0x1 << FDCAN_IE_RF0FE_Pos;
pub const FDCAN_IE_RF0FE: u32 = FDCAN_IE_RF0FE_Msk;
pub const FDCAN_IE_RF0LE_Pos: u32 = 2;
pub const FDCAN_IE_RF0LE_Msk: u32 = 0x1 << FDCAN_IE_RF0LE_Pos;
pub const FDCAN_IE_RF0LE: u32 = FDCAN_IE_RF0LE_Msk;
pub const FDCAN_IE_RF1NE_Pos: u32 = 3;
pub const FDCAN_IE_RF1NE_Msk: u32 = 0x1 << FDCAN_IE_RF1NE_Pos;
pub const FDCAN_IE_RF1NE: u32 = FDCAN_IE_RF1NE_Msk;
pub const FDCAN_IE_RF1FE_Pos: u32 = 4;
pub const FDCAN_IE_RF1FE_Msk: u32 = 0x1 << FDCAN_IE_RF1FE_Pos;
pub const FDCAN_IE_RF1FE: u32 = FDCAN_IE_RF1FE_Msk;
pub const FDCAN_IE_RF1LE_Pos: u32 = 5;
pub const FDCAN_IE_RF1LE_Msk: u32 = 0x1 << FDCAN_IE_RF1LE_Pos;
pub const FDCAN_IE_RF1LE: u32 = FDCAN_IE_RF1LE_Msk;
pub const FDCAN_IE_HPME_Pos: u32 = 6;
pub const FDCAN_IE_HPME_Msk: u32 = 0x1 << FDCAN_IE_HPME_Pos;
pub const FDCAN_IE_HPME: u32 = FDCAN_IE_HPME_Msk;
pub const FDCAN_IE_TCE_Pos: u32 = 7;
pub const FDCAN_IE_TCE_Msk: u32 = 0x1 << FDCAN_IE_TCE_Pos;
pub const FDCAN_IE_TCE: u32 = FDCAN_IE_TCE_Msk;
pub const FDCAN_IE_TCFE_Pos: u32 = 8;
pub const FDCAN_IE_TCFE_Msk: u32 = 0x1 << FDCAN_IE_TCFE_Pos;
pub const FDCAN_IE_TCFE: u32 = FDCAN_IE_TCFE_Msk;
pub const FDCAN_IE_TFEE_Pos: u32 = 9;
pub const FDCAN_IE_TFEE_Msk: u32 = 0x1 << FDCAN_IE_TFEE_Pos;
pub const FDCAN_IE_TFEE: u32 = FDCAN_IE_TFEE_Msk;
pub const FDCAN_IE_TEFNE_Pos: u32 = 10;
pub const FDCAN_IE_TEFNE_Msk: u32 = 0x1 << FDCAN_IE_TEFNE_Pos;
pub const FDCAN_IE_TEFNE: u32 = FDCAN_IE_TEFNE_Msk;
pub const FDCAN_IE_TEFFE_Pos: u32 = 11;
pub const FDCAN_IE_TEFFE_Msk: u32 = 0x1 << FDCAN_IE_TEFFE_Pos;
pub const FDCAN_IE_TEFFE: u32 = FDCAN_IE_TEFFE_Msk;
pub const FDCAN_IE_TEFLE_Pos: u32 = 12;
pub const FDCAN_IE_TEFLE_Msk: u32 = 0x1 << FDCAN_IE_TEFLE_Pos;
pub const FDCAN_IE_TEFLE: u32 = FDCAN_IE_TEFLE_Msk;
pub const FDCAN_IE_TSWE_Pos: u32 = 13;
pub const FDCAN_IE_TSWE_Msk: u32 = 0x1 << FDCAN_IE_TSWE_Pos;
pub const FDCAN_IE_TSWE: u32 = FDCAN_IE_TSWE_Msk;
pub const FDCAN_IE_MRAFE_Pos: u32 = 14;
pub const FDCAN_IE_MRAFE_Msk: u32 = 0x1 << FDCAN_IE_MRAFE_Pos;
pub const FDCAN_IE_MRAFE: u32 = FDCAN_IE_MRAFE_Msk;
pub const FDCAN_IE_TOOE_Pos: u32 = 15;
pub const FDCAN_IE_TOOE_Msk: u32 = 0x1 << FDCAN_IE_TOOE_Pos;
pub const FDCAN_IE_TOOE: u32 = FDCAN_IE_TOOE_Msk;
pub const FDCAN_IE_ELOE_Pos: u32 = 16;
pub const FDCAN_IE_ELOE_Msk: u32 = 0x1 << FDCAN_IE_ELOE_Pos;
pub const FDCAN_IE_ELOE: u32 = FDCAN_IE_ELOE_Msk;
pub const FDCAN_IE_EPE_Pos: u32 = 17;
pub const FDCAN_IE_EPE_Msk: u32 = 0x1 << FDCAN_IE_EPE_Pos;
pub const FDCAN_IE_EPE: u32 = FDCAN_IE_EPE_Msk;
pub const FDCAN_IE_EWE_Pos: u32 = 18;
pub const FDCAN_IE_EWE_Msk: u32 = 0x1 << FDCAN_IE_EWE_Pos;
pub const FDCAN_IE_EWE: u32 = FDCAN_IE_EWE_Msk;
pub const FDCAN_IE_BOE_Pos: u32 = 19;
pub const FDCAN_IE_BOE_Msk: u32 = 0x1 << FDCAN_IE_BOE_Pos;
pub const FDCAN_IE_BOE: u32 = FDCAN_IE_BOE_Msk;
pub const FDCAN_IE_WDIE_Pos: u32 = 20;
pub const FDCAN_IE_WDIE_Msk: u32 = 0x1 << FDCAN_IE_WDIE_Pos;
pub const FDCAN_IE_WDIE: u32 = FDCAN_IE_WDIE_Msk;
pub const FDCAN_IE_PEAE_Pos: u32 = 21;
pub const FDCAN_IE_PEAE_Msk: u32 = 0x1 << FDCAN_IE_PEAE_Pos;
pub const FDCAN_IE_PEAE: u32 = FDCAN_IE_PEAE_Msk;
pub const FDCAN_IE_PEDE_Pos: u32 = 22;
pub const FDCAN_IE_PEDE_Msk: u32 = 0x1 << FDCAN_IE_PEDE_Pos;
pub const FDCAN_IE_PEDE: u32 = FDCAN_IE_PEDE_Msk;
pub const FDCAN_IE_ARAE_Pos: u32 = 23;
pub const FDCAN_IE_ARAE_Msk: u32 = 0x1 << FDCAN_IE_ARAE_Pos;
pub const FDCAN_IE_ARAE: u32 = FDCAN_IE_ARAE_Msk;
pub const FDCAN_ILS_RXFIFO0_Pos: u32 = 0;
pub const FDCAN_ILS_RXFIFO0_Msk: u32 = 0x1 << FDCAN_ILS_RXFIFO0_Pos;
pub const FDCAN_ILS_RXFIFO0: u32 = FDCAN_ILS_RXFIFO0_Msk;
pub const FDCAN_ILS_RXFIFO1_Pos: u32 = 1;
pub const FDCAN_ILS_RXFIFO1_Msk: u32 = 0x1 << FDCAN_ILS_RXFIFO1_Pos;
pub const FDCAN_ILS_RXFIFO1: u32 = FDCAN_ILS_RXFIFO1_Msk;
pub const FDCAN_ILS_SMSG_Pos: u32 = 2;
pub const FDCAN_ILS_SMSG_Msk: u32 = 0x1 << FDCAN_ILS_SMSG_Pos;
pub const FDCAN_ILS_SMSG: u32 = FDCAN_ILS_SMSG_Msk;
pub const FDCAN_ILS_TFERR_Pos: u32 = 3;
pub const FDCAN_ILS_TFERR_Msk: u32 = 0x1 << FDCAN_ILS_TFERR_Pos;
pub const FDCAN_ILS_TFERR: u32 = FDCAN_ILS_TFERR_Msk;
pub const FDCAN_ILS_MISC_Pos: u32 = 4;
pub const FDCAN_ILS_MISC_Msk: u32 = 0x1 << FDCAN_ILS_MISC_Pos;
pub const FDCAN_ILS_MISC: u32 = FDCAN_ILS_MISC_Msk;
pub const FDCAN_ILS_BERR_Pos: u32 = 5;
pub const FDCAN_ILS_BERR_Msk: u32 = 0x1 << FDCAN_ILS_BERR_Pos;
pub const FDCAN_ILS_BERR: u32 = FDCAN_ILS_BERR_Msk;
pub const FDCAN_ILS_PERR_Pos: u32 = 6;
pub const FDCAN_ILS_PERR_Msk: u32 = 0x1 << FDCAN_ILS_PERR_Pos;
pub const FDCAN_ILS_PERR: u32 = FDCAN_ILS_PERR_Msk;
pub const FDCAN_ILE_EINT0_Pos: u32 = 0;
pub const FDCAN_ILE_EINT0_Msk: u32 = 0x1 << FDCAN_ILE_EINT0_Pos;
pub const FDCAN_ILE_EINT0: u32 = FDCAN_ILE_EINT0_Msk;
pub const FDCAN_ILE_EINT1_Pos: u32 = 1;
pub const FDCAN_ILE_EINT1_Msk: u32 = 0x1 << FDCAN_ILE_EINT1_Pos;
pub const FDCAN_ILE_EINT1: u32 = FDCAN_ILE_EINT1_Msk;
pub const FDCAN_RXGFC_RRFE_Pos: u32 = 0;
pub const FDCAN_RXGFC_RRFE_Msk: u32 = 0x1 << FDCAN_RXGFC_RRFE_Pos;
pub const FDCAN_RXGFC_RRFE: u32 = FDCAN_RXGFC_RRFE_Msk;
pub const FDCAN_RXGFC_RRFS_Pos: u32 = 1;
pub const FDCAN_RXGFC_RRFS_Msk: u32 = 0x1 << FDCAN_RXGFC_RRFS_Pos;
pub const FDCAN_RXGFC_RRFS: u32 = FDCAN_RXGFC_RRFS_Msk;
pub const FDCAN_RXGFC_ANFE_Pos: u32 = 2;
pub const FDCAN_RXGFC_ANFE_Msk: u32 = 0x3 << FDCAN_RXGFC_ANFE_Pos;
pub const FDCAN_RXGFC_ANFE: u32 = FDCAN_RXGFC_ANFE_Msk;
pub const FDCAN_RXGFC_ANFS_Pos: u32 = 4;
pub const FDCAN_RXGFC_ANFS_Msk: u32 = 0x3 << FDCAN_RXGFC_ANFS_Pos;
pub const FDCAN_RXGFC_ANFS: u32 = FDCAN_RXGFC_ANFS_Msk;
pub const FDCAN_RXGFC_F1OM_Pos: u32 = 8;
pub const FDCAN_RXGFC_F1OM_Msk: u32 = 0x1 << FDCAN_RXGFC_F1OM_Pos;
pub const FDCAN_RXGFC_F1OM: u32 = FDCAN_RXGFC_F1OM_Msk;
pub const FDCAN_RXGFC_F0OM_Pos: u32 = 9;
pub const FDCAN_RXGFC_F0OM_Msk: u32 = 0x1 << FDCAN_RXGFC_F0OM_Pos;
pub const FDCAN_RXGFC_F0OM: u32 = FDCAN_RXGFC_F0OM_Msk;
pub const FDCAN_RXGFC_LSS_Pos: u32 = 16;
pub const FDCAN_RXGFC_LSS_Msk: u32 = 0x1F << FDCAN_RXGFC_LSS_Pos;
pub const FDCAN_RXGFC_LSS: u32 = FDCAN_RXGFC_LSS_Msk;
pub const FDCAN_RXGFC_LSE_Pos: u32 = 24;
pub const FDCAN_RXGFC_LSE_Msk: u32 = 0xF << FDCAN_RXGFC_LSE_Pos;
pub const FDCAN_RXGFC_LSE: u32 = FDCAN_RXGFC_LSE_Msk;
pub const FDCAN_XIDAM_EIDM_Pos: u32 = 0;
pub const FDCAN_XIDAM_EIDM_Msk: u32 = 0x1FFFFFFF << FDCAN_XIDAM_EIDM_Pos;
pub const FDCAN_XIDAM_EIDM: u32 = FDCAN_XIDAM_EIDM_Msk;
pub const FDCAN_HPMS_BIDX_Pos: u32 = 0;
pub const FDCAN_HPMS_BIDX_Msk: u32 = 0x7 << FDCAN_HPMS_BIDX_Pos;
pub const FDCAN_HPMS_BIDX: u32 = FDCAN_HPMS_BIDX_Msk;
pub const FDCAN_HPMS_MSI_Pos: u32 = 6;
pub const FDCAN_HPMS_MSI_Msk: u32 = 0x3 << FDCAN_HPMS_MSI_Pos;
pub const FDCAN_HPMS_MSI: u32 = FDCAN_HPMS_MSI_Msk;
pub const FDCAN_HPMS_FIDX_Pos: u32 = 8;
pub const FDCAN_HPMS_FIDX_Msk: u32 = 0x1F << FDCAN_HPMS_FIDX_Pos;
pub const FDCAN_HPMS_FIDX: u32 = FDCAN_HPMS_FIDX_Msk;
pub const FDCAN_HPMS_FLST_Pos: u32 = 15;
pub const FDCAN_HPMS_FLST_Msk: u32 = 0x1 << FDCAN_HPMS_FLST_Pos;
pub const FDCAN_HPMS_FLST: u32 = FDCAN_HPMS_FLST_Msk;
pub const FDCAN_RXF0S_F0FL_Pos: u32 = 0;
pub const FDCAN_RXF0S_F0FL_Msk: u32 = 0xF << FDCAN_RXF0S_F0FL_Pos;
pub const FDCAN_RXF0S_F0FL: u32 = FDCAN_RXF0S_F0FL_Msk;
pub const FDCAN_RXF0S_F0GI_Pos: u32 = 8;
pub const FDCAN_RXF0S_F0GI_Msk: u32 = 0x3 << FDCAN_RXF0S_F0GI_Pos;
pub const FDCAN_RXF0S_F0GI: u32 = FDCAN_RXF0S_F0GI_Msk;
pub const FDCAN_RXF0S_F0PI_Pos: u32 = 16;
pub const FDCAN_RXF0S_F0PI_Msk: u32 = 0x3 << FDCAN_RXF0S_F0PI_Pos;
pub const FDCAN_RXF0S_F0PI: u32 = FDCAN_RXF0S_F0PI_Msk;
pub const FDCAN_RXF0S_F0F_Pos: u32 = 24;
pub const FDCAN_RXF0S_F0F_Msk: u32 = 0x1 << FDCAN_RXF0S_F0F_Pos;
pub const FDCAN_RXF0S_F0F: u32 = FDCAN_RXF0S_F0F_Msk;
pub const FDCAN_RXF0S_RF0L_Pos: u32 = 25;
pub const FDCAN_RXF0S_RF0L_Msk: u32 = 0x1 << FDCAN_RXF0S_RF0L_Pos;
pub const FDCAN_RXF0S_RF0L: u32 = FDCAN_RXF0S_RF0L_Msk;
pub const FDCAN_RXF0A_F0AI_Pos: u32 = 0;
pub const FDCAN_RXF0A_F0AI_Msk: u32 = 0x7 << FDCAN_RXF0A_F0AI_Pos;
pub const FDCAN_RXF0A_F0AI: u32 = FDCAN_RXF0A_F0AI_Msk;
pub const FDCAN_RXF1S_F1FL_Pos: u32 = 0;
pub const FDCAN_RXF1S_F1FL_Msk: u32 = 0xF << FDCAN_RXF1S_F1FL_Pos;
pub const FDCAN_RXF1S_F1FL: u32 = FDCAN_RXF1S_F1FL_Msk;
pub const FDCAN_RXF1S_F1GI_Pos: u32 = 8;
pub const FDCAN_RXF1S_F1GI_Msk: u32 = 0x3 << FDCAN_RXF1S_F1GI_Pos;
pub const FDCAN_RXF1S_F1GI: u32 = FDCAN_RXF1S_F1GI_Msk;
pub const FDCAN_RXF1S_F1PI_Pos: u32 = 16;
pub const FDCAN_RXF1S_F1PI_Msk: u32 = 0x3 << FDCAN_RXF1S_F1PI_Pos;
pub const FDCAN_RXF1S_F1PI: u32 = FDCAN_RXF1S_F1PI_Msk;
pub const FDCAN_RXF1S_F1F_Pos: u32 = 24;
pub const FDCAN_RXF1S_F1F_Msk: u32 = 0x1 << FDCAN_RXF1S_F1F_Pos;
pub const FDCAN_RXF1S_F1F: u32 = FDCAN_RXF1S_F1F_Msk;
pub const FDCAN_RXF1S_RF1L_Pos: u32 = 25;
pub const FDCAN_RXF1S_RF1L_Msk: u32 = 0x1 << FDCAN_RXF1S_RF1L_Pos;
pub const FDCAN_RXF1S_RF1L: u32 = FDCAN_RXF1S_RF1L_Msk;
pub const FDCAN_RXF1A_F1AI_Pos: u32 = 0;
pub const FDCAN_RXF1A_F1AI_Msk: u32 = 0x7 << FDCAN_RXF1A_F1AI_Pos;
pub const FDCAN_RXF1A_F1AI: u32 = FDCAN_RXF1A_F1AI_Msk;
pub const FDCAN_TXBC_TFQM_Pos: u32 = 24;
pub const FDCAN_TXBC_TFQM_Msk: u32 = 0x1 << FDCAN_TXBC_TFQM_Pos;
pub const FDCAN_TXBC_TFQM: u32 = FDCAN_TXBC_TFQM_Msk;
pub const FDCAN_TXFQS_TFFL_Pos: u32 = 0;
pub const FDCAN_TXFQS_TFFL_Msk: u32 = 0x7 << FDCAN_TXFQS_TFFL_Pos;
pub const FDCAN_TXFQS_TFFL: u32 = FDCAN_TXFQS_TFFL_Msk;
pub const FDCAN_TXFQS_TFGI_Pos: u32 = 8;
pub const FDCAN_TXFQS_TFGI_Msk: u32 = 0x3 << FDCAN_TXFQS_TFGI_Pos;
pub const FDCAN_TXFQS_TFGI: u32 = FDCAN_TXFQS_TFGI_Msk;
pub const FDCAN_TXFQS_TFQPI_Pos: u32 = 16;
pub const FDCAN_TXFQS_TFQPI_Msk: u32 = 0x3 << FDCAN_TXFQS_TFQPI_Pos;
pub const FDCAN_TXFQS_TFQPI: u32 = FDCAN_TXFQS_TFQPI_Msk;
pub const FDCAN_TXFQS_TFQF_Pos: u32 = 21;
pub const FDCAN_TXFQS_TFQF_Msk: u32 = 0x1 << FDCAN_TXFQS_TFQF_Pos;
pub const FDCAN_TXFQS_TFQF: u32 = FDCAN_TXFQS_TFQF_Msk;
pub const FDCAN_TXBRP_TRP_Pos: u32 = 0;
pub const FDCAN_TXBRP_TRP_Msk: u32 = 0x7 << FDCAN_TXBRP_TRP_Pos;
pub const FDCAN_TXBRP_TRP: u32 = FDCAN_TXBRP_TRP_Msk;
pub const FDCAN_TXBAR_AR_Pos: u32 = 0;
pub const FDCAN_TXBAR_AR_Msk: u32 = 0x7 << FDCAN_TXBAR_AR_Pos;
pub const FDCAN_TXBAR_AR: u32 = FDCAN_TXBAR_AR_Msk;
pub const FDCAN_TXBCR_CR_Pos: u32 = 0;
pub const FDCAN_TXBCR_CR_Msk: u32 = 0x7 << FDCAN_TXBCR_CR_Pos;
pub const FDCAN_TXBCR_CR: u32 = FDCAN_TXBCR_CR_Msk;
pub const FDCAN_TXBTO_TO_Pos: u32 = 0;
pub const FDCAN_TXBTO_TO_Msk: u32 = 0x7 << FDCAN_TXBTO_TO_Pos;
pub const FDCAN_TXBTO_TO: u32 = FDCAN_TXBTO_TO_Msk;
pub const FDCAN_TXBCF_CF_Pos: u32 = 0;
pub const FDCAN_TXBCF_CF_Msk: u32 = 0x7 << FDCAN_TXBCF_CF_Pos;
pub const FDCAN_TXBCF_CF: u32 = FDCAN_TXBCF_CF_Msk;
pub const FDCAN_TXBTIE_TIE_Pos: u32 = 0;
pub const FDCAN_TXBTIE_TIE_Msk: u32 = 0x7 << FDCAN_TXBTIE_TIE_Pos;
pub const FDCAN_TXBTIE_TIE: u32 = FDCAN_TXBTIE_TIE_Msk;
pub const FDCAN_TXBCIE_CFIE_Pos: u32 = 0;
pub const FDCAN_TXBCIE_CFIE_Msk: u32 = 0x7 << FDCAN_TXBCIE_CFIE_Pos;
pub const FDCAN_TXBCIE_CFIE: u32 = FDCAN_TXBCIE_CFIE_Msk;
pub const FDCAN_TXEFS_EFFL_Pos: u32 = 0;
pub const FDCAN_TXEFS_EFFL_Msk: u32 = 0x7 << FDCAN_TXEFS_EFFL_Pos;
pub const FDCAN_TXEFS_EFFL: u32 = FDCAN_TXEFS_EFFL_Msk;
pub const FDCAN_TXEFS_EFGI_Pos: u32 = 8;
pub const FDCAN_TXEFS_EFGI_Msk: u32 = 0x3 << FDCAN_TXEFS_EFGI_Pos;
pub const FDCAN_TXEFS_EFGI: u32 = FDCAN_TXEFS_EFGI_Msk;
pub const FDCAN_TXEFS_EFPI_Pos: u32 = 16;
pub const FDCAN_TXEFS_EFPI_Msk: u32 = 0x3 << FDCAN_TXEFS_EFPI_Pos;
pub const FDCAN_TXEFS_EFPI: u32 = FDCAN_TXEFS_EFPI_Msk;
pub const FDCAN_TXEFS_EFF_Pos: u32 = 24;
pub const FDCAN_TXEFS_EFF_Msk: u32 = 0x1 << FDCAN_TXEFS_EFF_Pos;
pub const FDCAN_TXEFS_EFF: u32 = FDCAN_TXEFS_EFF_Msk;
pub const FDCAN_TXEFS_TEFL_Pos: u32 = 25;
pub const FDCAN_TXEFS_TEFL_Msk: u32 = 0x1 << FDCAN_TXEFS_TEFL_Pos;
pub const FDCAN_TXEFS_TEFL: u32 = FDCAN_TXEFS_TEFL_Msk;
pub const FDCAN_TXEFA_EFAI_Pos: u32 = 0;
pub const FDCAN_TXEFA_EFAI_Msk: u32 = 0x3 << FDCAN_TXEFA_EFAI_Pos;
pub const FDCAN_TXEFA_EFAI: u32 = FDCAN_TXEFA_EFAI_Msk;
pub const FDCAN_CKDIV_PDIV_Pos: u32 = 0;
pub const FDCAN_CKDIV_PDIV_Msk: u32 = 0xF << FDCAN_CKDIV_PDIV_Pos;
pub const FDCAN_CKDIV_PDIV: u32 = FDCAN_CKDIV_PDIV_Msk;
pub const FLASH_LATENCY_DEFAULT: u32 = FLASH_ACR_LATENCY_1 | FLASH_ACR_LATENCY_0;
pub const FLASH_ACR_LATENCY_Pos: u32 = 0;
pub const FLASH_ACR_LATENCY_Msk: u32 = 0xF << FLASH_ACR_LATENCY_Pos;
pub const FLASH_ACR_LATENCY: u32 = FLASH_ACR_LATENCY_Msk;
pub const FLASH_ACR_LATENCY_0: u32 = 0x1 << FLASH_ACR_LATENCY_Pos;
pub const FLASH_ACR_LATENCY_1: u32 = 0x2 << FLASH_ACR_LATENCY_Pos;
pub const FLASH_ACR_LATENCY_2: u32 = 0x4 << FLASH_ACR_LATENCY_Pos;
pub const FLASH_ACR_LATENCY_3: u32 = 0x8 << FLASH_ACR_LATENCY_Pos;
pub const FLASH_ACR_WRHIGHFREQ_Pos: u32 = 4;
pub const FLASH_ACR_WRHIGHFREQ_Msk: u32 = 0x3 << FLASH_ACR_WRHIGHFREQ_Pos;
pub const FLASH_ACR_WRHIGHFREQ: u32 = FLASH_ACR_WRHIGHFREQ_Msk;
pub const FLASH_ACR_WRHIGHFREQ_0: u32 = 0x1 << FLASH_ACR_WRHIGHFREQ_Pos;
pub const FLASH_ACR_WRHIGHFREQ_1: u32 = 0x2 << FLASH_ACR_WRHIGHFREQ_Pos;
pub const FLASH_KEYR_CUKEY_Pos: u32 = 0;
pub const FLASH_KEYR_CUKEY_Msk: u32 = 0xFFFFFFFF << FLASH_KEYR_CUKEY_Pos;
pub const FLASH_KEYR_CUKEY: u32 = FLASH_KEYR_CUKEY_Msk;
pub const FLASH_CR_LOCK_Pos: u32 = 0;
pub const FLASH_CR_LOCK_Msk: u32 = 0x1 << FLASH_CR_LOCK_Pos;
pub const FLASH_CR_LOCK: u32 = FLASH_CR_LOCK_Msk;
pub const FLASH_CR_PG_Pos: u32 = 1;
pub const FLASH_CR_PG_Msk: u32 = 0x1 << FLASH_CR_PG_Pos;
pub const FLASH_CR_PG: u32 = FLASH_CR_PG_Msk;
pub const FLASH_CR_SER_Pos: u32 = 2;
pub const FLASH_CR_SER_Msk: u32 = 0x1 << FLASH_CR_SER_Pos;
pub const FLASH_CR_SER: u32 = FLASH_CR_SER_Msk;
pub const FLASH_CR_BER_Pos: u32 = 3;
pub const FLASH_CR_BER_Msk: u32 = 0x1 << FLASH_CR_BER_Pos;
pub const FLASH_CR_BER: u32 = FLASH_CR_BER_Msk;
pub const FLASH_CR_FW_Pos: u32 = 4;
pub const FLASH_CR_FW_Msk: u32 = 0x1 << FLASH_CR_FW_Pos;
pub const FLASH_CR_FW: u32 = FLASH_CR_FW_Msk;
pub const FLASH_CR_START_Pos: u32 = 5;
pub const FLASH_CR_START_Msk: u32 = 0x1 << FLASH_CR_START_Pos;
pub const FLASH_CR_START: u32 = FLASH_CR_START_Msk;
pub const FLASH_CR_SSN_Pos: u32 = 6;
pub const FLASH_CR_SSN_Msk: u32 = 0x7 << FLASH_CR_SSN_Pos;
pub const FLASH_CR_SSN: u32 = FLASH_CR_SSN_Msk;
pub const FLASH_CR_SSN_0: u32 = 0x1 << FLASH_CR_SSN_Pos;
pub const FLASH_CR_SSN_1: u32 = 0x2 << FLASH_CR_SSN_Pos;
pub const FLASH_CR_SSN_2: u32 = 0x4 << FLASH_CR_SSN_Pos;
pub const FLASH_CR_PG_OTP_Pos: u32 = 16;
pub const FLASH_CR_PG_OTP_Msk: u32 = 0x1 << FLASH_CR_PG_OTP_Pos;
pub const FLASH_CR_PG_OTP: u32 = FLASH_CR_PG_OTP_Msk;
pub const FLASH_CR_CRC_EN_Pos: u32 = 17;
pub const FLASH_CR_CRC_EN_Msk: u32 = 0x1 << FLASH_CR_CRC_EN_Pos;
pub const FLASH_CR_CRC_EN: u32 = FLASH_CR_CRC_EN_Msk;
pub const FLASH_CR_ALL_BANKS_Pos: u32 = 24;
pub const FLASH_CR_ALL_BANKS_Msk: u32 = 0x1 << FLASH_CR_ALL_BANKS_Pos;
pub const FLASH_CR_ALL_BANKS: u32 = FLASH_CR_ALL_BANKS_Msk;
pub const FLASH_SR_BUSY_Pos: u32 = 0;
pub const FLASH_SR_BUSY_Msk: u32 = 0x1 << FLASH_SR_BUSY_Pos;
pub const FLASH_SR_BUSY: u32 = FLASH_SR_BUSY_Msk;
pub const FLASH_SR_WBNE_Pos: u32 = 1;
pub const FLASH_SR_WBNE_Msk: u32 = 0x1 << FLASH_SR_WBNE_Pos;
pub const FLASH_SR_WBNE: u32 = FLASH_SR_WBNE_Msk;
pub const FLASH_SR_QW_Pos: u32 = 2;
pub const FLASH_SR_QW_Msk: u32 = 0x1 << FLASH_SR_QW_Pos;
pub const FLASH_SR_QW: u32 = FLASH_SR_QW_Msk;
pub const FLASH_SR_CRC_BUSY_Pos: u32 = 3;
pub const FLASH_SR_CRC_BUSY_Msk: u32 = 0x1 << FLASH_SR_CRC_BUSY_Pos;
pub const FLASH_SR_CRC_BUSY: u32 = FLASH_SR_CRC_BUSY_Msk;
pub const FLASH_SR_IS_PROGRAM_Pos: u32 = 4;
pub const FLASH_SR_IS_PROGRAM_Msk: u32 = 0x1 << FLASH_SR_IS_PROGRAM_Pos;
pub const FLASH_SR_IS_PROGRAM: u32 = FLASH_SR_IS_PROGRAM_Msk;
pub const FLASH_SR_IS_ERASE_Pos: u32 = 5;
pub const FLASH_SR_IS_ERASE_Msk: u32 = 0x1 << FLASH_SR_IS_ERASE_Pos;
pub const FLASH_SR_IS_ERASE: u32 = FLASH_SR_IS_ERASE_Msk;
pub const FLASH_SR_IS_OPTCHANGE_Pos: u32 = 6;
pub const FLASH_SR_IS_OPTCHANGE_Msk: u32 = 0x1 << FLASH_SR_IS_OPTCHANGE_Pos;
pub const FLASH_SR_IS_OPTCHANGE: u32 = FLASH_SR_IS_OPTCHANGE_Msk;
pub const FLASH_IER_EOPIE_Pos: u32 = 16;
pub const FLASH_IER_EOPIE_Msk: u32 = 0x1 << FLASH_IER_EOPIE_Pos;
pub const FLASH_IER_EOPIE: u32 = FLASH_IER_EOPIE_Msk;
pub const FLASH_IER_WRPERRIE_Pos: u32 = 17;
pub const FLASH_IER_WRPERRIE_Msk: u32 = 0x1 << FLASH_IER_WRPERRIE_Pos;
pub const FLASH_IER_WRPERRIE: u32 = FLASH_IER_WRPERRIE_Msk;
pub const FLASH_IER_PGSERRIE_Pos: u32 = 18;
pub const FLASH_IER_PGSERRIE_Msk: u32 = 0x1 << FLASH_IER_PGSERRIE_Pos;
pub const FLASH_IER_PGSERRIE: u32 = FLASH_IER_PGSERRIE_Msk;
pub const FLASH_IER_STRBERRIE_Pos: u32 = 19;
pub const FLASH_IER_STRBERRIE_Msk: u32 = 0x1 << FLASH_IER_STRBERRIE_Pos;
pub const FLASH_IER_STRBERRIE: u32 = FLASH_IER_STRBERRIE_Msk;
pub const FLASH_IER_OBLERRIE_Pos: u32 = 20;
pub const FLASH_IER_OBLERRIE_Msk: u32 = 0x1 << FLASH_IER_OBLERRIE_Pos;
pub const FLASH_IER_OBLERRIE: u32 = FLASH_IER_OBLERRIE_Msk;
pub const FLASH_IER_INCERRIE_Pos: u32 = 21;
pub const FLASH_IER_INCERRIE_Msk: u32 = 0x1 << FLASH_IER_INCERRIE_Pos;
pub const FLASH_IER_INCERRIE: u32 = FLASH_IER_INCERRIE_Msk;
pub const FLASH_IER_RDSERRIE_Pos: u32 = 24;
pub const FLASH_IER_RDSERRIE_Msk: u32 = 0x1 << FLASH_IER_RDSERRIE_Pos;
pub const FLASH_IER_RDSERRIE: u32 = FLASH_IER_RDSERRIE_Msk;
pub const FLASH_IER_SNECCERRIE_Pos: u32 = 25;
pub const FLASH_IER_SNECCERRIE_Msk: u32 = 0x1 << FLASH_IER_SNECCERRIE_Pos;
pub const FLASH_IER_SNECCERRIE: u32 = FLASH_IER_SNECCERRIE_Msk;
pub const FLASH_IER_DBECCERRIE_Pos: u32 = 26;
pub const FLASH_IER_DBECCERRIE_Msk: u32 = 0x1 << FLASH_IER_DBECCERRIE_Pos;
pub const FLASH_IER_DBECCERRIE: u32 = FLASH_IER_DBECCERRIE_Msk;
pub const FLASH_IER_CRCENDIE_Pos: u32 = 27;
pub const FLASH_IER_CRCENDIE_Msk: u32 = 0x1 << FLASH_IER_CRCENDIE_Pos;
pub const FLASH_IER_CRCENDIE: u32 = FLASH_IER_CRCENDIE_Msk;
pub const FLASH_IER_CRCRDERRIE_Pos: u32 = 28;
pub const FLASH_IER_CRCRDERRIE_Msk: u32 = 0x1 << FLASH_IER_CRCRDERRIE_Pos;
pub const FLASH_IER_CRCRDERRIE: u32 = FLASH_IER_CRCRDERRIE_Msk;
pub const FLASH_ISR_EOPF_Pos: u32 = 16;
pub const FLASH_ISR_EOPF_Msk: u32 = 0x1 << FLASH_ISR_EOPF_Pos;
pub const FLASH_ISR_EOPF: u32 = FLASH_ISR_EOPF_Msk;
pub const FLASH_ISR_WRPERRF_Pos: u32 = 17;
pub const FLASH_ISR_WRPERRF_Msk: u32 = 0x1 << FLASH_ISR_WRPERRF_Pos;
pub const FLASH_ISR_WRPERRF: u32 = FLASH_ISR_WRPERRF_Msk;
pub const FLASH_ISR_PGSERRF_Pos: u32 = 18;
pub const FLASH_ISR_PGSERRF_Msk: u32 = 0x1 << FLASH_ISR_PGSERRF_Pos;
pub const FLASH_ISR_PGSERRF: u32 = FLASH_ISR_PGSERRF_Msk;
pub const FLASH_ISR_STRBERRF_Pos: u32 = 19;
pub const FLASH_ISR_STRBERRF_Msk: u32 = 0x1 << FLASH_ISR_STRBERRF_Pos;
pub const FLASH_ISR_STRBERRF: u32 = FLASH_ISR_STRBERRF_Msk;
pub const FLASH_ISR_OBLERRF_Pos: u32 = 20;
pub const FLASH_ISR_OBLERRF_Msk: u32 = 0x1 << FLASH_ISR_OBLERRF_Pos;
pub const FLASH_ISR_OBLERRF: u32 = FLASH_ISR_OBLERRF_Msk;
pub const FLASH_ISR_INCERRF_Pos: u32 = 21;
pub const FLASH_ISR_INCERRF_Msk: u32 = 0x1 << FLASH_ISR_INCERRF_Pos;
pub const FLASH_ISR_INCERRF: u32 = FLASH_ISR_INCERRF_Msk;
pub const FLASH_ISR_RDSERRF_Pos: u32 = 24;
pub const FLASH_ISR_RDSERRF_Msk: u32 = 0x1 << FLASH_ISR_RDSERRF_Pos;
pub const FLASH_ISR_RDSERRF: u32 = FLASH_ISR_RDSERRF_Msk;
pub const FLASH_ISR_SNECCERRF_Pos: u32 = 25;
pub const FLASH_ISR_SNECCERRF_Msk: u32 = 0x1 << FLASH_ISR_SNECCERRF_Pos;
pub const FLASH_ISR_SNECCERRF: u32 = FLASH_ISR_SNECCERRF_Msk;
pub const FLASH_ISR_DBECCERRF_Pos: u32 = 26;
pub const FLASH_ISR_DBECCERRF_Msk: u32 = 0x1 << FLASH_ISR_DBECCERRF_Pos;
pub const FLASH_ISR_DBECCERRF: u32 = FLASH_ISR_DBECCERRF_Msk;
pub const FLASH_ISR_CRCENDF_Pos: u32 = 27;
pub const FLASH_ISR_CRCENDF_Msk: u32 = 0x1 << FLASH_ISR_CRCENDF_Pos;
pub const FLASH_ISR_CRCENDF: u32 = FLASH_ISR_CRCENDF_Msk;
pub const FLASH_ISR_CRCRDERRF_Pos: u32 = 28;
pub const FLASH_ISR_CRCRDERRF_Msk: u32 = 0x1 << FLASH_ISR_CRCRDERRF_Pos;
pub const FLASH_ISR_CRCRDERRF: u32 = FLASH_ISR_CRCRDERRF_Msk;
pub const FLASH_ICR_EOPF_Pos: u32 = 16;
pub const FLASH_ICR_EOPF_Msk: u32 = 0x1 << FLASH_ICR_EOPF_Pos;
pub const FLASH_ICR_EOPF: u32 = FLASH_ICR_EOPF_Msk;
pub const FLASH_ICR_WRPERRF_Pos: u32 = 17;
pub const FLASH_ICR_WRPERRF_Msk: u32 = 0x1 << FLASH_ICR_WRPERRF_Pos;
pub const FLASH_ICR_WRPERRF: u32 = FLASH_ICR_WRPERRF_Msk;
pub const FLASH_ICR_PGSERRF_Pos: u32 = 18;
pub const FLASH_ICR_PGSERRF_Msk: u32 = 0x1 << FLASH_ICR_PGSERRF_Pos;
pub const FLASH_ICR_PGSERRF: u32 = FLASH_ICR_PGSERRF_Msk;
pub const FLASH_ICR_STRBERRF_Pos: u32 = 19;
pub const FLASH_ICR_STRBERRF_Msk: u32 = 0x1 << FLASH_ICR_STRBERRF_Pos;
pub const FLASH_ICR_STRBERRF: u32 = FLASH_ICR_STRBERRF_Msk;
pub const FLASH_ICR_OBLERRF_Pos: u32 = 20;
pub const FLASH_ICR_OBLERRF_Msk: u32 = 0x1 << FLASH_ICR_OBLERRF_Pos;
pub const FLASH_ICR_OBLERRF: u32 = FLASH_ICR_OBLERRF_Msk;
pub const FLASH_ICR_INCERRF_Pos: u32 = 21;
pub const FLASH_ICR_INCERRF_Msk: u32 = 0x1 << FLASH_ICR_INCERRF_Pos;
pub const FLASH_ICR_INCERRF: u32 = FLASH_ICR_INCERRF_Msk;
pub const FLASH_ICR_RDSERRF_Pos: u32 = 24;
pub const FLASH_ICR_RDSERRF_Msk: u32 = 0x1 << FLASH_ICR_RDSERRF_Pos;
pub const FLASH_ICR_RDSERRF: u32 = FLASH_ICR_RDSERRF_Msk;
pub const FLASH_ICR_SNECCERRF_Pos: u32 = 25;
pub const FLASH_ICR_SNECCERRF_Msk: u32 = 0x1 << FLASH_ICR_SNECCERRF_Pos;
pub const FLASH_ICR_SNECCERRF: u32 = FLASH_ICR_SNECCERRF_Msk;
pub const FLASH_ICR_DBECCERRF_Pos: u32 = 26;
pub const FLASH_ICR_DBECCERRF_Msk: u32 = 0x1 << FLASH_ICR_DBECCERRF_Pos;
pub const FLASH_ICR_DBECCERRF: u32 = FLASH_ICR_DBECCERRF_Msk;
pub const FLASH_ICR_CRCENDF_Pos: u32 = 27;
pub const FLASH_ICR_CRCENDF_Msk: u32 = 0x1 << FLASH_ICR_CRCENDF_Pos;
pub const FLASH_ICR_CRCENDF: u32 = FLASH_ICR_CRCENDF_Msk;
pub const FLASH_ICR_CRCRDERRF_Pos: u32 = 28;
pub const FLASH_ICR_CRCRDERRF_Msk: u32 = 0x1 << FLASH_ICR_CRCRDERRF_Pos;
pub const FLASH_ICR_CRCRDERRF: u32 = FLASH_ICR_CRCRDERRF_Msk;
pub const FLASH_CRCCR_CRC_SECT_Pos: u32 = 0;
pub const FLASH_CRCCR_CRC_SECT_Msk: u32 = 0x7 << FLASH_CRCCR_CRC_SECT_Pos;
pub const FLASH_CRCCR_CRC_SECT: u32 = FLASH_CRCCR_CRC_SECT_Msk;
pub const FLASH_CRCCR_CRC_SECT_0: u32 = 0x1 << FLASH_CRCCR_CRC_SECT_Pos;
pub const FLASH_CRCCR_CRC_SECT_1: u32 = 0x2 << FLASH_CRCCR_CRC_SECT_Pos;
pub const FLASH_CRCCR_CRC_SECT_2: u32 = 0x4 << FLASH_CRCCR_CRC_SECT_Pos;
pub const FLASH_CRCCR_CRC_BY_SECT_Pos: u32 = 9;
pub const FLASH_CRCCR_CRC_BY_SECT_Msk: u32 = 0x1 << FLASH_CRCCR_CRC_BY_SECT_Pos;
pub const FLASH_CRCCR_CRC_BY_SECT: u32 = FLASH_CRCCR_CRC_BY_SECT_Msk;
pub const FLASH_CRCCR_ADD_SECT_Pos: u32 = 10;
pub const FLASH_CRCCR_ADD_SECT_Msk: u32 = 0x1 << FLASH_CRCCR_ADD_SECT_Pos;
pub const FLASH_CRCCR_ADD_SECT: u32 = FLASH_CRCCR_ADD_SECT_Msk;
pub const FLASH_CRCCR_CLEAN_SECT_Pos: u32 = 11;
pub const FLASH_CRCCR_CLEAN_SECT_Msk: u32 = 0x1 << FLASH_CRCCR_CLEAN_SECT_Pos;
pub const FLASH_CRCCR_CLEAN_SECT: u32 = FLASH_CRCCR_CLEAN_SECT_Msk;
pub const FLASH_CRCCR_START_CRC_Pos: u32 = 16;
pub const FLASH_CRCCR_START_CRC_Msk: u32 = 0x1 << FLASH_CRCCR_START_CRC_Pos;
pub const FLASH_CRCCR_START_CRC: u32 = FLASH_CRCCR_START_CRC_Msk;
pub const FLASH_CRCCR_CLEAN_CRC_Pos: u32 = 17;
pub const FLASH_CRCCR_CLEAN_CRC_Msk: u32 = 0x1 << FLASH_CRCCR_CLEAN_CRC_Pos;
pub const FLASH_CRCCR_CLEAN_CRC: u32 = FLASH_CRCCR_CLEAN_CRC_Msk;
pub const FLASH_CRCCR_CRC_BURST_Pos: u32 = 20;
pub const FLASH_CRCCR_CRC_BURST_Msk: u32 = 0x3 << FLASH_CRCCR_CRC_BURST_Pos;
pub const FLASH_CRCCR_CRC_BURST: u32 = FLASH_CRCCR_CRC_BURST_Msk;
pub const FLASH_CRCCR_CRC_BURST_0: u32 = 0x1 << FLASH_CRCCR_CRC_BURST_Pos;
pub const FLASH_CRCCR_CRC_BURST_1: u32 = 0x2 << FLASH_CRCCR_CRC_BURST_Pos;
pub const FLASH_CRCCR_ALL_SECT_Pos: u32 = 24;
pub const FLASH_CRCCR_ALL_SECT_Msk: u32 = 0x1 << FLASH_CRCCR_ALL_SECT_Pos;
pub const FLASH_CRCCR_ALL_SECT: u32 = FLASH_CRCCR_ALL_SECT_Msk;
pub const FLASH_CRCSADDR_CRC_START_ADDRESS_Pos: u32 = 6;
pub const FLASH_CRCSADDR_CRC_START_ADDRESS_Msk: u32 = 0x7FF << FLASH_CRCSADDR_CRC_START_ADDRESS_Pos;
pub const FLASH_CRCSADDR_CRC_START_ADDRESS: u32 = FLASH_CRCSADDR_CRC_START_ADDRESS_Msk;
pub const FLASH_CRCEADDR_CRC_END_ADDRESS_Pos: u32 = 6;
pub const FLASH_CRCEADDR_CRC_END_ADDRESS_Msk: u32 = 0x7FF << FLASH_CRCEADDR_CRC_END_ADDRESS_Pos;
pub const FLASH_CRCEADDR_CRC_END_ADDRESS: u32 = FLASH_CRCEADDR_CRC_END_ADDRESS_Msk;
pub const FLASH_CRCDATAR_CRC_DATA_Pos: u32 = 0;
pub const FLASH_CRCDATAR_CRC_DATA_Msk: u32 = 0xFFFFFFFF << FLASH_CRCDATAR_CRC_DATA_Pos;
pub const FLASH_CRCDATAR_CRC_DATA: u32 = FLASH_CRCDATAR_CRC_DATA_Msk;
pub const FLASH_ECCSFADDR_SEC_FADD_Pos: u32 = 0;
pub const FLASH_ECCSFADDR_SEC_FADD_Msk: u32 = 0xFFFFFFFF << FLASH_ECCSFADDR_SEC_FADD_Pos;
pub const FLASH_ECCSFADDR_SEC_FADD: u32 = FLASH_ECCSFADDR_SEC_FADD_Msk;
pub const FLASH_ECCDFADDR_DED_FADD_Pos: u32 = 0;
pub const FLASH_ECCDFADDR_DED_FADD_Msk: u32 = 0xFFFFFFFF << FLASH_ECCDFADDR_DED_FADD_Pos;
pub const FLASH_ECCDFADDR_DED_FADD: u32 = FLASH_ECCDFADDR_DED_FADD_Msk;
pub const FLASH_OPTKEYR_OCUKEY_Pos: u32 = 0;
pub const FLASH_OPTKEYR_OCUKEY_Msk: u32 = 0xFFFFFFFF << FLASH_OPTKEYR_OCUKEY_Pos;
pub const FLASH_OPTKEYR_OCUKEY: u32 = FLASH_OPTKEYR_OCUKEY_Msk;
pub const FLASH_OPTCR_OPTLOCK_Pos: u32 = 0;
pub const FLASH_OPTCR_OPTLOCK_Msk: u32 = 0x1 << FLASH_OPTCR_OPTLOCK_Pos;
pub const FLASH_OPTCR_OPTLOCK: u32 = FLASH_OPTCR_OPTLOCK_Msk;
pub const FLASH_OPTCR_PG_OPT_Pos: u32 = 1;
pub const FLASH_OPTCR_PG_OPT_Msk: u32 = 0x1 << FLASH_OPTCR_PG_OPT_Pos;
pub const FLASH_OPTCR_PG_OPT: u32 = FLASH_OPTCR_PG_OPT_Msk;
pub const FLASH_OPTCR_KVEIE_Pos: u32 = 27;
pub const FLASH_OPTCR_KVEIE_Msk: u32 = 0x1 << FLASH_OPTCR_KVEIE_Pos;
pub const FLASH_OPTCR_KVEIE: u32 = FLASH_OPTCR_KVEIE_Msk;
pub const FLASH_OPTCR_KTEIE_Pos: u32 = 28;
pub const FLASH_OPTCR_KTEIE_Msk: u32 = 0x1 << FLASH_OPTCR_KTEIE_Pos;
pub const FLASH_OPTCR_KTEIE: u32 = FLASH_OPTCR_KTEIE_Msk;
pub const FLASH_OPTCR_OPTERRIE_Pos: u32 = 30;
pub const FLASH_OPTCR_OPTERRIE_Msk: u32 = 0x1 << FLASH_OPTCR_OPTERRIE_Pos;
pub const FLASH_OPTCR_OPTERRIE: u32 = FLASH_OPTCR_OPTERRIE_Msk;
pub const FLASH_OPTISR_KVEF_Pos: u32 = 27;
pub const FLASH_OPTISR_KVEF_Msk: u32 = 0x1 << FLASH_OPTISR_KVEF_Pos;
pub const FLASH_OPTISR_KVEF: u32 = FLASH_OPTISR_KVEF_Msk;
pub const FLASH_OPTISR_KTEF_Pos: u32 = 28;
pub const FLASH_OPTISR_KTEF_Msk: u32 = 0x1 << FLASH_OPTISR_KTEF_Pos;
pub const FLASH_OPTISR_KTEF: u32 = FLASH_OPTISR_KTEF_Msk;
pub const FLASH_OPTISR_OPTERRF_Pos: u32 = 30;
pub const FLASH_OPTISR_OPTERRF_Msk: u32 = 0x1 << FLASH_OPTISR_OPTERRF_Pos;
pub const FLASH_OPTISR_OPTERRF: u32 = FLASH_OPTISR_OPTERRF_Msk;
pub const FLASH_OPTICR_KVEF_Pos: u32 = 27;
pub const FLASH_OPTICR_KVEF_Msk: u32 = 0x1 << FLASH_OPTICR_KVEF_Pos;
pub const FLASH_OPTICR_KVEF: u32 = FLASH_OPTICR_KVEF_Msk;
pub const FLASH_OPTICR_KTEF_Pos: u32 = 28;
pub const FLASH_OPTICR_KTEF_Msk: u32 = 0x1 << FLASH_OPTICR_KTEF_Pos;
pub const FLASH_OPTICR_KTEF: u32 = FLASH_OPTICR_KTEF_Msk;
pub const FLASH_OPTICR_OPTERRF_Pos: u32 = 30;
pub const FLASH_OPTICR_OPTERRF_Msk: u32 = 0x1 << FLASH_OPTICR_OPTERRF_Pos;
pub const FLASH_OPTICR_OPTERRF: u32 = FLASH_OPTICR_OPTERRF_Msk;
pub const FLASH_OBKCR_OBKINDEX_Pos: u32 = 0;
pub const FLASH_OBKCR_OBKINDEX_Msk: u32 = 0x1F << FLASH_OBKCR_OBKINDEX_Pos;
pub const FLASH_OBKCR_OBKINDEX: u32 = FLASH_OBKCR_OBKINDEX_Msk;
pub const FLASH_OBKCR_OBKINDEX_0: u32 = 0x1 << FLASH_OBKCR_OBKINDEX_Pos;
pub const FLASH_OBKCR_OBKINDEX_1: u32 = 0x2 << FLASH_OBKCR_OBKINDEX_Pos;
pub const FLASH_OBKCR_OBKINDEX_2: u32 = 0x4 << FLASH_OBKCR_OBKINDEX_Pos;
pub const FLASH_OBKCR_OBKINDEX_3: u32 = 0x8 << FLASH_OBKCR_OBKINDEX_Pos;
pub const FLASH_OBKCR_OBKINDEX_4: u32 = 0x10 << FLASH_OBKCR_OBKINDEX_Pos;
pub const FLASH_OBKCR_NEXTKL_Pos: u32 = 8;
pub const FLASH_OBKCR_NEXTKL_Msk: u32 = 0x3 << FLASH_OBKCR_NEXTKL_Pos;
pub const FLASH_OBKCR_NEXTKL: u32 = FLASH_OBKCR_NEXTKL_Msk;
pub const FLASH_OBKCR_NEXTKL_0: u32 = 0x1 << FLASH_OBKCR_NEXTKL_Pos;
pub const FLASH_OBKCR_NEXTKL_1: u32 = 0x2 << FLASH_OBKCR_NEXTKL_Pos;
pub const FLASH_OBKCR_OBKSIZE_Pos: u32 = 10;
pub const FLASH_OBKCR_OBKSIZE_Msk: u32 = 0x3 << FLASH_OBKCR_OBKSIZE_Pos;
pub const FLASH_OBKCR_OBKSIZE: u32 = FLASH_OBKCR_OBKSIZE_Msk;
pub const FLASH_OBKCR_OBKSIZE_0: u32 = 0x1 << FLASH_OBKCR_OBKSIZE_Pos;
pub const FLASH_OBKCR_OBKSIZE_1: u32 = 0x2 << FLASH_OBKCR_OBKSIZE_Pos;
pub const FLASH_OBKCR_KEYPROG_Pos: u32 = 14;
pub const FLASH_OBKCR_KEYPROG_Msk: u32 = 0x1 << FLASH_OBKCR_KEYPROG_Pos;
pub const FLASH_OBKCR_KEYPROG: u32 = FLASH_OBKCR_KEYPROG_Msk;
pub const FLASH_OBKCR_KEYSTART_Pos: u32 = 15;
pub const FLASH_OBKCR_KEYSTART_Msk: u32 = 0x1 << FLASH_OBKCR_KEYSTART_Pos;
pub const FLASH_OBKCR_KEYSTART: u32 = FLASH_OBKCR_KEYSTART_Msk;
pub const FLASH_OBKDRx_OBKDATA_Pos: u32 = 0;
pub const FLASH_OBKDRx_OBKDATA_Msk: u32 = 0xFFFFFFFF << FLASH_OBKDRx_OBKDATA_Pos;
pub const FLASH_OBKDRx_OBKDATA: u32 = FLASH_OBKDRx_OBKDATA_Msk;
pub const FLASH_NVSR_NVSTATE_Pos: u32 = 0;
pub const FLASH_NVSR_NVSTATE_Msk: u32 = 0xFF << FLASH_NVSR_NVSTATE_Pos;
pub const FLASH_NVSR_NVSTATE: u32 = FLASH_NVSR_NVSTATE_Msk;
pub const FLASH_NVSR_NVSTATE_0: u32 = 0x1 << FLASH_NVSR_NVSTATE_Pos;
pub const FLASH_NVSR_NVSTATE_1: u32 = 0x2 << FLASH_NVSR_NVSTATE_Pos;
pub const FLASH_NVSR_NVSTATE_2: u32 = 0x4 << FLASH_NVSR_NVSTATE_Pos;
pub const FLASH_NVSR_NVSTATE_3: u32 = 0x8 << FLASH_NVSR_NVSTATE_Pos;
pub const FLASH_NVSR_NVSTATE_4: u32 = 0x10 << FLASH_NVSR_NVSTATE_Pos;
pub const FLASH_NVSR_NVSTATE_5: u32 = 0x20 << FLASH_NVSR_NVSTATE_Pos;
pub const FLASH_NVSR_NVSTATE_6: u32 = 0x40 << FLASH_NVSR_NVSTATE_Pos;
pub const FLASH_NVSR_NVSTATE_7: u32 = 0x80 << FLASH_NVSR_NVSTATE_Pos;
pub const FLASH_NVSRP_NVSTATE_Pos: u32 = 0;
pub const FLASH_NVSRP_NVSTATE_Msk: u32 = 0xFF << FLASH_NVSRP_NVSTATE_Pos;
pub const FLASH_NVSRP_NVSTATE: u32 = FLASH_NVSRP_NVSTATE_Msk;
pub const FLASH_NVSRP_NVSTATE_0: u32 = 0x1 << FLASH_NVSRP_NVSTATE_Pos;
pub const FLASH_NVSRP_NVSTATE_1: u32 = 0x2 << FLASH_NVSRP_NVSTATE_Pos;
pub const FLASH_NVSRP_NVSTATE_2: u32 = 0x4 << FLASH_NVSRP_NVSTATE_Pos;
pub const FLASH_NVSRP_NVSTATE_3: u32 = 0x8 << FLASH_NVSRP_NVSTATE_Pos;
pub const FLASH_NVSRP_NVSTATE_4: u32 = 0x10 << FLASH_NVSRP_NVSTATE_Pos;
pub const FLASH_NVSRP_NVSTATE_5: u32 = 0x20 << FLASH_NVSRP_NVSTATE_Pos;
pub const FLASH_NVSRP_NVSTATE_6: u32 = 0x40 << FLASH_NVSRP_NVSTATE_Pos;
pub const FLASH_NVSRP_NVSTATE_7: u32 = 0x80 << FLASH_NVSRP_NVSTATE_Pos;
pub const FLASH_ROTSR_OEM_PROVD_Pos: u32 = 0;
pub const FLASH_ROTSR_OEM_PROVD_Msk: u32 = 0xFF << FLASH_ROTSR_OEM_PROVD_Pos;
pub const FLASH_ROTSR_OEM_PROVD: u32 = FLASH_ROTSR_OEM_PROVD_Msk;
pub const FLASH_ROTSR_OEM_PROVD_0: u32 = 0x1 << FLASH_ROTSR_OEM_PROVD_Pos;
pub const FLASH_ROTSR_OEM_PROVD_1: u32 = 0x2 << FLASH_ROTSR_OEM_PROVD_Pos;
pub const FLASH_ROTSR_OEM_PROVD_2: u32 = 0x4 << FLASH_ROTSR_OEM_PROVD_Pos;
pub const FLASH_ROTSR_OEM_PROVD_3: u32 = 0x8 << FLASH_ROTSR_OEM_PROVD_Pos;
pub const FLASH_ROTSR_OEM_PROVD_4: u32 = 0x10 << FLASH_ROTSR_OEM_PROVD_Pos;
pub const FLASH_ROTSR_OEM_PROVD_5: u32 = 0x20 << FLASH_ROTSR_OEM_PROVD_Pos;
pub const FLASH_ROTSR_OEM_PROVD_6: u32 = 0x40 << FLASH_ROTSR_OEM_PROVD_Pos;
pub const FLASH_ROTSR_OEM_PROVD_7: u32 = 0x80 << FLASH_ROTSR_OEM_PROVD_Pos;
pub const FLASH_ROTSR_DBG_AUTH_Pos: u32 = 8;
pub const FLASH_ROTSR_DBG_AUTH_Msk: u32 = 0xFF << FLASH_ROTSR_DBG_AUTH_Pos;
pub const FLASH_ROTSR_DBG_AUTH: u32 = FLASH_ROTSR_DBG_AUTH_Msk;
pub const FLASH_ROTSR_DBG_AUTH_0: u32 = 0x1 << FLASH_ROTSR_DBG_AUTH_Pos;
pub const FLASH_ROTSR_DBG_AUTH_1: u32 = 0x2 << FLASH_ROTSR_DBG_AUTH_Pos;
pub const FLASH_ROTSR_DBG_AUTH_2: u32 = 0x4 << FLASH_ROTSR_DBG_AUTH_Pos;
pub const FLASH_ROTSR_DBG_AUTH_3: u32 = 0x8 << FLASH_ROTSR_DBG_AUTH_Pos;
pub const FLASH_ROTSR_DBG_AUTH_4: u32 = 0x10 << FLASH_ROTSR_DBG_AUTH_Pos;
pub const FLASH_ROTSR_DBG_AUTH_5: u32 = 0x20 << FLASH_ROTSR_DBG_AUTH_Pos;
pub const FLASH_ROTSR_DBG_AUTH_6: u32 = 0x40 << FLASH_ROTSR_DBG_AUTH_Pos;
pub const FLASH_ROTSR_DBG_AUTH_7: u32 = 0x80 << FLASH_ROTSR_DBG_AUTH_Pos;
pub const FLASH_ROTSR_IROT_SELECT_Pos: u32 = 24;
pub const FLASH_ROTSR_IROT_SELECT_Msk: u32 = 0xFF << FLASH_ROTSR_IROT_SELECT_Pos;
pub const FLASH_ROTSR_IROT_SELECT: u32 = FLASH_ROTSR_IROT_SELECT_Msk;
pub const FLASH_ROTSR_IROT_SELECT_0: u32 = 0x1 << FLASH_ROTSR_IROT_SELECT_Pos;
pub const FLASH_ROTSR_IROT_SELECT_1: u32 = 0x2 << FLASH_ROTSR_IROT_SELECT_Pos;
pub const FLASH_ROTSR_IROT_SELECT_2: u32 = 0x4 << FLASH_ROTSR_IROT_SELECT_Pos;
pub const FLASH_ROTSR_IROT_SELECT_3: u32 = 0x8 << FLASH_ROTSR_IROT_SELECT_Pos;
pub const FLASH_ROTSR_IROT_SELECT_4: u32 = 0x10 << FLASH_ROTSR_IROT_SELECT_Pos;
pub const FLASH_ROTSR_IROT_SELECT_5: u32 = 0x20 << FLASH_ROTSR_IROT_SELECT_Pos;
pub const FLASH_ROTSR_IROT_SELECT_6: u32 = 0x40 << FLASH_ROTSR_IROT_SELECT_Pos;
pub const FLASH_ROTSR_IROT_SELECT_7: u32 = 0x80 << FLASH_ROTSR_IROT_SELECT_Pos;
pub const FLASH_ROTSRP_OEM_PROVD_Pos: u32 = 0;
pub const FLASH_ROTSRP_OEM_PROVD_Msk: u32 = 0xFF << FLASH_ROTSRP_OEM_PROVD_Pos;
pub const FLASH_ROTSRP_OEM_PROVD: u32 = FLASH_ROTSRP_OEM_PROVD_Msk;
pub const FLASH_ROTSRP_OEM_PROVD_0: u32 = 0x1 << FLASH_ROTSRP_OEM_PROVD_Pos;
pub const FLASH_ROTSRP_OEM_PROVD_1: u32 = 0x2 << FLASH_ROTSRP_OEM_PROVD_Pos;
pub const FLASH_ROTSRP_OEM_PROVD_2: u32 = 0x4 << FLASH_ROTSRP_OEM_PROVD_Pos;
pub const FLASH_ROTSRP_OEM_PROVD_3: u32 = 0x8 << FLASH_ROTSRP_OEM_PROVD_Pos;
pub const FLASH_ROTSRP_OEM_PROVD_4: u32 = 0x10 << FLASH_ROTSRP_OEM_PROVD_Pos;
pub const FLASH_ROTSRP_OEM_PROVD_5: u32 = 0x20 << FLASH_ROTSRP_OEM_PROVD_Pos;
pub const FLASH_ROTSRP_OEM_PROVD_6: u32 = 0x40 << FLASH_ROTSRP_OEM_PROVD_Pos;
pub const FLASH_ROTSRP_OEM_PROVD_7: u32 = 0x80 << FLASH_ROTSRP_OEM_PROVD_Pos;
pub const FLASH_ROTSRP_DBG_AUTH_Pos: u32 = 8;
pub const FLASH_ROTSRP_DBG_AUTH_Msk: u32 = 0xFF << FLASH_ROTSRP_DBG_AUTH_Pos;
pub const FLASH_ROTSRP_DBG_AUTH: u32 = FLASH_ROTSRP_DBG_AUTH_Msk;
pub const FLASH_ROTSRP_DBG_AUTH_0: u32 = 0x1 << FLASH_ROTSRP_DBG_AUTH_Pos;
pub const FLASH_ROTSRP_DBG_AUTH_1: u32 = 0x2 << FLASH_ROTSRP_DBG_AUTH_Pos;
pub const FLASH_ROTSRP_DBG_AUTH_2: u32 = 0x4 << FLASH_ROTSRP_DBG_AUTH_Pos;
pub const FLASH_ROTSRP_DBG_AUTH_3: u32 = 0x8 << FLASH_ROTSRP_DBG_AUTH_Pos;
pub const FLASH_ROTSRP_DBG_AUTH_4: u32 = 0x10 << FLASH_ROTSRP_DBG_AUTH_Pos;
pub const FLASH_ROTSRP_DBG_AUTH_5: u32 = 0x20 << FLASH_ROTSRP_DBG_AUTH_Pos;
pub const FLASH_ROTSRP_DBG_AUTH_6: u32 = 0x40 << FLASH_ROTSRP_DBG_AUTH_Pos;
pub const FLASH_ROTSRP_DBG_AUTH_7: u32 = 0x80 << FLASH_ROTSRP_DBG_AUTH_Pos;
pub const FLASH_ROTSRP_IROT_SELECT_Pos: u32 = 24;
pub const FLASH_ROTSRP_IROT_SELECT_Msk: u32 = 0xFF << FLASH_ROTSRP_IROT_SELECT_Pos;
pub const FLASH_ROTSRP_IROT_SELECT: u32 = FLASH_ROTSRP_IROT_SELECT_Msk;
pub const FLASH_ROTSRP_IROT_SELECT_0: u32 = 0x1 << FLASH_ROTSRP_IROT_SELECT_Pos;
pub const FLASH_ROTSRP_IROT_SELECT_1: u32 = 0x2 << FLASH_ROTSRP_IROT_SELECT_Pos;
pub const FLASH_ROTSRP_IROT_SELECT_2: u32 = 0x4 << FLASH_ROTSRP_IROT_SELECT_Pos;
pub const FLASH_ROTSRP_IROT_SELECT_3: u32 = 0x8 << FLASH_ROTSRP_IROT_SELECT_Pos;
pub const FLASH_ROTSRP_IROT_SELECT_4: u32 = 0x10 << FLASH_ROTSRP_IROT_SELECT_Pos;
pub const FLASH_ROTSRP_IROT_SELECT_5: u32 = 0x20 << FLASH_ROTSRP_IROT_SELECT_Pos;
pub const FLASH_ROTSRP_IROT_SELECT_6: u32 = 0x40 << FLASH_ROTSRP_IROT_SELECT_Pos;
pub const FLASH_ROTSRP_IROT_SELECT_7: u32 = 0x80 << FLASH_ROTSRP_IROT_SELECT_Pos;
pub const FLASH_OTPLSR_OTPL_Pos: u32 = 0;
pub const FLASH_OTPLSR_OTPL_Msk: u32 = 0xFFFF << FLASH_OTPLSR_OTPL_Pos;
pub const FLASH_OTPLSR_OTPL: u32 = FLASH_OTPLSR_OTPL_Msk;
pub const FLASH_OTPLSRP_OTPL_Pos: u32 = 0;
pub const FLASH_OTPLSRP_OTPL_Msk: u32 = 0xFFFF << FLASH_OTPLSRP_OTPL_Pos;
pub const FLASH_OTPLSRP_OTPL: u32 = FLASH_OTPLSRP_OTPL_Msk;
pub const FLASH_WRPSR_WRPS_Pos: u32 = 0;
pub const FLASH_WRPSR_WRPS_Msk: u32 = 0xFF << FLASH_WRPSR_WRPS_Pos;
pub const FLASH_WRPSR_WRPS: u32 = FLASH_WRPSR_WRPS_Msk;
pub const FLASH_WRPSRP_WRPS_Pos: u32 = 0;
pub const FLASH_WRPSRP_WRPS_Msk: u32 = 0xFF << FLASH_WRPSRP_WRPS_Pos;
pub const FLASH_WRPSRP_WRPS: u32 = FLASH_WRPSRP_WRPS_Msk;
pub const FLASH_HDPSR_HDP_AREA_START_Pos: u32 = 0;
pub const FLASH_HDPSR_HDP_AREA_START_Msk: u32 = 0xFF << FLASH_HDPSR_HDP_AREA_START_Pos;
pub const FLASH_HDPSR_HDP_AREA_START: u32 = FLASH_HDPSR_HDP_AREA_START_Msk;
pub const FLASH_HDPSR_HDP_AREA_END_Pos: u32 = 16;
pub const FLASH_HDPSR_HDP_AREA_END_Msk: u32 = 0xFF << FLASH_HDPSR_HDP_AREA_END_Pos;
pub const FLASH_HDPSR_HDP_AREA_END: u32 = FLASH_HDPSR_HDP_AREA_END_Msk;
pub const FLASH_HDPSRP_HDP_AREA_START_Pos: u32 = 0;
pub const FLASH_HDPSRP_HDP_AREA_START_Msk: u32 = 0xFF << FLASH_HDPSRP_HDP_AREA_START_Pos;
pub const FLASH_HDPSRP_HDP_AREA_START: u32 = FLASH_HDPSRP_HDP_AREA_START_Msk;
pub const FLASH_HDPSRP_HDP_AREA_END_Pos: u32 = 16;
pub const FLASH_HDPSRP_HDP_AREA_END_Msk: u32 = 0xFF << FLASH_HDPSRP_HDP_AREA_END_Pos;
pub const FLASH_HDPSRP_HDP_AREA_END: u32 = FLASH_HDPSRP_HDP_AREA_END_Msk;
pub const FLASH_EPOCHSR_EPOCH_Pos: u32 = 0;
pub const FLASH_EPOCHSR_EPOCH_Msk: u32 = 0xFFFFFF << FLASH_EPOCHSR_EPOCH_Pos;
pub const FLASH_EPOCHSR_EPOCH: u32 = FLASH_EPOCHSR_EPOCH_Msk;
pub const FLASH_EPOCHSRP_EPOCH_Pos: u32 = 0;
pub const FLASH_EPOCHSRP_EPOCH_Msk: u32 = 0xFFFFFF << FLASH_EPOCHSRP_EPOCH_Pos;
pub const FLASH_EPOCHSRP_EPOCH: u32 = FLASH_EPOCHSRP_EPOCH_Msk;
pub const FLASH_OBW1SR_BOR_LEVEL_Pos: u32 = 2;
pub const FLASH_OBW1SR_BOR_LEVEL_Msk: u32 = 0x3 << FLASH_OBW1SR_BOR_LEVEL_Pos;
pub const FLASH_OBW1SR_BOR_LEVEL: u32 = FLASH_OBW1SR_BOR_LEVEL_Msk;
pub const FLASH_OBW1SR_BOR_LEVEL_0: u32 = 0x1 << FLASH_OBW1SR_BOR_LEVEL_Pos;
pub const FLASH_OBW1SR_BOR_LEVEL_1: u32 = 0x2 << FLASH_OBW1SR_BOR_LEVEL_Pos;
pub const FLASH_OBW1SR_IWDG_HW_Pos: u32 = 4;
pub const FLASH_OBW1SR_IWDG_HW_Msk: u32 = 0x1 << FLASH_OBW1SR_IWDG_HW_Pos;
pub const FLASH_OBW1SR_IWDG_HW: u32 = FLASH_OBW1SR_IWDG_HW_Msk;
pub const FLASH_OBW1SR_NRST_STOP_Pos: u32 = 6;
pub const FLASH_OBW1SR_NRST_STOP_Msk: u32 = 0x1 << FLASH_OBW1SR_NRST_STOP_Pos;
pub const FLASH_OBW1SR_NRST_STOP: u32 = FLASH_OBW1SR_NRST_STOP_Msk;
pub const FLASH_OBW1SR_NRST_STBY_Pos: u32 = 7;
pub const FLASH_OBW1SR_NRST_STBY_Msk: u32 = 0x1 << FLASH_OBW1SR_NRST_STBY_Pos;
pub const FLASH_OBW1SR_NRST_STBY: u32 = FLASH_OBW1SR_NRST_STBY_Msk;
pub const FLASH_OBW1SR_XSPI1_HSLV_Pos: u32 = 8;
pub const FLASH_OBW1SR_XSPI1_HSLV_Msk: u32 = 0x1 << FLASH_OBW1SR_XSPI1_HSLV_Pos;
pub const FLASH_OBW1SR_XSPI1_HSLV: u32 = FLASH_OBW1SR_XSPI1_HSLV_Msk;
pub const FLASH_OBW1SR_XSPI2_HSLV_Pos: u32 = 9;
pub const FLASH_OBW1SR_XSPI2_HSLV_Msk: u32 = 0x1 << FLASH_OBW1SR_XSPI2_HSLV_Pos;
pub const FLASH_OBW1SR_XSPI2_HSLV: u32 = FLASH_OBW1SR_XSPI2_HSLV_Msk;
pub const FLASH_OBW1SR_IWDG_FZ_STOP_Pos: u32 = 17;
pub const FLASH_OBW1SR_IWDG_FZ_STOP_Msk: u32 = 0x1 << FLASH_OBW1SR_IWDG_FZ_STOP_Pos;
pub const FLASH_OBW1SR_IWDG_FZ_STOP: u32 = FLASH_OBW1SR_IWDG_FZ_STOP_Msk;
pub const FLASH_OBW1SR_IWDG_FZ_STBY_Pos: u32 = 18;
pub const FLASH_OBW1SR_IWDG_FZ_STBY_Msk: u32 = 0x1 << FLASH_OBW1SR_IWDG_FZ_STBY_Pos;
pub const FLASH_OBW1SR_IWDG_FZ_STBY: u32 = FLASH_OBW1SR_IWDG_FZ_STBY_Msk;
pub const FLASH_OBW1SR_PERSO_OK_Pos: u32 = 28;
pub const FLASH_OBW1SR_PERSO_OK_Msk: u32 = 0x1 << FLASH_OBW1SR_PERSO_OK_Pos;
pub const FLASH_OBW1SR_PERSO_OK: u32 = FLASH_OBW1SR_PERSO_OK_Msk;
pub const FLASH_OBW1SR_VDDIO_HSLV_Pos: u32 = 29;
pub const FLASH_OBW1SR_VDDIO_HSLV_Msk: u32 = 0x1 << FLASH_OBW1SR_VDDIO_HSLV_Pos;
pub const FLASH_OBW1SR_VDDIO_HSLV: u32 = FLASH_OBW1SR_VDDIO_HSLV_Msk;
pub const FLASH_OBW1SRP_BOR_LEVEL_Pos: u32 = 2;
pub const FLASH_OBW1SRP_BOR_LEVEL_Msk: u32 = 0x3 << FLASH_OBW1SRP_BOR_LEVEL_Pos;
pub const FLASH_OBW1SRP_BOR_LEVEL: u32 = FLASH_OBW1SRP_BOR_LEVEL_Msk;
pub const FLASH_OBW1SRP_BOR_LEVEL_0: u32 = 0x1 << FLASH_OBW1SRP_BOR_LEVEL_Pos;
pub const FLASH_OBW1SRP_BOR_LEVEL_1: u32 = 0x2 << FLASH_OBW1SRP_BOR_LEVEL_Pos;
pub const FLASH_OBW1SRP_IWDG_HW_Pos: u32 = 4;
pub const FLASH_OBW1SRP_IWDG_HW_Msk: u32 = 0x1 << FLASH_OBW1SRP_IWDG_HW_Pos;
pub const FLASH_OBW1SRP_IWDG_HW: u32 = FLASH_OBW1SRP_IWDG_HW_Msk;
pub const FLASH_OBW1SRP_NRST_STOP_Pos: u32 = 6;
pub const FLASH_OBW1SRP_NRST_STOP_Msk: u32 = 0x1 << FLASH_OBW1SRP_NRST_STOP_Pos;
pub const FLASH_OBW1SRP_NRST_STOP: u32 = FLASH_OBW1SRP_NRST_STOP_Msk;
pub const FLASH_OBW1SRP_NRST_STBY_Pos: u32 = 7;
pub const FLASH_OBW1SRP_NRST_STBY_Msk: u32 = 0x1 << FLASH_OBW1SRP_NRST_STBY_Pos;
pub const FLASH_OBW1SRP_NRST_STBY: u32 = FLASH_OBW1SRP_NRST_STBY_Msk;
pub const FLASH_OBW1SRP_XSPI1_HSLV_Pos: u32 = 8;
pub const FLASH_OBW1SRP_XSPI1_HSLV_Msk: u32 = 0x1 << FLASH_OBW1SRP_XSPI1_HSLV_Pos;
pub const FLASH_OBW1SRP_XSPI1_HSLV: u32 = FLASH_OBW1SRP_XSPI1_HSLV_Msk;
pub const FLASH_OBW1SRP_XSPI2_HSLV_Pos: u32 = 9;
pub const FLASH_OBW1SRP_XSPI2_HSLV_Msk: u32 = 0x1 << FLASH_OBW1SRP_XSPI2_HSLV_Pos;
pub const FLASH_OBW1SRP_XSPI2_HSLV: u32 = FLASH_OBW1SRP_XSPI2_HSLV_Msk;
pub const FLASH_OBW1SRP_IWDG_FZ_STOP_Pos: u32 = 17;
pub const FLASH_OBW1SRP_IWDG_FZ_STOP_Msk: u32 = 0x1 << FLASH_OBW1SRP_IWDG_FZ_STOP_Pos;
pub const FLASH_OBW1SRP_IWDG_FZ_STOP: u32 = FLASH_OBW1SRP_IWDG_FZ_STOP_Msk;
pub const FLASH_OBW1SRP_IWDG_FZ_STBY_Pos: u32 = 18;
pub const FLASH_OBW1SRP_IWDG_FZ_STBY_Msk: u32 = 0x1 << FLASH_OBW1SRP_IWDG_FZ_STBY_Pos;
pub const FLASH_OBW1SRP_IWDG_FZ_STBY: u32 = FLASH_OBW1SRP_IWDG_FZ_STBY_Msk;
pub const FLASH_OBW1SRP_VDDIO_HSLV_Pos: u32 = 29;
pub const FLASH_OBW1SRP_VDDIO_HSLV_Msk: u32 = 0x1 << FLASH_OBW1SRP_VDDIO_HSLV_Pos;
pub const FLASH_OBW1SRP_VDDIO_HSLV: u32 = FLASH_OBW1SRP_VDDIO_HSLV_Msk;
pub const FLASH_OBW2SR_ITCM_AXI_SHARE_Pos: u32 = 0;
pub const FLASH_OBW2SR_ITCM_AXI_SHARE_Msk: u32 = 0x7 << FLASH_OBW2SR_ITCM_AXI_SHARE_Pos;
pub const FLASH_OBW2SR_ITCM_AXI_SHARE: u32 = FLASH_OBW2SR_ITCM_AXI_SHARE_Msk;
pub const FLASH_OBW2SR_ITCM_AXI_SHARE_0: u32 = 0x1 << FLASH_OBW2SR_ITCM_AXI_SHARE_Pos;
pub const FLASH_OBW2SR_ITCM_AXI_SHARE_1: u32 = 0x2 << FLASH_OBW2SR_ITCM_AXI_SHARE_Pos;
pub const FLASH_OBW2SR_ITCM_AXI_SHARE_2: u32 = 0x4 << FLASH_OBW2SR_ITCM_AXI_SHARE_Pos;
pub const FLASH_OBW2SR_DTCM_AXI_SHARE_Pos: u32 = 4;
pub const FLASH_OBW2SR_DTCM_AXI_SHARE_Msk: u32 = 0x7 << FLASH_OBW2SR_DTCM_AXI_SHARE_Pos;
pub const FLASH_OBW2SR_DTCM_AXI_SHARE: u32 = FLASH_OBW2SR_DTCM_AXI_SHARE_Msk;
pub const FLASH_OBW2SR_DTCM_AXI_SHARE_0: u32 = 0x1 << FLASH_OBW2SR_DTCM_AXI_SHARE_Pos;
pub const FLASH_OBW2SR_DTCM_AXI_SHARE_1: u32 = 0x2 << FLASH_OBW2SR_DTCM_AXI_SHARE_Pos;
pub const FLASH_OBW2SR_DTCM_AXI_SHARE_2: u32 = 0x4 << FLASH_OBW2SR_DTCM_AXI_SHARE_Pos;
pub const FLASH_OBW2SR_ECC_ON_SRAM_Pos: u32 = 8;
pub const FLASH_OBW2SR_ECC_ON_SRAM_Msk: u32 = 0x1 << FLASH_OBW2SR_ECC_ON_SRAM_Pos;
pub const FLASH_OBW2SR_ECC_ON_SRAM: u32 = FLASH_OBW2SR_ECC_ON_SRAM_Msk;
pub const FLASH_OBW2SR_I2C_NI3C_Pos: u32 = 9;
pub const FLASH_OBW2SR_I2C_NI3C_Msk: u32 = 0x1 << FLASH_OBW2SR_I2C_NI3C_Pos;
pub const FLASH_OBW2SR_I2C_NI3C: u32 = FLASH_OBW2SR_I2C_NI3C_Msk;
pub const FLASH_OBW2SRP_ITCM_AXI_SHARE_Pos: u32 = 0;
pub const FLASH_OBW2SRP_ITCM_AXI_SHARE_Msk: u32 = 0x7 << FLASH_OBW2SRP_ITCM_AXI_SHARE_Pos;
pub const FLASH_OBW2SRP_ITCM_AXI_SHARE: u32 = FLASH_OBW2SRP_ITCM_AXI_SHARE_Msk;
pub const FLASH_OBW2SRP_ITCM_AXI_SHARE_0: u32 = 0x1 << FLASH_OBW2SRP_ITCM_AXI_SHARE_Pos;
pub const FLASH_OBW2SRP_ITCM_AXI_SHARE_1: u32 = 0x2 << FLASH_OBW2SRP_ITCM_AXI_SHARE_Pos;
pub const FLASH_OBW2SRP_ITCM_AXI_SHARE_2: u32 = 0x4 << FLASH_OBW2SRP_ITCM_AXI_SHARE_Pos;
pub const FLASH_OBW2SRP_DTCM_AXI_SHARE_Pos: u32 = 4;
pub const FLASH_OBW2SRP_DTCM_AXI_SHARE_Msk: u32 = 0x7 << FLASH_OBW2SRP_DTCM_AXI_SHARE_Pos;
pub const FLASH_OBW2SRP_DTCM_AXI_SHARE: u32 = FLASH_OBW2SRP_DTCM_AXI_SHARE_Msk;
pub const FLASH_OBW2SRP_DTCM_AXI_SHARE_0: u32 = 0x1 << FLASH_OBW2SRP_DTCM_AXI_SHARE_Pos;
pub const FLASH_OBW2SRP_DTCM_AXI_SHARE_1: u32 = 0x2 << FLASH_OBW2SRP_DTCM_AXI_SHARE_Pos;
pub const FLASH_OBW2SRP_DTCM_AXI_SHARE_2: u32 = 0x4 << FLASH_OBW2SRP_DTCM_AXI_SHARE_Pos;
pub const FLASH_OBW2SRP_ECC_ON_SRAM_Pos: u32 = 8;
pub const FLASH_OBW2SRP_ECC_ON_SRAM_Msk: u32 = 0x1 << FLASH_OBW2SRP_ECC_ON_SRAM_Pos;
pub const FLASH_OBW2SRP_ECC_ON_SRAM: u32 = FLASH_OBW2SRP_ECC_ON_SRAM_Msk;
pub const FLASH_OBW2SRP_I2C_NI3C_Pos: u32 = 9;
pub const FLASH_OBW2SRP_I2C_NI3C_Msk: u32 = 0x1 << FLASH_OBW2SRP_I2C_NI3C_Pos;
pub const FLASH_OBW2SRP_I2C_NI3C: u32 = FLASH_OBW2SRP_I2C_NI3C_Msk;
pub const FMC_BCR1_CCLKEN_Pos: u32 = 20;
pub const FMC_BCR1_CCLKEN_Msk: u32 = 0x1 << FMC_BCR1_CCLKEN_Pos;
pub const FMC_BCR1_CCLKEN: u32 = FMC_BCR1_CCLKEN_Msk;
pub const FMC_BCR1_WFDIS_Pos: u32 = 21;
pub const FMC_BCR1_WFDIS_Msk: u32 = 0x1 << FMC_BCR1_WFDIS_Pos;
pub const FMC_BCR1_WFDIS: u32 = FMC_BCR1_WFDIS_Msk;
pub const FMC_BCR1_BMAP_Pos: u32 = 24;
pub const FMC_BCR1_BMAP_Msk: u32 = 0x3 << FMC_BCR1_BMAP_Pos;
pub const FMC_BCR1_BMAP: u32 = FMC_BCR1_BMAP_Msk;
pub const FMC_BCR1_BMAP_0: u32 = 0x1 << FMC_BCR1_BMAP_Pos;
pub const FMC_BCR1_BMAP_1: u32 = 0x2 << FMC_BCR1_BMAP_Pos;
pub const FMC_BCR1_FMCEN_Pos: u32 = 31;
pub const FMC_BCR1_FMCEN_Msk: u32 = 0x1 << FMC_BCR1_FMCEN_Pos;
pub const FMC_BCR1_FMCEN: u32 = FMC_BCR1_FMCEN_Msk;
pub const FMC_BCRx_MBKEN_Pos: u32 = 0;
pub const FMC_BCRx_MBKEN_Msk: u32 = 0x1 << FMC_BCRx_MBKEN_Pos;
pub const FMC_BCRx_MBKEN: u32 = FMC_BCRx_MBKEN_Msk;
pub const FMC_BCRx_MUXEN_Pos: u32 = 1;
pub const FMC_BCRx_MUXEN_Msk: u32 = 0x1 << FMC_BCRx_MUXEN_Pos;
pub const FMC_BCRx_MUXEN: u32 = FMC_BCRx_MUXEN_Msk;
pub const FMC_BCRx_MTYP_Pos: u32 = 2;
pub const FMC_BCRx_MTYP_Msk: u32 = 0x3 << FMC_BCRx_MTYP_Pos;
pub const FMC_BCRx_MTYP: u32 = FMC_BCRx_MTYP_Msk;
pub const FMC_BCRx_MTYP_0: u32 = 0x1 << FMC_BCRx_MTYP_Pos;
pub const FMC_BCRx_MTYP_1: u32 = 0x2 << FMC_BCRx_MTYP_Pos;
pub const FMC_BCRx_MWID_Pos: u32 = 4;
pub const FMC_BCRx_MWID_Msk: u32 = 0x3 << FMC_BCRx_MWID_Pos;
pub const FMC_BCRx_MWID: u32 = FMC_BCRx_MWID_Msk;
pub const FMC_BCRx_MWID_0: u32 = 0x1 << FMC_BCRx_MWID_Pos;
pub const FMC_BCRx_MWID_1: u32 = 0x2 << FMC_BCRx_MWID_Pos;
pub const FMC_BCRx_FACCEN_Pos: u32 = 6;
pub const FMC_BCRx_FACCEN_Msk: u32 = 0x1 << FMC_BCRx_FACCEN_Pos;
pub const FMC_BCRx_FACCEN: u32 = FMC_BCRx_FACCEN_Msk;
pub const FMC_BCRx_BURSTEN_Pos: u32 = 8;
pub const FMC_BCRx_BURSTEN_Msk: u32 = 0x1 << FMC_BCRx_BURSTEN_Pos;
pub const FMC_BCRx_BURSTEN: u32 = FMC_BCRx_BURSTEN_Msk;
pub const FMC_BCRx_WAITPOL_Pos: u32 = 9;
pub const FMC_BCRx_WAITPOL_Msk: u32 = 0x1 << FMC_BCRx_WAITPOL_Pos;
pub const FMC_BCRx_WAITPOL: u32 = FMC_BCRx_WAITPOL_Msk;
pub const FMC_BCRx_WAITCFG_Pos: u32 = 11;
pub const FMC_BCRx_WAITCFG_Msk: u32 = 0x1 << FMC_BCRx_WAITCFG_Pos;
pub const FMC_BCRx_WAITCFG: u32 = FMC_BCRx_WAITCFG_Msk;
pub const FMC_BCRx_WREN_Pos: u32 = 12;
pub const FMC_BCRx_WREN_Msk: u32 = 0x1 << FMC_BCRx_WREN_Pos;
pub const FMC_BCRx_WREN: u32 = FMC_BCRx_WREN_Msk;
pub const FMC_BCRx_WAITEN_Pos: u32 = 13;
pub const FMC_BCRx_WAITEN_Msk: u32 = 0x1 << FMC_BCRx_WAITEN_Pos;
pub const FMC_BCRx_WAITEN: u32 = FMC_BCRx_WAITEN_Msk;
pub const FMC_BCRx_EXTMOD_Pos: u32 = 14;
pub const FMC_BCRx_EXTMOD_Msk: u32 = 0x1 << FMC_BCRx_EXTMOD_Pos;
pub const FMC_BCRx_EXTMOD: u32 = FMC_BCRx_EXTMOD_Msk;
pub const FMC_BCRx_ASYNCWAIT_Pos: u32 = 15;
pub const FMC_BCRx_ASYNCWAIT_Msk: u32 = 0x1 << FMC_BCRx_ASYNCWAIT_Pos;
pub const FMC_BCRx_ASYNCWAIT: u32 = FMC_BCRx_ASYNCWAIT_Msk;
pub const FMC_BCRx_CPSIZE_Pos: u32 = 16;
pub const FMC_BCRx_CPSIZE_Msk: u32 = 0x7 << FMC_BCRx_CPSIZE_Pos;
pub const FMC_BCRx_CPSIZE: u32 = FMC_BCRx_CPSIZE_Msk;
pub const FMC_BCRx_CPSIZE_0: u32 = 0x1 << FMC_BCRx_CPSIZE_Pos;
pub const FMC_BCRx_CPSIZE_1: u32 = 0x2 << FMC_BCRx_CPSIZE_Pos;
pub const FMC_BCRx_CPSIZE_2: u32 = 0x4 << FMC_BCRx_CPSIZE_Pos;
pub const FMC_BCRx_CBURSTRW_Pos: u32 = 19;
pub const FMC_BCRx_CBURSTRW_Msk: u32 = 0x1 << FMC_BCRx_CBURSTRW_Pos;
pub const FMC_BCRx_CBURSTRW: u32 = FMC_BCRx_CBURSTRW_Msk;
pub const FMC_BTRx_ADDSET_Pos: u32 = 0;
pub const FMC_BTRx_ADDSET_Msk: u32 = 0xF << FMC_BTRx_ADDSET_Pos;
pub const FMC_BTRx_ADDSET: u32 = FMC_BTRx_ADDSET_Msk;
pub const FMC_BTRx_ADDSET_0: u32 = 0x1 << FMC_BTRx_ADDSET_Pos;
pub const FMC_BTRx_ADDSET_1: u32 = 0x2 << FMC_BTRx_ADDSET_Pos;
pub const FMC_BTRx_ADDSET_2: u32 = 0x4 << FMC_BTRx_ADDSET_Pos;
pub const FMC_BTRx_ADDSET_3: u32 = 0x8 << FMC_BTRx_ADDSET_Pos;
pub const FMC_BTRx_ADDHLD_Pos: u32 = 4;
pub const FMC_BTRx_ADDHLD_Msk: u32 = 0xF << FMC_BTRx_ADDHLD_Pos;
pub const FMC_BTRx_ADDHLD: u32 = FMC_BTRx_ADDHLD_Msk;
pub const FMC_BTRx_ADDHLD_0: u32 = 0x1 << FMC_BTRx_ADDHLD_Pos;
pub const FMC_BTRx_ADDHLD_1: u32 = 0x2 << FMC_BTRx_ADDHLD_Pos;
pub const FMC_BTRx_ADDHLD_2: u32 = 0x4 << FMC_BTRx_ADDHLD_Pos;
pub const FMC_BTRx_ADDHLD_3: u32 = 0x8 << FMC_BTRx_ADDHLD_Pos;
pub const FMC_BTRx_DATAST_Pos: u32 = 8;
pub const FMC_BTRx_DATAST_Msk: u32 = 0xFF << FMC_BTRx_DATAST_Pos;
pub const FMC_BTRx_DATAST: u32 = FMC_BTRx_DATAST_Msk;
pub const FMC_BTRx_DATAST_0: u32 = 0x01 << FMC_BTRx_DATAST_Pos;
pub const FMC_BTRx_DATAST_1: u32 = 0x02 << FMC_BTRx_DATAST_Pos;
pub const FMC_BTRx_DATAST_2: u32 = 0x04 << FMC_BTRx_DATAST_Pos;
pub const FMC_BTRx_DATAST_3: u32 = 0x08 << FMC_BTRx_DATAST_Pos;
pub const FMC_BTRx_DATAST_4: u32 = 0x10 << FMC_BTRx_DATAST_Pos;
pub const FMC_BTRx_DATAST_5: u32 = 0x20 << FMC_BTRx_DATAST_Pos;
pub const FMC_BTRx_DATAST_6: u32 = 0x40 << FMC_BTRx_DATAST_Pos;
pub const FMC_BTRx_DATAST_7: u32 = 0x80 << FMC_BTRx_DATAST_Pos;
pub const FMC_BTRx_BUSTURN_Pos: u32 = 16;
pub const FMC_BTRx_BUSTURN_Msk: u32 = 0xF << FMC_BTRx_BUSTURN_Pos;
pub const FMC_BTRx_BUSTURN: u32 = FMC_BTRx_BUSTURN_Msk;
pub const FMC_BTRx_BUSTURN_0: u32 = 0x1 << FMC_BTRx_BUSTURN_Pos;
pub const FMC_BTRx_BUSTURN_1: u32 = 0x2 << FMC_BTRx_BUSTURN_Pos;
pub const FMC_BTRx_BUSTURN_2: u32 = 0x4 << FMC_BTRx_BUSTURN_Pos;
pub const FMC_BTRx_BUSTURN_3: u32 = 0x8 << FMC_BTRx_BUSTURN_Pos;
pub const FMC_BTRx_CLKDIV_Pos: u32 = 20;
pub const FMC_BTRx_CLKDIV_Msk: u32 = 0xF << FMC_BTRx_CLKDIV_Pos;
pub const FMC_BTRx_CLKDIV: u32 = FMC_BTRx_CLKDIV_Msk;
pub const FMC_BTRx_CLKDIV_0: u32 = 0x1 << FMC_BTRx_CLKDIV_Pos;
pub const FMC_BTRx_CLKDIV_1: u32 = 0x2 << FMC_BTRx_CLKDIV_Pos;
pub const FMC_BTRx_CLKDIV_2: u32 = 0x4 << FMC_BTRx_CLKDIV_Pos;
pub const FMC_BTRx_CLKDIV_3: u32 = 0x8 << FMC_BTRx_CLKDIV_Pos;
pub const FMC_BTRx_DATLAT_Pos: u32 = 24;
pub const FMC_BTRx_DATLAT_Msk: u32 = 0xF << FMC_BTRx_DATLAT_Pos;
pub const FMC_BTRx_DATLAT: u32 = FMC_BTRx_DATLAT_Msk;
pub const FMC_BTRx_DATLAT_0: u32 = 0x1 << FMC_BTRx_DATLAT_Pos;
pub const FMC_BTRx_DATLAT_1: u32 = 0x2 << FMC_BTRx_DATLAT_Pos;
pub const FMC_BTRx_DATLAT_2: u32 = 0x4 << FMC_BTRx_DATLAT_Pos;
pub const FMC_BTRx_DATLAT_3: u32 = 0x8 << FMC_BTRx_DATLAT_Pos;
pub const FMC_BTRx_ACCMOD_Pos: u32 = 28;
pub const FMC_BTRx_ACCMOD_Msk: u32 = 0x3 << FMC_BTRx_ACCMOD_Pos;
pub const FMC_BTRx_ACCMOD: u32 = FMC_BTRx_ACCMOD_Msk;
pub const FMC_BTRx_ACCMOD_0: u32 = 0x1 << FMC_BTRx_ACCMOD_Pos;
pub const FMC_BTRx_ACCMOD_1: u32 = 0x2 << FMC_BTRx_ACCMOD_Pos;
pub const FMC_BWTRx_ADDSET_Pos: u32 = 0;
pub const FMC_BWTRx_ADDSET_Msk: u32 = 0xF << FMC_BWTRx_ADDSET_Pos;
pub const FMC_BWTRx_ADDSET: u32 = FMC_BWTRx_ADDSET_Msk;
pub const FMC_BWTRx_ADDSET_0: u32 = 0x1 << FMC_BWTRx_ADDSET_Pos;
pub const FMC_BWTRx_ADDSET_1: u32 = 0x2 << FMC_BWTRx_ADDSET_Pos;
pub const FMC_BWTRx_ADDSET_2: u32 = 0x4 << FMC_BWTRx_ADDSET_Pos;
pub const FMC_BWTRx_ADDSET_3: u32 = 0x8 << FMC_BWTRx_ADDSET_Pos;
pub const FMC_BWTRx_ADDHLD_Pos: u32 = 4;
pub const FMC_BWTRx_ADDHLD_Msk: u32 = 0xF << FMC_BWTRx_ADDHLD_Pos;
pub const FMC_BWTRx_ADDHLD: u32 = FMC_BWTRx_ADDHLD_Msk;
pub const FMC_BWTRx_ADDHLD_0: u32 = 0x1 << FMC_BWTRx_ADDHLD_Pos;
pub const FMC_BWTRx_ADDHLD_1: u32 = 0x2 << FMC_BWTRx_ADDHLD_Pos;
pub const FMC_BWTRx_ADDHLD_2: u32 = 0x4 << FMC_BWTRx_ADDHLD_Pos;
pub const FMC_BWTRx_ADDHLD_3: u32 = 0x8 << FMC_BWTRx_ADDHLD_Pos;
pub const FMC_BWTRx_DATAST_Pos: u32 = 8;
pub const FMC_BWTRx_DATAST_Msk: u32 = 0xFF << FMC_BWTRx_DATAST_Pos;
pub const FMC_BWTRx_DATAST: u32 = FMC_BWTRx_DATAST_Msk;
pub const FMC_BWTRx_DATAST_0: u32 = 0x01 << FMC_BWTRx_DATAST_Pos;
pub const FMC_BWTRx_DATAST_1: u32 = 0x02 << FMC_BWTRx_DATAST_Pos;
pub const FMC_BWTRx_DATAST_2: u32 = 0x04 << FMC_BWTRx_DATAST_Pos;
pub const FMC_BWTRx_DATAST_3: u32 = 0x08 << FMC_BWTRx_DATAST_Pos;
pub const FMC_BWTRx_DATAST_4: u32 = 0x10 << FMC_BWTRx_DATAST_Pos;
pub const FMC_BWTRx_DATAST_5: u32 = 0x20 << FMC_BWTRx_DATAST_Pos;
pub const FMC_BWTRx_DATAST_6: u32 = 0x40 << FMC_BWTRx_DATAST_Pos;
pub const FMC_BWTRx_DATAST_7: u32 = 0x80 << FMC_BWTRx_DATAST_Pos;
pub const FMC_BWTRx_BUSTURN_Pos: u32 = 16;
pub const FMC_BWTRx_BUSTURN_Msk: u32 = 0xF << FMC_BWTRx_BUSTURN_Pos;
pub const FMC_BWTRx_BUSTURN: u32 = FMC_BWTRx_BUSTURN_Msk;
pub const FMC_BWTRx_BUSTURN_0: u32 = 0x1 << FMC_BWTRx_BUSTURN_Pos;
pub const FMC_BWTRx_BUSTURN_1: u32 = 0x2 << FMC_BWTRx_BUSTURN_Pos;
pub const FMC_BWTRx_BUSTURN_2: u32 = 0x4 << FMC_BWTRx_BUSTURN_Pos;
pub const FMC_BWTRx_BUSTURN_3: u32 = 0x8 << FMC_BWTRx_BUSTURN_Pos;
pub const FMC_BWTRx_ACCMOD_Pos: u32 = 28;
pub const FMC_BWTRx_ACCMOD_Msk: u32 = 0x3 << FMC_BWTRx_ACCMOD_Pos;
pub const FMC_BWTRx_ACCMOD: u32 = FMC_BWTRx_ACCMOD_Msk;
pub const FMC_BWTRx_ACCMOD_0: u32 = 0x1 << FMC_BWTRx_ACCMOD_Pos;
pub const FMC_BWTRx_ACCMOD_1: u32 = 0x2 << FMC_BWTRx_ACCMOD_Pos;
pub const FMC_PCR_PWAITEN_Pos: u32 = 1;
pub const FMC_PCR_PWAITEN_Msk: u32 = 0x1 << FMC_PCR_PWAITEN_Pos;
pub const FMC_PCR_PWAITEN: u32 = FMC_PCR_PWAITEN_Msk;
pub const FMC_PCR_PBKEN_Pos: u32 = 2;
pub const FMC_PCR_PBKEN_Msk: u32 = 0x1 << FMC_PCR_PBKEN_Pos;
pub const FMC_PCR_PBKEN: u32 = FMC_PCR_PBKEN_Msk;
pub const FMC_PCR_PWID_Pos: u32 = 4;
pub const FMC_PCR_PWID_Msk: u32 = 0x3 << FMC_PCR_PWID_Pos;
pub const FMC_PCR_PWID: u32 = FMC_PCR_PWID_Msk;
pub const FMC_PCR_PWID_0: u32 = 0x1 << FMC_PCR_PWID_Pos;
pub const FMC_PCR_PWID_1: u32 = 0x2 << FMC_PCR_PWID_Pos;
pub const FMC_PCR_ECCEN_Pos: u32 = 6;
pub const FMC_PCR_ECCEN_Msk: u32 = 0x1 << FMC_PCR_ECCEN_Pos;
pub const FMC_PCR_ECCEN: u32 = FMC_PCR_ECCEN_Msk;
pub const FMC_PCR_TCLR_Pos: u32 = 9;
pub const FMC_PCR_TCLR_Msk: u32 = 0xF << FMC_PCR_TCLR_Pos;
pub const FMC_PCR_TCLR: u32 = FMC_PCR_TCLR_Msk;
pub const FMC_PCR_TCLR_0: u32 = 0x1 << FMC_PCR_TCLR_Pos;
pub const FMC_PCR_TCLR_1: u32 = 0x2 << FMC_PCR_TCLR_Pos;
pub const FMC_PCR_TCLR_2: u32 = 0x4 << FMC_PCR_TCLR_Pos;
pub const FMC_PCR_TCLR_3: u32 = 0x8 << FMC_PCR_TCLR_Pos;
pub const FMC_PCR_TAR_Pos: u32 = 13;
pub const FMC_PCR_TAR_Msk: u32 = 0xF << FMC_PCR_TAR_Pos;
pub const FMC_PCR_TAR: u32 = FMC_PCR_TAR_Msk;
pub const FMC_PCR_TAR_0: u32 = 0x1 << FMC_PCR_TAR_Pos;
pub const FMC_PCR_TAR_1: u32 = 0x2 << FMC_PCR_TAR_Pos;
pub const FMC_PCR_TAR_2: u32 = 0x4 << FMC_PCR_TAR_Pos;
pub const FMC_PCR_TAR_3: u32 = 0x8 << FMC_PCR_TAR_Pos;
pub const FMC_PCR_ECCPS_Pos: u32 = 17;
pub const FMC_PCR_ECCPS_Msk: u32 = 0x7 << FMC_PCR_ECCPS_Pos;
pub const FMC_PCR_ECCPS: u32 = FMC_PCR_ECCPS_Msk;
pub const FMC_PCR_ECCPS_0: u32 = 0x1 << FMC_PCR_ECCPS_Pos;
pub const FMC_PCR_ECCPS_1: u32 = 0x2 << FMC_PCR_ECCPS_Pos;
pub const FMC_PCR_ECCPS_2: u32 = 0x4 << FMC_PCR_ECCPS_Pos;
pub const FMC_SR_IRS_Pos: u32 = 0;
pub const FMC_SR_IRS_Msk: u32 = 0x1 << FMC_SR_IRS_Pos;
pub const FMC_SR_IRS: u32 = FMC_SR_IRS_Msk;
pub const FMC_SR_ILS_Pos: u32 = 1;
pub const FMC_SR_ILS_Msk: u32 = 0x1 << FMC_SR_ILS_Pos;
pub const FMC_SR_ILS: u32 = FMC_SR_ILS_Msk;
pub const FMC_SR_IFS_Pos: u32 = 2;
pub const FMC_SR_IFS_Msk: u32 = 0x1 << FMC_SR_IFS_Pos;
pub const FMC_SR_IFS: u32 = FMC_SR_IFS_Msk;
pub const FMC_SR_IREN_Pos: u32 = 3;
pub const FMC_SR_IREN_Msk: u32 = 0x1 << FMC_SR_IREN_Pos;
pub const FMC_SR_IREN: u32 = FMC_SR_IREN_Msk;
pub const FMC_SR_ILEN_Pos: u32 = 4;
pub const FMC_SR_ILEN_Msk: u32 = 0x1 << FMC_SR_ILEN_Pos;
pub const FMC_SR_ILEN: u32 = FMC_SR_ILEN_Msk;
pub const FMC_SR_IFEN_Pos: u32 = 5;
pub const FMC_SR_IFEN_Msk: u32 = 0x1 << FMC_SR_IFEN_Pos;
pub const FMC_SR_IFEN: u32 = FMC_SR_IFEN_Msk;
pub const FMC_SR_FEMPT_Pos: u32 = 6;
pub const FMC_SR_FEMPT_Msk: u32 = 0x1 << FMC_SR_FEMPT_Pos;
pub const FMC_SR_FEMPT: u32 = FMC_SR_FEMPT_Msk;
pub const FMC_PMEM_MEMSET_Pos: u32 = 0;
pub const FMC_PMEM_MEMSET_Msk: u32 = 0xFF << FMC_PMEM_MEMSET_Pos;
pub const FMC_PMEM_MEMSET: u32 = FMC_PMEM_MEMSET_Msk;
pub const FMC_PMEM_MEMSET_0: u32 = 0x01 << FMC_PMEM_MEMSET_Pos;
pub const FMC_PMEM_MEMSET_1: u32 = 0x02 << FMC_PMEM_MEMSET_Pos;
pub const FMC_PMEM_MEMSET_2: u32 = 0x04 << FMC_PMEM_MEMSET_Pos;
pub const FMC_PMEM_MEMSET_3: u32 = 0x08 << FMC_PMEM_MEMSET_Pos;
pub const FMC_PMEM_MEMSET_4: u32 = 0x10 << FMC_PMEM_MEMSET_Pos;
pub const FMC_PMEM_MEMSET_5: u32 = 0x20 << FMC_PMEM_MEMSET_Pos;
pub const FMC_PMEM_MEMSET_6: u32 = 0x40 << FMC_PMEM_MEMSET_Pos;
pub const FMC_PMEM_MEMSET_7: u32 = 0x80 << FMC_PMEM_MEMSET_Pos;
pub const FMC_PMEM_MEMWAIT_Pos: u32 = 8;
pub const FMC_PMEM_MEMWAIT_Msk: u32 = 0xFF << FMC_PMEM_MEMWAIT_Pos;
pub const FMC_PMEM_MEMWAIT: u32 = FMC_PMEM_MEMWAIT_Msk;
pub const FMC_PMEM_MEMWAIT_0: u32 = 0x01 << FMC_PMEM_MEMWAIT_Pos;
pub const FMC_PMEM_MEMWAIT_1: u32 = 0x02 << FMC_PMEM_MEMWAIT_Pos;
pub const FMC_PMEM_MEMWAIT_2: u32 = 0x04 << FMC_PMEM_MEMWAIT_Pos;
pub const FMC_PMEM_MEMWAIT_3: u32 = 0x08 << FMC_PMEM_MEMWAIT_Pos;
pub const FMC_PMEM_MEMWAIT_4: u32 = 0x10 << FMC_PMEM_MEMWAIT_Pos;
pub const FMC_PMEM_MEMWAIT_5: u32 = 0x20 << FMC_PMEM_MEMWAIT_Pos;
pub const FMC_PMEM_MEMWAIT_6: u32 = 0x40 << FMC_PMEM_MEMWAIT_Pos;
pub const FMC_PMEM_MEMWAIT_7: u32 = 0x80 << FMC_PMEM_MEMWAIT_Pos;
pub const FMC_PMEM_MEMHOLD_Pos: u32 = 16;
pub const FMC_PMEM_MEMHOLD_Msk: u32 = 0xFF << FMC_PMEM_MEMHOLD_Pos;
pub const FMC_PMEM_MEMHOLD: u32 = FMC_PMEM_MEMHOLD_Msk;
pub const FMC_PMEM_MEMHOLD_0: u32 = 0x01 << FMC_PMEM_MEMHOLD_Pos;
pub const FMC_PMEM_MEMHOLD_1: u32 = 0x02 << FMC_PMEM_MEMHOLD_Pos;
pub const FMC_PMEM_MEMHOLD_2: u32 = 0x04 << FMC_PMEM_MEMHOLD_Pos;
pub const FMC_PMEM_MEMHOLD_3: u32 = 0x08 << FMC_PMEM_MEMHOLD_Pos;
pub const FMC_PMEM_MEMHOLD_4: u32 = 0x10 << FMC_PMEM_MEMHOLD_Pos;
pub const FMC_PMEM_MEMHOLD_5: u32 = 0x20 << FMC_PMEM_MEMHOLD_Pos;
pub const FMC_PMEM_MEMHOLD_6: u32 = 0x40 << FMC_PMEM_MEMHOLD_Pos;
pub const FMC_PMEM_MEMHOLD_7: u32 = 0x80 << FMC_PMEM_MEMHOLD_Pos;
pub const FMC_PMEM_MEMHIZ_Pos: u32 = 24;
pub const FMC_PMEM_MEMHIZ_Msk: u32 = 0xFF << FMC_PMEM_MEMHIZ_Pos;
pub const FMC_PMEM_MEMHIZ: u32 = FMC_PMEM_MEMHIZ_Msk;
pub const FMC_PMEM_MEMHIZ_0: u32 = 0x01 << FMC_PMEM_MEMHIZ_Pos;
pub const FMC_PMEM_MEMHIZ_1: u32 = 0x02 << FMC_PMEM_MEMHIZ_Pos;
pub const FMC_PMEM_MEMHIZ_2: u32 = 0x04 << FMC_PMEM_MEMHIZ_Pos;
pub const FMC_PMEM_MEMHIZ_3: u32 = 0x08 << FMC_PMEM_MEMHIZ_Pos;
pub const FMC_PMEM_MEMHIZ_4: u32 = 0x10 << FMC_PMEM_MEMHIZ_Pos;
pub const FMC_PMEM_MEMHIZ_5: u32 = 0x20 << FMC_PMEM_MEMHIZ_Pos;
pub const FMC_PMEM_MEMHIZ_6: u32 = 0x40 << FMC_PMEM_MEMHIZ_Pos;
pub const FMC_PMEM_MEMHIZ_7: u32 = 0x80 << FMC_PMEM_MEMHIZ_Pos;
pub const FMC_PATT_ATTSET_Pos: u32 = 0;
pub const FMC_PATT_ATTSET_Msk: u32 = 0xFF << FMC_PATT_ATTSET_Pos;
pub const FMC_PATT_ATTSET: u32 = FMC_PATT_ATTSET_Msk;
pub const FMC_PATT_ATTSET_0: u32 = 0x01 << FMC_PATT_ATTSET_Pos;
pub const FMC_PATT_ATTSET_1: u32 = 0x02 << FMC_PATT_ATTSET_Pos;
pub const FMC_PATT_ATTSET_2: u32 = 0x04 << FMC_PATT_ATTSET_Pos;
pub const FMC_PATT_ATTSET_3: u32 = 0x08 << FMC_PATT_ATTSET_Pos;
pub const FMC_PATT_ATTSET_4: u32 = 0x10 << FMC_PATT_ATTSET_Pos;
pub const FMC_PATT_ATTSET_5: u32 = 0x20 << FMC_PATT_ATTSET_Pos;
pub const FMC_PATT_ATTSET_6: u32 = 0x40 << FMC_PATT_ATTSET_Pos;
pub const FMC_PATT_ATTSET_7: u32 = 0x80 << FMC_PATT_ATTSET_Pos;
pub const FMC_PATT_ATTWAIT_Pos: u32 = 8;
pub const FMC_PATT_ATTWAIT_Msk: u32 = 0xFF << FMC_PATT_ATTWAIT_Pos;
pub const FMC_PATT_ATTWAIT: u32 = FMC_PATT_ATTWAIT_Msk;
pub const FMC_PATT_ATTWAIT_0: u32 = 0x01 << FMC_PATT_ATTWAIT_Pos;
pub const FMC_PATT_ATTWAIT_1: u32 = 0x02 << FMC_PATT_ATTWAIT_Pos;
pub const FMC_PATT_ATTWAIT_2: u32 = 0x04 << FMC_PATT_ATTWAIT_Pos;
pub const FMC_PATT_ATTWAIT_3: u32 = 0x08 << FMC_PATT_ATTWAIT_Pos;
pub const FMC_PATT_ATTWAIT_4: u32 = 0x10 << FMC_PATT_ATTWAIT_Pos;
pub const FMC_PATT_ATTWAIT_5: u32 = 0x20 << FMC_PATT_ATTWAIT_Pos;
pub const FMC_PATT_ATTWAIT_6: u32 = 0x40 << FMC_PATT_ATTWAIT_Pos;
pub const FMC_PATT_ATTWAIT_7: u32 = 0x80 << FMC_PATT_ATTWAIT_Pos;
pub const FMC_PATT_ATTHOLD_Pos: u32 = 16;
pub const FMC_PATT_ATTHOLD_Msk: u32 = 0xFF << FMC_PATT_ATTHOLD_Pos;
pub const FMC_PATT_ATTHOLD: u32 = FMC_PATT_ATTHOLD_Msk;
pub const FMC_PATT_ATTHOLD_0: u32 = 0x01 << FMC_PATT_ATTHOLD_Pos;
pub const FMC_PATT_ATTHOLD_1: u32 = 0x02 << FMC_PATT_ATTHOLD_Pos;
pub const FMC_PATT_ATTHOLD_2: u32 = 0x04 << FMC_PATT_ATTHOLD_Pos;
pub const FMC_PATT_ATTHOLD_3: u32 = 0x08 << FMC_PATT_ATTHOLD_Pos;
pub const FMC_PATT_ATTHOLD_4: u32 = 0x10 << FMC_PATT_ATTHOLD_Pos;
pub const FMC_PATT_ATTHOLD_5: u32 = 0x20 << FMC_PATT_ATTHOLD_Pos;
pub const FMC_PATT_ATTHOLD_6: u32 = 0x40 << FMC_PATT_ATTHOLD_Pos;
pub const FMC_PATT_ATTHOLD_7: u32 = 0x80 << FMC_PATT_ATTHOLD_Pos;
pub const FMC_PATT_ATTHIZ_Pos: u32 = 24;
pub const FMC_PATT_ATTHIZ_Msk: u32 = 0xFF << FMC_PATT_ATTHIZ_Pos;
pub const FMC_PATT_ATTHIZ: u32 = FMC_PATT_ATTHIZ_Msk;
pub const FMC_PATT_ATTHIZ_0: u32 = 0x01 << FMC_PATT_ATTHIZ_Pos;
pub const FMC_PATT_ATTHIZ_1: u32 = 0x02 << FMC_PATT_ATTHIZ_Pos;
pub const FMC_PATT_ATTHIZ_2: u32 = 0x04 << FMC_PATT_ATTHIZ_Pos;
pub const FMC_PATT_ATTHIZ_3: u32 = 0x08 << FMC_PATT_ATTHIZ_Pos;
pub const FMC_PATT_ATTHIZ_4: u32 = 0x10 << FMC_PATT_ATTHIZ_Pos;
pub const FMC_PATT_ATTHIZ_5: u32 = 0x20 << FMC_PATT_ATTHIZ_Pos;
pub const FMC_PATT_ATTHIZ_6: u32 = 0x40 << FMC_PATT_ATTHIZ_Pos;
pub const FMC_PATT_ATTHIZ_7: u32 = 0x80 << FMC_PATT_ATTHIZ_Pos;
pub const FMC_ECCR_ECC_Pos: u32 = 0;
pub const FMC_ECCR_ECC_Msk: u32 = 0xFFFFFFFF << FMC_ECCR_ECC_Pos;
pub const FMC_ECCR_ECC: u32 = FMC_ECCR_ECC_Msk;
pub const FMC_SDCRx_NC_Pos: u32 = 0;
pub const FMC_SDCRx_NC_Msk: u32 = 0x3 << FMC_SDCRx_NC_Pos;
pub const FMC_SDCRx_NC: u32 = FMC_SDCRx_NC_Msk;
pub const FMC_SDCRx_NC_0: u32 = 0x1 << FMC_SDCRx_NC_Pos;
pub const FMC_SDCRx_NC_1: u32 = 0x2 << FMC_SDCRx_NC_Pos;
pub const FMC_SDCRx_NR_Pos: u32 = 2;
pub const FMC_SDCRx_NR_Msk: u32 = 0x3 << FMC_SDCRx_NR_Pos;
pub const FMC_SDCRx_NR: u32 = FMC_SDCRx_NR_Msk;
pub const FMC_SDCRx_NR_0: u32 = 0x1 << FMC_SDCRx_NR_Pos;
pub const FMC_SDCRx_NR_1: u32 = 0x2 << FMC_SDCRx_NR_Pos;
pub const FMC_SDCRx_MWID_Pos: u32 = 4;
pub const FMC_SDCRx_MWID_Msk: u32 = 0x3 << FMC_SDCRx_MWID_Pos;
pub const FMC_SDCRx_MWID: u32 = FMC_SDCRx_MWID_Msk;
pub const FMC_SDCRx_MWID_0: u32 = 0x1 << FMC_SDCRx_MWID_Pos;
pub const FMC_SDCRx_MWID_1: u32 = 0x2 << FMC_SDCRx_MWID_Pos;
pub const FMC_SDCRx_NB_Pos: u32 = 6;
pub const FMC_SDCRx_NB_Msk: u32 = 0x1 << FMC_SDCRx_NB_Pos;
pub const FMC_SDCRx_NB: u32 = FMC_SDCRx_NB_Msk;
pub const FMC_SDCRx_CAS_Pos: u32 = 7;
pub const FMC_SDCRx_CAS_Msk: u32 = 0x3 << FMC_SDCRx_CAS_Pos;
pub const FMC_SDCRx_CAS: u32 = FMC_SDCRx_CAS_Msk;
pub const FMC_SDCRx_CAS_0: u32 = 0x1 << FMC_SDCRx_CAS_Pos;
pub const FMC_SDCRx_CAS_1: u32 = 0x2 << FMC_SDCRx_CAS_Pos;
pub const FMC_SDCRx_WP_Pos: u32 = 9;
pub const FMC_SDCRx_WP_Msk: u32 = 0x1 << FMC_SDCRx_WP_Pos;
pub const FMC_SDCRx_WP: u32 = FMC_SDCRx_WP_Msk;
pub const FMC_SDCRx_SDCLK_Pos: u32 = 10;
pub const FMC_SDCRx_SDCLK_Msk: u32 = 0x3 << FMC_SDCRx_SDCLK_Pos;
pub const FMC_SDCRx_SDCLK: u32 = FMC_SDCRx_SDCLK_Msk;
pub const FMC_SDCRx_SDCLK_0: u32 = 0x1 << FMC_SDCRx_SDCLK_Pos;
pub const FMC_SDCRx_SDCLK_1: u32 = 0x2 << FMC_SDCRx_SDCLK_Pos;
pub const FMC_SDCRx_RBURST_Pos: u32 = 12;
pub const FMC_SDCRx_RBURST_Msk: u32 = 0x1 << FMC_SDCRx_RBURST_Pos;
pub const FMC_SDCRx_RBURST: u32 = FMC_SDCRx_RBURST_Msk;
pub const FMC_SDCRx_RPIPE_Pos: u32 = 13;
pub const FMC_SDCRx_RPIPE_Msk: u32 = 0x3 << FMC_SDCRx_RPIPE_Pos;
pub const FMC_SDCRx_RPIPE: u32 = FMC_SDCRx_RPIPE_Msk;
pub const FMC_SDCRx_RPIPE_0: u32 = 0x1 << FMC_SDCRx_RPIPE_Pos;
pub const FMC_SDCRx_RPIPE_1: u32 = 0x2 << FMC_SDCRx_RPIPE_Pos;
pub const FMC_SDTRx_TMRD_Pos: u32 = 0;
pub const FMC_SDTRx_TMRD_Msk: u32 = 0xF << FMC_SDTRx_TMRD_Pos;
pub const FMC_SDTRx_TMRD: u32 = FMC_SDTRx_TMRD_Msk;
pub const FMC_SDTRx_TMRD_0: u32 = 0x1 << FMC_SDTRx_TMRD_Pos;
pub const FMC_SDTRx_TMRD_1: u32 = 0x2 << FMC_SDTRx_TMRD_Pos;
pub const FMC_SDTRx_TMRD_2: u32 = 0x4 << FMC_SDTRx_TMRD_Pos;
pub const FMC_SDTRx_TMRD_3: u32 = 0x8 << FMC_SDTRx_TMRD_Pos;
pub const FMC_SDTRx_TXSR_Pos: u32 = 4;
pub const FMC_SDTRx_TXSR_Msk: u32 = 0xF << FMC_SDTRx_TXSR_Pos;
pub const FMC_SDTRx_TXSR: u32 = FMC_SDTRx_TXSR_Msk;
pub const FMC_SDTRx_TXSR_0: u32 = 0x1 << FMC_SDTRx_TXSR_Pos;
pub const FMC_SDTRx_TXSR_1: u32 = 0x2 << FMC_SDTRx_TXSR_Pos;
pub const FMC_SDTRx_TXSR_2: u32 = 0x4 << FMC_SDTRx_TXSR_Pos;
pub const FMC_SDTRx_TXSR_3: u32 = 0x8 << FMC_SDTRx_TXSR_Pos;
pub const FMC_SDTRx_TRAS_Pos: u32 = 8;
pub const FMC_SDTRx_TRAS_Msk: u32 = 0xF << FMC_SDTRx_TRAS_Pos;
pub const FMC_SDTRx_TRAS: u32 = FMC_SDTRx_TRAS_Msk;
pub const FMC_SDTRx_TRAS_0: u32 = 0x1 << FMC_SDTRx_TRAS_Pos;
pub const FMC_SDTRx_TRAS_1: u32 = 0x2 << FMC_SDTRx_TRAS_Pos;
pub const FMC_SDTRx_TRAS_2: u32 = 0x4 << FMC_SDTRx_TRAS_Pos;
pub const FMC_SDTRx_TRAS_3: u32 = 0x8 << FMC_SDTRx_TRAS_Pos;
pub const FMC_SDTRx_TRC_Pos: u32 = 12;
pub const FMC_SDTRx_TRC_Msk: u32 = 0xF << FMC_SDTRx_TRC_Pos;
pub const FMC_SDTRx_TRC: u32 = FMC_SDTRx_TRC_Msk;
pub const FMC_SDTRx_TRC_0: u32 = 0x1 << FMC_SDTRx_TRC_Pos;
pub const FMC_SDTRx_TRC_1: u32 = 0x2 << FMC_SDTRx_TRC_Pos;
pub const FMC_SDTRx_TRC_2: u32 = 0x4 << FMC_SDTRx_TRC_Pos;
pub const FMC_SDTRx_TRC_3: u32 = 0x8 << FMC_SDTRx_TRC_Pos;
pub const FMC_SDTRx_TWR_Pos: u32 = 16;
pub const FMC_SDTRx_TWR_Msk: u32 = 0xF << FMC_SDTRx_TWR_Pos;
pub const FMC_SDTRx_TWR: u32 = FMC_SDTRx_TWR_Msk;
pub const FMC_SDTRx_TWR_0: u32 = 0x1 << FMC_SDTRx_TWR_Pos;
pub const FMC_SDTRx_TWR_1: u32 = 0x2 << FMC_SDTRx_TWR_Pos;
pub const FMC_SDTRx_TWR_2: u32 = 0x4 << FMC_SDTRx_TWR_Pos;
pub const FMC_SDTRx_TWR_3: u32 = 0x8 << FMC_SDTRx_TWR_Pos;
pub const FMC_SDTRx_TRP_Pos: u32 = 20;
pub const FMC_SDTRx_TRP_Msk: u32 = 0xF << FMC_SDTRx_TRP_Pos;
pub const FMC_SDTRx_TRP: u32 = FMC_SDTRx_TRP_Msk;
pub const FMC_SDTRx_TRP_0: u32 = 0x1 << FMC_SDTRx_TRP_Pos;
pub const FMC_SDTRx_TRP_1: u32 = 0x2 << FMC_SDTRx_TRP_Pos;
pub const FMC_SDTRx_TRP_2: u32 = 0x4 << FMC_SDTRx_TRP_Pos;
pub const FMC_SDTRx_TRP_3: u32 = 0x8 << FMC_SDTRx_TRP_Pos;
pub const FMC_SDTRx_TRCD_Pos: u32 = 24;
pub const FMC_SDTRx_TRCD_Msk: u32 = 0xF << FMC_SDTRx_TRCD_Pos;
pub const FMC_SDTRx_TRCD: u32 = FMC_SDTRx_TRCD_Msk;
pub const FMC_SDTRx_TRCD_0: u32 = 0x1 << FMC_SDTRx_TRCD_Pos;
pub const FMC_SDTRx_TRCD_1: u32 = 0x2 << FMC_SDTRx_TRCD_Pos;
pub const FMC_SDTRx_TRCD_2: u32 = 0x4 << FMC_SDTRx_TRCD_Pos;
pub const FMC_SDTRx_TRCD_3: u32 = 0x8 << FMC_SDTRx_TRCD_Pos;
pub const FMC_SDCMR_MODE_Pos: u32 = 0;
pub const FMC_SDCMR_MODE_Msk: u32 = 0x7 << FMC_SDCMR_MODE_Pos;
pub const FMC_SDCMR_MODE: u32 = FMC_SDCMR_MODE_Msk;
pub const FMC_SDCMR_MODE_0: u32 = 0x1 << FMC_SDCMR_MODE_Pos;
pub const FMC_SDCMR_MODE_1: u32 = 0x2 << FMC_SDCMR_MODE_Pos;
pub const FMC_SDCMR_MODE_2: u32 = 0x4 << FMC_SDCMR_MODE_Pos;
pub const FMC_SDCMR_CTB2_Pos: u32 = 3;
pub const FMC_SDCMR_CTB2_Msk: u32 = 0x1 << FMC_SDCMR_CTB2_Pos;
pub const FMC_SDCMR_CTB2: u32 = FMC_SDCMR_CTB2_Msk;
pub const FMC_SDCMR_CTB1_Pos: u32 = 4;
pub const FMC_SDCMR_CTB1_Msk: u32 = 0x1 << FMC_SDCMR_CTB1_Pos;
pub const FMC_SDCMR_CTB1: u32 = FMC_SDCMR_CTB1_Msk;
pub const FMC_SDCMR_NRFS_Pos: u32 = 5;
pub const FMC_SDCMR_NRFS_Msk: u32 = 0xF << FMC_SDCMR_NRFS_Pos;
pub const FMC_SDCMR_NRFS: u32 = FMC_SDCMR_NRFS_Msk;
pub const FMC_SDCMR_NRFS_0: u32 = 0x1 << FMC_SDCMR_NRFS_Pos;
pub const FMC_SDCMR_NRFS_1: u32 = 0x2 << FMC_SDCMR_NRFS_Pos;
pub const FMC_SDCMR_NRFS_2: u32 = 0x4 << FMC_SDCMR_NRFS_Pos;
pub const FMC_SDCMR_NRFS_3: u32 = 0x8 << FMC_SDCMR_NRFS_Pos;
pub const FMC_SDCMR_MRD_Pos: u32 = 9;
pub const FMC_SDCMR_MRD_Msk: u32 = 0x3FFF << FMC_SDCMR_MRD_Pos;
pub const FMC_SDCMR_MRD: u32 = FMC_SDCMR_MRD_Msk;
pub const FMC_SDRTR_CRE_Pos: u32 = 0;
pub const FMC_SDRTR_CRE_Msk: u32 = 0x1 << FMC_SDRTR_CRE_Pos;
pub const FMC_SDRTR_CRE: u32 = FMC_SDRTR_CRE_Msk;
pub const FMC_SDRTR_COUNT_Pos: u32 = 1;
pub const FMC_SDRTR_COUNT_Msk: u32 = 0x1FFF << FMC_SDRTR_COUNT_Pos;
pub const FMC_SDRTR_COUNT: u32 = FMC_SDRTR_COUNT_Msk;
pub const FMC_SDRTR_REIE_Pos: u32 = 14;
pub const FMC_SDRTR_REIE_Msk: u32 = 0x1 << FMC_SDRTR_REIE_Pos;
pub const FMC_SDRTR_REIE: u32 = FMC_SDRTR_REIE_Msk;
pub const FMC_SDSR_RE_Pos: u32 = 0;
pub const FMC_SDSR_RE_Msk: u32 = 0x1 << FMC_SDSR_RE_Pos;
pub const FMC_SDSR_RE: u32 = FMC_SDSR_RE_Msk;
pub const FMC_SDSR_MODES1_Pos: u32 = 1;
pub const FMC_SDSR_MODES1_Msk: u32 = 0x3 << FMC_SDSR_MODES1_Pos;
pub const FMC_SDSR_MODES1: u32 = FMC_SDSR_MODES1_Msk;
pub const FMC_SDSR_MODES1_0: u32 = 0x1 << FMC_SDSR_MODES1_Pos;
pub const FMC_SDSR_MODES1_1: u32 = 0x2 << FMC_SDSR_MODES1_Pos;
pub const FMC_SDSR_MODES2_Pos: u32 = 3;
pub const FMC_SDSR_MODES2_Msk: u32 = 0x3 << FMC_SDSR_MODES2_Pos;
pub const FMC_SDSR_MODES2: u32 = FMC_SDSR_MODES2_Msk;
pub const FMC_SDSR_MODES2_0: u32 = 0x1 << FMC_SDSR_MODES2_Pos;
pub const FMC_SDSR_MODES2_1: u32 = 0x2 << FMC_SDSR_MODES2_Pos;
pub const GFXMMU_CR_B0OIE_Pos: u32 = 0;
pub const GFXMMU_CR_B0OIE_Msk: u32 = 0x1 << GFXMMU_CR_B0OIE_Pos;
pub const GFXMMU_CR_B0OIE: u32 = GFXMMU_CR_B0OIE_Msk;
pub const GFXMMU_CR_B1OIE_Pos: u32 = 1;
pub const GFXMMU_CR_B1OIE_Msk: u32 = 0x1 << GFXMMU_CR_B1OIE_Pos;
pub const GFXMMU_CR_B1OIE: u32 = GFXMMU_CR_B1OIE_Msk;
pub const GFXMMU_CR_B2OIE_Pos: u32 = 2;
pub const GFXMMU_CR_B2OIE_Msk: u32 = 0x1 << GFXMMU_CR_B2OIE_Pos;
pub const GFXMMU_CR_B2OIE: u32 = GFXMMU_CR_B2OIE_Msk;
pub const GFXMMU_CR_B3OIE_Pos: u32 = 3;
pub const GFXMMU_CR_B3OIE_Msk: u32 = 0x1 << GFXMMU_CR_B3OIE_Pos;
pub const GFXMMU_CR_B3OIE: u32 = GFXMMU_CR_B3OIE_Msk;
pub const GFXMMU_CR_AMEIE_Pos: u32 = 4;
pub const GFXMMU_CR_AMEIE_Msk: u32 = 0x1 << GFXMMU_CR_AMEIE_Pos;
pub const GFXMMU_CR_AMEIE: u32 = GFXMMU_CR_AMEIE_Msk;
pub const GFXMMU_CR_BS_Pos: u32 = 6;
pub const GFXMMU_CR_BS_Msk: u32 = 0x1 << GFXMMU_CR_BS_Pos;
pub const GFXMMU_CR_BS: u32 = GFXMMU_CR_BS_Msk;
pub const GFXMMU_CR_ATE_Pos: u32 = 15;
pub const GFXMMU_CR_ATE_Msk: u32 = 0x1 << GFXMMU_CR_ATE_Pos;
pub const GFXMMU_CR_ATE: u32 = GFXMMU_CR_ATE_Msk;
pub const GFXMMU_CR_B0PE_Pos: u32 = 24;
pub const GFXMMU_CR_B0PE_Msk: u32 = 0x1 << GFXMMU_CR_B0PE_Pos;
pub const GFXMMU_CR_B0PE: u32 = GFXMMU_CR_B0PE_Msk;
pub const GFXMMU_CR_B0PM_Pos: u32 = 25;
pub const GFXMMU_CR_B0PM_Msk: u32 = 0x1 << GFXMMU_CR_B0PM_Pos;
pub const GFXMMU_CR_B0PM: u32 = GFXMMU_CR_B0PM_Msk;
pub const GFXMMU_CR_B1PE_Pos: u32 = 26;
pub const GFXMMU_CR_B1PE_Msk: u32 = 0x1 << GFXMMU_CR_B1PE_Pos;
pub const GFXMMU_CR_B1PE: u32 = GFXMMU_CR_B1PE_Msk;
pub const GFXMMU_CR_B1PM_Pos: u32 = 27;
pub const GFXMMU_CR_B1PM_Msk: u32 = 0x1 << GFXMMU_CR_B1PM_Pos;
pub const GFXMMU_CR_B1PM: u32 = GFXMMU_CR_B1PM_Msk;
pub const GFXMMU_CR_B2PE_Pos: u32 = 28;
pub const GFXMMU_CR_B2PE_Msk: u32 = 0x1 << GFXMMU_CR_B2PE_Pos;
pub const GFXMMU_CR_B2PE: u32 = GFXMMU_CR_B2PE_Msk;
pub const GFXMMU_CR_B2PM_Pos: u32 = 29;
pub const GFXMMU_CR_B2PM_Msk: u32 = 0x1 << GFXMMU_CR_B2PM_Pos;
pub const GFXMMU_CR_B2PM: u32 = GFXMMU_CR_B2PM_Msk;
pub const GFXMMU_CR_B3PE_Pos: u32 = 30;
pub const GFXMMU_CR_B3PE_Msk: u32 = 0x1 << GFXMMU_CR_B3PE_Pos;
pub const GFXMMU_CR_B3PE: u32 = GFXMMU_CR_B3PE_Msk;
pub const GFXMMU_CR_B3PM_Pos: u32 = 31;
pub const GFXMMU_CR_B3PM_Msk: u32 = 0x1 << GFXMMU_CR_B3PM_Pos;
pub const GFXMMU_CR_B3PM: u32 = GFXMMU_CR_B3PM_Msk;
pub const GFXMMU_SR_B0OF_Pos: u32 = 0;
pub const GFXMMU_SR_B0OF_Msk: u32 = 0x1 << GFXMMU_SR_B0OF_Pos;
pub const GFXMMU_SR_B0OF: u32 = GFXMMU_SR_B0OF_Msk;
pub const GFXMMU_SR_B1OF_Pos: u32 = 1;
pub const GFXMMU_SR_B1OF_Msk: u32 = 0x1 << GFXMMU_SR_B1OF_Pos;
pub const GFXMMU_SR_B1OF: u32 = GFXMMU_SR_B1OF_Msk;
pub const GFXMMU_SR_B2OF_Pos: u32 = 2;
pub const GFXMMU_SR_B2OF_Msk: u32 = 0x1 << GFXMMU_SR_B2OF_Pos;
pub const GFXMMU_SR_B2OF: u32 = GFXMMU_SR_B2OF_Msk;
pub const GFXMMU_SR_B3OF_Pos: u32 = 3;
pub const GFXMMU_SR_B3OF_Msk: u32 = 0x1 << GFXMMU_SR_B3OF_Pos;
pub const GFXMMU_SR_B3OF: u32 = GFXMMU_SR_B3OF_Msk;
pub const GFXMMU_SR_AMEF_Pos: u32 = 4;
pub const GFXMMU_SR_AMEF_Msk: u32 = 0x1 << GFXMMU_SR_AMEF_Pos;
pub const GFXMMU_SR_AMEF: u32 = GFXMMU_SR_AMEF_Msk;
pub const GFXMMU_FCR_CB0OF_Pos: u32 = 0;
pub const GFXMMU_FCR_CB0OF_Msk: u32 = 0x1 << GFXMMU_FCR_CB0OF_Pos;
pub const GFXMMU_FCR_CB0OF: u32 = GFXMMU_FCR_CB0OF_Msk;
pub const GFXMMU_FCR_CB1OF_Pos: u32 = 1;
pub const GFXMMU_FCR_CB1OF_Msk: u32 = 0x1 << GFXMMU_FCR_CB1OF_Pos;
pub const GFXMMU_FCR_CB1OF: u32 = GFXMMU_FCR_CB1OF_Msk;
pub const GFXMMU_FCR_CB2OF_Pos: u32 = 2;
pub const GFXMMU_FCR_CB2OF_Msk: u32 = 0x1 << GFXMMU_FCR_CB2OF_Pos;
pub const GFXMMU_FCR_CB2OF: u32 = GFXMMU_FCR_CB2OF_Msk;
pub const GFXMMU_FCR_CB3OF_Pos: u32 = 3;
pub const GFXMMU_FCR_CB3OF_Msk: u32 = 0x1 << GFXMMU_FCR_CB3OF_Pos;
pub const GFXMMU_FCR_CB3OF: u32 = GFXMMU_FCR_CB3OF_Msk;
pub const GFXMMU_FCR_CAMEF_Pos: u32 = 4;
pub const GFXMMU_FCR_CAMEF_Msk: u32 = 0x1 << GFXMMU_FCR_CAMEF_Pos;
pub const GFXMMU_FCR_CAMEF: u32 = GFXMMU_FCR_CAMEF_Msk;
pub const GFXMMU_DVR_DV_Pos: u32 = 0;
pub const GFXMMU_DVR_DV_Msk: u32 = 0xFFFFFFFF << GFXMMU_DVR_DV_Pos;
pub const GFXMMU_DVR_DV: u32 = GFXMMU_DVR_DV_Msk;
pub const GFXMMU_DAR_DA_Pos: u32 = 0;
pub const GFXMMU_DAR_DA_Msk: u32 = 0xFF << GFXMMU_DVR_DA_Pos;
pub const GFXMMU_DAR_DA: u32 = GFXMMU_DVR_DA_Msk;
pub const GFXMMU_B0CR_PBO_Pos: u32 = 4;
pub const GFXMMU_B0CR_PBO_Msk: u32 = 0x7FFFF << GFXMMU_B0CR_PBO_Pos;
pub const GFXMMU_B0CR_PBO: u32 = GFXMMU_B0CR_PBO_Msk;
pub const GFXMMU_B0CR_PBBA_Pos: u32 = 23;
pub const GFXMMU_B0CR_PBBA_Msk: u32 = 0x1FF << GFXMMU_B0CR_PBBA_Pos;
pub const GFXMMU_B0CR_PBBA: u32 = GFXMMU_B0CR_PBBA_Msk;
pub const GFXMMU_B1CR_PBO_Pos: u32 = 4;
pub const GFXMMU_B1CR_PBO_Msk: u32 = 0x7FFFF << GFXMMU_B1CR_PBO_Pos;
pub const GFXMMU_B1CR_PBO: u32 = GFXMMU_B1CR_PBO_Msk;
pub const GFXMMU_B1CR_PBBA_Pos: u32 = 23;
pub const GFXMMU_B1CR_PBBA_Msk: u32 = 0x1FF << GFXMMU_B1CR_PBBA_Pos;
pub const GFXMMU_B1CR_PBBA: u32 = GFXMMU_B1CR_PBBA_Msk;
pub const GFXMMU_B2CR_PBO_Pos: u32 = 4;
pub const GFXMMU_B2CR_PBO_Msk: u32 = 0x7FFFF << GFXMMU_B2CR_PBO_Pos;
pub const GFXMMU_B2CR_PBO: u32 = GFXMMU_B2CR_PBO_Msk;
pub const GFXMMU_B2CR_PBBA_Pos: u32 = 23;
pub const GFXMMU_B2CR_PBBA_Msk: u32 = 0x1FF << GFXMMU_B2CR_PBBA_Pos;
pub const GFXMMU_B2CR_PBBA: u32 = GFXMMU_B2CR_PBBA_Msk;
pub const GFXMMU_B3CR_PBO_Pos: u32 = 4;
pub const GFXMMU_B3CR_PBO_Msk: u32 = 0x7FFFF << GFXMMU_B3CR_PBO_Pos;
pub const GFXMMU_B3CR_PBO: u32 = GFXMMU_B3CR_PBO_Msk;
pub const GFXMMU_B3CR_PBBA_Pos: u32 = 23;
pub const GFXMMU_B3CR_PBBA_Msk: u32 = 0x1FF << GFXMMU_B3CR_PBBA_Pos;
pub const GFXMMU_B3CR_PBBA: u32 = GFXMMU_B3CR_PBBA_Msk;
pub const GFXMMU_LUTxL_EN_Pos: u32 = 0;
pub const GFXMMU_LUTxL_EN_Msk: u32 = 0x1 << GFXMMU_LUTxL_EN_Pos;
pub const GFXMMU_LUTxL_EN: u32 = GFXMMU_LUTxL_EN_Msk;
pub const GFXMMU_LUTxL_FVB_Pos: u32 = 8;
pub const GFXMMU_LUTxL_FVB_Msk: u32 = 0xFF << GFXMMU_LUTxL_FVB_Pos;
pub const GFXMMU_LUTxL_FVB: u32 = GFXMMU_LUTxL_FVB_Msk;
pub const GFXMMU_LUTxL_LVB_Pos: u32 = 16;
pub const GFXMMU_LUTxL_LVB_Msk: u32 = 0xFF << GFXMMU_LUTxL_LVB_Pos;
pub const GFXMMU_LUTxL_LVB: u32 = GFXMMU_LUTxL_LVB_Msk;
pub const GFXMMU_LUTxH_LO_Pos: u32 = 0;
pub const GFXMMU_LUTxH_LO_Msk: u32 = 0x3FFFF << GFXMMU_LUTxH_LO_Pos;
pub const GFXMMU_LUTxH_LO: u32 = GFXMMU_LUTxH_LO_Msk;
pub const GFXTIM_CR_TES_Pos: u32 = 0;
pub const GFXTIM_CR_TES_Msk: u32 = 0x3 << GFXTIM_CR_TES_Pos;
pub const GFXTIM_CR_TES: u32 = GFXTIM_CR_TES_Msk;
pub const GFXTIM_CR_TES_0: u32 = 0x1 << GFXTIM_CR_TES_Pos;
pub const GFXTIM_CR_TES_1: u32 = 0x2 << GFXTIM_CR_TES_Pos;
pub const GFXTIM_CR_TEPOL_Pos: u32 = 4;
pub const GFXTIM_CR_TEPOL_Msk: u32 = 0x1 << GFXTIM_CR_TEPOL_Pos;
pub const GFXTIM_CR_TEPOL: u32 = GFXTIM_CR_TEPOL_Msk;
pub const GFXTIM_CR_SYNCS_Pos: u32 = 8;
pub const GFXTIM_CR_SYNCS_Msk: u32 = 0x3 << GFXTIM_CR_SYNCS_Pos;
pub const GFXTIM_CR_SYNCS: u32 = GFXTIM_CR_SYNCS_Msk;
pub const GFXTIM_CR_SYNCS_0: u32 = 0x1 << GFXTIM_CR_SYNCS_Pos;
pub const GFXTIM_CR_SYNCS_1: u32 = 0x2 << GFXTIM_CR_SYNCS_Pos;
pub const GFXTIM_CR_FCCOE_Pos: u32 = 16;
pub const GFXTIM_CR_FCCOE_Msk: u32 = 0x1 << GFXTIM_CR_FCCOE_Pos;
pub const GFXTIM_CR_FCCOE: u32 = GFXTIM_CR_FCCOE_Msk;
pub const GFXTIM_CR_LCCOE_Pos: u32 = 17;
pub const GFXTIM_CR_LCCOE_Msk: u32 = 0x1 << GFXTIM_CR_LCCOE_Pos;
pub const GFXTIM_CR_LCCOE: u32 = GFXTIM_CR_LCCOE_Msk;
pub const GFXTIM_CGCR_LCS_Pos: u32 = 0;
pub const GFXTIM_CGCR_LCS_Msk: u32 = 0x7 << GFXTIM_CGCR_LCS_Pos;
pub const GFXTIM_CGCR_LCS: u32 = GFXTIM_CGCR_LCS_Msk;
pub const GFXTIM_CGCR_LCS_0: u32 = 0x1 << GFXTIM_CGCR_LCS_Pos;
pub const GFXTIM_CGCR_LCS_1: u32 = 0x2 << GFXTIM_CGCR_LCS_Pos;
pub const GFXTIM_CGCR_LCS_2: u32 = 0x4 << GFXTIM_CGCR_LCS_Pos;
pub const GFXTIM_CGCR_LCCCS_Pos: u32 = 4;
pub const GFXTIM_CGCR_LCCCS_Msk: u32 = 0x1 << GFXTIM_CGCR_LCCCS_Pos;
pub const GFXTIM_CGCR_LCCCS: u32 = GFXTIM_CGCR_LCCCS_Msk;
pub const GFXTIM_CGCR_LCCFR_Pos: u32 = 8;
pub const GFXTIM_CGCR_LCCFR_Msk: u32 = 0x1 << GFXTIM_CGCR_LCCFR_Pos;
pub const GFXTIM_CGCR_LCCFR: u32 = GFXTIM_CGCR_LCCFR_Msk;
pub const GFXTIM_CGCR_LCCHRS_Pos: u32 = 12;
pub const GFXTIM_CGCR_LCCHRS_Msk: u32 = 0x7 << GFXTIM_CGCR_LCCHRS_Pos;
pub const GFXTIM_CGCR_LCCHRS: u32 = GFXTIM_CGCR_LCCHRS_Msk;
pub const GFXTIM_CGCR_LCCHRS_0: u32 = 0x1 << GFXTIM_CGCR_LCCHRS_Pos;
pub const GFXTIM_CGCR_LCCHRS_1: u32 = 0x2 << GFXTIM_CGCR_LCCHRS_Pos;
pub const GFXTIM_CGCR_LCCHRS_2: u32 = 0x4 << GFXTIM_CGCR_LCCHRS_Pos;
pub const GFXTIM_CGCR_FCS_Pos: u32 = 16;
pub const GFXTIM_CGCR_FCS_Msk: u32 = 0x7 << GFXTIM_CGCR_FCS_Pos;
pub const GFXTIM_CGCR_FCS: u32 = GFXTIM_CGCR_FCS_Msk;
pub const GFXTIM_CGCR_FCS_0: u32 = 0x1 << GFXTIM_CGCR_FCS_Pos;
pub const GFXTIM_CGCR_FCS_1: u32 = 0x2 << GFXTIM_CGCR_FCS_Pos;
pub const GFXTIM_CGCR_FCS_2: u32 = 0x4 << GFXTIM_CGCR_FCS_Pos;
pub const GFXTIM_CGCR_FCCCS_Pos: u32 = 20;
pub const GFXTIM_CGCR_FCCCS_Msk: u32 = 0x7 << GFXTIM_CGCR_FCCCS_Pos;
pub const GFXTIM_CGCR_FCCCS: u32 = GFXTIM_CGCR_FCCCS_Msk;
pub const GFXTIM_CGCR_FCCCS_0: u32 = 0x1 << GFXTIM_CGCR_FCCCS_Pos;
pub const GFXTIM_CGCR_FCCCS_1: u32 = 0x2 << GFXTIM_CGCR_FCCCS_Pos;
pub const GFXTIM_CGCR_FCCCS_2: u32 = 0x4 << GFXTIM_CGCR_FCCCS_Pos;
pub const GFXTIM_CGCR_FCCFR_Pos: u32 = 24;
pub const GFXTIM_CGCR_FCCFR_Msk: u32 = 0x1 << GFXTIM_CGCR_FCCFR_Pos;
pub const GFXTIM_CGCR_FCCFR: u32 = GFXTIM_CGCR_FCCFR_Msk;
pub const GFXTIM_CGCR_FCCHRS_Pos: u32 = 28;
pub const GFXTIM_CGCR_FCCHRS_Msk: u32 = 0x7 << GFXTIM_CGCR_FCCHRS_Pos;
pub const GFXTIM_CGCR_FCCHRS: u32 = GFXTIM_CGCR_FCCHRS_Msk;
pub const GFXTIM_CGCR_FCCHRS_0: u32 = 0x1 << GFXTIM_CGCR_FCCHRS_Pos;
pub const GFXTIM_CGCR_FCCHRS_1: u32 = 0x2 << GFXTIM_CGCR_FCCHRS_Pos;
pub const GFXTIM_CGCR_FCCHRS_2: u32 = 0x4 << GFXTIM_CGCR_FCCHRS_Pos;
pub const GFXTIM_TCR_AFCEN_Pos: u32 = 0;
pub const GFXTIM_TCR_AFCEN_Msk: u32 = 0x1 << GFXTIM_TCR_AFCEN_Pos;
pub const GFXTIM_TCR_AFCEN: u32 = GFXTIM_TCR_AFCEN_Msk;
pub const GFXTIM_TCR_FAFCR_Pos: u32 = 1;
pub const GFXTIM_TCR_FAFCR_Msk: u32 = 0x1 << GFXTIM_TCR_FAFCR_Pos;
pub const GFXTIM_TCR_FAFCR: u32 = GFXTIM_TCR_FAFCR_Msk;
pub const GFXTIM_TCR_ALCEN_Pos: u32 = 4;
pub const GFXTIM_TCR_ALCEN_Msk: u32 = 0x1 << GFXTIM_TCR_ALCEN_Pos;
pub const GFXTIM_TCR_ALCEN: u32 = GFXTIM_TCR_ALCEN_Msk;
pub const GFXTIM_TCR_FALCR_Pos: u32 = 5;
pub const GFXTIM_TCR_FALCR_Msk: u32 = 0x1 << GFXTIM_TCR_FALCR_Pos;
pub const GFXTIM_TCR_FALCR: u32 = GFXTIM_TCR_FALCR_Msk;
pub const GFXTIM_TCR_RFC1EN_Pos: u32 = 16;
pub const GFXTIM_TCR_RFC1EN_Msk: u32 = 0x1 << GFXTIM_TCR_RFC1EN_Pos;
pub const GFXTIM_TCR_RFC1EN: u32 = GFXTIM_TCR_RFC1EN_Msk;
pub const GFXTIM_TCR_RFC1CM_Pos: u32 = 17;
pub const GFXTIM_TCR_RFC1CM_Msk: u32 = 0x1 << GFXTIM_TCR_RFC1CM_Pos;
pub const GFXTIM_TCR_RFC1CM: u32 = GFXTIM_TCR_RFC1CM_Msk;
pub const GFXTIM_TCR_FRFC1R_Pos: u32 = 18;
pub const GFXTIM_TCR_FRFC1R_Msk: u32 = 0x1 << GFXTIM_TCR_FRFC1R_Pos;
pub const GFXTIM_TCR_FRFC1R: u32 = GFXTIM_TCR_FRFC1R_Msk;
pub const GFXTIM_TCR_RFC2EN_Pos: u32 = 20;
pub const GFXTIM_TCR_RFC2EN_Msk: u32 = 0x1 << GFXTIM_TCR_RFC2EN_Pos;
pub const GFXTIM_TCR_RFC2EN: u32 = GFXTIM_TCR_RFC2EN_Msk;
pub const GFXTIM_TCR_RFC2CM_Pos: u32 = 21;
pub const GFXTIM_TCR_RFC2CM_Msk: u32 = 0x1 << GFXTIM_TCR_RFC2CM_Pos;
pub const GFXTIM_TCR_RFC2CM: u32 = GFXTIM_TCR_RFC2CM_Msk;
pub const GFXTIM_TCR_FRFC2R_Pos: u32 = 22;
pub const GFXTIM_TCR_FRFC2R_Msk: u32 = 0x1 << GFXTIM_TCR_FRFC2R_Pos;
pub const GFXTIM_TCR_FRFC2R: u32 = GFXTIM_TCR_FRFC2R_Msk;
pub const GFXTIM_TDR_AFCDIS_Pos: u32 = 0;
pub const GFXTIM_TDR_AFCDIS_Msk: u32 = 0x1 << GFXTIM_TDR_AFCDIS_Pos;
pub const GFXTIM_TDR_AFCDIS: u32 = GFXTIM_TDR_AFCDIS_Msk;
pub const GFXTIM_TDR_ALCDIS_Pos: u32 = 4;
pub const GFXTIM_TDR_ALCDIS_Msk: u32 = 0x1 << GFXTIM_TDR_ALCDIS_Pos;
pub const GFXTIM_TDR_ALCDIS: u32 = GFXTIM_TDR_ALCDIS_Msk;
pub const GFXTIM_TDR_RFC1DIS_Pos: u32 = 16;
pub const GFXTIM_TDR_RFC1DIS_Msk: u32 = 0x1 << GFXTIM_TDR_RFC1DIS_Pos;
pub const GFXTIM_TDR_RFC1DIS: u32 = GFXTIM_TDR_RFC1DIS_Msk;
pub const GFXTIM_TDR_RFC2DIS_Pos: u32 = 20;
pub const GFXTIM_TDR_RFC2DIS_Msk: u32 = 0x1 << GFXTIM_TDR_RFC2DIS_Pos;
pub const GFXTIM_TDR_RFC2DIS: u32 = GFXTIM_TDR_RFC2DIS_Msk;
pub const GFXTIM_EVCR_EV1EN_Pos: u32 = 0;
pub const GFXTIM_EVCR_EV1EN_Msk: u32 = 0x1 << GFXTIM_EVCR_EV1EN_Pos;
pub const GFXTIM_EVCR_EV1EN: u32 = GFXTIM_EVCR_EV1EN_Msk;
pub const GFXTIM_EVCR_EV2EN_Pos: u32 = 1;
pub const GFXTIM_EVCR_EV2EN_Msk: u32 = 0x1 << GFXTIM_EVCR_EV2EN_Pos;
pub const GFXTIM_EVCR_EV2EN: u32 = GFXTIM_EVCR_EV2EN_Msk;
pub const GFXTIM_EVCR_EV3EN_Pos: u32 = 2;
pub const GFXTIM_EVCR_EV3EN_Msk: u32 = 0x1 << GFXTIM_EVCR_EV3EN_Pos;
pub const GFXTIM_EVCR_EV3EN: u32 = GFXTIM_EVCR_EV3EN_Msk;
pub const GFXTIM_EVCR_EV4EN_Pos: u32 = 3;
pub const GFXTIM_EVCR_EV4EN_Msk: u32 = 0x1 << GFXTIM_EVCR_EV4EN_Pos;
pub const GFXTIM_EVCR_EV4EN: u32 = GFXTIM_EVCR_EV4EN_Msk;
pub const GFXTIM_EVSR_LES1_Pos: u32 = 0;
pub const GFXTIM_EVSR_LES1_Msk: u32 = 0x7 << GFXTIM_EVSR_LES1_Pos;
pub const GFXTIM_EVSR_LES1: u32 = GFXTIM_EVSR_LES1_Msk;
pub const GFXTIM_EVSR_LES1_0: u32 = 0x1 << GFXTIM_EVSR_LES1_Pos;
pub const GFXTIM_EVSR_LES1_1: u32 = 0x2 << GFXTIM_EVSR_LES1_Pos;
pub const GFXTIM_EVSR_LES1_2: u32 = 0x4 << GFXTIM_EVSR_LES1_Pos;
pub const GFXTIM_EVSR_FES1_Pos: u32 = 4;
pub const GFXTIM_EVSR_FES1_Msk: u32 = 0x7 << GFXTIM_EVSR_FES1_Pos;
pub const GFXTIM_EVSR_FES1: u32 = GFXTIM_EVSR_FES1_Msk;
pub const GFXTIM_EVSR_FES1_0: u32 = 0x1 << GFXTIM_EVSR_FES1_Pos;
pub const GFXTIM_EVSR_FES1_1: u32 = 0x2 << GFXTIM_EVSR_FES1_Pos;
pub const GFXTIM_EVSR_FES1_2: u32 = 0x4 << GFXTIM_EVSR_FES1_Pos;
pub const GFXTIM_EVSR_LES2_Pos: u32 = 8;
pub const GFXTIM_EVSR_LES2_Msk: u32 = 0x7 << GFXTIM_EVSR_LES2_Pos;
pub const GFXTIM_EVSR_LES2: u32 = GFXTIM_EVSR_LES2_Msk;
pub const GFXTIM_EVSR_LES2_0: u32 = 0x1 << GFXTIM_EVSR_LES2_Pos;
pub const GFXTIM_EVSR_LES2_1: u32 = 0x2 << GFXTIM_EVSR_LES2_Pos;
pub const GFXTIM_EVSR_LES2_2: u32 = 0x4 << GFXTIM_EVSR_LES2_Pos;
pub const GFXTIM_EVSR_FES2_Pos: u32 = 12;
pub const GFXTIM_EVSR_FES2_Msk: u32 = 0x7 << GFXTIM_EVSR_FES2_Pos;
pub const GFXTIM_EVSR_FES2: u32 = GFXTIM_EVSR_FES2_Msk;
pub const GFXTIM_EVSR_FES2_0: u32 = 0x1 << GFXTIM_EVSR_FES2_Pos;
pub const GFXTIM_EVSR_FES2_1: u32 = 0x2 << GFXTIM_EVSR_FES2_Pos;
pub const GFXTIM_EVSR_FES2_2: u32 = 0x4 << GFXTIM_EVSR_FES2_Pos;
pub const GFXTIM_EVSR_LES3_Pos: u32 = 16;
pub const GFXTIM_EVSR_LES3_Msk: u32 = 0x7 << GFXTIM_EVSR_LES3_Pos;
pub const GFXTIM_EVSR_LES3: u32 = GFXTIM_EVSR_LES3_Msk;
pub const GFXTIM_EVSR_LES3_0: u32 = 0x1 << GFXTIM_EVSR_LES3_Pos;
pub const GFXTIM_EVSR_LES3_1: u32 = 0x2 << GFXTIM_EVSR_LES3_Pos;
pub const GFXTIM_EVSR_LES3_2: u32 = 0x4 << GFXTIM_EVSR_LES3_Pos;
pub const GFXTIM_EVSR_FES3_Pos: u32 = 20;
pub const GFXTIM_EVSR_FES3_Msk: u32 = 0x7 << GFXTIM_EVSR_FES3_Pos;
pub const GFXTIM_EVSR_FES3: u32 = GFXTIM_EVSR_FES3_Msk;
pub const GFXTIM_EVSR_FES3_0: u32 = 0x1 << GFXTIM_EVSR_FES3_Pos;
pub const GFXTIM_EVSR_FES3_1: u32 = 0x2 << GFXTIM_EVSR_FES3_Pos;
pub const GFXTIM_EVSR_FES3_2: u32 = 0x4 << GFXTIM_EVSR_FES3_Pos;
pub const GFXTIM_EVSR_LES4_Pos: u32 = 24;
pub const GFXTIM_EVSR_LES4_Msk: u32 = 0x7 << GFXTIM_EVSR_LES4_Pos;
pub const GFXTIM_EVSR_LES4: u32 = GFXTIM_EVSR_LES4_Msk;
pub const GFXTIM_EVSR_LES4_0: u32 = 0x1 << GFXTIM_EVSR_LES4_Pos;
pub const GFXTIM_EVSR_LES4_1: u32 = 0x2 << GFXTIM_EVSR_LES4_Pos;
pub const GFXTIM_EVSR_LES4_2: u32 = 0x4 << GFXTIM_EVSR_LES4_Pos;
pub const GFXTIM_EVSR_FES4_Pos: u32 = 28;
pub const GFXTIM_EVSR_FES4_Msk: u32 = 0x7 << GFXTIM_EVSR_FES4_Pos;
pub const GFXTIM_EVSR_FES4: u32 = GFXTIM_EVSR_FES4_Msk;
pub const GFXTIM_EVSR_FES4_0: u32 = 0x1 << GFXTIM_EVSR_FES4_Pos;
pub const GFXTIM_EVSR_FES4_1: u32 = 0x2 << GFXTIM_EVSR_FES4_Pos;
pub const GFXTIM_EVSR_FES4_2: u32 = 0x4 << GFXTIM_EVSR_FES4_Pos;
pub const GFXTIM_WDGTCR_WDGEN_Pos: u32 = 0;
pub const GFXTIM_WDGTCR_WDGEN_Msk: u32 = 0x1 << GFXTIM_WDGTCR_WDGEN_Pos;
pub const GFXTIM_WDGTCR_WDGEN: u32 = GFXTIM_WDGTCR_WDGEN_Msk;
pub const GFXTIM_WDGTCR_WDGDIS_Pos: u32 = 1;
pub const GFXTIM_WDGTCR_WDGDIS_Msk: u32 = 0x1 << GFXTIM_WDGTCR_WDGDIS_Pos;
pub const GFXTIM_WDGTCR_WDGDIS: u32 = GFXTIM_WDGTCR_WDGDIS_Msk;
pub const GFXTIM_WDGTCR_WDGS_Pos: u32 = 2;
pub const GFXTIM_WDGTCR_WDGS_Msk: u32 = 0x1 << GFXTIM_WDGTCR_WDGS_Pos;
pub const GFXTIM_WDGTCR_WDGS: u32 = GFXTIM_WDGTCR_WDGS_Msk;
pub const GFXTIM_WDGTCR_WDGHRC_Pos: u32 = 4;
pub const GFXTIM_WDGTCR_WDGHRC_Msk: u32 = 0x3 << GFXTIM_WDGTCR_WDGHRC_Pos;
pub const GFXTIM_WDGTCR_WDGHRC: u32 = GFXTIM_WDGTCR_WDGHRC_Msk;
pub const GFXTIM_WDGTCR_WDGHRC_0: u32 = 0x1 << GFXTIM_WDGTCR_WDGHRC_Pos;
pub const GFXTIM_WDGTCR_WDGHRC_1: u32 = 0x2 << GFXTIM_WDGTCR_WDGHRC_Pos;
pub const GFXTIM_WDGTCR_WDGCS_Pos: u32 = 8;
pub const GFXTIM_WDGTCR_WDGCS_Msk: u32 = 0xF << GFXTIM_WDGTCR_WDGCS_Pos;
pub const GFXTIM_WDGTCR_WDGCS: u32 = GFXTIM_WDGTCR_WDGCS_Msk;
pub const GFXTIM_WDGTCR_WDGCS_0: u32 = 0x1 << GFXTIM_WDGTCR_WDGCS_Pos;
pub const GFXTIM_WDGTCR_WDGCS_1: u32 = 0x2 << GFXTIM_WDGTCR_WDGCS_Pos;
pub const GFXTIM_WDGTCR_WDGCS_2: u32 = 0x4 << GFXTIM_WDGTCR_WDGCS_Pos;
pub const GFXTIM_WDGTCR_WDGCS_3: u32 = 0x8 << GFXTIM_WDGTCR_WDGCS_Pos;
pub const GFXTIM_WDGTCR_FWDGR_Pos: u32 = 16;
pub const GFXTIM_WDGTCR_FWDGR_Msk: u32 = 0x1 << GFXTIM_WDGTCR_FWDGR_Pos;
pub const GFXTIM_WDGTCR_FWDGR: u32 = GFXTIM_WDGTCR_FWDGR_Msk;
pub const GFXTIM_ISR_AFCOF_Pos: u32 = 0;
pub const GFXTIM_ISR_AFCOF_Msk: u32 = 0x1 << GFXTIM_ISR_AFCOF_Pos;
pub const GFXTIM_ISR_AFCOF: u32 = GFXTIM_ISR_AFCOF_Msk;
pub const GFXTIM_ISR_ALCOF_Pos: u32 = 1;
pub const GFXTIM_ISR_ALCOF_Msk: u32 = 0x1 << GFXTIM_ISR_ALCOF_Pos;
pub const GFXTIM_ISR_ALCOF: u32 = GFXTIM_ISR_ALCOF_Msk;
pub const GFXTIM_ISR_TEF_Pos: u32 = 2;
pub const GFXTIM_ISR_TEF_Msk: u32 = 0x1 << GFXTIM_ISR_TEF_Pos;
pub const GFXTIM_ISR_TEF: u32 = GFXTIM_ISR_TEF_Msk;
pub const GFXTIM_ISR_AFCC1F_Pos: u32 = 4;
pub const GFXTIM_ISR_AFCC1F_Msk: u32 = 0x1 << GFXTIM_ISR_AFCC1F_Pos;
pub const GFXTIM_ISR_AFCC1F: u32 = GFXTIM_ISR_AFCC1F_Msk;
pub const GFXTIM_ISR_ALCC1F_Pos: u32 = 8;
pub const GFXTIM_ISR_ALCC1F_Msk: u32 = 0x1 << GFXTIM_ISR_ALCC1F_Pos;
pub const GFXTIM_ISR_ALCC1F: u32 = GFXTIM_ISR_ALCC1F_Msk;
pub const GFXTIM_ISR_ALCC2F_Pos: u32 = 9;
pub const GFXTIM_ISR_ALCC2F_Msk: u32 = 0x1 << GFXTIM_ISR_ALCC2F_Pos;
pub const GFXTIM_ISR_ALCC2F: u32 = GFXTIM_ISR_ALCC2F_Msk;
pub const GFXTIM_ISR_RFC1RF_Pos: u32 = 12;
pub const GFXTIM_ISR_RFC1RF_Msk: u32 = 0x1 << GFXTIM_ISR_RFC1RF_Pos;
pub const GFXTIM_ISR_RFC1RF: u32 = GFXTIM_ISR_RFC1RF_Msk;
pub const GFXTIM_ISR_RFC2RF_Pos: u32 = 13;
pub const GFXTIM_ISR_RFC2RF_Msk: u32 = 0x1 << GFXTIM_ISR_RFC2RF_Pos;
pub const GFXTIM_ISR_RFC2RF: u32 = GFXTIM_ISR_RFC2RF_Msk;
pub const GFXTIM_ISR_EV1F_Pos: u32 = 16;
pub const GFXTIM_ISR_EV1F_Msk: u32 = 0x1 << GFXTIM_ISR_EV1F_Pos;
pub const GFXTIM_ISR_EV1F: u32 = GFXTIM_ISR_EV1F_Msk;
pub const GFXTIM_ISR_EV2F_Pos: u32 = 17;
pub const GFXTIM_ISR_EV2F_Msk: u32 = 0x1 << GFXTIM_ISR_EV2F_Pos;
pub const GFXTIM_ISR_EV2F: u32 = GFXTIM_ISR_EV2F_Msk;
pub const GFXTIM_ISR_EV3F_Pos: u32 = 18;
pub const GFXTIM_ISR_EV3F_Msk: u32 = 0x1 << GFXTIM_ISR_EV3F_Pos;
pub const GFXTIM_ISR_EV3F: u32 = GFXTIM_ISR_EV3F_Msk;
pub const GFXTIM_ISR_EV4F_Pos: u32 = 19;
pub const GFXTIM_ISR_EV4F_Msk: u32 = 0x1 << GFXTIM_ISR_EV4F_Pos;
pub const GFXTIM_ISR_EV4F: u32 = GFXTIM_ISR_EV4F_Msk;
pub const GFXTIM_ISR_WDGAF_Pos: u32 = 24;
pub const GFXTIM_ISR_WDGAF_Msk: u32 = 0x1 << GFXTIM_ISR_WDGAF_Pos;
pub const GFXTIM_ISR_WDGAF: u32 = GFXTIM_ISR_WDGAF_Msk;
pub const GFXTIM_ISR_WDGPF_Pos: u32 = 25;
pub const GFXTIM_ISR_WDGPF_Msk: u32 = 0x1 << GFXTIM_ISR_WDGPF_Pos;
pub const GFXTIM_ISR_WDGPF: u32 = GFXTIM_ISR_WDGPF_Msk;
pub const GFXTIM_ICR_CAFCOF_Pos: u32 = 0;
pub const GFXTIM_ICR_CAFCOF_Msk: u32 = 0x1 << GFXTIM_ICR_CAFCOF_Pos;
pub const GFXTIM_ICR_CAFCOF: u32 = GFXTIM_ICR_CAFCOF_Msk;
pub const GFXTIM_ICR_CALCOF_Pos: u32 = 1;
pub const GFXTIM_ICR_CALCOF_Msk: u32 = 0x1 << GFXTIM_ICR_CALCOF_Pos;
pub const GFXTIM_ICR_CALCOF: u32 = GFXTIM_ICR_CALCOF_Msk;
pub const GFXTIM_ICR_CTEF_Pos: u32 = 2;
pub const GFXTIM_ICR_CTEF_Msk: u32 = 0x1 << GFXTIM_ICR_CTEF_Pos;
pub const GFXTIM_ICR_CTEF: u32 = GFXTIM_ICR_CTEF_Msk;
pub const GFXTIM_ICR_CAFCC1F_Pos: u32 = 4;
pub const GFXTIM_ICR_CAFCC1F_Msk: u32 = 0x1 << GFXTIM_ICR_CAFCC1F_Pos;
pub const GFXTIM_ICR_CAFCC1F: u32 = GFXTIM_ICR_CAFCC1F_Msk;
pub const GFXTIM_ICR_CALCC1F_Pos: u32 = 8;
pub const GFXTIM_ICR_CALCC1F_Msk: u32 = 0x1 << GFXTIM_ICR_CALCC1F_Pos;
pub const GFXTIM_ICR_CALCC1F: u32 = GFXTIM_ICR_CALCC1F_Msk;
pub const GFXTIM_ICR_CALCC2F_Pos: u32 = 9;
pub const GFXTIM_ICR_CALCC2F_Msk: u32 = 0x1 << GFXTIM_ICR_CALCC2F_Pos;
pub const GFXTIM_ICR_CALCC2F: u32 = GFXTIM_ICR_CALCC2F_Msk;
pub const GFXTIM_ICR_CRFC1RF_Pos: u32 = 12;
pub const GFXTIM_ICR_CRFC1RF_Msk: u32 = 0x1 << GFXTIM_ICR_CRFC1RF_Pos;
pub const GFXTIM_ICR_CRFC1RF: u32 = GFXTIM_ICR_CRFC1RF_Msk;
pub const GFXTIM_ICR_CRFC2RF_Pos: u32 = 13;
pub const GFXTIM_ICR_CRFC2RF_Msk: u32 = 0x1 << GFXTIM_ICR_CRFC2RF_Pos;
pub const GFXTIM_ICR_CRFC2RF: u32 = GFXTIM_ICR_CRFC2RF_Msk;
pub const GFXTIM_ICR_CEV1F_Pos: u32 = 16;
pub const GFXTIM_ICR_CEV1F_Msk: u32 = 0x1 << GFXTIM_ICR_CEV1F_Pos;
pub const GFXTIM_ICR_CEV1F: u32 = GFXTIM_ICR_CEV1F_Msk;
pub const GFXTIM_ICR_CEV2F_Pos: u32 = 17;
pub const GFXTIM_ICR_CEV2F_Msk: u32 = 0x1 << GFXTIM_ICR_CEV2F_Pos;
pub const GFXTIM_ICR_CEV2F: u32 = GFXTIM_ICR_CEV2F_Msk;
pub const GFXTIM_ICR_CEV3F_Pos: u32 = 18;
pub const GFXTIM_ICR_CEV3F_Msk: u32 = 0x1 << GFXTIM_ICR_CEV3F_Pos;
pub const GFXTIM_ICR_CEV3F: u32 = GFXTIM_ICR_CEV3F_Msk;
pub const GFXTIM_ICR_CEV4F_Pos: u32 = 19;
pub const GFXTIM_ICR_CEV4F_Msk: u32 = 0x1 << GFXTIM_ICR_CEV4F_Pos;
pub const GFXTIM_ICR_CEV4F: u32 = GFXTIM_ICR_CEV4F_Msk;
pub const GFXTIM_ICR_CWDGAF_Pos: u32 = 24;
pub const GFXTIM_ICR_CWDGAF_Msk: u32 = 0x1 << GFXTIM_ICR_CWDGAF_Pos;
pub const GFXTIM_ICR_CWDGAF: u32 = GFXTIM_ICR_CWDGAF_Msk;
pub const GFXTIM_ICR_CWDGPF_Pos: u32 = 25;
pub const GFXTIM_ICR_CWDGPF_Msk: u32 = 0x1 << GFXTIM_ICR_CWDGPF_Pos;
pub const GFXTIM_ICR_CWDGPF: u32 = GFXTIM_ICR_CWDGPF_Msk;
pub const GFXTIM_IER_AFCOIE_Pos: u32 = 0;
pub const GFXTIM_IER_AFCOIE_Msk: u32 = 0x1 << GFXTIM_IER_AFCOIE_Pos;
pub const GFXTIM_IER_AFCOIE: u32 = GFXTIM_IER_AFCOIE_Msk;
pub const GFXTIM_IER_ALCOIE_Pos: u32 = 1;
pub const GFXTIM_IER_ALCOIE_Msk: u32 = 0x1 << GFXTIM_IER_ALCOIE_Pos;
pub const GFXTIM_IER_ALCOIE: u32 = GFXTIM_IER_ALCOIE_Msk;
pub const GFXTIM_IER_TEIE_Pos: u32 = 2;
pub const GFXTIM_IER_TEIE_Msk: u32 = 0x1 << GFXTIM_IER_TEIE_Pos;
pub const GFXTIM_IER_TEIE: u32 = GFXTIM_IER_TEIE_Msk;
pub const GFXTIM_IER_AFCC1IE_Pos: u32 = 4;
pub const GFXTIM_IER_AFCC1IE_Msk: u32 = 0x1 << GFXTIM_IER_AFCC1IE_Pos;
pub const GFXTIM_IER_AFCC1IE: u32 = GFXTIM_IER_AFCC1IE_Msk;
pub const GFXTIM_IER_ALCC1IE_Pos: u32 = 8;
pub const GFXTIM_IER_ALCC1IE_Msk: u32 = 0x1 << GFXTIM_IER_ALCC1IE_Pos;
pub const GFXTIM_IER_ALCC1IE: u32 = GFXTIM_IER_ALCC1IE_Msk;
pub const GFXTIM_IER_ALCC2IE_Pos: u32 = 9;
pub const GFXTIM_IER_ALCC2IE_Msk: u32 = 0x1 << GFXTIM_IER_ALCC2IE_Pos;
pub const GFXTIM_IER_ALCC2IE: u32 = GFXTIM_IER_ALCC2IE_Msk;
pub const GFXTIM_IER_RFC1RIE_Pos: u32 = 12;
pub const GFXTIM_IER_RFC1RIE_Msk: u32 = 0x1 << GFXTIM_IER_RFC1RIE_Pos;
pub const GFXTIM_IER_RFC1RIE: u32 = GFXTIM_IER_RFC1RIE_Msk;
pub const GFXTIM_IER_RFC2RIE_Pos: u32 = 13;
pub const GFXTIM_IER_RFC2RIE_Msk: u32 = 0x1 << GFXTIM_IER_RFC2RIE_Pos;
pub const GFXTIM_IER_RFC2RIE: u32 = GFXTIM_IER_RFC2RIE_Msk;
pub const GFXTIM_IER_EV1IE_Pos: u32 = 16;
pub const GFXTIM_IER_EV1IE_Msk: u32 = 0x1 << GFXTIM_IER_EV1IE_Pos;
pub const GFXTIM_IER_EV1IE: u32 = GFXTIM_IER_EV1IE_Msk;
pub const GFXTIM_IER_EV2IE_Pos: u32 = 17;
pub const GFXTIM_IER_EV2IE_Msk: u32 = 0x1 << GFXTIM_IER_EV2IE_Pos;
pub const GFXTIM_IER_EV2IE: u32 = GFXTIM_IER_EV2IE_Msk;
pub const GFXTIM_IER_EV3IE_Pos: u32 = 18;
pub const GFXTIM_IER_EV3IE_Msk: u32 = 0x1 << GFXTIM_IER_EV3IE_Pos;
pub const GFXTIM_IER_EV3IE: u32 = GFXTIM_IER_EV3IE_Msk;
pub const GFXTIM_IER_EV4IE_Pos: u32 = 19;
pub const GFXTIM_IER_EV4IE_Msk: u32 = 0x1 << GFXTIM_IER_EV4IE_Pos;
pub const GFXTIM_IER_EV4IE: u32 = GFXTIM_IER_EV4IE_Msk;
pub const GFXTIM_IER_WDGAIE_Pos: u32 = 24;
pub const GFXTIM_IER_WDGAIE_Msk: u32 = 0x1 << GFXTIM_IER_WDGAIE_Pos;
pub const GFXTIM_IER_WDGAIE: u32 = GFXTIM_IER_WDGAIE_Msk;
pub const GFXTIM_IER_WDGPIE_Pos: u32 = 25;
pub const GFXTIM_IER_WDGPIE_Msk: u32 = 0x1 << GFXTIM_IER_WDGPIE_Pos;
pub const GFXTIM_IER_WDGPIE: u32 = GFXTIM_IER_WDGPIE_Msk;
pub const GFXTIM_TSR_AFCS_Pos: u32 = 0;
pub const GFXTIM_TSR_AFCS_Msk: u32 = 0x1 << GFXTIM_TSR_AFCS_Pos;
pub const GFXTIM_TSR_AFCS: u32 = GFXTIM_TSR_AFCS_Msk;
pub const GFXTIM_TSR_ALCS_Pos: u32 = 4;
pub const GFXTIM_TSR_ALCS_Msk: u32 = 0x1 << GFXTIM_TSR_ALCS_Pos;
pub const GFXTIM_TSR_ALCS: u32 = GFXTIM_TSR_ALCS_Msk;
pub const GFXTIM_TSR_RFC1S_Pos: u32 = 16;
pub const GFXTIM_TSR_RFC1S_Msk: u32 = 0x1 << GFXTIM_TSR_RFC1S_Pos;
pub const GFXTIM_TSR_RFC1S: u32 = GFXTIM_TSR_RFC1S_Msk;
pub const GFXTIM_TSR_RFC2S_Pos: u32 = 20;
pub const GFXTIM_TSR_RFC2S_Msk: u32 = 0x1 << GFXTIM_TSR_RFC2S_Pos;
pub const GFXTIM_TSR_RFC2S: u32 = GFXTIM_TSR_RFC2S_Msk;
pub const GFXTIM_LCCRR_RELOAD_Pos: u32 = 0;
pub const GFXTIM_LCCRR_RELOAD_Msk: u32 = 0x3FFFFF << GFXTIM_LCCRR_RELOAD_Pos;
pub const GFXTIM_LCCRR_RELOAD: u32 = GFXTIM_LCCRR_RELOAD_Msk;
pub const GFXTIM_FCCRR_RELOAD_Pos: u32 = 0;
pub const GFXTIM_FCCRR_RELOAD_Msk: u32 = 0xFFF << GFXTIM_FCCRR_RELOAD_Pos;
pub const GFXTIM_FCCRR_RELOAD: u32 = GFXTIM_FCCRR_RELOAD_Msk;
pub const GFXTIM_ATR_LINE_Pos: u32 = 0;
pub const GFXTIM_ATR_LINE_Msk: u32 = 0xFFF << GFXTIM_ATR_LINE_Pos;
pub const GFXTIM_ATR_LINE: u32 = GFXTIM_ATR_LINE_Msk;
pub const GFXTIM_ATR_FRAME_Pos: u32 = 12;
pub const GFXTIM_ATR_FRAME_Msk: u32 = 0xFFFFF << GFXTIM_ATR_FRAME_Pos;
pub const GFXTIM_ATR_FRAME: u32 = GFXTIM_ATR_FRAME_Msk;
pub const GFXTIM_AFCR_FRAME_Pos: u32 = 0;
pub const GFXTIM_AFCR_FRAME_Msk: u32 = 0xFFFFF << GFXTIM_AFCR_FRAME_Pos;
pub const GFXTIM_AFCR_FRAME: u32 = GFXTIM_AFCR_FRAME_Msk;
pub const GFXTIM_ALCR_LINE_Pos: u32 = 0;
pub const GFXTIM_ALCR_LINE_Msk: u32 = 0xFFF << GFXTIM_ALCR_LINE_Pos;
pub const GFXTIM_ALCR_LINE: u32 = GFXTIM_ALCR_LINE_Msk;
pub const GFXTIM_AFCC1R_FRAME_Pos: u32 = 0;
pub const GFXTIM_AFCC1R_FRAME_Msk: u32 = 0xFFFFF << GFXTIM_AFCC1R_FRAME_Pos;
pub const GFXTIM_AFCC1R_FRAME: u32 = GFXTIM_AFCC1R_FRAME_Msk;
pub const GFXTIM_ALCC1R_LINE_Pos: u32 = 0;
pub const GFXTIM_ALCC1R_LINE_Msk: u32 = 0xFFF << GFXTIM_ALCC1R_LINE_Pos;
pub const GFXTIM_ALCC1R_LINE: u32 = GFXTIM_ALCC1R_LINE_Msk;
pub const GFXTIM_ALCC2R_LINE_Pos: u32 = 0;
pub const GFXTIM_ALCC2R_LINE_Msk: u32 = 0xFFF << GFXTIM_ALCC2R_LINE_Pos;
pub const GFXTIM_ALCC2R_LINE: u32 = GFXTIM_ALCC2R_LINE_Msk;
pub const GFXTIM_RFC1R_FRAME_Pos: u32 = 0;
pub const GFXTIM_RFC1R_FRAME_Msk: u32 = 0xFFF << GFXTIM_RFC1R_FRAME_Pos;
pub const GFXTIM_RFC1R_FRAME: u32 = GFXTIM_RFC1R_FRAME_Msk;
pub const GFXTIM_RFC1RR_FRAME_Pos: u32 = 0;
pub const GFXTIM_RFC1RR_FRAME_Msk: u32 = 0xFFF << GFXTIM_RFC1RR_FRAME_Pos;
pub const GFXTIM_RFC1RR_FRAME: u32 = GFXTIM_RFC1RR_FRAME_Msk;
pub const GFXTIM_RFC2R_FRAME_Pos: u32 = 0;
pub const GFXTIM_RFC2R_FRAME_Msk: u32 = 0xFFF << GFXTIM_RFC2R_FRAME_Pos;
pub const GFXTIM_RFC2R_FRAME: u32 = GFXTIM_RFC2R_FRAME_Msk;
pub const GFXTIM_RFC2RR_FRAME_Pos: u32 = 0;
pub const GFXTIM_RFC2RR_FRAME_Msk: u32 = 0xFFF << GFXTIM_RFC2RR_FRAME_Pos;
pub const GFXTIM_RFC2RR_FRAME: u32 = GFXTIM_RFC2RR_FRAME_Msk;
pub const GFXTIM_WDGCR_VALUE_Pos: u32 = 0;
pub const GFXTIM_WDGCR_VALUE_Msk: u32 = 0xFFFF << GFXTIM_WDGCR_VALUE_Pos;
pub const GFXTIM_WDGCR_VALUE: u32 = GFXTIM_WDGCR_VALUE_Msk;
pub const GFXTIM_WDGRR_RELOAD_Pos: u32 = 0;
pub const GFXTIM_WDGRR_RELOAD_Msk: u32 = 0xFFFF << GFXTIM_WDGRR_RELOAD_Pos;
pub const GFXTIM_WDGRR_RELOAD: u32 = GFXTIM_WDGRR_RELOAD_Msk;
pub const GFXTIM_WDGPAR_PREALARM_Pos: u32 = 0;
pub const GFXTIM_WDGPAR_PREALARM_Msk: u32 = 0xFFFF << GFXTIM_WDGPAR_PREALARM_Pos;
pub const GFXTIM_WDGPAR_PREALARM: u32 = GFXTIM_WDGPAR_PREALARM_Msk;
pub const GFXTIM_VERR_MINREV_Pos: u32 = 0;
pub const GFXTIM_VERR_MINREV_Msk: u32 = 0xF << GFXTIM_VERR_MINREV_Pos;
pub const GFXTIM_VERR_MINREV: u32 = GFXTIM_VERR_MINREV_Msk;
pub const GFXTIM_VERR_MAJREV_Pos: u32 = 4;
pub const GFXTIM_VERR_MAJREV_Msk: u32 = 0xF << GFXTIM_VERR_MAJREV_Pos;
pub const GFXTIM_VERR_MAJREV: u32 = GFXTIM_VERR_MAJREV_Msk;
pub const GFXTIM_IPIDR_ID_Pos: u32 = 0;
pub const GFXTIM_IPIDR_ID_Msk: u32 = 0xFFFFFFFF << GFXTIM_IPIDR_ID_Pos;
pub const GFXTIM_IPIDR_ID: u32 = GFXTIM_IPIDR_ID_Msk;
pub const GFXTIM_SIDR_SID_Pos: u32 = 0;
pub const GFXTIM_SIDR_SID_Msk: u32 = 0xFFFFFFFF << GFXTIM_SIDR_SID_Pos;
pub const GFXTIM_SIDR_SID: u32 = GFXTIM_SIDR_SID_Msk;
pub const GPIO_MODER_MODE0_Pos: u32 = 0;
pub const GPIO_MODER_MODE0_Msk: u32 = 0x3 << GPIO_MODER_MODE0_Pos;
pub const GPIO_MODER_MODE0: u32 = GPIO_MODER_MODE0_Msk;
pub const GPIO_MODER_MODE0_0: u32 = 0x1 << GPIO_MODER_MODE0_Pos;
pub const GPIO_MODER_MODE0_1: u32 = 0x2 << GPIO_MODER_MODE0_Pos;
pub const GPIO_MODER_MODE1_Pos: u32 = 2;
pub const GPIO_MODER_MODE1_Msk: u32 = 0x3 << GPIO_MODER_MODE1_Pos;
pub const GPIO_MODER_MODE1: u32 = GPIO_MODER_MODE1_Msk;
pub const GPIO_MODER_MODE1_0: u32 = 0x1 << GPIO_MODER_MODE1_Pos;
pub const GPIO_MODER_MODE1_1: u32 = 0x2 << GPIO_MODER_MODE1_Pos;
pub const GPIO_MODER_MODE2_Pos: u32 = 4;
pub const GPIO_MODER_MODE2_Msk: u32 = 0x3 << GPIO_MODER_MODE2_Pos;
pub const GPIO_MODER_MODE2: u32 = GPIO_MODER_MODE2_Msk;
pub const GPIO_MODER_MODE2_0: u32 = 0x1 << GPIO_MODER_MODE2_Pos;
pub const GPIO_MODER_MODE2_1: u32 = 0x2 << GPIO_MODER_MODE2_Pos;
pub const GPIO_MODER_MODE3_Pos: u32 = 6;
pub const GPIO_MODER_MODE3_Msk: u32 = 0x3 << GPIO_MODER_MODE3_Pos;
pub const GPIO_MODER_MODE3: u32 = GPIO_MODER_MODE3_Msk;
pub const GPIO_MODER_MODE3_0: u32 = 0x1 << GPIO_MODER_MODE3_Pos;
pub const GPIO_MODER_MODE3_1: u32 = 0x2 << GPIO_MODER_MODE3_Pos;
pub const GPIO_MODER_MODE4_Pos: u32 = 8;
pub const GPIO_MODER_MODE4_Msk: u32 = 0x3 << GPIO_MODER_MODE4_Pos;
pub const GPIO_MODER_MODE4: u32 = GPIO_MODER_MODE4_Msk;
pub const GPIO_MODER_MODE4_0: u32 = 0x1 << GPIO_MODER_MODE4_Pos;
pub const GPIO_MODER_MODE4_1: u32 = 0x2 << GPIO_MODER_MODE4_Pos;
pub const GPIO_MODER_MODE5_Pos: u32 = 10;
pub const GPIO_MODER_MODE5_Msk: u32 = 0x3 << GPIO_MODER_MODE5_Pos;
pub const GPIO_MODER_MODE5: u32 = GPIO_MODER_MODE5_Msk;
pub const GPIO_MODER_MODE5_0: u32 = 0x1 << GPIO_MODER_MODE5_Pos;
pub const GPIO_MODER_MODE5_1: u32 = 0x2 << GPIO_MODER_MODE5_Pos;
pub const GPIO_MODER_MODE6_Pos: u32 = 12;
pub const GPIO_MODER_MODE6_Msk: u32 = 0x3 << GPIO_MODER_MODE6_Pos;
pub const GPIO_MODER_MODE6: u32 = GPIO_MODER_MODE6_Msk;
pub const GPIO_MODER_MODE6_0: u32 = 0x1 << GPIO_MODER_MODE6_Pos;
pub const GPIO_MODER_MODE6_1: u32 = 0x2 << GPIO_MODER_MODE6_Pos;
pub const GPIO_MODER_MODE7_Pos: u32 = 14;
pub const GPIO_MODER_MODE7_Msk: u32 = 0x3 << GPIO_MODER_MODE7_Pos;
pub const GPIO_MODER_MODE7: u32 = GPIO_MODER_MODE7_Msk;
pub const GPIO_MODER_MODE7_0: u32 = 0x1 << GPIO_MODER_MODE7_Pos;
pub const GPIO_MODER_MODE7_1: u32 = 0x2 << GPIO_MODER_MODE7_Pos;
pub const GPIO_MODER_MODE8_Pos: u32 = 16;
pub const GPIO_MODER_MODE8_Msk: u32 = 0x3 << GPIO_MODER_MODE8_Pos;
pub const GPIO_MODER_MODE8: u32 = GPIO_MODER_MODE8_Msk;
pub const GPIO_MODER_MODE8_0: u32 = 0x1 << GPIO_MODER_MODE8_Pos;
pub const GPIO_MODER_MODE8_1: u32 = 0x2 << GPIO_MODER_MODE8_Pos;
pub const GPIO_MODER_MODE9_Pos: u32 = 18;
pub const GPIO_MODER_MODE9_Msk: u32 = 0x3 << GPIO_MODER_MODE9_Pos;
pub const GPIO_MODER_MODE9: u32 = GPIO_MODER_MODE9_Msk;
pub const GPIO_MODER_MODE9_0: u32 = 0x1 << GPIO_MODER_MODE9_Pos;
pub const GPIO_MODER_MODE9_1: u32 = 0x2 << GPIO_MODER_MODE9_Pos;
pub const GPIO_MODER_MODE10_Pos: u32 = 20;
pub const GPIO_MODER_MODE10_Msk: u32 = 0x3 << GPIO_MODER_MODE10_Pos;
pub const GPIO_MODER_MODE10: u32 = GPIO_MODER_MODE10_Msk;
pub const GPIO_MODER_MODE10_0: u32 = 0x1 << GPIO_MODER_MODE10_Pos;
pub const GPIO_MODER_MODE10_1: u32 = 0x2 << GPIO_MODER_MODE10_Pos;
pub const GPIO_MODER_MODE11_Pos: u32 = 22;
pub const GPIO_MODER_MODE11_Msk: u32 = 0x3 << GPIO_MODER_MODE11_Pos;
pub const GPIO_MODER_MODE11: u32 = GPIO_MODER_MODE11_Msk;
pub const GPIO_MODER_MODE11_0: u32 = 0x1 << GPIO_MODER_MODE11_Pos;
pub const GPIO_MODER_MODE11_1: u32 = 0x2 << GPIO_MODER_MODE11_Pos;
pub const GPIO_MODER_MODE12_Pos: u32 = 24;
pub const GPIO_MODER_MODE12_Msk: u32 = 0x3 << GPIO_MODER_MODE12_Pos;
pub const GPIO_MODER_MODE12: u32 = GPIO_MODER_MODE12_Msk;
pub const GPIO_MODER_MODE12_0: u32 = 0x1 << GPIO_MODER_MODE12_Pos;
pub const GPIO_MODER_MODE12_1: u32 = 0x2 << GPIO_MODER_MODE12_Pos;
pub const GPIO_MODER_MODE13_Pos: u32 = 26;
pub const GPIO_MODER_MODE13_Msk: u32 = 0x3 << GPIO_MODER_MODE13_Pos;
pub const GPIO_MODER_MODE13: u32 = GPIO_MODER_MODE13_Msk;
pub const GPIO_MODER_MODE13_0: u32 = 0x1 << GPIO_MODER_MODE13_Pos;
pub const GPIO_MODER_MODE13_1: u32 = 0x2 << GPIO_MODER_MODE13_Pos;
pub const GPIO_MODER_MODE14_Pos: u32 = 28;
pub const GPIO_MODER_MODE14_Msk: u32 = 0x3 << GPIO_MODER_MODE14_Pos;
pub const GPIO_MODER_MODE14: u32 = GPIO_MODER_MODE14_Msk;
pub const GPIO_MODER_MODE14_0: u32 = 0x1 << GPIO_MODER_MODE14_Pos;
pub const GPIO_MODER_MODE14_1: u32 = 0x2 << GPIO_MODER_MODE14_Pos;
pub const GPIO_MODER_MODE15_Pos: u32 = 30;
pub const GPIO_MODER_MODE15_Msk: u32 = 0x3 << GPIO_MODER_MODE15_Pos;
pub const GPIO_MODER_MODE15: u32 = GPIO_MODER_MODE15_Msk;
pub const GPIO_MODER_MODE15_0: u32 = 0x1 << GPIO_MODER_MODE15_Pos;
pub const GPIO_MODER_MODE15_1: u32 = 0x2 << GPIO_MODER_MODE15_Pos;
pub const GPIO_OTYPER_OT0_Pos: u32 = 0;
pub const GPIO_OTYPER_OT0_Msk: u32 = 0x1 << GPIO_OTYPER_OT0_Pos;
pub const GPIO_OTYPER_OT0: u32 = GPIO_OTYPER_OT0_Msk;
pub const GPIO_OTYPER_OT1_Pos: u32 = 1;
pub const GPIO_OTYPER_OT1_Msk: u32 = 0x1 << GPIO_OTYPER_OT1_Pos;
pub const GPIO_OTYPER_OT1: u32 = GPIO_OTYPER_OT1_Msk;
pub const GPIO_OTYPER_OT2_Pos: u32 = 2;
pub const GPIO_OTYPER_OT2_Msk: u32 = 0x1 << GPIO_OTYPER_OT2_Pos;
pub const GPIO_OTYPER_OT2: u32 = GPIO_OTYPER_OT2_Msk;
pub const GPIO_OTYPER_OT3_Pos: u32 = 3;
pub const GPIO_OTYPER_OT3_Msk: u32 = 0x1 << GPIO_OTYPER_OT3_Pos;
pub const GPIO_OTYPER_OT3: u32 = GPIO_OTYPER_OT3_Msk;
pub const GPIO_OTYPER_OT4_Pos: u32 = 4;
pub const GPIO_OTYPER_OT4_Msk: u32 = 0x1 << GPIO_OTYPER_OT4_Pos;
pub const GPIO_OTYPER_OT4: u32 = GPIO_OTYPER_OT4_Msk;
pub const GPIO_OTYPER_OT5_Pos: u32 = 5;
pub const GPIO_OTYPER_OT5_Msk: u32 = 0x1 << GPIO_OTYPER_OT5_Pos;
pub const GPIO_OTYPER_OT5: u32 = GPIO_OTYPER_OT5_Msk;
pub const GPIO_OTYPER_OT6_Pos: u32 = 6;
pub const GPIO_OTYPER_OT6_Msk: u32 = 0x1 << GPIO_OTYPER_OT6_Pos;
pub const GPIO_OTYPER_OT6: u32 = GPIO_OTYPER_OT6_Msk;
pub const GPIO_OTYPER_OT7_Pos: u32 = 7;
pub const GPIO_OTYPER_OT7_Msk: u32 = 0x1 << GPIO_OTYPER_OT7_Pos;
pub const GPIO_OTYPER_OT7: u32 = GPIO_OTYPER_OT7_Msk;
pub const GPIO_OTYPER_OT8_Pos: u32 = 8;
pub const GPIO_OTYPER_OT8_Msk: u32 = 0x1 << GPIO_OTYPER_OT8_Pos;
pub const GPIO_OTYPER_OT8: u32 = GPIO_OTYPER_OT8_Msk;
pub const GPIO_OTYPER_OT9_Pos: u32 = 9;
pub const GPIO_OTYPER_OT9_Msk: u32 = 0x1 << GPIO_OTYPER_OT9_Pos;
pub const GPIO_OTYPER_OT9: u32 = GPIO_OTYPER_OT9_Msk;
pub const GPIO_OTYPER_OT10_Pos: u32 = 10;
pub const GPIO_OTYPER_OT10_Msk: u32 = 0x1 << GPIO_OTYPER_OT10_Pos;
pub const GPIO_OTYPER_OT10: u32 = GPIO_OTYPER_OT10_Msk;
pub const GPIO_OTYPER_OT11_Pos: u32 = 11;
pub const GPIO_OTYPER_OT11_Msk: u32 = 0x1 << GPIO_OTYPER_OT11_Pos;
pub const GPIO_OTYPER_OT11: u32 = GPIO_OTYPER_OT11_Msk;
pub const GPIO_OTYPER_OT12_Pos: u32 = 12;
pub const GPIO_OTYPER_OT12_Msk: u32 = 0x1 << GPIO_OTYPER_OT12_Pos;
pub const GPIO_OTYPER_OT12: u32 = GPIO_OTYPER_OT12_Msk;
pub const GPIO_OTYPER_OT13_Pos: u32 = 13;
pub const GPIO_OTYPER_OT13_Msk: u32 = 0x1 << GPIO_OTYPER_OT13_Pos;
pub const GPIO_OTYPER_OT13: u32 = GPIO_OTYPER_OT13_Msk;
pub const GPIO_OTYPER_OT14_Pos: u32 = 14;
pub const GPIO_OTYPER_OT14_Msk: u32 = 0x1 << GPIO_OTYPER_OT14_Pos;
pub const GPIO_OTYPER_OT14: u32 = GPIO_OTYPER_OT14_Msk;
pub const GPIO_OTYPER_OT15_Pos: u32 = 15;
pub const GPIO_OTYPER_OT15_Msk: u32 = 0x1 << GPIO_OTYPER_OT15_Pos;
pub const GPIO_OTYPER_OT15: u32 = GPIO_OTYPER_OT15_Msk;
pub const GPIO_OSPEEDR_OSPEED0_Pos: u32 = 0;
pub const GPIO_OSPEEDR_OSPEED0_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED0_Pos;
pub const GPIO_OSPEEDR_OSPEED0: u32 = GPIO_OSPEEDR_OSPEED0_Msk;
pub const GPIO_OSPEEDR_OSPEED0_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED0_Pos;
pub const GPIO_OSPEEDR_OSPEED0_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED0_Pos;
pub const GPIO_OSPEEDR_OSPEED1_Pos: u32 = 2;
pub const GPIO_OSPEEDR_OSPEED1_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED1_Pos;
pub const GPIO_OSPEEDR_OSPEED1: u32 = GPIO_OSPEEDR_OSPEED1_Msk;
pub const GPIO_OSPEEDR_OSPEED1_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED1_Pos;
pub const GPIO_OSPEEDR_OSPEED1_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED1_Pos;
pub const GPIO_OSPEEDR_OSPEED2_Pos: u32 = 4;
pub const GPIO_OSPEEDR_OSPEED2_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED2_Pos;
pub const GPIO_OSPEEDR_OSPEED2: u32 = GPIO_OSPEEDR_OSPEED2_Msk;
pub const GPIO_OSPEEDR_OSPEED2_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED2_Pos;
pub const GPIO_OSPEEDR_OSPEED2_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED2_Pos;
pub const GPIO_OSPEEDR_OSPEED3_Pos: u32 = 6;
pub const GPIO_OSPEEDR_OSPEED3_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED3_Pos;
pub const GPIO_OSPEEDR_OSPEED3: u32 = GPIO_OSPEEDR_OSPEED3_Msk;
pub const GPIO_OSPEEDR_OSPEED3_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED3_Pos;
pub const GPIO_OSPEEDR_OSPEED3_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED3_Pos;
pub const GPIO_OSPEEDR_OSPEED4_Pos: u32 = 8;
pub const GPIO_OSPEEDR_OSPEED4_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED4_Pos;
pub const GPIO_OSPEEDR_OSPEED4: u32 = GPIO_OSPEEDR_OSPEED4_Msk;
pub const GPIO_OSPEEDR_OSPEED4_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED4_Pos;
pub const GPIO_OSPEEDR_OSPEED4_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED4_Pos;
pub const GPIO_OSPEEDR_OSPEED5_Pos: u32 = 10;
pub const GPIO_OSPEEDR_OSPEED5_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED5_Pos;
pub const GPIO_OSPEEDR_OSPEED5: u32 = GPIO_OSPEEDR_OSPEED5_Msk;
pub const GPIO_OSPEEDR_OSPEED5_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED5_Pos;
pub const GPIO_OSPEEDR_OSPEED5_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED5_Pos;
pub const GPIO_OSPEEDR_OSPEED6_Pos: u32 = 12;
pub const GPIO_OSPEEDR_OSPEED6_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED6_Pos;
pub const GPIO_OSPEEDR_OSPEED6: u32 = GPIO_OSPEEDR_OSPEED6_Msk;
pub const GPIO_OSPEEDR_OSPEED6_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED6_Pos;
pub const GPIO_OSPEEDR_OSPEED6_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED6_Pos;
pub const GPIO_OSPEEDR_OSPEED7_Pos: u32 = 14;
pub const GPIO_OSPEEDR_OSPEED7_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED7_Pos;
pub const GPIO_OSPEEDR_OSPEED7: u32 = GPIO_OSPEEDR_OSPEED7_Msk;
pub const GPIO_OSPEEDR_OSPEED7_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED7_Pos;
pub const GPIO_OSPEEDR_OSPEED7_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED7_Pos;
pub const GPIO_OSPEEDR_OSPEED8_Pos: u32 = 16;
pub const GPIO_OSPEEDR_OSPEED8_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED8_Pos;
pub const GPIO_OSPEEDR_OSPEED8: u32 = GPIO_OSPEEDR_OSPEED8_Msk;
pub const GPIO_OSPEEDR_OSPEED8_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED8_Pos;
pub const GPIO_OSPEEDR_OSPEED8_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED8_Pos;
pub const GPIO_OSPEEDR_OSPEED9_Pos: u32 = 18;
pub const GPIO_OSPEEDR_OSPEED9_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED9_Pos;
pub const GPIO_OSPEEDR_OSPEED9: u32 = GPIO_OSPEEDR_OSPEED9_Msk;
pub const GPIO_OSPEEDR_OSPEED9_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED9_Pos;
pub const GPIO_OSPEEDR_OSPEED9_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED9_Pos;
pub const GPIO_OSPEEDR_OSPEED10_Pos: u32 = 20;
pub const GPIO_OSPEEDR_OSPEED10_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED10_Pos;
pub const GPIO_OSPEEDR_OSPEED10: u32 = GPIO_OSPEEDR_OSPEED10_Msk;
pub const GPIO_OSPEEDR_OSPEED10_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED10_Pos;
pub const GPIO_OSPEEDR_OSPEED10_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED10_Pos;
pub const GPIO_OSPEEDR_OSPEED11_Pos: u32 = 22;
pub const GPIO_OSPEEDR_OSPEED11_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED11_Pos;
pub const GPIO_OSPEEDR_OSPEED11: u32 = GPIO_OSPEEDR_OSPEED11_Msk;
pub const GPIO_OSPEEDR_OSPEED11_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED11_Pos;
pub const GPIO_OSPEEDR_OSPEED11_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED11_Pos;
pub const GPIO_OSPEEDR_OSPEED12_Pos: u32 = 24;
pub const GPIO_OSPEEDR_OSPEED12_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED12_Pos;
pub const GPIO_OSPEEDR_OSPEED12: u32 = GPIO_OSPEEDR_OSPEED12_Msk;
pub const GPIO_OSPEEDR_OSPEED12_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED12_Pos;
pub const GPIO_OSPEEDR_OSPEED12_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED12_Pos;
pub const GPIO_OSPEEDR_OSPEED13_Pos: u32 = 26;
pub const GPIO_OSPEEDR_OSPEED13_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED13_Pos;
pub const GPIO_OSPEEDR_OSPEED13: u32 = GPIO_OSPEEDR_OSPEED13_Msk;
pub const GPIO_OSPEEDR_OSPEED13_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED13_Pos;
pub const GPIO_OSPEEDR_OSPEED13_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED13_Pos;
pub const GPIO_OSPEEDR_OSPEED14_Pos: u32 = 28;
pub const GPIO_OSPEEDR_OSPEED14_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED14_Pos;
pub const GPIO_OSPEEDR_OSPEED14: u32 = GPIO_OSPEEDR_OSPEED14_Msk;
pub const GPIO_OSPEEDR_OSPEED14_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED14_Pos;
pub const GPIO_OSPEEDR_OSPEED14_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED14_Pos;
pub const GPIO_OSPEEDR_OSPEED15_Pos: u32 = 30;
pub const GPIO_OSPEEDR_OSPEED15_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED15_Pos;
pub const GPIO_OSPEEDR_OSPEED15: u32 = GPIO_OSPEEDR_OSPEED15_Msk;
pub const GPIO_OSPEEDR_OSPEED15_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED15_Pos;
pub const GPIO_OSPEEDR_OSPEED15_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED15_Pos;
pub const GPIO_PUPDR_PUPD0_Pos: u32 = 0;
pub const GPIO_PUPDR_PUPD0_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD0_Pos;
pub const GPIO_PUPDR_PUPD0: u32 = GPIO_PUPDR_PUPD0_Msk;
pub const GPIO_PUPDR_PUPD0_0: u32 = 0x1 << GPIO_PUPDR_PUPD0_Pos;
pub const GPIO_PUPDR_PUPD0_1: u32 = 0x2 << GPIO_PUPDR_PUPD0_Pos;
pub const GPIO_PUPDR_PUPD1_Pos: u32 = 2;
pub const GPIO_PUPDR_PUPD1_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD1_Pos;
pub const GPIO_PUPDR_PUPD1: u32 = GPIO_PUPDR_PUPD1_Msk;
pub const GPIO_PUPDR_PUPD1_0: u32 = 0x1 << GPIO_PUPDR_PUPD1_Pos;
pub const GPIO_PUPDR_PUPD1_1: u32 = 0x2 << GPIO_PUPDR_PUPD1_Pos;
pub const GPIO_PUPDR_PUPD2_Pos: u32 = 4;
pub const GPIO_PUPDR_PUPD2_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD2_Pos;
pub const GPIO_PUPDR_PUPD2: u32 = GPIO_PUPDR_PUPD2_Msk;
pub const GPIO_PUPDR_PUPD2_0: u32 = 0x1 << GPIO_PUPDR_PUPD2_Pos;
pub const GPIO_PUPDR_PUPD2_1: u32 = 0x2 << GPIO_PUPDR_PUPD2_Pos;
pub const GPIO_PUPDR_PUPD3_Pos: u32 = 6;
pub const GPIO_PUPDR_PUPD3_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD3_Pos;
pub const GPIO_PUPDR_PUPD3: u32 = GPIO_PUPDR_PUPD3_Msk;
pub const GPIO_PUPDR_PUPD3_0: u32 = 0x1 << GPIO_PUPDR_PUPD3_Pos;
pub const GPIO_PUPDR_PUPD3_1: u32 = 0x2 << GPIO_PUPDR_PUPD3_Pos;
pub const GPIO_PUPDR_PUPD4_Pos: u32 = 8;
pub const GPIO_PUPDR_PUPD4_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD4_Pos;
pub const GPIO_PUPDR_PUPD4: u32 = GPIO_PUPDR_PUPD4_Msk;
pub const GPIO_PUPDR_PUPD4_0: u32 = 0x1 << GPIO_PUPDR_PUPD4_Pos;
pub const GPIO_PUPDR_PUPD4_1: u32 = 0x2 << GPIO_PUPDR_PUPD4_Pos;
pub const GPIO_PUPDR_PUPD5_Pos: u32 = 10;
pub const GPIO_PUPDR_PUPD5_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD5_Pos;
pub const GPIO_PUPDR_PUPD5: u32 = GPIO_PUPDR_PUPD5_Msk;
pub const GPIO_PUPDR_PUPD5_0: u32 = 0x1 << GPIO_PUPDR_PUPD5_Pos;
pub const GPIO_PUPDR_PUPD5_1: u32 = 0x2 << GPIO_PUPDR_PUPD5_Pos;
pub const GPIO_PUPDR_PUPD6_Pos: u32 = 12;
pub const GPIO_PUPDR_PUPD6_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD6_Pos;
pub const GPIO_PUPDR_PUPD6: u32 = GPIO_PUPDR_PUPD6_Msk;
pub const GPIO_PUPDR_PUPD6_0: u32 = 0x1 << GPIO_PUPDR_PUPD6_Pos;
pub const GPIO_PUPDR_PUPD6_1: u32 = 0x2 << GPIO_PUPDR_PUPD6_Pos;
pub const GPIO_PUPDR_PUPD7_Pos: u32 = 14;
pub const GPIO_PUPDR_PUPD7_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD7_Pos;
pub const GPIO_PUPDR_PUPD7: u32 = GPIO_PUPDR_PUPD7_Msk;
pub const GPIO_PUPDR_PUPD7_0: u32 = 0x1 << GPIO_PUPDR_PUPD7_Pos;
pub const GPIO_PUPDR_PUPD7_1: u32 = 0x2 << GPIO_PUPDR_PUPD7_Pos;
pub const GPIO_PUPDR_PUPD8_Pos: u32 = 16;
pub const GPIO_PUPDR_PUPD8_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD8_Pos;
pub const GPIO_PUPDR_PUPD8: u32 = GPIO_PUPDR_PUPD8_Msk;
pub const GPIO_PUPDR_PUPD8_0: u32 = 0x1 << GPIO_PUPDR_PUPD8_Pos;
pub const GPIO_PUPDR_PUPD8_1: u32 = 0x2 << GPIO_PUPDR_PUPD8_Pos;
pub const GPIO_PUPDR_PUPD9_Pos: u32 = 18;
pub const GPIO_PUPDR_PUPD9_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD9_Pos;
pub const GPIO_PUPDR_PUPD9: u32 = GPIO_PUPDR_PUPD9_Msk;
pub const GPIO_PUPDR_PUPD9_0: u32 = 0x1 << GPIO_PUPDR_PUPD9_Pos;
pub const GPIO_PUPDR_PUPD9_1: u32 = 0x2 << GPIO_PUPDR_PUPD9_Pos;
pub const GPIO_PUPDR_PUPD10_Pos: u32 = 20;
pub const GPIO_PUPDR_PUPD10_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD10_Pos;
pub const GPIO_PUPDR_PUPD10: u32 = GPIO_PUPDR_PUPD10_Msk;
pub const GPIO_PUPDR_PUPD10_0: u32 = 0x1 << GPIO_PUPDR_PUPD10_Pos;
pub const GPIO_PUPDR_PUPD10_1: u32 = 0x2 << GPIO_PUPDR_PUPD10_Pos;
pub const GPIO_PUPDR_PUPD11_Pos: u32 = 22;
pub const GPIO_PUPDR_PUPD11_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD11_Pos;
pub const GPIO_PUPDR_PUPD11: u32 = GPIO_PUPDR_PUPD11_Msk;
pub const GPIO_PUPDR_PUPD11_0: u32 = 0x1 << GPIO_PUPDR_PUPD11_Pos;
pub const GPIO_PUPDR_PUPD11_1: u32 = 0x2 << GPIO_PUPDR_PUPD11_Pos;
pub const GPIO_PUPDR_PUPD12_Pos: u32 = 24;
pub const GPIO_PUPDR_PUPD12_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD12_Pos;
pub const GPIO_PUPDR_PUPD12: u32 = GPIO_PUPDR_PUPD12_Msk;
pub const GPIO_PUPDR_PUPD12_0: u32 = 0x1 << GPIO_PUPDR_PUPD12_Pos;
pub const GPIO_PUPDR_PUPD12_1: u32 = 0x2 << GPIO_PUPDR_PUPD12_Pos;
pub const GPIO_PUPDR_PUPD13_Pos: u32 = 26;
pub const GPIO_PUPDR_PUPD13_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD13_Pos;
pub const GPIO_PUPDR_PUPD13: u32 = GPIO_PUPDR_PUPD13_Msk;
pub const GPIO_PUPDR_PUPD13_0: u32 = 0x1 << GPIO_PUPDR_PUPD13_Pos;
pub const GPIO_PUPDR_PUPD13_1: u32 = 0x2 << GPIO_PUPDR_PUPD13_Pos;
pub const GPIO_PUPDR_PUPD14_Pos: u32 = 28;
pub const GPIO_PUPDR_PUPD14_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD14_Pos;
pub const GPIO_PUPDR_PUPD14: u32 = GPIO_PUPDR_PUPD14_Msk;
pub const GPIO_PUPDR_PUPD14_0: u32 = 0x1 << GPIO_PUPDR_PUPD14_Pos;
pub const GPIO_PUPDR_PUPD14_1: u32 = 0x2 << GPIO_PUPDR_PUPD14_Pos;
pub const GPIO_PUPDR_PUPD15_Pos: u32 = 30;
pub const GPIO_PUPDR_PUPD15_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD15_Pos;
pub const GPIO_PUPDR_PUPD15: u32 = GPIO_PUPDR_PUPD15_Msk;
pub const GPIO_PUPDR_PUPD15_0: u32 = 0x1 << GPIO_PUPDR_PUPD15_Pos;
pub const GPIO_PUPDR_PUPD15_1: u32 = 0x2 << GPIO_PUPDR_PUPD15_Pos;
pub const GPIO_IDR_ID0_Pos: u32 = 0;
pub const GPIO_IDR_ID0_Msk: u32 = 0x1 << GPIO_IDR_ID0_Pos;
pub const GPIO_IDR_ID0: u32 = GPIO_IDR_ID0_Msk;
pub const GPIO_IDR_ID1_Pos: u32 = 1;
pub const GPIO_IDR_ID1_Msk: u32 = 0x1 << GPIO_IDR_ID1_Pos;
pub const GPIO_IDR_ID1: u32 = GPIO_IDR_ID1_Msk;
pub const GPIO_IDR_ID2_Pos: u32 = 2;
pub const GPIO_IDR_ID2_Msk: u32 = 0x1 << GPIO_IDR_ID2_Pos;
pub const GPIO_IDR_ID2: u32 = GPIO_IDR_ID2_Msk;
pub const GPIO_IDR_ID3_Pos: u32 = 3;
pub const GPIO_IDR_ID3_Msk: u32 = 0x1 << GPIO_IDR_ID3_Pos;
pub const GPIO_IDR_ID3: u32 = GPIO_IDR_ID3_Msk;
pub const GPIO_IDR_ID4_Pos: u32 = 4;
pub const GPIO_IDR_ID4_Msk: u32 = 0x1 << GPIO_IDR_ID4_Pos;
pub const GPIO_IDR_ID4: u32 = GPIO_IDR_ID4_Msk;
pub const GPIO_IDR_ID5_Pos: u32 = 5;
pub const GPIO_IDR_ID5_Msk: u32 = 0x1 << GPIO_IDR_ID5_Pos;
pub const GPIO_IDR_ID5: u32 = GPIO_IDR_ID5_Msk;
pub const GPIO_IDR_ID6_Pos: u32 = 6;
pub const GPIO_IDR_ID6_Msk: u32 = 0x1 << GPIO_IDR_ID6_Pos;
pub const GPIO_IDR_ID6: u32 = GPIO_IDR_ID6_Msk;
pub const GPIO_IDR_ID7_Pos: u32 = 7;
pub const GPIO_IDR_ID7_Msk: u32 = 0x1 << GPIO_IDR_ID7_Pos;
pub const GPIO_IDR_ID7: u32 = GPIO_IDR_ID7_Msk;
pub const GPIO_IDR_ID8_Pos: u32 = 8;
pub const GPIO_IDR_ID8_Msk: u32 = 0x1 << GPIO_IDR_ID8_Pos;
pub const GPIO_IDR_ID8: u32 = GPIO_IDR_ID8_Msk;
pub const GPIO_IDR_ID9_Pos: u32 = 9;
pub const GPIO_IDR_ID9_Msk: u32 = 0x1 << GPIO_IDR_ID9_Pos;
pub const GPIO_IDR_ID9: u32 = GPIO_IDR_ID9_Msk;
pub const GPIO_IDR_ID10_Pos: u32 = 10;
pub const GPIO_IDR_ID10_Msk: u32 = 0x1 << GPIO_IDR_ID10_Pos;
pub const GPIO_IDR_ID10: u32 = GPIO_IDR_ID10_Msk;
pub const GPIO_IDR_ID11_Pos: u32 = 11;
pub const GPIO_IDR_ID11_Msk: u32 = 0x1 << GPIO_IDR_ID11_Pos;
pub const GPIO_IDR_ID11: u32 = GPIO_IDR_ID11_Msk;
pub const GPIO_IDR_ID12_Pos: u32 = 12;
pub const GPIO_IDR_ID12_Msk: u32 = 0x1 << GPIO_IDR_ID12_Pos;
pub const GPIO_IDR_ID12: u32 = GPIO_IDR_ID12_Msk;
pub const GPIO_IDR_ID13_Pos: u32 = 13;
pub const GPIO_IDR_ID13_Msk: u32 = 0x1 << GPIO_IDR_ID13_Pos;
pub const GPIO_IDR_ID13: u32 = GPIO_IDR_ID13_Msk;
pub const GPIO_IDR_ID14_Pos: u32 = 14;
pub const GPIO_IDR_ID14_Msk: u32 = 0x1 << GPIO_IDR_ID14_Pos;
pub const GPIO_IDR_ID14: u32 = GPIO_IDR_ID14_Msk;
pub const GPIO_IDR_ID15_Pos: u32 = 15;
pub const GPIO_IDR_ID15_Msk: u32 = 0x1 << GPIO_IDR_ID15_Pos;
pub const GPIO_IDR_ID15: u32 = GPIO_IDR_ID15_Msk;
pub const GPIO_ODR_OD0_Pos: u32 = 0;
pub const GPIO_ODR_OD0_Msk: u32 = 0x1 << GPIO_ODR_OD0_Pos;
pub const GPIO_ODR_OD0: u32 = GPIO_ODR_OD0_Msk;
pub const GPIO_ODR_OD1_Pos: u32 = 1;
pub const GPIO_ODR_OD1_Msk: u32 = 0x1 << GPIO_ODR_OD1_Pos;
pub const GPIO_ODR_OD1: u32 = GPIO_ODR_OD1_Msk;
pub const GPIO_ODR_OD2_Pos: u32 = 2;
pub const GPIO_ODR_OD2_Msk: u32 = 0x1 << GPIO_ODR_OD2_Pos;
pub const GPIO_ODR_OD2: u32 = GPIO_ODR_OD2_Msk;
pub const GPIO_ODR_OD3_Pos: u32 = 3;
pub const GPIO_ODR_OD3_Msk: u32 = 0x1 << GPIO_ODR_OD3_Pos;
pub const GPIO_ODR_OD3: u32 = GPIO_ODR_OD3_Msk;
pub const GPIO_ODR_OD4_Pos: u32 = 4;
pub const GPIO_ODR_OD4_Msk: u32 = 0x1 << GPIO_ODR_OD4_Pos;
pub const GPIO_ODR_OD4: u32 = GPIO_ODR_OD4_Msk;
pub const GPIO_ODR_OD5_Pos: u32 = 5;
pub const GPIO_ODR_OD5_Msk: u32 = 0x1 << GPIO_ODR_OD5_Pos;
pub const GPIO_ODR_OD5: u32 = GPIO_ODR_OD5_Msk;
pub const GPIO_ODR_OD6_Pos: u32 = 6;
pub const GPIO_ODR_OD6_Msk: u32 = 0x1 << GPIO_ODR_OD6_Pos;
pub const GPIO_ODR_OD6: u32 = GPIO_ODR_OD6_Msk;
pub const GPIO_ODR_OD7_Pos: u32 = 7;
pub const GPIO_ODR_OD7_Msk: u32 = 0x1 << GPIO_ODR_OD7_Pos;
pub const GPIO_ODR_OD7: u32 = GPIO_ODR_OD7_Msk;
pub const GPIO_ODR_OD8_Pos: u32 = 8;
pub const GPIO_ODR_OD8_Msk: u32 = 0x1 << GPIO_ODR_OD8_Pos;
pub const GPIO_ODR_OD8: u32 = GPIO_ODR_OD8_Msk;
pub const GPIO_ODR_OD9_Pos: u32 = 9;
pub const GPIO_ODR_OD9_Msk: u32 = 0x1 << GPIO_ODR_OD9_Pos;
pub const GPIO_ODR_OD9: u32 = GPIO_ODR_OD9_Msk;
pub const GPIO_ODR_OD10_Pos: u32 = 10;
pub const GPIO_ODR_OD10_Msk: u32 = 0x1 << GPIO_ODR_OD10_Pos;
pub const GPIO_ODR_OD10: u32 = GPIO_ODR_OD10_Msk;
pub const GPIO_ODR_OD11_Pos: u32 = 11;
pub const GPIO_ODR_OD11_Msk: u32 = 0x1 << GPIO_ODR_OD11_Pos;
pub const GPIO_ODR_OD11: u32 = GPIO_ODR_OD11_Msk;
pub const GPIO_ODR_OD12_Pos: u32 = 12;
pub const GPIO_ODR_OD12_Msk: u32 = 0x1 << GPIO_ODR_OD12_Pos;
pub const GPIO_ODR_OD12: u32 = GPIO_ODR_OD12_Msk;
pub const GPIO_ODR_OD13_Pos: u32 = 13;
pub const GPIO_ODR_OD13_Msk: u32 = 0x1 << GPIO_ODR_OD13_Pos;
pub const GPIO_ODR_OD13: u32 = GPIO_ODR_OD13_Msk;
pub const GPIO_ODR_OD14_Pos: u32 = 14;
pub const GPIO_ODR_OD14_Msk: u32 = 0x1 << GPIO_ODR_OD14_Pos;
pub const GPIO_ODR_OD14: u32 = GPIO_ODR_OD14_Msk;
pub const GPIO_ODR_OD15_Pos: u32 = 15;
pub const GPIO_ODR_OD15_Msk: u32 = 0x1 << GPIO_ODR_OD15_Pos;
pub const GPIO_ODR_OD15: u32 = GPIO_ODR_OD15_Msk;
pub const GPIO_BSRR_BS0_Pos: u32 = 0;
pub const GPIO_BSRR_BS0_Msk: u32 = 0x1 << GPIO_BSRR_BS0_Pos;
pub const GPIO_BSRR_BS0: u32 = GPIO_BSRR_BS0_Msk;
pub const GPIO_BSRR_BS1_Pos: u32 = 1;
pub const GPIO_BSRR_BS1_Msk: u32 = 0x1 << GPIO_BSRR_BS1_Pos;
pub const GPIO_BSRR_BS1: u32 = GPIO_BSRR_BS1_Msk;
pub const GPIO_BSRR_BS2_Pos: u32 = 2;
pub const GPIO_BSRR_BS2_Msk: u32 = 0x1 << GPIO_BSRR_BS2_Pos;
pub const GPIO_BSRR_BS2: u32 = GPIO_BSRR_BS2_Msk;
pub const GPIO_BSRR_BS3_Pos: u32 = 3;
pub const GPIO_BSRR_BS3_Msk: u32 = 0x1 << GPIO_BSRR_BS3_Pos;
pub const GPIO_BSRR_BS3: u32 = GPIO_BSRR_BS3_Msk;
pub const GPIO_BSRR_BS4_Pos: u32 = 4;
pub const GPIO_BSRR_BS4_Msk: u32 = 0x1 << GPIO_BSRR_BS4_Pos;
pub const GPIO_BSRR_BS4: u32 = GPIO_BSRR_BS4_Msk;
pub const GPIO_BSRR_BS5_Pos: u32 = 5;
pub const GPIO_BSRR_BS5_Msk: u32 = 0x1 << GPIO_BSRR_BS5_Pos;
pub const GPIO_BSRR_BS5: u32 = GPIO_BSRR_BS5_Msk;
pub const GPIO_BSRR_BS6_Pos: u32 = 6;
pub const GPIO_BSRR_BS6_Msk: u32 = 0x1 << GPIO_BSRR_BS6_Pos;
pub const GPIO_BSRR_BS6: u32 = GPIO_BSRR_BS6_Msk;
pub const GPIO_BSRR_BS7_Pos: u32 = 7;
pub const GPIO_BSRR_BS7_Msk: u32 = 0x1 << GPIO_BSRR_BS7_Pos;
pub const GPIO_BSRR_BS7: u32 = GPIO_BSRR_BS7_Msk;
pub const GPIO_BSRR_BS8_Pos: u32 = 8;
pub const GPIO_BSRR_BS8_Msk: u32 = 0x1 << GPIO_BSRR_BS8_Pos;
pub const GPIO_BSRR_BS8: u32 = GPIO_BSRR_BS8_Msk;
pub const GPIO_BSRR_BS9_Pos: u32 = 9;
pub const GPIO_BSRR_BS9_Msk: u32 = 0x1 << GPIO_BSRR_BS9_Pos;
pub const GPIO_BSRR_BS9: u32 = GPIO_BSRR_BS9_Msk;
pub const GPIO_BSRR_BS10_Pos: u32 = 10;
pub const GPIO_BSRR_BS10_Msk: u32 = 0x1 << GPIO_BSRR_BS10_Pos;
pub const GPIO_BSRR_BS10: u32 = GPIO_BSRR_BS10_Msk;
pub const GPIO_BSRR_BS11_Pos: u32 = 11;
pub const GPIO_BSRR_BS11_Msk: u32 = 0x1 << GPIO_BSRR_BS11_Pos;
pub const GPIO_BSRR_BS11: u32 = GPIO_BSRR_BS11_Msk;
pub const GPIO_BSRR_BS12_Pos: u32 = 12;
pub const GPIO_BSRR_BS12_Msk: u32 = 0x1 << GPIO_BSRR_BS12_Pos;
pub const GPIO_BSRR_BS12: u32 = GPIO_BSRR_BS12_Msk;
pub const GPIO_BSRR_BS13_Pos: u32 = 13;
pub const GPIO_BSRR_BS13_Msk: u32 = 0x1 << GPIO_BSRR_BS13_Pos;
pub const GPIO_BSRR_BS13: u32 = GPIO_BSRR_BS13_Msk;
pub const GPIO_BSRR_BS14_Pos: u32 = 14;
pub const GPIO_BSRR_BS14_Msk: u32 = 0x1 << GPIO_BSRR_BS14_Pos;
pub const GPIO_BSRR_BS14: u32 = GPIO_BSRR_BS14_Msk;
pub const GPIO_BSRR_BS15_Pos: u32 = 15;
pub const GPIO_BSRR_BS15_Msk: u32 = 0x1 << GPIO_BSRR_BS15_Pos;
pub const GPIO_BSRR_BS15: u32 = GPIO_BSRR_BS15_Msk;
pub const GPIO_BSRR_BR0_Pos: u32 = 16;
pub const GPIO_BSRR_BR0_Msk: u32 = 0x1 << GPIO_BSRR_BR0_Pos;
pub const GPIO_BSRR_BR0: u32 = GPIO_BSRR_BR0_Msk;
pub const GPIO_BSRR_BR1_Pos: u32 = 17;
pub const GPIO_BSRR_BR1_Msk: u32 = 0x1 << GPIO_BSRR_BR1_Pos;
pub const GPIO_BSRR_BR1: u32 = GPIO_BSRR_BR1_Msk;
pub const GPIO_BSRR_BR2_Pos: u32 = 18;
pub const GPIO_BSRR_BR2_Msk: u32 = 0x1 << GPIO_BSRR_BR2_Pos;
pub const GPIO_BSRR_BR2: u32 = GPIO_BSRR_BR2_Msk;
pub const GPIO_BSRR_BR3_Pos: u32 = 19;
pub const GPIO_BSRR_BR3_Msk: u32 = 0x1 << GPIO_BSRR_BR3_Pos;
pub const GPIO_BSRR_BR3: u32 = GPIO_BSRR_BR3_Msk;
pub const GPIO_BSRR_BR4_Pos: u32 = 20;
pub const GPIO_BSRR_BR4_Msk: u32 = 0x1 << GPIO_BSRR_BR4_Pos;
pub const GPIO_BSRR_BR4: u32 = GPIO_BSRR_BR4_Msk;
pub const GPIO_BSRR_BR5_Pos: u32 = 21;
pub const GPIO_BSRR_BR5_Msk: u32 = 0x1 << GPIO_BSRR_BR5_Pos;
pub const GPIO_BSRR_BR5: u32 = GPIO_BSRR_BR5_Msk;
pub const GPIO_BSRR_BR6_Pos: u32 = 22;
pub const GPIO_BSRR_BR6_Msk: u32 = 0x1 << GPIO_BSRR_BR6_Pos;
pub const GPIO_BSRR_BR6: u32 = GPIO_BSRR_BR6_Msk;
pub const GPIO_BSRR_BR7_Pos: u32 = 23;
pub const GPIO_BSRR_BR7_Msk: u32 = 0x1 << GPIO_BSRR_BR7_Pos;
pub const GPIO_BSRR_BR7: u32 = GPIO_BSRR_BR7_Msk;
pub const GPIO_BSRR_BR8_Pos: u32 = 24;
pub const GPIO_BSRR_BR8_Msk: u32 = 0x1 << GPIO_BSRR_BR8_Pos;
pub const GPIO_BSRR_BR8: u32 = GPIO_BSRR_BR8_Msk;
pub const GPIO_BSRR_BR9_Pos: u32 = 25;
pub const GPIO_BSRR_BR9_Msk: u32 = 0x1 << GPIO_BSRR_BR9_Pos;
pub const GPIO_BSRR_BR9: u32 = GPIO_BSRR_BR9_Msk;
pub const GPIO_BSRR_BR10_Pos: u32 = 26;
pub const GPIO_BSRR_BR10_Msk: u32 = 0x1 << GPIO_BSRR_BR10_Pos;
pub const GPIO_BSRR_BR10: u32 = GPIO_BSRR_BR10_Msk;
pub const GPIO_BSRR_BR11_Pos: u32 = 27;
pub const GPIO_BSRR_BR11_Msk: u32 = 0x1 << GPIO_BSRR_BR11_Pos;
pub const GPIO_BSRR_BR11: u32 = GPIO_BSRR_BR11_Msk;
pub const GPIO_BSRR_BR12_Pos: u32 = 28;
pub const GPIO_BSRR_BR12_Msk: u32 = 0x1 << GPIO_BSRR_BR12_Pos;
pub const GPIO_BSRR_BR12: u32 = GPIO_BSRR_BR12_Msk;
pub const GPIO_BSRR_BR13_Pos: u32 = 29;
pub const GPIO_BSRR_BR13_Msk: u32 = 0x1 << GPIO_BSRR_BR13_Pos;
pub const GPIO_BSRR_BR13: u32 = GPIO_BSRR_BR13_Msk;
pub const GPIO_BSRR_BR14_Pos: u32 = 30;
pub const GPIO_BSRR_BR14_Msk: u32 = 0x1 << GPIO_BSRR_BR14_Pos;
pub const GPIO_BSRR_BR14: u32 = GPIO_BSRR_BR14_Msk;
pub const GPIO_BSRR_BR15_Pos: u32 = 31;
pub const GPIO_BSRR_BR15_Msk: u32 = 0x1 << GPIO_BSRR_BR15_Pos;
pub const GPIO_BSRR_BR15: u32 = GPIO_BSRR_BR15_Msk;
pub const GPIO_LCKR_LCK0_Pos: u32 = 0;
pub const GPIO_LCKR_LCK0_Msk: u32 = 0x1 << GPIO_LCKR_LCK0_Pos;
pub const GPIO_LCKR_LCK0: u32 = GPIO_LCKR_LCK0_Msk;
pub const GPIO_LCKR_LCK1_Pos: u32 = 1;
pub const GPIO_LCKR_LCK1_Msk: u32 = 0x1 << GPIO_LCKR_LCK1_Pos;
pub const GPIO_LCKR_LCK1: u32 = GPIO_LCKR_LCK1_Msk;
pub const GPIO_LCKR_LCK2_Pos: u32 = 2;
pub const GPIO_LCKR_LCK2_Msk: u32 = 0x1 << GPIO_LCKR_LCK2_Pos;
pub const GPIO_LCKR_LCK2: u32 = GPIO_LCKR_LCK2_Msk;
pub const GPIO_LCKR_LCK3_Pos: u32 = 3;
pub const GPIO_LCKR_LCK3_Msk: u32 = 0x1 << GPIO_LCKR_LCK3_Pos;
pub const GPIO_LCKR_LCK3: u32 = GPIO_LCKR_LCK3_Msk;
pub const GPIO_LCKR_LCK4_Pos: u32 = 4;
pub const GPIO_LCKR_LCK4_Msk: u32 = 0x1 << GPIO_LCKR_LCK4_Pos;
pub const GPIO_LCKR_LCK4: u32 = GPIO_LCKR_LCK4_Msk;
pub const GPIO_LCKR_LCK5_Pos: u32 = 5;
pub const GPIO_LCKR_LCK5_Msk: u32 = 0x1 << GPIO_LCKR_LCK5_Pos;
pub const GPIO_LCKR_LCK5: u32 = GPIO_LCKR_LCK5_Msk;
pub const GPIO_LCKR_LCK6_Pos: u32 = 6;
pub const GPIO_LCKR_LCK6_Msk: u32 = 0x1 << GPIO_LCKR_LCK6_Pos;
pub const GPIO_LCKR_LCK6: u32 = GPIO_LCKR_LCK6_Msk;
pub const GPIO_LCKR_LCK7_Pos: u32 = 7;
pub const GPIO_LCKR_LCK7_Msk: u32 = 0x1 << GPIO_LCKR_LCK7_Pos;
pub const GPIO_LCKR_LCK7: u32 = GPIO_LCKR_LCK7_Msk;
pub const GPIO_LCKR_LCK8_Pos: u32 = 8;
pub const GPIO_LCKR_LCK8_Msk: u32 = 0x1 << GPIO_LCKR_LCK8_Pos;
pub const GPIO_LCKR_LCK8: u32 = GPIO_LCKR_LCK8_Msk;
pub const GPIO_LCKR_LCK9_Pos: u32 = 9;
pub const GPIO_LCKR_LCK9_Msk: u32 = 0x1 << GPIO_LCKR_LCK9_Pos;
pub const GPIO_LCKR_LCK9: u32 = GPIO_LCKR_LCK9_Msk;
pub const GPIO_LCKR_LCK10_Pos: u32 = 10;
pub const GPIO_LCKR_LCK10_Msk: u32 = 0x1 << GPIO_LCKR_LCK10_Pos;
pub const GPIO_LCKR_LCK10: u32 = GPIO_LCKR_LCK10_Msk;
pub const GPIO_LCKR_LCK11_Pos: u32 = 11;
pub const GPIO_LCKR_LCK11_Msk: u32 = 0x1 << GPIO_LCKR_LCK11_Pos;
pub const GPIO_LCKR_LCK11: u32 = GPIO_LCKR_LCK11_Msk;
pub const GPIO_LCKR_LCK12_Pos: u32 = 12;
pub const GPIO_LCKR_LCK12_Msk: u32 = 0x1 << GPIO_LCKR_LCK12_Pos;
pub const GPIO_LCKR_LCK12: u32 = GPIO_LCKR_LCK12_Msk;
pub const GPIO_LCKR_LCK13_Pos: u32 = 13;
pub const GPIO_LCKR_LCK13_Msk: u32 = 0x1 << GPIO_LCKR_LCK13_Pos;
pub const GPIO_LCKR_LCK13: u32 = GPIO_LCKR_LCK13_Msk;
pub const GPIO_LCKR_LCK14_Pos: u32 = 14;
pub const GPIO_LCKR_LCK14_Msk: u32 = 0x1 << GPIO_LCKR_LCK14_Pos;
pub const GPIO_LCKR_LCK14: u32 = GPIO_LCKR_LCK14_Msk;
pub const GPIO_LCKR_LCK15_Pos: u32 = 15;
pub const GPIO_LCKR_LCK15_Msk: u32 = 0x1 << GPIO_LCKR_LCK15_Pos;
pub const GPIO_LCKR_LCK15: u32 = GPIO_LCKR_LCK15_Msk;
pub const GPIO_LCKR_LCKK_Pos: u32 = 16;
pub const GPIO_LCKR_LCKK_Msk: u32 = 0x1 << GPIO_LCKR_LCKK_Pos;
pub const GPIO_LCKR_LCKK: u32 = GPIO_LCKR_LCKK_Msk;
pub const GPIO_AFRL_AFSEL0_Pos: u32 = 0;
pub const GPIO_AFRL_AFSEL0_Msk: u32 = 0xF << GPIO_AFRL_AFSEL0_Pos;
pub const GPIO_AFRL_AFSEL0: u32 = GPIO_AFRL_AFSEL0_Msk;
pub const GPIO_AFRL_AFSEL0_0: u32 = 0x1 << GPIO_AFRL_AFSEL0_Pos;
pub const GPIO_AFRL_AFSEL0_1: u32 = 0x2 << GPIO_AFRL_AFSEL0_Pos;
pub const GPIO_AFRL_AFSEL0_2: u32 = 0x4 << GPIO_AFRL_AFSEL0_Pos;
pub const GPIO_AFRL_AFSEL0_3: u32 = 0x8 << GPIO_AFRL_AFSEL0_Pos;
pub const GPIO_AFRL_AFSEL1_Pos: u32 = 4;
pub const GPIO_AFRL_AFSEL1_Msk: u32 = 0xF << GPIO_AFRL_AFSEL1_Pos;
pub const GPIO_AFRL_AFSEL1: u32 = GPIO_AFRL_AFSEL1_Msk;
pub const GPIO_AFRL_AFSEL1_0: u32 = 0x1 << GPIO_AFRL_AFSEL1_Pos;
pub const GPIO_AFRL_AFSEL1_1: u32 = 0x2 << GPIO_AFRL_AFSEL1_Pos;
pub const GPIO_AFRL_AFSEL1_2: u32 = 0x4 << GPIO_AFRL_AFSEL1_Pos;
pub const GPIO_AFRL_AFSEL1_3: u32 = 0x8 << GPIO_AFRL_AFSEL1_Pos;
pub const GPIO_AFRL_AFSEL2_Pos: u32 = 8;
pub const GPIO_AFRL_AFSEL2_Msk: u32 = 0xF << GPIO_AFRL_AFSEL2_Pos;
pub const GPIO_AFRL_AFSEL2: u32 = GPIO_AFRL_AFSEL2_Msk;
pub const GPIO_AFRL_AFSEL2_0: u32 = 0x1 << GPIO_AFRL_AFSEL2_Pos;
pub const GPIO_AFRL_AFSEL2_1: u32 = 0x2 << GPIO_AFRL_AFSEL2_Pos;
pub const GPIO_AFRL_AFSEL2_2: u32 = 0x4 << GPIO_AFRL_AFSEL2_Pos;
pub const GPIO_AFRL_AFSEL2_3: u32 = 0x8 << GPIO_AFRL_AFSEL2_Pos;
pub const GPIO_AFRL_AFSEL3_Pos: u32 = 12;
pub const GPIO_AFRL_AFSEL3_Msk: u32 = 0xF << GPIO_AFRL_AFSEL3_Pos;
pub const GPIO_AFRL_AFSEL3: u32 = GPIO_AFRL_AFSEL3_Msk;
pub const GPIO_AFRL_AFSEL3_0: u32 = 0x1 << GPIO_AFRL_AFSEL3_Pos;
pub const GPIO_AFRL_AFSEL3_1: u32 = 0x2 << GPIO_AFRL_AFSEL3_Pos;
pub const GPIO_AFRL_AFSEL3_2: u32 = 0x4 << GPIO_AFRL_AFSEL3_Pos;
pub const GPIO_AFRL_AFSEL3_3: u32 = 0x8 << GPIO_AFRL_AFSEL3_Pos;
pub const GPIO_AFRL_AFSEL4_Pos: u32 = 16;
pub const GPIO_AFRL_AFSEL4_Msk: u32 = 0xF << GPIO_AFRL_AFSEL4_Pos;
pub const GPIO_AFRL_AFSEL4: u32 = GPIO_AFRL_AFSEL4_Msk;
pub const GPIO_AFRL_AFSEL4_0: u32 = 0x1 << GPIO_AFRL_AFSEL4_Pos;
pub const GPIO_AFRL_AFSEL4_1: u32 = 0x2 << GPIO_AFRL_AFSEL4_Pos;
pub const GPIO_AFRL_AFSEL4_2: u32 = 0x4 << GPIO_AFRL_AFSEL4_Pos;
pub const GPIO_AFRL_AFSEL4_3: u32 = 0x8 << GPIO_AFRL_AFSEL4_Pos;
pub const GPIO_AFRL_AFSEL5_Pos: u32 = 20;
pub const GPIO_AFRL_AFSEL5_Msk: u32 = 0xF << GPIO_AFRL_AFSEL5_Pos;
pub const GPIO_AFRL_AFSEL5: u32 = GPIO_AFRL_AFSEL5_Msk;
pub const GPIO_AFRL_AFSEL5_0: u32 = 0x1 << GPIO_AFRL_AFSEL5_Pos;
pub const GPIO_AFRL_AFSEL5_1: u32 = 0x2 << GPIO_AFRL_AFSEL5_Pos;
pub const GPIO_AFRL_AFSEL5_2: u32 = 0x4 << GPIO_AFRL_AFSEL5_Pos;
pub const GPIO_AFRL_AFSEL5_3: u32 = 0x8 << GPIO_AFRL_AFSEL5_Pos;
pub const GPIO_AFRL_AFSEL6_Pos: u32 = 24;
pub const GPIO_AFRL_AFSEL6_Msk: u32 = 0xF << GPIO_AFRL_AFSEL6_Pos;
pub const GPIO_AFRL_AFSEL6: u32 = GPIO_AFRL_AFSEL6_Msk;
pub const GPIO_AFRL_AFSEL6_0: u32 = 0x1 << GPIO_AFRL_AFSEL6_Pos;
pub const GPIO_AFRL_AFSEL6_1: u32 = 0x2 << GPIO_AFRL_AFSEL6_Pos;
pub const GPIO_AFRL_AFSEL6_2: u32 = 0x4 << GPIO_AFRL_AFSEL6_Pos;
pub const GPIO_AFRL_AFSEL6_3: u32 = 0x8 << GPIO_AFRL_AFSEL6_Pos;
pub const GPIO_AFRL_AFSEL7_Pos: u32 = 28;
pub const GPIO_AFRL_AFSEL7_Msk: u32 = 0xF << GPIO_AFRL_AFSEL7_Pos;
pub const GPIO_AFRL_AFSEL7: u32 = GPIO_AFRL_AFSEL7_Msk;
pub const GPIO_AFRL_AFSEL7_0: u32 = 0x1 << GPIO_AFRL_AFSEL7_Pos;
pub const GPIO_AFRL_AFSEL7_1: u32 = 0x2 << GPIO_AFRL_AFSEL7_Pos;
pub const GPIO_AFRL_AFSEL7_2: u32 = 0x4 << GPIO_AFRL_AFSEL7_Pos;
pub const GPIO_AFRL_AFSEL7_3: u32 = 0x8 << GPIO_AFRL_AFSEL7_Pos;
pub const GPIO_AFRH_AFSEL8_Pos: u32 = 0;
pub const GPIO_AFRH_AFSEL8_Msk: u32 = 0xF << GPIO_AFRH_AFSEL8_Pos;
pub const GPIO_AFRH_AFSEL8: u32 = GPIO_AFRH_AFSEL8_Msk;
pub const GPIO_AFRH_AFSEL8_0: u32 = 0x1 << GPIO_AFRH_AFSEL8_Pos;
pub const GPIO_AFRH_AFSEL8_1: u32 = 0x2 << GPIO_AFRH_AFSEL8_Pos;
pub const GPIO_AFRH_AFSEL8_2: u32 = 0x4 << GPIO_AFRH_AFSEL8_Pos;
pub const GPIO_AFRH_AFSEL8_3: u32 = 0x8 << GPIO_AFRH_AFSEL8_Pos;
pub const GPIO_AFRH_AFSEL9_Pos: u32 = 4;
pub const GPIO_AFRH_AFSEL9_Msk: u32 = 0xF << GPIO_AFRH_AFSEL9_Pos;
pub const GPIO_AFRH_AFSEL9: u32 = GPIO_AFRH_AFSEL9_Msk;
pub const GPIO_AFRH_AFSEL9_0: u32 = 0x1 << GPIO_AFRH_AFSEL9_Pos;
pub const GPIO_AFRH_AFSEL9_1: u32 = 0x2 << GPIO_AFRH_AFSEL9_Pos;
pub const GPIO_AFRH_AFSEL9_2: u32 = 0x4 << GPIO_AFRH_AFSEL9_Pos;
pub const GPIO_AFRH_AFSEL9_3: u32 = 0x8 << GPIO_AFRH_AFSEL9_Pos;
pub const GPIO_AFRH_AFSEL10_Pos: u32 = 8;
pub const GPIO_AFRH_AFSEL10_Msk: u32 = 0xF << GPIO_AFRH_AFSEL10_Pos;
pub const GPIO_AFRH_AFSEL10: u32 = GPIO_AFRH_AFSEL10_Msk;
pub const GPIO_AFRH_AFSEL10_0: u32 = 0x1 << GPIO_AFRH_AFSEL10_Pos;
pub const GPIO_AFRH_AFSEL10_1: u32 = 0x2 << GPIO_AFRH_AFSEL10_Pos;
pub const GPIO_AFRH_AFSEL10_2: u32 = 0x4 << GPIO_AFRH_AFSEL10_Pos;
pub const GPIO_AFRH_AFSEL10_3: u32 = 0x8 << GPIO_AFRH_AFSEL10_Pos;
pub const GPIO_AFRH_AFSEL11_Pos: u32 = 12;
pub const GPIO_AFRH_AFSEL11_Msk: u32 = 0xF << GPIO_AFRH_AFSEL11_Pos;
pub const GPIO_AFRH_AFSEL11: u32 = GPIO_AFRH_AFSEL11_Msk;
pub const GPIO_AFRH_AFSEL11_0: u32 = 0x1 << GPIO_AFRH_AFSEL11_Pos;
pub const GPIO_AFRH_AFSEL11_1: u32 = 0x2 << GPIO_AFRH_AFSEL11_Pos;
pub const GPIO_AFRH_AFSEL11_2: u32 = 0x4 << GPIO_AFRH_AFSEL11_Pos;
pub const GPIO_AFRH_AFSEL11_3: u32 = 0x8 << GPIO_AFRH_AFSEL11_Pos;
pub const GPIO_AFRH_AFSEL12_Pos: u32 = 16;
pub const GPIO_AFRH_AFSEL12_Msk: u32 = 0xF << GPIO_AFRH_AFSEL12_Pos;
pub const GPIO_AFRH_AFSEL12: u32 = GPIO_AFRH_AFSEL12_Msk;
pub const GPIO_AFRH_AFSEL12_0: u32 = 0x1 << GPIO_AFRH_AFSEL12_Pos;
pub const GPIO_AFRH_AFSEL12_1: u32 = 0x2 << GPIO_AFRH_AFSEL12_Pos;
pub const GPIO_AFRH_AFSEL12_2: u32 = 0x4 << GPIO_AFRH_AFSEL12_Pos;
pub const GPIO_AFRH_AFSEL12_3: u32 = 0x8 << GPIO_AFRH_AFSEL12_Pos;
pub const GPIO_AFRH_AFSEL13_Pos: u32 = 20;
pub const GPIO_AFRH_AFSEL13_Msk: u32 = 0xF << GPIO_AFRH_AFSEL13_Pos;
pub const GPIO_AFRH_AFSEL13: u32 = GPIO_AFRH_AFSEL13_Msk;
pub const GPIO_AFRH_AFSEL13_0: u32 = 0x1 << GPIO_AFRH_AFSEL13_Pos;
pub const GPIO_AFRH_AFSEL13_1: u32 = 0x2 << GPIO_AFRH_AFSEL13_Pos;
pub const GPIO_AFRH_AFSEL13_2: u32 = 0x4 << GPIO_AFRH_AFSEL13_Pos;
pub const GPIO_AFRH_AFSEL13_3: u32 = 0x8 << GPIO_AFRH_AFSEL13_Pos;
pub const GPIO_AFRH_AFSEL14_Pos: u32 = 24;
pub const GPIO_AFRH_AFSEL14_Msk: u32 = 0xF << GPIO_AFRH_AFSEL14_Pos;
pub const GPIO_AFRH_AFSEL14: u32 = GPIO_AFRH_AFSEL14_Msk;
pub const GPIO_AFRH_AFSEL14_0: u32 = 0x1 << GPIO_AFRH_AFSEL14_Pos;
pub const GPIO_AFRH_AFSEL14_1: u32 = 0x2 << GPIO_AFRH_AFSEL14_Pos;
pub const GPIO_AFRH_AFSEL14_2: u32 = 0x4 << GPIO_AFRH_AFSEL14_Pos;
pub const GPIO_AFRH_AFSEL14_3: u32 = 0x8 << GPIO_AFRH_AFSEL14_Pos;
pub const GPIO_AFRH_AFSEL15_Pos: u32 = 28;
pub const GPIO_AFRH_AFSEL15_Msk: u32 = 0xF << GPIO_AFRH_AFSEL15_Pos;
pub const GPIO_AFRH_AFSEL15: u32 = GPIO_AFRH_AFSEL15_Msk;
pub const GPIO_AFRH_AFSEL15_0: u32 = 0x1 << GPIO_AFRH_AFSEL15_Pos;
pub const GPIO_AFRH_AFSEL15_1: u32 = 0x2 << GPIO_AFRH_AFSEL15_Pos;
pub const GPIO_AFRH_AFSEL15_2: u32 = 0x4 << GPIO_AFRH_AFSEL15_Pos;
pub const GPIO_AFRH_AFSEL15_3: u32 = 0x8 << GPIO_AFRH_AFSEL15_Pos;
pub const GPIO_BRR_BR0_Pos: u32 = 0;
pub const GPIO_BRR_BR0_Msk: u32 = 0x1 << GPIO_BRR_BR0_Pos;
pub const GPIO_BRR_BR0: u32 = GPIO_BRR_BR0_Msk;
pub const GPIO_BRR_BR1_Pos: u32 = 1;
pub const GPIO_BRR_BR1_Msk: u32 = 0x1 << GPIO_BRR_BR1_Pos;
pub const GPIO_BRR_BR1: u32 = GPIO_BRR_BR1_Msk;
pub const GPIO_BRR_BR2_Pos: u32 = 2;
pub const GPIO_BRR_BR2_Msk: u32 = 0x1 << GPIO_BRR_BR2_Pos;
pub const GPIO_BRR_BR2: u32 = GPIO_BRR_BR2_Msk;
pub const GPIO_BRR_BR3_Pos: u32 = 3;
pub const GPIO_BRR_BR3_Msk: u32 = 0x1 << GPIO_BRR_BR3_Pos;
pub const GPIO_BRR_BR3: u32 = GPIO_BRR_BR3_Msk;
pub const GPIO_BRR_BR4_Pos: u32 = 4;
pub const GPIO_BRR_BR4_Msk: u32 = 0x1 << GPIO_BRR_BR4_Pos;
pub const GPIO_BRR_BR4: u32 = GPIO_BRR_BR4_Msk;
pub const GPIO_BRR_BR5_Pos: u32 = 5;
pub const GPIO_BRR_BR5_Msk: u32 = 0x1 << GPIO_BRR_BR5_Pos;
pub const GPIO_BRR_BR5: u32 = GPIO_BRR_BR5_Msk;
pub const GPIO_BRR_BR6_Pos: u32 = 6;
pub const GPIO_BRR_BR6_Msk: u32 = 0x1 << GPIO_BRR_BR6_Pos;
pub const GPIO_BRR_BR6: u32 = GPIO_BRR_BR6_Msk;
pub const GPIO_BRR_BR7_Pos: u32 = 7;
pub const GPIO_BRR_BR7_Msk: u32 = 0x1 << GPIO_BRR_BR7_Pos;
pub const GPIO_BRR_BR7: u32 = GPIO_BRR_BR7_Msk;
pub const GPIO_BRR_BR8_Pos: u32 = 8;
pub const GPIO_BRR_BR8_Msk: u32 = 0x1 << GPIO_BRR_BR8_Pos;
pub const GPIO_BRR_BR8: u32 = GPIO_BRR_BR8_Msk;
pub const GPIO_BRR_BR9_Pos: u32 = 9;
pub const GPIO_BRR_BR9_Msk: u32 = 0x1 << GPIO_BRR_BR9_Pos;
pub const GPIO_BRR_BR9: u32 = GPIO_BRR_BR9_Msk;
pub const GPIO_BRR_BR10_Pos: u32 = 10;
pub const GPIO_BRR_BR10_Msk: u32 = 0x1 << GPIO_BRR_BR10_Pos;
pub const GPIO_BRR_BR10: u32 = GPIO_BRR_BR10_Msk;
pub const GPIO_BRR_BR11_Pos: u32 = 11;
pub const GPIO_BRR_BR11_Msk: u32 = 0x1 << GPIO_BRR_BR11_Pos;
pub const GPIO_BRR_BR11: u32 = GPIO_BRR_BR11_Msk;
pub const GPIO_BRR_BR12_Pos: u32 = 12;
pub const GPIO_BRR_BR12_Msk: u32 = 0x1 << GPIO_BRR_BR12_Pos;
pub const GPIO_BRR_BR12: u32 = GPIO_BRR_BR12_Msk;
pub const GPIO_BRR_BR13_Pos: u32 = 13;
pub const GPIO_BRR_BR13_Msk: u32 = 0x1 << GPIO_BRR_BR13_Pos;
pub const GPIO_BRR_BR13: u32 = GPIO_BRR_BR13_Msk;
pub const GPIO_BRR_BR14_Pos: u32 = 14;
pub const GPIO_BRR_BR14_Msk: u32 = 0x1 << GPIO_BRR_BR14_Pos;
pub const GPIO_BRR_BR14: u32 = GPIO_BRR_BR14_Msk;
pub const GPIO_BRR_BR15_Pos: u32 = 15;
pub const GPIO_BRR_BR15_Msk: u32 = 0x1 << GPIO_BRR_BR15_Pos;
pub const GPIO_BRR_BR15: u32 = GPIO_BRR_BR15_Msk;
pub const HASH_CR_INIT_Pos: u32 = 2;
pub const HASH_CR_INIT_Msk: u32 = 0x1 << HASH_CR_INIT_Pos;
pub const HASH_CR_INIT: u32 = HASH_CR_INIT_Msk;
pub const HASH_CR_DMAE_Pos: u32 = 3;
pub const HASH_CR_DMAE_Msk: u32 = 0x1 << HASH_CR_DMAE_Pos;
pub const HASH_CR_DMAE: u32 = HASH_CR_DMAE_Msk;
pub const HASH_CR_DATATYPE_Pos: u32 = 4;
pub const HASH_CR_DATATYPE_Msk: u32 = 0x3 << HASH_CR_DATATYPE_Pos;
pub const HASH_CR_DATATYPE: u32 = HASH_CR_DATATYPE_Msk;
pub const HASH_CR_DATATYPE_0: u32 = 0x1 << HASH_CR_DATATYPE_Pos;
pub const HASH_CR_DATATYPE_1: u32 = 0x2 << HASH_CR_DATATYPE_Pos;
pub const HASH_CR_MODE_Pos: u32 = 6;
pub const HASH_CR_MODE_Msk: u32 = 0x1 << HASH_CR_MODE_Pos;
pub const HASH_CR_MODE: u32 = HASH_CR_MODE_Msk;
pub const HASH_CR_NBW_Pos: u32 = 8;
pub const HASH_CR_NBW_Msk: u32 = 0xF << HASH_CR_NBW_Pos;
pub const HASH_CR_NBW: u32 = HASH_CR_NBW_Msk;
pub const HASH_CR_NBW_0: u32 = 0x1 << HASH_CR_NBW_Pos;
pub const HASH_CR_NBW_1: u32 = 0x2 << HASH_CR_NBW_Pos;
pub const HASH_CR_NBW_2: u32 = 0x4 << HASH_CR_NBW_Pos;
pub const HASH_CR_NBW_3: u32 = 0x8 << HASH_CR_NBW_Pos;
pub const HASH_CR_DINNE_Pos: u32 = 12;
pub const HASH_CR_DINNE_Msk: u32 = 0x1 << HASH_CR_DINNE_Pos;
pub const HASH_CR_DINNE: u32 = HASH_CR_DINNE_Msk;
pub const HASH_CR_MDMAT_Pos: u32 = 13;
pub const HASH_CR_MDMAT_Msk: u32 = 0x1 << HASH_CR_MDMAT_Pos;
pub const HASH_CR_MDMAT: u32 = HASH_CR_MDMAT_Msk;
pub const HASH_CR_LKEY_Pos: u32 = 16;
pub const HASH_CR_LKEY_Msk: u32 = 0x1 << HASH_CR_LKEY_Pos;
pub const HASH_CR_LKEY: u32 = HASH_CR_LKEY_Msk;
pub const HASH_CR_ALGO_Pos: u32 = 17;
pub const HASH_CR_ALGO_Msk: u32 = 0xF << HASH_CR_ALGO_Pos;
pub const HASH_CR_ALGO: u32 = HASH_CR_ALGO_Msk;
pub const HASH_CR_ALGO_0: u32 = 0x1 << HASH_CR_ALGO_Pos;
pub const HASH_CR_ALGO_1: u32 = 0x2 << HASH_CR_ALGO_Pos;
pub const HASH_CR_ALGO_2: u32 = 0x4 << HASH_CR_ALGO_Pos;
pub const HASH_CR_ALGO_3: u32 = 0x8 << HASH_CR_ALGO_Pos;
pub const HASH_STR_NBLW_Pos: u32 = 0;
pub const HASH_STR_NBLW_Msk: u32 = 0x1F << HASH_STR_NBLW_Pos;
pub const HASH_STR_NBLW: u32 = HASH_STR_NBLW_Msk;
pub const HASH_STR_NBLW_0: u32 = 0x01 << HASH_STR_NBLW_Pos;
pub const HASH_STR_NBLW_1: u32 = 0x02 << HASH_STR_NBLW_Pos;
pub const HASH_STR_NBLW_2: u32 = 0x04 << HASH_STR_NBLW_Pos;
pub const HASH_STR_NBLW_3: u32 = 0x08 << HASH_STR_NBLW_Pos;
pub const HASH_STR_NBLW_4: u32 = 0x10 << HASH_STR_NBLW_Pos;
pub const HASH_STR_DCAL_Pos: u32 = 8;
pub const HASH_STR_DCAL_Msk: u32 = 0x1 << HASH_STR_DCAL_Pos;
pub const HASH_STR_DCAL: u32 = HASH_STR_DCAL_Msk;
pub const HASH_IMR_DINIE_Pos: u32 = 0;
pub const HASH_IMR_DINIE_Msk: u32 = 0x1 << HASH_IMR_DINIE_Pos;
pub const HASH_IMR_DINIE: u32 = HASH_IMR_DINIE_Msk;
pub const HASH_IMR_DCIE_Pos: u32 = 1;
pub const HASH_IMR_DCIE_Msk: u32 = 0x1 << HASH_IMR_DCIE_Pos;
pub const HASH_IMR_DCIE: u32 = HASH_IMR_DCIE_Msk;
pub const HASH_SR_DINIS_Pos: u32 = 0;
pub const HASH_SR_DINIS_Msk: u32 = 0x1 << HASH_SR_DINIS_Pos;
pub const HASH_SR_DINIS: u32 = HASH_SR_DINIS_Msk;
pub const HASH_SR_DCIS_Pos: u32 = 1;
pub const HASH_SR_DCIS_Msk: u32 = 0x1 << HASH_SR_DCIS_Pos;
pub const HASH_SR_DCIS: u32 = HASH_SR_DCIS_Msk;
pub const HASH_SR_DMAS_Pos: u32 = 2;
pub const HASH_SR_DMAS_Msk: u32 = 0x1 << HASH_SR_DMAS_Pos;
pub const HASH_SR_DMAS: u32 = HASH_SR_DMAS_Msk;
pub const HASH_SR_BUSY_Pos: u32 = 3;
pub const HASH_SR_BUSY_Msk: u32 = 0x1 << HASH_SR_BUSY_Pos;
pub const HASH_SR_BUSY: u32 = HASH_SR_BUSY_Msk;
pub const HASH_SR_NBWP_Pos: u32 = 9;
pub const HASH_SR_NBWP_Msk: u32 = 0x1F << HASH_SR_NBWP_Pos;
pub const HASH_SR_NBWP: u32 = HASH_SR_NBWP_Msk;
pub const HASH_SR_NBWP_0: u32 = 0x01 << HASH_SR_NBWP_Pos;
pub const HASH_SR_NBWP_1: u32 = 0x02 << HASH_SR_NBWP_Pos;
pub const HASH_SR_NBWP_2: u32 = 0x04 << HASH_SR_NBWP_Pos;
pub const HASH_SR_NBWP_3: u32 = 0x08 << HASH_SR_NBWP_Pos;
pub const HASH_SR_NBWP_4: u32 = 0x10 << HASH_SR_NBWP_Pos;
pub const HASH_SR_NBWE_Pos: u32 = 16;
pub const HASH_SR_NBWE_Msk: u32 = 0x1F << HASH_SR_NBWE_Pos;
pub const HASH_SR_NBWE: u32 = HASH_SR_NBWE_Msk;
pub const HASH_SR_NBWE_0: u32 = 0x01 << HASH_SR_NBWE_Pos;
pub const HASH_SR_NBWE_1: u32 = 0x02 << HASH_SR_NBWE_Pos;
pub const HASH_SR_NBWE_2: u32 = 0x04 << HASH_SR_NBWE_Pos;
pub const HASH_SR_NBWE_3: u32 = 0x08 << HASH_SR_NBWE_Pos;
pub const HASH_SR_NBWE_4: u32 = 0x10 << HASH_SR_NBWE_Pos;
pub const HASH_SR_DINNE_Pos: u32 = 15;
pub const HASH_SR_DINNE_Msk: u32 = 0x1 << HASH_SR_DINNE_Pos;
pub const HASH_SR_DINNE: u32 = HASH_SR_DINNE_Msk;
pub const I2C_CR1_PE_Pos: u32 = 0;
pub const I2C_CR1_PE_Msk: u32 = 0x1 << I2C_CR1_PE_Pos;
pub const I2C_CR1_PE: u32 = I2C_CR1_PE_Msk;
pub const I2C_CR1_TXIE_Pos: u32 = 1;
pub const I2C_CR1_TXIE_Msk: u32 = 0x1 << I2C_CR1_TXIE_Pos;
pub const I2C_CR1_TXIE: u32 = I2C_CR1_TXIE_Msk;
pub const I2C_CR1_RXIE_Pos: u32 = 2;
pub const I2C_CR1_RXIE_Msk: u32 = 0x1 << I2C_CR1_RXIE_Pos;
pub const I2C_CR1_RXIE: u32 = I2C_CR1_RXIE_Msk;
pub const I2C_CR1_ADDRIE_Pos: u32 = 3;
pub const I2C_CR1_ADDRIE_Msk: u32 = 0x1 << I2C_CR1_ADDRIE_Pos;
pub const I2C_CR1_ADDRIE: u32 = I2C_CR1_ADDRIE_Msk;
pub const I2C_CR1_NACKIE_Pos: u32 = 4;
pub const I2C_CR1_NACKIE_Msk: u32 = 0x1 << I2C_CR1_NACKIE_Pos;
pub const I2C_CR1_NACKIE: u32 = I2C_CR1_NACKIE_Msk;
pub const I2C_CR1_STOPIE_Pos: u32 = 5;
pub const I2C_CR1_STOPIE_Msk: u32 = 0x1 << I2C_CR1_STOPIE_Pos;
pub const I2C_CR1_STOPIE: u32 = I2C_CR1_STOPIE_Msk;
pub const I2C_CR1_TCIE_Pos: u32 = 6;
pub const I2C_CR1_TCIE_Msk: u32 = 0x1 << I2C_CR1_TCIE_Pos;
pub const I2C_CR1_TCIE: u32 = I2C_CR1_TCIE_Msk;
pub const I2C_CR1_ERRIE_Pos: u32 = 7;
pub const I2C_CR1_ERRIE_Msk: u32 = 0x1 << I2C_CR1_ERRIE_Pos;
pub const I2C_CR1_ERRIE: u32 = I2C_CR1_ERRIE_Msk;
pub const I2C_CR1_DNF_Pos: u32 = 8;
pub const I2C_CR1_DNF_Msk: u32 = 0xF << I2C_CR1_DNF_Pos;
pub const I2C_CR1_DNF: u32 = I2C_CR1_DNF_Msk;
pub const I2C_CR1_ANFOFF_Pos: u32 = 12;
pub const I2C_CR1_ANFOFF_Msk: u32 = 0x1 << I2C_CR1_ANFOFF_Pos;
pub const I2C_CR1_ANFOFF: u32 = I2C_CR1_ANFOFF_Msk;
pub const I2C_CR1_SWRST_Pos: u32 = 13;
pub const I2C_CR1_SWRST_Msk: u32 = 0x1 << I2C_CR1_SWRST_Pos;
pub const I2C_CR1_SWRST: u32 = I2C_CR1_SWRST_Msk;
pub const I2C_CR1_TXDMAEN_Pos: u32 = 14;
pub const I2C_CR1_TXDMAEN_Msk: u32 = 0x1 << I2C_CR1_TXDMAEN_Pos;
pub const I2C_CR1_TXDMAEN: u32 = I2C_CR1_TXDMAEN_Msk;
pub const I2C_CR1_RXDMAEN_Pos: u32 = 15;
pub const I2C_CR1_RXDMAEN_Msk: u32 = 0x1 << I2C_CR1_RXDMAEN_Pos;
pub const I2C_CR1_RXDMAEN: u32 = I2C_CR1_RXDMAEN_Msk;
pub const I2C_CR1_SBC_Pos: u32 = 16;
pub const I2C_CR1_SBC_Msk: u32 = 0x1 << I2C_CR1_SBC_Pos;
pub const I2C_CR1_SBC: u32 = I2C_CR1_SBC_Msk;
pub const I2C_CR1_NOSTRETCH_Pos: u32 = 17;
pub const I2C_CR1_NOSTRETCH_Msk: u32 = 0x1 << I2C_CR1_NOSTRETCH_Pos;
pub const I2C_CR1_NOSTRETCH: u32 = I2C_CR1_NOSTRETCH_Msk;
pub const I2C_CR1_WUPEN_Pos: u32 = 18;
pub const I2C_CR1_WUPEN_Msk: u32 = 0x1 << I2C_CR1_WUPEN_Pos;
pub const I2C_CR1_WUPEN: u32 = I2C_CR1_WUPEN_Msk;
pub const I2C_CR1_GCEN_Pos: u32 = 19;
pub const I2C_CR1_GCEN_Msk: u32 = 0x1 << I2C_CR1_GCEN_Pos;
pub const I2C_CR1_GCEN: u32 = I2C_CR1_GCEN_Msk;
pub const I2C_CR1_SMBHEN_Pos: u32 = 20;
pub const I2C_CR1_SMBHEN_Msk: u32 = 0x1 << I2C_CR1_SMBHEN_Pos;
pub const I2C_CR1_SMBHEN: u32 = I2C_CR1_SMBHEN_Msk;
pub const I2C_CR1_SMBDEN_Pos: u32 = 21;
pub const I2C_CR1_SMBDEN_Msk: u32 = 0x1 << I2C_CR1_SMBDEN_Pos;
pub const I2C_CR1_SMBDEN: u32 = I2C_CR1_SMBDEN_Msk;
pub const I2C_CR1_ALERTEN_Pos: u32 = 22;
pub const I2C_CR1_ALERTEN_Msk: u32 = 0x1 << I2C_CR1_ALERTEN_Pos;
pub const I2C_CR1_ALERTEN: u32 = I2C_CR1_ALERTEN_Msk;
pub const I2C_CR1_PECEN_Pos: u32 = 23;
pub const I2C_CR1_PECEN_Msk: u32 = 0x1 << I2C_CR1_PECEN_Pos;
pub const I2C_CR1_PECEN: u32 = I2C_CR1_PECEN_Msk;
pub const I2C_CR1_FMP_Pos: u32 = 24;
pub const I2C_CR1_FMP_Msk: u32 = 0x1 << I2C_CR1_FMP_Pos;
pub const I2C_CR1_FMP: u32 = I2C_CR1_FMP_Msk;
pub const I2C_CR1_ADDRACLR_Pos: u32 = 30;
pub const I2C_CR1_ADDRACLR_Msk: u32 = 0x1 << I2C_CR1_ADDRACLR_Pos;
pub const I2C_CR1_ADDRACLR: u32 = I2C_CR1_ADDRACLR_Msk;
pub const I2C_CR1_STOPFACLR_Pos: u32 = 31;
pub const I2C_CR1_STOPFACLR_Msk: u32 = 0x1 << I2C_CR1_STOPFACLR_Pos;
pub const I2C_CR1_STOPFACLR: u32 = I2C_CR1_STOPFACLR_Msk;
pub const I2C_CR2_SADD_Pos: u32 = 0;
pub const I2C_CR2_SADD_Msk: u32 = 0x3FF << I2C_CR2_SADD_Pos;
pub const I2C_CR2_SADD: u32 = I2C_CR2_SADD_Msk;
pub const I2C_CR2_RD_WRN_Pos: u32 = 10;
pub const I2C_CR2_RD_WRN_Msk: u32 = 0x1 << I2C_CR2_RD_WRN_Pos;
pub const I2C_CR2_RD_WRN: u32 = I2C_CR2_RD_WRN_Msk;
pub const I2C_CR2_ADD10_Pos: u32 = 11;
pub const I2C_CR2_ADD10_Msk: u32 = 0x1 << I2C_CR2_ADD10_Pos;
pub const I2C_CR2_ADD10: u32 = I2C_CR2_ADD10_Msk;
pub const I2C_CR2_HEAD10R_Pos: u32 = 12;
pub const I2C_CR2_HEAD10R_Msk: u32 = 0x1 << I2C_CR2_HEAD10R_Pos;
pub const I2C_CR2_HEAD10R: u32 = I2C_CR2_HEAD10R_Msk;
pub const I2C_CR2_START_Pos: u32 = 13;
pub const I2C_CR2_START_Msk: u32 = 0x1 << I2C_CR2_START_Pos;
pub const I2C_CR2_START: u32 = I2C_CR2_START_Msk;
pub const I2C_CR2_STOP_Pos: u32 = 14;
pub const I2C_CR2_STOP_Msk: u32 = 0x1 << I2C_CR2_STOP_Pos;
pub const I2C_CR2_STOP: u32 = I2C_CR2_STOP_Msk;
pub const I2C_CR2_NACK_Pos: u32 = 15;
pub const I2C_CR2_NACK_Msk: u32 = 0x1 << I2C_CR2_NACK_Pos;
pub const I2C_CR2_NACK: u32 = I2C_CR2_NACK_Msk;
pub const I2C_CR2_NBYTES_Pos: u32 = 16;
pub const I2C_CR2_NBYTES_Msk: u32 = 0xFF << I2C_CR2_NBYTES_Pos;
pub const I2C_CR2_NBYTES: u32 = I2C_CR2_NBYTES_Msk;
pub const I2C_CR2_RELOAD_Pos: u32 = 24;
pub const I2C_CR2_RELOAD_Msk: u32 = 0x1 << I2C_CR2_RELOAD_Pos;
pub const I2C_CR2_RELOAD: u32 = I2C_CR2_RELOAD_Msk;
pub const I2C_CR2_AUTOEND_Pos: u32 = 25;
pub const I2C_CR2_AUTOEND_Msk: u32 = 0x1 << I2C_CR2_AUTOEND_Pos;
pub const I2C_CR2_AUTOEND: u32 = I2C_CR2_AUTOEND_Msk;
pub const I2C_CR2_PECBYTE_Pos: u32 = 26;
pub const I2C_CR2_PECBYTE_Msk: u32 = 0x1 << I2C_CR2_PECBYTE_Pos;
pub const I2C_CR2_PECBYTE: u32 = I2C_CR2_PECBYTE_Msk;
pub const I2C_OAR1_OA1_Pos: u32 = 0;
pub const I2C_OAR1_OA1_Msk: u32 = 0x3FF << I2C_OAR1_OA1_Pos;
pub const I2C_OAR1_OA1: u32 = I2C_OAR1_OA1_Msk;
pub const I2C_OAR1_OA1MODE_Pos: u32 = 10;
pub const I2C_OAR1_OA1MODE_Msk: u32 = 0x1 << I2C_OAR1_OA1MODE_Pos;
pub const I2C_OAR1_OA1MODE: u32 = I2C_OAR1_OA1MODE_Msk;
pub const I2C_OAR1_OA1EN_Pos: u32 = 15;
pub const I2C_OAR1_OA1EN_Msk: u32 = 0x1 << I2C_OAR1_OA1EN_Pos;
pub const I2C_OAR1_OA1EN: u32 = I2C_OAR1_OA1EN_Msk;
pub const I2C_OAR2_OA2_Pos: u32 = 1;
pub const I2C_OAR2_OA2_Msk: u32 = 0x7F << I2C_OAR2_OA2_Pos;
pub const I2C_OAR2_OA2: u32 = I2C_OAR2_OA2_Msk;
pub const I2C_OAR2_OA2MSK_Pos: u32 = 8;
pub const I2C_OAR2_OA2MSK_Msk: u32 = 0x7 << I2C_OAR2_OA2MSK_Pos;
pub const I2C_OAR2_OA2MSK: u32 = I2C_OAR2_OA2MSK_Msk;
pub const I2C_OAR2_OA2NOMASK: u32 = 0x00000000;
pub const I2C_OAR2_OA2MASK01_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK01_Msk: u32 = 0x1 << I2C_OAR2_OA2MASK01_Pos;
pub const I2C_OAR2_OA2MASK01: u32 = I2C_OAR2_OA2MASK01_Msk;
pub const I2C_OAR2_OA2MASK02_Pos: u32 = 9;
pub const I2C_OAR2_OA2MASK02_Msk: u32 = 0x1 << I2C_OAR2_OA2MASK02_Pos;
pub const I2C_OAR2_OA2MASK02: u32 = I2C_OAR2_OA2MASK02_Msk;
pub const I2C_OAR2_OA2MASK03_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK03_Msk: u32 = 0x3 << I2C_OAR2_OA2MASK03_Pos;
pub const I2C_OAR2_OA2MASK03: u32 = I2C_OAR2_OA2MASK03_Msk;
pub const I2C_OAR2_OA2MASK04_Pos: u32 = 10;
pub const I2C_OAR2_OA2MASK04_Msk: u32 = 0x1 << I2C_OAR2_OA2MASK04_Pos;
pub const I2C_OAR2_OA2MASK04: u32 = I2C_OAR2_OA2MASK04_Msk;
pub const I2C_OAR2_OA2MASK05_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK05_Msk: u32 = 0x5 << I2C_OAR2_OA2MASK05_Pos;
pub const I2C_OAR2_OA2MASK05: u32 = I2C_OAR2_OA2MASK05_Msk;
pub const I2C_OAR2_OA2MASK06_Pos: u32 = 9;
pub const I2C_OAR2_OA2MASK06_Msk: u32 = 0x3 << I2C_OAR2_OA2MASK06_Pos;
pub const I2C_OAR2_OA2MASK06: u32 = I2C_OAR2_OA2MASK06_Msk;
pub const I2C_OAR2_OA2MASK07_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK07_Msk: u32 = 0x7 << I2C_OAR2_OA2MASK07_Pos;
pub const I2C_OAR2_OA2MASK07: u32 = I2C_OAR2_OA2MASK07_Msk;
pub const I2C_OAR2_OA2EN_Pos: u32 = 15;
pub const I2C_OAR2_OA2EN_Msk: u32 = 0x1 << I2C_OAR2_OA2EN_Pos;
pub const I2C_OAR2_OA2EN: u32 = I2C_OAR2_OA2EN_Msk;
pub const I2C_TIMINGR_SCLL_Pos: u32 = 0;
pub const I2C_TIMINGR_SCLL_Msk: u32 = 0xFF << I2C_TIMINGR_SCLL_Pos;
pub const I2C_TIMINGR_SCLL: u32 = I2C_TIMINGR_SCLL_Msk;
pub const I2C_TIMINGR_SCLH_Pos: u32 = 8;
pub const I2C_TIMINGR_SCLH_Msk: u32 = 0xFF << I2C_TIMINGR_SCLH_Pos;
pub const I2C_TIMINGR_SCLH: u32 = I2C_TIMINGR_SCLH_Msk;
pub const I2C_TIMINGR_SDADEL_Pos: u32 = 16;
pub const I2C_TIMINGR_SDADEL_Msk: u32 = 0xF << I2C_TIMINGR_SDADEL_Pos;
pub const I2C_TIMINGR_SDADEL: u32 = I2C_TIMINGR_SDADEL_Msk;
pub const I2C_TIMINGR_SCLDEL_Pos: u32 = 20;
pub const I2C_TIMINGR_SCLDEL_Msk: u32 = 0xF << I2C_TIMINGR_SCLDEL_Pos;
pub const I2C_TIMINGR_SCLDEL: u32 = I2C_TIMINGR_SCLDEL_Msk;
pub const I2C_TIMINGR_PRESC_Pos: u32 = 28;
pub const I2C_TIMINGR_PRESC_Msk: u32 = 0xF << I2C_TIMINGR_PRESC_Pos;
pub const I2C_TIMINGR_PRESC: u32 = I2C_TIMINGR_PRESC_Msk;
pub const I2C_TIMEOUTR_TIMEOUTA_Pos: u32 = 0;
pub const I2C_TIMEOUTR_TIMEOUTA_Msk: u32 = 0xFFF << I2C_TIMEOUTR_TIMEOUTA_Pos;
pub const I2C_TIMEOUTR_TIMEOUTA: u32 = I2C_TIMEOUTR_TIMEOUTA_Msk;
pub const I2C_TIMEOUTR_TIDLE_Pos: u32 = 12;
pub const I2C_TIMEOUTR_TIDLE_Msk: u32 = 0x1 << I2C_TIMEOUTR_TIDLE_Pos;
pub const I2C_TIMEOUTR_TIDLE: u32 = I2C_TIMEOUTR_TIDLE_Msk;
pub const I2C_TIMEOUTR_TIMOUTEN_Pos: u32 = 15;
pub const I2C_TIMEOUTR_TIMOUTEN_Msk: u32 = 0x1 << I2C_TIMEOUTR_TIMOUTEN_Pos;
pub const I2C_TIMEOUTR_TIMOUTEN: u32 = I2C_TIMEOUTR_TIMOUTEN_Msk;
pub const I2C_TIMEOUTR_TIMEOUTB_Pos: u32 = 16;
pub const I2C_TIMEOUTR_TIMEOUTB_Msk: u32 = 0xFFF << I2C_TIMEOUTR_TIMEOUTB_Pos;
pub const I2C_TIMEOUTR_TIMEOUTB: u32 = I2C_TIMEOUTR_TIMEOUTB_Msk;
pub const I2C_TIMEOUTR_TEXTEN_Pos: u32 = 31;
pub const I2C_TIMEOUTR_TEXTEN_Msk: u32 = 0x1 << I2C_TIMEOUTR_TEXTEN_Pos;
pub const I2C_TIMEOUTR_TEXTEN: u32 = I2C_TIMEOUTR_TEXTEN_Msk;
pub const I2C_ISR_TXE_Pos: u32 = 0;
pub const I2C_ISR_TXE_Msk: u32 = 0x1 << I2C_ISR_TXE_Pos;
pub const I2C_ISR_TXE: u32 = I2C_ISR_TXE_Msk;
pub const I2C_ISR_TXIS_Pos: u32 = 1;
pub const I2C_ISR_TXIS_Msk: u32 = 0x1 << I2C_ISR_TXIS_Pos;
pub const I2C_ISR_TXIS: u32 = I2C_ISR_TXIS_Msk;
pub const I2C_ISR_RXNE_Pos: u32 = 2;
pub const I2C_ISR_RXNE_Msk: u32 = 0x1 << I2C_ISR_RXNE_Pos;
pub const I2C_ISR_RXNE: u32 = I2C_ISR_RXNE_Msk;
pub const I2C_ISR_ADDR_Pos: u32 = 3;
pub const I2C_ISR_ADDR_Msk: u32 = 0x1 << I2C_ISR_ADDR_Pos;
pub const I2C_ISR_ADDR: u32 = I2C_ISR_ADDR_Msk;
pub const I2C_ISR_NACKF_Pos: u32 = 4;
pub const I2C_ISR_NACKF_Msk: u32 = 0x1 << I2C_ISR_NACKF_Pos;
pub const I2C_ISR_NACKF: u32 = I2C_ISR_NACKF_Msk;
pub const I2C_ISR_STOPF_Pos: u32 = 5;
pub const I2C_ISR_STOPF_Msk: u32 = 0x1 << I2C_ISR_STOPF_Pos;
pub const I2C_ISR_STOPF: u32 = I2C_ISR_STOPF_Msk;
pub const I2C_ISR_TC_Pos: u32 = 6;
pub const I2C_ISR_TC_Msk: u32 = 0x1 << I2C_ISR_TC_Pos;
pub const I2C_ISR_TC: u32 = I2C_ISR_TC_Msk;
pub const I2C_ISR_TCR_Pos: u32 = 7;
pub const I2C_ISR_TCR_Msk: u32 = 0x1 << I2C_ISR_TCR_Pos;
pub const I2C_ISR_TCR: u32 = I2C_ISR_TCR_Msk;
pub const I2C_ISR_BERR_Pos: u32 = 8;
pub const I2C_ISR_BERR_Msk: u32 = 0x1 << I2C_ISR_BERR_Pos;
pub const I2C_ISR_BERR: u32 = I2C_ISR_BERR_Msk;
pub const I2C_ISR_ARLO_Pos: u32 = 9;
pub const I2C_ISR_ARLO_Msk: u32 = 0x1 << I2C_ISR_ARLO_Pos;
pub const I2C_ISR_ARLO: u32 = I2C_ISR_ARLO_Msk;
pub const I2C_ISR_OVR_Pos: u32 = 10;
pub const I2C_ISR_OVR_Msk: u32 = 0x1 << I2C_ISR_OVR_Pos;
pub const I2C_ISR_OVR: u32 = I2C_ISR_OVR_Msk;
pub const I2C_ISR_PECERR_Pos: u32 = 11;
pub const I2C_ISR_PECERR_Msk: u32 = 0x1 << I2C_ISR_PECERR_Pos;
pub const I2C_ISR_PECERR: u32 = I2C_ISR_PECERR_Msk;
pub const I2C_ISR_TIMEOUT_Pos: u32 = 12;
pub const I2C_ISR_TIMEOUT_Msk: u32 = 0x1 << I2C_ISR_TIMEOUT_Pos;
pub const I2C_ISR_TIMEOUT: u32 = I2C_ISR_TIMEOUT_Msk;
pub const I2C_ISR_ALERT_Pos: u32 = 13;
pub const I2C_ISR_ALERT_Msk: u32 = 0x1 << I2C_ISR_ALERT_Pos;
pub const I2C_ISR_ALERT: u32 = I2C_ISR_ALERT_Msk;
pub const I2C_ISR_BUSY_Pos: u32 = 15;
pub const I2C_ISR_BUSY_Msk: u32 = 0x1 << I2C_ISR_BUSY_Pos;
pub const I2C_ISR_BUSY: u32 = I2C_ISR_BUSY_Msk;
pub const I2C_ISR_DIR_Pos: u32 = 16;
pub const I2C_ISR_DIR_Msk: u32 = 0x1 << I2C_ISR_DIR_Pos;
pub const I2C_ISR_DIR: u32 = I2C_ISR_DIR_Msk;
pub const I2C_ISR_ADDCODE_Pos: u32 = 17;
pub const I2C_ISR_ADDCODE_Msk: u32 = 0x7F << I2C_ISR_ADDCODE_Pos;
pub const I2C_ISR_ADDCODE: u32 = I2C_ISR_ADDCODE_Msk;
pub const I2C_ICR_ADDRCF_Pos: u32 = 3;
pub const I2C_ICR_ADDRCF_Msk: u32 = 0x1 << I2C_ICR_ADDRCF_Pos;
pub const I2C_ICR_ADDRCF: u32 = I2C_ICR_ADDRCF_Msk;
pub const I2C_ICR_NACKCF_Pos: u32 = 4;
pub const I2C_ICR_NACKCF_Msk: u32 = 0x1 << I2C_ICR_NACKCF_Pos;
pub const I2C_ICR_NACKCF: u32 = I2C_ICR_NACKCF_Msk;
pub const I2C_ICR_STOPCF_Pos: u32 = 5;
pub const I2C_ICR_STOPCF_Msk: u32 = 0x1 << I2C_ICR_STOPCF_Pos;
pub const I2C_ICR_STOPCF: u32 = I2C_ICR_STOPCF_Msk;
pub const I2C_ICR_BERRCF_Pos: u32 = 8;
pub const I2C_ICR_BERRCF_Msk: u32 = 0x1 << I2C_ICR_BERRCF_Pos;
pub const I2C_ICR_BERRCF: u32 = I2C_ICR_BERRCF_Msk;
pub const I2C_ICR_ARLOCF_Pos: u32 = 9;
pub const I2C_ICR_ARLOCF_Msk: u32 = 0x1 << I2C_ICR_ARLOCF_Pos;
pub const I2C_ICR_ARLOCF: u32 = I2C_ICR_ARLOCF_Msk;
pub const I2C_ICR_OVRCF_Pos: u32 = 10;
pub const I2C_ICR_OVRCF_Msk: u32 = 0x1 << I2C_ICR_OVRCF_Pos;
pub const I2C_ICR_OVRCF: u32 = I2C_ICR_OVRCF_Msk;
pub const I2C_ICR_PECCF_Pos: u32 = 11;
pub const I2C_ICR_PECCF_Msk: u32 = 0x1 << I2C_ICR_PECCF_Pos;
pub const I2C_ICR_PECCF: u32 = I2C_ICR_PECCF_Msk;
pub const I2C_ICR_TIMOUTCF_Pos: u32 = 12;
pub const I2C_ICR_TIMOUTCF_Msk: u32 = 0x1 << I2C_ICR_TIMOUTCF_Pos;
pub const I2C_ICR_TIMOUTCF: u32 = I2C_ICR_TIMOUTCF_Msk;
pub const I2C_ICR_ALERTCF_Pos: u32 = 13;
pub const I2C_ICR_ALERTCF_Msk: u32 = 0x1 << I2C_ICR_ALERTCF_Pos;
pub const I2C_ICR_ALERTCF: u32 = I2C_ICR_ALERTCF_Msk;
pub const I2C_PECR_PEC_Pos: u32 = 0;
pub const I2C_PECR_PEC_Msk: u32 = 0xFF << I2C_PECR_PEC_Pos;
pub const I2C_PECR_PEC: u32 = I2C_PECR_PEC_Msk;
pub const I2C_RXDR_RXDATA_Pos: u32 = 0;
pub const I2C_RXDR_RXDATA_Msk: u32 = 0xFF << I2C_RXDR_RXDATA_Pos;
pub const I2C_RXDR_RXDATA: u32 = I2C_RXDR_RXDATA_Msk;
pub const I2C_TXDR_TXDATA_Pos: u32 = 0;
pub const I2C_TXDR_TXDATA_Msk: u32 = 0xFF << I2C_TXDR_TXDATA_Pos;
pub const I2C_TXDR_TXDATA: u32 = I2C_TXDR_TXDATA_Msk;
pub const I3C_CR_DCNT_Pos: u32 = 0;
pub const I3C_CR_DCNT_Msk: u32 = 0xFFFF << I3C_CR_DCNT_Pos;
pub const I3C_CR_DCNT: u32 = I3C_CR_DCNT_Msk;
pub const I3C_CR_RNW_Pos: u32 = 16;
pub const I3C_CR_RNW_Msk: u32 = 0x1 << I3C_CR_RNW_Pos;
pub const I3C_CR_RNW: u32 = I3C_CR_RNW_Msk;
pub const I3C_CR_CCC_Pos: u32 = 16;
pub const I3C_CR_CCC_Msk: u32 = 0xFF << I3C_CR_CCC_Pos;
pub const I3C_CR_CCC: u32 = I3C_CR_CCC_Msk;
pub const I3C_CR_ADD_Pos: u32 = 17;
pub const I3C_CR_ADD_Msk: u32 = 0x7F << I3C_CR_ADD_Pos;
pub const I3C_CR_ADD: u32 = I3C_CR_ADD_Msk;
pub const I3C_CR_MTYPE_Pos: u32 = 27;
pub const I3C_CR_MTYPE_Msk: u32 = 0xF << I3C_CR_MTYPE_Pos;
pub const I3C_CR_MTYPE: u32 = I3C_CR_MTYPE_Msk;
pub const I3C_CR_MTYPE_0: u32 = 0x1 << I3C_CR_MTYPE_Pos;
pub const I3C_CR_MTYPE_1: u32 = 0x2 << I3C_CR_MTYPE_Pos;
pub const I3C_CR_MTYPE_2: u32 = 0x4 << I3C_CR_MTYPE_Pos;
pub const I3C_CR_MTYPE_3: u32 = 0x8 << I3C_CR_MTYPE_Pos;
pub const I3C_CR_MEND_Pos: u32 = 31;
pub const I3C_CR_MEND_Msk: u32 = 0x1 << I3C_CR_MEND_Pos;
pub const I3C_CR_MEND: u32 = I3C_CR_MEND_Msk;
pub const I3C_CFGR_EN_Pos: u32 = 0;
pub const I3C_CFGR_EN_Msk: u32 = 0x1 << I3C_CFGR_EN_Pos;
pub const I3C_CFGR_EN: u32 = I3C_CFGR_EN_Msk;
pub const I3C_CFGR_CRINIT_Pos: u32 = 1;
pub const I3C_CFGR_CRINIT_Msk: u32 = 0x1 << I3C_CFGR_CRINIT_Pos;
pub const I3C_CFGR_CRINIT: u32 = I3C_CFGR_CRINIT_Msk;
pub const I3C_CFGR_NOARBH_Pos: u32 = 2;
pub const I3C_CFGR_NOARBH_Msk: u32 = 0x1 << I3C_CFGR_NOARBH_Pos;
pub const I3C_CFGR_NOARBH: u32 = I3C_CFGR_NOARBH_Msk;
pub const I3C_CFGR_RSTPTRN_Pos: u32 = 3;
pub const I3C_CFGR_RSTPTRN_Msk: u32 = 0x1 << I3C_CFGR_RSTPTRN_Pos;
pub const I3C_CFGR_RSTPTRN: u32 = I3C_CFGR_RSTPTRN_Msk;
pub const I3C_CFGR_EXITPTRN_Pos: u32 = 4;
pub const I3C_CFGR_EXITPTRN_Msk: u32 = 0x1 << I3C_CFGR_EXITPTRN_Pos;
pub const I3C_CFGR_EXITPTRN: u32 = I3C_CFGR_EXITPTRN_Msk;
pub const I3C_CFGR_HKSDAEN_Pos: u32 = 5;
pub const I3C_CFGR_HKSDAEN_Msk: u32 = 0x1 << I3C_CFGR_HKSDAEN_Pos;
pub const I3C_CFGR_HKSDAEN: u32 = I3C_CFGR_HKSDAEN_Msk;
pub const I3C_CFGR_HJACK_Pos: u32 = 7;
pub const I3C_CFGR_HJACK_Msk: u32 = 0x1 << I3C_CFGR_HJACK_Pos;
pub const I3C_CFGR_HJACK: u32 = I3C_CFGR_HJACK_Msk;
pub const I3C_CFGR_RXDMAEN_Pos: u32 = 8;
pub const I3C_CFGR_RXDMAEN_Msk: u32 = 0x1 << I3C_CFGR_RXDMAEN_Pos;
pub const I3C_CFGR_RXDMAEN: u32 = I3C_CFGR_RXDMAEN_Msk;
pub const I3C_CFGR_RXFLUSH_Pos: u32 = 9;
pub const I3C_CFGR_RXFLUSH_Msk: u32 = 0x1 << I3C_CFGR_RXFLUSH_Pos;
pub const I3C_CFGR_RXFLUSH: u32 = I3C_CFGR_RXFLUSH_Msk;
pub const I3C_CFGR_RXTHRES_Pos: u32 = 10;
pub const I3C_CFGR_RXTHRES_Msk: u32 = 0x1 << I3C_CFGR_RXTHRES_Pos;
pub const I3C_CFGR_RXTHRES: u32 = I3C_CFGR_RXTHRES_Msk;
pub const I3C_CFGR_TXDMAEN_Pos: u32 = 12;
pub const I3C_CFGR_TXDMAEN_Msk: u32 = 0x1 << I3C_CFGR_TXDMAEN_Pos;
pub const I3C_CFGR_TXDMAEN: u32 = I3C_CFGR_TXDMAEN_Msk;
pub const I3C_CFGR_TXFLUSH_Pos: u32 = 13;
pub const I3C_CFGR_TXFLUSH_Msk: u32 = 0x1 << I3C_CFGR_TXFLUSH_Pos;
pub const I3C_CFGR_TXFLUSH: u32 = I3C_CFGR_TXFLUSH_Msk;
pub const I3C_CFGR_TXTHRES_Pos: u32 = 14;
pub const I3C_CFGR_TXTHRES_Msk: u32 = 0x1 << I3C_CFGR_TXTHRES_Pos;
pub const I3C_CFGR_TXTHRES: u32 = I3C_CFGR_TXTHRES_Msk;
pub const I3C_CFGR_SDMAEN_Pos: u32 = 16;
pub const I3C_CFGR_SDMAEN_Msk: u32 = 0x1 << I3C_CFGR_SDMAEN_Pos;
pub const I3C_CFGR_SDMAEN: u32 = I3C_CFGR_SDMAEN_Msk;
pub const I3C_CFGR_SFLUSH_Pos: u32 = 17;
pub const I3C_CFGR_SFLUSH_Msk: u32 = 0x1 << I3C_CFGR_SFLUSH_Pos;
pub const I3C_CFGR_SFLUSH: u32 = I3C_CFGR_SFLUSH_Msk;
pub const I3C_CFGR_SMODE_Pos: u32 = 18;
pub const I3C_CFGR_SMODE_Msk: u32 = 0x1 << I3C_CFGR_SMODE_Pos;
pub const I3C_CFGR_SMODE: u32 = I3C_CFGR_SMODE_Msk;
pub const I3C_CFGR_TMODE_Pos: u32 = 19;
pub const I3C_CFGR_TMODE_Msk: u32 = 0x1 << I3C_CFGR_TMODE_Pos;
pub const I3C_CFGR_TMODE: u32 = I3C_CFGR_TMODE_Msk;
pub const I3C_CFGR_CDMAEN_Pos: u32 = 20;
pub const I3C_CFGR_CDMAEN_Msk: u32 = 0x1 << I3C_CFGR_CDMAEN_Pos;
pub const I3C_CFGR_CDMAEN: u32 = I3C_CFGR_CDMAEN_Msk;
pub const I3C_CFGR_CFLUSH_Pos: u32 = 21;
pub const I3C_CFGR_CFLUSH_Msk: u32 = 0x1 << I3C_CFGR_CFLUSH_Pos;
pub const I3C_CFGR_CFLUSH: u32 = I3C_CFGR_CFLUSH_Msk;
pub const I3C_CFGR_TSFSET_Pos: u32 = 30;
pub const I3C_CFGR_TSFSET_Msk: u32 = 0x1 << I3C_CFGR_TSFSET_Pos;
pub const I3C_CFGR_TSFSET: u32 = I3C_CFGR_TSFSET_Msk;
pub const I3C_RDR_RDB0_Pos: u32 = 0;
pub const I3C_RDR_RDB0_Msk: u32 = 0xFF << I3C_RDR_RDB0_Pos;
pub const I3C_RDR_RDB0: u32 = I3C_RDR_RDB0_Msk;
pub const I3C_RDWR_RDBx_Pos: u32 = 0;
pub const I3C_RDWR_RDBx_Msk: u32 = 0xFFFFFFFF << I3C_RDWR_RDBx_Pos;
pub const I3C_RDWR_RDBx: u32 = I3C_RDWR_RDBx_Msk;
pub const I3C_RDWR_RDB0_Pos: u32 = 0;
pub const I3C_RDWR_RDB0_Msk: u32 = 0xFF << I3C_RDWR_RDB0_Pos;
pub const I3C_RDWR_RDB0: u32 = I3C_RDWR_RDB0_Msk;
pub const I3C_RDWR_RDB1_Pos: u32 = 8;
pub const I3C_RDWR_RDB1_Msk: u32 = 0xFF << I3C_RDWR_RDB1_Pos;
pub const I3C_RDWR_RDB1: u32 = I3C_RDWR_RDB1_Msk;
pub const I3C_RDWR_RDB2_Pos: u32 = 16;
pub const I3C_RDWR_RDB2_Msk: u32 = 0xFF << I3C_RDWR_RDB2_Pos;
pub const I3C_RDWR_RDB2: u32 = I3C_RDWR_RDB2_Msk;
pub const I3C_RDWR_RDB3_Pos: u32 = 24;
pub const I3C_RDWR_RDB3_Msk: u32 = 0xFF << I3C_RDWR_RDB3_Pos;
pub const I3C_RDWR_RDB3: u32 = I3C_RDWR_RDB3_Msk;
pub const I3C_TDR_TDB0_Pos: u32 = 0;
pub const I3C_TDR_TDB0_Msk: u32 = 0xFF << I3C_TDR_TDB0_Pos;
pub const I3C_TDR_TDB0: u32 = I3C_TDR_TDB0_Msk;
pub const I3C_TDWR_TDBx_Pos: u32 = 0;
pub const I3C_TDWR_TDBx_Msk: u32 = 0xFFFFFFFF << I3C_TDWR_TDBx_Pos;
pub const I3C_TDWR_TDBx: u32 = I3C_TDWR_TDBx_Msk;
pub const I3C_TDWR_TDB0_Pos: u32 = 0;
pub const I3C_TDWR_TDB0_Msk: u32 = 0xFF << I3C_TDWR_TDB0_Pos;
pub const I3C_TDWR_TDB0: u32 = I3C_TDWR_TDB0_Msk;
pub const I3C_TDWR_TDB1_Pos: u32 = 8;
pub const I3C_TDWR_TDB1_Msk: u32 = 0xFF << I3C_TDWR_TDB1_Pos;
pub const I3C_TDWR_TDB1: u32 = I3C_TDWR_TDB1_Msk;
pub const I3C_TDWR_TDB2_Pos: u32 = 16;
pub const I3C_TDWR_TDB2_Msk: u32 = 0xFF << I3C_TDWR_TDB2_Pos;
pub const I3C_TDWR_TDB2: u32 = I3C_TDWR_TDB2_Msk;
pub const I3C_TDWR_TDB3_Pos: u32 = 24;
pub const I3C_TDWR_TDB3_Msk: u32 = 0xFF << I3C_TDWR_TDB3_Pos;
pub const I3C_TDWR_TDB3: u32 = I3C_TDWR_TDB3_Msk;
pub const I3C_IBIDR_IBIDBx_Pos: u32 = 0;
pub const I3C_IBIDR_IBIDBx_Msk: u32 = 0xFFFFFFFF << I3C_IBIDR_IBIDBx_Pos;
pub const I3C_IBIDR_IBIDBx: u32 = I3C_IBIDR_IBIDBx_Msk;
pub const I3C_IBIDR_IBIDB0_Pos: u32 = 0;
pub const I3C_IBIDR_IBIDB0_Msk: u32 = 0xFF << I3C_IBIDR_IBIDB0_Pos;
pub const I3C_IBIDR_IBIDB0: u32 = I3C_IBIDR_IBIDB0_Msk;
pub const I3C_IBIDR_IBIDB1_Pos: u32 = 8;
pub const I3C_IBIDR_IBIDB1_Msk: u32 = 0xFF << I3C_IBIDR_IBIDB1_Pos;
pub const I3C_IBIDR_IBIDB1: u32 = I3C_IBIDR_IBIDB1_Msk;
pub const I3C_IBIDR_IBIDB2_Pos: u32 = 16;
pub const I3C_IBIDR_IBIDB2_Msk: u32 = 0xFF << I3C_IBIDR_IBIDB2_Pos;
pub const I3C_IBIDR_IBIDB2: u32 = I3C_IBIDR_IBIDB2_Msk;
pub const I3C_IBIDR_IBIDB3_Pos: u32 = 24;
pub const I3C_IBIDR_IBIDB3_Msk: u32 = 0xFF << I3C_IBIDR_IBIDB3_Pos;
pub const I3C_IBIDR_IBIDB3: u32 = I3C_IBIDR_IBIDB3_Msk;
pub const I3C_TGTTDR_TGTTDCNT_Pos: u32 = 0;
pub const I3C_TGTTDR_TGTTDCNT_Msk: u32 = 0xFFFF << I3C_TGTTDR_TGTTDCNT_Pos;
pub const I3C_TGTTDR_TGTTDCNT: u32 = I3C_TGTTDR_TGTTDCNT_Msk;
pub const I3C_TGTTDR_PRELOAD_Pos: u32 = 16;
pub const I3C_TGTTDR_PRELOAD_Msk: u32 = 0x1 << I3C_TGTTDR_PRELOAD_Pos;
pub const I3C_TGTTDR_PRELOAD: u32 = I3C_TGTTDR_PRELOAD_Msk;
pub const I3C_SR_XDCNT_Pos: u32 = 0;
pub const I3C_SR_XDCNT_Msk: u32 = 0xFFFF << I3C_SR_XDCNT_Pos;
pub const I3C_SR_XDCNT: u32 = I3C_SR_XDCNT_Msk;
pub const I3C_SR_ABT_Pos: u32 = 17;
pub const I3C_SR_ABT_Msk: u32 = 0x1 << I3C_SR_ABT_Pos;
pub const I3C_SR_ABT: u32 = I3C_SR_ABT_Msk;
pub const I3C_SR_DIR_Pos: u32 = 18;
pub const I3C_SR_DIR_Msk: u32 = 0x1 << I3C_SR_DIR_Pos;
pub const I3C_SR_DIR: u32 = I3C_SR_DIR_Msk;
pub const I3C_SR_MID_Pos: u32 = 24;
pub const I3C_SR_MID_Msk: u32 = 0xFF << I3C_SR_MID_Pos;
pub const I3C_SR_MID: u32 = I3C_SR_MID_Msk;
pub const I3C_SER_CODERR_Pos: u32 = 0;
pub const I3C_SER_CODERR_Msk: u32 = 0xF << I3C_SER_CODERR_Pos;
pub const I3C_SER_CODERR: u32 = I3C_SER_CODERR_Msk;
pub const I3C_SER_CODERR_0: u32 = 0x1 << I3C_SER_CODERR_Pos;
pub const I3C_SER_CODERR_1: u32 = 0x2 << I3C_SER_CODERR_Pos;
pub const I3C_SER_CODERR_2: u32 = 0x4 << I3C_SER_CODERR_Pos;
pub const I3C_SER_CODERR_3: u32 = 0x8 << I3C_SER_CODERR_Pos;
pub const I3C_SER_PERR_Pos: u32 = 4;
pub const I3C_SER_PERR_Msk: u32 = 0x1 << I3C_SER_PERR_Pos;
pub const I3C_SER_PERR: u32 = I3C_SER_PERR_Msk;
pub const I3C_SER_STALL_Pos: u32 = 5;
pub const I3C_SER_STALL_Msk: u32 = 0x1 << I3C_SER_STALL_Pos;
pub const I3C_SER_STALL: u32 = I3C_SER_STALL_Msk;
pub const I3C_SER_DOVR_Pos: u32 = 6;
pub const I3C_SER_DOVR_Msk: u32 = 0x1 << I3C_SER_DOVR_Pos;
pub const I3C_SER_DOVR: u32 = I3C_SER_DOVR_Msk;
pub const I3C_SER_COVR_Pos: u32 = 7;
pub const I3C_SER_COVR_Msk: u32 = 0x1 << I3C_SER_COVR_Pos;
pub const I3C_SER_COVR: u32 = I3C_SER_COVR_Msk;
pub const I3C_SER_ANACK_Pos: u32 = 8;
pub const I3C_SER_ANACK_Msk: u32 = 0x1 << I3C_SER_ANACK_Pos;
pub const I3C_SER_ANACK: u32 = I3C_SER_ANACK_Msk;
pub const I3C_SER_DNACK_Pos: u32 = 9;
pub const I3C_SER_DNACK_Msk: u32 = 0x1 << I3C_SER_DNACK_Pos;
pub const I3C_SER_DNACK: u32 = I3C_SER_DNACK_Msk;
pub const I3C_SER_DERR_Pos: u32 = 10;
pub const I3C_SER_DERR_Msk: u32 = 0x1 << I3C_SER_DERR_Pos;
pub const I3C_SER_DERR: u32 = I3C_SER_DERR_Msk;
pub const I3C_RMR_IBIRDCNT_Pos: u32 = 0;
pub const I3C_RMR_IBIRDCNT_Msk: u32 = 0x7 << I3C_RMR_IBIRDCNT_Pos;
pub const I3C_RMR_IBIRDCNT: u32 = I3C_RMR_IBIRDCNT_Msk;
pub const I3C_RMR_RCODE_Pos: u32 = 8;
pub const I3C_RMR_RCODE_Msk: u32 = 0xFF << I3C_RMR_RCODE_Pos;
pub const I3C_RMR_RCODE: u32 = I3C_RMR_RCODE_Msk;
pub const I3C_RMR_RADD_Pos: u32 = 17;
pub const I3C_RMR_RADD_Msk: u32 = 0x7F << I3C_RMR_RADD_Pos;
pub const I3C_RMR_RADD: u32 = I3C_RMR_RADD_Msk;
pub const I3C_EVR_CFEF_Pos: u32 = 0;
pub const I3C_EVR_CFEF_Msk: u32 = 0x1 << I3C_EVR_CFEF_Pos;
pub const I3C_EVR_CFEF: u32 = I3C_EVR_CFEF_Msk;
pub const I3C_EVR_TXFEF_Pos: u32 = 1;
pub const I3C_EVR_TXFEF_Msk: u32 = 0x1 << I3C_EVR_TXFEF_Pos;
pub const I3C_EVR_TXFEF: u32 = I3C_EVR_TXFEF_Msk;
pub const I3C_EVR_CFNFF_Pos: u32 = 2;
pub const I3C_EVR_CFNFF_Msk: u32 = 0x1 << I3C_EVR_CFNFF_Pos;
pub const I3C_EVR_CFNFF: u32 = I3C_EVR_CFNFF_Msk;
pub const I3C_EVR_SFNEF_Pos: u32 = 3;
pub const I3C_EVR_SFNEF_Msk: u32 = 0x1 << I3C_EVR_SFNEF_Pos;
pub const I3C_EVR_SFNEF: u32 = I3C_EVR_SFNEF_Msk;
pub const I3C_EVR_TXFNFF_Pos: u32 = 4;
pub const I3C_EVR_TXFNFF_Msk: u32 = 0x1 << I3C_EVR_TXFNFF_Pos;
pub const I3C_EVR_TXFNFF: u32 = I3C_EVR_TXFNFF_Msk;
pub const I3C_EVR_RXFNEF_Pos: u32 = 5;
pub const I3C_EVR_RXFNEF_Msk: u32 = 0x1 << I3C_EVR_RXFNEF_Pos;
pub const I3C_EVR_RXFNEF: u32 = I3C_EVR_RXFNEF_Msk;
pub const I3C_EVR_TXLASTF_Pos: u32 = 6;
pub const I3C_EVR_TXLASTF_Msk: u32 = 0x1 << I3C_EVR_TXLASTF_Pos;
pub const I3C_EVR_TXLASTF: u32 = I3C_EVR_TXLASTF_Msk;
pub const I3C_EVR_RXLASTF_Pos: u32 = 7;
pub const I3C_EVR_RXLASTF_Msk: u32 = 0x1 << I3C_EVR_RXLASTF_Pos;
pub const I3C_EVR_RXLASTF: u32 = I3C_EVR_RXLASTF_Msk;
pub const I3C_EVR_FCF_Pos: u32 = 9;
pub const I3C_EVR_FCF_Msk: u32 = 0x1 << I3C_EVR_FCF_Pos;
pub const I3C_EVR_FCF: u32 = I3C_EVR_FCF_Msk;
pub const I3C_EVR_RXTGTENDF_Pos: u32 = 10;
pub const I3C_EVR_RXTGTENDF_Msk: u32 = 0x1 << I3C_EVR_RXTGTENDF_Pos;
pub const I3C_EVR_RXTGTENDF: u32 = I3C_EVR_RXTGTENDF_Msk;
pub const I3C_EVR_ERRF_Pos: u32 = 11;
pub const I3C_EVR_ERRF_Msk: u32 = 0x1 << I3C_EVR_ERRF_Pos;
pub const I3C_EVR_ERRF: u32 = I3C_EVR_ERRF_Msk;
pub const I3C_EVR_IBIF_Pos: u32 = 15;
pub const I3C_EVR_IBIF_Msk: u32 = 0x1 << I3C_EVR_IBIF_Pos;
pub const I3C_EVR_IBIF: u32 = I3C_EVR_IBIF_Msk;
pub const I3C_EVR_IBIENDF_Pos: u32 = 16;
pub const I3C_EVR_IBIENDF_Msk: u32 = 0x1 << I3C_EVR_IBIENDF_Pos;
pub const I3C_EVR_IBIENDF: u32 = I3C_EVR_IBIENDF_Msk;
pub const I3C_EVR_CRF_Pos: u32 = 17;
pub const I3C_EVR_CRF_Msk: u32 = 0x1 << I3C_EVR_CRF_Pos;
pub const I3C_EVR_CRF: u32 = I3C_EVR_CRF_Msk;
pub const I3C_EVR_CRUPDF_Pos: u32 = 18;
pub const I3C_EVR_CRUPDF_Msk: u32 = 0x1 << I3C_EVR_CRUPDF_Pos;
pub const I3C_EVR_CRUPDF: u32 = I3C_EVR_CRUPDF_Msk;
pub const I3C_EVR_HJF_Pos: u32 = 19;
pub const I3C_EVR_HJF_Msk: u32 = 0x1 << I3C_EVR_HJF_Pos;
pub const I3C_EVR_HJF: u32 = I3C_EVR_HJF_Msk;
pub const I3C_EVR_WKPF_Pos: u32 = 21;
pub const I3C_EVR_WKPF_Msk: u32 = 0x1 << I3C_EVR_WKPF_Pos;
pub const I3C_EVR_WKPF: u32 = I3C_EVR_WKPF_Msk;
pub const I3C_EVR_GETF_Pos: u32 = 22;
pub const I3C_EVR_GETF_Msk: u32 = 0x1 << I3C_EVR_GETF_Pos;
pub const I3C_EVR_GETF: u32 = I3C_EVR_GETF_Msk;
pub const I3C_EVR_STAF_Pos: u32 = 23;
pub const I3C_EVR_STAF_Msk: u32 = 0x1 << I3C_EVR_STAF_Pos;
pub const I3C_EVR_STAF: u32 = I3C_EVR_STAF_Msk;
pub const I3C_EVR_DAUPDF_Pos: u32 = 24;
pub const I3C_EVR_DAUPDF_Msk: u32 = 0x1 << I3C_EVR_DAUPDF_Pos;
pub const I3C_EVR_DAUPDF: u32 = I3C_EVR_DAUPDF_Msk;
pub const I3C_EVR_MWLUPDF_Pos: u32 = 25;
pub const I3C_EVR_MWLUPDF_Msk: u32 = 0x1 << I3C_EVR_MWLUPDF_Pos;
pub const I3C_EVR_MWLUPDF: u32 = I3C_EVR_MWLUPDF_Msk;
pub const I3C_EVR_MRLUPDF_Pos: u32 = 26;
pub const I3C_EVR_MRLUPDF_Msk: u32 = 0x1 << I3C_EVR_MRLUPDF_Pos;
pub const I3C_EVR_MRLUPDF: u32 = I3C_EVR_MRLUPDF_Msk;
pub const I3C_EVR_RSTF_Pos: u32 = 27;
pub const I3C_EVR_RSTF_Msk: u32 = 0x1 << I3C_EVR_RSTF_Pos;
pub const I3C_EVR_RSTF: u32 = I3C_EVR_RSTF_Msk;
pub const I3C_EVR_ASUPDF_Pos: u32 = 28;
pub const I3C_EVR_ASUPDF_Msk: u32 = 0x1 << I3C_EVR_ASUPDF_Pos;
pub const I3C_EVR_ASUPDF: u32 = I3C_EVR_ASUPDF_Msk;
pub const I3C_EVR_INTUPDF_Pos: u32 = 29;
pub const I3C_EVR_INTUPDF_Msk: u32 = 0x1 << I3C_EVR_INTUPDF_Pos;
pub const I3C_EVR_INTUPDF: u32 = I3C_EVR_INTUPDF_Msk;
pub const I3C_EVR_DEFF_Pos: u32 = 30;
pub const I3C_EVR_DEFF_Msk: u32 = 0x1 << I3C_EVR_DEFF_Pos;
pub const I3C_EVR_DEFF: u32 = I3C_EVR_DEFF_Msk;
pub const I3C_EVR_GRPF_Pos: u32 = 31;
pub const I3C_EVR_GRPF_Msk: u32 = 0x1 << I3C_EVR_GRPF_Pos;
pub const I3C_EVR_GRPF: u32 = I3C_EVR_GRPF_Msk;
pub const I3C_IER_CFNFIE_Pos: u32 = 2;
pub const I3C_IER_CFNFIE_Msk: u32 = 0x1 << I3C_IER_CFNFIE_Pos;
pub const I3C_IER_CFNFIE: u32 = I3C_IER_CFNFIE_Msk;
pub const I3C_IER_SFNEIE_Pos: u32 = 3;
pub const I3C_IER_SFNEIE_Msk: u32 = 0x1 << I3C_IER_SFNEIE_Pos;
pub const I3C_IER_SFNEIE: u32 = I3C_IER_SFNEIE_Msk;
pub const I3C_IER_TXFNFIE_Pos: u32 = 4;
pub const I3C_IER_TXFNFIE_Msk: u32 = 0x1 << I3C_IER_TXFNFIE_Pos;
pub const I3C_IER_TXFNFIE: u32 = I3C_IER_TXFNFIE_Msk;
pub const I3C_IER_RXFNEIE_Pos: u32 = 5;
pub const I3C_IER_RXFNEIE_Msk: u32 = 0x1 << I3C_IER_RXFNEIE_Pos;
pub const I3C_IER_RXFNEIE: u32 = I3C_IER_RXFNEIE_Msk;
pub const I3C_IER_FCIE_Pos: u32 = 9;
pub const I3C_IER_FCIE_Msk: u32 = 0x1 << I3C_IER_FCIE_Pos;
pub const I3C_IER_FCIE: u32 = I3C_IER_FCIE_Msk;
pub const I3C_IER_RXTGTENDIE_Pos: u32 = 10;
pub const I3C_IER_RXTGTENDIE_Msk: u32 = 0x1 << I3C_IER_RXTGTENDIE_Pos;
pub const I3C_IER_RXTGTENDIE: u32 = I3C_IER_RXTGTENDIE_Msk;
pub const I3C_IER_ERRIE_Pos: u32 = 11;
pub const I3C_IER_ERRIE_Msk: u32 = 0x1 << I3C_IER_ERRIE_Pos;
pub const I3C_IER_ERRIE: u32 = I3C_IER_ERRIE_Msk;
pub const I3C_IER_IBIIE_Pos: u32 = 15;
pub const I3C_IER_IBIIE_Msk: u32 = 0x1 << I3C_IER_IBIIE_Pos;
pub const I3C_IER_IBIIE: u32 = I3C_IER_IBIIE_Msk;
pub const I3C_IER_IBIENDIE_Pos: u32 = 16;
pub const I3C_IER_IBIENDIE_Msk: u32 = 0x1 << I3C_IER_IBIENDIE_Pos;
pub const I3C_IER_IBIENDIE: u32 = I3C_IER_IBIENDIE_Msk;
pub const I3C_IER_CRIE_Pos: u32 = 17;
pub const I3C_IER_CRIE_Msk: u32 = 0x1 << I3C_IER_CRIE_Pos;
pub const I3C_IER_CRIE: u32 = I3C_IER_CRIE_Msk;
pub const I3C_IER_CRUPDIE_Pos: u32 = 18;
pub const I3C_IER_CRUPDIE_Msk: u32 = 0x1 << I3C_IER_CRUPDIE_Pos;
pub const I3C_IER_CRUPDIE: u32 = I3C_IER_CRUPDIE_Msk;
pub const I3C_IER_HJIE_Pos: u32 = 19;
pub const I3C_IER_HJIE_Msk: u32 = 0x1 << I3C_IER_HJIE_Pos;
pub const I3C_IER_HJIE: u32 = I3C_IER_HJIE_Msk;
pub const I3C_IER_WKPIE_Pos: u32 = 21;
pub const I3C_IER_WKPIE_Msk: u32 = 0x1 << I3C_IER_WKPIE_Pos;
pub const I3C_IER_WKPIE: u32 = I3C_IER_WKPIE_Msk;
pub const I3C_IER_GETIE_Pos: u32 = 22;
pub const I3C_IER_GETIE_Msk: u32 = 0x1 << I3C_IER_GETIE_Pos;
pub const I3C_IER_GETIE: u32 = I3C_IER_GETIE_Msk;
pub const I3C_IER_STAIE_Pos: u32 = 23;
pub const I3C_IER_STAIE_Msk: u32 = 0x1 << I3C_IER_STAIE_Pos;
pub const I3C_IER_STAIE: u32 = I3C_IER_STAIE_Msk;
pub const I3C_IER_DAUPDIE_Pos: u32 = 24;
pub const I3C_IER_DAUPDIE_Msk: u32 = 0x1 << I3C_IER_DAUPDIE_Pos;
pub const I3C_IER_DAUPDIE: u32 = I3C_IER_DAUPDIE_Msk;
pub const I3C_IER_MWLUPDIE_Pos: u32 = 25;
pub const I3C_IER_MWLUPDIE_Msk: u32 = 0x1 << I3C_IER_MWLUPDIE_Pos;
pub const I3C_IER_MWLUPDIE: u32 = I3C_IER_MWLUPDIE_Msk;
pub const I3C_IER_MRLUPDIE_Pos: u32 = 26;
pub const I3C_IER_MRLUPDIE_Msk: u32 = 0x1 << I3C_IER_MRLUPDIE_Pos;
pub const I3C_IER_MRLUPDIE: u32 = I3C_IER_MRLUPDIE_Msk;
pub const I3C_IER_RSTIE_Pos: u32 = 27;
pub const I3C_IER_RSTIE_Msk: u32 = 0x1 << I3C_IER_RSTIE_Pos;
pub const I3C_IER_RSTIE: u32 = I3C_IER_RSTIE_Msk;
pub const I3C_IER_ASUPDIE_Pos: u32 = 28;
pub const I3C_IER_ASUPDIE_Msk: u32 = 0x1 << I3C_IER_ASUPDIE_Pos;
pub const I3C_IER_ASUPDIE: u32 = I3C_IER_ASUPDIE_Msk;
pub const I3C_IER_INTUPDIE_Pos: u32 = 29;
pub const I3C_IER_INTUPDIE_Msk: u32 = 0x1 << I3C_IER_INTUPDIE_Pos;
pub const I3C_IER_INTUPDIE: u32 = I3C_IER_INTUPDIE_Msk;
pub const I3C_IER_DEFIE_Pos: u32 = 30;
pub const I3C_IER_DEFIE_Msk: u32 = 0x1 << I3C_IER_DEFIE_Pos;
pub const I3C_IER_DEFIE: u32 = I3C_IER_DEFIE_Msk;
pub const I3C_IER_GRPIE_Pos: u32 = 31;
pub const I3C_IER_GRPIE_Msk: u32 = 0x1 << I3C_IER_GRPIE_Pos;
pub const I3C_IER_GRPIE: u32 = I3C_IER_GRPIE_Msk;
pub const I3C_CEVR_CFCF_Pos: u32 = 9;
pub const I3C_CEVR_CFCF_Msk: u32 = 0x1 << I3C_CEVR_CFCF_Pos;
pub const I3C_CEVR_CFCF: u32 = I3C_CEVR_CFCF_Msk;
pub const I3C_CEVR_CRXTGTENDF_Pos: u32 = 10;
pub const I3C_CEVR_CRXTGTENDF_Msk: u32 = 0x1 << I3C_CEVR_CRXTGTENDF_Pos;
pub const I3C_CEVR_CRXTGTENDF: u32 = I3C_CEVR_CRXTGTENDF_Msk;
pub const I3C_CEVR_CERRF_Pos: u32 = 11;
pub const I3C_CEVR_CERRF_Msk: u32 = 0x1 << I3C_CEVR_CERRF_Pos;
pub const I3C_CEVR_CERRF: u32 = I3C_CEVR_CERRF_Msk;
pub const I3C_CEVR_CIBIF_Pos: u32 = 15;
pub const I3C_CEVR_CIBIF_Msk: u32 = 0x1 << I3C_CEVR_CIBIF_Pos;
pub const I3C_CEVR_CIBIF: u32 = I3C_CEVR_CIBIF_Msk;
pub const I3C_CEVR_CIBIENDF_Pos: u32 = 16;
pub const I3C_CEVR_CIBIENDF_Msk: u32 = 0x1 << I3C_CEVR_CIBIENDF_Pos;
pub const I3C_CEVR_CIBIENDF: u32 = I3C_CEVR_CIBIENDF_Msk;
pub const I3C_CEVR_CCRF_Pos: u32 = 17;
pub const I3C_CEVR_CCRF_Msk: u32 = 0x1 << I3C_CEVR_CCRF_Pos;
pub const I3C_CEVR_CCRF: u32 = I3C_CEVR_CCRF_Msk;
pub const I3C_CEVR_CCRUPDF_Pos: u32 = 18;
pub const I3C_CEVR_CCRUPDF_Msk: u32 = 0x1 << I3C_CEVR_CCRUPDF_Pos;
pub const I3C_CEVR_CCRUPDF: u32 = I3C_CEVR_CCRUPDF_Msk;
pub const I3C_CEVR_CHJF_Pos: u32 = 19;
pub const I3C_CEVR_CHJF_Msk: u32 = 0x1 << I3C_CEVR_CHJF_Pos;
pub const I3C_CEVR_CHJF: u32 = I3C_CEVR_CHJF_Msk;
pub const I3C_CEVR_CWKPF_Pos: u32 = 21;
pub const I3C_CEVR_CWKPF_Msk: u32 = 0x1 << I3C_CEVR_CWKPF_Pos;
pub const I3C_CEVR_CWKPF: u32 = I3C_CEVR_CWKPF_Msk;
pub const I3C_CEVR_CGETF_Pos: u32 = 22;
pub const I3C_CEVR_CGETF_Msk: u32 = 0x1 << I3C_CEVR_CGETF_Pos;
pub const I3C_CEVR_CGETF: u32 = I3C_CEVR_CGETF_Msk;
pub const I3C_CEVR_CSTAF_Pos: u32 = 23;
pub const I3C_CEVR_CSTAF_Msk: u32 = 0x1 << I3C_CEVR_CSTAF_Pos;
pub const I3C_CEVR_CSTAF: u32 = I3C_CEVR_CSTAF_Msk;
pub const I3C_CEVR_CDAUPDF_Pos: u32 = 24;
pub const I3C_CEVR_CDAUPDF_Msk: u32 = 0x1 << I3C_CEVR_CDAUPDF_Pos;
pub const I3C_CEVR_CDAUPDF: u32 = I3C_CEVR_CDAUPDF_Msk;
pub const I3C_CEVR_CMWLUPDF_Pos: u32 = 25;
pub const I3C_CEVR_CMWLUPDF_Msk: u32 = 0x1 << I3C_CEVR_CMWLUPDF_Pos;
pub const I3C_CEVR_CMWLUPDF: u32 = I3C_CEVR_CMWLUPDF_Msk;
pub const I3C_CEVR_CMRLUPDF_Pos: u32 = 26;
pub const I3C_CEVR_CMRLUPDF_Msk: u32 = 0x1 << I3C_CEVR_CMRLUPDF_Pos;
pub const I3C_CEVR_CMRLUPDF: u32 = I3C_CEVR_CMRLUPDF_Msk;
pub const I3C_CEVR_CRSTF_Pos: u32 = 27;
pub const I3C_CEVR_CRSTF_Msk: u32 = 0x1 << I3C_CEVR_CRSTF_Pos;
pub const I3C_CEVR_CRSTF: u32 = I3C_CEVR_CRSTF_Msk;
pub const I3C_CEVR_CASUPDF_Pos: u32 = 28;
pub const I3C_CEVR_CASUPDF_Msk: u32 = 0x1 << I3C_CEVR_CASUPDF_Pos;
pub const I3C_CEVR_CASUPDF: u32 = I3C_CEVR_CASUPDF_Msk;
pub const I3C_CEVR_CINTUPDF_Pos: u32 = 29;
pub const I3C_CEVR_CINTUPDF_Msk: u32 = 0x1 << I3C_CEVR_CINTUPDF_Pos;
pub const I3C_CEVR_CINTUPDF: u32 = I3C_CEVR_CINTUPDF_Msk;
pub const I3C_CEVR_CDEFF_Pos: u32 = 30;
pub const I3C_CEVR_CDEFF_Msk: u32 = 0x1 << I3C_CEVR_CDEFF_Pos;
pub const I3C_CEVR_CDEFF: u32 = I3C_CEVR_CDEFF_Msk;
pub const I3C_CEVR_CGRPF_Pos: u32 = 31;
pub const I3C_CEVR_CGRPF_Msk: u32 = 0x1 << I3C_CEVR_CGRPF_Pos;
pub const I3C_CEVR_CGRPF: u32 = I3C_CEVR_CGRPF_Msk;
pub const I3C_DEVR0_DAVAL_Pos: u32 = 0;
pub const I3C_DEVR0_DAVAL_Msk: u32 = 0x1 << I3C_DEVR0_DAVAL_Pos;
pub const I3C_DEVR0_DAVAL: u32 = I3C_DEVR0_DAVAL_Msk;
pub const I3C_DEVR0_DA_Pos: u32 = 1;
pub const I3C_DEVR0_DA_Msk: u32 = 0x7F << I3C_DEVR0_DA_Pos;
pub const I3C_DEVR0_DA: u32 = I3C_DEVR0_DA_Msk;
pub const I3C_DEVR0_IBIEN_Pos: u32 = 16;
pub const I3C_DEVR0_IBIEN_Msk: u32 = 0x1 << I3C_DEVR0_IBIEN_Pos;
pub const I3C_DEVR0_IBIEN: u32 = I3C_DEVR0_IBIEN_Msk;
pub const I3C_DEVR0_CREN_Pos: u32 = 17;
pub const I3C_DEVR0_CREN_Msk: u32 = 0x1 << I3C_DEVR0_CREN_Pos;
pub const I3C_DEVR0_CREN: u32 = I3C_DEVR0_CREN_Msk;
pub const I3C_DEVR0_HJEN_Pos: u32 = 19;
pub const I3C_DEVR0_HJEN_Msk: u32 = 0x1 << I3C_DEVR0_HJEN_Pos;
pub const I3C_DEVR0_HJEN: u32 = I3C_DEVR0_HJEN_Msk;
pub const I3C_DEVR0_AS_Pos: u32 = 20;
pub const I3C_DEVR0_AS_Msk: u32 = 0x3 << I3C_DEVR0_AS_Pos;
pub const I3C_DEVR0_AS: u32 = I3C_DEVR0_AS_Msk;
pub const I3C_DEVR0_AS_0: u32 = 0x1 << I3C_DEVR0_AS_Pos;
pub const I3C_DEVR0_AS_1: u32 = 0x2 << I3C_DEVR0_AS_Pos;
pub const I3C_DEVR0_RSTACT_Pos: u32 = 22;
pub const I3C_DEVR0_RSTACT_Msk: u32 = 0x3 << I3C_DEVR0_RSTACT_Pos;
pub const I3C_DEVR0_RSTACT: u32 = I3C_DEVR0_RSTACT_Msk;
pub const I3C_DEVR0_RSTACT_0: u32 = 0x1 << I3C_DEVR0_RSTACT_Pos;
pub const I3C_DEVR0_RSTACT_1: u32 = 0x2 << I3C_DEVR0_RSTACT_Pos;
pub const I3C_DEVR0_RSTVAL_Pos: u32 = 24;
pub const I3C_DEVR0_RSTVAL_Msk: u32 = 0x1 << I3C_DEVR0_RSTVAL_Pos;
pub const I3C_DEVR0_RSTVAL: u32 = I3C_DEVR0_RSTVAL_Msk;
pub const I3C_DEVRX_DA_Pos: u32 = 1;
pub const I3C_DEVRX_DA_Msk: u32 = 0x7F << I3C_DEVRX_DA_Pos;
pub const I3C_DEVRX_DA: u32 = I3C_DEVRX_DA_Msk;
pub const I3C_DEVRX_IBIACK_Pos: u32 = 16;
pub const I3C_DEVRX_IBIACK_Msk: u32 = 0x1 << I3C_DEVRX_IBIACK_Pos;
pub const I3C_DEVRX_IBIACK: u32 = I3C_DEVRX_IBIACK_Msk;
pub const I3C_DEVRX_CRACK_Pos: u32 = 17;
pub const I3C_DEVRX_CRACK_Msk: u32 = 0x1 << I3C_DEVRX_CRACK_Pos;
pub const I3C_DEVRX_CRACK: u32 = I3C_DEVRX_CRACK_Msk;
pub const I3C_DEVRX_IBIDEN_Pos: u32 = 18;
pub const I3C_DEVRX_IBIDEN_Msk: u32 = 0x1 << I3C_DEVRX_IBIDEN_Pos;
pub const I3C_DEVRX_IBIDEN: u32 = I3C_DEVRX_IBIDEN_Msk;
pub const I3C_DEVRX_SUSP_Pos: u32 = 19;
pub const I3C_DEVRX_SUSP_Msk: u32 = 0x1 << I3C_DEVRX_SUSP_Pos;
pub const I3C_DEVRX_SUSP: u32 = I3C_DEVRX_SUSP_Msk;
pub const I3C_DEVRX_DIS_Pos: u32 = 31;
pub const I3C_DEVRX_DIS_Msk: u32 = 0x1 << I3C_DEVRX_DIS_Pos;
pub const I3C_DEVRX_DIS: u32 = I3C_DEVRX_DIS_Msk;
pub const I3C_MAXRLR_MRL_Pos: u32 = 0;
pub const I3C_MAXRLR_MRL_Msk: u32 = 0xFFFF << I3C_MAXRLR_MRL_Pos;
pub const I3C_MAXRLR_MRL: u32 = I3C_MAXRLR_MRL_Msk;
pub const I3C_MAXRLR_IBIP_Pos: u32 = 16;
pub const I3C_MAXRLR_IBIP_Msk: u32 = 0x7 << I3C_MAXRLR_IBIP_Pos;
pub const I3C_MAXRLR_IBIP: u32 = I3C_MAXRLR_IBIP_Msk;
pub const I3C_MAXRLR_IBIP_0: u32 = 0x1 << I3C_MAXRLR_IBIP_Pos;
pub const I3C_MAXRLR_IBIP_1: u32 = 0x2 << I3C_MAXRLR_IBIP_Pos;
pub const I3C_MAXRLR_IBIP_2: u32 = 0x4 << I3C_MAXRLR_IBIP_Pos;
pub const I3C_MAXWLR_MWL_Pos: u32 = 0;
pub const I3C_MAXWLR_MWL_Msk: u32 = 0xFFFF << I3C_MAXWLR_MWL_Pos;
pub const I3C_MAXWLR_MWL: u32 = I3C_MAXWLR_MWL_Msk;
pub const I3C_TIMINGR0_SCLL_PP_Pos: u32 = 0;
pub const I3C_TIMINGR0_SCLL_PP_Msk: u32 = 0xFF << I3C_TIMINGR0_SCLL_PP_Pos;
pub const I3C_TIMINGR0_SCLL_PP: u32 = I3C_TIMINGR0_SCLL_PP_Msk;
pub const I3C_TIMINGR0_SCLH_I3C_Pos: u32 = 8;
pub const I3C_TIMINGR0_SCLH_I3C_Msk: u32 = 0xFF << I3C_TIMINGR0_SCLH_I3C_Pos;
pub const I3C_TIMINGR0_SCLH_I3C: u32 = I3C_TIMINGR0_SCLH_I3C_Msk;
pub const I3C_TIMINGR0_SCLL_OD_Pos: u32 = 16;
pub const I3C_TIMINGR0_SCLL_OD_Msk: u32 = 0xFF << I3C_TIMINGR0_SCLL_OD_Pos;
pub const I3C_TIMINGR0_SCLL_OD: u32 = I3C_TIMINGR0_SCLL_OD_Msk;
pub const I3C_TIMINGR0_SCLH_I2C_Pos: u32 = 24;
pub const I3C_TIMINGR0_SCLH_I2C_Msk: u32 = 0xFF << I3C_TIMINGR0_SCLH_I2C_Pos;
pub const I3C_TIMINGR0_SCLH_I2C: u32 = I3C_TIMINGR0_SCLH_I2C_Msk;
pub const I3C_TIMINGR1_AVAL_Pos: u32 = 0;
pub const I3C_TIMINGR1_AVAL_Msk: u32 = 0xFF << I3C_TIMINGR1_AVAL_Pos;
pub const I3C_TIMINGR1_AVAL: u32 = I3C_TIMINGR1_AVAL_Msk;
pub const I3C_TIMINGR1_ASNCR_Pos: u32 = 8;
pub const I3C_TIMINGR1_ASNCR_Msk: u32 = 0x3 << I3C_TIMINGR1_ASNCR_Pos;
pub const I3C_TIMINGR1_ASNCR: u32 = I3C_TIMINGR1_ASNCR_Msk;
pub const I3C_TIMINGR1_ASNCR_0: u32 = 0x1 << I3C_TIMINGR1_ASNCR_Pos;
pub const I3C_TIMINGR1_ASNCR_1: u32 = 0x2 << I3C_TIMINGR1_ASNCR_Pos;
pub const I3C_TIMINGR1_FREE_Pos: u32 = 16;
pub const I3C_TIMINGR1_FREE_Msk: u32 = 0x7F << I3C_TIMINGR1_FREE_Pos;
pub const I3C_TIMINGR1_FREE: u32 = I3C_TIMINGR1_FREE_Msk;
pub const I3C_TIMINGR1_SDA_HD_Pos: u32 = 28;
pub const I3C_TIMINGR1_SDA_HD_Msk: u32 = 0x1 << I3C_TIMINGR1_SDA_HD_Pos;
pub const I3C_TIMINGR1_SDA_HD: u32 = I3C_TIMINGR1_SDA_HD_Msk;
pub const I3C_TIMINGR2_STALLT_Pos: u32 = 0;
pub const I3C_TIMINGR2_STALLT_Msk: u32 = 0x1 << I3C_TIMINGR2_STALLT_Pos;
pub const I3C_TIMINGR2_STALLT: u32 = I3C_TIMINGR2_STALLT_Msk;
pub const I3C_TIMINGR2_STALLD_Pos: u32 = 1;
pub const I3C_TIMINGR2_STALLD_Msk: u32 = 0x1 << I3C_TIMINGR2_STALLD_Pos;
pub const I3C_TIMINGR2_STALLD: u32 = I3C_TIMINGR2_STALLD_Msk;
pub const I3C_TIMINGR2_STALLC_Pos: u32 = 2;
pub const I3C_TIMINGR2_STALLC_Msk: u32 = 0x1 << I3C_TIMINGR2_STALLC_Pos;
pub const I3C_TIMINGR2_STALLC: u32 = I3C_TIMINGR2_STALLC_Msk;
pub const I3C_TIMINGR2_STALLA_Pos: u32 = 3;
pub const I3C_TIMINGR2_STALLA_Msk: u32 = 0x1 << I3C_TIMINGR2_STALLA_Pos;
pub const I3C_TIMINGR2_STALLA: u32 = I3C_TIMINGR2_STALLA_Msk;
pub const I3C_TIMINGR2_STALL_Pos: u32 = 8;
pub const I3C_TIMINGR2_STALL_Msk: u32 = 0xFF << I3C_TIMINGR2_STALL_Pos;
pub const I3C_TIMINGR2_STALL: u32 = I3C_TIMINGR2_STALL_Msk;
pub const I3C_BCR_BCR_Pos: u32 = 0;
pub const I3C_BCR_BCR_Msk: u32 = 0xFF << I3C_BCR_BCR_Pos;
pub const I3C_BCR_BCR: u32 = I3C_BCR_BCR_Msk;
pub const I3C_BCR_BCR0_Pos: u32 = 0;
pub const I3C_BCR_BCR0_Msk: u32 = 0x1 << I3C_BCR_BCR0_Pos;
pub const I3C_BCR_BCR0: u32 = I3C_BCR_BCR0_Msk;
pub const I3C_BCR_BCR1_Pos: u32 = 1;
pub const I3C_BCR_BCR1_Msk: u32 = 0x1 << I3C_BCR_BCR1_Pos;
pub const I3C_BCR_BCR1: u32 = I3C_BCR_BCR1_Msk;
pub const I3C_BCR_BCR2_Pos: u32 = 2;
pub const I3C_BCR_BCR2_Msk: u32 = 0x1 << I3C_BCR_BCR2_Pos;
pub const I3C_BCR_BCR2: u32 = I3C_BCR_BCR2_Msk;
pub const I3C_BCR_BCR3_Pos: u32 = 3;
pub const I3C_BCR_BCR3_Msk: u32 = 0x1 << I3C_BCR_BCR3_Pos;
pub const I3C_BCR_BCR3: u32 = I3C_BCR_BCR3_Msk;
pub const I3C_BCR_BCR4_Pos: u32 = 4;
pub const I3C_BCR_BCR4_Msk: u32 = 0x1 << I3C_BCR_BCR4_Pos;
pub const I3C_BCR_BCR4: u32 = I3C_BCR_BCR4_Msk;
pub const I3C_BCR_BCR5_Pos: u32 = 5;
pub const I3C_BCR_BCR5_Msk: u32 = 0x1 << I3C_BCR_BCR5_Pos;
pub const I3C_BCR_BCR5: u32 = I3C_BCR_BCR5_Msk;
pub const I3C_BCR_BCR6_Pos: u32 = 6;
pub const I3C_BCR_BCR6_Msk: u32 = 0x1 << I3C_BCR_BCR6_Pos;
pub const I3C_BCR_BCR6: u32 = I3C_BCR_BCR6_Msk;
pub const I3C_DCR_DCR_Pos: u32 = 0;
pub const I3C_DCR_DCR_Msk: u32 = 0xFF << I3C_DCR_DCR_Pos;
pub const I3C_DCR_DCR: u32 = I3C_DCR_DCR_Msk;
pub const I3C_GETCAPR_CAPPEND_Pos: u32 = 14;
pub const I3C_GETCAPR_CAPPEND_Msk: u32 = 0x1 << I3C_GETCAPR_CAPPEND_Pos;
pub const I3C_GETCAPR_CAPPEND: u32 = I3C_GETCAPR_CAPPEND_Msk;
pub const I3C_CRCAPR_CAPDHOFF_Pos: u32 = 3;
pub const I3C_CRCAPR_CAPDHOFF_Msk: u32 = 0x1 << I3C_CRCAPR_CAPDHOFF_Pos;
pub const I3C_CRCAPR_CAPDHOFF: u32 = I3C_CRCAPR_CAPDHOFF_Msk;
pub const I3C_CRCAPR_CAPGRP_Pos: u32 = 9;
pub const I3C_CRCAPR_CAPGRP_Msk: u32 = 0x1 << I3C_CRCAPR_CAPGRP_Pos;
pub const I3C_CRCAPR_CAPGRP: u32 = I3C_CRCAPR_CAPGRP_Msk;
pub const I3C_GETMXDSR_HOFFAS_Pos: u32 = 0;
pub const I3C_GETMXDSR_HOFFAS_Msk: u32 = 0x3 << I3C_GETMXDSR_HOFFAS_Pos;
pub const I3C_GETMXDSR_HOFFAS: u32 = I3C_GETMXDSR_HOFFAS_Msk;
pub const I3C_GETMXDSR_HOFFAS_0: u32 = 0x1 << I3C_GETMXDSR_HOFFAS_Pos;
pub const I3C_GETMXDSR_HOFFAS_1: u32 = 0x2 << I3C_GETMXDSR_HOFFAS_Pos;
pub const I3C_GETMXDSR_FMT_Pos: u32 = 8;
pub const I3C_GETMXDSR_FMT_Msk: u32 = 0x3 << I3C_GETMXDSR_FMT_Pos;
pub const I3C_GETMXDSR_FMT: u32 = I3C_GETMXDSR_FMT_Msk;
pub const I3C_GETMXDSR_FMT_0: u32 = 0x1 << I3C_GETMXDSR_FMT_Pos;
pub const I3C_GETMXDSR_FMT_1: u32 = 0x2 << I3C_GETMXDSR_FMT_Pos;
pub const I3C_GETMXDSR_RDTURN_Pos: u32 = 16;
pub const I3C_GETMXDSR_RDTURN_Msk: u32 = 0xFF << I3C_GETMXDSR_RDTURN_Pos;
pub const I3C_GETMXDSR_RDTURN: u32 = I3C_GETMXDSR_RDTURN_Msk;
pub const I3C_GETMXDSR_TSCO_Pos: u32 = 24;
pub const I3C_GETMXDSR_TSCO_Msk: u32 = 0x1 << I3C_GETMXDSR_TSCO_Pos;
pub const I3C_GETMXDSR_TSCO: u32 = I3C_GETMXDSR_TSCO_Msk;
pub const I3C_EPIDR_MIPIID_Pos: u32 = 12;
pub const I3C_EPIDR_MIPIID_Msk: u32 = 0xF << I3C_EPIDR_MIPIID_Pos;
pub const I3C_EPIDR_MIPIID: u32 = I3C_EPIDR_MIPIID_Msk;
pub const I3C_EPIDR_IDTSEL_Pos: u32 = 16;
pub const I3C_EPIDR_IDTSEL_Msk: u32 = 0x1 << I3C_EPIDR_IDTSEL_Pos;
pub const I3C_EPIDR_IDTSEL: u32 = I3C_EPIDR_IDTSEL_Msk;
pub const I3C_EPIDR_MIPIMID_Pos: u32 = 17;
pub const I3C_EPIDR_MIPIMID_Msk: u32 = 0x7FFF << I3C_EPIDR_MIPIMID_Pos;
pub const I3C_EPIDR_MIPIMID: u32 = I3C_EPIDR_MIPIMID_Msk;
pub const ICACHE_CR_EN_Pos: u32 = 0;
pub const ICACHE_CR_EN_Msk: u32 = 0x1 << ICACHE_CR_EN_Pos;
pub const ICACHE_CR_EN: u32 = ICACHE_CR_EN_Msk;
pub const ICACHE_CR_CACHEINV_Pos: u32 = 1;
pub const ICACHE_CR_CACHEINV_Msk: u32 = 0x1 << ICACHE_CR_CACHEINV_Pos;
pub const ICACHE_CR_CACHEINV: u32 = ICACHE_CR_CACHEINV_Msk;
pub const ICACHE_CR_WAYSEL_Pos: u32 = 2;
pub const ICACHE_CR_WAYSEL_Msk: u32 = 0x1 << ICACHE_CR_WAYSEL_Pos;
pub const ICACHE_CR_WAYSEL: u32 = ICACHE_CR_WAYSEL_Msk;
pub const ICACHE_CR_HITMEN_Pos: u32 = 16;
pub const ICACHE_CR_HITMEN_Msk: u32 = 0x1 << ICACHE_CR_HITMEN_Pos;
pub const ICACHE_CR_HITMEN: u32 = ICACHE_CR_HITMEN_Msk;
pub const ICACHE_CR_MISSMEN_Pos: u32 = 17;
pub const ICACHE_CR_MISSMEN_Msk: u32 = 0x1 << ICACHE_CR_MISSMEN_Pos;
pub const ICACHE_CR_MISSMEN: u32 = ICACHE_CR_MISSMEN_Msk;
pub const ICACHE_CR_HITMRST_Pos: u32 = 18;
pub const ICACHE_CR_HITMRST_Msk: u32 = 0x1 << ICACHE_CR_HITMRST_Pos;
pub const ICACHE_CR_HITMRST: u32 = ICACHE_CR_HITMRST_Msk;
pub const ICACHE_CR_MISSMRST_Pos: u32 = 19;
pub const ICACHE_CR_MISSMRST_Msk: u32 = 0x1 << ICACHE_CR_MISSMRST_Pos;
pub const ICACHE_CR_MISSMRST: u32 = ICACHE_CR_MISSMRST_Msk;
pub const ICACHE_SR_BUSYF_Pos: u32 = 0;
pub const ICACHE_SR_BUSYF_Msk: u32 = 0x1 << ICACHE_SR_BUSYF_Pos;
pub const ICACHE_SR_BUSYF: u32 = ICACHE_SR_BUSYF_Msk;
pub const ICACHE_SR_BSYENDF_Pos: u32 = 1;
pub const ICACHE_SR_BSYENDF_Msk: u32 = 0x1 << ICACHE_SR_BSYENDF_Pos;
pub const ICACHE_SR_BSYENDF: u32 = ICACHE_SR_BSYENDF_Msk;
pub const ICACHE_SR_ERRF_Pos: u32 = 2;
pub const ICACHE_SR_ERRF_Msk: u32 = 0x1 << ICACHE_SR_ERRF_Pos;
pub const ICACHE_SR_ERRF: u32 = ICACHE_SR_ERRF_Msk;
pub const ICACHE_IER_BSYENDIE_Pos: u32 = 1;
pub const ICACHE_IER_BSYENDIE_Msk: u32 = 0x1 << ICACHE_IER_BSYENDIE_Pos;
pub const ICACHE_IER_BSYENDIE: u32 = ICACHE_IER_BSYENDIE_Msk;
pub const ICACHE_IER_ERRIE_Pos: u32 = 2;
pub const ICACHE_IER_ERRIE_Msk: u32 = 0x1 << ICACHE_IER_ERRIE_Pos;
pub const ICACHE_IER_ERRIE: u32 = ICACHE_IER_ERRIE_Msk;
pub const ICACHE_FCR_CBSYENDF_Pos: u32 = 1;
pub const ICACHE_FCR_CBSYENDF_Msk: u32 = 0x1 << ICACHE_FCR_CBSYENDF_Pos;
pub const ICACHE_FCR_CBSYENDF: u32 = ICACHE_FCR_CBSYENDF_Msk;
pub const ICACHE_FCR_CERRF_Pos: u32 = 2;
pub const ICACHE_FCR_CERRF_Msk: u32 = 0x1 << ICACHE_FCR_CERRF_Pos;
pub const ICACHE_FCR_CERRF: u32 = ICACHE_FCR_CERRF_Msk;
pub const ICACHE_HMONR_HITMON_Pos: u32 = 0;
pub const ICACHE_HMONR_HITMON_Msk: u32 = 0xFFFFFFFF << ICACHE_HMONR_HITMON_Pos;
pub const ICACHE_HMONR_HITMON: u32 = ICACHE_HMONR_HITMON_Msk;
pub const ICACHE_MMONR_MISSMON_Pos: u32 = 0;
pub const ICACHE_MMONR_MISSMON_Msk: u32 = 0xFFFF << ICACHE_MMONR_MISSMON_Pos;
pub const ICACHE_MMONR_MISSMON: u32 = ICACHE_MMONR_MISSMON_Msk;
pub const IWDG_KR_KEY_Pos: u32 = 0;
pub const IWDG_KR_KEY_Msk: u32 = 0xFFFF << IWDG_KR_KEY_Pos;
pub const IWDG_KR_KEY: u32 = IWDG_KR_KEY_Msk;
pub const IWDG_PR_PR_Pos: u32 = 0;
pub const IWDG_PR_PR_Msk: u32 = 0xF << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR: u32 = IWDG_PR_PR_Msk;
pub const IWDG_PR_PR_0: u32 = 0x1 << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR_1: u32 = 0x2 << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR_2: u32 = 0x4 << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR_3: u32 = 0x8 << IWDG_PR_PR_Pos;
pub const IWDG_RLR_RL_Pos: u32 = 0;
pub const IWDG_RLR_RL_Msk: u32 = 0xFFF << IWDG_RLR_RL_Pos;
pub const IWDG_RLR_RL: u32 = IWDG_RLR_RL_Msk;
pub const IWDG_SR_PVU_Pos: u32 = 0;
pub const IWDG_SR_PVU_Msk: u32 = 0x1 << IWDG_SR_PVU_Pos;
pub const IWDG_SR_PVU: u32 = IWDG_SR_PVU_Msk;
pub const IWDG_SR_RVU_Pos: u32 = 1;
pub const IWDG_SR_RVU_Msk: u32 = 0x1 << IWDG_SR_RVU_Pos;
pub const IWDG_SR_RVU: u32 = IWDG_SR_RVU_Msk;
pub const IWDG_SR_WVU_Pos: u32 = 2;
pub const IWDG_SR_WVU_Msk: u32 = 0x1 << IWDG_SR_WVU_Pos;
pub const IWDG_SR_WVU: u32 = IWDG_SR_WVU_Msk;
pub const IWDG_SR_EWU_Pos: u32 = 3;
pub const IWDG_SR_EWU_Msk: u32 = 0x1 << IWDG_SR_EWU_Pos;
pub const IWDG_SR_EWU: u32 = IWDG_SR_EWU_Msk;
pub const IWDG_SR_ONF_Pos: u32 = 8;
pub const IWDG_SR_ONF_Msk: u32 = 0x1 << IWDG_SR_ONF_Pos;
pub const IWDG_SR_ONF: u32 = IWDG_SR_ONF_Msk;
pub const IWDG_SR_EWIF_Pos: u32 = 14;
pub const IWDG_SR_EWIF_Msk: u32 = 0x1 << IWDG_SR_EWIF_Pos;
pub const IWDG_SR_EWIF: u32 = IWDG_SR_EWIF_Msk;
pub const IWDG_WINR_WIN_Pos: u32 = 0;
pub const IWDG_WINR_WIN_Msk: u32 = 0xFFF << IWDG_WINR_WIN_Pos;
pub const IWDG_WINR_WIN: u32 = IWDG_WINR_WIN_Msk;
pub const IWDG_EWCR_EWIT_Pos: u32 = 0;
pub const IWDG_EWCR_EWIT_Msk: u32 = 0xFFF << IWDG_EWCR_EWIT_Pos;
pub const IWDG_EWCR_EWIT: u32 = IWDG_EWCR_EWIT_Msk;
pub const IWDG_EWCR_EWIC_Pos: u32 = 14;
pub const IWDG_EWCR_EWIC_Msk: u32 = 0x1 << IWDG_EWCR_EWIC_Pos;
pub const IWDG_EWCR_EWIC: u32 = IWDG_EWCR_EWIC_Msk;
pub const IWDG_EWCR_EWIE_Pos: u32 = 15;
pub const IWDG_EWCR_EWIE_Msk: u32 = 0x1 << IWDG_EWCR_EWIE_Pos;
pub const IWDG_EWCR_EWIE: u32 = IWDG_EWCR_EWIE_Msk;
pub const JPEG_CONFR0_START_Pos: u32 = 0;
pub const JPEG_CONFR0_START_Msk: u32 = 0x1 << JPEG_CONFR0_START_Pos;
pub const JPEG_CONFR0_START: u32 = JPEG_CONFR0_START_Msk;
pub const JPEG_CONFR1_NF_Pos: u32 = 0;
pub const JPEG_CONFR1_NF_Msk: u32 = 0x3 << JPEG_CONFR1_NF_Pos;
pub const JPEG_CONFR1_NF: u32 = JPEG_CONFR1_NF_Msk;
pub const JPEG_CONFR1_NF_0: u32 = 0x1 << JPEG_CONFR1_NF_Pos;
pub const JPEG_CONFR1_NF_1: u32 = 0x2 << JPEG_CONFR1_NF_Pos;
pub const JPEG_CONFR1_DE_Pos: u32 = 3;
pub const JPEG_CONFR1_DE_Msk: u32 = 0x1 << JPEG_CONFR1_DE_Pos;
pub const JPEG_CONFR1_DE: u32 = JPEG_CONFR1_DE_Msk;
pub const JPEG_CONFR1_COLORSPACE_Pos: u32 = 4;
pub const JPEG_CONFR1_COLORSPACE_Msk: u32 = 0x3 << JPEG_CONFR1_COLORSPACE_Pos;
pub const JPEG_CONFR1_COLORSPACE: u32 = JPEG_CONFR1_COLORSPACE_Msk;
pub const JPEG_CONFR1_COLORSPACE_0: u32 = 0x1 << JPEG_CONFR1_COLORSPACE_Pos;
pub const JPEG_CONFR1_COLORSPACE_1: u32 = 0x2 << JPEG_CONFR1_COLORSPACE_Pos;
pub const JPEG_CONFR1_NS_Pos: u32 = 6;
pub const JPEG_CONFR1_NS_Msk: u32 = 0x3 << JPEG_CONFR1_NS_Pos;
pub const JPEG_CONFR1_NS: u32 = JPEG_CONFR1_NS_Msk;
pub const JPEG_CONFR1_NS_0: u32 = 0x1 << JPEG_CONFR1_NS_Pos;
pub const JPEG_CONFR1_NS_1: u32 = 0x2 << JPEG_CONFR1_NS_Pos;
pub const JPEG_CONFR1_HDR_Pos: u32 = 8;
pub const JPEG_CONFR1_HDR_Msk: u32 = 0x1 << JPEG_CONFR1_HDR_Pos;
pub const JPEG_CONFR1_HDR: u32 = JPEG_CONFR1_HDR_Msk;
pub const JPEG_CONFR1_YSIZE_Pos: u32 = 16;
pub const JPEG_CONFR1_YSIZE_Msk: u32 = 0xFFFF << JPEG_CONFR1_YSIZE_Pos;
pub const JPEG_CONFR1_YSIZE: u32 = JPEG_CONFR1_YSIZE_Msk;
pub const JPEG_CONFR2_NMCU_Pos: u32 = 0;
pub const JPEG_CONFR2_NMCU_Msk: u32 = 0x3FFFFFF << JPEG_CONFR2_NMCU_Pos;
pub const JPEG_CONFR2_NMCU: u32 = JPEG_CONFR2_NMCU_Msk;
pub const JPEG_CONFR3_XSIZE_Pos: u32 = 16;
pub const JPEG_CONFR3_XSIZE_Msk: u32 = 0xFFFF << JPEG_CONFR3_XSIZE_Pos;
pub const JPEG_CONFR3_XSIZE: u32 = JPEG_CONFR3_XSIZE_Msk;
pub const JPEG_CONFR4_HD_Pos: u32 = 0;
pub const JPEG_CONFR4_HD_Msk: u32 = 0x1 << JPEG_CONFR4_HD_Pos;
pub const JPEG_CONFR4_HD: u32 = JPEG_CONFR4_HD_Msk;
pub const JPEG_CONFR4_HA_Pos: u32 = 1;
pub const JPEG_CONFR4_HA_Msk: u32 = 0x1 << JPEG_CONFR4_HA_Pos;
pub const JPEG_CONFR4_HA: u32 = JPEG_CONFR4_HA_Msk;
pub const JPEG_CONFR4_QT_Pos: u32 = 2;
pub const JPEG_CONFR4_QT_Msk: u32 = 0x3 << JPEG_CONFR4_QT_Pos;
pub const JPEG_CONFR4_QT: u32 = JPEG_CONFR4_QT_Msk;
pub const JPEG_CONFR4_QT_0: u32 = 0x1 << JPEG_CONFR4_QT_Pos;
pub const JPEG_CONFR4_QT_1: u32 = 0x2 << JPEG_CONFR4_QT_Pos;
pub const JPEG_CONFR4_NB_Pos: u32 = 4;
pub const JPEG_CONFR4_NB_Msk: u32 = 0xF << JPEG_CONFR4_NB_Pos;
pub const JPEG_CONFR4_NB: u32 = JPEG_CONFR4_NB_Msk;
pub const JPEG_CONFR4_NB_0: u32 = 0x1 << JPEG_CONFR4_NB_Pos;
pub const JPEG_CONFR4_NB_1: u32 = 0x2 << JPEG_CONFR4_NB_Pos;
pub const JPEG_CONFR4_NB_2: u32 = 0x4 << JPEG_CONFR4_NB_Pos;
pub const JPEG_CONFR4_NB_3: u32 = 0x8 << JPEG_CONFR4_NB_Pos;
pub const JPEG_CONFR4_VSF_Pos: u32 = 8;
pub const JPEG_CONFR4_VSF_Msk: u32 = 0xF << JPEG_CONFR4_VSF_Pos;
pub const JPEG_CONFR4_VSF: u32 = JPEG_CONFR4_VSF_Msk;
pub const JPEG_CONFR4_VSF_0: u32 = 0x1 << JPEG_CONFR4_VSF_Pos;
pub const JPEG_CONFR4_VSF_1: u32 = 0x2 << JPEG_CONFR4_VSF_Pos;
pub const JPEG_CONFR4_VSF_2: u32 = 0x4 << JPEG_CONFR4_VSF_Pos;
pub const JPEG_CONFR4_VSF_3: u32 = 0x8 << JPEG_CONFR4_VSF_Pos;
pub const JPEG_CONFR4_HSF_Pos: u32 = 12;
pub const JPEG_CONFR4_HSF_Msk: u32 = 0xF << JPEG_CONFR4_HSF_Pos;
pub const JPEG_CONFR4_HSF: u32 = JPEG_CONFR4_HSF_Msk;
pub const JPEG_CONFR4_HSF_0: u32 = 0x1 << JPEG_CONFR4_HSF_Pos;
pub const JPEG_CONFR4_HSF_1: u32 = 0x2 << JPEG_CONFR4_HSF_Pos;
pub const JPEG_CONFR4_HSF_2: u32 = 0x4 << JPEG_CONFR4_HSF_Pos;
pub const JPEG_CONFR4_HSF_3: u32 = 0x8 << JPEG_CONFR4_HSF_Pos;
pub const JPEG_CONFR5_HD_Pos: u32 = 0;
pub const JPEG_CONFR5_HD_Msk: u32 = 0x1 << JPEG_CONFR5_HD_Pos;
pub const JPEG_CONFR5_HD: u32 = JPEG_CONFR5_HD_Msk;
pub const JPEG_CONFR5_HA_Pos: u32 = 1;
pub const JPEG_CONFR5_HA_Msk: u32 = 0x1 << JPEG_CONFR5_HA_Pos;
pub const JPEG_CONFR5_HA: u32 = JPEG_CONFR5_HA_Msk;
pub const JPEG_CONFR5_QT_Pos: u32 = 2;
pub const JPEG_CONFR5_QT_Msk: u32 = 0x3 << JPEG_CONFR5_QT_Pos;
pub const JPEG_CONFR5_QT: u32 = JPEG_CONFR5_QT_Msk;
pub const JPEG_CONFR5_QT_0: u32 = 0x1 << JPEG_CONFR5_QT_Pos;
pub const JPEG_CONFR5_QT_1: u32 = 0x2 << JPEG_CONFR5_QT_Pos;
pub const JPEG_CONFR5_NB_Pos: u32 = 4;
pub const JPEG_CONFR5_NB_Msk: u32 = 0xF << JPEG_CONFR5_NB_Pos;
pub const JPEG_CONFR5_NB: u32 = JPEG_CONFR5_NB_Msk;
pub const JPEG_CONFR5_NB_0: u32 = 0x1 << JPEG_CONFR5_NB_Pos;
pub const JPEG_CONFR5_NB_1: u32 = 0x2 << JPEG_CONFR5_NB_Pos;
pub const JPEG_CONFR5_NB_2: u32 = 0x4 << JPEG_CONFR5_NB_Pos;
pub const JPEG_CONFR5_NB_3: u32 = 0x8 << JPEG_CONFR5_NB_Pos;
pub const JPEG_CONFR5_VSF_Pos: u32 = 8;
pub const JPEG_CONFR5_VSF_Msk: u32 = 0xF << JPEG_CONFR5_VSF_Pos;
pub const JPEG_CONFR5_VSF: u32 = JPEG_CONFR5_VSF_Msk;
pub const JPEG_CONFR5_VSF_0: u32 = 0x1 << JPEG_CONFR5_VSF_Pos;
pub const JPEG_CONFR5_VSF_1: u32 = 0x2 << JPEG_CONFR5_VSF_Pos;
pub const JPEG_CONFR5_VSF_2: u32 = 0x4 << JPEG_CONFR5_VSF_Pos;
pub const JPEG_CONFR5_VSF_3: u32 = 0x8 << JPEG_CONFR5_VSF_Pos;
pub const JPEG_CONFR5_HSF_Pos: u32 = 12;
pub const JPEG_CONFR5_HSF_Msk: u32 = 0xF << JPEG_CONFR5_HSF_Pos;
pub const JPEG_CONFR5_HSF: u32 = JPEG_CONFR5_HSF_Msk;
pub const JPEG_CONFR5_HSF_0: u32 = 0x1 << JPEG_CONFR5_HSF_Pos;
pub const JPEG_CONFR5_HSF_1: u32 = 0x2 << JPEG_CONFR5_HSF_Pos;
pub const JPEG_CONFR5_HSF_2: u32 = 0x4 << JPEG_CONFR5_HSF_Pos;
pub const JPEG_CONFR5_HSF_3: u32 = 0x8 << JPEG_CONFR5_HSF_Pos;
pub const JPEG_CONFR6_HD_Pos: u32 = 0;
pub const JPEG_CONFR6_HD_Msk: u32 = 0x1 << JPEG_CONFR6_HD_Pos;
pub const JPEG_CONFR6_HD: u32 = JPEG_CONFR6_HD_Msk;
pub const JPEG_CONFR6_HA_Pos: u32 = 1;
pub const JPEG_CONFR6_HA_Msk: u32 = 0x1 << JPEG_CONFR6_HA_Pos;
pub const JPEG_CONFR6_HA: u32 = JPEG_CONFR6_HA_Msk;
pub const JPEG_CONFR6_QT_Pos: u32 = 2;
pub const JPEG_CONFR6_QT_Msk: u32 = 0x3 << JPEG_CONFR6_QT_Pos;
pub const JPEG_CONFR6_QT: u32 = JPEG_CONFR6_QT_Msk;
pub const JPEG_CONFR6_QT_0: u32 = 0x1 << JPEG_CONFR6_QT_Pos;
pub const JPEG_CONFR6_QT_1: u32 = 0x2 << JPEG_CONFR6_QT_Pos;
pub const JPEG_CONFR6_NB_Pos: u32 = 4;
pub const JPEG_CONFR6_NB_Msk: u32 = 0xF << JPEG_CONFR6_NB_Pos;
pub const JPEG_CONFR6_NB: u32 = JPEG_CONFR6_NB_Msk;
pub const JPEG_CONFR6_NB_0: u32 = 0x1 << JPEG_CONFR6_NB_Pos;
pub const JPEG_CONFR6_NB_1: u32 = 0x2 << JPEG_CONFR6_NB_Pos;
pub const JPEG_CONFR6_NB_2: u32 = 0x4 << JPEG_CONFR6_NB_Pos;
pub const JPEG_CONFR6_NB_3: u32 = 0x8 << JPEG_CONFR6_NB_Pos;
pub const JPEG_CONFR6_VSF_Pos: u32 = 8;
pub const JPEG_CONFR6_VSF_Msk: u32 = 0xF << JPEG_CONFR6_VSF_Pos;
pub const JPEG_CONFR6_VSF: u32 = JPEG_CONFR6_VSF_Msk;
pub const JPEG_CONFR6_VSF_0: u32 = 0x1 << JPEG_CONFR6_VSF_Pos;
pub const JPEG_CONFR6_VSF_1: u32 = 0x2 << JPEG_CONFR6_VSF_Pos;
pub const JPEG_CONFR6_VSF_2: u32 = 0x4 << JPEG_CONFR6_VSF_Pos;
pub const JPEG_CONFR6_VSF_3: u32 = 0x8 << JPEG_CONFR6_VSF_Pos;
pub const JPEG_CONFR6_HSF_Pos: u32 = 12;
pub const JPEG_CONFR6_HSF_Msk: u32 = 0xF << JPEG_CONFR6_HSF_Pos;
pub const JPEG_CONFR6_HSF: u32 = JPEG_CONFR6_HSF_Msk;
pub const JPEG_CONFR6_HSF_0: u32 = 0x1 << JPEG_CONFR6_HSF_Pos;
pub const JPEG_CONFR6_HSF_1: u32 = 0x2 << JPEG_CONFR6_HSF_Pos;
pub const JPEG_CONFR6_HSF_2: u32 = 0x4 << JPEG_CONFR6_HSF_Pos;
pub const JPEG_CONFR6_HSF_3: u32 = 0x8 << JPEG_CONFR6_HSF_Pos;
pub const JPEG_CONFR7_HD_Pos: u32 = 0;
pub const JPEG_CONFR7_HD_Msk: u32 = 0x1 << JPEG_CONFR7_HD_Pos;
pub const JPEG_CONFR7_HD: u32 = JPEG_CONFR7_HD_Msk;
pub const JPEG_CONFR7_HA_Pos: u32 = 1;
pub const JPEG_CONFR7_HA_Msk: u32 = 0x1 << JPEG_CONFR7_HA_Pos;
pub const JPEG_CONFR7_HA: u32 = JPEG_CONFR7_HA_Msk;
pub const JPEG_CONFR7_QT_Pos: u32 = 2;
pub const JPEG_CONFR7_QT_Msk: u32 = 0x3 << JPEG_CONFR7_QT_Pos;
pub const JPEG_CONFR7_QT: u32 = JPEG_CONFR7_QT_Msk;
pub const JPEG_CONFR7_QT_0: u32 = 0x1 << JPEG_CONFR7_QT_Pos;
pub const JPEG_CONFR7_QT_1: u32 = 0x2 << JPEG_CONFR7_QT_Pos;
pub const JPEG_CONFR7_NB_Pos: u32 = 4;
pub const JPEG_CONFR7_NB_Msk: u32 = 0xF << JPEG_CONFR7_NB_Pos;
pub const JPEG_CONFR7_NB: u32 = JPEG_CONFR7_NB_Msk;
pub const JPEG_CONFR7_NB_0: u32 = 0x1 << JPEG_CONFR7_NB_Pos;
pub const JPEG_CONFR7_NB_1: u32 = 0x2 << JPEG_CONFR7_NB_Pos;
pub const JPEG_CONFR7_NB_2: u32 = 0x4 << JPEG_CONFR7_NB_Pos;
pub const JPEG_CONFR7_NB_3: u32 = 0x8 << JPEG_CONFR7_NB_Pos;
pub const JPEG_CONFR7_VSF_Pos: u32 = 8;
pub const JPEG_CONFR7_VSF_Msk: u32 = 0xF << JPEG_CONFR7_VSF_Pos;
pub const JPEG_CONFR7_VSF: u32 = JPEG_CONFR7_VSF_Msk;
pub const JPEG_CONFR7_VSF_0: u32 = 0x1 << JPEG_CONFR7_VSF_Pos;
pub const JPEG_CONFR7_VSF_1: u32 = 0x2 << JPEG_CONFR7_VSF_Pos;
pub const JPEG_CONFR7_VSF_2: u32 = 0x4 << JPEG_CONFR7_VSF_Pos;
pub const JPEG_CONFR7_VSF_3: u32 = 0x8 << JPEG_CONFR7_VSF_Pos;
pub const JPEG_CONFR7_HSF_Pos: u32 = 12;
pub const JPEG_CONFR7_HSF_Msk: u32 = 0xF << JPEG_CONFR7_HSF_Pos;
pub const JPEG_CONFR7_HSF: u32 = JPEG_CONFR7_HSF_Msk;
pub const JPEG_CONFR7_HSF_0: u32 = 0x1 << JPEG_CONFR7_HSF_Pos;
pub const JPEG_CONFR7_HSF_1: u32 = 0x2 << JPEG_CONFR7_HSF_Pos;
pub const JPEG_CONFR7_HSF_2: u32 = 0x4 << JPEG_CONFR7_HSF_Pos;
pub const JPEG_CONFR7_HSF_3: u32 = 0x8 << JPEG_CONFR7_HSF_Pos;
pub const JPEG_CR_JCEN_Pos: u32 = 0;
pub const JPEG_CR_JCEN_Msk: u32 = 0x1 << JPEG_CR_JCEN_Pos;
pub const JPEG_CR_JCEN: u32 = JPEG_CR_JCEN_Msk;
pub const JPEG_CR_IFTIE_Pos: u32 = 1;
pub const JPEG_CR_IFTIE_Msk: u32 = 0x1 << JPEG_CR_IFTIE_Pos;
pub const JPEG_CR_IFTIE: u32 = JPEG_CR_IFTIE_Msk;
pub const JPEG_CR_IFNFIE_Pos: u32 = 2;
pub const JPEG_CR_IFNFIE_Msk: u32 = 0x1 << JPEG_CR_IFNFIE_Pos;
pub const JPEG_CR_IFNFIE: u32 = JPEG_CR_IFNFIE_Msk;
pub const JPEG_CR_OFTIE_Pos: u32 = 3;
pub const JPEG_CR_OFTIE_Msk: u32 = 0x1 << JPEG_CR_OFTIE_Pos;
pub const JPEG_CR_OFTIE: u32 = JPEG_CR_OFTIE_Msk;
pub const JPEG_CR_OFNEIE_Pos: u32 = 4;
pub const JPEG_CR_OFNEIE_Msk: u32 = 0x1 << JPEG_CR_OFNEIE_Pos;
pub const JPEG_CR_OFNEIE: u32 = JPEG_CR_OFNEIE_Msk;
pub const JPEG_CR_EOCIE_Pos: u32 = 5;
pub const JPEG_CR_EOCIE_Msk: u32 = 0x1 << JPEG_CR_EOCIE_Pos;
pub const JPEG_CR_EOCIE: u32 = JPEG_CR_EOCIE_Msk;
pub const JPEG_CR_HPDIE_Pos: u32 = 6;
pub const JPEG_CR_HPDIE_Msk: u32 = 0x1 << JPEG_CR_HPDIE_Pos;
pub const JPEG_CR_HPDIE: u32 = JPEG_CR_HPDIE_Msk;
pub const JPEG_CR_IDMAEN_Pos: u32 = 11;
pub const JPEG_CR_IDMAEN_Msk: u32 = 0x1 << JPEG_CR_IDMAEN_Pos;
pub const JPEG_CR_IDMAEN: u32 = JPEG_CR_IDMAEN_Msk;
pub const JPEG_CR_ODMAEN_Pos: u32 = 12;
pub const JPEG_CR_ODMAEN_Msk: u32 = 0x1 << JPEG_CR_ODMAEN_Pos;
pub const JPEG_CR_ODMAEN: u32 = JPEG_CR_ODMAEN_Msk;
pub const JPEG_CR_IFF_Pos: u32 = 13;
pub const JPEG_CR_IFF_Msk: u32 = 0x1 << JPEG_CR_IFF_Pos;
pub const JPEG_CR_IFF: u32 = JPEG_CR_IFF_Msk;
pub const JPEG_CR_OFF_Pos: u32 = 14;
pub const JPEG_CR_OFF_Msk: u32 = 0x1 << JPEG_CR_OFF_Pos;
pub const JPEG_CR_OFF: u32 = JPEG_CR_OFF_Msk;
pub const JPEG_SR_IFTF_Pos: u32 = 1;
pub const JPEG_SR_IFTF_Msk: u32 = 0x1 << JPEG_SR_IFTF_Pos;
pub const JPEG_SR_IFTF: u32 = JPEG_SR_IFTF_Msk;
pub const JPEG_SR_IFNFF_Pos: u32 = 2;
pub const JPEG_SR_IFNFF_Msk: u32 = 0x1 << JPEG_SR_IFNFF_Pos;
pub const JPEG_SR_IFNFF: u32 = JPEG_SR_IFNFF_Msk;
pub const JPEG_SR_OFTF_Pos: u32 = 3;
pub const JPEG_SR_OFTF_Msk: u32 = 0x1 << JPEG_SR_OFTF_Pos;
pub const JPEG_SR_OFTF: u32 = JPEG_SR_OFTF_Msk;
pub const JPEG_SR_OFNEF_Pos: u32 = 4;
pub const JPEG_SR_OFNEF_Msk: u32 = 0x1 << JPEG_SR_OFNEF_Pos;
pub const JPEG_SR_OFNEF: u32 = JPEG_SR_OFNEF_Msk;
pub const JPEG_SR_EOCF_Pos: u32 = 5;
pub const JPEG_SR_EOCF_Msk: u32 = 0x1 << JPEG_SR_EOCF_Pos;
pub const JPEG_SR_EOCF: u32 = JPEG_SR_EOCF_Msk;
pub const JPEG_SR_HPDF_Pos: u32 = 6;
pub const JPEG_SR_HPDF_Msk: u32 = 0x1 << JPEG_SR_HPDF_Pos;
pub const JPEG_SR_HPDF: u32 = JPEG_SR_HPDF_Msk;
pub const JPEG_SR_COF_Pos: u32 = 7;
pub const JPEG_SR_COF_Msk: u32 = 0x1 << JPEG_SR_COF_Pos;
pub const JPEG_SR_COF: u32 = JPEG_SR_COF_Msk;
pub const JPEG_CFR_CEOCF_Pos: u32 = 4;
pub const JPEG_CFR_CEOCF_Msk: u32 = 0x1 << JPEG_CFR_CEOCF_Pos;
pub const JPEG_CFR_CEOCF: u32 = JPEG_CFR_CEOCF_Msk;
pub const JPEG_CFR_CHPDF_Pos: u32 = 5;
pub const JPEG_CFR_CHPDF_Msk: u32 = 0x1 << JPEG_CFR_CHPDF_Pos;
pub const JPEG_CFR_CHPDF: u32 = JPEG_CFR_CHPDF_Msk;
pub const JPEG_DIR_DATAIN_Pos: u32 = 0;
pub const JPEG_DIR_DATAIN_Msk: u32 = 0xFFFFFFFF << JPEG_DIR_DATAIN_Pos;
pub const JPEG_DIR_DATAIN: u32 = JPEG_DIR_DATAIN_Msk;
pub const JPEG_DOR_DATAOUT_Pos: u32 = 0;
pub const JPEG_DOR_DATAOUT_Msk: u32 = 0xFFFFFFFF << JPEG_DOR_DATAOUT_Pos;
pub const JPEG_DOR_DATAOUT: u32 = JPEG_DOR_DATAOUT_Msk;
pub const LPTIM_ISR_CC1IF_Pos: u32 = 0;
pub const LPTIM_ISR_CC1IF_Msk: u32 = 0x1 << LPTIM_ISR_CC1IF_Pos;
pub const LPTIM_ISR_CC1IF: u32 = LPTIM_ISR_CC1IF_Msk;
pub const LPTIM_ISR_ARRM_Pos: u32 = 1;
pub const LPTIM_ISR_ARRM_Msk: u32 = 0x1 << LPTIM_ISR_ARRM_Pos;
pub const LPTIM_ISR_ARRM: u32 = LPTIM_ISR_ARRM_Msk;
pub const LPTIM_ISR_EXTTRIG_Pos: u32 = 2;
pub const LPTIM_ISR_EXTTRIG_Msk: u32 = 0x1 << LPTIM_ISR_EXTTRIG_Pos;
pub const LPTIM_ISR_EXTTRIG: u32 = LPTIM_ISR_EXTTRIG_Msk;
pub const LPTIM_ISR_CMP1OK_Pos: u32 = 3;
pub const LPTIM_ISR_CMP1OK_Msk: u32 = 0x1 << LPTIM_ISR_CMP1OK_Pos;
pub const LPTIM_ISR_CMP1OK: u32 = LPTIM_ISR_CMP1OK_Msk;
pub const LPTIM_ISR_ARROK_Pos: u32 = 4;
pub const LPTIM_ISR_ARROK_Msk: u32 = 0x1 << LPTIM_ISR_ARROK_Pos;
pub const LPTIM_ISR_ARROK: u32 = LPTIM_ISR_ARROK_Msk;
pub const LPTIM_ISR_UP_Pos: u32 = 5;
pub const LPTIM_ISR_UP_Msk: u32 = 0x1 << LPTIM_ISR_UP_Pos;
pub const LPTIM_ISR_UP: u32 = LPTIM_ISR_UP_Msk;
pub const LPTIM_ISR_DOWN_Pos: u32 = 6;
pub const LPTIM_ISR_DOWN_Msk: u32 = 0x1 << LPTIM_ISR_DOWN_Pos;
pub const LPTIM_ISR_DOWN: u32 = LPTIM_ISR_DOWN_Msk;
pub const LPTIM_ISR_UE_Pos: u32 = 7;
pub const LPTIM_ISR_UE_Msk: u32 = 0x1 << LPTIM_ISR_UE_Pos;
pub const LPTIM_ISR_UE: u32 = LPTIM_ISR_UE_Msk;
pub const LPTIM_ISR_REPOK_Pos: u32 = 8;
pub const LPTIM_ISR_REPOK_Msk: u32 = 0x1 << LPTIM_ISR_REPOK_Pos;
pub const LPTIM_ISR_REPOK: u32 = LPTIM_ISR_REPOK_Msk;
pub const LPTIM_ISR_CC2IF_Pos: u32 = 9;
pub const LPTIM_ISR_CC2IF_Msk: u32 = 0x1 << LPTIM_ISR_CC2IF_Pos;
pub const LPTIM_ISR_CC2IF: u32 = LPTIM_ISR_CC2IF_Msk;
pub const LPTIM_ISR_CC1OF_Pos: u32 = 12;
pub const LPTIM_ISR_CC1OF_Msk: u32 = 0x1 << LPTIM_ISR_CC1OF_Pos;
pub const LPTIM_ISR_CC1OF: u32 = LPTIM_ISR_CC1OF_Msk;
pub const LPTIM_ISR_CC2OF_Pos: u32 = 13;
pub const LPTIM_ISR_CC2OF_Msk: u32 = 0x1 << LPTIM_ISR_CC2OF_Pos;
pub const LPTIM_ISR_CC2OF: u32 = LPTIM_ISR_CC2OF_Msk;
pub const LPTIM_ISR_CMP2OK_Pos: u32 = 19;
pub const LPTIM_ISR_CMP2OK_Msk: u32 = 0x1 << LPTIM_ISR_CMP2OK_Pos;
pub const LPTIM_ISR_CMP2OK: u32 = LPTIM_ISR_CMP2OK_Msk;
pub const LPTIM_ISR_DIEROK_Pos: u32 = 24;
pub const LPTIM_ISR_DIEROK_Msk: u32 = 0x1 << LPTIM_ISR_DIEROK_Pos;
pub const LPTIM_ISR_DIEROK: u32 = LPTIM_ISR_DIEROK_Msk;
pub const LPTIM_ICR_CC1CF_Pos: u32 = 0;
pub const LPTIM_ICR_CC1CF_Msk: u32 = 0x1 << LPTIM_ICR_CC1CF_Pos;
pub const LPTIM_ICR_CC1CF: u32 = LPTIM_ICR_CC1CF_Msk;
pub const LPTIM_ICR_ARRMCF_Pos: u32 = 1;
pub const LPTIM_ICR_ARRMCF_Msk: u32 = 0x1 << LPTIM_ICR_ARRMCF_Pos;
pub const LPTIM_ICR_ARRMCF: u32 = LPTIM_ICR_ARRMCF_Msk;
pub const LPTIM_ICR_EXTTRIGCF_Pos: u32 = 2;
pub const LPTIM_ICR_EXTTRIGCF_Msk: u32 = 0x1 << LPTIM_ICR_EXTTRIGCF_Pos;
pub const LPTIM_ICR_EXTTRIGCF: u32 = LPTIM_ICR_EXTTRIGCF_Msk;
pub const LPTIM_ICR_CMP1OKCF_Pos: u32 = 3;
pub const LPTIM_ICR_CMP1OKCF_Msk: u32 = 0x1 << LPTIM_ICR_CMP1OKCF_Pos;
pub const LPTIM_ICR_CMP1OKCF: u32 = LPTIM_ICR_CMP1OKCF_Msk;
pub const LPTIM_ICR_ARROKCF_Pos: u32 = 4;
pub const LPTIM_ICR_ARROKCF_Msk: u32 = 0x1 << LPTIM_ICR_ARROKCF_Pos;
pub const LPTIM_ICR_ARROKCF: u32 = LPTIM_ICR_ARROKCF_Msk;
pub const LPTIM_ICR_UPCF_Pos: u32 = 5;
pub const LPTIM_ICR_UPCF_Msk: u32 = 0x1 << LPTIM_ICR_UPCF_Pos;
pub const LPTIM_ICR_UPCF: u32 = LPTIM_ICR_UPCF_Msk;
pub const LPTIM_ICR_DOWNCF_Pos: u32 = 6;
pub const LPTIM_ICR_DOWNCF_Msk: u32 = 0x1 << LPTIM_ICR_DOWNCF_Pos;
pub const LPTIM_ICR_DOWNCF: u32 = LPTIM_ICR_DOWNCF_Msk;
pub const LPTIM_ICR_UECF_Pos: u32 = 7;
pub const LPTIM_ICR_UECF_Msk: u32 = 0x1 << LPTIM_ICR_UECF_Pos;
pub const LPTIM_ICR_UECF: u32 = LPTIM_ICR_UECF_Msk;
pub const LPTIM_ICR_REPOKCF_Pos: u32 = 8;
pub const LPTIM_ICR_REPOKCF_Msk: u32 = 0x1 << LPTIM_ICR_REPOKCF_Pos;
pub const LPTIM_ICR_REPOKCF: u32 = LPTIM_ICR_REPOKCF_Msk;
pub const LPTIM_ICR_CC2CF_Pos: u32 = 9;
pub const LPTIM_ICR_CC2CF_Msk: u32 = 0x1 << LPTIM_ICR_CC2CF_Pos;
pub const LPTIM_ICR_CC2CF: u32 = LPTIM_ICR_CC2CF_Msk;
pub const LPTIM_ICR_CC1OCF_Pos: u32 = 12;
pub const LPTIM_ICR_CC1OCF_Msk: u32 = 0x1 << LPTIM_ICR_CC1OCF_Pos;
pub const LPTIM_ICR_CC1OCF: u32 = LPTIM_ICR_CC1OCF_Msk;
pub const LPTIM_ICR_CC2OCF_Pos: u32 = 13;
pub const LPTIM_ICR_CC2OCF_Msk: u32 = 0x1 << LPTIM_ICR_CC2OCF_Pos;
pub const LPTIM_ICR_CC2OCF: u32 = LPTIM_ICR_CC2OCF_Msk;
pub const LPTIM_ICR_CMP2OKCF_Pos: u32 = 19;
pub const LPTIM_ICR_CMP2OKCF_Msk: u32 = 0x1 << LPTIM_ICR_CMP2OKCF_Pos;
pub const LPTIM_ICR_CMP2OKCF: u32 = LPTIM_ICR_CMP2OKCF_Msk;
pub const LPTIM_ICR_DIEROKCF_Pos: u32 = 24;
pub const LPTIM_ICR_DIEROKCF_Msk: u32 = 0x1 << LPTIM_ICR_DIEROKCF_Pos;
pub const LPTIM_ICR_DIEROKCF: u32 = LPTIM_ICR_DIEROKCF_Msk;
pub const LPTIM_DIER_CC1IE_Pos: u32 = 0;
pub const LPTIM_DIER_CC1IE_Msk: u32 = 0x1 << LPTIM_DIER_CC1IE_Pos;
pub const LPTIM_DIER_CC1IE: u32 = LPTIM_DIER_CC1IE_Msk;
pub const LPTIM_DIER_ARRMIE_Pos: u32 = 1;
pub const LPTIM_DIER_ARRMIE_Msk: u32 = 0x1 << LPTIM_DIER_ARRMIE_Pos;
pub const LPTIM_DIER_ARRMIE: u32 = LPTIM_DIER_ARRMIE_Msk;
pub const LPTIM_DIER_EXTTRIGIE_Pos: u32 = 2;
pub const LPTIM_DIER_EXTTRIGIE_Msk: u32 = 0x1 << LPTIM_DIER_EXTTRIGIE_Pos;
pub const LPTIM_DIER_EXTTRIGIE: u32 = LPTIM_DIER_EXTTRIGIE_Msk;
pub const LPTIM_DIER_CMP1OKIE_Pos: u32 = 3;
pub const LPTIM_DIER_CMP1OKIE_Msk: u32 = 0x1 << LPTIM_DIER_CMP1OKIE_Pos;
pub const LPTIM_DIER_CMP1OKIE: u32 = LPTIM_DIER_CMP1OKIE_Msk;
pub const LPTIM_DIER_ARROKIE_Pos: u32 = 4;
pub const LPTIM_DIER_ARROKIE_Msk: u32 = 0x1 << LPTIM_DIER_ARROKIE_Pos;
pub const LPTIM_DIER_ARROKIE: u32 = LPTIM_DIER_ARROKIE_Msk;
pub const LPTIM_DIER_UPIE_Pos: u32 = 5;
pub const LPTIM_DIER_UPIE_Msk: u32 = 0x1 << LPTIM_DIER_UPIE_Pos;
pub const LPTIM_DIER_UPIE: u32 = LPTIM_DIER_UPIE_Msk;
pub const LPTIM_DIER_DOWNIE_Pos: u32 = 6;
pub const LPTIM_DIER_DOWNIE_Msk: u32 = 0x1 << LPTIM_DIER_DOWNIE_Pos;
pub const LPTIM_DIER_DOWNIE: u32 = LPTIM_DIER_DOWNIE_Msk;
pub const LPTIM_DIER_UEIE_Pos: u32 = 7;
pub const LPTIM_DIER_UEIE_Msk: u32 = 0x1 << LPTIM_DIER_UEIE_Pos;
pub const LPTIM_DIER_UEIE: u32 = LPTIM_DIER_UEIE_Msk;
pub const LPTIM_DIER_REPOKIE_Pos: u32 = 8;
pub const LPTIM_DIER_REPOKIE_Msk: u32 = 0x1 << LPTIM_DIER_REPOKIE_Pos;
pub const LPTIM_DIER_REPOKIE: u32 = LPTIM_DIER_REPOKIE_Msk;
pub const LPTIM_DIER_CC2IE_Pos: u32 = 9;
pub const LPTIM_DIER_CC2IE_Msk: u32 = 0x1 << LPTIM_DIER_CC2IE_Pos;
pub const LPTIM_DIER_CC2IE: u32 = LPTIM_DIER_CC2IE_Msk;
pub const LPTIM_DIER_CC1OIE_Pos: u32 = 12;
pub const LPTIM_DIER_CC1OIE_Msk: u32 = 0x1 << LPTIM_DIER_CC1OIE_Pos;
pub const LPTIM_DIER_CC1OIE: u32 = LPTIM_DIER_CC1OIE_Msk;
pub const LPTIM_DIER_CC2OIE_Pos: u32 = 13;
pub const LPTIM_DIER_CC2OIE_Msk: u32 = 0x1 << LPTIM_DIER_CC2OIE_Pos;
pub const LPTIM_DIER_CC2OIE: u32 = LPTIM_DIER_CC2OIE_Msk;
pub const LPTIM_DIER_CC1DE_Pos: u32 = 16;
pub const LPTIM_DIER_CC1DE_Msk: u32 = 0x1 << LPTIM_DIER_CC1DE_Pos;
pub const LPTIM_DIER_CC1DE: u32 = LPTIM_DIER_CC1DE_Msk;
pub const LPTIM_DIER_CMP2OKIE_Pos: u32 = 19;
pub const LPTIM_DIER_CMP2OKIE_Msk: u32 = 0x1 << LPTIM_DIER_CMP2OKIE_Pos;
pub const LPTIM_DIER_CMP2OKIE: u32 = LPTIM_DIER_CMP2OKIE_Msk;
pub const LPTIM_DIER_UEDE_Pos: u32 = 23;
pub const LPTIM_DIER_UEDE_Msk: u32 = 0x1 << LPTIM_DIER_UEDE_Pos;
pub const LPTIM_DIER_UEDE: u32 = LPTIM_DIER_UEDE_Msk;
pub const LPTIM_DIER_CC2DE_Pos: u32 = 25;
pub const LPTIM_DIER_CC2DE_Msk: u32 = 0x1 << LPTIM_DIER_CC2DE_Pos;
pub const LPTIM_DIER_CC2DE: u32 = LPTIM_DIER_CC2DE_Msk;
pub const LPTIM_CFGR_CKSEL_Pos: u32 = 0;
pub const LPTIM_CFGR_CKSEL_Msk: u32 = 0x1 << LPTIM_CFGR_CKSEL_Pos;
pub const LPTIM_CFGR_CKSEL: u32 = LPTIM_CFGR_CKSEL_Msk;
pub const LPTIM_CFGR_CKPOL_Pos: u32 = 1;
pub const LPTIM_CFGR_CKPOL_Msk: u32 = 0x3 << LPTIM_CFGR_CKPOL_Pos;
pub const LPTIM_CFGR_CKPOL: u32 = LPTIM_CFGR_CKPOL_Msk;
pub const LPTIM_CFGR_CKPOL_0: u32 = 0x1 << LPTIM_CFGR_CKPOL_Pos;
pub const LPTIM_CFGR_CKPOL_1: u32 = 0x2 << LPTIM_CFGR_CKPOL_Pos;
pub const LPTIM_CFGR_CKFLT_Pos: u32 = 3;
pub const LPTIM_CFGR_CKFLT_Msk: u32 = 0x3 << LPTIM_CFGR_CKFLT_Pos;
pub const LPTIM_CFGR_CKFLT: u32 = LPTIM_CFGR_CKFLT_Msk;
pub const LPTIM_CFGR_CKFLT_0: u32 = 0x1 << LPTIM_CFGR_CKFLT_Pos;
pub const LPTIM_CFGR_CKFLT_1: u32 = 0x2 << LPTIM_CFGR_CKFLT_Pos;
pub const LPTIM_CFGR_TRGFLT_Pos: u32 = 6;
pub const LPTIM_CFGR_TRGFLT_Msk: u32 = 0x3 << LPTIM_CFGR_TRGFLT_Pos;
pub const LPTIM_CFGR_TRGFLT: u32 = LPTIM_CFGR_TRGFLT_Msk;
pub const LPTIM_CFGR_TRGFLT_0: u32 = 0x1 << LPTIM_CFGR_TRGFLT_Pos;
pub const LPTIM_CFGR_TRGFLT_1: u32 = 0x2 << LPTIM_CFGR_TRGFLT_Pos;
pub const LPTIM_CFGR_PRESC_Pos: u32 = 9;
pub const LPTIM_CFGR_PRESC_Msk: u32 = 0x7 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_PRESC: u32 = LPTIM_CFGR_PRESC_Msk;
pub const LPTIM_CFGR_PRESC_0: u32 = 0x1 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_PRESC_1: u32 = 0x2 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_PRESC_2: u32 = 0x4 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_TRIGSEL_Pos: u32 = 13;
pub const LPTIM_CFGR_TRIGSEL_Msk: u32 = 0x7 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGSEL: u32 = LPTIM_CFGR_TRIGSEL_Msk;
pub const LPTIM_CFGR_TRIGSEL_0: u32 = 0x1 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGSEL_1: u32 = 0x2 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGSEL_2: u32 = 0x4 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGEN_Pos: u32 = 17;
pub const LPTIM_CFGR_TRIGEN_Msk: u32 = 0x3 << LPTIM_CFGR_TRIGEN_Pos;
pub const LPTIM_CFGR_TRIGEN: u32 = LPTIM_CFGR_TRIGEN_Msk;
pub const LPTIM_CFGR_TRIGEN_0: u32 = 0x1 << LPTIM_CFGR_TRIGEN_Pos;
pub const LPTIM_CFGR_TRIGEN_1: u32 = 0x2 << LPTIM_CFGR_TRIGEN_Pos;
pub const LPTIM_CFGR_TIMOUT_Pos: u32 = 19;
pub const LPTIM_CFGR_TIMOUT_Msk: u32 = 0x1 << LPTIM_CFGR_TIMOUT_Pos;
pub const LPTIM_CFGR_TIMOUT: u32 = LPTIM_CFGR_TIMOUT_Msk;
pub const LPTIM_CFGR_WAVE_Pos: u32 = 20;
pub const LPTIM_CFGR_WAVE_Msk: u32 = 0x1 << LPTIM_CFGR_WAVE_Pos;
pub const LPTIM_CFGR_WAVE: u32 = LPTIM_CFGR_WAVE_Msk;
pub const LPTIM_CFGR_WAVPOL_Pos: u32 = 21;
pub const LPTIM_CFGR_WAVPOL_Msk: u32 = 0x1 << LPTIM_CFGR_WAVPOL_Pos;
pub const LPTIM_CFGR_WAVPOL: u32 = LPTIM_CFGR_WAVPOL_Msk;
pub const LPTIM_CFGR_PRELOAD_Pos: u32 = 22;
pub const LPTIM_CFGR_PRELOAD_Msk: u32 = 0x1 << LPTIM_CFGR_PRELOAD_Pos;
pub const LPTIM_CFGR_PRELOAD: u32 = LPTIM_CFGR_PRELOAD_Msk;
pub const LPTIM_CFGR_COUNTMODE_Pos: u32 = 23;
pub const LPTIM_CFGR_COUNTMODE_Msk: u32 = 0x1 << LPTIM_CFGR_COUNTMODE_Pos;
pub const LPTIM_CFGR_COUNTMODE: u32 = LPTIM_CFGR_COUNTMODE_Msk;
pub const LPTIM_CFGR_ENC_Pos: u32 = 24;
pub const LPTIM_CFGR_ENC_Msk: u32 = 0x1 << LPTIM_CFGR_ENC_Pos;
pub const LPTIM_CFGR_ENC: u32 = LPTIM_CFGR_ENC_Msk;
pub const LPTIM_CR_ENABLE_Pos: u32 = 0;
pub const LPTIM_CR_ENABLE_Msk: u32 = 0x1 << LPTIM_CR_ENABLE_Pos;
pub const LPTIM_CR_ENABLE: u32 = LPTIM_CR_ENABLE_Msk;
pub const LPTIM_CR_SNGSTRT_Pos: u32 = 1;
pub const LPTIM_CR_SNGSTRT_Msk: u32 = 0x1 << LPTIM_CR_SNGSTRT_Pos;
pub const LPTIM_CR_SNGSTRT: u32 = LPTIM_CR_SNGSTRT_Msk;
pub const LPTIM_CR_CNTSTRT_Pos: u32 = 2;
pub const LPTIM_CR_CNTSTRT_Msk: u32 = 0x1 << LPTIM_CR_CNTSTRT_Pos;
pub const LPTIM_CR_CNTSTRT: u32 = LPTIM_CR_CNTSTRT_Msk;
pub const LPTIM_CR_COUNTRST_Pos: u32 = 3;
pub const LPTIM_CR_COUNTRST_Msk: u32 = 0x1 << LPTIM_CR_COUNTRST_Pos;
pub const LPTIM_CR_COUNTRST: u32 = LPTIM_CR_COUNTRST_Msk;
pub const LPTIM_CR_RSTARE_Pos: u32 = 4;
pub const LPTIM_CR_RSTARE_Msk: u32 = 0x1 << LPTIM_CR_RSTARE_Pos;
pub const LPTIM_CR_RSTARE: u32 = LPTIM_CR_RSTARE_Msk;
pub const LPTIM_CCR1_CCR1_Pos: u32 = 0;
pub const LPTIM_CCR1_CCR1_Msk: u32 = 0xFFFF << LPTIM_CCR1_CCR1_Pos;
pub const LPTIM_CCR1_CCR1: u32 = LPTIM_CCR1_CCR1_Msk;
pub const LPTIM_ARR_ARR_Pos: u32 = 0;
pub const LPTIM_ARR_ARR_Msk: u32 = 0xFFFF << LPTIM_ARR_ARR_Pos;
pub const LPTIM_ARR_ARR: u32 = LPTIM_ARR_ARR_Msk;
pub const LPTIM_CNT_CNT_Pos: u32 = 0;
pub const LPTIM_CNT_CNT_Msk: u32 = 0xFFFF << LPTIM_CNT_CNT_Pos;
pub const LPTIM_CNT_CNT: u32 = LPTIM_CNT_CNT_Msk;
pub const LPTIM_CFGR2_IN1SEL_Pos: u32 = 0;
pub const LPTIM_CFGR2_IN1SEL_Msk: u32 = 0x3 << LPTIM_CFGR2_IN1SEL_Pos;
pub const LPTIM_CFGR2_IN1SEL: u32 = LPTIM_CFGR2_IN1SEL_Msk;
pub const LPTIM_CFGR2_IN1SEL_0: u32 = 0x1 << LPTIM_CFGR2_IN1SEL_Pos;
pub const LPTIM_CFGR2_IN1SEL_1: u32 = 0x2 << LPTIM_CFGR2_IN1SEL_Pos;
pub const LPTIM_CFGR2_IN2SEL_Pos: u32 = 4;
pub const LPTIM_CFGR2_IN2SEL_Msk: u32 = 0x3 << LPTIM_CFGR2_IN2SEL_Pos;
pub const LPTIM_CFGR2_IN2SEL: u32 = LPTIM_CFGR2_IN2SEL_Msk;
pub const LPTIM_CFGR2_IN2SEL_0: u32 = 0x1 << LPTIM_CFGR2_IN2SEL_Pos;
pub const LPTIM_CFGR2_IN2SEL_1: u32 = 0x2 << LPTIM_CFGR2_IN2SEL_Pos;
pub const LPTIM_CFGR2_IC1SEL_Pos: u32 = 16;
pub const LPTIM_CFGR2_IC1SEL_Msk: u32 = 0x3 << LPTIM_CFGR2_IC1SEL_Pos;
pub const LPTIM_CFGR2_IC1SEL: u32 = LPTIM_CFGR2_IC1SEL_Msk;
pub const LPTIM_CFGR2_IC1SEL_0: u32 = 0x1 << LPTIM_CFGR2_IC1SEL_Pos;
pub const LPTIM_CFGR2_IC1SEL_1: u32 = 0x2 << LPTIM_CFGR2_IC1SEL_Pos;
pub const LPTIM_CFGR2_IC2SEL_Pos: u32 = 20;
pub const LPTIM_CFGR2_IC2SEL_Msk: u32 = 0x3 << LPTIM_CFGR2_IC2SEL_Pos;
pub const LPTIM_CFGR2_IC2SEL: u32 = LPTIM_CFGR2_IC2SEL_Msk;
pub const LPTIM_CFGR2_IC2SEL_0: u32 = 0x1 << LPTIM_CFGR2_IC2SEL_Pos;
pub const LPTIM_CFGR2_IC2SEL_1: u32 = 0x2 << LPTIM_CFGR2_IC2SEL_Pos;
pub const LPTIM_RCR_REP_Pos: u32 = 0;
pub const LPTIM_RCR_REP_Msk: u32 = 0xFF << LPTIM_RCR_REP_Pos;
pub const LPTIM_RCR_REP: u32 = LPTIM_RCR_REP_Msk;
pub const LPTIM_CCMR1_CC1SEL_Pos: u32 = 0;
pub const LPTIM_CCMR1_CC1SEL_Msk: u32 = 0x1 << LPTIM_CCMR1_CC1SEL_Pos;
pub const LPTIM_CCMR1_CC1SEL: u32 = LPTIM_CCMR1_CC1SEL_Msk;
pub const LPTIM_CCMR1_CC1E_Pos: u32 = 1;
pub const LPTIM_CCMR1_CC1E_Msk: u32 = 0x1 << LPTIM_CCMR1_CC1E_Pos;
pub const LPTIM_CCMR1_CC1E: u32 = LPTIM_CCMR1_CC1E_Msk;
pub const LPTIM_CCMR1_CC1P_Pos: u32 = 2;
pub const LPTIM_CCMR1_CC1P_Msk: u32 = 0x3 << LPTIM_CCMR1_CC1P_Pos;
pub const LPTIM_CCMR1_CC1P: u32 = LPTIM_CCMR1_CC1P_Msk;
pub const LPTIM_CCMR1_CC1P_0: u32 = 0x1 << LPTIM_CCMR1_CC1P_Pos;
pub const LPTIM_CCMR1_CC1P_1: u32 = 0x2 << LPTIM_CCMR1_CC1P_Pos;
pub const LPTIM_CCMR1_IC1PSC_Pos: u32 = 8;
pub const LPTIM_CCMR1_IC1PSC_Msk: u32 = 0x3 << LPTIM_CCMR1_IC1PSC_Pos;
pub const LPTIM_CCMR1_IC1PSC: u32 = LPTIM_CCMR1_IC1PSC_Msk;
pub const LPTIM_CCMR1_IC1PSC_0: u32 = 0x1 << LPTIM_CCMR1_IC1PSC_Pos;
pub const LPTIM_CCMR1_IC1PSC_1: u32 = 0x2 << LPTIM_CCMR1_IC1PSC_Pos;
pub const LPTIM_CCMR1_IC1F_Pos: u32 = 12;
pub const LPTIM_CCMR1_IC1F_Msk: u32 = 0x3 << LPTIM_CCMR1_IC1F_Pos;
pub const LPTIM_CCMR1_IC1F: u32 = LPTIM_CCMR1_IC1F_Msk;
pub const LPTIM_CCMR1_IC1F_0: u32 = 0x1 << LPTIM_CCMR1_IC1F_Pos;
pub const LPTIM_CCMR1_IC1F_1: u32 = 0x2 << LPTIM_CCMR1_IC1F_Pos;
pub const LPTIM_CCMR1_CC2SEL_Pos: u32 = 16;
pub const LPTIM_CCMR1_CC2SEL_Msk: u32 = 0x1 << LPTIM_CCMR1_CC2SEL_Pos;
pub const LPTIM_CCMR1_CC2SEL: u32 = LPTIM_CCMR1_CC2SEL_Msk;
pub const LPTIM_CCMR1_CC2E_Pos: u32 = 17;
pub const LPTIM_CCMR1_CC2E_Msk: u32 = 0x1 << LPTIM_CCMR1_CC2E_Pos;
pub const LPTIM_CCMR1_CC2E: u32 = LPTIM_CCMR1_CC2E_Msk;
pub const LPTIM_CCMR1_CC2P_Pos: u32 = 18;
pub const LPTIM_CCMR1_CC2P_Msk: u32 = 0x3 << LPTIM_CCMR1_CC2P_Pos;
pub const LPTIM_CCMR1_CC2P: u32 = LPTIM_CCMR1_CC2P_Msk;
pub const LPTIM_CCMR1_CC2P_0: u32 = 0x1 << LPTIM_CCMR1_CC2P_Pos;
pub const LPTIM_CCMR1_CC2P_1: u32 = 0x2 << LPTIM_CCMR1_CC2P_Pos;
pub const LPTIM_CCMR1_IC2PSC_Pos: u32 = 24;
pub const LPTIM_CCMR1_IC2PSC_Msk: u32 = 0x3 << LPTIM_CCMR1_IC2PSC_Pos;
pub const LPTIM_CCMR1_IC2PSC: u32 = LPTIM_CCMR1_IC2PSC_Msk;
pub const LPTIM_CCMR1_IC2PSC_0: u32 = 0x1 << LPTIM_CCMR1_IC2PSC_Pos;
pub const LPTIM_CCMR1_IC2PSC_1: u32 = 0x2 << LPTIM_CCMR1_IC2PSC_Pos;
pub const LPTIM_CCMR1_IC2F_Pos: u32 = 28;
pub const LPTIM_CCMR1_IC2F_Msk: u32 = 0x3 << LPTIM_CCMR1_IC2F_Pos;
pub const LPTIM_CCMR1_IC2F: u32 = LPTIM_CCMR1_IC2F_Msk;
pub const LPTIM_CCMR1_IC2F_0: u32 = 0x1 << LPTIM_CCMR1_IC2F_Pos;
pub const LPTIM_CCMR1_IC2F_1: u32 = 0x2 << LPTIM_CCMR1_IC2F_Pos;
pub const LPTIM_CCR2_CCR2_Pos: u32 = 0;
pub const LPTIM_CCR2_CCR2_Msk: u32 = 0xFFFF << LPTIM_CCR2_CCR2_Pos;
pub const LPTIM_CCR2_CCR2: u32 = LPTIM_CCR2_CCR2_Msk;
pub const MCE_CR_GLOCK_Pos: u32 = 0;
pub const MCE_CR_GLOCK_Msk: u32 = 0x1 << MCE_CR_GLOCK_Pos;
pub const MCE_CR_GLOCK: u32 = MCE_CR_GLOCK_Msk;
pub const MCE_CR_MKLOCK_Pos: u32 = 1;
pub const MCE_CR_MKLOCK_Msk: u32 = 0x1 << MCE_CR_MKLOCK_Pos;
pub const MCE_CR_MKLOCK: u32 = MCE_CR_MKLOCK_Msk;
pub const MCE_SR_MKVALID_Pos: u32 = 0;
pub const MCE_SR_MKVALID_Msk: u32 = 0x1 << MCE_SR_MKVALID_Pos;
pub const MCE_SR_MKVALID: u32 = MCE_SR_MKVALID_Msk;
pub const MCE_SR_FMKVALID_Pos: u32 = 2;
pub const MCE_SR_FMKVALID_Msk: u32 = 0x1 << MCE_SR_FMKVALID_Pos;
pub const MCE_SR_FMKVALID: u32 = MCE_SR_FMKVALID_Msk;
pub const MCE_SR_ENCDIS_Pos: u32 = 4;
pub const MCE_SR_ENCDIS_Msk: u32 = 0x1 << MCE_SR_ENCDIS_Pos;
pub const MCE_SR_ENCDIS: u32 = MCE_SR_ENCDIS_Msk;
pub const MCE_IASR_CAEF_Pos: u32 = 0;
pub const MCE_IASR_CAEF_Msk: u32 = 0x1 << MCE_IASR_CAEF_Pos;
pub const MCE_IASR_CAEF: u32 = MCE_IASR_CAEF_Msk;
pub const MCE_IASR_IAEF_Pos: u32 = 1;
pub const MCE_IASR_IAEF_Msk: u32 = 0x1 << MCE_IASR_IAEF_Pos;
pub const MCE_IASR_IAEF: u32 = MCE_IASR_IAEF_Msk;
pub const MCE_IACR_CAEF_Pos: u32 = 0;
pub const MCE_IACR_CAEF_Msk: u32 = 0x1 << MCE_IACR_CAEF_Pos;
pub const MCE_IACR_CAEF: u32 = MCE_IACR_CAEF_Msk;
pub const MCE_IACR_IAEF_Pos: u32 = 1;
pub const MCE_IACR_IAEF_Msk: u32 = 0x1 << MCE_IACR_IAEF_Pos;
pub const MCE_IACR_IAEF: u32 = MCE_IACR_IAEF_Msk;
pub const MCE_IAIER_CAEIE_Pos: u32 = 0;
pub const MCE_IAIER_CAEIE_Msk: u32 = 0x1 << MCE_IAIER_CAEIE_Pos;
pub const MCE_IAIER_CAEIE: u32 = MCE_IAIER_CAEIE_Msk;
pub const MCE_IAIER_IAEIE_Pos: u32 = 1;
pub const MCE_IAIER_IAEIE_Msk: u32 = 0x1 << MCE_IAIER_IAEIE_Pos;
pub const MCE_IAIER_IAEIE: u32 = MCE_IAIER_IAEIE_Msk;
pub const MCE_PRIVCFGR_PRIV_Pos: u32 = 0;
pub const MCE_PRIVCFGR_PRIV_Msk: u32 = 0x1 << MCE_PRIVCFGR_PRIV_Pos;
pub const MCE_PRIVCFGR_PRIV: u32 = MCE_PRIVCFGR_PRIV_Msk;
pub const MCE_IAESR_IAPRIV_Pos: u32 = 4;
pub const MCE_IAESR_IAPRIV_Msk: u32 = 0x1 << MCE_IAESR_IAPRIV_Pos;
pub const MCE_IAESR_IAPRIV: u32 = MCE_IAESR_IAPRIV_Msk;
pub const MCE_IAESR_IANRW_Pos: u32 = 7;
pub const MCE_IAESR_IANRW_Msk: u32 = 0x1 << MCE_IAESR_IANRW_Pos;
pub const MCE_IAESR_IANRW: u32 = MCE_IAESR_IANRW_Msk;
pub const MCE_IADDR_IADD_Pos: u32 = 0;
pub const MCE_IADDR_IADD_Msk: u32 = 0xFFFFFFFF << MCE_IADDR_IADD_Pos;
pub const MCE_IADDR_IADD: u32 = MCE_IADDR_IADD_Msk;
pub const MCE_REGCR_BREN_Pos: u32 = 0;
pub const MCE_REGCR_BREN_Msk: u32 = 0x1 << MCE_REGCR_BREN_Pos;
pub const MCE_REGCR_BREN: u32 = MCE_REGCR_BREN_Msk;
pub const MCE_REGCR_CTXID_Pos: u32 = 9;
pub const MCE_REGCR_CTXID_Msk: u32 = 0x3 << MCE_REGCR_CTXID_Pos;
pub const MCE_REGCR_CTXID: u32 = MCE_REGCR_CTXID_Msk;
pub const MCE_REGCR_CTXID_0: u32 = 0x1 << MCE_REGCR_CTXID_Pos;
pub const MCE_REGCR_CTXID_1: u32 = 0x2 << MCE_REGCR_CTXID_Pos;
pub const MCE_REGCR_ENC_Pos: u32 = 14;
pub const MCE_REGCR_ENC_Msk: u32 = 0x3 << MCE_REGCR_ENC_Pos;
pub const MCE_REGCR_ENC: u32 = MCE_REGCR_ENC_Msk;
pub const MCE_REGCR_ENC_0: u32 = 0x1 << MCE_REGCR_ENC_Pos;
pub const MCE_REGCR_ENC_1: u32 = 0x2 << MCE_REGCR_ENC_Pos;
pub const MCE_REGCR_PRIV_Pos: u32 = 16;
pub const MCE_REGCR_PRIV_Msk: u32 = 0x1 << MCE_REGCR_PRIV_Pos;
pub const MCE_REGCR_PRIV: u32 = MCE_REGCR_PRIV_Msk;
pub const MCE_SADDR_BADDSTART_Pos: u32 = 12;
pub const MCE_SADDR_BADDSTART_Msk: u32 = 0xFFFFF << MCE_SADDR_BADDSTART_Pos;
pub const MCE_SADDR_BADDSTART: u32 = MCE_SADDR_BADDSTART_Msk;
pub const MCE_EADDR_BADDEND_Pos: u32 = 12;
pub const MCE_EADDR_BADDEND_Msk: u32 = 0xFFFFF << MCE_EADDR_BADDEND_Pos;
pub const MCE_EADDR_BADDEND: u32 = MCE_EADDR_BADDEND_Msk;
pub const MCE_ATTR_WREN_Pos: u32 = 16;
pub const MCE_ATTR_WREN_Msk: u32 = 0x1 << MCE_ATTR_WREN_Pos;
pub const MCE_ATTR_WREN: u32 = MCE_ATTR_WREN_Msk;
pub const MCE_MKEYR0_MKEY_Pos: u32 = 0;
pub const MCE_MKEYR0_MKEY_Msk: u32 = 0xFFFFFFFF << MCE_MKEYR0_MKEY_Pos;
pub const MCE_MKEYR0_MKEY: u32 = MCE_MKEYR0_MKEY_Msk;
pub const MCE_MKEYR1_MKEY_Pos: u32 = 0;
pub const MCE_MKEYR1_MKEY_Msk: u32 = 0xFFFFFFFF << MCE_MKEYR1_MKEY_Pos;
pub const MCE_MKEYR1_MKEY: u32 = MCE_MKEYR1_MKEY_Msk;
pub const MCE_MKEYR2_MKEY_Pos: u32 = 0;
pub const MCE_MKEYR2_MKEY_Msk: u32 = 0xFFFFFFFF << MCE_MKEYR2_MKEY_Pos;
pub const MCE_MKEYR2_MKEY: u32 = MCE_MKEYR2_MKEY_Msk;
pub const MCE_MKEYR3_MKEY_Pos: u32 = 0;
pub const MCE_MKEYR3_MKEY_Msk: u32 = 0xFFFFFFFF << MCE_MKEYR3_MKEY_Pos;
pub const MCE_MKEYR3_MKEY: u32 = MCE_MKEYR3_MKEY_Msk;
pub const MCE_FMKEYR0_FMKEY_Pos: u32 = 0;
pub const MCE_FMKEYR0_FMKEY_Msk: u32 = 0xFFFFFFFF << MCE_FMKEYR0_FMKEY_Pos;
pub const MCE_FMKEYR0_FMKEY: u32 = MCE_FMKEYR0_FMKEY_Msk;
pub const MCE_FMKEYR1_FMKEY_Pos: u32 = 0;
pub const MCE_FMKEYR1_FMKEY_Msk: u32 = 0xFFFFFFFF << MCE_FMKEYR1_FMKEY_Pos;
pub const MCE_FMKEYR1_FMKEY: u32 = MCE_FMKEYR1_FMKEY_Msk;
pub const MCE_FMKEYR2_FMKEY_Pos: u32 = 0;
pub const MCE_FMKEYR2_FMKEY_Msk: u32 = 0xFFFFFFFF << MCE_FMKEYR2_FMKEY_Pos;
pub const MCE_FMKEYR2_FMKEY: u32 = MCE_FMKEYR2_FMKEY_Msk;
pub const MCE_FMKEYR3_FMKEY_Pos: u32 = 0;
pub const MCE_FMKEYR3_FMKEY_Msk: u32 = 0xFFFFFFFF << MCE_FMKEYR3_FMKEY_Pos;
pub const MCE_FMKEYR3_FMKEY: u32 = MCE_FMKEYR3_FMKEY_Msk;
pub const MCE_CCCFGR_CCEN_Pos: u32 = 0;
pub const MCE_CCCFGR_CCEN_Msk: u32 = 0x1 << MCE_CCCFGR_CCEN_Pos;
pub const MCE_CCCFGR_CCEN: u32 = MCE_CCCFGR_CCEN_Msk;
pub const MCE_CCCFGR_CCLOCK_Pos: u32 = 1;
pub const MCE_CCCFGR_CCLOCK_Msk: u32 = 0x1 << MCE_CCCFGR_CCLOCK_Pos;
pub const MCE_CCCFGR_CCLOCK: u32 = MCE_CCCFGR_CCLOCK_Msk;
pub const MCE_CCCFGR_KEYLOCK_Pos: u32 = 2;
pub const MCE_CCCFGR_KEYLOCK_Msk: u32 = 0x1 << MCE_CCCFGR_KEYLOCK_Pos;
pub const MCE_CCCFGR_KEYLOCK: u32 = MCE_CCCFGR_KEYLOCK_Msk;
pub const MCE_CCCFGR_KEYCRC_Pos: u32 = 8;
pub const MCE_CCCFGR_KEYCRC_Msk: u32 = 0xFF << MCE_CCCFGR_KEYCRC_Pos;
pub const MCE_CCCFGR_KEYCRC: u32 = MCE_CCCFGR_KEYCRC_Msk;
pub const MCE_CCCFGR_VERSION_Pos: u32 = 16;
pub const MCE_CCCFGR_VERSION_Msk: u32 = 0xFFFF << MCE_CCCFGR_VERSION_Pos;
pub const MCE_CCCFGR_VERSION: u32 = MCE_CCCFGR_VERSION_Msk;
pub const MCE_CCNR0_SCNONCE_Pos: u32 = 0;
pub const MCE_CCNR0_SCNONCE_Msk: u32 = 0xFFFFFFFF << MCE_CCNR0_SCNONCE_Pos;
pub const MCE_CCNR0_SCNONCE: u32 = MCE_CCNR0_SCNONCE_Msk;
pub const MCE_CCNR1_SCNONCE_Pos: u32 = 0;
pub const MCE_CCNR1_SCNONCE_Msk: u32 = 0xFFFFFFFF << MCE_CCNR1_SCNONCE_Pos;
pub const MCE_CCNR1_SCNONCE: u32 = MCE_CCNR1_SCNONCE_Msk;
pub const MCE_CCKEYR0_KEY_Pos: u32 = 0;
pub const MCE_CCKEYR0_KEY_Msk: u32 = 0xFFFFFFFF << MCE_CCKEYR0_KEY_Pos;
pub const MCE_CCKEYR0_KEY: u32 = MCE_CCKEYR0_KEY_Msk;
pub const MCE_CCKEYR1_KEY_Pos: u32 = 0;
pub const MCE_CCKEYR1_KEY_Msk: u32 = 0xFFFFFFFF << MCE_CCKEYR1_KEY_Pos;
pub const MCE_CCKEYR1_KEY: u32 = MCE_CCKEYR1_KEY_Msk;
pub const MCE_CCKEYR2_KEY_Pos: u32 = 0;
pub const MCE_CCKEYR2_KEY_Msk: u32 = 0xFFFFFFFF << MCE_CCKEYR2_KEY_Pos;
pub const MCE_CCKEYR2_KEY: u32 = MCE_CCKEYR2_KEY_Msk;
pub const MCE_CCKEYR3_KEY_Pos: u32 = 0;
pub const MCE_CCKEYR3_KEY_Msk: u32 = 0xFFFFFFFF << MCE_CCKEYR3_KEY_Pos;
pub const MCE_CCKEYR3_KEY: u32 = MCE_CCKEYR3_KEY_Msk;
pub const MDIOS_CR_EN_Pos: u32 = 0;
pub const MDIOS_CR_EN_Msk: u32 = 0x1 << MDIOS_CR_EN_Pos;
pub const MDIOS_CR_EN: u32 = MDIOS_CR_EN_Msk;
pub const MDIOS_CR_WRIE_Pos: u32 = 1;
pub const MDIOS_CR_WRIE_Msk: u32 = 0x1 << MDIOS_CR_WRIE_Pos;
pub const MDIOS_CR_WRIE: u32 = MDIOS_CR_WRIE_Msk;
pub const MDIOS_CR_RDIE_Pos: u32 = 2;
pub const MDIOS_CR_RDIE_Msk: u32 = 0x1 << MDIOS_CR_RDIE_Pos;
pub const MDIOS_CR_RDIE: u32 = MDIOS_CR_RDIE_Msk;
pub const MDIOS_CR_EIE_Pos: u32 = 3;
pub const MDIOS_CR_EIE_Msk: u32 = 0x1 << MDIOS_CR_EIE_Pos;
pub const MDIOS_CR_EIE: u32 = MDIOS_CR_EIE_Msk;
pub const MDIOS_CR_DPC_Pos: u32 = 7;
pub const MDIOS_CR_DPC_Msk: u32 = 0x1 << MDIOS_CR_DPC_Pos;
pub const MDIOS_CR_DPC: u32 = MDIOS_CR_DPC_Msk;
pub const MDIOS_CR_PORT_ADDRESS_Pos: u32 = 8;
pub const MDIOS_CR_PORT_ADDRESS_Msk: u32 = 0x1F << MDIOS_CR_PORT_ADDRESS_Pos;
pub const MDIOS_CR_PORT_ADDRESS: u32 = MDIOS_CR_PORT_ADDRESS_Msk;
pub const MDIOS_CR_PORT_ADDRESS_0: u32 = 0x01 << MDIOS_CR_PORT_ADDRESS_Pos;
pub const MDIOS_CR_PORT_ADDRESS_1: u32 = 0x02 << MDIOS_CR_PORT_ADDRESS_Pos;
pub const MDIOS_CR_PORT_ADDRESS_2: u32 = 0x04 << MDIOS_CR_PORT_ADDRESS_Pos;
pub const MDIOS_CR_PORT_ADDRESS_3: u32 = 0x08 << MDIOS_CR_PORT_ADDRESS_Pos;
pub const MDIOS_CR_PORT_ADDRESS_4: u32 = 0x10 << MDIOS_CR_PORT_ADDRESS_Pos;
pub const MDIOS_SR_PERF_Pos: u32 = 0;
pub const MDIOS_SR_PERF_Msk: u32 = 0x1 << MDIOS_SR_PERF_Pos;
pub const MDIOS_SR_PERF: u32 = MDIOS_SR_PERF_Msk;
pub const MDIOS_SR_SERF_Pos: u32 = 1;
pub const MDIOS_SR_SERF_Msk: u32 = 0x1 << MDIOS_SR_SERF_Pos;
pub const MDIOS_SR_SERF: u32 = MDIOS_SR_SERF_Msk;
pub const MDIOS_SR_TERF_Pos: u32 = 2;
pub const MDIOS_SR_TERF_Msk: u32 = 0x1 << MDIOS_SR_TERF_Pos;
pub const MDIOS_SR_TERF: u32 = MDIOS_SR_TERF_Msk;
pub const MDIOS_CLRFR_CPERF_Pos: u32 = 0;
pub const MDIOS_CLRFR_CPERF_Msk: u32 = 0x1 << MDIOS_SR_CPERF_Pos;
pub const MDIOS_CLRFR_CPERF: u32 = MDIOS_CLRFR_CPERF_Msk;
pub const MDIOS_CLRFR_CSERF_Pos: u32 = 1;
pub const MDIOS_CLRFR_CSERF_Msk: u32 = 0x1 << MDIOS_SR_CSERF_Pos;
pub const MDIOS_CLRFR_CSERF: u32 = MDIOS_CLRFR_CSERF_Msk;
pub const MDIOS_CLRFR_CTERF_Pos: u32 = 2;
pub const MDIOS_CLRFR_CTERF_Msk: u32 = 0x1 << MDIOS_SR_CTERF_Pos;
pub const MDIOS_CLRFR_CTERF: u32 = MDIOS_CLRFR_CTERF_Msk;
pub const MDF_GCR_TRGO_Pos: u32 = 0;
pub const MDF_GCR_TRGO_Msk: u32 = 0x1 << MDF_GCR_TRGO_Pos;
pub const MDF_GCR_TRGO: u32 = MDF_GCR_TRGO_Msk;
pub const MDF_CKGCR_CKGDEN_Pos: u32 = 0;
pub const MDF_CKGCR_CKGDEN_Msk: u32 = 0x1 << MDF_CKGCR_CKGDEN_Pos;
pub const MDF_CKGCR_CKGDEN: u32 = MDF_CKGCR_CKGDEN_Msk;
pub const MDF_CKGCR_CCK0EN_Pos: u32 = 1;
pub const MDF_CKGCR_CCK0EN_Msk: u32 = 0x1 << MDF_CKGCR_CCK0EN_Pos;
pub const MDF_CKGCR_CCK0EN: u32 = MDF_CKGCR_CCK0EN_Msk;
pub const MDF_CKGCR_CCK1EN_Pos: u32 = 2;
pub const MDF_CKGCR_CCK1EN_Msk: u32 = 0x1 << MDF_CKGCR_CCK1EN_Pos;
pub const MDF_CKGCR_CCK1EN: u32 = MDF_CKGCR_CCK1EN_Msk;
pub const MDF_CKGCR_CKGMOD_Pos: u32 = 4;
pub const MDF_CKGCR_CKGMOD_Msk: u32 = 0x1 << MDF_CKGCR_CKGMOD_Pos;
pub const MDF_CKGCR_CKGMOD: u32 = MDF_CKGCR_CKGMOD_Msk;
pub const MDF_CKGCR_CCK0DIR_Pos: u32 = 5;
pub const MDF_CKGCR_CCK0DIR_Msk: u32 = 0x1 << MDF_CKGCR_CCK0DIR_Pos;
pub const MDF_CKGCR_CCK0DIR: u32 = MDF_CKGCR_CCK0DIR_Msk;
pub const MDF_CKGCR_CCK1DIR_Pos: u32 = 6;
pub const MDF_CKGCR_CCK1DIR_Msk: u32 = 0x1 << MDF_CKGCR_CCK1DIR_Pos;
pub const MDF_CKGCR_CCK1DIR: u32 = MDF_CKGCR_CCK1DIR_Msk;
pub const MDF_CKGCR_TRGSENS_Pos: u32 = 8;
pub const MDF_CKGCR_TRGSENS_Msk: u32 = 0x1 << MDF_CKGCR_TRGSENS_Pos;
pub const MDF_CKGCR_TRGSENS: u32 = MDF_CKGCR_TRGSENS_Msk;
pub const MDF_CKGCR_TRGSRC_Pos: u32 = 12;
pub const MDF_CKGCR_TRGSRC_Msk: u32 = 0xF << MDF_CKGCR_TRGSRC_Pos;
pub const MDF_CKGCR_TRGSRC: u32 = MDF_CKGCR_TRGSRC_Msk;
pub const MDF_CKGCR_TRGSRC_0: u32 = 0x1 << MDF_CKGCR_TRGSRC_Pos;
pub const MDF_CKGCR_TRGSRC_1: u32 = 0x2 << MDF_CKGCR_TRGSRC_Pos;
pub const MDF_CKGCR_TRGSRC_2: u32 = 0x4 << MDF_CKGCR_TRGSRC_Pos;
pub const MDF_CKGCR_TRGSRC_3: u32 = 0x8 << MDF_CKGCR_TRGSRC_Pos;
pub const MDF_CKGCR_CCKDIV_Pos: u32 = 16;
pub const MDF_CKGCR_CCKDIV_Msk: u32 = 0xF << MDF_CKGCR_CCKDIV_Pos;
pub const MDF_CKGCR_CCKDIV: u32 = MDF_CKGCR_CCKDIV_Msk;
pub const MDF_CKGCR_PROCDIV_Pos: u32 = 24;
pub const MDF_CKGCR_PROCDIV_Msk: u32 = 0x7F << MDF_CKGCR_PROCDIV_Pos;
pub const MDF_CKGCR_PROCDIV: u32 = MDF_CKGCR_PROCDIV_Msk;
pub const MDF_CKGCR_CKGACTIVE_Pos: u32 = 31;
pub const MDF_CKGCR_CKGACTIVE_Msk: u32 = 0x1 << MDF_CKGCR_CKGACTIVE_Pos;
pub const MDF_CKGCR_CKGACTIVE: u32 = MDF_CKGCR_CKGACTIVE_Msk;
pub const MDF_SITFCR_SITFEN_Pos: u32 = 0;
pub const MDF_SITFCR_SITFEN_Msk: u32 = 0x1 << MDF_SITFCR_SITFEN_Pos;
pub const MDF_SITFCR_SITFEN: u32 = MDF_SITFCR_SITFEN_Msk;
pub const MDF_SITFCR_SCKSRC_Pos: u32 = 1;
pub const MDF_SITFCR_SCKSRC_Msk: u32 = 0x3 << MDF_SITFCR_SCKSRC_Pos;
pub const MDF_SITFCR_SCKSRC: u32 = MDF_SITFCR_SCKSRC_Msk;
pub const MDF_SITFCR_SCKSRC_0: u32 = 0x1 << MDF_SITFCR_SCKSRC_Pos;
pub const MDF_SITFCR_SCKSRC_1: u32 = 0x2 << MDF_SITFCR_SCKSRC_Pos;
pub const MDF_SITFCR_SITFMOD_Pos: u32 = 4;
pub const MDF_SITFCR_SITFMOD_Msk: u32 = 0x3 << MDF_SITFCR_SITFMOD_Pos;
pub const MDF_SITFCR_SITFMOD: u32 = MDF_SITFCR_SITFMOD_Msk;
pub const MDF_SITFCR_SITFMOD_0: u32 = 0x1 << MDF_SITFCR_SITFMOD_Pos;
pub const MDF_SITFCR_SITFMOD_1: u32 = 0x2 << MDF_SITFCR_SITFMOD_Pos;
pub const MDF_SITFCR_STH_Pos: u32 = 8;
pub const MDF_SITFCR_STH_Msk: u32 = 0x1F << MDF_SITFCR_STH_Pos;
pub const MDF_SITFCR_STH: u32 = MDF_SITFCR_STH_Msk;
pub const MDF_SITFCR_SITFACTIVE_Pos: u32 = 31;
pub const MDF_SITFCR_SITFACTIVE_Msk: u32 = 0x1 << MDF_SITFCR_SITFACTIVE_Pos;
pub const MDF_SITFCR_SITFACTIVE: u32 = MDF_SITFCR_SITFACTIVE_Msk;
pub const MDF_BSMXCR_BSSEL_Pos: u32 = 0;
pub const MDF_BSMXCR_BSSEL_Msk: u32 = 0x1F << MDF_BSMXCR_BSSEL_Pos;
pub const MDF_BSMXCR_BSSEL: u32 = MDF_BSMXCR_BSSEL_Msk;
pub const MDF_BSMXCR_BSSEL_0: u32 = 0x1 << MDF_BSMXCR_BSSEL_Pos;
pub const MDF_BSMXCR_BSSEL_1: u32 = 0x2 << MDF_BSMXCR_BSSEL_Pos;
pub const MDF_BSMXCR_BSSEL_2: u32 = 0x4 << MDF_BSMXCR_BSSEL_Pos;
pub const MDF_BSMXCR_BSSEL_3: u32 = 0x8 << MDF_BSMXCR_BSSEL_Pos;
pub const MDF_BSMXCR_BSSEL_4: u32 = 0x10 << MDF_BSMXCR_BSSEL_Pos;
pub const MDF_BSMXCR_BSMXACTIVE_Pos: u32 = 31;
pub const MDF_BSMXCR_BSMXACTIVE_Msk: u32 = 0x1 << MDF_BSMXCR_BSMXACTIVE_Pos;
pub const MDF_BSMXCR_BSMXACTIVE: u32 = MDF_BSMXCR_BSMXACTIVE_Msk;
pub const MDF_DFLTCR_DFLTEN_Pos: u32 = 0;
pub const MDF_DFLTCR_DFLTEN_Msk: u32 = 0x1 << MDF_DFLTCR_DFLTEN_Pos;
pub const MDF_DFLTCR_DFLTEN: u32 = MDF_DFLTCR_DFLTEN_Msk;
pub const MDF_DFLTCR_DMAEN_Pos: u32 = 1;
pub const MDF_DFLTCR_DMAEN_Msk: u32 = 0x1 << MDF_DFLTCR_DMAEN_Pos;
pub const MDF_DFLTCR_DMAEN: u32 = MDF_DFLTCR_DMAEN_Msk;
pub const MDF_DFLTCR_FTH_Pos: u32 = 2;
pub const MDF_DFLTCR_FTH_Msk: u32 = 0x1 << MDF_DFLTCR_FTH_Pos;
pub const MDF_DFLTCR_FTH: u32 = MDF_DFLTCR_FTH_Msk;
pub const MDF_DFLTCR_ACQMOD_Pos: u32 = 4;
pub const MDF_DFLTCR_ACQMOD_Msk: u32 = 0x7 << MDF_DFLTCR_ACQMOD_Pos;
pub const MDF_DFLTCR_ACQMOD: u32 = MDF_DFLTCR_ACQMOD_Msk;
pub const MDF_DFLTCR_ACQMOD_0: u32 = 0x1 << MDF_DFLTCR_ACQMOD_Pos;
pub const MDF_DFLTCR_ACQMOD_1: u32 = 0x2 << MDF_DFLTCR_ACQMOD_Pos;
pub const MDF_DFLTCR_ACQMOD_2: u32 = 0x4 << MDF_DFLTCR_ACQMOD_Pos;
pub const MDF_DFLTCR_TRGSENS_Pos: u32 = 8;
pub const MDF_DFLTCR_TRGSENS_Msk: u32 = 0x1 << MDF_DFLTCR_TRGSENS_Pos;
pub const MDF_DFLTCR_TRGSENS: u32 = MDF_DFLTCR_TRGSENS_Msk;
pub const MDF_DFLTCR_TRGSRC_Pos: u32 = 12;
pub const MDF_DFLTCR_TRGSRC_Msk: u32 = 0xF << MDF_DFLTCR_TRGSRC_Pos;
pub const MDF_DFLTCR_TRGSRC: u32 = MDF_DFLTCR_TRGSRC_Msk;
pub const MDF_DFLTCR_TRGSRC_0: u32 = 0x1 << MDF_DFLTCR_TRGSRC_Pos;
pub const MDF_DFLTCR_TRGSRC_1: u32 = 0x2 << MDF_DFLTCR_TRGSRC_Pos;
pub const MDF_DFLTCR_TRGSRC_2: u32 = 0x4 << MDF_DFLTCR_TRGSRC_Pos;
pub const MDF_DFLTCR_TRGSRC_3: u32 = 0x8 << MDF_DFLTCR_TRGSRC_Pos;
pub const MDF_DFLTCR_NBDIS_Pos: u32 = 20;
pub const MDF_DFLTCR_NBDIS_Msk: u32 = 0xFF << MDF_DFLTCR_NBDIS_Pos;
pub const MDF_DFLTCR_NBDIS: u32 = MDF_DFLTCR_NBDIS_Msk;
pub const MDF_DFLTCR_DFLTRUN_Pos: u32 = 30;
pub const MDF_DFLTCR_DFLTRUN_Msk: u32 = 0x1 << MDF_DFLTCR_DFLTRUN_Pos;
pub const MDF_DFLTCR_DFLTRUN: u32 = MDF_DFLTCR_DFLTRUN_Msk;
pub const MDF_DFLTCR_DFLTACTIVE_Pos: u32 = 31;
pub const MDF_DFLTCR_DFLTACTIVE_Msk: u32 = 0x1 << MDF_DFLTCR_DFLTACTIVE_Pos;
pub const MDF_DFLTCR_DFLTACTIVE: u32 = MDF_DFLTCR_DFLTACTIVE_Msk;
pub const MDF_DFLTCICR_DATSRC_Pos: u32 = 0;
pub const MDF_DFLTCICR_DATSRC_Msk: u32 = 0x3 << MDF_DFLTCICR_DATSRC_Pos;
pub const MDF_DFLTCICR_DATSRC: u32 = MDF_DFLTCICR_DATSRC_Msk;
pub const MDF_DFLTCICR_DATSRC_0: u32 = 0x1 << MDF_DFLTCICR_DATSRC_Pos;
pub const MDF_DFLTCICR_DATSRC_1: u32 = 0x2 << MDF_DFLTCICR_DATSRC_Pos;
pub const MDF_DFLTCICR_CICMOD_Pos: u32 = 4;
pub const MDF_DFLTCICR_CICMOD_Msk: u32 = 0x7 << MDF_DFLTCICR_CICMOD_Pos;
pub const MDF_DFLTCICR_CICMOD: u32 = MDF_DFLTCICR_CICMOD_Msk;
pub const MDF_DFLTCICR_CICMOD_0: u32 = 0x1 << MDF_DFLTCICR_CICMOD_Pos;
pub const MDF_DFLTCICR_CICMOD_1: u32 = 0x2 << MDF_DFLTCICR_CICMOD_Pos;
pub const MDF_DFLTCICR_CICMOD_2: u32 = 0x4 << MDF_DFLTCICR_CICMOD_Pos;
pub const MDF_DFLTCICR_MCICD_Pos: u32 = 8;
pub const MDF_DFLTCICR_MCICD_Msk: u32 = 0x1FF << MDF_DFLTCICR_MCICD_Pos;
pub const MDF_DFLTCICR_MCICD: u32 = MDF_DFLTCICR_MCICD_Msk;
pub const MDF_DFLTCICR_SCALE_Pos: u32 = 20;
pub const MDF_DFLTCICR_SCALE_Msk: u32 = 0x3F << MDF_DFLTCICR_SCALE_Pos;
pub const MDF_DFLTCICR_SCALE: u32 = MDF_DFLTCICR_SCALE_Msk;
pub const MDF_DFLTRSFR_RSFLTBYP_Pos: u32 = 0;
pub const MDF_DFLTRSFR_RSFLTBYP_Msk: u32 = 0x1 << MDF_DFLTRSFR_RSFLTBYP_Pos;
pub const MDF_DFLTRSFR_RSFLTBYP: u32 = MDF_DFLTRSFR_RSFLTBYP_Msk;
pub const MDF_DFLTRSFR_RSFLTD_Pos: u32 = 4;
pub const MDF_DFLTRSFR_RSFLTD_Msk: u32 = 0x1 << MDF_DFLTRSFR_RSFLTD_Pos;
pub const MDF_DFLTRSFR_RSFLTD: u32 = MDF_DFLTRSFR_RSFLTD_Msk;
pub const MDF_DFLTRSFR_HPFBYP_Pos: u32 = 7;
pub const MDF_DFLTRSFR_HPFBYP_Msk: u32 = 0x1 << MDF_DFLTRSFR_HPFBYP_Pos;
pub const MDF_DFLTRSFR_HPFBYP: u32 = MDF_DFLTRSFR_HPFBYP_Msk;
pub const MDF_DFLTRSFR_HPFC_Pos: u32 = 8;
pub const MDF_DFLTRSFR_HPFC_Msk: u32 = 0x3 << MDF_DFLTRSFR_HPFC_Pos;
pub const MDF_DFLTRSFR_HPFC: u32 = MDF_DFLTRSFR_HPFC_Msk;
pub const MDF_DFLTRSFR_HPFC_0: u32 = 0x1 << MDF_DFLTRSFR_HPFC_Pos;
pub const MDF_DFLTRSFR_HPFC_1: u32 = 0x2 << MDF_DFLTRSFR_HPFC_Pos;
pub const MDF_DLYCR_SKPDLY_Pos: u32 = 0;
pub const MDF_DLYCR_SKPDLY_Msk: u32 = 0x7F << MDF_DLYCR_SKPDLY_Pos;
pub const MDF_DLYCR_SKPDLY: u32 = MDF_DLYCR_SKPDLY_Msk;
pub const MDF_DLYCR_SKPBF_Pos: u32 = 31;
pub const MDF_DLYCR_SKPBF_Msk: u32 = 0x1 << MDF_DLYCR_SKPBF_Pos;
pub const MDF_DLYCR_SKPBF: u32 = MDF_DLYCR_SKPBF_Msk;
pub const MDF_DFLTIER_FTHIE_Pos: u32 = 0;
pub const MDF_DFLTIER_FTHIE_Msk: u32 = 0x1 << MDF_DFLTIER_FTHIE_Pos;
pub const MDF_DFLTIER_FTHIE: u32 = MDF_DFLTIER_FTHIE_Msk;
pub const MDF_DFLTIER_DOVRIE_Pos: u32 = 1;
pub const MDF_DFLTIER_DOVRIE_Msk: u32 = 0x1 << MDF_DFLTIER_DOVRIE_Pos;
pub const MDF_DFLTIER_DOVRIE: u32 = MDF_DFLTIER_DOVRIE_Msk;
pub const MDF_DFLTIER_SATIE_Pos: u32 = 9;
pub const MDF_DFLTIER_SATIE_Msk: u32 = 0x1 << MDF_DFLTIER_SATIE_Pos;
pub const MDF_DFLTIER_SATIE: u32 = MDF_DFLTIER_SATIE_Msk;
pub const MDF_DFLTIER_CKABIE_Pos: u32 = 10;
pub const MDF_DFLTIER_CKABIE_Msk: u32 = 0x1 << MDF_DFLTIER_CKABIE_Pos;
pub const MDF_DFLTIER_CKABIE: u32 = MDF_DFLTIER_CKABIE_Msk;
pub const MDF_DFLTIER_RFOVRIE_Pos: u32 = 11;
pub const MDF_DFLTIER_RFOVRIE_Msk: u32 = 0x1 << MDF_DFLTIER_RFOVRIE_Pos;
pub const MDF_DFLTIER_RFOVRIE: u32 = MDF_DFLTIER_RFOVRIE_Msk;
pub const MDF_DFLTIER_SDDETIE_Pos: u32 = 12;
pub const MDF_DFLTIER_SDDETIE_Msk: u32 = 0x1 << MDF_DFLTIER_SDDETIE_Pos;
pub const MDF_DFLTIER_SDDETIE: u32 = MDF_DFLTIER_SDDETIE_Msk;
pub const MDF_DFLTIER_SDLVLIE_Pos: u32 = 13;
pub const MDF_DFLTIER_SDLVLIE_Msk: u32 = 0x1 << MDF_DFLTIER_SDLVLIE_Pos;
pub const MDF_DFLTIER_SDLVLIE: u32 = MDF_DFLTIER_SDLVLIE_Msk;
pub const MDF_DFLTISR_FTHF_Pos: u32 = 0;
pub const MDF_DFLTISR_FTHF_Msk: u32 = 0x1 << MDF_DFLTISR_FTHF_Pos;
pub const MDF_DFLTISR_FTHF: u32 = MDF_DFLTISR_FTHF_Msk;
pub const MDF_DFLTISR_DOVRF_Pos: u32 = 1;
pub const MDF_DFLTISR_DOVRF_Msk: u32 = 0x1 << MDF_DFLTISR_DOVRF_Pos;
pub const MDF_DFLTISR_DOVRF: u32 = MDF_DFLTISR_DOVRF_Msk;
pub const MDF_DFLTISR_RXNEF_Pos: u32 = 3;
pub const MDF_DFLTISR_RXNEF_Msk: u32 = 0x1 << MDF_DFLTISR_RXNEF_Pos;
pub const MDF_DFLTISR_RXNEF: u32 = MDF_DFLTISR_RXNEF_Msk;
pub const MDF_DFLTISR_SATF_Pos: u32 = 9;
pub const MDF_DFLTISR_SATF_Msk: u32 = 0x1 << MDF_DFLTISR_SATF_Pos;
pub const MDF_DFLTISR_SATF: u32 = MDF_DFLTISR_SATF_Msk;
pub const MDF_DFLTISR_CKABF_Pos: u32 = 10;
pub const MDF_DFLTISR_CKABF_Msk: u32 = 0x1 << MDF_DFLTISR_CKABF_Pos;
pub const MDF_DFLTISR_CKABF: u32 = MDF_DFLTISR_CKABF_Msk;
pub const MDF_DFLTISR_RFOVRF_Pos: u32 = 11;
pub const MDF_DFLTISR_RFOVRF_Msk: u32 = 0x1 << MDF_DFLTISR_RFOVRF_Pos;
pub const MDF_DFLTISR_RFOVRF: u32 = MDF_DFLTISR_RFOVRF_Msk;
pub const MDF_DFLTISR_SDDETF_Pos: u32 = 12;
pub const MDF_DFLTISR_SDDETF_Msk: u32 = 0x1 << MDF_DFLTISR_SDDETF_Pos;
pub const MDF_DFLTISR_SDDETF: u32 = MDF_DFLTISR_SDDETF_Msk;
pub const MDF_DFLTISR_SDLVLF_Pos: u32 = 13;
pub const MDF_DFLTISR_SDLVLF_Msk: u32 = 0x1 << MDF_DFLTISR_SDLVLF_Pos;
pub const MDF_DFLTISR_SDLVLF: u32 = MDF_DFLTISR_SDLVLF_Msk;
pub const MDF_SADCR_SADEN_Pos: u32 = 0;
pub const MDF_SADCR_SADEN_Msk: u32 = 0x1 << MDF_SADCR_SADEN_Pos;
pub const MDF_SADCR_SADEN: u32 = MDF_SADCR_SADEN_Msk;
pub const MDF_SADCR_DATCAP_Pos: u32 = 1;
pub const MDF_SADCR_DATCAP_Msk: u32 = 0x3 << MDF_SADCR_DATCAP_Pos;
pub const MDF_SADCR_DATCAP: u32 = MDF_SADCR_DATCAP_Msk;
pub const MDF_SADCR_DATCAP_0: u32 = 0x1 << MDF_SADCR_DATCAP_Pos;
pub const MDF_SADCR_DATCAP_1: u32 = 0x2 << MDF_SADCR_DATCAP_Pos;
pub const MDF_SADCR_DETCFG_Pos: u32 = 3;
pub const MDF_SADCR_DETCFG_Msk: u32 = 0x1 << MDF_SADCR_DETCFG_Pos;
pub const MDF_SADCR_DETCFG: u32 = MDF_SADCR_DETCFG_Msk;
pub const MDF_SADCR_SADST_Pos: u32 = 4;
pub const MDF_SADCR_SADST_Msk: u32 = 0x3 << MDF_SADCR_SADST_Pos;
pub const MDF_SADCR_SADST: u32 = MDF_SADCR_SADST_Msk;
pub const MDF_SADCR_HYSTEN_Pos: u32 = 7;
pub const MDF_SADCR_HYSTEN_Msk: u32 = 0x1 << MDF_SADCR_HYSTEN_Pos;
pub const MDF_SADCR_HYSTEN: u32 = MDF_SADCR_HYSTEN_Msk;
pub const MDF_SADCR_FRSIZE_Pos: u32 = 8;
pub const MDF_SADCR_FRSIZE_Msk: u32 = 0x7 << MDF_SADCR_FRSIZE_Pos;
pub const MDF_SADCR_FRSIZE: u32 = MDF_SADCR_FRSIZE_Msk;
pub const MDF_SADCR_FRSIZE_0: u32 = 0x1 << MDF_SADCR_FRSIZE_Pos;
pub const MDF_SADCR_FRSIZE_1: u32 = 0x2 << MDF_SADCR_FRSIZE_Pos;
pub const MDF_SADCR_FRSIZE_2: u32 = 0x4 << MDF_SADCR_FRSIZE_Pos;
pub const MDF_SADCR_SADMOD_Pos: u32 = 12;
pub const MDF_SADCR_SADMOD_Msk: u32 = 0x3 << MDF_SADCR_SADMOD_Pos;
pub const MDF_SADCR_SADMOD: u32 = MDF_SADCR_SADMOD_Msk;
pub const MDF_SADCR_SADMOD_0: u32 = 0x1 << MDF_SADCR_SADMOD_Pos;
pub const MDF_SADCR_SADMOD_1: u32 = 0x2 << MDF_SADCR_SADMOD_Pos;
pub const MDF_SADCR_SADACTIVE_Pos: u32 = 31;
pub const MDF_SADCR_SADACTIVE_Msk: u32 = 0x1 << MDF_SADCR_SADACTIVE_Pos;
pub const MDF_SADCR_SADACTIVE: u32 = MDF_SADCR_SADACTIVE_Msk;
pub const MDF_SADCFGR_SNTHR_Pos: u32 = 0;
pub const MDF_SADCFGR_SNTHR_Msk: u32 = 0xF << MDF_SADCFGR_SNTHR_Pos;
pub const MDF_SADCFGR_SNTHR: u32 = MDF_SADCFGR_SNTHR_Msk;
pub const MDF_SADCFGR_SNTHR_0: u32 = 0x1 << MDF_SADCFGR_SNTHR_Pos;
pub const MDF_SADCFGR_SNTHR_1: u32 = 0x2 << MDF_SADCFGR_SNTHR_Pos;
pub const MDF_SADCFGR_SNTHR_2: u32 = 0x4 << MDF_SADCFGR_SNTHR_Pos;
pub const MDF_SADCFGR_SNTHR_3: u32 = 0x8 << MDF_SADCFGR_SNTHR_Pos;
pub const MDF_SADCFGR_ANSLP_Pos: u32 = 4;
pub const MDF_SADCFGR_ANSLP_Msk: u32 = 0x7 << MDF_SADCFGR_ANSLP_Pos;
pub const MDF_SADCFGR_ANSLP: u32 = MDF_SADCFGR_ANSLP_Msk;
pub const MDF_SADCFGR_LFRNB_Pos: u32 = 8;
pub const MDF_SADCFGR_LFRNB_Msk: u32 = 0x7 << MDF_SADCFGR_LFRNB_Pos;
pub const MDF_SADCFGR_LFRNB: u32 = MDF_SADCFGR_LFRNB_Msk;
pub const MDF_SADCFGR_LFRNB_0: u32 = 0x1 << MDF_SADCFGR_LFRNB_Pos;
pub const MDF_SADCFGR_LFRNB_1: u32 = 0x2 << MDF_SADCFGR_LFRNB_Pos;
pub const MDF_SADCFGR_LFRNB_2: u32 = 0x4 << MDF_SADCFGR_LFRNB_Pos;
pub const MDF_SADCFGR_HGOVR_Pos: u32 = 12;
pub const MDF_SADCFGR_HGOVR_Msk: u32 = 0x7 << MDF_SADCFGR_HGOVR_Pos;
pub const MDF_SADCFGR_HGOVR: u32 = MDF_SADCFGR_HGOVR_Msk;
pub const MDF_SADCFGR_HGOVR_0: u32 = 0x1 << MDF_SADCFGR_HGOVR_Pos;
pub const MDF_SADCFGR_HGOVR_1: u32 = 0x2 << MDF_SADCFGR_HGOVR_Pos;
pub const MDF_SADCFGR_HGOVR_2: u32 = 0x4 << MDF_SADCFGR_HGOVR_Pos;
pub const MDF_SADCFGR_ANMIN_Pos: u32 = 16;
pub const MDF_SADCFGR_ANMIN_Msk: u32 = 0x1FFF << MDF_SADCFGR_ANMIN_Pos;
pub const MDF_SADCFGR_ANMIN: u32 = MDF_SADCFGR_ANMIN_Msk;
pub const MDF_SADSDLVR_SDLVL_Pos: u32 = 0;
pub const MDF_SADSDLVR_SDLVL_Msk: u32 = 0x7FFF << MDF_SADSDLVR_SDLVL_Pos;
pub const MDF_SADSDLVR_SDLVL: u32 = MDF_SADSDLVR_SDLVL_Msk;
pub const MDF_SADANLVR_ANLVL_Pos: u32 = 0;
pub const MDF_SADANLVR_ANLVL_Msk: u32 = 0x7FFF << MDF_SADANLVR_ANLVL_Pos;
pub const MDF_SADANLVR_ANLVL: u32 = MDF_SADANLVR_ANLVL_Msk;
pub const MDF_DFLTDR_DR_Pos: u32 = 8;
pub const MDF_DFLTDR_DR_Msk: u32 = 0xFFFFFF << MDF_DFLTDR_DR_Pos;
pub const MDF_DFLTDR_DR: u32 = MDF_DFLTDR_DR_Msk;
pub const LTDC_SSCR_VSH_Pos: u32 = 0;
pub const LTDC_SSCR_VSH_Msk: u32 = 0x7FF << LTDC_SSCR_VSH_Pos;
pub const LTDC_SSCR_VSH: u32 = LTDC_SSCR_VSH_Msk;
pub const LTDC_SSCR_HSW_Pos: u32 = 16;
pub const LTDC_SSCR_HSW_Msk: u32 = 0xFFF << LTDC_SSCR_HSW_Pos;
pub const LTDC_SSCR_HSW: u32 = LTDC_SSCR_HSW_Msk;
pub const LTDC_BPCR_AVBP_Pos: u32 = 0;
pub const LTDC_BPCR_AVBP_Msk: u32 = 0x7FF << LTDC_BPCR_AVBP_Pos;
pub const LTDC_BPCR_AVBP: u32 = LTDC_BPCR_AVBP_Msk;
pub const LTDC_BPCR_AHBP_Pos: u32 = 16;
pub const LTDC_BPCR_AHBP_Msk: u32 = 0xFFF << LTDC_BPCR_AHBP_Pos;
pub const LTDC_BPCR_AHBP: u32 = LTDC_BPCR_AHBP_Msk;
pub const LTDC_AWCR_AAH_Pos: u32 = 0;
pub const LTDC_AWCR_AAH_Msk: u32 = 0x7FF << LTDC_AWCR_AAH_Pos;
pub const LTDC_AWCR_AAH: u32 = LTDC_AWCR_AAH_Msk;
pub const LTDC_AWCR_AAW_Pos: u32 = 16;
pub const LTDC_AWCR_AAW_Msk: u32 = 0xFFF << LTDC_AWCR_AAW_Pos;
pub const LTDC_AWCR_AAW: u32 = LTDC_AWCR_AAW_Msk;
pub const LTDC_TWCR_TOTALH_Pos: u32 = 0;
pub const LTDC_TWCR_TOTALH_Msk: u32 = 0x7FF << LTDC_TWCR_TOTALH_Pos;
pub const LTDC_TWCR_TOTALH: u32 = LTDC_TWCR_TOTALH_Msk;
pub const LTDC_TWCR_TOTALW_Pos: u32 = 16;
pub const LTDC_TWCR_TOTALW_Msk: u32 = 0xFFF << LTDC_TWCR_TOTALW_Pos;
pub const LTDC_TWCR_TOTALW: u32 = LTDC_TWCR_TOTALW_Msk;
pub const LTDC_GCR_LTDCEN_Pos: u32 = 0;
pub const LTDC_GCR_LTDCEN_Msk: u32 = 0x1 << LTDC_GCR_LTDCEN_Pos;
pub const LTDC_GCR_LTDCEN: u32 = LTDC_GCR_LTDCEN_Msk;
pub const LTDC_GCR_DBW_Pos: u32 = 4;
pub const LTDC_GCR_DBW_Msk: u32 = 0x7 << LTDC_GCR_DBW_Pos;
pub const LTDC_GCR_DBW: u32 = LTDC_GCR_DBW_Msk;
pub const LTDC_GCR_DGW_Pos: u32 = 8;
pub const LTDC_GCR_DGW_Msk: u32 = 0x7 << LTDC_GCR_DGW_Pos;
pub const LTDC_GCR_DGW: u32 = LTDC_GCR_DGW_Msk;
pub const LTDC_GCR_DRW_Pos: u32 = 12;
pub const LTDC_GCR_DRW_Msk: u32 = 0x7 << LTDC_GCR_DRW_Pos;
pub const LTDC_GCR_DRW: u32 = LTDC_GCR_DRW_Msk;
pub const LTDC_GCR_DEN_Pos: u32 = 16;
pub const LTDC_GCR_DEN_Msk: u32 = 0x1 << LTDC_GCR_DEN_Pos;
pub const LTDC_GCR_DEN: u32 = LTDC_GCR_DEN_Msk;
pub const LTDC_GCR_PCPOL_Pos: u32 = 28;
pub const LTDC_GCR_PCPOL_Msk: u32 = 0x1 << LTDC_GCR_PCPOL_Pos;
pub const LTDC_GCR_PCPOL: u32 = LTDC_GCR_PCPOL_Msk;
pub const LTDC_GCR_DEPOL_Pos: u32 = 29;
pub const LTDC_GCR_DEPOL_Msk: u32 = 0x1 << LTDC_GCR_DEPOL_Pos;
pub const LTDC_GCR_DEPOL: u32 = LTDC_GCR_DEPOL_Msk;
pub const LTDC_GCR_VSPOL_Pos: u32 = 30;
pub const LTDC_GCR_VSPOL_Msk: u32 = 0x1 << LTDC_GCR_VSPOL_Pos;
pub const LTDC_GCR_VSPOL: u32 = LTDC_GCR_VSPOL_Msk;
pub const LTDC_GCR_HSPOL_Pos: u32 = 31;
pub const LTDC_GCR_HSPOL_Msk: u32 = 0x1 << LTDC_GCR_HSPOL_Pos;
pub const LTDC_GCR_HSPOL: u32 = LTDC_GCR_HSPOL_Msk;
pub const LTDC_SRCR_IMR_Pos: u32 = 0;
pub const LTDC_SRCR_IMR_Msk: u32 = 0x1 << LTDC_SRCR_IMR_Pos;
pub const LTDC_SRCR_IMR: u32 = LTDC_SRCR_IMR_Msk;
pub const LTDC_SRCR_VBR_Pos: u32 = 1;
pub const LTDC_SRCR_VBR_Msk: u32 = 0x1 << LTDC_SRCR_VBR_Pos;
pub const LTDC_SRCR_VBR: u32 = LTDC_SRCR_VBR_Msk;
pub const LTDC_BCCR_BCBLUE_Pos: u32 = 0;
pub const LTDC_BCCR_BCBLUE_Msk: u32 = 0xFF << LTDC_BCCR_BCBLUE_Pos;
pub const LTDC_BCCR_BCBLUE: u32 = LTDC_BCCR_BCBLUE_Msk;
pub const LTDC_BCCR_BCGREEN_Pos: u32 = 8;
pub const LTDC_BCCR_BCGREEN_Msk: u32 = 0xFF << LTDC_BCCR_BCGREEN_Pos;
pub const LTDC_BCCR_BCGREEN: u32 = LTDC_BCCR_BCGREEN_Msk;
pub const LTDC_BCCR_BCRED_Pos: u32 = 16;
pub const LTDC_BCCR_BCRED_Msk: u32 = 0xFF << LTDC_BCCR_BCRED_Pos;
pub const LTDC_BCCR_BCRED: u32 = LTDC_BCCR_BCRED_Msk;
pub const LTDC_IER_LIE_Pos: u32 = 0;
pub const LTDC_IER_LIE_Msk: u32 = 0x1 << LTDC_IER_LIE_Pos;
pub const LTDC_IER_LIE: u32 = LTDC_IER_LIE_Msk;
pub const LTDC_IER_FUIE_Pos: u32 = 1;
pub const LTDC_IER_FUIE_Msk: u32 = 0x1 << LTDC_IER_FUIE_Pos;
pub const LTDC_IER_FUIE: u32 = LTDC_IER_FUIE_Msk;
pub const LTDC_IER_TERRIE_Pos: u32 = 2;
pub const LTDC_IER_TERRIE_Msk: u32 = 0x1 << LTDC_IER_TERRIE_Pos;
pub const LTDC_IER_TERRIE: u32 = LTDC_IER_TERRIE_Msk;
pub const LTDC_IER_RRIE_Pos: u32 = 3;
pub const LTDC_IER_RRIE_Msk: u32 = 0x1 << LTDC_IER_RRIE_Pos;
pub const LTDC_IER_RRIE: u32 = LTDC_IER_RRIE_Msk;
pub const LTDC_ISR_LIF_Pos: u32 = 0;
pub const LTDC_ISR_LIF_Msk: u32 = 0x1 << LTDC_ISR_LIF_Pos;
pub const LTDC_ISR_LIF: u32 = LTDC_ISR_LIF_Msk;
pub const LTDC_ISR_FUIF_Pos: u32 = 1;
pub const LTDC_ISR_FUIF_Msk: u32 = 0x1 << LTDC_ISR_FUIF_Pos;
pub const LTDC_ISR_FUIF: u32 = LTDC_ISR_FUIF_Msk;
pub const LTDC_ISR_TERRIF_Pos: u32 = 2;
pub const LTDC_ISR_TERRIF_Msk: u32 = 0x1 << LTDC_ISR_TERRIF_Pos;
pub const LTDC_ISR_TERRIF: u32 = LTDC_ISR_TERRIF_Msk;
pub const LTDC_ISR_RRIF_Pos: u32 = 3;
pub const LTDC_ISR_RRIF_Msk: u32 = 0x1 << LTDC_ISR_RRIF_Pos;
pub const LTDC_ISR_RRIF: u32 = LTDC_ISR_RRIF_Msk;
pub const LTDC_ICR_CLIF_Pos: u32 = 0;
pub const LTDC_ICR_CLIF_Msk: u32 = 0x1 << LTDC_ICR_CLIF_Pos;
pub const LTDC_ICR_CLIF: u32 = LTDC_ICR_CLIF_Msk;
pub const LTDC_ICR_CFUIF_Pos: u32 = 1;
pub const LTDC_ICR_CFUIF_Msk: u32 = 0x1 << LTDC_ICR_CFUIF_Pos;
pub const LTDC_ICR_CFUIF: u32 = LTDC_ICR_CFUIF_Msk;
pub const LTDC_ICR_CTERRIF_Pos: u32 = 2;
pub const LTDC_ICR_CTERRIF_Msk: u32 = 0x1 << LTDC_ICR_CTERRIF_Pos;
pub const LTDC_ICR_CTERRIF: u32 = LTDC_ICR_CTERRIF_Msk;
pub const LTDC_ICR_CRRIF_Pos: u32 = 3;
pub const LTDC_ICR_CRRIF_Msk: u32 = 0x1 << LTDC_ICR_CRRIF_Pos;
pub const LTDC_ICR_CRRIF: u32 = LTDC_ICR_CRRIF_Msk;
pub const LTDC_LIPCR_LIPOS_Pos: u32 = 0;
pub const LTDC_LIPCR_LIPOS_Msk: u32 = 0x7FF << LTDC_LIPCR_LIPOS_Pos;
pub const LTDC_LIPCR_LIPOS: u32 = LTDC_LIPCR_LIPOS_Msk;
pub const LTDC_CPSR_CYPOS_Pos: u32 = 0;
pub const LTDC_CPSR_CYPOS_Msk: u32 = 0xFFFF << LTDC_CPSR_CYPOS_Pos;
pub const LTDC_CPSR_CYPOS: u32 = LTDC_CPSR_CYPOS_Msk;
pub const LTDC_CPSR_CXPOS_Pos: u32 = 16;
pub const LTDC_CPSR_CXPOS_Msk: u32 = 0xFFFF << LTDC_CPSR_CXPOS_Pos;
pub const LTDC_CPSR_CXPOS: u32 = LTDC_CPSR_CXPOS_Msk;
pub const LTDC_CDSR_VDES_Pos: u32 = 0;
pub const LTDC_CDSR_VDES_Msk: u32 = 0x1 << LTDC_CDSR_VDES_Pos;
pub const LTDC_CDSR_VDES: u32 = LTDC_CDSR_VDES_Msk;
pub const LTDC_CDSR_HDES_Pos: u32 = 1;
pub const LTDC_CDSR_HDES_Msk: u32 = 0x1 << LTDC_CDSR_HDES_Pos;
pub const LTDC_CDSR_HDES: u32 = LTDC_CDSR_HDES_Msk;
pub const LTDC_CDSR_VSYNCS_Pos: u32 = 2;
pub const LTDC_CDSR_VSYNCS_Msk: u32 = 0x1 << LTDC_CDSR_VSYNCS_Pos;
pub const LTDC_CDSR_VSYNCS: u32 = LTDC_CDSR_VSYNCS_Msk;
pub const LTDC_CDSR_HSYNCS_Pos: u32 = 3;
pub const LTDC_CDSR_HSYNCS_Msk: u32 = 0x1 << LTDC_CDSR_HSYNCS_Pos;
pub const LTDC_CDSR_HSYNCS: u32 = LTDC_CDSR_HSYNCS_Msk;
pub const LTDC_LxCR_LEN_Pos: u32 = 0;
pub const LTDC_LxCR_LEN_Msk: u32 = 0x1 << LTDC_LxCR_LEN_Pos;
pub const LTDC_LxCR_LEN: u32 = LTDC_LxCR_LEN_Msk;
pub const LTDC_LxCR_COLKEN_Pos: u32 = 1;
pub const LTDC_LxCR_COLKEN_Msk: u32 = 0x1 << LTDC_LxCR_COLKEN_Pos;
pub const LTDC_LxCR_COLKEN: u32 = LTDC_LxCR_COLKEN_Msk;
pub const LTDC_LxCR_CLUTEN_Pos: u32 = 4;
pub const LTDC_LxCR_CLUTEN_Msk: u32 = 0x1 << LTDC_LxCR_CLUTEN_Pos;
pub const LTDC_LxCR_CLUTEN: u32 = LTDC_LxCR_CLUTEN_Msk;
pub const LTDC_LxWHPCR_WHSTPOS_Pos: u32 = 0;
pub const LTDC_LxWHPCR_WHSTPOS_Msk: u32 = 0xFFF << LTDC_LxWHPCR_WHSTPOS_Pos;
pub const LTDC_LxWHPCR_WHSTPOS: u32 = LTDC_LxWHPCR_WHSTPOS_Msk;
pub const LTDC_LxWHPCR_WHSPPOS_Pos: u32 = 16;
pub const LTDC_LxWHPCR_WHSPPOS_Msk: u32 = 0xFFF << LTDC_LxWHPCR_WHSPPOS_Pos;
pub const LTDC_LxWHPCR_WHSPPOS: u32 = LTDC_LxWHPCR_WHSPPOS_Msk;
pub const LTDC_LxWVPCR_WVSTPOS_Pos: u32 = 0;
pub const LTDC_LxWVPCR_WVSTPOS_Msk: u32 = 0x7FF << LTDC_LxWVPCR_WVSTPOS_Pos;
pub const LTDC_LxWVPCR_WVSTPOS: u32 = LTDC_LxWVPCR_WVSTPOS_Msk;
pub const LTDC_LxWVPCR_WVSPPOS_Pos: u32 = 16;
pub const LTDC_LxWVPCR_WVSPPOS_Msk: u32 = 0x7FF << LTDC_LxWVPCR_WVSPPOS_Pos;
pub const LTDC_LxWVPCR_WVSPPOS: u32 = LTDC_LxWVPCR_WVSPPOS_Msk;
pub const LTDC_LxCKCR_CKBLUE_Pos: u32 = 0;
pub const LTDC_LxCKCR_CKBLUE_Msk: u32 = 0xFF << LTDC_LxCKCR_CKBLUE_Pos;
pub const LTDC_LxCKCR_CKBLUE: u32 = LTDC_LxCKCR_CKBLUE_Msk;
pub const LTDC_LxCKCR_CKGREEN_Pos: u32 = 8;
pub const LTDC_LxCKCR_CKGREEN_Msk: u32 = 0xFF << LTDC_LxCKCR_CKGREEN_Pos;
pub const LTDC_LxCKCR_CKGREEN: u32 = LTDC_LxCKCR_CKGREEN_Msk;
pub const LTDC_LxCKCR_CKRED_Pos: u32 = 16;
pub const LTDC_LxCKCR_CKRED_Msk: u32 = 0xFF << LTDC_LxCKCR_CKRED_Pos;
pub const LTDC_LxCKCR_CKRED: u32 = LTDC_LxCKCR_CKRED_Msk;
pub const LTDC_LxPFCR_PF_Pos: u32 = 0;
pub const LTDC_LxPFCR_PF_Msk: u32 = 0x7 << LTDC_LxPFCR_PF_Pos;
pub const LTDC_LxPFCR_PF: u32 = LTDC_LxPFCR_PF_Msk;
pub const LTDC_LxCACR_CONSTA_Pos: u32 = 0;
pub const LTDC_LxCACR_CONSTA_Msk: u32 = 0xFF << LTDC_LxCACR_CONSTA_Pos;
pub const LTDC_LxCACR_CONSTA: u32 = LTDC_LxCACR_CONSTA_Msk;
pub const LTDC_LxDCCR_DCBLUE_Pos: u32 = 0;
pub const LTDC_LxDCCR_DCBLUE_Msk: u32 = 0xFF << LTDC_LxDCCR_DCBLUE_Pos;
pub const LTDC_LxDCCR_DCBLUE: u32 = LTDC_LxDCCR_DCBLUE_Msk;
pub const LTDC_LxDCCR_DCGREEN_Pos: u32 = 8;
pub const LTDC_LxDCCR_DCGREEN_Msk: u32 = 0xFF << LTDC_LxDCCR_DCGREEN_Pos;
pub const LTDC_LxDCCR_DCGREEN: u32 = LTDC_LxDCCR_DCGREEN_Msk;
pub const LTDC_LxDCCR_DCRED_Pos: u32 = 16;
pub const LTDC_LxDCCR_DCRED_Msk: u32 = 0xFF << LTDC_LxDCCR_DCRED_Pos;
pub const LTDC_LxDCCR_DCRED: u32 = LTDC_LxDCCR_DCRED_Msk;
pub const LTDC_LxDCCR_DCALPHA_Pos: u32 = 24;
pub const LTDC_LxDCCR_DCALPHA_Msk: u32 = 0xFF << LTDC_LxDCCR_DCALPHA_Pos;
pub const LTDC_LxDCCR_DCALPHA: u32 = LTDC_LxDCCR_DCALPHA_Msk;
pub const LTDC_LxBFCR_BF2_Pos: u32 = 0;
pub const LTDC_LxBFCR_BF2_Msk: u32 = 0x7 << LTDC_LxBFCR_BF2_Pos;
pub const LTDC_LxBFCR_BF2: u32 = LTDC_LxBFCR_BF2_Msk;
pub const LTDC_LxBFCR_BF1_Pos: u32 = 8;
pub const LTDC_LxBFCR_BF1_Msk: u32 = 0x7 << LTDC_LxBFCR_BF1_Pos;
pub const LTDC_LxBFCR_BF1: u32 = LTDC_LxBFCR_BF1_Msk;
pub const LTDC_LxCFBAR_CFBADD_Pos: u32 = 0;
pub const LTDC_LxCFBAR_CFBADD_Msk: u32 = 0xFFFFFFFF << LTDC_LxCFBAR_CFBADD_Pos;
pub const LTDC_LxCFBAR_CFBADD: u32 = LTDC_LxCFBAR_CFBADD_Msk;
pub const LTDC_LxCFBLR_CFBLL_Pos: u32 = 0;
pub const LTDC_LxCFBLR_CFBLL_Msk: u32 = 0x1FFF << LTDC_LxCFBLR_CFBLL_Pos;
pub const LTDC_LxCFBLR_CFBLL: u32 = LTDC_LxCFBLR_CFBLL_Msk;
pub const LTDC_LxCFBLR_CFBP_Pos: u32 = 16;
pub const LTDC_LxCFBLR_CFBP_Msk: u32 = 0x1FFF << LTDC_LxCFBLR_CFBP_Pos;
pub const LTDC_LxCFBLR_CFBP: u32 = LTDC_LxCFBLR_CFBP_Msk;
pub const LTDC_LxCFBLNR_CFBLNBR_Pos: u32 = 0;
pub const LTDC_LxCFBLNR_CFBLNBR_Msk: u32 = 0x7FF << LTDC_LxCFBLNR_CFBLNBR_Pos;
pub const LTDC_LxCFBLNR_CFBLNBR: u32 = LTDC_LxCFBLNR_CFBLNBR_Msk;
pub const LTDC_LxCLUTWR_BLUE_Pos: u32 = 0;
pub const LTDC_LxCLUTWR_BLUE_Msk: u32 = 0xFF << LTDC_LxCLUTWR_BLUE_Pos;
pub const LTDC_LxCLUTWR_BLUE: u32 = LTDC_LxCLUTWR_BLUE_Msk;
pub const LTDC_LxCLUTWR_GREEN_Pos: u32 = 8;
pub const LTDC_LxCLUTWR_GREEN_Msk: u32 = 0xFF << LTDC_LxCLUTWR_GREEN_Pos;
pub const LTDC_LxCLUTWR_GREEN: u32 = LTDC_LxCLUTWR_GREEN_Msk;
pub const LTDC_LxCLUTWR_RED_Pos: u32 = 16;
pub const LTDC_LxCLUTWR_RED_Msk: u32 = 0xFF << LTDC_LxCLUTWR_RED_Pos;
pub const LTDC_LxCLUTWR_RED: u32 = LTDC_LxCLUTWR_RED_Msk;
pub const LTDC_LxCLUTWR_CLUTADD_Pos: u32 = 24;
pub const LTDC_LxCLUTWR_CLUTADD_Msk: u32 = 0xFF << LTDC_LxCLUTWR_CLUTADD_Pos;
pub const LTDC_LxCLUTWR_CLUTADD: u32 = LTDC_LxCLUTWR_CLUTADD_Msk;
pub const XSPI_CR_EN_Pos: u32 = 0;
pub const XSPI_CR_EN_Msk: u32 = 0x1 << XSPI_CR_EN_Pos;
pub const XSPI_CR_EN: u32 = XSPI_CR_EN_Msk;
pub const XSPI_CR_ABORT_Pos: u32 = 1;
pub const XSPI_CR_ABORT_Msk: u32 = 0x1 << XSPI_CR_ABORT_Pos;
pub const XSPI_CR_ABORT: u32 = XSPI_CR_ABORT_Msk;
pub const XSPI_CR_DMAEN_Pos: u32 = 2;
pub const XSPI_CR_DMAEN_Msk: u32 = 0x1 << XSPI_CR_DMAEN_Pos;
pub const XSPI_CR_DMAEN: u32 = XSPI_CR_DMAEN_Msk;
pub const XSPI_CR_TCEN_Pos: u32 = 3;
pub const XSPI_CR_TCEN_Msk: u32 = 0x1 << XSPI_CR_TCEN_Pos;
pub const XSPI_CR_TCEN: u32 = XSPI_CR_TCEN_Msk;
pub const XSPI_CR_DMM_Pos: u32 = 6;
pub const XSPI_CR_DMM_Msk: u32 = 0x1 << XSPI_CR_DMM_Pos;
pub const XSPI_CR_DMM: u32 = XSPI_CR_DMM_Msk;
pub const XSPI_CR_FTHRES_Pos: u32 = 8;
pub const XSPI_CR_FTHRES_Msk: u32 = 0x3F << XSPI_CR_FTHRES_Pos;
pub const XSPI_CR_FTHRES: u32 = XSPI_CR_FTHRES_Msk;
pub const XSPI_CR_TEIE_Pos: u32 = 16;
pub const XSPI_CR_TEIE_Msk: u32 = 0x1 << XSPI_CR_TEIE_Pos;
pub const XSPI_CR_TEIE: u32 = XSPI_CR_TEIE_Msk;
pub const XSPI_CR_TCIE_Pos: u32 = 17;
pub const XSPI_CR_TCIE_Msk: u32 = 0x1 << XSPI_CR_TCIE_Pos;
pub const XSPI_CR_TCIE: u32 = XSPI_CR_TCIE_Msk;
pub const XSPI_CR_FTIE_Pos: u32 = 18;
pub const XSPI_CR_FTIE_Msk: u32 = 0x1 << XSPI_CR_FTIE_Pos;
pub const XSPI_CR_FTIE: u32 = XSPI_CR_FTIE_Msk;
pub const XSPI_CR_SMIE_Pos: u32 = 19;
pub const XSPI_CR_SMIE_Msk: u32 = 0x1 << XSPI_CR_SMIE_Pos;
pub const XSPI_CR_SMIE: u32 = XSPI_CR_SMIE_Msk;
pub const XSPI_CR_TOIE_Pos: u32 = 20;
pub const XSPI_CR_TOIE_Msk: u32 = 0x1 << XSPI_CR_TOIE_Pos;
pub const XSPI_CR_TOIE: u32 = XSPI_CR_TOIE_Msk;
pub const XSPI_CR_APMS_Pos: u32 = 22;
pub const XSPI_CR_APMS_Msk: u32 = 0x1 << XSPI_CR_APMS_Pos;
pub const XSPI_CR_APMS: u32 = XSPI_CR_APMS_Msk;
pub const XSPI_CR_PMM_Pos: u32 = 23;
pub const XSPI_CR_PMM_Msk: u32 = 0x1 << XSPI_CR_PMM_Pos;
pub const XSPI_CR_PMM: u32 = XSPI_CR_PMM_Msk;
pub const XSPI_CR_CSSEL_Pos: u32 = 24;
pub const XSPI_CR_CSSEL_Msk: u32 = 0x1 << XSPI_CR_CSSEL_Pos;
pub const XSPI_CR_CSSEL: u32 = XSPI_CR_CSSEL_Msk;
pub const XSPI_CR_FMODE_Pos: u32 = 28;
pub const XSPI_CR_FMODE_Msk: u32 = 0x3 << XSPI_CR_FMODE_Pos;
pub const XSPI_CR_FMODE: u32 = XSPI_CR_FMODE_Msk;
pub const XSPI_CR_FMODE_0: u32 = 0x1 << XSPI_CR_FMODE_Pos;
pub const XSPI_CR_FMODE_1: u32 = 0x2 << XSPI_CR_FMODE_Pos;
pub const XSPI_CR_MSEL_Pos: u32 = 30;
pub const XSPI_CR_MSEL_Msk: u32 = 0x3 << XSPI_CR_MSEL_Pos;
pub const XSPI_CR_MSEL: u32 = XSPI_CR_MSEL_Msk;
pub const XSPI_CR_MSEL_0: u32 = 0x1 << XSPI_CR_MSEL_Pos;
pub const XSPI_CR_MSEL_1: u32 = 0x2 << XSPI_CR_MSEL_Pos;
pub const XSPI_DCR1_CKMODE_Pos: u32 = 0;
pub const XSPI_DCR1_CKMODE_Msk: u32 = 0x1 << XSPI_DCR1_CKMODE_Pos;
pub const XSPI_DCR1_CKMODE: u32 = XSPI_DCR1_CKMODE_Msk;
pub const XSPI_DCR1_FRCK_Pos: u32 = 1;
pub const XSPI_DCR1_FRCK_Msk: u32 = 0x1 << XSPI_DCR1_FRCK_Pos;
pub const XSPI_DCR1_FRCK: u32 = XSPI_DCR1_FRCK_Msk;
pub const XSPI_DCR1_CSHT_Pos: u32 = 8;
pub const XSPI_DCR1_CSHT_Msk: u32 = 0x3F << XSPI_DCR1_CSHT_Pos;
pub const XSPI_DCR1_CSHT: u32 = XSPI_DCR1_CSHT_Msk;
pub const XSPI_DCR1_DEVSIZE_Pos: u32 = 16;
pub const XSPI_DCR1_DEVSIZE_Msk: u32 = 0x1F << XSPI_DCR1_DEVSIZE_Pos;
pub const XSPI_DCR1_DEVSIZE: u32 = XSPI_DCR1_DEVSIZE_Msk;
pub const XSPI_DCR1_MTYP_Pos: u32 = 24;
pub const XSPI_DCR1_MTYP_Msk: u32 = 0x7 << XSPI_DCR1_MTYP_Pos;
pub const XSPI_DCR1_MTYP: u32 = XSPI_DCR1_MTYP_Msk;
pub const XSPI_DCR1_MTYP_0: u32 = 0x1 << XSPI_DCR1_MTYP_Pos;
pub const XSPI_DCR1_MTYP_1: u32 = 0x2 << XSPI_DCR1_MTYP_Pos;
pub const XSPI_DCR1_MTYP_2: u32 = 0x4 << XSPI_DCR1_MTYP_Pos;
pub const XSPI_DCR2_PRESCALER_Pos: u32 = 0;
pub const XSPI_DCR2_PRESCALER_Msk: u32 = 0xFF << XSPI_DCR2_PRESCALER_Pos;
pub const XSPI_DCR2_PRESCALER: u32 = XSPI_DCR2_PRESCALER_Msk;
pub const XSPI_DCR2_WRAPSIZE_Pos: u32 = 16;
pub const XSPI_DCR2_WRAPSIZE_Msk: u32 = 0x7 << XSPI_DCR2_WRAPSIZE_Pos;
pub const XSPI_DCR2_WRAPSIZE: u32 = XSPI_DCR2_WRAPSIZE_Msk;
pub const XSPI_DCR2_WRAPSIZE_0: u32 = 0x1 << XSPI_DCR2_WRAPSIZE_Pos;
pub const XSPI_DCR2_WRAPSIZE_1: u32 = 0x2 << XSPI_DCR2_WRAPSIZE_Pos;
pub const XSPI_DCR2_WRAPSIZE_2: u32 = 0x4 << XSPI_DCR2_WRAPSIZE_Pos;
pub const XSPI_DCR3_CSBOUND_Pos: u32 = 16;
pub const XSPI_DCR3_CSBOUND_Msk: u32 = 0x1F << XSPI_DCR3_CSBOUND_Pos;
pub const XSPI_DCR3_CSBOUND: u32 = XSPI_DCR3_CSBOUND_Msk;
pub const XSPI_DCR3_MAXTRAN_Pos: u32 = 0;
pub const XSPI_DCR3_MAXTRAN_Msk: u32 = 0xFF << XSPI_DCR3_MAXTRAN_Pos;
pub const XSPI_DCR3_MAXTRAN: u32 = XSPI_DCR3_MAXTRAN_Msk;
pub const XSPI_DCR4_REFRESH_Pos: u32 = 0;
pub const XSPI_DCR4_REFRESH_Msk: u32 = 0xFFFFFFFF << XSPI_DCR4_REFRESH_Pos;
pub const XSPI_DCR4_REFRESH: u32 = XSPI_DCR4_REFRESH_Msk;
pub const XSPI_SR_TEF_Pos: u32 = 0;
pub const XSPI_SR_TEF_Msk: u32 = 0x1 << XSPI_SR_TEF_Pos;
pub const XSPI_SR_TEF: u32 = XSPI_SR_TEF_Msk;
pub const XSPI_SR_TCF_Pos: u32 = 1;
pub const XSPI_SR_TCF_Msk: u32 = 0x1 << XSPI_SR_TCF_Pos;
pub const XSPI_SR_TCF: u32 = XSPI_SR_TCF_Msk;
pub const XSPI_SR_FTF_Pos: u32 = 2;
pub const XSPI_SR_FTF_Msk: u32 = 0x1 << XSPI_SR_FTF_Pos;
pub const XSPI_SR_FTF: u32 = XSPI_SR_FTF_Msk;
pub const XSPI_SR_SMF_Pos: u32 = 3;
pub const XSPI_SR_SMF_Msk: u32 = 0x1 << XSPI_SR_SMF_Pos;
pub const XSPI_SR_SMF: u32 = XSPI_SR_SMF_Msk;
pub const XSPI_SR_TOF_Pos: u32 = 4;
pub const XSPI_SR_TOF_Msk: u32 = 0x1 << XSPI_SR_TOF_Pos;
pub const XSPI_SR_TOF: u32 = XSPI_SR_TOF_Msk;
pub const XSPI_SR_BUSY_Pos: u32 = 5;
pub const XSPI_SR_BUSY_Msk: u32 = 0x1 << XSPI_SR_BUSY_Pos;
pub const XSPI_SR_BUSY: u32 = XSPI_SR_BUSY_Msk;
pub const XSPI_SR_FLEVEL_Pos: u32 = 8;
pub const XSPI_SR_FLEVEL_Msk: u32 = 0x7F << XSPI_SR_FLEVEL_Pos;
pub const XSPI_SR_FLEVEL: u32 = XSPI_SR_FLEVEL_Msk;
pub const XSPI_FCR_CTEF_Pos: u32 = 0;
pub const XSPI_FCR_CTEF_Msk: u32 = 0x1 << XSPI_FCR_CTEF_Pos;
pub const XSPI_FCR_CTEF: u32 = XSPI_FCR_CTEF_Msk;
pub const XSPI_FCR_CTCF_Pos: u32 = 1;
pub const XSPI_FCR_CTCF_Msk: u32 = 0x1 << XSPI_FCR_CTCF_Pos;
pub const XSPI_FCR_CTCF: u32 = XSPI_FCR_CTCF_Msk;
pub const XSPI_FCR_CSMF_Pos: u32 = 3;
pub const XSPI_FCR_CSMF_Msk: u32 = 0x1 << XSPI_FCR_CSMF_Pos;
pub const XSPI_FCR_CSMF: u32 = XSPI_FCR_CSMF_Msk;
pub const XSPI_FCR_CTOF_Pos: u32 = 4;
pub const XSPI_FCR_CTOF_Msk: u32 = 0x1 << XSPI_FCR_CTOF_Pos;
pub const XSPI_FCR_CTOF: u32 = XSPI_FCR_CTOF_Msk;
pub const XSPI_DLR_DL_Pos: u32 = 0;
pub const XSPI_DLR_DL_Msk: u32 = 0xFFFFFFFF << XSPI_DLR_DL_Pos;
pub const XSPI_DLR_DL: u32 = XSPI_DLR_DL_Msk;
pub const XSPI_AR_ADDRESS_Pos: u32 = 0;
pub const XSPI_AR_ADDRESS_Msk: u32 = 0xFFFFFFFF << XSPI_AR_ADDRESS_Pos;
pub const XSPI_AR_ADDRESS: u32 = XSPI_AR_ADDRESS_Msk;
pub const XSPI_DR_DATA_Pos: u32 = 0;
pub const XSPI_DR_DATA_Msk: u32 = 0xFFFFFFFF << XSPI_DR_DATA_Pos;
pub const XSPI_DR_DATA: u32 = XSPI_DR_DATA_Msk;
pub const XSPI_PSMKR_MASK_Pos: u32 = 0;
pub const XSPI_PSMKR_MASK_Msk: u32 = 0xFFFFFFFF << XSPI_PSMKR_MASK_Pos;
pub const XSPI_PSMKR_MASK: u32 = XSPI_PSMKR_MASK_Msk;
pub const XSPI_PSMAR_MATCH_Pos: u32 = 0;
pub const XSPI_PSMAR_MATCH_Msk: u32 = 0xFFFFFFFF << XSPI_PSMAR_MATCH_Pos;
pub const XSPI_PSMAR_MATCH: u32 = XSPI_PSMAR_MATCH_Msk;
pub const XSPI_PIR_INTERVAL_Pos: u32 = 0;
pub const XSPI_PIR_INTERVAL_Msk: u32 = 0xFFFF << XSPI_PIR_INTERVAL_Pos;
pub const XSPI_PIR_INTERVAL: u32 = XSPI_PIR_INTERVAL_Msk;
pub const XSPI_CCR_IMODE_Pos: u32 = 0;
pub const XSPI_CCR_IMODE_Msk: u32 = 0x7 << XSPI_CCR_IMODE_Pos;
pub const XSPI_CCR_IMODE: u32 = XSPI_CCR_IMODE_Msk;
pub const XSPI_CCR_IMODE_0: u32 = 0x1 << XSPI_CCR_IMODE_Pos;
pub const XSPI_CCR_IMODE_1: u32 = 0x2 << XSPI_CCR_IMODE_Pos;
pub const XSPI_CCR_IMODE_2: u32 = 0x4 << XSPI_CCR_IMODE_Pos;
pub const XSPI_CCR_IDTR_Pos: u32 = 3;
pub const XSPI_CCR_IDTR_Msk: u32 = 0x1 << XSPI_CCR_IDTR_Pos;
pub const XSPI_CCR_IDTR: u32 = XSPI_CCR_IDTR_Msk;
pub const XSPI_CCR_ISIZE_Pos: u32 = 4;
pub const XSPI_CCR_ISIZE_Msk: u32 = 0x3 << XSPI_CCR_ISIZE_Pos;
pub const XSPI_CCR_ISIZE: u32 = XSPI_CCR_ISIZE_Msk;
pub const XSPI_CCR_ISIZE_0: u32 = 0x1 << XSPI_CCR_ISIZE_Pos;
pub const XSPI_CCR_ISIZE_1: u32 = 0x2 << XSPI_CCR_ISIZE_Pos;
pub const XSPI_CCR_ADMODE_Pos: u32 = 8;
pub const XSPI_CCR_ADMODE_Msk: u32 = 0x7 << XSPI_CCR_ADMODE_Pos;
pub const XSPI_CCR_ADMODE: u32 = XSPI_CCR_ADMODE_Msk;
pub const XSPI_CCR_ADMODE_0: u32 = 0x1 << XSPI_CCR_ADMODE_Pos;
pub const XSPI_CCR_ADMODE_1: u32 = 0x2 << XSPI_CCR_ADMODE_Pos;
pub const XSPI_CCR_ADMODE_2: u32 = 0x4 << XSPI_CCR_ADMODE_Pos;
pub const XSPI_CCR_ADDTR_Pos: u32 = 11;
pub const XSPI_CCR_ADDTR_Msk: u32 = 0x1 << XSPI_CCR_ADDTR_Pos;
pub const XSPI_CCR_ADDTR: u32 = XSPI_CCR_ADDTR_Msk;
pub const XSPI_CCR_ADSIZE_Pos: u32 = 12;
pub const XSPI_CCR_ADSIZE_Msk: u32 = 0x3 << XSPI_CCR_ADSIZE_Pos;
pub const XSPI_CCR_ADSIZE: u32 = XSPI_CCR_ADSIZE_Msk;
pub const XSPI_CCR_ADSIZE_0: u32 = 0x1 << XSPI_CCR_ADSIZE_Pos;
pub const XSPI_CCR_ADSIZE_1: u32 = 0x2 << XSPI_CCR_ADSIZE_Pos;
pub const XSPI_CCR_ABMODE_Pos: u32 = 16;
pub const XSPI_CCR_ABMODE_Msk: u32 = 0x7 << XSPI_CCR_ABMODE_Pos;
pub const XSPI_CCR_ABMODE: u32 = XSPI_CCR_ABMODE_Msk;
pub const XSPI_CCR_ABMODE_0: u32 = 0x1 << XSPI_CCR_ABMODE_Pos;
pub const XSPI_CCR_ABMODE_1: u32 = 0x2 << XSPI_CCR_ABMODE_Pos;
pub const XSPI_CCR_ABMODE_2: u32 = 0x4 << XSPI_CCR_ABMODE_Pos;
pub const XSPI_CCR_ABDTR_Pos: u32 = 19;
pub const XSPI_CCR_ABDTR_Msk: u32 = 0x1 << XSPI_CCR_ABDTR_Pos;
pub const XSPI_CCR_ABDTR: u32 = XSPI_CCR_ABDTR_Msk;
pub const XSPI_CCR_ABSIZE_Pos: u32 = 20;
pub const XSPI_CCR_ABSIZE_Msk: u32 = 0x3 << XSPI_CCR_ABSIZE_Pos;
pub const XSPI_CCR_ABSIZE: u32 = XSPI_CCR_ABSIZE_Msk;
pub const XSPI_CCR_ABSIZE_0: u32 = 0x1 << XSPI_CCR_ABSIZE_Pos;
pub const XSPI_CCR_ABSIZE_1: u32 = 0x2 << XSPI_CCR_ABSIZE_Pos;
pub const XSPI_CCR_DMODE_Pos: u32 = 24;
pub const XSPI_CCR_DMODE_Msk: u32 = 0x7 << XSPI_CCR_DMODE_Pos;
pub const XSPI_CCR_DMODE: u32 = XSPI_CCR_DMODE_Msk;
pub const XSPI_CCR_DMODE_0: u32 = 0x1 << XSPI_CCR_DMODE_Pos;
pub const XSPI_CCR_DMODE_1: u32 = 0x2 << XSPI_CCR_DMODE_Pos;
pub const XSPI_CCR_DMODE_2: u32 = 0x4 << XSPI_CCR_DMODE_Pos;
pub const XSPI_CCR_DDTR_Pos: u32 = 27;
pub const XSPI_CCR_DDTR_Msk: u32 = 0x1 << XSPI_CCR_DDTR_Pos;
pub const XSPI_CCR_DDTR: u32 = XSPI_CCR_DDTR_Msk;
pub const XSPI_CCR_DQSE_Pos: u32 = 29;
pub const XSPI_CCR_DQSE_Msk: u32 = 0x1 << XSPI_CCR_DQSE_Pos;
pub const XSPI_CCR_DQSE: u32 = XSPI_CCR_DQSE_Msk;
pub const XSPI_TCR_DCYC_Pos: u32 = 0;
pub const XSPI_TCR_DCYC_Msk: u32 = 0x1F << XSPI_TCR_DCYC_Pos;
pub const XSPI_TCR_DCYC: u32 = XSPI_TCR_DCYC_Msk;
pub const XSPI_TCR_DHQC_Pos: u32 = 28;
pub const XSPI_TCR_DHQC_Msk: u32 = 0x1 << XSPI_TCR_DHQC_Pos;
pub const XSPI_TCR_DHQC: u32 = XSPI_TCR_DHQC_Msk;
pub const XSPI_TCR_SSHIFT_Pos: u32 = 30;
pub const XSPI_TCR_SSHIFT_Msk: u32 = 0x1 << XSPI_TCR_SSHIFT_Pos;
pub const XSPI_TCR_SSHIFT: u32 = XSPI_TCR_SSHIFT_Msk;
pub const XSPI_IR_INSTRUCTION_Pos: u32 = 0;
pub const XSPI_IR_INSTRUCTION_Msk: u32 = 0xFFFFFFFF << XSPI_IR_INSTRUCTION_Pos;
pub const XSPI_IR_INSTRUCTION: u32 = XSPI_IR_INSTRUCTION_Msk;
pub const XSPI_ABR_ALTERNATE_Pos: u32 = 0;
pub const XSPI_ABR_ALTERNATE_Msk: u32 = 0xFFFFFFFF << XSPI_ABR_ALTERNATE_Pos;
pub const XSPI_ABR_ALTERNATE: u32 = XSPI_ABR_ALTERNATE_Msk;
pub const XSPI_LPTR_TIMEOUT_Pos: u32 = 0;
pub const XSPI_LPTR_TIMEOUT_Msk: u32 = 0xFFFF << XSPI_LPTR_TIMEOUT_Pos;
pub const XSPI_LPTR_TIMEOUT: u32 = XSPI_LPTR_TIMEOUT_Msk;
pub const XSPI_WPCCR_IMODE_Pos: u32 = 0;
pub const XSPI_WPCCR_IMODE_Msk: u32 = 0x7 << XSPI_WPCCR_IMODE_Pos;
pub const XSPI_WPCCR_IMODE: u32 = XSPI_WPCCR_IMODE_Msk;
pub const XSPI_WPCCR_IMODE_0: u32 = 0x1 << XSPI_WPCCR_IMODE_Pos;
pub const XSPI_WPCCR_IMODE_1: u32 = 0x2 << XSPI_WPCCR_IMODE_Pos;
pub const XSPI_WPCCR_IMODE_2: u32 = 0x4 << XSPI_WPCCR_IMODE_Pos;
pub const XSPI_WPCCR_IDTR_Pos: u32 = 3;
pub const XSPI_WPCCR_IDTR_Msk: u32 = 0x1 << XSPI_WPCCR_IDTR_Pos;
pub const XSPI_WPCCR_IDTR: u32 = XSPI_WPCCR_IDTR_Msk;
pub const XSPI_WPCCR_ISIZE_Pos: u32 = 4;
pub const XSPI_WPCCR_ISIZE_Msk: u32 = 0x3 << XSPI_WPCCR_ISIZE_Pos;
pub const XSPI_WPCCR_ISIZE: u32 = XSPI_WPCCR_ISIZE_Msk;
pub const XSPI_WPCCR_ISIZE_0: u32 = 0x1 << XSPI_WPCCR_ISIZE_Pos;
pub const XSPI_WPCCR_ISIZE_1: u32 = 0x2 << XSPI_WPCCR_ISIZE_Pos;
pub const XSPI_WPCCR_ADMODE_Pos: u32 = 8;
pub const XSPI_WPCCR_ADMODE_Msk: u32 = 0x7 << XSPI_WPCCR_ADMODE_Pos;
pub const XSPI_WPCCR_ADMODE: u32 = XSPI_WPCCR_ADMODE_Msk;
pub const XSPI_WPCCR_ADMODE_0: u32 = 0x1 << XSPI_WPCCR_ADMODE_Pos;
pub const XSPI_WPCCR_ADMODE_1: u32 = 0x2 << XSPI_WPCCR_ADMODE_Pos;
pub const XSPI_WPCCR_ADMODE_2: u32 = 0x4 << XSPI_WPCCR_ADMODE_Pos;
pub const XSPI_WPCCR_ADDTR_Pos: u32 = 11;
pub const XSPI_WPCCR_ADDTR_Msk: u32 = 0x1 << XSPI_WPCCR_ADDTR_Pos;
pub const XSPI_WPCCR_ADDTR: u32 = XSPI_WPCCR_ADDTR_Msk;
pub const XSPI_WPCCR_ADSIZE_Pos: u32 = 12;
pub const XSPI_WPCCR_ADSIZE_Msk: u32 = 0x3 << XSPI_WPCCR_ADSIZE_Pos;
pub const XSPI_WPCCR_ADSIZE: u32 = XSPI_WPCCR_ADSIZE_Msk;
pub const XSPI_WPCCR_ADSIZE_0: u32 = 0x1 << XSPI_WPCCR_ADSIZE_Pos;
pub const XSPI_WPCCR_ADSIZE_1: u32 = 0x2 << XSPI_WPCCR_ADSIZE_Pos;
pub const XSPI_WPCCR_ABMODE_Pos: u32 = 16;
pub const XSPI_WPCCR_ABMODE_Msk: u32 = 0x7 << XSPI_WPCCR_ABMODE_Pos;
pub const XSPI_WPCCR_ABMODE: u32 = XSPI_WPCCR_ABMODE_Msk;
pub const XSPI_WPCCR_ABMODE_0: u32 = 0x1 << XSPI_WPCCR_ABMODE_Pos;
pub const XSPI_WPCCR_ABMODE_1: u32 = 0x2 << XSPI_WPCCR_ABMODE_Pos;
pub const XSPI_WPCCR_ABMODE_2: u32 = 0x4 << XSPI_WPCCR_ABMODE_Pos;
pub const XSPI_WPCCR_ABDTR_Pos: u32 = 19;
pub const XSPI_WPCCR_ABDTR_Msk: u32 = 0x1 << XSPI_WPCCR_ABDTR_Pos;
pub const XSPI_WPCCR_ABDTR: u32 = XSPI_WPCCR_ABDTR_Msk;
pub const XSPI_WPCCR_ABSIZE_Pos: u32 = 20;
pub const XSPI_WPCCR_ABSIZE_Msk: u32 = 0x3 << XSPI_WPCCR_ABSIZE_Pos;
pub const XSPI_WPCCR_ABSIZE: u32 = XSPI_WPCCR_ABSIZE_Msk;
pub const XSPI_WPCCR_ABSIZE_0: u32 = 0x1 << XSPI_WPCCR_ABSIZE_Pos;
pub const XSPI_WPCCR_ABSIZE_1: u32 = 0x2 << XSPI_WPCCR_ABSIZE_Pos;
pub const XSPI_WPCCR_DMODE_Pos: u32 = 24;
pub const XSPI_WPCCR_DMODE_Msk: u32 = 0x7 << XSPI_WPCCR_DMODE_Pos;
pub const XSPI_WPCCR_DMODE: u32 = XSPI_WPCCR_DMODE_Msk;
pub const XSPI_WPCCR_DMODE_0: u32 = 0x1 << XSPI_WPCCR_DMODE_Pos;
pub const XSPI_WPCCR_DMODE_1: u32 = 0x2 << XSPI_WPCCR_DMODE_Pos;
pub const XSPI_WPCCR_DMODE_2: u32 = 0x4 << XSPI_WPCCR_DMODE_Pos;
pub const XSPI_WPCCR_DDTR_Pos: u32 = 27;
pub const XSPI_WPCCR_DDTR_Msk: u32 = 0x1 << XSPI_WPCCR_DDTR_Pos;
pub const XSPI_WPCCR_DDTR: u32 = XSPI_WPCCR_DDTR_Msk;
pub const XSPI_WPCCR_DQSE_Pos: u32 = 29;
pub const XSPI_WPCCR_DQSE_Msk: u32 = 0x1 << XSPI_WPCCR_DQSE_Pos;
pub const XSPI_WPCCR_DQSE: u32 = XSPI_WPCCR_DQSE_Msk;
pub const XSPI_WPTCR_DCYC_Pos: u32 = 0;
pub const XSPI_WPTCR_DCYC_Msk: u32 = 0x1F << XSPI_WPTCR_DCYC_Pos;
pub const XSPI_WPTCR_DCYC: u32 = XSPI_WPTCR_DCYC_Msk;
pub const XSPI_WPTCR_DHQC_Pos: u32 = 28;
pub const XSPI_WPTCR_DHQC_Msk: u32 = 0x1 << XSPI_WPTCR_DHQC_Pos;
pub const XSPI_WPTCR_DHQC: u32 = XSPI_WPTCR_DHQC_Msk;
pub const XSPI_WPTCR_SSHIFT_Pos: u32 = 30;
pub const XSPI_WPTCR_SSHIFT_Msk: u32 = 0x1 << XSPI_WPTCR_SSHIFT_Pos;
pub const XSPI_WPTCR_SSHIFT: u32 = XSPI_WPTCR_SSHIFT_Msk;
pub const XSPI_WPIR_INSTRUCTION_Pos: u32 = 0;
pub const XSPI_WPIR_INSTRUCTION_Msk: u32 = 0xFFFFFFFF << XSPI_WPIR_INSTRUCTION_Pos;
pub const XSPI_WPIR_INSTRUCTION: u32 = XSPI_WPIR_INSTRUCTION_Msk;
pub const XSPI_WPABR_ALTERNATE_Pos: u32 = 0;
pub const XSPI_WPABR_ALTERNATE_Msk: u32 = 0xFFFFFFFF << XSPI_WPABR_ALTERNATE_Pos;
pub const XSPI_WPABR_ALTERNATE: u32 = XSPI_WPABR_ALTERNATE_Msk;
pub const XSPI_WCCR_IMODE_Pos: u32 = 0;
pub const XSPI_WCCR_IMODE_Msk: u32 = 0x7 << XSPI_WCCR_IMODE_Pos;
pub const XSPI_WCCR_IMODE: u32 = XSPI_WCCR_IMODE_Msk;
pub const XSPI_WCCR_IMODE_0: u32 = 0x1 << XSPI_WCCR_IMODE_Pos;
pub const XSPI_WCCR_IMODE_1: u32 = 0x2 << XSPI_WCCR_IMODE_Pos;
pub const XSPI_WCCR_IMODE_2: u32 = 0x4 << XSPI_WCCR_IMODE_Pos;
pub const XSPI_WCCR_IDTR_Pos: u32 = 3;
pub const XSPI_WCCR_IDTR_Msk: u32 = 0x1 << XSPI_WCCR_IDTR_Pos;
pub const XSPI_WCCR_IDTR: u32 = XSPI_WCCR_IDTR_Msk;
pub const XSPI_WCCR_ISIZE_Pos: u32 = 4;
pub const XSPI_WCCR_ISIZE_Msk: u32 = 0x3 << XSPI_WCCR_ISIZE_Pos;
pub const XSPI_WCCR_ISIZE: u32 = XSPI_WCCR_ISIZE_Msk;
pub const XSPI_WCCR_ISIZE_0: u32 = 0x1 << XSPI_WCCR_ISIZE_Pos;
pub const XSPI_WCCR_ISIZE_1: u32 = 0x2 << XSPI_WCCR_ISIZE_Pos;
pub const XSPI_WCCR_ADMODE_Pos: u32 = 8;
pub const XSPI_WCCR_ADMODE_Msk: u32 = 0x7 << XSPI_WCCR_ADMODE_Pos;
pub const XSPI_WCCR_ADMODE: u32 = XSPI_WCCR_ADMODE_Msk;
pub const XSPI_WCCR_ADMODE_0: u32 = 0x1 << XSPI_WCCR_ADMODE_Pos;
pub const XSPI_WCCR_ADMODE_1: u32 = 0x2 << XSPI_WCCR_ADMODE_Pos;
pub const XSPI_WCCR_ADMODE_2: u32 = 0x4 << XSPI_WCCR_ADMODE_Pos;
pub const XSPI_WCCR_ADDTR_Pos: u32 = 11;
pub const XSPI_WCCR_ADDTR_Msk: u32 = 0x1 << XSPI_WCCR_ADDTR_Pos;
pub const XSPI_WCCR_ADDTR: u32 = XSPI_WCCR_ADDTR_Msk;
pub const XSPI_WCCR_ADSIZE_Pos: u32 = 12;
pub const XSPI_WCCR_ADSIZE_Msk: u32 = 0x3 << XSPI_WCCR_ADSIZE_Pos;
pub const XSPI_WCCR_ADSIZE: u32 = XSPI_WCCR_ADSIZE_Msk;
pub const XSPI_WCCR_ADSIZE_0: u32 = 0x1 << XSPI_WCCR_ADSIZE_Pos;
pub const XSPI_WCCR_ADSIZE_1: u32 = 0x2 << XSPI_WCCR_ADSIZE_Pos;
pub const XSPI_WCCR_ABMODE_Pos: u32 = 16;
pub const XSPI_WCCR_ABMODE_Msk: u32 = 0x7 << XSPI_WCCR_ABMODE_Pos;
pub const XSPI_WCCR_ABMODE: u32 = XSPI_WCCR_ABMODE_Msk;
pub const XSPI_WCCR_ABMODE_0: u32 = 0x1 << XSPI_WCCR_ABMODE_Pos;
pub const XSPI_WCCR_ABMODE_1: u32 = 0x2 << XSPI_WCCR_ABMODE_Pos;
pub const XSPI_WCCR_ABMODE_2: u32 = 0x4 << XSPI_WCCR_ABMODE_Pos;
pub const XSPI_WCCR_ABDTR_Pos: u32 = 19;
pub const XSPI_WCCR_ABDTR_Msk: u32 = 0x1 << XSPI_WCCR_ABDTR_Pos;
pub const XSPI_WCCR_ABDTR: u32 = XSPI_WCCR_ABDTR_Msk;
pub const XSPI_WCCR_ABSIZE_Pos: u32 = 20;
pub const XSPI_WCCR_ABSIZE_Msk: u32 = 0x3 << XSPI_WCCR_ABSIZE_Pos;
pub const XSPI_WCCR_ABSIZE: u32 = XSPI_WCCR_ABSIZE_Msk;
pub const XSPI_WCCR_ABSIZE_0: u32 = 0x1 << XSPI_WCCR_ABSIZE_Pos;
pub const XSPI_WCCR_ABSIZE_1: u32 = 0x2 << XSPI_WCCR_ABSIZE_Pos;
pub const XSPI_WCCR_DMODE_Pos: u32 = 24;
pub const XSPI_WCCR_DMODE_Msk: u32 = 0x7 << XSPI_WCCR_DMODE_Pos;
pub const XSPI_WCCR_DMODE: u32 = XSPI_WCCR_DMODE_Msk;
pub const XSPI_WCCR_DMODE_0: u32 = 0x1 << XSPI_WCCR_DMODE_Pos;
pub const XSPI_WCCR_DMODE_1: u32 = 0x2 << XSPI_WCCR_DMODE_Pos;
pub const XSPI_WCCR_DMODE_2: u32 = 0x4 << XSPI_WCCR_DMODE_Pos;
pub const XSPI_WCCR_DDTR_Pos: u32 = 27;
pub const XSPI_WCCR_DDTR_Msk: u32 = 0x1 << XSPI_WCCR_DDTR_Pos;
pub const XSPI_WCCR_DDTR: u32 = XSPI_WCCR_DDTR_Msk;
pub const XSPI_WCCR_DQSE_Pos: u32 = 29;
pub const XSPI_WCCR_DQSE_Msk: u32 = 0x1 << XSPI_WCCR_DQSE_Pos;
pub const XSPI_WCCR_DQSE: u32 = XSPI_WCCR_DQSE_Msk;
pub const XSPI_WTCR_DCYC_Pos: u32 = 0;
pub const XSPI_WTCR_DCYC_Msk: u32 = 0x1F << XSPI_WTCR_DCYC_Pos;
pub const XSPI_WTCR_DCYC: u32 = XSPI_WTCR_DCYC_Msk;
pub const XSPI_WIR_INSTRUCTION_Pos: u32 = 0;
pub const XSPI_WIR_INSTRUCTION_Msk: u32 = 0xFFFFFFFF << XSPI_WIR_INSTRUCTION_Pos;
pub const XSPI_WIR_INSTRUCTION: u32 = XSPI_WIR_INSTRUCTION_Msk;
pub const XSPI_WABR_ALTERNATE_Pos: u32 = 0;
pub const XSPI_WABR_ALTERNATE_Msk: u32 = 0xFFFFFFFF << XSPI_WABR_ALTERNATE_Pos;
pub const XSPI_WABR_ALTERNATE: u32 = XSPI_WABR_ALTERNATE_Msk;
pub const XSPI_HLCR_LM_Pos: u32 = 0;
pub const XSPI_HLCR_LM_Msk: u32 = 0x1 << XSPI_HLCR_LM_Pos;
pub const XSPI_HLCR_LM: u32 = XSPI_HLCR_LM_Msk;
pub const XSPI_HLCR_WZL_Pos: u32 = 1;
pub const XSPI_HLCR_WZL_Msk: u32 = 0x1 << XSPI_HLCR_WZL_Pos;
pub const XSPI_HLCR_WZL: u32 = XSPI_HLCR_WZL_Msk;
pub const XSPI_HLCR_TACC_Pos: u32 = 8;
pub const XSPI_HLCR_TACC_Msk: u32 = 0xFF << XSPI_HLCR_TACC_Pos;
pub const XSPI_HLCR_TACC: u32 = XSPI_HLCR_TACC_Msk;
pub const XSPI_HLCR_TRWR_Pos: u32 = 16;
pub const XSPI_HLCR_TRWR_Msk: u32 = 0xFF << XSPI_HLCR_TRWR_Pos;
pub const XSPI_HLCR_TRWR: u32 = XSPI_HLCR_TRWR_Msk;
pub const XSPI_CALFCR_FINE_Pos: u32 = 0;
pub const XSPI_CALFCR_FINE_Msk: u32 = 0x7F << XSPI_CALFCR_FINE_Pos;
pub const XSPI_CALFCR_FINE: u32 = XSPI_CALFCR_FINE_Msk;
pub const XSPI_CALFCR_COARSE_Pos: u32 = 16;
pub const XSPI_CALFCR_COARSE_Msk: u32 = 0x1F << XSPI_CALFCR_COARSE_Pos;
pub const XSPI_CALFCR_COARSE: u32 = XSPI_CALFCR_COARSE_Msk;
pub const XSPI_CALFCR_CALMAX_Pos: u32 = 31;
pub const XSPI_CALFCR_CALMAX_Msk: u32 = 0x1 << XSPI_CALFCR_CALMAX_Pos;
pub const XSPI_CALFCR_CALMAX: u32 = XSPI_CALFCR_CALMAX_Msk;
pub const XSPI_CALMR_FINE_Pos: u32 = 0;
pub const XSPI_CALMR_FINE_Msk: u32 = 0x7F << XSPI_CALMR_FINE_Pos;
pub const XSPI_CALMR_FINE: u32 = XSPI_CALMR_FINE_Msk;
pub const XSPI_CALMR_COARSE_Pos: u32 = 16;
pub const XSPI_CALMR_COARSE_Msk: u32 = 0x1F << XSPI_CALMR_COARSE_Pos;
pub const XSPI_CALMR_COARSE: u32 = XSPI_CALMR_COARSE_Msk;
pub const XSPI_CALSOR_FINE_Pos: u32 = 0;
pub const XSPI_CALSOR_FINE_Msk: u32 = 0x7F << XSPI_CALSOR_FINE_Pos;
pub const XSPI_CALSOR_FINE: u32 = XSPI_CALSOR_FINE_Msk;
pub const XSPI_CALSOR_COARSE_Pos: u32 = 16;
pub const XSPI_CALSOR_COARSE_Msk: u32 = 0x1F << XSPI_CALSOR_COARSE_Pos;
pub const XSPI_CALSOR_COARSE: u32 = XSPI_CALSOR_COARSE_Msk;
pub const XSPI_CALSIR_FINE_Pos: u32 = 0;
pub const XSPI_CALSIR_FINE_Msk: u32 = 0x7F << XSPI_CALSIR_FINE_Pos;
pub const XSPI_CALSIR_FINE: u32 = XSPI_CALSIR_FINE_Msk;
pub const XSPI_CALSIR_COARSE_Pos: u32 = 16;
pub const XSPI_CALSIR_COARSE_Msk: u32 = 0x1F << XSPI_CALSIR_COARSE_Pos;
pub const XSPI_CALSIR_COARSE: u32 = XSPI_CALSIR_COARSE_Msk;
pub const XSPIM_CR_MUXEN_Pos: u32 = 0;
pub const XSPIM_CR_MUXEN_Msk: u32 = 0x1 << XSPIM_CR_MUXEN_Pos;
pub const XSPIM_CR_MUXEN: u32 = XSPIM_CR_MUXEN_Msk;
pub const XSPIM_CR_MODE_Pos: u32 = 1;
pub const XSPIM_CR_MODE_Msk: u32 = 0x1 << XSPIM_CR_MODE_Pos;
pub const XSPIM_CR_MODE: u32 = XSPIM_CR_MODE_Msk;
pub const XSPIM_CR_CSSEL_OVR_EN_Pos: u32 = 4;
pub const XSPIM_CR_CSSEL_OVR_EN_Msk: u32 = 0x1 << XSPIM_CR_CSSEL_OVR_EN_Pos;
pub const XSPIM_CR_CSSEL_OVR_EN: u32 = XSPIM_CR_CSSEL_OVR_EN_Msk;
pub const XSPIM_CR_CSSEL_OVR_O1_Pos: u32 = 5;
pub const XSPIM_CR_CSSEL_OVR_O1_Msk: u32 = 0x1 << XSPIM_CR_CSSEL_OVR_O1_Pos;
pub const XSPIM_CR_CSSEL_OVR_O1: u32 = XSPIM_CR_CSSEL_OVR_O1_Msk;
pub const XSPIM_CR_CSSEL_OVR_O2_Pos: u32 = 6;
pub const XSPIM_CR_CSSEL_OVR_O2_Msk: u32 = 0x1 << XSPIM_CR_CSSEL_OVR_O2_Pos;
pub const XSPIM_CR_CSSEL_OVR_O2: u32 = XSPIM_CR_CSSEL_OVR_O2_Msk;
pub const XSPIM_CR_REQ2ACK_TIME_Pos: u32 = 16;
pub const XSPIM_CR_REQ2ACK_TIME_Msk: u32 = 0xFF << XSPIM_CR_REQ2ACK_TIME_Pos;
pub const XSPIM_CR_REQ2ACK_TIME: u32 = XSPIM_CR_REQ2ACK_TIME_Msk;
pub const PKA_CR_EN_Pos: u32 = 0;
pub const PKA_CR_EN_Msk: u32 = 0x1 << PKA_CR_EN_Pos;
pub const PKA_CR_EN: u32 = PKA_CR_EN_Msk;
pub const PKA_CR_START_Pos: u32 = 1;
pub const PKA_CR_START_Msk: u32 = 0x1 << PKA_CR_START_Pos;
pub const PKA_CR_START: u32 = PKA_CR_START_Msk;
pub const PKA_CR_MODE_Pos: u32 = 8;
pub const PKA_CR_MODE_Msk: u32 = 0x3F << PKA_CR_MODE_Pos;
pub const PKA_CR_MODE: u32 = PKA_CR_MODE_Msk;
pub const PKA_CR_MODE_0: u32 = 0x01 << PKA_CR_MODE_Pos;
pub const PKA_CR_MODE_1: u32 = 0x02 << PKA_CR_MODE_Pos;
pub const PKA_CR_MODE_2: u32 = 0x04 << PKA_CR_MODE_Pos;
pub const PKA_CR_MODE_3: u32 = 0x08 << PKA_CR_MODE_Pos;
pub const PKA_CR_MODE_4: u32 = 0x10 << PKA_CR_MODE_Pos;
pub const PKA_CR_MODE_5: u32 = 0x20 << PKA_CR_MODE_Pos;
pub const PKA_CR_PROCENDIE_Pos: u32 = 17;
pub const PKA_CR_PROCENDIE_Msk: u32 = 0x1 << PKA_CR_PROCENDIE_Pos;
pub const PKA_CR_PROCENDIE: u32 = PKA_CR_PROCENDIE_Msk;
pub const PKA_CR_RAMERRIE_Pos: u32 = 19;
pub const PKA_CR_RAMERRIE_Msk: u32 = 0x1 << PKA_CR_RAMERRIE_Pos;
pub const PKA_CR_RAMERRIE: u32 = PKA_CR_RAMERRIE_Msk;
pub const PKA_CR_ADDRERRIE_Pos: u32 = 20;
pub const PKA_CR_ADDRERRIE_Msk: u32 = 0x1 << PKA_CR_ADDRERRIE_Pos;
pub const PKA_CR_ADDRERRIE: u32 = PKA_CR_ADDRERRIE_Msk;
pub const PKA_CR_OPERRIE_Pos: u32 = 21;
pub const PKA_CR_OPERRIE_Msk: u32 = 0x1 << PKA_CR_OPERRIE_Pos;
pub const PKA_CR_OPERRIE: u32 = PKA_CR_OPERRIE_Msk;
pub const PKA_SR_INITOK_Pos: u32 = 0;
pub const PKA_SR_INITOK_Msk: u32 = 0x1 << PKA_SR_INITOK_Pos;
pub const PKA_SR_INITOK: u32 = PKA_SR_INITOK_Msk;
pub const PKA_SR_LMF_Pos: u32 = 1;
pub const PKA_SR_LMF_Msk: u32 = 0x1 << PKA_SR_LMF_Pos;
pub const PKA_SR_LMF: u32 = PKA_SR_LMF_Msk;
pub const PKA_SR_BUSY_Pos: u32 = 16;
pub const PKA_SR_BUSY_Msk: u32 = 0x1 << PKA_SR_BUSY_Pos;
pub const PKA_SR_BUSY: u32 = PKA_SR_BUSY_Msk;
pub const PKA_SR_PROCENDF_Pos: u32 = 17;
pub const PKA_SR_PROCENDF_Msk: u32 = 0x1 << PKA_SR_PROCENDF_Pos;
pub const PKA_SR_PROCENDF: u32 = PKA_SR_PROCENDF_Msk;
pub const PKA_SR_RAMERRF_Pos: u32 = 19;
pub const PKA_SR_RAMERRF_Msk: u32 = 0x1 << PKA_SR_RAMERRF_Pos;
pub const PKA_SR_RAMERRF: u32 = PKA_SR_RAMERRF_Msk;
pub const PKA_SR_ADDRERRF_Pos: u32 = 20;
pub const PKA_SR_ADDRERRF_Msk: u32 = 0x1 << PKA_SR_ADDRERRF_Pos;
pub const PKA_SR_ADDRERRF: u32 = PKA_SR_ADDRERRF_Msk;
pub const PKA_SR_OPERRF_Pos: u32 = 21;
pub const PKA_SR_OPERRF_Msk: u32 = 0x1 << PKA_SR_OPERRF_Pos;
pub const PKA_SR_OPERRF: u32 = PKA_SR_OPERRF_Msk;
pub const PKA_CLRFR_PROCENDFC_Pos: u32 = 17;
pub const PKA_CLRFR_PROCENDFC_Msk: u32 = 0x1 << PKA_CLRFR_PROCENDFC_Pos;
pub const PKA_CLRFR_PROCENDFC: u32 = PKA_CLRFR_PROCENDFC_Msk;
pub const PKA_CLRFR_RAMERRFC_Pos: u32 = 19;
pub const PKA_CLRFR_RAMERRFC_Msk: u32 = 0x1 << PKA_CLRFR_RAMERRFC_Pos;
pub const PKA_CLRFR_RAMERRFC: u32 = PKA_CLRFR_RAMERRFC_Msk;
pub const PKA_CLRFR_ADDRERRFC_Pos: u32 = 20;
pub const PKA_CLRFR_ADDRERRFC_Msk: u32 = 0x1 << PKA_CLRFR_ADDRERRFC_Pos;
pub const PKA_CLRFR_ADDRERRFC: u32 = PKA_CLRFR_ADDRERRFC_Msk;
pub const PKA_CLRFR_OPERRFC_Pos: u32 = 21;
pub const PKA_CLRFR_OPERRFC_Msk: u32 = 0x1 << PKA_CLRFR_OPERRFC_Pos;
pub const PKA_CLRFR_OPERRFC: u32 = PKA_CLRFR_OPERRFC_Msk;
pub const PKA_RAM_OFFSET: u32 = 0x0400;
pub const PKA_MONTGOMERY_PARAM_IN_MOD_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_MONTGOMERY_PARAM_IN_MODULUS: u32 = 0x1088 - PKA_RAM_OFFSET >> 2;
pub const PKA_MONTGOMERY_PARAM_OUT_PARAMETER: u32 = 0x0620 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_IN_EXP_NB_BITS: u32 = 0x0400 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_IN_OP_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_IN_MONTGOMERY_PARAM: u32 = 0x0620 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_IN_EXPONENT_BASE: u32 = 0x0C68 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_IN_EXPONENT: u32 = 0x0E78 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_IN_MODULUS: u32 = 0x1088 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_PROTECT_IN_EXPONENT_BASE: u32 = 0x16C8 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_PROTECT_IN_EXPONENT: u32 = 0x14B8 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_PROTECT_IN_MODULUS: u32 = 0x0838 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_PROTECT_IN_PHI: u32 = 0x0C68 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_OUT_RESULT: u32 = 0x0838 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_OUT_ERROR: u32 = 0x1298 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_OUT_MONTGOMERY_PARAM: u32 = 0x0620 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_OUT_EXPONENT_BASE: u32 = 0x0C68 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_EXP_NB_BITS: u32 = 0x0400 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_OP_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_A_COEFF_SIGN: u32 = 0x0410 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_A_COEFF: u32 = 0x0418 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_B_COEFF: u32 = 0x0520 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_MOD_GF: u32 = 0x1088 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_K: u32 = 0x12A0 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_INITIAL_POINT_X: u32 = 0x0578 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_INITIAL_POINT_Y: u32 = 0x0470 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_N_PRIME_ORDER: u32 = 0x0F88 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_OUT_RESULT_X: u32 = 0x0578 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_OUT_RESULT_Y: u32 = 0x05D0 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_OUT_ERROR: u32 = 0x0680 - PKA_RAM_OFFSET >> 2;
pub const PKA_POINT_CHECK_IN_MOD_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_POINT_CHECK_IN_A_COEFF_SIGN: u32 = 0x0410 - PKA_RAM_OFFSET >> 2;
pub const PKA_POINT_CHECK_IN_A_COEFF: u32 = 0x0418 - PKA_RAM_OFFSET >> 2;
pub const PKA_POINT_CHECK_IN_B_COEFF: u32 = 0x0520 - PKA_RAM_OFFSET >> 2;
pub const PKA_POINT_CHECK_IN_MOD_GF: u32 = 0x0470 - PKA_RAM_OFFSET >> 2;
pub const PKA_POINT_CHECK_IN_INITIAL_POINT_X: u32 = 0x0578 - PKA_RAM_OFFSET >> 2;
pub const PKA_POINT_CHECK_IN_INITIAL_POINT_Y: u32 = 0x05D0 - PKA_RAM_OFFSET >> 2;
pub const PKA_POINT_CHECK_IN_MONTGOMERY_PARAM: u32 = 0x04C8 - PKA_RAM_OFFSET >> 2;
pub const PKA_POINT_CHECK_OUT_ERROR: u32 = 0x0680 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_ORDER_NB_BITS: u32 = 0x0400 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_MOD_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_A_COEFF_SIGN: u32 = 0x0410 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_A_COEFF: u32 = 0x0418 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_B_COEFF: u32 = 0x0520 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_MOD_GF: u32 = 0x1088 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_K: u32 = 0x12A0 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_INITIAL_POINT_X: u32 = 0x0578 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_INITIAL_POINT_Y: u32 = 0x0470 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_HASH_E: u32 = 0x0FE8 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_PRIVATE_KEY_D: u32 = 0x0F28 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_ORDER_N: u32 = 0x0F88 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_OUT_ERROR: u32 = 0x0FE0 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_OUT_SIGNATURE_R: u32 = 0x0730 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_OUT_SIGNATURE_S: u32 = 0x0788 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_OUT_FINAL_POINT_X: u32 = 0x1400 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_OUT_FINAL_POINT_Y: u32 = 0x1458 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_ORDER_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_MOD_NB_BITS: u32 = 0x04C8 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_A_COEFF_SIGN: u32 = 0x0468 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_A_COEFF: u32 = 0x0470 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_MOD_GF: u32 = 0x04D0 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_INITIAL_POINT_X: u32 = 0x0678 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_INITIAL_POINT_Y: u32 = 0x06D0 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_PUBLIC_KEY_POINT_X: u32 = 0x12F8 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_PUBLIC_KEY_POINT_Y: u32 = 0x1350 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_SIGNATURE_R: u32 = 0x10E0 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_SIGNATURE_S: u32 = 0x0C68 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_HASH_E: u32 = 0x13A8 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_ORDER_N: u32 = 0x1088 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_OUT_RESULT: u32 = 0x05D0 - PKA_RAM_OFFSET >> 2;
pub const PKA_RSA_CRT_EXP_IN_MOD_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_RSA_CRT_EXP_IN_DP_CRT: u32 = 0x0730 - PKA_RAM_OFFSET >> 2;
pub const PKA_RSA_CRT_EXP_IN_DQ_CRT: u32 = 0x0E78 - PKA_RAM_OFFSET >> 2;
pub const PKA_RSA_CRT_EXP_IN_QINV_CRT: u32 = 0x0948 - PKA_RAM_OFFSET >> 2;
pub const PKA_RSA_CRT_EXP_IN_PRIME_P: u32 = 0x0B60 - PKA_RAM_OFFSET >> 2;
pub const PKA_RSA_CRT_EXP_IN_PRIME_Q: u32 = 0x1088 - PKA_RAM_OFFSET >> 2;
pub const PKA_RSA_CRT_EXP_IN_EXPONENT_BASE: u32 = 0x12A0 - PKA_RAM_OFFSET >> 2;
pub const PKA_RSA_CRT_EXP_OUT_RESULT: u32 = 0x0838 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_REDUC_IN_OP_LENGTH: u32 = 0x0400 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_REDUC_IN_MOD_LENGTH: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_REDUC_IN_OPERAND: u32 = 0x0A50 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_REDUC_IN_MODULUS: u32 = 0x0C68 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_REDUC_OUT_RESULT: u32 = 0xE78 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_ADD_IN_OP_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_ADD_IN_OP1: u32 = 0x0A50 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_ADD_IN_OP2: u32 = 0x0C68 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_ADD_OUT_RESULT: u32 = 0x0E78 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_SUB_IN_OP_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_SUB_IN_OP1: u32 = 0x0A50 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_SUB_IN_OP2: u32 = 0x0C68 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_SUB_OUT_RESULT: u32 = 0x0E78 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_MUL_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_MUL_IN_OP1: u32 = 0x0A50 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_MUL_IN_OP2: u32 = 0x0C68 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_MUL_OUT_RESULT: u32 = 0x0E78 - PKA_RAM_OFFSET >> 2;
pub const PKA_COMPARISON_IN_OP_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_COMPARISON_IN_OP1: u32 = 0x0A50 - PKA_RAM_OFFSET >> 2;
pub const PKA_COMPARISON_IN_OP2: u32 = 0x0C68 - PKA_RAM_OFFSET >> 2;
pub const PKA_COMPARISON_OUT_RESULT: u32 = 0x0E78 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_ADD_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_ADD_IN_OP1: u32 = 0x0A50 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_ADD_IN_OP2: u32 = 0x0C68 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_ADD_IN_OP3_MOD: u32 = 0x1088 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_ADD_OUT_RESULT: u32 = 0x0E78 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_INV_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_INV_IN_OP1: u32 = 0x0A50 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_INV_IN_OP2_MOD: u32 = 0x0C68 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_INV_OUT_RESULT: u32 = 0x0E78 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_SUB_IN_OP_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_SUB_IN_OP1: u32 = 0x0A50 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_SUB_IN_OP2: u32 = 0x0C68 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_SUB_IN_OP3_MOD: u32 = 0x1088 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_SUB_OUT_RESULT: u32 = 0x0E78 - PKA_RAM_OFFSET >> 2;
pub const PKA_MONTGOMERY_MUL_IN_OP_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_MONTGOMERY_MUL_IN_OP1: u32 = 0x0A50 - PKA_RAM_OFFSET >> 2;
pub const PKA_MONTGOMERY_MUL_IN_OP2: u32 = 0x0C68 - PKA_RAM_OFFSET >> 2;
pub const PKA_MONTGOMERY_MUL_IN_OP3_MOD: u32 = 0x1088 - PKA_RAM_OFFSET >> 2;
pub const PKA_MONTGOMERY_MUL_OUT_RESULT: u32 = 0x0E78 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_ALL_OPS_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_ALL_OPS_IN_OP1: u32 = 0x0A50 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_ALL_OPS_IN_OP2: u32 = 0x0C68 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_ALL_OPS_IN_OP3: u32 = 0x1088 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_ALL_OPS_OUT_RESULT: u32 = 0x0E78 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_COMPLETE_ADD_IN_MOD_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_COMPLETE_ADD_IN_A_COEFF_SIGN: u32 = 0x0410 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_COMPLETE_ADD_IN_A_COEFF: u32 = 0x0418 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_COMPLETE_ADD_IN_MOD_P: u32 = 0x0470 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_COMPLETE_ADD_IN_POINT1_X: u32 = 0x0628 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_COMPLETE_ADD_IN_POINT1_Y: u32 = 0x0680 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_COMPLETE_ADD_IN_POINT1_Z: u32 = 0x06D8 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_COMPLETE_ADD_IN_POINT2_X: u32 = 0x0730 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_COMPLETE_ADD_IN_POINT2_Y: u32 = 0x0788 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_COMPLETE_ADD_IN_POINT2_Z: u32 = 0x07E0 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_COMPLETE_ADD_OUT_RESULT_X: u32 = 0x0D60 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_COMPLETE_ADD_OUT_RESULT_Y: u32 = 0x0DB8 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_COMPLETE_ADD_OUT_RESULT_Z: u32 = 0x0E10 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_DOUBLE_LADDER_IN_PRIME_ORDER_NB_BITS: u32 = 0x0400 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_DOUBLE_LADDER_IN_MOD_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_DOUBLE_LADDER_IN_A_COEFF_SIGN: u32 = 0x0410 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_DOUBLE_LADDER_IN_A_COEFF: u32 = 0x0418 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_DOUBLE_LADDER_IN_MOD_P: u32 = 0x0470 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_DOUBLE_LADDER_IN_K_INTEGER: u32 = 0x0520 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_DOUBLE_LADDER_IN_M_INTEGER: u32 = 0x0578 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_DOUBLE_LADDER_IN_POINT1_X: u32 = 0x0628 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_DOUBLE_LADDER_IN_POINT1_Y: u32 = 0x0680 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_DOUBLE_LADDER_IN_POINT1_Z: u32 = 0x06D8 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_DOUBLE_LADDER_IN_POINT2_X: u32 = 0x0730 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_DOUBLE_LADDER_IN_POINT2_Y: u32 = 0x0788 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_DOUBLE_LADDER_IN_POINT2_Z: u32 = 0x07E0 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_DOUBLE_LADDER_OUT_RESULT_X: u32 = 0x0578 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_DOUBLE_LADDER_OUT_RESULT_Y: u32 = 0x05D0 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_DOUBLE_LADDER_OUT_ERROR: u32 = 0x0520 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_PROJECTIVE_AFF_IN_MOD_NB_BITS: u32 = 0x0408 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_PROJECTIVE_AFF_IN_MOD_P: u32 = 0x0470 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_PROJECTIVE_AFF_IN_POINT_X: u32 = 0x0D60 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_PROJECTIVE_AFF_IN_POINT_Y: u32 = 0x0DB8 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_PROJECTIVE_AFF_IN_POINT_Z: u32 = 0x0E10 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_PROJECTIVE_AFF_IN_MONTGOMERY_PARAM_R2: u32 = 0x04C8 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_PROJECTIVE_AFF_OUT_RESULT_X: u32 = 0x0578 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_PROJECTIVE_AFF_OUT_RESULT_Y: u32 = 0x05D0 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_PROJECTIVE_AFF_OUT_ERROR: u32 = 0x0680 - PKA_RAM_OFFSET >> 2;
pub const PSSI_CR_CKPOL_Pos: u32 = 5;
pub const PSSI_CR_CKPOL_Msk: u32 = 0x1 << PSSI_CR_CKPOL_Pos;
pub const PSSI_CR_CKPOL: u32 = PSSI_CR_CKPOL_Msk;
pub const PSSI_CR_DEPOL_Pos: u32 = 6;
pub const PSSI_CR_DEPOL_Msk: u32 = 0x1 << PSSI_CR_DEPOL_Pos;
pub const PSSI_CR_DEPOL: u32 = PSSI_CR_DEPOL_Msk;
pub const PSSI_CR_RDYPOL_Pos: u32 = 8;
pub const PSSI_CR_RDYPOL_Msk: u32 = 0x1 << PSSI_CR_RDYPOL_Pos;
pub const PSSI_CR_RDYPOL: u32 = PSSI_CR_RDYPOL_Msk;
pub const PSSI_CR_EDM_Pos: u32 = 10;
pub const PSSI_CR_EDM_Msk: u32 = 0x3 << PSSI_CR_EDM_Pos;
pub const PSSI_CR_EDM: u32 = PSSI_CR_EDM_Msk;
pub const PSSI_CR_ENABLE_Pos: u32 = 14;
pub const PSSI_CR_ENABLE_Msk: u32 = 0x1 << PSSI_CR_ENABLE_Pos;
pub const PSSI_CR_ENABLE: u32 = PSSI_CR_ENABLE_Msk;
pub const PSSI_CR_DERDYCFG_Pos: u32 = 18;
pub const PSSI_CR_DERDYCFG_Msk: u32 = 0x7 << PSSI_CR_DERDYCFG_Pos;
pub const PSSI_CR_DERDYCFG: u32 = PSSI_CR_DERDYCFG_Msk;
pub const PSSI_CR_CKSRC_Pos: u32 = 29;
pub const PSSI_CR_CKSRC_Msk: u32 = 0x1 << PSSI_CR_CKSRC_Pos;
pub const PSSI_CR_CKSRC: u32 = PSSI_CR_CKSRC_Msk;
pub const PSSI_CR_DMAEN_Pos: u32 = 30;
pub const PSSI_CR_DMAEN_Msk: u32 = 0x1 << PSSI_CR_DMAEN_Pos;
pub const PSSI_CR_DMAEN: u32 = PSSI_CR_DMAEN_Msk;
pub const PSSI_CR_OUTEN_Pos: u32 = 31;
pub const PSSI_CR_OUTEN_Msk: u32 = 0x1 << PSSI_CR_OUTEN_Pos;
pub const PSSI_CR_OUTEN: u32 = PSSI_CR_OUTEN_Msk;
pub const PSSI_SR_RTT4B_Pos: u32 = 2;
pub const PSSI_SR_RTT4B_Msk: u32 = 0x1 << PSSI_SR_RTT4B_Pos;
pub const PSSI_SR_RTT4B: u32 = PSSI_SR_RTT4B_Msk;
pub const PSSI_SR_RTT1B_Pos: u32 = 3;
pub const PSSI_SR_RTT1B_Msk: u32 = 0x1 << PSSI_SR_RTT1B_Pos;
pub const PSSI_SR_RTT1B: u32 = PSSI_SR_RTT1B_Msk;
pub const PSSI_RIS_OVR_RIS_Pos: u32 = 1;
pub const PSSI_RIS_OVR_RIS_Msk: u32 = 0x1 << PSSI_RIS_OVR_RIS_Pos;
pub const PSSI_RIS_OVR_RIS: u32 = PSSI_RIS_OVR_RIS_Msk;
pub const PSSI_IER_OVR_IE_Pos: u32 = 1;
pub const PSSI_IER_OVR_IE_Msk: u32 = 0x1 << PSSI_IER_OVR_IE_Pos;
pub const PSSI_IER_OVR_IE: u32 = PSSI_IER_OVR_IE_Msk;
pub const PSSI_MIS_OVR_MIS_Pos: u32 = 1;
pub const PSSI_MIS_OVR_MIS_Msk: u32 = 0x1 << PSSI_MIS_OVR_MIS_Pos;
pub const PSSI_MIS_OVR_MIS: u32 = PSSI_MIS_OVR_MIS_Msk;
pub const PSSI_ICR_OVR_ISC_Pos: u32 = 1;
pub const PSSI_ICR_OVR_ISC_Msk: u32 = 0x1 << PSSI_ICR_OVR_ISC_Pos;
pub const PSSI_ICR_OVR_ISC: u32 = PSSI_ICR_OVR_ISC_Msk;
pub const PSSI_DR_DR_Pos: u32 = 0;
pub const PSSI_DR_DR_Msk: u32 = 0xFFFFFFFF << PSSI_DR_DR_Pos;
pub const PSSI_DR_DR: u32 = PSSI_DR_DR_Msk;
pub const PWR_CR1_SVOS_Pos: u32 = 0;
pub const PWR_CR1_SVOS_Msk: u32 = 0x1 << PWR_CR1_SVOS_Pos;
pub const PWR_CR1_SVOS: u32 = PWR_CR1_SVOS_Msk;
pub const PWR_CR1_PVDE_Pos: u32 = 4;
pub const PWR_CR1_PVDE_Msk: u32 = 0x1 << PWR_CR1_PVDE_Pos;
pub const PWR_CR1_PVDE: u32 = PWR_CR1_PVDE_Msk;
pub const PWR_CR1_PLS_Pos: u32 = 5;
pub const PWR_CR1_PLS_Msk: u32 = 0x7 << PWR_CR1_PLS_Pos;
pub const PWR_CR1_PLS: u32 = PWR_CR1_PLS_Msk;
pub const PWR_CR1_PLS_0: u32 = 0x1 << PWR_CR1_PLS_Pos;
pub const PWR_CR1_PLS_1: u32 = 0x2 << PWR_CR1_PLS_Pos;
pub const PWR_CR1_PLS_2: u32 = 0x4 << PWR_CR1_PLS_Pos;
pub const PWR_CR1_DBP_Pos: u32 = 8;
pub const PWR_CR1_DBP_Msk: u32 = 0x1 << PWR_CR1_DBP_Pos;
pub const PWR_CR1_DBP: u32 = PWR_CR1_DBP_Msk;
pub const PWR_CR1_FLPS_Pos: u32 = 9;
pub const PWR_CR1_FLPS_Msk: u32 = 0x1 << PWR_CR1_FLPS_Pos;
pub const PWR_CR1_FLPS: u32 = PWR_CR1_FLPS_Msk;
pub const PWR_CR1_BOOSTE_Pos: u32 = 11;
pub const PWR_CR1_BOOSTE_Msk: u32 = 0x1 << PWR_CR1_BOOSTE_Pos;
pub const PWR_CR1_BOOSTE: u32 = PWR_CR1_BOOSTE_Msk;
pub const PWR_CR1_AVDREADY_Pos: u32 = 12;
pub const PWR_CR1_AVDREADY_Msk: u32 = 0x1 << PWR_CR1_AVDREADY_Pos;
pub const PWR_CR1_AVDREADY: u32 = PWR_CR1_AVDREADY_Msk;
pub const PWR_CR1_AVDEN_Pos: u32 = 13;
pub const PWR_CR1_AVDEN_Msk: u32 = 0x1 << PWR_CR1_AVDEN_Pos;
pub const PWR_CR1_AVDEN: u32 = PWR_CR1_AVDEN_Msk;
pub const PWR_CR1_ALS_Pos: u32 = 14;
pub const PWR_CR1_ALS_Msk: u32 = 0x3 << PWR_CR1_ALS_Pos;
pub const PWR_CR1_ALS: u32 = PWR_CR1_ALS_Msk;
pub const PWR_CR1_ALS_0: u32 = 0x1 << PWR_CR1_ALS_Pos;
pub const PWR_CR1_ALS_1: u32 = 0x2 << PWR_CR1_ALS_Pos;
pub const PWR_SR1_ACTVOS_Pos: u32 = 0;
pub const PWR_SR1_ACTVOS_Msk: u32 = 0x1 << PWR_SR1_ACTVOS_Pos;
pub const PWR_SR1_ACTVOS: u32 = PWR_SR1_ACTVOS_Msk;
pub const PWR_SR1_ACTVOSRDY_Pos: u32 = 1;
pub const PWR_SR1_ACTVOSRDY_Msk: u32 = 0x1 << PWR_SR1_ACTVOSRDY_Pos;
pub const PWR_SR1_ACTVOSRDY: u32 = PWR_SR1_ACTVOSRDY_Msk;
pub const PWR_SR1_PVDO_Pos: u32 = 4;
pub const PWR_SR1_PVDO_Msk: u32 = 0x1 << PWR_SR1_PVDO_Pos;
pub const PWR_SR1_PVDO: u32 = PWR_SR1_PVDO_Msk;
pub const PWR_SR1_AVDO_Pos: u32 = 13;
pub const PWR_SR1_AVDO_Msk: u32 = 0x1 << PWR_SR1_AVDO_Pos;
pub const PWR_SR1_AVDO: u32 = PWR_SR1_AVDO_Msk;
pub const PWR_CSR1_BREN_Pos: u32 = 0;
pub const PWR_CSR1_BREN_Msk: u32 = 0x1 << PWR_CSR1_BREN_Pos;
pub const PWR_CSR1_BREN: u32 = PWR_CSR1_BREN_Msk;
pub const PWR_CSR1_MONEN_Pos: u32 = 4;
pub const PWR_CSR1_MONEN_Msk: u32 = 0x1 << PWR_CSR1_MONEN_Pos;
pub const PWR_CSR1_MONEN: u32 = PWR_CSR1_MONEN_Msk;
pub const PWR_CSR1_BRRDY_Pos: u32 = 16;
pub const PWR_CSR1_BRRDY_Msk: u32 = 0x1 << PWR_CSR1_BRRDY_Pos;
pub const PWR_CSR1_BRRDY: u32 = PWR_CSR1_BRRDY_Msk;
pub const PWR_CSR1_VBATL_Pos: u32 = 20;
pub const PWR_CSR1_VBATL_Msk: u32 = 0x1 << PWR_CSR1_VBATL_Pos;
pub const PWR_CSR1_VBATL: u32 = PWR_CSR1_VBATL_Msk;
pub const PWR_CSR1_VBATH_Pos: u32 = 21;
pub const PWR_CSR1_VBATH_Msk: u32 = 0x1 << PWR_CSR1_VBATH_Pos;
pub const PWR_CSR1_VBATH: u32 = PWR_CSR1_VBATH_Msk;
pub const PWR_CSR1_TEMPL_Pos: u32 = 22;
pub const PWR_CSR1_TEMPL_Msk: u32 = 0x1 << PWR_CSR1_TEMPL_Pos;
pub const PWR_CSR1_TEMPL: u32 = PWR_CSR1_TEMPL_Msk;
pub const PWR_CSR1_TEMPH_Pos: u32 = 23;
pub const PWR_CSR1_TEMPH_Msk: u32 = 0x1 << PWR_CSR1_TEMPH_Pos;
pub const PWR_CSR1_TEMPH: u32 = PWR_CSR1_TEMPH_Msk;
pub const PWR_CSR2_BYPASS_Pos: u32 = 0;
pub const PWR_CSR2_BYPASS_Msk: u32 = 0x1 << PWR_CSR2_BYPASS_Pos;
pub const PWR_CSR2_BYPASS: u32 = PWR_CSR2_BYPASS_Msk;
pub const PWR_CSR2_LDOEN_Pos: u32 = 1;
pub const PWR_CSR2_LDOEN_Msk: u32 = 0x1 << PWR_CSR2_LDOEN_Pos;
pub const PWR_CSR2_LDOEN: u32 = PWR_CSR2_LDOEN_Msk;
pub const PWR_CSR2_SDEN_Pos: u32 = 2;
pub const PWR_CSR2_SDEN_Msk: u32 = 0x1 << PWR_CSR2_SDEN_Pos;
pub const PWR_CSR2_SDEN: u32 = PWR_CSR2_SDEN_Msk;
pub const PWR_CSR2_SMPSEXTHP_Pos: u32 = 3;
pub const PWR_CSR2_SMPSEXTHP_Msk: u32 = 0x1 << PWR_CSR2_SMPSEXTHP_Pos;
pub const PWR_CSR2_SMPSEXTHP: u32 = PWR_CSR2_SMPSEXTHP_Msk;
pub const PWR_CSR2_SDHILEVEL_Pos: u32 = 4;
pub const PWR_CSR2_SDHILEVEL_Msk: u32 = 0x1 << PWR_CSR2_SDHILEVEL_Pos;
pub const PWR_CSR2_SDHILEVEL: u32 = PWR_CSR2_SDHILEVEL_Msk;
pub const PWR_CSR2_VBE_Pos: u32 = 8;
pub const PWR_CSR2_VBE_Msk: u32 = 0x1 << PWR_CSR2_VBE_Pos;
pub const PWR_CSR2_VBE: u32 = PWR_CSR2_VBE_Msk;
pub const PWR_CSR2_VBRS_Pos: u32 = 9;
pub const PWR_CSR2_VBRS_Msk: u32 = 0x1 << PWR_CSR2_VBRS_Pos;
pub const PWR_CSR2_VBRS: u32 = PWR_CSR2_VBRS_Msk;
pub const PWR_CSR2_XSPICAP1_Pos: u32 = 10;
pub const PWR_CSR2_XSPICAP1_Msk: u32 = 0x3 << PWR_CSR2_XSPICAP1_Pos;
pub const PWR_CSR2_XSPICAP1: u32 = PWR_CSR2_XSPICAP1_Msk;
pub const PWR_CSR2_XSPICAP1_0: u32 = 0x1 << PWR_CSR2_XSPICAP1_Pos;
pub const PWR_CSR2_XSPICAP1_1: u32 = 0x2 << PWR_CSR2_XSPICAP1_Pos;
pub const PWR_CSR2_XSPICAP2_Pos: u32 = 12;
pub const PWR_CSR2_XSPICAP2_Msk: u32 = 0x3 << PWR_CSR2_XSPICAP2_Pos;
pub const PWR_CSR2_XSPICAP2: u32 = PWR_CSR2_XSPICAP2_Msk;
pub const PWR_CSR2_XSPICAP2_0: u32 = 0x1 << PWR_CSR2_XSPICAP2_Pos;
pub const PWR_CSR2_XSPICAP2_1: u32 = 0x2 << PWR_CSR2_XSPICAP2_Pos;
pub const PWR_CSR2_EN_XSPIM1_Pos: u32 = 14;
pub const PWR_CSR2_EN_XSPIM1_Msk: u32 = 0x1 << PWR_CSR2_EN_XSPIM1_Pos;
pub const PWR_CSR2_EN_XSPIM1: u32 = PWR_CSR2_EN_XSPIM1_Msk;
pub const PWR_CSR2_EN_XSPIM2_Pos: u32 = 15;
pub const PWR_CSR2_EN_XSPIM2_Msk: u32 = 0x1 << PWR_CSR2_EN_XSPIM2_Pos;
pub const PWR_CSR2_EN_XSPIM2: u32 = PWR_CSR2_EN_XSPIM2_Msk;
pub const PWR_CSR2_SDEXTRDY_Pos: u32 = 16;
pub const PWR_CSR2_SDEXTRDY_Msk: u32 = 0x1 << PWR_CSR2_SDEXTRDY_Pos;
pub const PWR_CSR2_SDEXTRDY: u32 = PWR_CSR2_SDEXTRDY_Msk;
pub const PWR_CSR2_USB33DEN_Pos: u32 = 24;
pub const PWR_CSR2_USB33DEN_Msk: u32 = 0x1 << PWR_CSR2_USB33DEN_Pos;
pub const PWR_CSR2_USB33DEN: u32 = PWR_CSR2_USB33DEN_Msk;
pub const PWR_CSR2_USBREGEN_Pos: u32 = 25;
pub const PWR_CSR2_USBREGEN_Msk: u32 = 0x1 << PWR_CSR2_USBREGEN_Pos;
pub const PWR_CSR2_USBREGEN: u32 = PWR_CSR2_USBREGEN_Msk;
pub const PWR_CSR2_USB33RDY_Pos: u32 = 26;
pub const PWR_CSR2_USB33RDY_Msk: u32 = 0x1 << PWR_CSR2_USB33RDY_Pos;
pub const PWR_CSR2_USB33RDY: u32 = PWR_CSR2_USB33RDY_Msk;
pub const PWR_CSR2_USBHSREGEN_Pos: u32 = 27;
pub const PWR_CSR2_USBHSREGEN_Msk: u32 = 0x1 << PWR_CSR2_USBHSREGEN_Pos;
pub const PWR_CSR2_USBHSREGEN: u32 = PWR_CSR2_USBHSREGEN_Msk;
pub const PWR_CSR3_PDDS_Pos: u32 = 0;
pub const PWR_CSR3_PDDS_Msk: u32 = 0x1 << PWR_CSR3_PDDS_Pos;
pub const PWR_CSR3_PDDS: u32 = PWR_CSR3_PDDS_Msk;
pub const PWR_CSR3_CSSF_Pos: u32 = 1;
pub const PWR_CSR3_CSSF_Msk: u32 = 0x1 << PWR_CSR3_CSSF_Pos;
pub const PWR_CSR3_CSSF: u32 = PWR_CSR3_CSSF_Msk;
pub const PWR_CSR3_STOPF_Pos: u32 = 8;
pub const PWR_CSR3_STOPF_Msk: u32 = 0x1 << PWR_CSR3_STOPF_Pos;
pub const PWR_CSR3_STOPF: u32 = PWR_CSR3_STOPF_Msk;
pub const PWR_CSR3_SBF_Pos: u32 = 9;
pub const PWR_CSR3_SBF_Msk: u32 = 0x1 << PWR_CSR3_SBF_Pos;
pub const PWR_CSR3_SBF: u32 = PWR_CSR3_SBF_Msk;
pub const PWR_CSR4_VOS_Pos: u32 = 0;
pub const PWR_CSR4_VOS_Msk: u32 = 0x1 << PWR_CSR4_VOS_Pos;
pub const PWR_CSR4_VOS: u32 = PWR_CSR4_VOS_Msk;
pub const PWR_CSR4_VOSRDY_Pos: u32 = 1;
pub const PWR_CSR4_VOSRDY_Msk: u32 = 0x1 << PWR_CSR4_VOSRDY_Pos;
pub const PWR_CSR4_VOSRDY: u32 = PWR_CSR4_VOSRDY_Msk;
pub const PWR_WKUPCR_WKUPC_Pos: u32 = 0;
pub const PWR_WKUPCR_WKUPC_Msk: u32 = 0xF << PWR_WKUPCR_WKUPC_Pos;
pub const PWR_WKUPCR_WKUPC: u32 = PWR_WKUPCR_WKUPC_Msk;
pub const PWR_WKUPCR_WKUPC1_Pos: u32 = 0;
pub const PWR_WKUPCR_WKUPC1_Msk: u32 = 0x1 << PWR_WKUPCR_WKUPC1_Pos;
pub const PWR_WKUPCR_WKUPC1: u32 = PWR_WKUPCR_WKUPC1_Msk;
pub const PWR_WKUPCR_WKUPC2_Pos: u32 = 1;
pub const PWR_WKUPCR_WKUPC2_Msk: u32 = 0x1 << PWR_WKUPCR_WKUPC2_Pos;
pub const PWR_WKUPCR_WKUPC2: u32 = PWR_WKUPCR_WKUPC2_Msk;
pub const PWR_WKUPCR_WKUPC3_Pos: u32 = 2;
pub const PWR_WKUPCR_WKUPC3_Msk: u32 = 0x1 << PWR_WKUPCR_WKUPC3_Pos;
pub const PWR_WKUPCR_WKUPC3: u32 = PWR_WKUPCR_WKUPC3_Msk;
pub const PWR_WKUPCR_WKUPC4_Pos: u32 = 3;
pub const PWR_WKUPCR_WKUPC4_Msk: u32 = 0x1 << PWR_WKUPCR_WKUPC4_Pos;
pub const PWR_WKUPCR_WKUPC4: u32 = PWR_WKUPCR_WKUPC4_Msk;
pub const PWR_WKUPFR_WKUPF1_Pos: u32 = 0;
pub const PWR_WKUPFR_WKUPF1_Msk: u32 = 0x1 << PWR_WKUPFR_WKUPF1_Pos;
pub const PWR_WKUPFR_WKUPF1: u32 = PWR_WKUPFR_WKUPF1_Msk;
pub const PWR_WKUPFR_WKUPF2_Pos: u32 = 1;
pub const PWR_WKUPFR_WKUPF2_Msk: u32 = 0x1 << PWR_WKUPFR_WKUPF2_Pos;
pub const PWR_WKUPFR_WKUPF2: u32 = PWR_WKUPFR_WKUPF2_Msk;
pub const PWR_WKUPFR_WKUPF3_Pos: u32 = 2;
pub const PWR_WKUPFR_WKUPF3_Msk: u32 = 0x1 << PWR_WKUPFR_WKUPF3_Pos;
pub const PWR_WKUPFR_WKUPF3: u32 = PWR_WKUPFR_WKUPF3_Msk;
pub const PWR_WKUPFR_WKUPF4_Pos: u32 = 3;
pub const PWR_WKUPFR_WKUPF4_Msk: u32 = 0x1 << PWR_WKUPFR_WKUPF4_Pos;
pub const PWR_WKUPFR_WKUPF4: u32 = PWR_WKUPFR_WKUPF4_Msk;
pub const PWR_WKUPEPR_WKUPEN_Pos: u32 = 0;
pub const PWR_WKUPEPR_WKUPEN_Msk: u32 = 0x0F << PWR_WKUPEPR_WKUPEN_Pos;
pub const PWR_WKUPEPR_WKUPEN: u32 = PWR_WKUPEPR_WKUPEN_Msk;
pub const PWR_WKUPEPR_WKUPEN1_Pos: u32 = 0;
pub const PWR_WKUPEPR_WKUPEN1_Msk: u32 = 0x1 << PWR_WKUPEPR_WKUPEN1_Pos;
pub const PWR_WKUPEPR_WKUPEN1: u32 = PWR_WKUPEPR_WKUPEN1_Msk;
pub const PWR_WKUPEPR_WKUPEN2_Pos: u32 = 1;
pub const PWR_WKUPEPR_WKUPEN2_Msk: u32 = 0x1 << PWR_WKUPEPR_WKUPEN2_Pos;
pub const PWR_WKUPEPR_WKUPEN2: u32 = PWR_WKUPEPR_WKUPEN2_Msk;
pub const PWR_WKUPEPR_WKUPEN3_Pos: u32 = 2;
pub const PWR_WKUPEPR_WKUPEN3_Msk: u32 = 0x1 << PWR_WKUPEPR_WKUPEN3_Pos;
pub const PWR_WKUPEPR_WKUPEN3: u32 = PWR_WKUPEPR_WKUPEN3_Msk;
pub const PWR_WKUPEPR_WKUPEN4_Pos: u32 = 3;
pub const PWR_WKUPEPR_WKUPEN4_Msk: u32 = 0x1 << PWR_WKUPEPR_WKUPEN4_Pos;
pub const PWR_WKUPEPR_WKUPEN4: u32 = PWR_WKUPEPR_WKUPEN4_Msk;
pub const PWR_WKUPEPR_WKUPP_Pos: u32 = 8;
pub const PWR_WKUPEPR_WKUPP_Msk: u32 = 0x0F << PWR_WKUPEPR_WKUPP_Pos;
pub const PWR_WKUPEPR_WKUPP: u32 = PWR_WKUPEPR_WKUPP_Msk;
pub const PWR_WKUPEPR_WKUPP1_Pos: u32 = 8;
pub const PWR_WKUPEPR_WKUPP1_Msk: u32 = 0x1 << PWR_WKUPEPR_WKUPP1_Pos;
pub const PWR_WKUPEPR_WKUPP1: u32 = PWR_WKUPEPR_WKUPP1_Msk;
pub const PWR_WKUPEPR_WKUPP2_Pos: u32 = 9;
pub const PWR_WKUPEPR_WKUPP2_Msk: u32 = 0x1 << PWR_WKUPEPR_WKUPP2_Pos;
pub const PWR_WKUPEPR_WKUPP2: u32 = PWR_WKUPEPR_WKUPP2_Msk;
pub const PWR_WKUPEPR_WKUPP3_Pos: u32 = 10;
pub const PWR_WKUPEPR_WKUPP3_Msk: u32 = 0x1 << PWR_WKUPEPR_WKUPP3_Pos;
pub const PWR_WKUPEPR_WKUPP3: u32 = PWR_WKUPEPR_WKUPP3_Msk;
pub const PWR_WKUPEPR_WKUPP4_Pos: u32 = 11;
pub const PWR_WKUPEPR_WKUPP4_Msk: u32 = 0x1 << PWR_WKUPEPR_WKUPP4_Pos;
pub const PWR_WKUPEPR_WKUPP4: u32 = PWR_WKUPEPR_WKUPP4_Msk;
pub const PWR_WKUPEPR_WKUPPUPD1_Pos: u32 = 16;
pub const PWR_WKUPEPR_WKUPPUPD1_Msk: u32 = 0x3 << PWR_WKUPEPR_WKUPPUPD1_Pos;
pub const PWR_WKUPEPR_WKUPPUPD1: u32 = PWR_WKUPEPR_WKUPPUPD1_Msk;
pub const PWR_WKUPEPR_WKUPPUPD1_0: u32 = 0x1 << PWR_WKUPEPR_WKUPPUPD1_Pos;
pub const PWR_WKUPEPR_WKUPPUPD1_1: u32 = 0x2 << PWR_WKUPEPR_WKUPPUPD1_Pos;
pub const PWR_WKUPEPR_WKUPPUPD2_Pos: u32 = 18;
pub const PWR_WKUPEPR_WKUPPUPD2_Msk: u32 = 0x3 << PWR_WKUPEPR_WKUPPUPD2_Pos;
pub const PWR_WKUPEPR_WKUPPUPD2: u32 = PWR_WKUPEPR_WKUPPUPD2_Msk;
pub const PWR_WKUPEPR_WKUPPUPD2_0: u32 = 0x1 << PWR_WKUPEPR_WKUPPUPD2_Pos;
pub const PWR_WKUPEPR_WKUPPUPD2_1: u32 = 0x2 << PWR_WKUPEPR_WKUPPUPD2_Pos;
pub const PWR_WKUPEPR_WKUPPUPD3_Pos: u32 = 20;
pub const PWR_WKUPEPR_WKUPPUPD3_Msk: u32 = 0x3 << PWR_WKUPEPR_WKUPPUPD3_Pos;
pub const PWR_WKUPEPR_WKUPPUPD3: u32 = PWR_WKUPEPR_WKUPPUPD3_Msk;
pub const PWR_WKUPEPR_WKUPPUPD3_0: u32 = 0x1 << PWR_WKUPEPR_WKUPPUPD3_Pos;
pub const PWR_WKUPEPR_WKUPPUPD3_1: u32 = 0x2 << PWR_WKUPEPR_WKUPPUPD3_Pos;
pub const PWR_WKUPEPR_WKUPPUPD4_Pos: u32 = 22;
pub const PWR_WKUPEPR_WKUPPUPD4_Msk: u32 = 0x3 << PWR_WKUPEPR_WKUPPUPD4_Pos;
pub const PWR_WKUPEPR_WKUPPUPD4: u32 = PWR_WKUPEPR_WKUPPUPD4_Msk;
pub const PWR_WKUPEPR_WKUPPUPD4_0: u32 = 0x1 << PWR_WKUPEPR_WKUPPUPD4_Pos;
pub const PWR_WKUPEPR_WKUPPUPD4_1: u32 = 0x2 << PWR_WKUPEPR_WKUPPUPD4_Pos;
pub const PWR_UCPDR_UCPD_DBDIS_Pos: u32 = 0;
pub const PWR_UCPDR_UCPD_DBDIS_Msk: u32 = 0x1 << PWR_UCPDR_UCPD_DBDIS_Pos;
pub const PWR_UCPDR_UCPD_DBDIS: u32 = PWR_UCPDR_UCPD_DBDIS_Msk;
pub const PWR_UCPDR_UCPD_STBY_Pos: u32 = 1;
pub const PWR_UCPDR_UCPD_STBY_Msk: u32 = 0x1 << PWR_UCPDR_UCPD_STBY_Pos;
pub const PWR_UCPDR_UCPD_STBY: u32 = PWR_UCPDR_UCPD_STBY_Msk;
pub const PWR_APCR_APC_Pos: u32 = 0;
pub const PWR_APCR_APC_Msk: u32 = 0x1 << PWR_APCR_APC_Pos;
pub const PWR_APCR_APC: u32 = PWR_APCR_APC_Msk;
pub const PWR_APCR_PN7_PUPD_Pos: u32 = 16;
pub const PWR_APCR_PN7_PUPD_Msk: u32 = 0x1 << PWR_APCR_PN7_PUPD_Pos;
pub const PWR_APCR_PN7_PUPD: u32 = PWR_APCR_PN7_PUPD_Msk;
pub const PWR_APCR_PO5_PUPD_Pos: u32 = 17;
pub const PWR_APCR_PO5_PUPD_Msk: u32 = 0x1 << PWR_APCR_PO5_PUPD_Pos;
pub const PWR_APCR_PO5_PUPD: u32 = PWR_APCR_PO5_PUPD_Msk;
pub const PWR_APCR_I3CPB6_PU_Pos: u32 = 28;
pub const PWR_APCR_I3CPB6_PU_Msk: u32 = 0x1 << PWR_APCR_I3CPB6_PU_Pos;
pub const PWR_APCR_I3CPB6_PU: u32 = PWR_APCR_I3CPB6_PU_Msk;
pub const PWR_APCR_I3CPB7_PU_Pos: u32 = 29;
pub const PWR_APCR_I3CPB7_PU_Msk: u32 = 0x1 << PWR_APCR_I3CPB7_PU_Pos;
pub const PWR_APCR_I3CPB7_PU: u32 = PWR_APCR_I3CPB7_PU_Msk;
pub const PWR_APCR_I3CPB8_PU_Pos: u32 = 30;
pub const PWR_APCR_I3CPB8_PU_Msk: u32 = 0x1 << PWR_APCR_I3CPB8_PU_Pos;
pub const PWR_APCR_I3CPB8_PU: u32 = PWR_APCR_I3CPB8_PU_Msk;
pub const PWR_APCR_I3CPB9_PU_Pos: u32 = 31;
pub const PWR_APCR_I3CPB9_PU_Msk: u32 = 0x1 << PWR_APCR_I3CPB9_PU_Pos;
pub const PWR_APCR_I3CPB9_PU: u32 = PWR_APCR_I3CPB9_PU_Msk;
pub const PWR_PUCRN_PUN1_Pos: u32 = 1;
pub const PWR_PUCRN_PUN1_Msk: u32 = 0x1 << PWR_PUCRN_PUN1_Pos;
pub const PWR_PUCRN_PUN1: u32 = PWR_PUCRN_PUN1_Msk;
pub const PWR_PUCRN_PUN6_Pos: u32 = 6;
pub const PWR_PUCRN_PUN6_Msk: u32 = 0x1 << PWR_PUCRN_PUN6_Pos;
pub const PWR_PUCRN_PUN6: u32 = PWR_PUCRN_PUN6_Msk;
pub const PWR_PUCRN_PUN12_Pos: u32 = 12;
pub const PWR_PUCRN_PUN12_Msk: u32 = 0x1 << PWR_PUCRN_PUN12_Pos;
pub const PWR_PUCRN_PUN12: u32 = PWR_PUCRN_PUN12_Msk;
pub const PWR_PDCRN_PDN0_Pos: u32 = 0;
pub const PWR_PDCRN_PDN0_Msk: u32 = 0x1 << PWR_PDCRN_PDN0_Pos;
pub const PWR_PDCRN_PDN0: u32 = PWR_PDCRN_PDN0_Msk;
pub const PWR_PDCRN_PDN1_Pos: u32 = 1;
pub const PWR_PDCRN_PDN1_Msk: u32 = 0x1 << PWR_PDCRN_PDN1_Pos;
pub const PWR_PDCRN_PDN1: u32 = PWR_PDCRN_PDN1_Msk;
pub const PWR_PDCRN_PDN2N5_Pos: u32 = 2;
pub const PWR_PDCRN_PDN2N5_Msk: u32 = 0x1 << PWR_PDCRN_PDN2N5_Pos;
pub const PWR_PDCRN_PDN2N5: u32 = PWR_PDCRN_PDN2N5_Msk;
pub const PWR_PDCRN_PDN6_Pos: u32 = 6;
pub const PWR_PDCRN_PDN6_Msk: u32 = 0x1 << PWR_PDCRN_PDN6_Pos;
pub const PWR_PDCRN_PDN6: u32 = PWR_PDCRN_PDN6_Msk;
pub const PWR_PDCRN_PDN8N11_Pos: u32 = 8;
pub const PWR_PDCRN_PDN8N11_Msk: u32 = 0x1 << PWR_PDCRN_PDN8N11_Pos;
pub const PWR_PDCRN_PDN8N11: u32 = PWR_PDCRN_PDN8N11_Msk;
pub const PWR_PDCRN_PDN12_Pos: u32 = 12;
pub const PWR_PDCRN_PDN12_Msk: u32 = 0x1 << PWR_PDCRN_PDN12_Pos;
pub const PWR_PDCRN_PDN12: u32 = PWR_PDCRN_PDN12_Msk;
pub const PWR_PUCRO_PUO0_Pos: u32 = 0;
pub const PWR_PUCRO_PUO0_Msk: u32 = 0x1 << PWR_PUCRO_PUO0_Pos;
pub const PWR_PUCRO_PUO0: u32 = PWR_PUCRO_PUO0_Msk;
pub const PWR_PUCRO_PUO1_Pos: u32 = 1;
pub const PWR_PUCRO_PUO1_Msk: u32 = 0x1 << PWR_PUCRO_PUO1_Pos;
pub const PWR_PUCRO_PUO1: u32 = PWR_PUCRO_PUO1_Msk;
pub const PWR_PUCRO_PUO4_Pos: u32 = 4;
pub const PWR_PUCRO_PUO4_Msk: u32 = 0x1 << PWR_PUCRO_PUO4_Pos;
pub const PWR_PUCRO_PUO4: u32 = PWR_PUCRO_PUO4_Msk;
pub const PWR_PDCRO_PDO0_Pos: u32 = 0;
pub const PWR_PDCRO_PDO0_Msk: u32 = 0x1 << PWR_PDCRO_PDO0_Pos;
pub const PWR_PDCRO_PDO0: u32 = PWR_PDCRO_PDO0_Msk;
pub const PWR_PDCRO_PDO1_Pos: u32 = 1;
pub const PWR_PDCRO_PDO1_Msk: u32 = 0x1 << PWR_PDCRO_PDO1_Pos;
pub const PWR_PDCRO_PDO1: u32 = PWR_PDCRO_PDO1_Msk;
pub const PWR_PDCRO_PDO2_Pos: u32 = 2;
pub const PWR_PDCRO_PDO2_Msk: u32 = 0x1 << PWR_PDCRO_PDO2_Pos;
pub const PWR_PDCRO_PDO2: u32 = PWR_PDCRO_PDO2_Msk;
pub const PWR_PDCRO_PDO3_Pos: u32 = 3;
pub const PWR_PDCRO_PDO3_Msk: u32 = 0x1 << PWR_PDCRO_PDO3_Pos;
pub const PWR_PDCRO_PDO3: u32 = PWR_PDCRO_PDO3_Msk;
pub const PWR_PDCRO_PDO4_Pos: u32 = 4;
pub const PWR_PDCRO_PDO4_Msk: u32 = 0x1 << PWR_PDCRO_PDO4_Pos;
pub const PWR_PDCRO_PDO4: u32 = PWR_PDCRO_PDO4_Msk;
pub const PWR_PDCRP_PDP0P3_Pos: u32 = 0;
pub const PWR_PDCRP_PDP0P3_Msk: u32 = 0x1 << PWR_PDCRP_PDP0P3_Pos;
pub const PWR_PDCRP_PDP0P3: u32 = PWR_PDCRP_PDP0P3_Msk;
pub const PWR_PDCRP_PDP4P7_Pos: u32 = 4;
pub const PWR_PDCRP_PDP4P7_Msk: u32 = 0x1 << PWR_PDCRP_PDP4P7_Pos;
pub const PWR_PDCRP_PDP4P7: u32 = PWR_PDCRP_PDP4P7_Msk;
pub const PWR_PDCRP_PDP8P11_Pos: u32 = 8;
pub const PWR_PDCRP_PDP8P11_Msk: u32 = 0x1 << PWR_PDCRP_PDP8P11_Pos;
pub const PWR_PDCRP_PDP8P11: u32 = PWR_PDCRP_PDP8P11_Msk;
pub const PWR_PDCRP_PDP12P15_Pos: u32 = 12;
pub const PWR_PDCRP_PDP12P15_Msk: u32 = 0x1 << PWR_PDCRP_PDP12P15_Pos;
pub const PWR_PDCRP_PDP12P15: u32 = PWR_PDCRP_PDP12P15_Msk;
pub const RAMECC_IER_GIE_Pos: u32 = 0;
pub const RAMECC_IER_GIE_Msk: u32 = 0x1 << RAMECC_IER_GIE_Pos;
pub const RAMECC_IER_GIE: u32 = RAMECC_IER_GIE_Msk;
pub const RAMECC_IER_GECCSEIE_Pos: u32 = 1;
pub const RAMECC_IER_GECCSEIE_Msk: u32 = 0x1 << RAMECC_IER_GECCSEIE_Pos;
pub const RAMECC_IER_GECCSEIE: u32 = RAMECC_IER_GECCSEIE_Msk;
pub const RAMECC_IER_GECCDEIE_Pos: u32 = 2;
pub const RAMECC_IER_GECCDEIE_Msk: u32 = 0x1 << RAMECC_IER_GECCDEIE_Pos;
pub const RAMECC_IER_GECCDEIE: u32 = RAMECC_IER_GECCDEIE_Msk;
pub const RAMECC_IER_GECCDEBWIE_Pos: u32 = 3;
pub const RAMECC_IER_GECCDEBWIE_Msk: u32 = 0x1 << RAMECC_IER_GECCDEBWIE_Pos;
pub const RAMECC_IER_GECCDEBWIE: u32 = RAMECC_IER_GECCDEBWIE_Msk;
pub const RAMECC_CR_ECCSEIE_Pos: u32 = 2;
pub const RAMECC_CR_ECCSEIE_Msk: u32 = 0x1 << RAMECC_CR_ECCSEIE_Pos;
pub const RAMECC_CR_ECCSEIE: u32 = RAMECC_CR_ECCSEIE_Msk;
pub const RAMECC_CR_ECCDEIE_Pos: u32 = 3;
pub const RAMECC_CR_ECCDEIE_Msk: u32 = 0x1 << RAMECC_CR_ECCDEIE_Pos;
pub const RAMECC_CR_ECCDEIE: u32 = RAMECC_CR_ECCDEIE_Msk;
pub const RAMECC_CR_ECCDEBWIE_Pos: u32 = 4;
pub const RAMECC_CR_ECCDEBWIE_Msk: u32 = 0x1 << RAMECC_CR_ECCDEBWIE_Pos;
pub const RAMECC_CR_ECCDEBWIE: u32 = RAMECC_CR_ECCDEBWIE_Msk;
pub const RAMECC_CR_ECCELEN_Pos: u32 = 5;
pub const RAMECC_CR_ECCELEN_Msk: u32 = 0x1 << RAMECC_CR_ECCELEN_Pos;
pub const RAMECC_CR_ECCELEN: u32 = RAMECC_CR_ECCELEN_Msk;
pub const RAMECC_SR_SEDCF_Pos: u32 = 0;
pub const RAMECC_SR_SEDCF_Msk: u32 = 0x1 << RAMECC_SR_SEDCF_Pos;
pub const RAMECC_SR_SEDCF: u32 = RAMECC_SR_SEDCF_Msk;
pub const RAMECC_SR_DEDF_Pos: u32 = 1;
pub const RAMECC_SR_DEDF_Msk: u32 = 0x1 << RAMECC_SR_DEDF_Pos;
pub const RAMECC_SR_DEDF: u32 = RAMECC_SR_DEDF_Msk;
pub const RAMECC_SR_DEBWDF_Pos: u32 = 2;
pub const RAMECC_SR_DEBWDF_Msk: u32 = 0x1 << RAMECC_SR_DEBWDF_Pos;
pub const RAMECC_SR_DEBWDF: u32 = RAMECC_SR_DEBWDF_Msk;
pub const RAMECC_FAR_FADD_Pos: u32 = 0;
pub const RAMECC_FAR_FADD_Msk: u32 = 0xFFFFFFFF << RAMECC_FAR_FADD_Pos;
pub const RAMECC_FAR_FADD: u32 = RAMECC_FAR_FADD_Msk;
pub const RAMECC_FDRL_FDATAL_Pos: u32 = 0;
pub const RAMECC_FDRL_FDATAL_Msk: u32 = 0xFFFFFFFF << RAMECC_FDRL_FDATAL_Pos;
pub const RAMECC_FDRL_FDATAL: u32 = RAMECC_FDRL_FDATAL_Msk;
pub const RAMECC_FDRH_FDATAH_Pos: u32 = 0;
pub const RAMECC_FDRH_FDATAH_Msk: u32 = 0xFFFFFFFF << RAMECC_FDRH_FDATAH_Pos;
pub const RAMECC_FDRH_FDATAH: u32 = RAMECC_FDRH_FDATAH_Msk;
pub const RAMECC_FECR_FEC_Pos: u32 = 0;
pub const RAMECC_FECR_FEC_Msk: u32 = 0xFFFFFFFF << RAMECC_FECR_FEC_Pos;
pub const RAMECC_FECR_FEC: u32 = RAMECC_FECR_FEC_Msk;
pub const RCC_CR_HSION_Pos: u32 = 0;
pub const RCC_CR_HSION_Msk: u32 = 0x1 << RCC_CR_HSION_Pos;
pub const RCC_CR_HSION: u32 = RCC_CR_HSION_Msk;
pub const RCC_CR_HSIKERON_Pos: u32 = 1;
pub const RCC_CR_HSIKERON_Msk: u32 = 0x1 << RCC_CR_HSIKERON_Pos;
pub const RCC_CR_HSIKERON: u32 = RCC_CR_HSIKERON_Msk;
pub const RCC_CR_HSIRDY_Pos: u32 = 2;
pub const RCC_CR_HSIRDY_Msk: u32 = 0x1 << RCC_CR_HSIRDY_Pos;
pub const RCC_CR_HSIRDY: u32 = RCC_CR_HSIRDY_Msk;
pub const RCC_CR_HSIDIV_Pos: u32 = 3;
pub const RCC_CR_HSIDIV_Msk: u32 = 0x3 << RCC_CR_HSIDIV_Pos;
pub const RCC_CR_HSIDIV: u32 = RCC_CR_HSIDIV_Msk;
pub const RCC_CR_HSIDIV_0: u32 = 0x1 << RCC_CR_HSIDIV_Pos;
pub const RCC_CR_HSIDIV_1: u32 = 0x2 << RCC_CR_HSIDIV_Pos;
pub const RCC_CR_HSIDIVF_Pos: u32 = 5;
pub const RCC_CR_HSIDIVF_Msk: u32 = 0x1 << RCC_CR_HSIDIVF_Pos;
pub const RCC_CR_HSIDIVF: u32 = RCC_CR_HSIDIVF_Msk;
pub const RCC_CR_CSION_Pos: u32 = 7;
pub const RCC_CR_CSION_Msk: u32 = 0x1 << RCC_CR_CSION_Pos;
pub const RCC_CR_CSION: u32 = RCC_CR_CSION_Msk;
pub const RCC_CR_CSIRDY_Pos: u32 = 8;
pub const RCC_CR_CSIRDY_Msk: u32 = 0x1 << RCC_CR_CSIRDY_Pos;
pub const RCC_CR_CSIRDY: u32 = RCC_CR_CSIRDY_Msk;
pub const RCC_CR_CSIKERON_Pos: u32 = 9;
pub const RCC_CR_CSIKERON_Msk: u32 = 0x1 << RCC_CR_CSIKERON_Pos;
pub const RCC_CR_CSIKERON: u32 = RCC_CR_CSIKERON_Msk;
pub const RCC_CR_HSI48ON_Pos: u32 = 12;
pub const RCC_CR_HSI48ON_Msk: u32 = 0x1 << RCC_CR_HSI48ON_Pos;
pub const RCC_CR_HSI48ON: u32 = RCC_CR_HSI48ON_Msk;
pub const RCC_CR_HSI48RDY_Pos: u32 = 13;
pub const RCC_CR_HSI48RDY_Msk: u32 = 0x1 << RCC_CR_HSI48RDY_Pos;
pub const RCC_CR_HSI48RDY: u32 = RCC_CR_HSI48RDY_Msk;
pub const RCC_CR_HSEON_Pos: u32 = 16;
pub const RCC_CR_HSEON_Msk: u32 = 0x1 << RCC_CR_HSEON_Pos;
pub const RCC_CR_HSEON: u32 = RCC_CR_HSEON_Msk;
pub const RCC_CR_HSERDY_Pos: u32 = 17;
pub const RCC_CR_HSERDY_Msk: u32 = 0x1 << RCC_CR_HSERDY_Pos;
pub const RCC_CR_HSERDY: u32 = RCC_CR_HSERDY_Msk;
pub const RCC_CR_HSEBYP_Pos: u32 = 18;
pub const RCC_CR_HSEBYP_Msk: u32 = 0x1 << RCC_CR_HSEBYP_Pos;
pub const RCC_CR_HSEBYP: u32 = RCC_CR_HSEBYP_Msk;
pub const RCC_CR_HSEEXT_Pos: u32 = 19;
pub const RCC_CR_HSEEXT_Msk: u32 = 0x1 << RCC_CR_HSEEXT_Pos;
pub const RCC_CR_HSEEXT: u32 = RCC_CR_HSEEXT_Msk;
pub const RCC_CR_HSECSSON_Pos: u32 = 20;
pub const RCC_CR_HSECSSON_Msk: u32 = 0x1 << RCC_CR_HSECSSON_Pos;
pub const RCC_CR_HSECSSON: u32 = RCC_CR_HSECSSON_Msk;
pub const RCC_CR_PLL1ON_Pos: u32 = 24;
pub const RCC_CR_PLL1ON_Msk: u32 = 0x1 << RCC_CR_PLL1ON_Pos;
pub const RCC_CR_PLL1ON: u32 = RCC_CR_PLL1ON_Msk;
pub const RCC_CR_PLL1RDY_Pos: u32 = 25;
pub const RCC_CR_PLL1RDY_Msk: u32 = 0x1 << RCC_CR_PLL1RDY_Pos;
pub const RCC_CR_PLL1RDY: u32 = RCC_CR_PLL1RDY_Msk;
pub const RCC_CR_PLL2ON_Pos: u32 = 26;
pub const RCC_CR_PLL2ON_Msk: u32 = 0x1 << RCC_CR_PLL2ON_Pos;
pub const RCC_CR_PLL2ON: u32 = RCC_CR_PLL2ON_Msk;
pub const RCC_CR_PLL2RDY_Pos: u32 = 27;
pub const RCC_CR_PLL2RDY_Msk: u32 = 0x1 << RCC_CR_PLL2RDY_Pos;
pub const RCC_CR_PLL2RDY: u32 = RCC_CR_PLL2RDY_Msk;
pub const RCC_CR_PLL3ON_Pos: u32 = 28;
pub const RCC_CR_PLL3ON_Msk: u32 = 0x1 << RCC_CR_PLL3ON_Pos;
pub const RCC_CR_PLL3ON: u32 = RCC_CR_PLL3ON_Msk;
pub const RCC_CR_PLL3RDY_Pos: u32 = 29;
pub const RCC_CR_PLL3RDY_Msk: u32 = 0x1 << RCC_CR_PLL3RDY_Pos;
pub const RCC_CR_PLL3RDY: u32 = RCC_CR_PLL3RDY_Msk;
pub const RCC_HSICFGR_HSICAL_Pos: u32 = 0;
pub const RCC_HSICFGR_HSICAL_Msk: u32 = 0xFFF << RCC_HSICFGR_HSICAL_Pos;
pub const RCC_HSICFGR_HSICAL: u32 = RCC_HSICFGR_HSICAL_Msk;
pub const RCC_HSICFGR_HSICAL_0: u32 = 0x001 << RCC_HSICFGR_HSICAL_Pos;
pub const RCC_HSICFGR_HSICAL_1: u32 = 0x002 << RCC_HSICFGR_HSICAL_Pos;
pub const RCC_HSICFGR_HSICAL_2: u32 = 0x004 << RCC_HSICFGR_HSICAL_Pos;
pub const RCC_HSICFGR_HSICAL_3: u32 = 0x008 << RCC_HSICFGR_HSICAL_Pos;
pub const RCC_HSICFGR_HSICAL_4: u32 = 0x010 << RCC_HSICFGR_HSICAL_Pos;
pub const RCC_HSICFGR_HSICAL_5: u32 = 0x020 << RCC_HSICFGR_HSICAL_Pos;
pub const RCC_HSICFGR_HSICAL_6: u32 = 0x040 << RCC_HSICFGR_HSICAL_Pos;
pub const RCC_HSICFGR_HSICAL_7: u32 = 0x080 << RCC_HSICFGR_HSICAL_Pos;
pub const RCC_HSICFGR_HSICAL_8: u32 = 0x100 << RCC_HSICFGR_HSICAL_Pos;
pub const RCC_HSICFGR_HSICAL_9: u32 = 0x200 << RCC_HSICFGR_HSICAL_Pos;
pub const RCC_HSICFGR_HSICAL_10: u32 = 0x400 << RCC_HSICFGR_HSICAL_Pos;
pub const RCC_HSICFGR_HSICAL_11: u32 = 0x800 << RCC_HSICFGR_HSICAL_Pos;
pub const RCC_HSICFGR_HSITRIM_Pos: u32 = 24;
pub const RCC_HSICFGR_HSITRIM_Msk: u32 = 0x7F << RCC_HSICFGR_HSITRIM_Pos;
pub const RCC_HSICFGR_HSITRIM: u32 = RCC_HSICFGR_HSITRIM_Msk;
pub const RCC_HSICFGR_HSITRIM_0: u32 = 0x01 << RCC_HSICFGR_HSITRIM_Pos;
pub const RCC_HSICFGR_HSITRIM_1: u32 = 0x02 << RCC_HSICFGR_HSITRIM_Pos;
pub const RCC_HSICFGR_HSITRIM_2: u32 = 0x04 << RCC_HSICFGR_HSITRIM_Pos;
pub const RCC_HSICFGR_HSITRIM_3: u32 = 0x08 << RCC_HSICFGR_HSITRIM_Pos;
pub const RCC_HSICFGR_HSITRIM_4: u32 = 0x10 << RCC_HSICFGR_HSITRIM_Pos;
pub const RCC_HSICFGR_HSITRIM_5: u32 = 0x20 << RCC_HSICFGR_HSITRIM_Pos;
pub const RCC_HSICFGR_HSITRIM_6: u32 = 0x40 << RCC_HSICFGR_HSITRIM_Pos;
pub const RCC_CRRCR_HSI48CAL_Pos: u32 = 0;
pub const RCC_CRRCR_HSI48CAL_Msk: u32 = 0x3FF << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL: u32 = RCC_CRRCR_HSI48CAL_Msk;
pub const RCC_CRRCR_HSI48CAL_0: u32 = 0x001 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL_1: u32 = 0x002 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL_2: u32 = 0x004 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL_3: u32 = 0x008 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL_4: u32 = 0x010 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL_5: u32 = 0x020 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL_6: u32 = 0x040 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL_7: u32 = 0x080 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL_8: u32 = 0x100 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL_9: u32 = 0x200 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CSICFGR_CSICAL_Pos: u32 = 0;
pub const RCC_CSICFGR_CSICAL_Msk: u32 = 0xFF << RCC_CSICFGR_CSICAL_Pos;
pub const RCC_CSICFGR_CSICAL: u32 = RCC_CSICFGR_CSICAL_Msk;
pub const RCC_CSICFGR_CSICAL_0: u32 = 0x01 << RCC_CSICFGR_CSICAL_Pos;
pub const RCC_CSICFGR_CSICAL_1: u32 = 0x02 << RCC_CSICFGR_CSICAL_Pos;
pub const RCC_CSICFGR_CSICAL_2: u32 = 0x04 << RCC_CSICFGR_CSICAL_Pos;
pub const RCC_CSICFGR_CSICAL_3: u32 = 0x08 << RCC_CSICFGR_CSICAL_Pos;
pub const RCC_CSICFGR_CSICAL_4: u32 = 0x10 << RCC_CSICFGR_CSICAL_Pos;
pub const RCC_CSICFGR_CSICAL_5: u32 = 0x20 << RCC_CSICFGR_CSICAL_Pos;
pub const RCC_CSICFGR_CSICAL_6: u32 = 0x40 << RCC_CSICFGR_CSICAL_Pos;
pub const RCC_CSICFGR_CSICAL_7: u32 = 0x80 << RCC_CSICFGR_CSICAL_Pos;
pub const RCC_CSICFGR_CSITRIM_Pos: u32 = 24;
pub const RCC_CSICFGR_CSITRIM_Msk: u32 = 0x3F << RCC_CSICFGR_CSITRIM_Pos;
pub const RCC_CSICFGR_CSITRIM: u32 = RCC_CSICFGR_CSITRIM_Msk;
pub const RCC_CSICFGR_CSITRIM_0: u32 = 0x01 << RCC_CSICFGR_CSITRIM_Pos;
pub const RCC_CSICFGR_CSITRIM_1: u32 = 0x02 << RCC_CSICFGR_CSITRIM_Pos;
pub const RCC_CSICFGR_CSITRIM_2: u32 = 0x04 << RCC_CSICFGR_CSITRIM_Pos;
pub const RCC_CSICFGR_CSITRIM_3: u32 = 0x08 << RCC_CSICFGR_CSITRIM_Pos;
pub const RCC_CSICFGR_CSITRIM_4: u32 = 0x10 << RCC_CSICFGR_CSITRIM_Pos;
pub const RCC_CSICFGR_CSITRIM_5: u32 = 0x20 << RCC_CSICFGR_CSITRIM_Pos;
pub const RCC_CFGR_SW_Pos: u32 = 0;
pub const RCC_CFGR_SW_Msk: u32 = 0x7 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SW: u32 = RCC_CFGR_SW_Msk;
pub const RCC_CFGR_SW_0: u32 = 0x1 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SW_1: u32 = 0x2 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SW_2: u32 = 0x4 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SWS_Pos: u32 = 3;
pub const RCC_CFGR_SWS_Msk: u32 = 0x7 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_SWS: u32 = RCC_CFGR_SWS_Msk;
pub const RCC_CFGR_SWS_0: u32 = 0x1 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_SWS_1: u32 = 0x2 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_SWS_2: u32 = 0x4 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_STOPWUCK_Pos: u32 = 6;
pub const RCC_CFGR_STOPWUCK_Msk: u32 = 0x1 << RCC_CFGR_STOPWUCK_Pos;
pub const RCC_CFGR_STOPWUCK: u32 = RCC_CFGR_STOPWUCK_Msk;
pub const RCC_CFGR_STOPKERWUCK_Pos: u32 = 7;
pub const RCC_CFGR_STOPKERWUCK_Msk: u32 = 0x1 << RCC_CFGR_STOPKERWUCK_Pos;
pub const RCC_CFGR_STOPKERWUCK: u32 = RCC_CFGR_STOPKERWUCK_Msk;
pub const RCC_CFGR_RTCPRE_Pos: u32 = 8;
pub const RCC_CFGR_RTCPRE_Msk: u32 = 0x3F << RCC_CFGR_RTCPRE_Pos;
pub const RCC_CFGR_RTCPRE: u32 = RCC_CFGR_RTCPRE_Msk;
pub const RCC_CFGR_RTCPRE_0: u32 = 0x01 << RCC_CFGR_RTCPRE_Pos;
pub const RCC_CFGR_RTCPRE_1: u32 = 0x02 << RCC_CFGR_RTCPRE_Pos;
pub const RCC_CFGR_RTCPRE_2: u32 = 0x04 << RCC_CFGR_RTCPRE_Pos;
pub const RCC_CFGR_RTCPRE_3: u32 = 0x08 << RCC_CFGR_RTCPRE_Pos;
pub const RCC_CFGR_RTCPRE_4: u32 = 0x10 << RCC_CFGR_RTCPRE_Pos;
pub const RCC_CFGR_RTCPRE_5: u32 = 0x20 << RCC_CFGR_RTCPRE_Pos;
pub const RCC_CFGR_TIMPRE_Pos: u32 = 15;
pub const RCC_CFGR_TIMPRE_Msk: u32 = 0x1 << RCC_CFGR_TIMPRE_Pos;
pub const RCC_CFGR_TIMPRE: u32 = RCC_CFGR_TIMPRE_Msk;
pub const RCC_CFGR_MCO1PRE_Pos: u32 = 18;
pub const RCC_CFGR_MCO1PRE_Msk: u32 = 0xF << RCC_CFGR_MCO1PRE_Pos;
pub const RCC_CFGR_MCO1PRE: u32 = RCC_CFGR_MCO1PRE_Msk;
pub const RCC_CFGR_MCO1PRE_0: u32 = 0x1 << RCC_CFGR_MCO1PRE_Pos;
pub const RCC_CFGR_MCO1PRE_1: u32 = 0x2 << RCC_CFGR_MCO1PRE_Pos;
pub const RCC_CFGR_MCO1PRE_2: u32 = 0x4 << RCC_CFGR_MCO1PRE_Pos;
pub const RCC_CFGR_MCO1PRE_3: u32 = 0x8 << RCC_CFGR_MCO1PRE_Pos;
pub const RCC_CFGR_MCO1SEL_Pos: u32 = 22;
pub const RCC_CFGR_MCO1SEL_Msk: u32 = 0x7 << RCC_CFGR_MCO1SEL_Pos;
pub const RCC_CFGR_MCO1SEL: u32 = RCC_CFGR_MCO1SEL_Msk;
pub const RCC_CFGR_MCO1SEL_0: u32 = 0x1 << RCC_CFGR_MCO1SEL_Pos;
pub const RCC_CFGR_MCO1SEL_1: u32 = 0x2 << RCC_CFGR_MCO1SEL_Pos;
pub const RCC_CFGR_MCO1SEL_2: u32 = 0x4 << RCC_CFGR_MCO1SEL_Pos;
pub const RCC_CFGR_MCO2PRE_Pos: u32 = 25;
pub const RCC_CFGR_MCO2PRE_Msk: u32 = 0xF << RCC_CFGR_MCO2PRE_Pos;
pub const RCC_CFGR_MCO2PRE: u32 = RCC_CFGR_MCO2PRE_Msk;
pub const RCC_CFGR_MCO2PRE_0: u32 = 0x1 << RCC_CFGR_MCO2PRE_Pos;
pub const RCC_CFGR_MCO2PRE_1: u32 = 0x2 << RCC_CFGR_MCO2PRE_Pos;
pub const RCC_CFGR_MCO2PRE_2: u32 = 0x4 << RCC_CFGR_MCO2PRE_Pos;
pub const RCC_CFGR_MCO2PRE_3: u32 = 0x8 << RCC_CFGR_MCO2PRE_Pos;
pub const RCC_CFGR_MCO2SEL_Pos: u32 = 29;
pub const RCC_CFGR_MCO2SEL_Msk: u32 = 0x7 << RCC_CFGR_MCO2SEL_Pos;
pub const RCC_CFGR_MCO2SEL: u32 = RCC_CFGR_MCO2SEL_Msk;
pub const RCC_CFGR_MCO2SEL_0: u32 = 0x1 << RCC_CFGR_MCO2SEL_Pos;
pub const RCC_CFGR_MCO2SEL_1: u32 = 0x2 << RCC_CFGR_MCO2SEL_Pos;
pub const RCC_CFGR_MCO2SEL_2: u32 = 0x4 << RCC_CFGR_MCO2SEL_Pos;
pub const RCC_CDCFGR_CPRE_Pos: u32 = 0;
pub const RCC_CDCFGR_CPRE_Msk: u32 = 0xF << RCC_CDCFGR_CPRE_Pos;
pub const RCC_CDCFGR_CPRE: u32 = RCC_CDCFGR_CPRE_Msk;
pub const RCC_CDCFGR_CPRE_0: u32 = 0x1 << RCC_CDCFGR_CPRE_Pos;
pub const RCC_CDCFGR_CPRE_1: u32 = 0x2 << RCC_CDCFGR_CPRE_Pos;
pub const RCC_CDCFGR_CPRE_2: u32 = 0x4 << RCC_CDCFGR_CPRE_Pos;
pub const RCC_CDCFGR_CPRE_3: u32 = 0x8 << RCC_CDCFGR_CPRE_Pos;
pub const RCC_BMCFGR_BMPRE_Pos: u32 = 0;
pub const RCC_BMCFGR_BMPRE_Msk: u32 = 0xF << RCC_BMCFGR_BMPRE_Pos;
pub const RCC_BMCFGR_BMPRE: u32 = RCC_BMCFGR_BMPRE_Msk;
pub const RCC_BMCFGR_BMPRE_0: u32 = 0x1 << RCC_BMCFGR_BMPRE_Pos;
pub const RCC_BMCFGR_BMPRE_1: u32 = 0x2 << RCC_BMCFGR_BMPRE_Pos;
pub const RCC_BMCFGR_BMPRE_2: u32 = 0x4 << RCC_BMCFGR_BMPRE_Pos;
pub const RCC_BMCFGR_BMPRE_3: u32 = 0x8 << RCC_BMCFGR_BMPRE_Pos;
pub const RCC_APBCFGR_PPRE1_Pos: u32 = 0;
pub const RCC_APBCFGR_PPRE1_Msk: u32 = 0x7 << RCC_APBCFGR_PPRE1_Pos;
pub const RCC_APBCFGR_PPRE1: u32 = RCC_APBCFGR_PPRE1_Msk;
pub const RCC_APBCFGR_PPRE1_0: u32 = 0x1 << RCC_APBCFGR_PPRE1_Pos;
pub const RCC_APBCFGR_PPRE1_1: u32 = 0x2 << RCC_APBCFGR_PPRE1_Pos;
pub const RCC_APBCFGR_PPRE1_2: u32 = 0x4 << RCC_APBCFGR_PPRE1_Pos;
pub const RCC_APBCFGR_PPRE2_Pos: u32 = 4;
pub const RCC_APBCFGR_PPRE2_Msk: u32 = 0x7 << RCC_APBCFGR_PPRE2_Pos;
pub const RCC_APBCFGR_PPRE2: u32 = RCC_APBCFGR_PPRE2_Msk;
pub const RCC_APBCFGR_PPRE2_0: u32 = 0x1 << RCC_APBCFGR_PPRE2_Pos;
pub const RCC_APBCFGR_PPRE2_1: u32 = 0x2 << RCC_APBCFGR_PPRE2_Pos;
pub const RCC_APBCFGR_PPRE2_2: u32 = 0x4 << RCC_APBCFGR_PPRE2_Pos;
pub const RCC_APBCFGR_PPRE4_Pos: u32 = 8;
pub const RCC_APBCFGR_PPRE4_Msk: u32 = 0x7 << RCC_APBCFGR_PPRE4_Pos;
pub const RCC_APBCFGR_PPRE4: u32 = RCC_APBCFGR_PPRE4_Msk;
pub const RCC_APBCFGR_PPRE4_0: u32 = 0x1 << RCC_APBCFGR_PPRE4_Pos;
pub const RCC_APBCFGR_PPRE4_1: u32 = 0x2 << RCC_APBCFGR_PPRE4_Pos;
pub const RCC_APBCFGR_PPRE4_2: u32 = 0x4 << RCC_APBCFGR_PPRE4_Pos;
pub const RCC_APBCFGR_PPRE5_Pos: u32 = 12;
pub const RCC_APBCFGR_PPRE5_Msk: u32 = 0x7 << RCC_APBCFGR_PPRE5_Pos;
pub const RCC_APBCFGR_PPRE5: u32 = RCC_APBCFGR_PPRE5_Msk;
pub const RCC_APBCFGR_PPRE5_0: u32 = 0x1 << RCC_APBCFGR_PPRE5_Pos;
pub const RCC_APBCFGR_PPRE5_1: u32 = 0x2 << RCC_APBCFGR_PPRE5_Pos;
pub const RCC_APBCFGR_PPRE5_2: u32 = 0x4 << RCC_APBCFGR_PPRE5_Pos;
pub const RCC_PLLCKSELR_PLLSRC_Pos: u32 = 0;
pub const RCC_PLLCKSELR_PLLSRC_Msk: u32 = 0x3 << RCC_PLLCKSELR_PLLSRC_Pos;
pub const RCC_PLLCKSELR_PLLSRC: u32 = RCC_PLLCKSELR_PLLSRC_Msk;
pub const RCC_PLLCKSELR_PLLSRC_0: u32 = 0x01 << RCC_PLLCKSELR_PLLSRC_Pos;
pub const RCC_PLLCKSELR_PLLSRC_1: u32 = 0x02 << RCC_PLLCKSELR_PLLSRC_Pos;
pub const RCC_PLLCKSELR_DIVM1_Pos: u32 = 4;
pub const RCC_PLLCKSELR_DIVM1_Msk: u32 = 0x3F << RCC_PLLCKSELR_DIVM1_Pos;
pub const RCC_PLLCKSELR_DIVM1: u32 = RCC_PLLCKSELR_DIVM1_Msk;
pub const RCC_PLLCKSELR_DIVM1_0: u32 = 0x01 << RCC_PLLCKSELR_DIVM1_Pos;
pub const RCC_PLLCKSELR_DIVM1_1: u32 = 0x02 << RCC_PLLCKSELR_DIVM1_Pos;
pub const RCC_PLLCKSELR_DIVM1_2: u32 = 0x04 << RCC_PLLCKSELR_DIVM1_Pos;
pub const RCC_PLLCKSELR_DIVM1_3: u32 = 0x08 << RCC_PLLCKSELR_DIVM1_Pos;
pub const RCC_PLLCKSELR_DIVM1_4: u32 = 0x10 << RCC_PLLCKSELR_DIVM1_Pos;
pub const RCC_PLLCKSELR_DIVM1_5: u32 = 0x20 << RCC_PLLCKSELR_DIVM1_Pos;
pub const RCC_PLLCKSELR_DIVM2_Pos: u32 = 12;
pub const RCC_PLLCKSELR_DIVM2_Msk: u32 = 0x3F << RCC_PLLCKSELR_DIVM2_Pos;
pub const RCC_PLLCKSELR_DIVM2: u32 = RCC_PLLCKSELR_DIVM2_Msk;
pub const RCC_PLLCKSELR_DIVM2_0: u32 = 0x01 << RCC_PLLCKSELR_DIVM2_Pos;
pub const RCC_PLLCKSELR_DIVM2_1: u32 = 0x02 << RCC_PLLCKSELR_DIVM2_Pos;
pub const RCC_PLLCKSELR_DIVM2_2: u32 = 0x04 << RCC_PLLCKSELR_DIVM2_Pos;
pub const RCC_PLLCKSELR_DIVM2_3: u32 = 0x08 << RCC_PLLCKSELR_DIVM2_Pos;
pub const RCC_PLLCKSELR_DIVM2_4: u32 = 0x10 << RCC_PLLCKSELR_DIVM2_Pos;
pub const RCC_PLLCKSELR_DIVM2_5: u32 = 0x20 << RCC_PLLCKSELR_DIVM2_Pos;
pub const RCC_PLLCKSELR_DIVM3_Pos: u32 = 20;
pub const RCC_PLLCKSELR_DIVM3_Msk: u32 = 0x3F << RCC_PLLCKSELR_DIVM3_Pos;
pub const RCC_PLLCKSELR_DIVM3: u32 = RCC_PLLCKSELR_DIVM3_Msk;
pub const RCC_PLLCKSELR_DIVM3_0: u32 = 0x01 << RCC_PLLCKSELR_DIVM3_Pos;
pub const RCC_PLLCKSELR_DIVM3_1: u32 = 0x02 << RCC_PLLCKSELR_DIVM3_Pos;
pub const RCC_PLLCKSELR_DIVM3_2: u32 = 0x04 << RCC_PLLCKSELR_DIVM3_Pos;
pub const RCC_PLLCKSELR_DIVM3_3: u32 = 0x08 << RCC_PLLCKSELR_DIVM3_Pos;
pub const RCC_PLLCKSELR_DIVM3_4: u32 = 0x10 << RCC_PLLCKSELR_DIVM3_Pos;
pub const RCC_PLLCKSELR_DIVM3_5: u32 = 0x20 << RCC_PLLCKSELR_DIVM3_Pos;
pub const RCC_PLLCFGR_PLL1FRACEN_Pos: u32 = 0;
pub const RCC_PLLCFGR_PLL1FRACEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL1FRACEN_Pos;
pub const RCC_PLLCFGR_PLL1FRACEN: u32 = RCC_PLLCFGR_PLL1FRACEN_Msk;
pub const RCC_PLLCFGR_PLL1VCOSEL_Pos: u32 = 1;
pub const RCC_PLLCFGR_PLL1VCOSEL_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL1VCOSEL_Pos;
pub const RCC_PLLCFGR_PLL1VCOSEL: u32 = RCC_PLLCFGR_PLL1VCOSEL_Msk;
pub const RCC_PLLCFGR_PLL1SSCGEN_Pos: u32 = 2;
pub const RCC_PLLCFGR_PLL1SSCGEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL1SSCGEN_Pos;
pub const RCC_PLLCFGR_PLL1SSCGEN: u32 = RCC_PLLCFGR_PLL1SSCGEN_Msk;
pub const RCC_PLLCFGR_PLL1RGE_Pos: u32 = 3;
pub const RCC_PLLCFGR_PLL1RGE_Msk: u32 = 0x3 << RCC_PLLCFGR_PLL1RGE_Pos;
pub const RCC_PLLCFGR_PLL1RGE: u32 = RCC_PLLCFGR_PLL1RGE_Msk;
pub const RCC_PLLCFGR_PLL1RGE_0: u32 = 0x1 << RCC_PLLCFGR_PLL1RGE_Pos;
pub const RCC_PLLCFGR_PLL1RGE_1: u32 = 0x2 << RCC_PLLCFGR_PLL1RGE_Pos;
pub const RCC_PLLCFGR_PLL1PEN_Pos: u32 = 5;
pub const RCC_PLLCFGR_PLL1PEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL1PEN_Pos;
pub const RCC_PLLCFGR_PLL1PEN: u32 = RCC_PLLCFGR_PLL1PEN_Msk;
pub const RCC_PLLCFGR_PLL1QEN_Pos: u32 = 6;
pub const RCC_PLLCFGR_PLL1QEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL1QEN_Pos;
pub const RCC_PLLCFGR_PLL1QEN: u32 = RCC_PLLCFGR_PLL1QEN_Msk;
pub const RCC_PLLCFGR_PLL1REN_Pos: u32 = 7;
pub const RCC_PLLCFGR_PLL1REN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL1REN_Pos;
pub const RCC_PLLCFGR_PLL1REN: u32 = RCC_PLLCFGR_PLL1REN_Msk;
pub const RCC_PLLCFGR_PLL1SEN_Pos: u32 = 8;
pub const RCC_PLLCFGR_PLL1SEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL1SEN_Pos;
pub const RCC_PLLCFGR_PLL1SEN: u32 = RCC_PLLCFGR_PLL1SEN_Msk;
pub const RCC_PLLCFGR_PLL2FRACEN_Pos: u32 = 11;
pub const RCC_PLLCFGR_PLL2FRACEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL2FRACEN_Pos;
pub const RCC_PLLCFGR_PLL2FRACEN: u32 = RCC_PLLCFGR_PLL2FRACEN_Msk;
pub const RCC_PLLCFGR_PLL2VCOSEL_Pos: u32 = 12;
pub const RCC_PLLCFGR_PLL2VCOSEL_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL2VCOSEL_Pos;
pub const RCC_PLLCFGR_PLL2VCOSEL: u32 = RCC_PLLCFGR_PLL2VCOSEL_Msk;
pub const RCC_PLLCFGR_PLL2SSCGEN_Pos: u32 = 13;
pub const RCC_PLLCFGR_PLL2SSCGEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL2SSCGEN_Pos;
pub const RCC_PLLCFGR_PLL2SSCGEN: u32 = RCC_PLLCFGR_PLL2SSCGEN_Msk;
pub const RCC_PLLCFGR_PLL2RGE_Pos: u32 = 14;
pub const RCC_PLLCFGR_PLL2RGE_Msk: u32 = 0x3 << RCC_PLLCFGR_PLL2RGE_Pos;
pub const RCC_PLLCFGR_PLL2RGE: u32 = RCC_PLLCFGR_PLL2RGE_Msk;
pub const RCC_PLLCFGR_PLL2RGE_0: u32 = 0x1 << RCC_PLLCFGR_PLL2RGE_Pos;
pub const RCC_PLLCFGR_PLL2RGE_1: u32 = 0x2 << RCC_PLLCFGR_PLL2RGE_Pos;
pub const RCC_PLLCFGR_PLL2PEN_Pos: u32 = 16;
pub const RCC_PLLCFGR_PLL2PEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL2PEN_Pos;
pub const RCC_PLLCFGR_PLL2PEN: u32 = RCC_PLLCFGR_PLL2PEN_Msk;
pub const RCC_PLLCFGR_PLL2QEN_Pos: u32 = 17;
pub const RCC_PLLCFGR_PLL2QEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL2QEN_Pos;
pub const RCC_PLLCFGR_PLL2QEN: u32 = RCC_PLLCFGR_PLL2QEN_Msk;
pub const RCC_PLLCFGR_PLL2REN_Pos: u32 = 18;
pub const RCC_PLLCFGR_PLL2REN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL2REN_Pos;
pub const RCC_PLLCFGR_PLL2REN: u32 = RCC_PLLCFGR_PLL2REN_Msk;
pub const RCC_PLLCFGR_PLL2SEN_Pos: u32 = 19;
pub const RCC_PLLCFGR_PLL2SEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL2SEN_Pos;
pub const RCC_PLLCFGR_PLL2SEN: u32 = RCC_PLLCFGR_PLL2SEN_Msk;
pub const RCC_PLLCFGR_PLL2TEN_Pos: u32 = 20;
pub const RCC_PLLCFGR_PLL2TEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL2TEN_Pos;
pub const RCC_PLLCFGR_PLL2TEN: u32 = RCC_PLLCFGR_PLL2TEN_Msk;
pub const RCC_PLLCFGR_PLL3FRACEN_Pos: u32 = 22;
pub const RCC_PLLCFGR_PLL3FRACEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL3FRACEN_Pos;
pub const RCC_PLLCFGR_PLL3FRACEN: u32 = RCC_PLLCFGR_PLL3FRACEN_Msk;
pub const RCC_PLLCFGR_PLL3VCOSEL_Pos: u32 = 23;
pub const RCC_PLLCFGR_PLL3VCOSEL_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL3VCOSEL_Pos;
pub const RCC_PLLCFGR_PLL3VCOSEL: u32 = RCC_PLLCFGR_PLL3VCOSEL_Msk;
pub const RCC_PLLCFGR_PLL3SSCGEN_Pos: u32 = 24;
pub const RCC_PLLCFGR_PLL3SSCGEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL3SSCGEN_Pos;
pub const RCC_PLLCFGR_PLL3SSCGEN: u32 = RCC_PLLCFGR_PLL3SSCGEN_Msk;
pub const RCC_PLLCFGR_PLL3RGE_Pos: u32 = 25;
pub const RCC_PLLCFGR_PLL3RGE_Msk: u32 = 0x3 << RCC_PLLCFGR_PLL3RGE_Pos;
pub const RCC_PLLCFGR_PLL3RGE: u32 = RCC_PLLCFGR_PLL3RGE_Msk;
pub const RCC_PLLCFGR_PLL3RGE_0: u32 = 0x1 << RCC_PLLCFGR_PLL3RGE_Pos;
pub const RCC_PLLCFGR_PLL3RGE_1: u32 = 0x2 << RCC_PLLCFGR_PLL3RGE_Pos;
pub const RCC_PLLCFGR_PLL3PEN_Pos: u32 = 27;
pub const RCC_PLLCFGR_PLL3PEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL3PEN_Pos;
pub const RCC_PLLCFGR_PLL3PEN: u32 = RCC_PLLCFGR_PLL3PEN_Msk;
pub const RCC_PLLCFGR_PLL3QEN_Pos: u32 = 28;
pub const RCC_PLLCFGR_PLL3QEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL3QEN_Pos;
pub const RCC_PLLCFGR_PLL3QEN: u32 = RCC_PLLCFGR_PLL3QEN_Msk;
pub const RCC_PLLCFGR_PLL3REN_Pos: u32 = 29;
pub const RCC_PLLCFGR_PLL3REN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL3REN_Pos;
pub const RCC_PLLCFGR_PLL3REN: u32 = RCC_PLLCFGR_PLL3REN_Msk;
pub const RCC_PLLCFGR_PLL3SEN_Pos: u32 = 30;
pub const RCC_PLLCFGR_PLL3SEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLL3SEN_Pos;
pub const RCC_PLLCFGR_PLL3SEN: u32 = RCC_PLLCFGR_PLL3SEN_Msk;
pub const RCC_PLL1DIVR1_DIVN_Pos: u32 = 0;
pub const RCC_PLL1DIVR1_DIVN_Msk: u32 = 0x1FF << RCC_PLL1DIVR1_DIVN_Pos;
pub const RCC_PLL1DIVR1_DIVN: u32 = RCC_PLL1DIVR1_DIVN_Msk;
pub const RCC_PLL1DIVR1_DIVN_0: u32 = 0x001 << RCC_PLL1DIVR1_DIVN_Pos;
pub const RCC_PLL1DIVR1_DIVN_1: u32 = 0x002 << RCC_PLL1DIVR1_DIVN_Pos;
pub const RCC_PLL1DIVR1_DIVN_2: u32 = 0x004 << RCC_PLL1DIVR1_DIVN_Pos;
pub const RCC_PLL1DIVR1_DIVN_3: u32 = 0x008 << RCC_PLL1DIVR1_DIVN_Pos;
pub const RCC_PLL1DIVR1_DIVN_4: u32 = 0x010 << RCC_PLL1DIVR1_DIVN_Pos;
pub const RCC_PLL1DIVR1_DIVN_5: u32 = 0x020 << RCC_PLL1DIVR1_DIVN_Pos;
pub const RCC_PLL1DIVR1_DIVN_6: u32 = 0x040 << RCC_PLL1DIVR1_DIVN_Pos;
pub const RCC_PLL1DIVR1_DIVN_7: u32 = 0x080 << RCC_PLL1DIVR1_DIVN_Pos;
pub const RCC_PLL1DIVR1_DIVN_8: u32 = 0x100 << RCC_PLL1DIVR1_DIVN_Pos;
pub const RCC_PLL1DIVR1_DIVP_Pos: u32 = 9;
pub const RCC_PLL1DIVR1_DIVP_Msk: u32 = 0x7F << RCC_PLL1DIVR1_DIVP_Pos;
pub const RCC_PLL1DIVR1_DIVP: u32 = RCC_PLL1DIVR1_DIVP_Msk;
pub const RCC_PLL1DIVR1_DIVP_0: u32 = 0x001 << RCC_PLL1DIVR1_DIVP_Pos;
pub const RCC_PLL1DIVR1_DIVP_1: u32 = 0x002 << RCC_PLL1DIVR1_DIVP_Pos;
pub const RCC_PLL1DIVR1_DIVP_2: u32 = 0x004 << RCC_PLL1DIVR1_DIVP_Pos;
pub const RCC_PLL1DIVR1_DIVP_3: u32 = 0x008 << RCC_PLL1DIVR1_DIVP_Pos;
pub const RCC_PLL1DIVR1_DIVP_4: u32 = 0x010 << RCC_PLL1DIVR1_DIVP_Pos;
pub const RCC_PLL1DIVR1_DIVP_5: u32 = 0x020 << RCC_PLL1DIVR1_DIVP_Pos;
pub const RCC_PLL1DIVR1_DIVP_6: u32 = 0x040 << RCC_PLL1DIVR1_DIVP_Pos;
pub const RCC_PLL1DIVR1_DIVQ_Pos: u32 = 16;
pub const RCC_PLL1DIVR1_DIVQ_Msk: u32 = 0x7F << RCC_PLL1DIVR1_DIVQ_Pos;
pub const RCC_PLL1DIVR1_DIVQ: u32 = RCC_PLL1DIVR1_DIVQ_Msk;
pub const RCC_PLL1DIVR1_DIVQ_0: u32 = 0x001 << RCC_PLL1DIVR1_DIVQ_Pos;
pub const RCC_PLL1DIVR1_DIVQ_1: u32 = 0x002 << RCC_PLL1DIVR1_DIVQ_Pos;
pub const RCC_PLL1DIVR1_DIVQ_2: u32 = 0x004 << RCC_PLL1DIVR1_DIVQ_Pos;
pub const RCC_PLL1DIVR1_DIVQ_3: u32 = 0x008 << RCC_PLL1DIVR1_DIVQ_Pos;
pub const RCC_PLL1DIVR1_DIVQ_4: u32 = 0x010 << RCC_PLL1DIVR1_DIVQ_Pos;
pub const RCC_PLL1DIVR1_DIVQ_5: u32 = 0x020 << RCC_PLL1DIVR1_DIVQ_Pos;
pub const RCC_PLL1DIVR1_DIVQ_6: u32 = 0x040 << RCC_PLL1DIVR1_DIVQ_Pos;
pub const RCC_PLL1DIVR1_DIVR_Pos: u32 = 24;
pub const RCC_PLL1DIVR1_DIVR_Msk: u32 = 0x7F << RCC_PLL1DIVR1_DIVR_Pos;
pub const RCC_PLL1DIVR1_DIVR: u32 = RCC_PLL1DIVR1_DIVR_Msk;
pub const RCC_PLL1DIVR1_DIVR_0: u32 = 0x001 << RCC_PLL1DIVR1_DIVR_Pos;
pub const RCC_PLL1DIVR1_DIVR_1: u32 = 0x002 << RCC_PLL1DIVR1_DIVR_Pos;
pub const RCC_PLL1DIVR1_DIVR_2: u32 = 0x004 << RCC_PLL1DIVR1_DIVR_Pos;
pub const RCC_PLL1DIVR1_DIVR_3: u32 = 0x008 << RCC_PLL1DIVR1_DIVR_Pos;
pub const RCC_PLL1DIVR1_DIVR_4: u32 = 0x010 << RCC_PLL1DIVR1_DIVR_Pos;
pub const RCC_PLL1DIVR1_DIVR_5: u32 = 0x020 << RCC_PLL1DIVR1_DIVR_Pos;
pub const RCC_PLL1DIVR1_DIVR_6: u32 = 0x040 << RCC_PLL1DIVR1_DIVR_Pos;
pub const RCC_PLL1FRACR_FRACN_Pos: u32 = 3;
pub const RCC_PLL1FRACR_FRACN_Msk: u32 = 0x1FFF << RCC_PLL1FRACR_FRACN_Pos;
pub const RCC_PLL1FRACR_FRACN: u32 = RCC_PLL1FRACR_FRACN_Msk;
pub const RCC_PLL2DIVR1_DIVN_Pos: u32 = 0;
pub const RCC_PLL2DIVR1_DIVN_Msk: u32 = 0x1FF << RCC_PLL2DIVR1_DIVN_Pos;
pub const RCC_PLL2DIVR1_DIVN: u32 = RCC_PLL2DIVR1_DIVN_Msk;
pub const RCC_PLL2DIVR1_DIVN_0: u32 = 0x001 << RCC_PLL2DIVR1_DIVN_Pos;
pub const RCC_PLL2DIVR1_DIVN_1: u32 = 0x002 << RCC_PLL2DIVR1_DIVN_Pos;
pub const RCC_PLL2DIVR1_DIVN_2: u32 = 0x004 << RCC_PLL2DIVR1_DIVN_Pos;
pub const RCC_PLL2DIVR1_DIVN_3: u32 = 0x008 << RCC_PLL2DIVR1_DIVN_Pos;
pub const RCC_PLL2DIVR1_DIVN_4: u32 = 0x010 << RCC_PLL2DIVR1_DIVN_Pos;
pub const RCC_PLL2DIVR1_DIVN_5: u32 = 0x020 << RCC_PLL2DIVR1_DIVN_Pos;
pub const RCC_PLL2DIVR1_DIVN_6: u32 = 0x040 << RCC_PLL2DIVR1_DIVN_Pos;
pub const RCC_PLL2DIVR1_DIVN_7: u32 = 0x080 << RCC_PLL2DIVR1_DIVN_Pos;
pub const RCC_PLL2DIVR1_DIVN_8: u32 = 0x100 << RCC_PLL2DIVR1_DIVN_Pos;
pub const RCC_PLL2DIVR1_DIVP_Pos: u32 = 9;
pub const RCC_PLL2DIVR1_DIVP_Msk: u32 = 0x7F << RCC_PLL2DIVR1_DIVP_Pos;
pub const RCC_PLL2DIVR1_DIVP: u32 = RCC_PLL2DIVR1_DIVP_Msk;
pub const RCC_PLL2DIVR1_DIVP_0: u32 = 0x001 << RCC_PLL2DIVR1_DIVP_Pos;
pub const RCC_PLL2DIVR1_DIVP_1: u32 = 0x002 << RCC_PLL2DIVR1_DIVP_Pos;
pub const RCC_PLL2DIVR1_DIVP_2: u32 = 0x004 << RCC_PLL2DIVR1_DIVP_Pos;
pub const RCC_PLL2DIVR1_DIVP_3: u32 = 0x008 << RCC_PLL2DIVR1_DIVP_Pos;
pub const RCC_PLL2DIVR1_DIVP_4: u32 = 0x010 << RCC_PLL2DIVR1_DIVP_Pos;
pub const RCC_PLL2DIVR1_DIVP_5: u32 = 0x020 << RCC_PLL2DIVR1_DIVP_Pos;
pub const RCC_PLL2DIVR1_DIVP_6: u32 = 0x040 << RCC_PLL2DIVR1_DIVP_Pos;
pub const RCC_PLL2DIVR1_DIVQ_Pos: u32 = 16;
pub const RCC_PLL2DIVR1_DIVQ_Msk: u32 = 0x7F << RCC_PLL2DIVR1_DIVQ_Pos;
pub const RCC_PLL2DIVR1_DIVQ: u32 = RCC_PLL2DIVR1_DIVQ_Msk;
pub const RCC_PLL2DIVR1_DIVQ_0: u32 = 0x001 << RCC_PLL2DIVR1_DIVQ_Pos;
pub const RCC_PLL2DIVR1_DIVQ_1: u32 = 0x002 << RCC_PLL2DIVR1_DIVQ_Pos;
pub const RCC_PLL2DIVR1_DIVQ_2: u32 = 0x004 << RCC_PLL2DIVR1_DIVQ_Pos;
pub const RCC_PLL2DIVR1_DIVQ_3: u32 = 0x008 << RCC_PLL2DIVR1_DIVQ_Pos;
pub const RCC_PLL2DIVR1_DIVQ_4: u32 = 0x010 << RCC_PLL2DIVR1_DIVQ_Pos;
pub const RCC_PLL2DIVR1_DIVQ_5: u32 = 0x020 << RCC_PLL2DIVR1_DIVQ_Pos;
pub const RCC_PLL2DIVR1_DIVQ_6: u32 = 0x040 << RCC_PLL2DIVR1_DIVQ_Pos;
pub const RCC_PLL2DIVR1_DIVR_Pos: u32 = 24;
pub const RCC_PLL2DIVR1_DIVR_Msk: u32 = 0x7F << RCC_PLL2DIVR1_DIVR_Pos;
pub const RCC_PLL2DIVR1_DIVR: u32 = RCC_PLL2DIVR1_DIVR_Msk;
pub const RCC_PLL2DIVR1_DIVR_0: u32 = 0x001 << RCC_PLL2DIVR1_DIVR_Pos;
pub const RCC_PLL2DIVR1_DIVR_1: u32 = 0x002 << RCC_PLL2DIVR1_DIVR_Pos;
pub const RCC_PLL2DIVR1_DIVR_2: u32 = 0x004 << RCC_PLL2DIVR1_DIVR_Pos;
pub const RCC_PLL2DIVR1_DIVR_3: u32 = 0x008 << RCC_PLL2DIVR1_DIVR_Pos;
pub const RCC_PLL2DIVR1_DIVR_4: u32 = 0x010 << RCC_PLL2DIVR1_DIVR_Pos;
pub const RCC_PLL2DIVR1_DIVR_5: u32 = 0x020 << RCC_PLL2DIVR1_DIVR_Pos;
pub const RCC_PLL2DIVR1_DIVR_6: u32 = 0x040 << RCC_PLL2DIVR1_DIVR_Pos;
pub const RCC_PLL2FRACR_FRACN_Pos: u32 = 3;
pub const RCC_PLL2FRACR_FRACN_Msk: u32 = 0x1FFF << RCC_PLL2FRACR_FRACN_Pos;
pub const RCC_PLL2FRACR_FRACN: u32 = RCC_PLL2FRACR_FRACN_Msk;
pub const RCC_PLL3DIVR1_DIVN_Pos: u32 = 0;
pub const RCC_PLL3DIVR1_DIVN_Msk: u32 = 0x1FF << RCC_PLL3DIVR1_DIVN_Pos;
pub const RCC_PLL3DIVR1_DIVN: u32 = RCC_PLL3DIVR1_DIVN_Msk;
pub const RCC_PLL3DIVR1_DIVN_0: u32 = 0x001 << RCC_PLL3DIVR1_DIVN_Pos;
pub const RCC_PLL3DIVR1_DIVN_1: u32 = 0x002 << RCC_PLL3DIVR1_DIVN_Pos;
pub const RCC_PLL3DIVR1_DIVN_2: u32 = 0x004 << RCC_PLL3DIVR1_DIVN_Pos;
pub const RCC_PLL3DIVR1_DIVN_3: u32 = 0x008 << RCC_PLL3DIVR1_DIVN_Pos;
pub const RCC_PLL3DIVR1_DIVN_4: u32 = 0x010 << RCC_PLL3DIVR1_DIVN_Pos;
pub const RCC_PLL3DIVR1_DIVN_5: u32 = 0x020 << RCC_PLL3DIVR1_DIVN_Pos;
pub const RCC_PLL3DIVR1_DIVN_6: u32 = 0x040 << RCC_PLL3DIVR1_DIVN_Pos;
pub const RCC_PLL3DIVR1_DIVN_7: u32 = 0x080 << RCC_PLL3DIVR1_DIVN_Pos;
pub const RCC_PLL3DIVR1_DIVN_8: u32 = 0x100 << RCC_PLL3DIVR1_DIVN_Pos;
pub const RCC_PLL3DIVR1_DIVP_Pos: u32 = 9;
pub const RCC_PLL3DIVR1_DIVP_Msk: u32 = 0x7F << RCC_PLL3DIVR1_DIVP_Pos;
pub const RCC_PLL3DIVR1_DIVP: u32 = RCC_PLL3DIVR1_DIVP_Msk;
pub const RCC_PLL3DIVR1_DIVP_0: u32 = 0x001 << RCC_PLL3DIVR1_DIVP_Pos;
pub const RCC_PLL3DIVR1_DIVP_1: u32 = 0x002 << RCC_PLL3DIVR1_DIVP_Pos;
pub const RCC_PLL3DIVR1_DIVP_2: u32 = 0x004 << RCC_PLL3DIVR1_DIVP_Pos;
pub const RCC_PLL3DIVR1_DIVP_3: u32 = 0x008 << RCC_PLL3DIVR1_DIVP_Pos;
pub const RCC_PLL3DIVR1_DIVP_4: u32 = 0x010 << RCC_PLL3DIVR1_DIVP_Pos;
pub const RCC_PLL3DIVR1_DIVP_5: u32 = 0x020 << RCC_PLL3DIVR1_DIVP_Pos;
pub const RCC_PLL3DIVR1_DIVP_6: u32 = 0x040 << RCC_PLL3DIVR1_DIVP_Pos;
pub const RCC_PLL3DIVR1_DIVQ_Pos: u32 = 16;
pub const RCC_PLL3DIVR1_DIVQ_Msk: u32 = 0x7F << RCC_PLL3DIVR1_DIVQ_Pos;
pub const RCC_PLL3DIVR1_DIVQ: u32 = RCC_PLL3DIVR1_DIVQ_Msk;
pub const RCC_PLL3DIVR1_DIVQ_0: u32 = 0x001 << RCC_PLL3DIVR1_DIVQ_Pos;
pub const RCC_PLL3DIVR1_DIVQ_1: u32 = 0x002 << RCC_PLL3DIVR1_DIVQ_Pos;
pub const RCC_PLL3DIVR1_DIVQ_2: u32 = 0x004 << RCC_PLL3DIVR1_DIVQ_Pos;
pub const RCC_PLL3DIVR1_DIVQ_3: u32 = 0x008 << RCC_PLL3DIVR1_DIVQ_Pos;
pub const RCC_PLL3DIVR1_DIVQ_4: u32 = 0x010 << RCC_PLL3DIVR1_DIVQ_Pos;
pub const RCC_PLL3DIVR1_DIVQ_5: u32 = 0x020 << RCC_PLL3DIVR1_DIVQ_Pos;
pub const RCC_PLL3DIVR1_DIVQ_6: u32 = 0x040 << RCC_PLL3DIVR1_DIVQ_Pos;
pub const RCC_PLL3DIVR1_DIVR_Pos: u32 = 24;
pub const RCC_PLL3DIVR1_DIVR_Msk: u32 = 0x7F << RCC_PLL3DIVR1_DIVR_Pos;
pub const RCC_PLL3DIVR1_DIVR: u32 = RCC_PLL3DIVR1_DIVR_Msk;
pub const RCC_PLL3DIVR1_DIVR_0: u32 = 0x001 << RCC_PLL3DIVR1_DIVR_Pos;
pub const RCC_PLL3DIVR1_DIVR_1: u32 = 0x002 << RCC_PLL3DIVR1_DIVR_Pos;
pub const RCC_PLL3DIVR1_DIVR_2: u32 = 0x004 << RCC_PLL3DIVR1_DIVR_Pos;
pub const RCC_PLL3DIVR1_DIVR_3: u32 = 0x008 << RCC_PLL3DIVR1_DIVR_Pos;
pub const RCC_PLL3DIVR1_DIVR_4: u32 = 0x010 << RCC_PLL3DIVR1_DIVR_Pos;
pub const RCC_PLL3DIVR1_DIVR_5: u32 = 0x020 << RCC_PLL3DIVR1_DIVR_Pos;
pub const RCC_PLL3DIVR1_DIVR_6: u32 = 0x040 << RCC_PLL3DIVR1_DIVR_Pos;
pub const RCC_PLL3FRACR_FRACN_Pos: u32 = 3;
pub const RCC_PLL3FRACR_FRACN_Msk: u32 = 0x1FFF << RCC_PLL3FRACR_FRACN_Pos;
pub const RCC_PLL3FRACR_FRACN: u32 = RCC_PLL3FRACR_FRACN_Msk;
pub const RCC_CCIPR1_FMCSEL_Pos: u32 = 0;
pub const RCC_CCIPR1_FMCSEL_Msk: u32 = 0x3 << RCC_CCIPR1_FMCSEL_Pos;
pub const RCC_CCIPR1_FMCSEL: u32 = RCC_CCIPR1_FMCSEL_Msk;
pub const RCC_CCIPR1_FMCSEL_0: u32 = 0x1 << RCC_CCIPR1_FMCSEL_Pos;
pub const RCC_CCIPR1_FMCSEL_1: u32 = 0x2 << RCC_CCIPR1_FMCSEL_Pos;
pub const RCC_CCIPR1_SDMMC12SEL_Pos: u32 = 2;
pub const RCC_CCIPR1_SDMMC12SEL_Msk: u32 = 0x1 << RCC_CCIPR1_SDMMC12SEL_Pos;
pub const RCC_CCIPR1_SDMMC12SEL: u32 = RCC_CCIPR1_SDMMC12SEL_Msk;
pub const RCC_CCIPR1_XSPI1SEL_Pos: u32 = 4;
pub const RCC_CCIPR1_XSPI1SEL_Msk: u32 = 0x3 << RCC_CCIPR1_XSPI1SEL_Pos;
pub const RCC_CCIPR1_XSPI1SEL: u32 = RCC_CCIPR1_XSPI1SEL_Msk;
pub const RCC_CCIPR1_XSPI1SEL_0: u32 = 0x1 << RCC_CCIPR1_XSPI1SEL_Pos;
pub const RCC_CCIPR1_XSPI1SEL_1: u32 = 0x2 << RCC_CCIPR1_XSPI1SEL_Pos;
pub const RCC_CCIPR1_XSPI2SEL_Pos: u32 = 6;
pub const RCC_CCIPR1_XSPI2SEL_Msk: u32 = 0x3 << RCC_CCIPR1_XSPI2SEL_Pos;
pub const RCC_CCIPR1_XSPI2SEL: u32 = RCC_CCIPR1_XSPI2SEL_Msk;
pub const RCC_CCIPR1_XSPI2SEL_0: u32 = 0x1 << RCC_CCIPR1_XSPI2SEL_Pos;
pub const RCC_CCIPR1_XSPI2SEL_1: u32 = 0x2 << RCC_CCIPR1_XSPI2SEL_Pos;
pub const RCC_CCIPR1_USBREFCKSEL_Pos: u32 = 8;
pub const RCC_CCIPR1_USBREFCKSEL_Msk: u32 = 0xF << RCC_CCIPR1_USBREFCKSEL_Pos;
pub const RCC_CCIPR1_USBREFCKSEL: u32 = RCC_CCIPR1_USBREFCKSEL_Msk;
pub const RCC_CCIPR1_USBREFCKSEL_0: u32 = 0x1 << RCC_CCIPR1_USBREFCKSEL_Pos;
pub const RCC_CCIPR1_USBREFCKSEL_1: u32 = 0x2 << RCC_CCIPR1_USBREFCKSEL_Pos;
pub const RCC_CCIPR1_USBREFCKSEL_2: u32 = 0x4 << RCC_CCIPR1_USBREFCKSEL_Pos;
pub const RCC_CCIPR1_USBREFCKSEL_3: u32 = 0x8 << RCC_CCIPR1_USBREFCKSEL_Pos;
pub const RCC_CCIPR1_USBPHYCSEL_Pos: u32 = 12;
pub const RCC_CCIPR1_USBPHYCSEL_Msk: u32 = 0x3 << RCC_CCIPR1_USBPHYCSEL_Pos;
pub const RCC_CCIPR1_USBPHYCSEL: u32 = RCC_CCIPR1_USBPHYCSEL_Msk;
pub const RCC_CCIPR1_USBPHYCSEL_0: u32 = 0x1 << RCC_CCIPR1_USBPHYCSEL_Pos;
pub const RCC_CCIPR1_USBPHYCSEL_1: u32 = 0x2 << RCC_CCIPR1_USBPHYCSEL_Pos;
pub const RCC_CCIPR1_OTGFSSEL_Pos: u32 = 14;
pub const RCC_CCIPR1_OTGFSSEL_Msk: u32 = 0x3 << RCC_CCIPR1_OTGFSSEL_Pos;
pub const RCC_CCIPR1_OTGFSSEL: u32 = RCC_CCIPR1_OTGFSSEL_Msk;
pub const RCC_CCIPR1_OTGFSSEL_0: u32 = 0x1 << RCC_CCIPR1_OTGFSSEL_Pos;
pub const RCC_CCIPR1_OTGFSSEL_1: u32 = 0x2 << RCC_CCIPR1_OTGFSSEL_Pos;
pub const RCC_CCIPR1_ETH1REFCKSEL_Pos: u32 = 16;
pub const RCC_CCIPR1_ETH1REFCKSEL_Msk: u32 = 0x3 << RCC_CCIPR1_ETH1REFCKSEL_Pos;
pub const RCC_CCIPR1_ETH1REFCKSEL: u32 = RCC_CCIPR1_ETH1REFCKSEL_Msk;
pub const RCC_CCIPR1_ETH1REFCKSEL_0: u32 = 0x1 << RCC_CCIPR1_ETH1REFCKSEL_Pos;
pub const RCC_CCIPR1_ETH1REFCKSEL_1: u32 = 0x2 << RCC_CCIPR1_ETH1REFCKSEL_Pos;
pub const RCC_CCIPR1_ETH1PHYCKSEL_Pos: u32 = 18;
pub const RCC_CCIPR1_ETH1PHYCKSEL_Msk: u32 = 0x1 << RCC_CCIPR1_ETH1PHYCKSEL_Pos;
pub const RCC_CCIPR1_ETH1PHYCKSEL: u32 = RCC_CCIPR1_ETH1PHYCKSEL_Msk;
pub const RCC_CCIPR1_ADF1SEL_Pos: u32 = 20;
pub const RCC_CCIPR1_ADF1SEL_Msk: u32 = 0x7 << RCC_CCIPR1_ADF1SEL_Pos;
pub const RCC_CCIPR1_ADF1SEL: u32 = RCC_CCIPR1_ADF1SEL_Msk;
pub const RCC_CCIPR1_ADF1SEL_0: u32 = 0x1 << RCC_CCIPR1_ADF1SEL_Pos;
pub const RCC_CCIPR1_ADF1SEL_1: u32 = 0x2 << RCC_CCIPR1_ADF1SEL_Pos;
pub const RCC_CCIPR1_ADF1SEL_2: u32 = 0x4 << RCC_CCIPR1_ADF1SEL_Pos;
pub const RCC_CCIPR1_ADCSEL_Pos: u32 = 24;
pub const RCC_CCIPR1_ADCSEL_Msk: u32 = 0x3 << RCC_CCIPR1_ADCSEL_Pos;
pub const RCC_CCIPR1_ADCSEL: u32 = RCC_CCIPR1_ADCSEL_Msk;
pub const RCC_CCIPR1_ADCSEL_0: u32 = 0x1 << RCC_CCIPR1_ADCSEL_Pos;
pub const RCC_CCIPR1_ADCSEL_1: u32 = 0x2 << RCC_CCIPR1_ADCSEL_Pos;
pub const RCC_CCIPR1_PSSISEL_Pos: u32 = 27;
pub const RCC_CCIPR1_PSSISEL_Msk: u32 = 0x1 << RCC_CCIPR1_PSSISEL_Pos;
pub const RCC_CCIPR1_PSSISEL: u32 = RCC_CCIPR1_PSSISEL_Msk;
pub const RCC_CCIPR1_CKPERSEL_Pos: u32 = 28;
pub const RCC_CCIPR1_CKPERSEL_Msk: u32 = 0x3 << RCC_CCIPR1_CKPERSEL_Pos;
pub const RCC_CCIPR1_CKPERSEL: u32 = RCC_CCIPR1_CKPERSEL_Msk;
pub const RCC_CCIPR1_CKPERSEL_0: u32 = 0x1 << RCC_CCIPR1_CKPERSEL_Pos;
pub const RCC_CCIPR1_CKPERSEL_1: u32 = 0x2 << RCC_CCIPR1_CKPERSEL_Pos;
pub const RCC_CCIPR2_UART234578SEL_Pos: u32 = 0;
pub const RCC_CCIPR2_UART234578SEL_Msk: u32 = 0x7 << RCC_CCIPR2_UART234578SEL_Pos;
pub const RCC_CCIPR2_UART234578SEL: u32 = RCC_CCIPR2_UART234578SEL_Msk;
pub const RCC_CCIPR2_UART234578SEL_0: u32 = 0x1 << RCC_CCIPR2_UART234578SEL_Pos;
pub const RCC_CCIPR2_UART234578SEL_1: u32 = 0x2 << RCC_CCIPR2_UART234578SEL_Pos;
pub const RCC_CCIPR2_UART234578SEL_2: u32 = 0x4 << RCC_CCIPR2_UART234578SEL_Pos;
pub const RCC_CCIPR2_SPI23SEL_Pos: u32 = 4;
pub const RCC_CCIPR2_SPI23SEL_Msk: u32 = 0x7 << RCC_CCIPR2_SPI23SEL_Pos;
pub const RCC_CCIPR2_SPI23SEL: u32 = RCC_CCIPR2_SPI23SEL_Msk;
pub const RCC_CCIPR2_SPI23SEL_0: u32 = 0x1 << RCC_CCIPR2_SPI23SEL_Pos;
pub const RCC_CCIPR2_SPI23SEL_1: u32 = 0x2 << RCC_CCIPR2_SPI23SEL_Pos;
pub const RCC_CCIPR2_SPI23SEL_2: u32 = 0x4 << RCC_CCIPR2_SPI23SEL_Pos;
pub const RCC_CCIPR2_I2C23SEL_Pos: u32 = 8;
pub const RCC_CCIPR2_I2C23SEL_Msk: u32 = 0x3 << RCC_CCIPR2_I2C23SEL_Pos;
pub const RCC_CCIPR2_I2C23SEL: u32 = RCC_CCIPR2_I2C23SEL_Msk;
pub const RCC_CCIPR2_I2C23SEL_0: u32 = 0x1 << RCC_CCIPR2_I2C23SEL_Pos;
pub const RCC_CCIPR2_I2C23SEL_1: u32 = 0x2 << RCC_CCIPR2_I2C23SEL_Pos;
pub const RCC_CCIPR2_I2C1_I3C1SEL_Pos: u32 = 12;
pub const RCC_CCIPR2_I2C1_I3C1SEL_Msk: u32 = 0x3 << RCC_CCIPR2_I2C1_I3C1SEL_Pos;
pub const RCC_CCIPR2_I2C1_I3C1SEL: u32 = RCC_CCIPR2_I2C1_I3C1SEL_Msk;
pub const RCC_CCIPR2_I2C1_I3C1SEL_0: u32 = 0x1 << RCC_CCIPR2_I2C1_I3C1SEL_Pos;
pub const RCC_CCIPR2_I2C1_I3C1SEL_1: u32 = 0x2 << RCC_CCIPR2_I2C1_I3C1SEL_Pos;
pub const RCC_CCIPR2_LPTIM1SEL_Pos: u32 = 16;
pub const RCC_CCIPR2_LPTIM1SEL_Msk: u32 = 0x7 << RCC_CCIPR2_LPTIM1SEL_Pos;
pub const RCC_CCIPR2_LPTIM1SEL: u32 = RCC_CCIPR2_LPTIM1SEL_Msk;
pub const RCC_CCIPR2_LPTIM1SEL_0: u32 = 0x1 << RCC_CCIPR2_LPTIM1SEL_Pos;
pub const RCC_CCIPR2_LPTIM1SEL_1: u32 = 0x2 << RCC_CCIPR2_LPTIM1SEL_Pos;
pub const RCC_CCIPR2_LPTIM1SEL_2: u32 = 0x4 << RCC_CCIPR2_LPTIM1SEL_Pos;
pub const RCC_CCIPR2_FDCANSEL_Pos: u32 = 22;
pub const RCC_CCIPR2_FDCANSEL_Msk: u32 = 0x3 << RCC_CCIPR2_FDCANSEL_Pos;
pub const RCC_CCIPR2_FDCANSEL: u32 = RCC_CCIPR2_FDCANSEL_Msk;
pub const RCC_CCIPR2_FDCANSEL_0: u32 = 0x1 << RCC_CCIPR2_FDCANSEL_Pos;
pub const RCC_CCIPR2_FDCANSEL_1: u32 = 0x2 << RCC_CCIPR2_FDCANSEL_Pos;
pub const RCC_CCIPR2_SPDIFRXSEL_Pos: u32 = 24;
pub const RCC_CCIPR2_SPDIFRXSEL_Msk: u32 = 0x3 << RCC_CCIPR2_SPDIFRXSEL_Pos;
pub const RCC_CCIPR2_SPDIFRXSEL: u32 = RCC_CCIPR2_SPDIFRXSEL_Msk;
pub const RCC_CCIPR2_SPDIFRXSEL_0: u32 = 0x1 << RCC_CCIPR2_SPDIFRXSEL_Pos;
pub const RCC_CCIPR2_SPDIFRXSEL_1: u32 = 0x2 << RCC_CCIPR2_SPDIFRXSEL_Pos;
pub const RCC_CCIPR2_CECSEL_Pos: u32 = 28;
pub const RCC_CCIPR2_CECSEL_Msk: u32 = 0x3 << RCC_CCIPR2_CECSEL_Pos;
pub const RCC_CCIPR2_CECSEL: u32 = RCC_CCIPR2_CECSEL_Msk;
pub const RCC_CCIPR2_CECSEL_0: u32 = 0x1 << RCC_CCIPR2_CECSEL_Pos;
pub const RCC_CCIPR2_CECSEL_1: u32 = 0x2 << RCC_CCIPR2_CECSEL_Pos;
pub const RCC_CCIPR3_USART1SEL_Pos: u32 = 0;
pub const RCC_CCIPR3_USART1SEL_Msk: u32 = 0x7 << RCC_CCIPR3_USART1SEL_Pos;
pub const RCC_CCIPR3_USART1SEL: u32 = RCC_CCIPR3_USART1SEL_Msk;
pub const RCC_CCIPR3_USART1SEL_0: u32 = 0x1 << RCC_CCIPR3_USART1SEL_Pos;
pub const RCC_CCIPR3_USART1SEL_1: u32 = 0x2 << RCC_CCIPR3_USART1SEL_Pos;
pub const RCC_CCIPR3_USART1SEL_2: u32 = 0x4 << RCC_CCIPR3_USART1SEL_Pos;
pub const RCC_CCIPR3_SPI45SEL_Pos: u32 = 4;
pub const RCC_CCIPR3_SPI45SEL_Msk: u32 = 0x7 << RCC_CCIPR3_SPI45SEL_Pos;
pub const RCC_CCIPR3_SPI45SEL: u32 = RCC_CCIPR3_SPI45SEL_Msk;
pub const RCC_CCIPR3_SPI45SEL_0: u32 = 0x1 << RCC_CCIPR3_SPI45SEL_Pos;
pub const RCC_CCIPR3_SPI45SEL_1: u32 = 0x2 << RCC_CCIPR3_SPI45SEL_Pos;
pub const RCC_CCIPR3_SPI45SEL_2: u32 = 0x4 << RCC_CCIPR3_SPI45SEL_Pos;
pub const RCC_CCIPR3_SPI1SEL_Pos: u32 = 8;
pub const RCC_CCIPR3_SPI1SEL_Msk: u32 = 0x7 << RCC_CCIPR3_SPI1SEL_Pos;
pub const RCC_CCIPR3_SPI1SEL: u32 = RCC_CCIPR3_SPI1SEL_Msk;
pub const RCC_CCIPR3_SPI1SEL_0: u32 = 0x1 << RCC_CCIPR3_SPI1SEL_Pos;
pub const RCC_CCIPR3_SPI1SEL_1: u32 = 0x2 << RCC_CCIPR3_SPI1SEL_Pos;
pub const RCC_CCIPR3_SPI1SEL_2: u32 = 0x4 << RCC_CCIPR3_SPI1SEL_Pos;
pub const RCC_CCIPR3_SAI1SEL_Pos: u32 = 16;
pub const RCC_CCIPR3_SAI1SEL_Msk: u32 = 0x7 << RCC_CCIPR3_SAI1SEL_Pos;
pub const RCC_CCIPR3_SAI1SEL: u32 = RCC_CCIPR3_SAI1SEL_Msk;
pub const RCC_CCIPR3_SAI1SEL_0: u32 = 0x1 << RCC_CCIPR3_SAI1SEL_Pos;
pub const RCC_CCIPR3_SAI1SEL_1: u32 = 0x2 << RCC_CCIPR3_SAI1SEL_Pos;
pub const RCC_CCIPR3_SAI1SEL_2: u32 = 0x4 << RCC_CCIPR3_SAI1SEL_Pos;
pub const RCC_CCIPR3_SAI2SEL_Pos: u32 = 20;
pub const RCC_CCIPR3_SAI2SEL_Msk: u32 = 0x7 << RCC_CCIPR3_SAI2SEL_Pos;
pub const RCC_CCIPR3_SAI2SEL: u32 = RCC_CCIPR3_SAI2SEL_Msk;
pub const RCC_CCIPR3_SAI2SEL_0: u32 = 0x1 << RCC_CCIPR3_SAI2SEL_Pos;
pub const RCC_CCIPR3_SAI2SEL_1: u32 = 0x2 << RCC_CCIPR3_SAI2SEL_Pos;
pub const RCC_CCIPR3_SAI2SEL_2: u32 = 0x4 << RCC_CCIPR3_SAI2SEL_Pos;
pub const RCC_CCIPR4_LPUART1SEL_Pos: u32 = 0;
pub const RCC_CCIPR4_LPUART1SEL_Msk: u32 = 0x7 << RCC_CCIPR4_LPUART1SEL_Pos;
pub const RCC_CCIPR4_LPUART1SEL: u32 = RCC_CCIPR4_LPUART1SEL_Msk;
pub const RCC_CCIPR4_LPUART1SEL_0: u32 = 0x1 << RCC_CCIPR4_LPUART1SEL_Pos;
pub const RCC_CCIPR4_LPUART1SEL_1: u32 = 0x2 << RCC_CCIPR4_LPUART1SEL_Pos;
pub const RCC_CCIPR4_LPUART1SEL_2: u32 = 0x4 << RCC_CCIPR4_LPUART1SEL_Pos;
pub const RCC_CCIPR4_SPI6SEL_Pos: u32 = 4;
pub const RCC_CCIPR4_SPI6SEL_Msk: u32 = 0x7 << RCC_CCIPR4_SPI6SEL_Pos;
pub const RCC_CCIPR4_SPI6SEL: u32 = RCC_CCIPR4_SPI6SEL_Msk;
pub const RCC_CCIPR4_SPI6SEL_0: u32 = 0x1 << RCC_CCIPR4_SPI6SEL_Pos;
pub const RCC_CCIPR4_SPI6SEL_1: u32 = 0x2 << RCC_CCIPR4_SPI6SEL_Pos;
pub const RCC_CCIPR4_SPI6SEL_2: u32 = 0x4 << RCC_CCIPR4_SPI6SEL_Pos;
pub const RCC_CCIPR4_LPTIM23SEL_Pos: u32 = 8;
pub const RCC_CCIPR4_LPTIM23SEL_Msk: u32 = 0x7 << RCC_CCIPR4_LPTIM23SEL_Pos;
pub const RCC_CCIPR4_LPTIM23SEL: u32 = RCC_CCIPR4_LPTIM23SEL_Msk;
pub const RCC_CCIPR4_LPTIM23SEL_0: u32 = 0x1 << RCC_CCIPR4_LPTIM23SEL_Pos;
pub const RCC_CCIPR4_LPTIM23SEL_1: u32 = 0x2 << RCC_CCIPR4_LPTIM23SEL_Pos;
pub const RCC_CCIPR4_LPTIM23SEL_2: u32 = 0x4 << RCC_CCIPR4_LPTIM23SEL_Pos;
pub const RCC_CCIPR4_LPTIM45SEL_Pos: u32 = 12;
pub const RCC_CCIPR4_LPTIM45SEL_Msk: u32 = 0x7 << RCC_CCIPR4_LPTIM45SEL_Pos;
pub const RCC_CCIPR4_LPTIM45SEL: u32 = RCC_CCIPR4_LPTIM45SEL_Msk;
pub const RCC_CCIPR4_LPTIM45SEL_0: u32 = 0x1 << RCC_CCIPR4_LPTIM45SEL_Pos;
pub const RCC_CCIPR4_LPTIM45SEL_1: u32 = 0x2 << RCC_CCIPR4_LPTIM45SEL_Pos;
pub const RCC_CCIPR4_LPTIM45SEL_2: u32 = 0x4 << RCC_CCIPR4_LPTIM45SEL_Pos;
pub const RCC_CIER_LSIRDYIE_Pos: u32 = 0;
pub const RCC_CIER_LSIRDYIE_Msk: u32 = 0x1 << RCC_CIER_LSIRDYIE_Pos;
pub const RCC_CIER_LSIRDYIE: u32 = RCC_CIER_LSIRDYIE_Msk;
pub const RCC_CIER_LSERDYIE_Pos: u32 = 1;
pub const RCC_CIER_LSERDYIE_Msk: u32 = 0x1 << RCC_CIER_LSERDYIE_Pos;
pub const RCC_CIER_LSERDYIE: u32 = RCC_CIER_LSERDYIE_Msk;
pub const RCC_CIER_HSIRDYIE_Pos: u32 = 2;
pub const RCC_CIER_HSIRDYIE_Msk: u32 = 0x1 << RCC_CIER_HSIRDYIE_Pos;
pub const RCC_CIER_HSIRDYIE: u32 = RCC_CIER_HSIRDYIE_Msk;
pub const RCC_CIER_HSERDYIE_Pos: u32 = 3;
pub const RCC_CIER_HSERDYIE_Msk: u32 = 0x1 << RCC_CIER_HSERDYIE_Pos;
pub const RCC_CIER_HSERDYIE: u32 = RCC_CIER_HSERDYIE_Msk;
pub const RCC_CIER_CSIRDYIE_Pos: u32 = 4;
pub const RCC_CIER_CSIRDYIE_Msk: u32 = 0x1 << RCC_CIER_CSIRDYIE_Pos;
pub const RCC_CIER_CSIRDYIE: u32 = RCC_CIER_CSIRDYIE_Msk;
pub const RCC_CIER_HSI48RDYIE_Pos: u32 = 5;
pub const RCC_CIER_HSI48RDYIE_Msk: u32 = 0x1 << RCC_CIER_HSI48RDYIE_Pos;
pub const RCC_CIER_HSI48RDYIE: u32 = RCC_CIER_HSI48RDYIE_Msk;
pub const RCC_CIER_PLL1RDYIE_Pos: u32 = 6;
pub const RCC_CIER_PLL1RDYIE_Msk: u32 = 0x1 << RCC_CIER_PLL1RDYIE_Pos;
pub const RCC_CIER_PLL1RDYIE: u32 = RCC_CIER_PLL1RDYIE_Msk;
pub const RCC_CIER_PLL2RDYIE_Pos: u32 = 7;
pub const RCC_CIER_PLL2RDYIE_Msk: u32 = 0x1 << RCC_CIER_PLL2RDYIE_Pos;
pub const RCC_CIER_PLL2RDYIE: u32 = RCC_CIER_PLL2RDYIE_Msk;
pub const RCC_CIER_PLL3RDYIE_Pos: u32 = 8;
pub const RCC_CIER_PLL3RDYIE_Msk: u32 = 0x1 << RCC_CIER_PLL3RDYIE_Pos;
pub const RCC_CIER_PLL3RDYIE: u32 = RCC_CIER_PLL3RDYIE_Msk;
pub const RCC_CIER_LSECSSIE_Pos: u32 = 9;
pub const RCC_CIER_LSECSSIE_Msk: u32 = 0x1 << RCC_CIER_LSECSSIE_Pos;
pub const RCC_CIER_LSECSSIE: u32 = RCC_CIER_LSECSSIE_Msk;
pub const RCC_CIFR_LSIRDYF_Pos: u32 = 0;
pub const RCC_CIFR_LSIRDYF_Msk: u32 = 0x1 << RCC_CIFR_LSIRDYF_Pos;
pub const RCC_CIFR_LSIRDYF: u32 = RCC_CIFR_LSIRDYF_Msk;
pub const RCC_CIFR_LSERDYF_Pos: u32 = 1;
pub const RCC_CIFR_LSERDYF_Msk: u32 = 0x1 << RCC_CIFR_LSERDYF_Pos;
pub const RCC_CIFR_LSERDYF: u32 = RCC_CIFR_LSERDYF_Msk;
pub const RCC_CIFR_HSIRDYF_Pos: u32 = 2;
pub const RCC_CIFR_HSIRDYF_Msk: u32 = 0x1 << RCC_CIFR_HSIRDYF_Pos;
pub const RCC_CIFR_HSIRDYF: u32 = RCC_CIFR_HSIRDYF_Msk;
pub const RCC_CIFR_HSERDYF_Pos: u32 = 3;
pub const RCC_CIFR_HSERDYF_Msk: u32 = 0x1 << RCC_CIFR_HSERDYF_Pos;
pub const RCC_CIFR_HSERDYF: u32 = RCC_CIFR_HSERDYF_Msk;
pub const RCC_CIFR_CSIRDYF_Pos: u32 = 4;
pub const RCC_CIFR_CSIRDYF_Msk: u32 = 0x1 << RCC_CIFR_CSIRDYF_Pos;
pub const RCC_CIFR_CSIRDYF: u32 = RCC_CIFR_CSIRDYF_Msk;
pub const RCC_CIFR_HSI48RDYF_Pos: u32 = 5;
pub const RCC_CIFR_HSI48RDYF_Msk: u32 = 0x1 << RCC_CIFR_HSI48RDYF_Pos;
pub const RCC_CIFR_HSI48RDYF: u32 = RCC_CIFR_HSI48RDYF_Msk;
pub const RCC_CIFR_PLL1RDYF_Pos: u32 = 6;
pub const RCC_CIFR_PLL1RDYF_Msk: u32 = 0x1 << RCC_CIFR_PLL1RDYF_Pos;
pub const RCC_CIFR_PLL1RDYF: u32 = RCC_CIFR_PLL1RDYF_Msk;
pub const RCC_CIFR_PLL2RDYF_Pos: u32 = 7;
pub const RCC_CIFR_PLL2RDYF_Msk: u32 = 0x1 << RCC_CIFR_PLL2RDYF_Pos;
pub const RCC_CIFR_PLL2RDYF: u32 = RCC_CIFR_PLL2RDYF_Msk;
pub const RCC_CIFR_PLL3RDYF_Pos: u32 = 8;
pub const RCC_CIFR_PLL3RDYF_Msk: u32 = 0x1 << RCC_CIFR_PLL3RDYF_Pos;
pub const RCC_CIFR_PLL3RDYF: u32 = RCC_CIFR_PLL3RDYF_Msk;
pub const RCC_CIFR_LSECSSF_Pos: u32 = 9;
pub const RCC_CIFR_LSECSSF_Msk: u32 = 0x1 << RCC_CIFR_LSECSSF_Pos;
pub const RCC_CIFR_LSECSSF: u32 = RCC_CIFR_LSECSSF_Msk;
pub const RCC_CIFR_HSECSSF_Pos: u32 = 10;
pub const RCC_CIFR_HSECSSF_Msk: u32 = 0x1 << RCC_CIFR_HSECSSF_Pos;
pub const RCC_CIFR_HSECSSF: u32 = RCC_CIFR_HSECSSF_Msk;
pub const RCC_CICR_LSIRDYC_Pos: u32 = 0;
pub const RCC_CICR_LSIRDYC_Msk: u32 = 0x1 << RCC_CICR_LSIRDYC_Pos;
pub const RCC_CICR_LSIRDYC: u32 = RCC_CICR_LSIRDYC_Msk;
pub const RCC_CICR_LSERDYC_Pos: u32 = 1;
pub const RCC_CICR_LSERDYC_Msk: u32 = 0x1 << RCC_CICR_LSERDYC_Pos;
pub const RCC_CICR_LSERDYC: u32 = RCC_CICR_LSERDYC_Msk;
pub const RCC_CICR_HSIRDYC_Pos: u32 = 2;
pub const RCC_CICR_HSIRDYC_Msk: u32 = 0x1 << RCC_CICR_HSIRDYC_Pos;
pub const RCC_CICR_HSIRDYC: u32 = RCC_CICR_HSIRDYC_Msk;
pub const RCC_CICR_HSERDYC_Pos: u32 = 3;
pub const RCC_CICR_HSERDYC_Msk: u32 = 0x1 << RCC_CICR_HSERDYC_Pos;
pub const RCC_CICR_HSERDYC: u32 = RCC_CICR_HSERDYC_Msk;
pub const RCC_CICR_CSIRDYC_Pos: u32 = 4;
pub const RCC_CICR_CSIRDYC_Msk: u32 = 0x1 << RCC_CICR_CSIRDYC_Pos;
pub const RCC_CICR_CSIRDYC: u32 = RCC_CICR_CSIRDYC_Msk;
pub const RCC_CICR_HSI48RDYC_Pos: u32 = 5;
pub const RCC_CICR_HSI48RDYC_Msk: u32 = 0x1 << RCC_CICR_HSI48RDYC_Pos;
pub const RCC_CICR_HSI48RDYC: u32 = RCC_CICR_HSI48RDYC_Msk;
pub const RCC_CICR_PLL1RDYC_Pos: u32 = 6;
pub const RCC_CICR_PLL1RDYC_Msk: u32 = 0x1 << RCC_CICR_PLL1RDYC_Pos;
pub const RCC_CICR_PLL1RDYC: u32 = RCC_CICR_PLL1RDYC_Msk;
pub const RCC_CICR_PLL2RDYC_Pos: u32 = 7;
pub const RCC_CICR_PLL2RDYC_Msk: u32 = 0x1 << RCC_CICR_PLL2RDYC_Pos;
pub const RCC_CICR_PLL2RDYC: u32 = RCC_CICR_PLL2RDYC_Msk;
pub const RCC_CICR_PLL3RDYC_Pos: u32 = 8;
pub const RCC_CICR_PLL3RDYC_Msk: u32 = 0x1 << RCC_CICR_PLL3RDYC_Pos;
pub const RCC_CICR_PLL3RDYC: u32 = RCC_CICR_PLL3RDYC_Msk;
pub const RCC_CICR_LSECSSC_Pos: u32 = 9;
pub const RCC_CICR_LSECSSC_Msk: u32 = 0x1 << RCC_CICR_LSECSSC_Pos;
pub const RCC_CICR_LSECSSC: u32 = RCC_CICR_LSECSSC_Msk;
pub const RCC_CICR_HSECSSC_Pos: u32 = 10;
pub const RCC_CICR_HSECSSC_Msk: u32 = 0x1 << RCC_CICR_HSECSSC_Pos;
pub const RCC_CICR_HSECSSC: u32 = RCC_CICR_HSECSSC_Msk;
pub const RCC_BDCR_LSEON_Pos: u32 = 0;
pub const RCC_BDCR_LSEON_Msk: u32 = 0x1 << RCC_BDCR_LSEON_Pos;
pub const RCC_BDCR_LSEON: u32 = RCC_BDCR_LSEON_Msk;
pub const RCC_BDCR_LSERDY_Pos: u32 = 1;
pub const RCC_BDCR_LSERDY_Msk: u32 = 0x1 << RCC_BDCR_LSERDY_Pos;
pub const RCC_BDCR_LSERDY: u32 = RCC_BDCR_LSERDY_Msk;
pub const RCC_BDCR_LSEBYP_Pos: u32 = 2;
pub const RCC_BDCR_LSEBYP_Msk: u32 = 0x1 << RCC_BDCR_LSEBYP_Pos;
pub const RCC_BDCR_LSEBYP: u32 = RCC_BDCR_LSEBYP_Msk;
pub const RCC_BDCR_LSEDRV_Pos: u32 = 3;
pub const RCC_BDCR_LSEDRV_Msk: u32 = 0x3 << RCC_BDCR_LSEDRV_Pos;
pub const RCC_BDCR_LSEDRV: u32 = RCC_BDCR_LSEDRV_Msk;
pub const RCC_BDCR_LSEDRV_0: u32 = 0x1 << RCC_BDCR_LSEDRV_Pos;
pub const RCC_BDCR_LSEDRV_1: u32 = 0x2 << RCC_BDCR_LSEDRV_Pos;
pub const RCC_BDCR_LSECSSON_Pos: u32 = 5;
pub const RCC_BDCR_LSECSSON_Msk: u32 = 0x1 << RCC_BDCR_LSECSSON_Pos;
pub const RCC_BDCR_LSECSSON: u32 = RCC_BDCR_LSECSSON_Msk;
pub const RCC_BDCR_LSECSSD_Pos: u32 = 6;
pub const RCC_BDCR_LSECSSD_Msk: u32 = 0x1 << RCC_BDCR_LSECSSD_Pos;
pub const RCC_BDCR_LSECSSD: u32 = RCC_BDCR_LSECSSD_Msk;
pub const RCC_BDCR_LSEEXT_Pos: u32 = 7;
pub const RCC_BDCR_LSEEXT_Msk: u32 = 0x1 << RCC_BDCR_LSEEXT_Pos;
pub const RCC_BDCR_LSEEXT: u32 = RCC_BDCR_LSEEXT_Msk;
pub const RCC_BDCR_RTCSEL_Pos: u32 = 8;
pub const RCC_BDCR_RTCSEL_Msk: u32 = 0x3 << RCC_BDCR_RTCSEL_Pos;
pub const RCC_BDCR_RTCSEL: u32 = RCC_BDCR_RTCSEL_Msk;
pub const RCC_BDCR_RTCSEL_0: u32 = 0x1 << RCC_BDCR_RTCSEL_Pos;
pub const RCC_BDCR_RTCSEL_1: u32 = 0x2 << RCC_BDCR_RTCSEL_Pos;
pub const RCC_BDCR_LSECSSRA_Pos: u32 = 12;
pub const RCC_BDCR_LSECSSRA_Msk: u32 = 0x1 << RCC_BDCR_LSECSSRA_Pos;
pub const RCC_BDCR_LSECSSRA: u32 = RCC_BDCR_LSECSSRA_Msk;
pub const RCC_BDCR_RTCEN_Pos: u32 = 15;
pub const RCC_BDCR_RTCEN_Msk: u32 = 0x1 << RCC_BDCR_RTCEN_Pos;
pub const RCC_BDCR_RTCEN: u32 = RCC_BDCR_RTCEN_Msk;
pub const RCC_BDCR_VSWRST_Pos: u32 = 16;
pub const RCC_BDCR_VSWRST_Msk: u32 = 0x1 << RCC_BDCR_VSWRST_Pos;
pub const RCC_BDCR_VSWRST: u32 = RCC_BDCR_VSWRST_Msk;
pub const RCC_CSR_LSION_Pos: u32 = 0;
pub const RCC_CSR_LSION_Msk: u32 = 0x1 << RCC_CSR_LSION_Pos;
pub const RCC_CSR_LSION: u32 = RCC_CSR_LSION_Msk;
pub const RCC_CSR_LSIRDY_Pos: u32 = 1;
pub const RCC_CSR_LSIRDY_Msk: u32 = 0x1 << RCC_CSR_LSIRDY_Pos;
pub const RCC_CSR_LSIRDY: u32 = RCC_CSR_LSIRDY_Msk;
pub const RCC_AHB1RSTR_GPDMA1RST_Pos: u32 = 4;
pub const RCC_AHB1RSTR_GPDMA1RST_Msk: u32 = 0x1 << RCC_AHB1RSTR_GPDMA1RST_Pos;
pub const RCC_AHB1RSTR_GPDMA1RST: u32 = RCC_AHB1RSTR_GPDMA1RST_Msk;
pub const RCC_AHB1RSTR_ADC12RST_Pos: u32 = 5;
pub const RCC_AHB1RSTR_ADC12RST_Msk: u32 = 0x1 << RCC_AHB1RSTR_ADC12RST_Pos;
pub const RCC_AHB1RSTR_ADC12RST: u32 = RCC_AHB1RSTR_ADC12RST_Msk;
pub const RCC_AHB1RSTR_ETH1RST_Pos: u32 = 15;
pub const RCC_AHB1RSTR_ETH1RST_Msk: u32 = 0x1 << RCC_AHB1RSTR_ETH1RST_Pos;
pub const RCC_AHB1RSTR_ETH1RST: u32 = RCC_AHB1RSTR_ETH1RST_Msk;
pub const RCC_AHB1RSTR_OTGHSRST_Pos: u32 = 25;
pub const RCC_AHB1RSTR_OTGHSRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_OTGHSRST_Pos;
pub const RCC_AHB1RSTR_OTGHSRST: u32 = RCC_AHB1RSTR_OTGHSRST_Msk;
pub const RCC_AHB1RSTR_USBPHYCRST_Pos: u32 = 26;
pub const RCC_AHB1RSTR_USBPHYCRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_USBPHYCRST_Pos;
pub const RCC_AHB1RSTR_USBPHYCRST: u32 = RCC_AHB1RSTR_USBPHYCRST_Msk;
pub const RCC_AHB1RSTR_OTGFSRST_Pos: u32 = 27;
pub const RCC_AHB1RSTR_OTGFSRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_OTGFSRST_Pos;
pub const RCC_AHB1RSTR_OTGFSRST: u32 = RCC_AHB1RSTR_OTGFSRST_Msk;
pub const RCC_AHB1RSTR_ADF1RST_Pos: u32 = 31;
pub const RCC_AHB1RSTR_ADF1RST_Msk: u32 = 0x1 << RCC_AHB1RSTR_ADF1RST_Pos;
pub const RCC_AHB1RSTR_ADF1RST: u32 = RCC_AHB1RSTR_ADF1RST_Msk;
pub const RCC_AHB2RSTR_PSSIRST_Pos: u32 = 1;
pub const RCC_AHB2RSTR_PSSIRST_Msk: u32 = 0x1 << RCC_AHB2RSTR_PSSIRST_Pos;
pub const RCC_AHB2RSTR_PSSIRST: u32 = RCC_AHB2RSTR_PSSIRST_Msk;
pub const RCC_AHB2RSTR_SDMMC2RST_Pos: u32 = 9;
pub const RCC_AHB2RSTR_SDMMC2RST_Msk: u32 = 0x1 << RCC_AHB2RSTR_SDMMC2RST_Pos;
pub const RCC_AHB2RSTR_SDMMC2RST: u32 = RCC_AHB2RSTR_SDMMC2RST_Msk;
pub const RCC_AHB2RSTR_CORDICRST_Pos: u32 = 14;
pub const RCC_AHB2RSTR_CORDICRST_Msk: u32 = 0x1 << RCC_AHB2RSTR_CORDICRST_Pos;
pub const RCC_AHB2RSTR_CORDICRST: u32 = RCC_AHB2RSTR_CORDICRST_Msk;
pub const RCC_AHB3RSTR_RNGRST_Pos: u32 = 0;
pub const RCC_AHB3RSTR_RNGRST_Msk: u32 = 0x1 << RCC_AHB3RSTR_RNGRST_Pos;
pub const RCC_AHB3RSTR_RNGRST: u32 = RCC_AHB3RSTR_RNGRST_Msk;
pub const RCC_AHB3RSTR_HASHRST_Pos: u32 = 1;
pub const RCC_AHB3RSTR_HASHRST_Msk: u32 = 0x1 << RCC_AHB3RSTR_HASHRST_Pos;
pub const RCC_AHB3RSTR_HASHRST: u32 = RCC_AHB3RSTR_HASHRST_Msk;
pub const RCC_AHB3RSTR_CRYPRST_Pos: u32 = 2;
pub const RCC_AHB3RSTR_CRYPRST_Msk: u32 = 0x1 << RCC_AHB3RSTR_CRYPRST_Pos;
pub const RCC_AHB3RSTR_CRYPRST: u32 = RCC_AHB3RSTR_CRYPRST_Msk;
pub const RCC_AHB3RSTR_SAESRST_Pos: u32 = 4;
pub const RCC_AHB3RSTR_SAESRST_Msk: u32 = 0x1 << RCC_AHB3RSTR_SAESRST_Pos;
pub const RCC_AHB3RSTR_SAESRST: u32 = RCC_AHB3RSTR_SAESRST_Msk;
pub const RCC_AHB3RSTR_PKARST_Pos: u32 = 6;
pub const RCC_AHB3RSTR_PKARST_Msk: u32 = 0x1 << RCC_AHB3RSTR_PKARST_Pos;
pub const RCC_AHB3RSTR_PKARST: u32 = RCC_AHB3RSTR_PKARST_Msk;
pub const RCC_AHB4RSTR_GPIOARST_Pos: u32 = 0;
pub const RCC_AHB4RSTR_GPIOARST_Msk: u32 = 0x1 << RCC_AHB4RSTR_GPIOARST_Pos;
pub const RCC_AHB4RSTR_GPIOARST: u32 = RCC_AHB4RSTR_GPIOARST_Msk;
pub const RCC_AHB4RSTR_GPIOBRST_Pos: u32 = 1;
pub const RCC_AHB4RSTR_GPIOBRST_Msk: u32 = 0x1 << RCC_AHB4RSTR_GPIOBRST_Pos;
pub const RCC_AHB4RSTR_GPIOBRST: u32 = RCC_AHB4RSTR_GPIOBRST_Msk;
pub const RCC_AHB4RSTR_GPIOCRST_Pos: u32 = 2;
pub const RCC_AHB4RSTR_GPIOCRST_Msk: u32 = 0x1 << RCC_AHB4RSTR_GPIOCRST_Pos;
pub const RCC_AHB4RSTR_GPIOCRST: u32 = RCC_AHB4RSTR_GPIOCRST_Msk;
pub const RCC_AHB4RSTR_GPIODRST_Pos: u32 = 3;
pub const RCC_AHB4RSTR_GPIODRST_Msk: u32 = 0x1 << RCC_AHB4RSTR_GPIODRST_Pos;
pub const RCC_AHB4RSTR_GPIODRST: u32 = RCC_AHB4RSTR_GPIODRST_Msk;
pub const RCC_AHB4RSTR_GPIOERST_Pos: u32 = 4;
pub const RCC_AHB4RSTR_GPIOERST_Msk: u32 = 0x1 << RCC_AHB4RSTR_GPIOERST_Pos;
pub const RCC_AHB4RSTR_GPIOERST: u32 = RCC_AHB4RSTR_GPIOERST_Msk;
pub const RCC_AHB4RSTR_GPIOFRST_Pos: u32 = 5;
pub const RCC_AHB4RSTR_GPIOFRST_Msk: u32 = 0x1 << RCC_AHB4RSTR_GPIOFRST_Pos;
pub const RCC_AHB4RSTR_GPIOFRST: u32 = RCC_AHB4RSTR_GPIOFRST_Msk;
pub const RCC_AHB4RSTR_GPIOGRST_Pos: u32 = 6;
pub const RCC_AHB4RSTR_GPIOGRST_Msk: u32 = 0x1 << RCC_AHB4RSTR_GPIOGRST_Pos;
pub const RCC_AHB4RSTR_GPIOGRST: u32 = RCC_AHB4RSTR_GPIOGRST_Msk;
pub const RCC_AHB4RSTR_GPIOHRST_Pos: u32 = 7;
pub const RCC_AHB4RSTR_GPIOHRST_Msk: u32 = 0x1 << RCC_AHB4RSTR_GPIOHRST_Pos;
pub const RCC_AHB4RSTR_GPIOHRST: u32 = RCC_AHB4RSTR_GPIOHRST_Msk;
pub const RCC_AHB4RSTR_GPIOMRST_Pos: u32 = 12;
pub const RCC_AHB4RSTR_GPIOMRST_Msk: u32 = 0x1 << RCC_AHB4RSTR_GPIOMRST_Pos;
pub const RCC_AHB4RSTR_GPIOMRST: u32 = RCC_AHB4RSTR_GPIOMRST_Msk;
pub const RCC_AHB4RSTR_GPIONRST_Pos: u32 = 13;
pub const RCC_AHB4RSTR_GPIONRST_Msk: u32 = 0x1 << RCC_AHB4RSTR_GPIONRST_Pos;
pub const RCC_AHB4RSTR_GPIONRST: u32 = RCC_AHB4RSTR_GPIONRST_Msk;
pub const RCC_AHB4RSTR_GPIOORST_Pos: u32 = 14;
pub const RCC_AHB4RSTR_GPIOORST_Msk: u32 = 0x1 << RCC_AHB4RSTR_GPIOORST_Pos;
pub const RCC_AHB4RSTR_GPIOORST: u32 = RCC_AHB4RSTR_GPIOORST_Msk;
pub const RCC_AHB4RSTR_GPIOPRST_Pos: u32 = 15;
pub const RCC_AHB4RSTR_GPIOPRST_Msk: u32 = 0x1 << RCC_AHB4RSTR_GPIOPRST_Pos;
pub const RCC_AHB4RSTR_GPIOPRST: u32 = RCC_AHB4RSTR_GPIOPRST_Msk;
pub const RCC_AHB4RSTR_CRCRST_Pos: u32 = 19;
pub const RCC_AHB4RSTR_CRCRST_Msk: u32 = 0x1 << RCC_AHB4RSTR_CRCRST_Pos;
pub const RCC_AHB4RSTR_CRCRST: u32 = RCC_AHB4RSTR_CRCRST_Msk;
pub const RCC_AHB5RSTR_HPDMA1RST_Pos: u32 = 0;
pub const RCC_AHB5RSTR_HPDMA1RST_Msk: u32 = 0x1 << RCC_AHB5RSTR_HPDMA1RST_Pos;
pub const RCC_AHB5RSTR_HPDMA1RST: u32 = RCC_AHB5RSTR_HPDMA1RST_Msk;
pub const RCC_AHB5RSTR_DMA2DRST_Pos: u32 = 1;
pub const RCC_AHB5RSTR_DMA2DRST_Msk: u32 = 0x1 << RCC_AHB5RSTR_DMA2DRST_Pos;
pub const RCC_AHB5RSTR_DMA2DRST: u32 = RCC_AHB5RSTR_DMA2DRST_Msk;
pub const RCC_AHB5RSTR_JPEGRST_Pos: u32 = 3;
pub const RCC_AHB5RSTR_JPEGRST_Msk: u32 = 0x1 << RCC_AHB5RSTR_JPEGRST_Pos;
pub const RCC_AHB5RSTR_JPEGRST: u32 = RCC_AHB5RSTR_JPEGRST_Msk;
pub const RCC_AHB5RSTR_FMCRST_Pos: u32 = 4;
pub const RCC_AHB5RSTR_FMCRST_Msk: u32 = 0x1 << RCC_AHB5RSTR_FMCRST_Pos;
pub const RCC_AHB5RSTR_FMCRST: u32 = RCC_AHB5RSTR_FMCRST_Msk;
pub const RCC_AHB5RSTR_XSPI1RST_Pos: u32 = 5;
pub const RCC_AHB5RSTR_XSPI1RST_Msk: u32 = 0x1 << RCC_AHB5RSTR_XSPI1RST_Pos;
pub const RCC_AHB5RSTR_XSPI1RST: u32 = RCC_AHB5RSTR_XSPI1RST_Msk;
pub const RCC_AHB5RSTR_SDMMC1RST_Pos: u32 = 8;
pub const RCC_AHB5RSTR_SDMMC1RST_Msk: u32 = 0x1 << RCC_AHB5RSTR_SDMMC1RST_Pos;
pub const RCC_AHB5RSTR_SDMMC1RST: u32 = RCC_AHB5RSTR_SDMMC1RST_Msk;
pub const RCC_AHB5RSTR_XSPI2RST_Pos: u32 = 12;
pub const RCC_AHB5RSTR_XSPI2RST_Msk: u32 = 0x1 << RCC_AHB5RSTR_XSPI2RST_Pos;
pub const RCC_AHB5RSTR_XSPI2RST: u32 = RCC_AHB5RSTR_XSPI2RST_Msk;
pub const RCC_AHB5RSTR_XSPIMRST_Pos: u32 = 14;
pub const RCC_AHB5RSTR_XSPIMRST_Msk: u32 = 0x1 << RCC_AHB5RSTR_XSPIMRST_Pos;
pub const RCC_AHB5RSTR_XSPIMRST: u32 = RCC_AHB5RSTR_XSPIMRST_Msk;
pub const RCC_AHB5RSTR_GFXMMURST_Pos: u32 = 19;
pub const RCC_AHB5RSTR_GFXMMURST_Msk: u32 = 0x1 << RCC_AHB5RSTR_GFXMMURST_Pos;
pub const RCC_AHB5RSTR_GFXMMURST: u32 = RCC_AHB5RSTR_GFXMMURST_Msk;
pub const RCC_AHB5RSTR_GPU2DRST_Pos: u32 = 20;
pub const RCC_AHB5RSTR_GPU2DRST_Msk: u32 = 0x1 << RCC_AHB5RSTR_GPU2DRST_Pos;
pub const RCC_AHB5RSTR_GPU2DRST: u32 = RCC_AHB5RSTR_GPU2DRST_Msk;
pub const RCC_APB1RSTR1_TIM2RST_Pos: u32 = 0;
pub const RCC_APB1RSTR1_TIM2RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_TIM2RST_Pos;
pub const RCC_APB1RSTR1_TIM2RST: u32 = RCC_APB1RSTR1_TIM2RST_Msk;
pub const RCC_APB1RSTR1_TIM3RST_Pos: u32 = 1;
pub const RCC_APB1RSTR1_TIM3RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_TIM3RST_Pos;
pub const RCC_APB1RSTR1_TIM3RST: u32 = RCC_APB1RSTR1_TIM3RST_Msk;
pub const RCC_APB1RSTR1_TIM4RST_Pos: u32 = 2;
pub const RCC_APB1RSTR1_TIM4RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_TIM4RST_Pos;
pub const RCC_APB1RSTR1_TIM4RST: u32 = RCC_APB1RSTR1_TIM4RST_Msk;
pub const RCC_APB1RSTR1_TIM5RST_Pos: u32 = 3;
pub const RCC_APB1RSTR1_TIM5RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_TIM5RST_Pos;
pub const RCC_APB1RSTR1_TIM5RST: u32 = RCC_APB1RSTR1_TIM5RST_Msk;
pub const RCC_APB1RSTR1_TIM6RST_Pos: u32 = 4;
pub const RCC_APB1RSTR1_TIM6RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_TIM6RST_Pos;
pub const RCC_APB1RSTR1_TIM6RST: u32 = RCC_APB1RSTR1_TIM6RST_Msk;
pub const RCC_APB1RSTR1_TIM7RST_Pos: u32 = 5;
pub const RCC_APB1RSTR1_TIM7RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_TIM7RST_Pos;
pub const RCC_APB1RSTR1_TIM7RST: u32 = RCC_APB1RSTR1_TIM7RST_Msk;
pub const RCC_APB1RSTR1_TIM12RST_Pos: u32 = 6;
pub const RCC_APB1RSTR1_TIM12RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_TIM12RST_Pos;
pub const RCC_APB1RSTR1_TIM12RST: u32 = RCC_APB1RSTR1_TIM12RST_Msk;
pub const RCC_APB1RSTR1_TIM13RST_Pos: u32 = 7;
pub const RCC_APB1RSTR1_TIM13RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_TIM13RST_Pos;
pub const RCC_APB1RSTR1_TIM13RST: u32 = RCC_APB1RSTR1_TIM13RST_Msk;
pub const RCC_APB1RSTR1_TIM14RST_Pos: u32 = 8;
pub const RCC_APB1RSTR1_TIM14RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_TIM14RST_Pos;
pub const RCC_APB1RSTR1_TIM14RST: u32 = RCC_APB1RSTR1_TIM14RST_Msk;
pub const RCC_APB1RSTR1_LPTIM1RST_Pos: u32 = 9;
pub const RCC_APB1RSTR1_LPTIM1RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_LPTIM1RST_Pos;
pub const RCC_APB1RSTR1_LPTIM1RST: u32 = RCC_APB1RSTR1_LPTIM1RST_Msk;
pub const RCC_APB1RSTR1_SPI2RST_Pos: u32 = 14;
pub const RCC_APB1RSTR1_SPI2RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_SPI2RST_Pos;
pub const RCC_APB1RSTR1_SPI2RST: u32 = RCC_APB1RSTR1_SPI2RST_Msk;
pub const RCC_APB1RSTR1_SPI3RST_Pos: u32 = 15;
pub const RCC_APB1RSTR1_SPI3RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_SPI3RST_Pos;
pub const RCC_APB1RSTR1_SPI3RST: u32 = RCC_APB1RSTR1_SPI3RST_Msk;
pub const RCC_APB1RSTR1_SPDIFRXRST_Pos: u32 = 16;
pub const RCC_APB1RSTR1_SPDIFRXRST_Msk: u32 = 0x1 << RCC_APB1RSTR1_SPDIFRXRST_Pos;
pub const RCC_APB1RSTR1_SPDIFRXRST: u32 = RCC_APB1RSTR1_SPDIFRXRST_Msk;
pub const RCC_APB1RSTR1_USART2RST_Pos: u32 = 17;
pub const RCC_APB1RSTR1_USART2RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_USART2RST_Pos;
pub const RCC_APB1RSTR1_USART2RST: u32 = RCC_APB1RSTR1_USART2RST_Msk;
pub const RCC_APB1RSTR1_USART3RST_Pos: u32 = 18;
pub const RCC_APB1RSTR1_USART3RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_USART3RST_Pos;
pub const RCC_APB1RSTR1_USART3RST: u32 = RCC_APB1RSTR1_USART3RST_Msk;
pub const RCC_APB1RSTR1_UART4RST_Pos: u32 = 19;
pub const RCC_APB1RSTR1_UART4RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_UART4RST_Pos;
pub const RCC_APB1RSTR1_UART4RST: u32 = RCC_APB1RSTR1_UART4RST_Msk;
pub const RCC_APB1RSTR1_UART5RST_Pos: u32 = 20;
pub const RCC_APB1RSTR1_UART5RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_UART5RST_Pos;
pub const RCC_APB1RSTR1_UART5RST: u32 = RCC_APB1RSTR1_UART5RST_Msk;
pub const RCC_APB1RSTR1_I2C1_I3C1RST_Pos: u32 = 21;
pub const RCC_APB1RSTR1_I2C1_I3C1RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_I2C1_I3C1RST_Pos;
pub const RCC_APB1RSTR1_I2C1_I3C1RST: u32 = RCC_APB1RSTR1_I2C1_I3C1RST_Msk;
pub const RCC_APB1RSTR1_I2C2RST_Pos: u32 = 22;
pub const RCC_APB1RSTR1_I2C2RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_I2C2RST_Pos;
pub const RCC_APB1RSTR1_I2C2RST: u32 = RCC_APB1RSTR1_I2C2RST_Msk;
pub const RCC_APB1RSTR1_I2C3RST_Pos: u32 = 23;
pub const RCC_APB1RSTR1_I2C3RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_I2C3RST_Pos;
pub const RCC_APB1RSTR1_I2C3RST: u32 = RCC_APB1RSTR1_I2C3RST_Msk;
pub const RCC_APB1RSTR1_CECRST_Pos: u32 = 27;
pub const RCC_APB1RSTR1_CECRST_Msk: u32 = 0x1 << RCC_APB1RSTR1_CECRST_Pos;
pub const RCC_APB1RSTR1_CECRST: u32 = RCC_APB1RSTR1_CECRST_Msk;
pub const RCC_APB1RSTR1_UART7RST_Pos: u32 = 30;
pub const RCC_APB1RSTR1_UART7RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_UART7RST_Pos;
pub const RCC_APB1RSTR1_UART7RST: u32 = RCC_APB1RSTR1_UART7RST_Msk;
pub const RCC_APB1RSTR1_UART8RST_Pos: u32 = 31;
pub const RCC_APB1RSTR1_UART8RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_UART8RST_Pos;
pub const RCC_APB1RSTR1_UART8RST: u32 = RCC_APB1RSTR1_UART8RST_Msk;
pub const RCC_APB1RSTR2_CRSRST_Pos: u32 = 1;
pub const RCC_APB1RSTR2_CRSRST_Msk: u32 = 0x1 << RCC_APB1RSTR2_CRSRST_Pos;
pub const RCC_APB1RSTR2_CRSRST: u32 = RCC_APB1RSTR2_CRSRST_Msk;
pub const RCC_APB1RSTR2_MDIOSRST_Pos: u32 = 5;
pub const RCC_APB1RSTR2_MDIOSRST_Msk: u32 = 0x1 << RCC_APB1RSTR2_MDIOSRST_Pos;
pub const RCC_APB1RSTR2_MDIOSRST: u32 = RCC_APB1RSTR2_MDIOSRST_Msk;
pub const RCC_APB1RSTR2_FDCANRST_Pos: u32 = 8;
pub const RCC_APB1RSTR2_FDCANRST_Msk: u32 = 0x1 << RCC_APB1RSTR2_FDCANRST_Pos;
pub const RCC_APB1RSTR2_FDCANRST: u32 = RCC_APB1RSTR2_FDCANRST_Msk;
pub const RCC_APB1RSTR2_UCPD1RST_Pos: u32 = 27;
pub const RCC_APB1RSTR2_UCPD1RST_Msk: u32 = 0x1 << RCC_APB1RSTR2_UCPD1RST_Pos;
pub const RCC_APB1RSTR2_UCPD1RST: u32 = RCC_APB1RSTR2_UCPD1RST_Msk;
pub const RCC_APB2RSTR_TIM1RST_Pos: u32 = 0;
pub const RCC_APB2RSTR_TIM1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM1RST_Pos;
pub const RCC_APB2RSTR_TIM1RST: u32 = RCC_APB2RSTR_TIM1RST_Msk;
pub const RCC_APB2RSTR_USART1RST_Pos: u32 = 4;
pub const RCC_APB2RSTR_USART1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_USART1RST_Pos;
pub const RCC_APB2RSTR_USART1RST: u32 = RCC_APB2RSTR_USART1RST_Msk;
pub const RCC_APB2RSTR_SPI1RST_Pos: u32 = 12;
pub const RCC_APB2RSTR_SPI1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_SPI1RST_Pos;
pub const RCC_APB2RSTR_SPI1RST: u32 = RCC_APB2RSTR_SPI1RST_Msk;
pub const RCC_APB2RSTR_SPI4RST_Pos: u32 = 13;
pub const RCC_APB2RSTR_SPI4RST_Msk: u32 = 0x1 << RCC_APB2RSTR_SPI4RST_Pos;
pub const RCC_APB2RSTR_SPI4RST: u32 = RCC_APB2RSTR_SPI4RST_Msk;
pub const RCC_APB2RSTR_TIM15RST_Pos: u32 = 16;
pub const RCC_APB2RSTR_TIM15RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM15RST_Pos;
pub const RCC_APB2RSTR_TIM15RST: u32 = RCC_APB2RSTR_TIM15RST_Msk;
pub const RCC_APB2RSTR_TIM16RST_Pos: u32 = 17;
pub const RCC_APB2RSTR_TIM16RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM16RST_Pos;
pub const RCC_APB2RSTR_TIM16RST: u32 = RCC_APB2RSTR_TIM16RST_Msk;
pub const RCC_APB2RSTR_TIM17RST_Pos: u32 = 18;
pub const RCC_APB2RSTR_TIM17RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM17RST_Pos;
pub const RCC_APB2RSTR_TIM17RST: u32 = RCC_APB2RSTR_TIM17RST_Msk;
pub const RCC_APB2RSTR_TIM9RST_Pos: u32 = 19;
pub const RCC_APB2RSTR_TIM9RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM9RST_Pos;
pub const RCC_APB2RSTR_TIM9RST: u32 = RCC_APB2RSTR_TIM9RST_Msk;
pub const RCC_APB2RSTR_SPI5RST_Pos: u32 = 20;
pub const RCC_APB2RSTR_SPI5RST_Msk: u32 = 0x1 << RCC_APB2RSTR_SPI5RST_Pos;
pub const RCC_APB2RSTR_SPI5RST: u32 = RCC_APB2RSTR_SPI5RST_Msk;
pub const RCC_APB2RSTR_SAI1RST_Pos: u32 = 22;
pub const RCC_APB2RSTR_SAI1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_SAI1RST_Pos;
pub const RCC_APB2RSTR_SAI1RST: u32 = RCC_APB2RSTR_SAI1RST_Msk;
pub const RCC_APB2RSTR_SAI2RST_Pos: u32 = 23;
pub const RCC_APB2RSTR_SAI2RST_Msk: u32 = 0x1 << RCC_APB2RSTR_SAI2RST_Pos;
pub const RCC_APB2RSTR_SAI2RST: u32 = RCC_APB2RSTR_SAI2RST_Msk;
pub const RCC_APB4RSTR_SBSRST_Pos: u32 = 1;
pub const RCC_APB4RSTR_SBSRST_Msk: u32 = 0x1 << RCC_APB4RSTR_SBSRST_Pos;
pub const RCC_APB4RSTR_SBSRST: u32 = RCC_APB4RSTR_SBSRST_Msk;
pub const RCC_APB4RSTR_LPUART1RST_Pos: u32 = 3;
pub const RCC_APB4RSTR_LPUART1RST_Msk: u32 = 0x1 << RCC_APB4RSTR_LPUART1RST_Pos;
pub const RCC_APB4RSTR_LPUART1RST: u32 = RCC_APB4RSTR_LPUART1RST_Msk;
pub const RCC_APB4RSTR_SPI6RST_Pos: u32 = 5;
pub const RCC_APB4RSTR_SPI6RST_Msk: u32 = 0x1 << RCC_APB4RSTR_SPI6RST_Pos;
pub const RCC_APB4RSTR_SPI6RST: u32 = RCC_APB4RSTR_SPI6RST_Msk;
pub const RCC_APB4RSTR_LPTIM2RST_Pos: u32 = 9;
pub const RCC_APB4RSTR_LPTIM2RST_Msk: u32 = 0x1 << RCC_APB4RSTR_LPTIM2RST_Pos;
pub const RCC_APB4RSTR_LPTIM2RST: u32 = RCC_APB4RSTR_LPTIM2RST_Msk;
pub const RCC_APB4RSTR_LPTIM3RST_Pos: u32 = 10;
pub const RCC_APB4RSTR_LPTIM3RST_Msk: u32 = 0x1 << RCC_APB4RSTR_LPTIM3RST_Pos;
pub const RCC_APB4RSTR_LPTIM3RST: u32 = RCC_APB4RSTR_LPTIM3RST_Msk;
pub const RCC_APB4RSTR_LPTIM4RST_Pos: u32 = 11;
pub const RCC_APB4RSTR_LPTIM4RST_Msk: u32 = 0x1 << RCC_APB4RSTR_LPTIM4RST_Pos;
pub const RCC_APB4RSTR_LPTIM4RST: u32 = RCC_APB4RSTR_LPTIM4RST_Msk;
pub const RCC_APB4RSTR_LPTIM5RST_Pos: u32 = 12;
pub const RCC_APB4RSTR_LPTIM5RST_Msk: u32 = 0x1 << RCC_APB4RSTR_LPTIM5RST_Pos;
pub const RCC_APB4RSTR_LPTIM5RST: u32 = RCC_APB4RSTR_LPTIM5RST_Msk;
pub const RCC_APB4RSTR_VREFRST_Pos: u32 = 15;
pub const RCC_APB4RSTR_VREFRST_Msk: u32 = 0x1 << RCC_APB4RSTR_VREFRST_Pos;
pub const RCC_APB4RSTR_VREFRST: u32 = RCC_APB4RSTR_VREFRST_Msk;
pub const RCC_APB4RSTR_DTSRST_Pos: u32 = 26;
pub const RCC_APB4RSTR_DTSRST_Msk: u32 = 0x1 << RCC_APB4RSTR_DTSRST_Pos;
pub const RCC_APB4RSTR_DTSRST: u32 = RCC_APB4RSTR_DTSRST_Msk;
pub const RCC_APB5RSTR_LTDCRST_Pos: u32 = 1;
pub const RCC_APB5RSTR_LTDCRST_Msk: u32 = 0x1 << RCC_APB5RSTR_LTDCRST_Pos;
pub const RCC_APB5RSTR_LTDCRST: u32 = RCC_APB5RSTR_LTDCRST_Msk;
pub const RCC_APB5RSTR_DCMIPPRST_Pos: u32 = 2;
pub const RCC_APB5RSTR_DCMIPPRST_Msk: u32 = 0x1 << RCC_APB5RSTR_DCMIPPRST_Pos;
pub const RCC_APB5RSTR_DCMIPPRST: u32 = RCC_APB5RSTR_DCMIPPRST_Msk;
pub const RCC_APB5RSTR_GFXTIMRST_Pos: u32 = 4;
pub const RCC_APB5RSTR_GFXTIMRST_Msk: u32 = 0x1 << RCC_APB5RSTR_GFXTIMRST_Pos;
pub const RCC_APB5RSTR_GFXTIMRST: u32 = RCC_APB5RSTR_GFXTIMRST_Msk;
pub const RCC_CKGDISR_AXICKG_Pos: u32 = 0;
pub const RCC_CKGDISR_AXICKG_Msk: u32 = 0x1 << RCC_CKGDISR_AXICKG_Pos;
pub const RCC_CKGDISR_AXICKG: u32 = RCC_CKGDISR_AXICKG_Msk;
pub const RCC_CKGDISR_AHBMCKG_Pos: u32 = 1;
pub const RCC_CKGDISR_AHBMCKG_Msk: u32 = 0x1 << RCC_CKGDISR_AHBMCKG_Pos;
pub const RCC_CKGDISR_AHBMCKG: u32 = RCC_CKGDISR_AHBMCKG_Msk;
pub const RCC_CKGDISR_SDMMC1CKG_Pos: u32 = 2;
pub const RCC_CKGDISR_SDMMC1CKG_Msk: u32 = 0x1 << RCC_CKGDISR_SDMMC1CKG_Pos;
pub const RCC_CKGDISR_SDMMC1CKG: u32 = RCC_CKGDISR_SDMMC1CKG_Msk;
pub const RCC_CKGDISR_HPDMA1CKG_Pos: u32 = 3;
pub const RCC_CKGDISR_HPDMA1CKG_Msk: u32 = 0x1 << RCC_CKGDISR_HPDMA1CKG_Pos;
pub const RCC_CKGDISR_HPDMA1CKG: u32 = RCC_CKGDISR_HPDMA1CKG_Msk;
pub const RCC_CKGDISR_CPUCKG_Pos: u32 = 4;
pub const RCC_CKGDISR_CPUCKG_Msk: u32 = 0x1 << RCC_CKGDISR_CPUCKG_Pos;
pub const RCC_CKGDISR_CPUCKG: u32 = RCC_CKGDISR_CPUCKG_Msk;
pub const RCC_CKGDISR_GPU2DS0CKG_Pos: u32 = 5;
pub const RCC_CKGDISR_GPU2DS0CKG_Msk: u32 = 0x1 << RCC_CKGDISR_GPU2DS0CKG_Pos;
pub const RCC_CKGDISR_GPU2DS0CKG: u32 = RCC_CKGDISR_GPU2DS0CKG_Msk;
pub const RCC_CKGDISR_GPU2DS1CKG_Pos: u32 = 6;
pub const RCC_CKGDISR_GPU2DS1CKG_Msk: u32 = 0x1 << RCC_CKGDISR_GPU2DS1CKG_Pos;
pub const RCC_CKGDISR_GPU2DS1CKG: u32 = RCC_CKGDISR_GPU2DS1CKG_Msk;
pub const RCC_CKGDISR_GPU2DCLCKG_Pos: u32 = 7;
pub const RCC_CKGDISR_GPU2DCLCKG_Msk: u32 = 0x1 << RCC_CKGDISR_GPU2DCLCKG_Pos;
pub const RCC_CKGDISR_GPU2DCLCKG: u32 = RCC_CKGDISR_GPU2DCLCKG_Msk;
pub const RCC_CKGDISR_DCMIPPCKG_Pos: u32 = 8;
pub const RCC_CKGDISR_DCMIPPCKG_Msk: u32 = 0x1 << RCC_CKGDISR_DCMIPPCKG_Pos;
pub const RCC_CKGDISR_DCMIPPCKG: u32 = RCC_CKGDISR_DCMIPPCKG_Msk;
pub const RCC_CKGDISR_DMA2DCKG_Pos: u32 = 9;
pub const RCC_CKGDISR_DMA2DCKG_Msk: u32 = 0x1 << RCC_CKGDISR_DMA2DCKG_Pos;
pub const RCC_CKGDISR_DMA2DCKG: u32 = RCC_CKGDISR_DMA2DCKG_Msk;
pub const RCC_CKGDISR_GFXMMUSCKG_Pos: u32 = 10;
pub const RCC_CKGDISR_GFXMMUSCKG_Msk: u32 = 0x1 << RCC_CKGDISR_GFXMMUSCKG_Pos;
pub const RCC_CKGDISR_GFXMMUSCKG: u32 = RCC_CKGDISR_GFXMMUSCKG_Msk;
pub const RCC_CKGDISR_LTDCCKG_Pos: u32 = 11;
pub const RCC_CKGDISR_LTDCCKG_Msk: u32 = 0x1 << RCC_CKGDISR_LTDCCKG_Pos;
pub const RCC_CKGDISR_LTDCCKG: u32 = RCC_CKGDISR_LTDCCKG_Msk;
pub const RCC_CKGDISR_GFXMMUMCKG_Pos: u32 = 12;
pub const RCC_CKGDISR_GFXMMUMCKG_Msk: u32 = 0x1 << RCC_CKGDISR_GFXMMUMCKG_Pos;
pub const RCC_CKGDISR_GFXMMUMCKG: u32 = RCC_CKGDISR_GFXMMUMCKG_Msk;
pub const RCC_CKGDISR_AHBSCKG_Pos: u32 = 13;
pub const RCC_CKGDISR_AHBSCKG_Msk: u32 = 0x1 << RCC_CKGDISR_AHBSCKG_Pos;
pub const RCC_CKGDISR_AHBSCKG: u32 = RCC_CKGDISR_AHBSCKG_Msk;
pub const RCC_CKGDISR_FMCCKG_Pos: u32 = 14;
pub const RCC_CKGDISR_FMCCKG_Msk: u32 = 0x1 << RCC_CKGDISR_FMCCKG_Pos;
pub const RCC_CKGDISR_FMCCKG: u32 = RCC_CKGDISR_FMCCKG_Msk;
pub const RCC_CKGDISR_XSPI1CKG_Pos: u32 = 15;
pub const RCC_CKGDISR_XSPI1CKG_Msk: u32 = 0x1 << RCC_CKGDISR_XSPI1CKG_Pos;
pub const RCC_CKGDISR_XSPI1CKG: u32 = RCC_CKGDISR_XSPI1CKG_Msk;
pub const RCC_CKGDISR_XSPI2CKG_Pos: u32 = 16;
pub const RCC_CKGDISR_XSPI2CKG_Msk: u32 = 0x1 << RCC_CKGDISR_XSPI2CKG_Pos;
pub const RCC_CKGDISR_XSPI2CKG: u32 = RCC_CKGDISR_XSPI2CKG_Msk;
pub const RCC_CKGDISR_AXISRAM4CKG_Pos: u32 = 17;
pub const RCC_CKGDISR_AXISRAM4CKG_Msk: u32 = 0x1 << RCC_CKGDISR_AXISRAM4CKG_Pos;
pub const RCC_CKGDISR_AXISRAM4CKG: u32 = RCC_CKGDISR_AXISRAM4CKG_Msk;
pub const RCC_CKGDISR_AXISRAM3CKG_Pos: u32 = 18;
pub const RCC_CKGDISR_AXISRAM3CKG_Msk: u32 = 0x1 << RCC_CKGDISR_AXISRAM3CKG_Pos;
pub const RCC_CKGDISR_AXISRAM3CKG: u32 = RCC_CKGDISR_AXISRAM3CKG_Msk;
pub const RCC_CKGDISR_AXISRAM2CKG_Pos: u32 = 19;
pub const RCC_CKGDISR_AXISRAM2CKG_Msk: u32 = 0x1 << RCC_CKGDISR_AXISRAM2CKG_Pos;
pub const RCC_CKGDISR_AXISRAM2CKG: u32 = RCC_CKGDISR_AXISRAM2CKG_Msk;
pub const RCC_CKGDISR_AXISRAM1CKG_Pos: u32 = 20;
pub const RCC_CKGDISR_AXISRAM1CKG_Msk: u32 = 0x1 << RCC_CKGDISR_AXISRAM1CKG_Pos;
pub const RCC_CKGDISR_AXISRAM1CKG: u32 = RCC_CKGDISR_AXISRAM1CKG_Msk;
pub const RCC_CKGDISR_FLASHCKG_Pos: u32 = 21;
pub const RCC_CKGDISR_FLASHCKG_Msk: u32 = 0x1 << RCC_CKGDISR_FLASHCKG_Pos;
pub const RCC_CKGDISR_FLASHCKG: u32 = RCC_CKGDISR_FLASHCKG_Msk;
pub const RCC_CKGDISR_EXTICKG_Pos: u32 = 30;
pub const RCC_CKGDISR_EXTICKG_Msk: u32 = 0x1 << RCC_CKGDISR_EXTICKG_Pos;
pub const RCC_CKGDISR_EXTICKG: u32 = RCC_CKGDISR_EXTICKG_Msk;
pub const RCC_CKGDISR_JTAGCKG_Pos: u32 = 31;
pub const RCC_CKGDISR_JTAGCKG_Msk: u32 = 0x1 << RCC_CKGDISR_JTAGCKG_Pos;
pub const RCC_CKGDISR_JTAGCKG: u32 = RCC_CKGDISR_JTAGCKG_Msk;
pub const RCC_PLL1DIVR2_DIVS_Pos: u32 = 0;
pub const RCC_PLL1DIVR2_DIVS_Msk: u32 = 0x7 << RCC_PLL1DIVR2_DIVS_Pos;
pub const RCC_PLL1DIVR2_DIVS: u32 = RCC_PLL1DIVR2_DIVS_Msk;
pub const RCC_PLL1DIVR2_DIVS_0: u32 = 0x1 << RCC_PLL1DIVR2_DIVS_Pos;
pub const RCC_PLL1DIVR2_DIVS_1: u32 = 0x2 << RCC_PLL1DIVR2_DIVS_Pos;
pub const RCC_PLL1DIVR2_DIVS_2: u32 = 0x4 << RCC_PLL1DIVR2_DIVS_Pos;
pub const RCC_PLL2DIVR2_DIVS_Pos: u32 = 0;
pub const RCC_PLL2DIVR2_DIVS_Msk: u32 = 0x7 << RCC_PLL2DIVR2_DIVS_Pos;
pub const RCC_PLL2DIVR2_DIVS: u32 = RCC_PLL2DIVR2_DIVS_Msk;
pub const RCC_PLL2DIVR2_DIVS_0: u32 = 0x1 << RCC_PLL2DIVR2_DIVS_Pos;
pub const RCC_PLL2DIVR2_DIVS_1: u32 = 0x2 << RCC_PLL2DIVR2_DIVS_Pos;
pub const RCC_PLL2DIVR2_DIVS_2: u32 = 0x4 << RCC_PLL2DIVR2_DIVS_Pos;
pub const RCC_PLL2DIVR2_DIVT_Pos: u32 = 8;
pub const RCC_PLL2DIVR2_DIVT_Msk: u32 = 0x7 << RCC_PLL2DIVR2_DIVT_Pos;
pub const RCC_PLL2DIVR2_DIVT: u32 = RCC_PLL2DIVR2_DIVT_Msk;
pub const RCC_PLL2DIVR2_DIVT_0: u32 = 0x1 << RCC_PLL2DIVR2_DIVT_Pos;
pub const RCC_PLL2DIVR2_DIVT_1: u32 = 0x2 << RCC_PLL2DIVR2_DIVT_Pos;
pub const RCC_PLL2DIVR2_DIVT_2: u32 = 0x4 << RCC_PLL2DIVR2_DIVT_Pos;
pub const RCC_PLL3DIVR2_DIVS_Pos: u32 = 0;
pub const RCC_PLL3DIVR2_DIVS_Msk: u32 = 0x7 << RCC_PLL3DIVR2_DIVS_Pos;
pub const RCC_PLL3DIVR2_DIVS: u32 = RCC_PLL3DIVR2_DIVS_Msk;
pub const RCC_PLL3DIVR2_DIVS_0: u32 = 0x1 << RCC_PLL3DIVR2_DIVS_Pos;
pub const RCC_PLL3DIVR2_DIVS_1: u32 = 0x2 << RCC_PLL3DIVR2_DIVS_Pos;
pub const RCC_PLL3DIVR2_DIVS_2: u32 = 0x4 << RCC_PLL3DIVR2_DIVS_Pos;
pub const RCC_PLL1SSCGR_MODPER_Pos: u32 = 0;
pub const RCC_PLL1SSCGR_MODPER_Msk: u32 = 0x1FFF << RCC_PLL1SSCGR_MODPER_Pos;
pub const RCC_PLL1SSCGR_MODPER: u32 = RCC_PLL1SSCGR_MODPER_Msk;
pub const RCC_PLL1SSCGR_MODPER_0: u32 = 0x0001 << RCC_PLL1SSCGR_MODPER_Pos;
pub const RCC_PLL1SSCGR_MODPER_1: u32 = 0x0002 << RCC_PLL1SSCGR_MODPER_Pos;
pub const RCC_PLL1SSCGR_MODPER_2: u32 = 0x0004 << RCC_PLL1SSCGR_MODPER_Pos;
pub const RCC_PLL1SSCGR_MODPER_3: u32 = 0x0008 << RCC_PLL1SSCGR_MODPER_Pos;
pub const RCC_PLL1SSCGR_MODPER_4: u32 = 0x0010 << RCC_PLL1SSCGR_MODPER_Pos;
pub const RCC_PLL1SSCGR_MODPER_5: u32 = 0x0020 << RCC_PLL1SSCGR_MODPER_Pos;
pub const RCC_PLL1SSCGR_MODPER_6: u32 = 0x0040 << RCC_PLL1SSCGR_MODPER_Pos;
pub const RCC_PLL1SSCGR_MODPER_7: u32 = 0x0080 << RCC_PLL1SSCGR_MODPER_Pos;
pub const RCC_PLL1SSCGR_MODPER_8: u32 = 0x0100 << RCC_PLL1SSCGR_MODPER_Pos;
pub const RCC_PLL1SSCGR_MODPER_9: u32 = 0x0200 << RCC_PLL1SSCGR_MODPER_Pos;
pub const RCC_PLL1SSCGR_MODPER_10: u32 = 0x0400 << RCC_PLL1SSCGR_MODPER_Pos;
pub const RCC_PLL1SSCGR_MODPER_11: u32 = 0x0800 << RCC_PLL1SSCGR_MODPER_Pos;
pub const RCC_PLL1SSCGR_MODPER_12: u32 = 0x1000 << RCC_PLL1SSCGR_MODPER_Pos;
pub const RCC_PLL1SSCGR_TPDFNDIS_Pos: u32 = 13;
pub const RCC_PLL1SSCGR_TPDFNDIS_Msk: u32 = 0x1 << RCC_PLL1SSCGR_TPDFNDIS_Pos;
pub const RCC_PLL1SSCGR_TPDFNDIS: u32 = RCC_PLL1SSCGR_TPDFNDIS_Msk;
pub const RCC_PLL1SSCGR_RPDFNDIS_Pos: u32 = 14;
pub const RCC_PLL1SSCGR_RPDFNDIS_Msk: u32 = 0x1 << RCC_PLL1SSCGR_RPDFNDIS_Pos;
pub const RCC_PLL1SSCGR_RPDFNDIS: u32 = RCC_PLL1SSCGR_RPDFNDIS_Msk;
pub const RCC_PLL1SSCGR_SPREADSEL_Pos: u32 = 15;
pub const RCC_PLL1SSCGR_SPREADSEL_Msk: u32 = 0x1 << RCC_PLL1SSCGR_SPREADSEL_Pos;
pub const RCC_PLL1SSCGR_SPREADSEL: u32 = RCC_PLL1SSCGR_SPREADSEL_Msk;
pub const RCC_PLL1SSCGR_INCSTEP_Pos: u32 = 16;
pub const RCC_PLL1SSCGR_INCSTEP_Msk: u32 = 0x7FFF << RCC_PLL1SSCGR_INCSTEP_Pos;
pub const RCC_PLL1SSCGR_INCSTEP: u32 = RCC_PLL1SSCGR_INCSTEP_Msk;
pub const RCC_PLL1SSCGR_INCSTEP_0: u32 = 0x0001 << RCC_PLL1SSCGR_INCSTEP_Pos;
pub const RCC_PLL1SSCGR_INCSTEP_1: u32 = 0x0002 << RCC_PLL1SSCGR_INCSTEP_Pos;
pub const RCC_PLL1SSCGR_INCSTEP_2: u32 = 0x0004 << RCC_PLL1SSCGR_INCSTEP_Pos;
pub const RCC_PLL1SSCGR_INCSTEP_3: u32 = 0x0008 << RCC_PLL1SSCGR_INCSTEP_Pos;
pub const RCC_PLL1SSCGR_INCSTEP_4: u32 = 0x0010 << RCC_PLL1SSCGR_INCSTEP_Pos;
pub const RCC_PLL1SSCGR_INCSTEP_5: u32 = 0x0020 << RCC_PLL1SSCGR_INCSTEP_Pos;
pub const RCC_PLL1SSCGR_INCSTEP_6: u32 = 0x0040 << RCC_PLL1SSCGR_INCSTEP_Pos;
pub const RCC_PLL1SSCGR_INCSTEP_7: u32 = 0x0080 << RCC_PLL1SSCGR_INCSTEP_Pos;
pub const RCC_PLL1SSCGR_INCSTEP_8: u32 = 0x0100 << RCC_PLL1SSCGR_INCSTEP_Pos;
pub const RCC_PLL1SSCGR_INCSTEP_9: u32 = 0x0200 << RCC_PLL1SSCGR_INCSTEP_Pos;
pub const RCC_PLL1SSCGR_INCSTEP_10: u32 = 0x0400 << RCC_PLL1SSCGR_INCSTEP_Pos;
pub const RCC_PLL1SSCGR_INCSTEP_11: u32 = 0x0800 << RCC_PLL1SSCGR_INCSTEP_Pos;
pub const RCC_PLL1SSCGR_INCSTEP_12: u32 = 0x1000 << RCC_PLL1SSCGR_INCSTEP_Pos;
pub const RCC_PLL1SSCGR_INCSTEP_13: u32 = 0x2000 << RCC_PLL1SSCGR_INCSTEP_Pos;
pub const RCC_PLL1SSCGR_INCSTEP_14: u32 = 0x4000 << RCC_PLL1SSCGR_INCSTEP_Pos;
pub const RCC_PLL2SSCGR_MODPER_Pos: u32 = 0;
pub const RCC_PLL2SSCGR_MODPER_Msk: u32 = 0x1FFF << RCC_PLL2SSCGR_MODPER_Pos;
pub const RCC_PLL2SSCGR_MODPER: u32 = RCC_PLL2SSCGR_MODPER_Msk;
pub const RCC_PLL2SSCGR_MODPER_0: u32 = 0x0001 << RCC_PLL2SSCGR_MODPER_Pos;
pub const RCC_PLL2SSCGR_MODPER_1: u32 = 0x0002 << RCC_PLL2SSCGR_MODPER_Pos;
pub const RCC_PLL2SSCGR_MODPER_2: u32 = 0x0004 << RCC_PLL2SSCGR_MODPER_Pos;
pub const RCC_PLL2SSCGR_MODPER_3: u32 = 0x0008 << RCC_PLL2SSCGR_MODPER_Pos;
pub const RCC_PLL2SSCGR_MODPER_4: u32 = 0x0010 << RCC_PLL2SSCGR_MODPER_Pos;
pub const RCC_PLL2SSCGR_MODPER_5: u32 = 0x0020 << RCC_PLL2SSCGR_MODPER_Pos;
pub const RCC_PLL2SSCGR_MODPER_6: u32 = 0x0040 << RCC_PLL2SSCGR_MODPER_Pos;
pub const RCC_PLL2SSCGR_MODPER_7: u32 = 0x0080 << RCC_PLL2SSCGR_MODPER_Pos;
pub const RCC_PLL2SSCGR_MODPER_8: u32 = 0x0100 << RCC_PLL2SSCGR_MODPER_Pos;
pub const RCC_PLL2SSCGR_MODPER_9: u32 = 0x0200 << RCC_PLL2SSCGR_MODPER_Pos;
pub const RCC_PLL2SSCGR_MODPER_10: u32 = 0x0400 << RCC_PLL2SSCGR_MODPER_Pos;
pub const RCC_PLL2SSCGR_MODPER_11: u32 = 0x0800 << RCC_PLL2SSCGR_MODPER_Pos;
pub const RCC_PLL2SSCGR_MODPER_12: u32 = 0x1000 << RCC_PLL2SSCGR_MODPER_Pos;
pub const RCC_PLL2SSCGR_TPDFNDIS_Pos: u32 = 13;
pub const RCC_PLL2SSCGR_TPDFNDIS_Msk: u32 = 0x1 << RCC_PLL2SSCGR_TPDFNDIS_Pos;
pub const RCC_PLL2SSCGR_TPDFNDIS: u32 = RCC_PLL2SSCGR_TPDFNDIS_Msk;
pub const RCC_PLL2SSCGR_RPDFNDIS_Pos: u32 = 14;
pub const RCC_PLL2SSCGR_RPDFNDIS_Msk: u32 = 0x1 << RCC_PLL2SSCGR_RPDFNDIS_Pos;
pub const RCC_PLL2SSCGR_RPDFNDIS: u32 = RCC_PLL2SSCGR_RPDFNDIS_Msk;
pub const RCC_PLL2SSCGR_SPREADSEL_Pos: u32 = 15;
pub const RCC_PLL2SSCGR_SPREADSEL_Msk: u32 = 0x1 << RCC_PLL2SSCGR_SPREADSEL_Pos;
pub const RCC_PLL2SSCGR_SPREADSEL: u32 = RCC_PLL2SSCGR_SPREADSEL_Msk;
pub const RCC_PLL2SSCGR_INCSTEP_Pos: u32 = 16;
pub const RCC_PLL2SSCGR_INCSTEP_Msk: u32 = 0x7FFF << RCC_PLL2SSCGR_INCSTEP_Pos;
pub const RCC_PLL2SSCGR_INCSTEP: u32 = RCC_PLL2SSCGR_INCSTEP_Msk;
pub const RCC_PLL2SSCGR_INCSTEP_0: u32 = 0x0001 << RCC_PLL2SSCGR_INCSTEP_Pos;
pub const RCC_PLL2SSCGR_INCSTEP_1: u32 = 0x0002 << RCC_PLL2SSCGR_INCSTEP_Pos;
pub const RCC_PLL2SSCGR_INCSTEP_2: u32 = 0x0004 << RCC_PLL2SSCGR_INCSTEP_Pos;
pub const RCC_PLL2SSCGR_INCSTEP_3: u32 = 0x0008 << RCC_PLL2SSCGR_INCSTEP_Pos;
pub const RCC_PLL2SSCGR_INCSTEP_4: u32 = 0x0010 << RCC_PLL2SSCGR_INCSTEP_Pos;
pub const RCC_PLL2SSCGR_INCSTEP_5: u32 = 0x0020 << RCC_PLL2SSCGR_INCSTEP_Pos;
pub const RCC_PLL2SSCGR_INCSTEP_6: u32 = 0x0040 << RCC_PLL2SSCGR_INCSTEP_Pos;
pub const RCC_PLL2SSCGR_INCSTEP_7: u32 = 0x0080 << RCC_PLL2SSCGR_INCSTEP_Pos;
pub const RCC_PLL2SSCGR_INCSTEP_8: u32 = 0x0100 << RCC_PLL2SSCGR_INCSTEP_Pos;
pub const RCC_PLL2SSCGR_INCSTEP_9: u32 = 0x0200 << RCC_PLL2SSCGR_INCSTEP_Pos;
pub const RCC_PLL2SSCGR_INCSTEP_10: u32 = 0x0400 << RCC_PLL2SSCGR_INCSTEP_Pos;
pub const RCC_PLL2SSCGR_INCSTEP_11: u32 = 0x0800 << RCC_PLL2SSCGR_INCSTEP_Pos;
pub const RCC_PLL2SSCGR_INCSTEP_12: u32 = 0x1000 << RCC_PLL2SSCGR_INCSTEP_Pos;
pub const RCC_PLL2SSCGR_INCSTEP_13: u32 = 0x2000 << RCC_PLL2SSCGR_INCSTEP_Pos;
pub const RCC_PLL2SSCGR_INCSTEP_14: u32 = 0x4000 << RCC_PLL2SSCGR_INCSTEP_Pos;
pub const RCC_PLL3SSCGR_MODPER_Pos: u32 = 0;
pub const RCC_PLL3SSCGR_MODPER_Msk: u32 = 0x1FFF << RCC_PLL3SSCGR_MODPER_Pos;
pub const RCC_PLL3SSCGR_MODPER: u32 = RCC_PLL3SSCGR_MODPER_Msk;
pub const RCC_PLL3SSCGR_MODPER_0: u32 = 0x0001 << RCC_PLL3SSCGR_MODPER_Pos;
pub const RCC_PLL3SSCGR_MODPER_1: u32 = 0x0002 << RCC_PLL3SSCGR_MODPER_Pos;
pub const RCC_PLL3SSCGR_MODPER_2: u32 = 0x0004 << RCC_PLL3SSCGR_MODPER_Pos;
pub const RCC_PLL3SSCGR_MODPER_3: u32 = 0x0008 << RCC_PLL3SSCGR_MODPER_Pos;
pub const RCC_PLL3SSCGR_MODPER_4: u32 = 0x0010 << RCC_PLL3SSCGR_MODPER_Pos;
pub const RCC_PLL3SSCGR_MODPER_5: u32 = 0x0020 << RCC_PLL3SSCGR_MODPER_Pos;
pub const RCC_PLL3SSCGR_MODPER_6: u32 = 0x0040 << RCC_PLL3SSCGR_MODPER_Pos;
pub const RCC_PLL3SSCGR_MODPER_7: u32 = 0x0080 << RCC_PLL3SSCGR_MODPER_Pos;
pub const RCC_PLL3SSCGR_MODPER_8: u32 = 0x0100 << RCC_PLL3SSCGR_MODPER_Pos;
pub const RCC_PLL3SSCGR_MODPER_9: u32 = 0x0200 << RCC_PLL3SSCGR_MODPER_Pos;
pub const RCC_PLL3SSCGR_MODPER_10: u32 = 0x0400 << RCC_PLL3SSCGR_MODPER_Pos;
pub const RCC_PLL3SSCGR_MODPER_11: u32 = 0x0800 << RCC_PLL3SSCGR_MODPER_Pos;
pub const RCC_PLL3SSCGR_MODPER_12: u32 = 0x1000 << RCC_PLL3SSCGR_MODPER_Pos;
pub const RCC_PLL3SSCGR_TPDFNDIS_Pos: u32 = 13;
pub const RCC_PLL3SSCGR_TPDFNDIS_Msk: u32 = 0x1 << RCC_PLL3SSCGR_TPDFNDIS_Pos;
pub const RCC_PLL3SSCGR_TPDFNDIS: u32 = RCC_PLL3SSCGR_TPDFNDIS_Msk;
pub const RCC_PLL3SSCGR_RPDFNDIS_Pos: u32 = 14;
pub const RCC_PLL3SSCGR_RPDFNDIS_Msk: u32 = 0x1 << RCC_PLL3SSCGR_RPDFNDIS_Pos;
pub const RCC_PLL3SSCGR_RPDFNDIS: u32 = RCC_PLL3SSCGR_RPDFNDIS_Msk;
pub const RCC_PLL3SSCGR_SPREADSEL_Pos: u32 = 15;
pub const RCC_PLL3SSCGR_SPREADSEL_Msk: u32 = 0x1 << RCC_PLL3SSCGR_SPREADSEL_Pos;
pub const RCC_PLL3SSCGR_SPREADSEL: u32 = RCC_PLL3SSCGR_SPREADSEL_Msk;
pub const RCC_PLL3SSCGR_INCSTEP_Pos: u32 = 16;
pub const RCC_PLL3SSCGR_INCSTEP_Msk: u32 = 0x7FFF << RCC_PLL3SSCGR_INCSTEP_Pos;
pub const RCC_PLL3SSCGR_INCSTEP: u32 = RCC_PLL3SSCGR_INCSTEP_Msk;
pub const RCC_PLL3SSCGR_INCSTEP_0: u32 = 0x0001 << RCC_PLL3SSCGR_INCSTEP_Pos;
pub const RCC_PLL3SSCGR_INCSTEP_1: u32 = 0x0002 << RCC_PLL3SSCGR_INCSTEP_Pos;
pub const RCC_PLL3SSCGR_INCSTEP_2: u32 = 0x0004 << RCC_PLL3SSCGR_INCSTEP_Pos;
pub const RCC_PLL3SSCGR_INCSTEP_3: u32 = 0x0008 << RCC_PLL3SSCGR_INCSTEP_Pos;
pub const RCC_PLL3SSCGR_INCSTEP_4: u32 = 0x0010 << RCC_PLL3SSCGR_INCSTEP_Pos;
pub const RCC_PLL3SSCGR_INCSTEP_5: u32 = 0x0020 << RCC_PLL3SSCGR_INCSTEP_Pos;
pub const RCC_PLL3SSCGR_INCSTEP_6: u32 = 0x0040 << RCC_PLL3SSCGR_INCSTEP_Pos;
pub const RCC_PLL3SSCGR_INCSTEP_7: u32 = 0x0080 << RCC_PLL3SSCGR_INCSTEP_Pos;
pub const RCC_PLL3SSCGR_INCSTEP_8: u32 = 0x0100 << RCC_PLL3SSCGR_INCSTEP_Pos;
pub const RCC_PLL3SSCGR_INCSTEP_9: u32 = 0x0200 << RCC_PLL3SSCGR_INCSTEP_Pos;
pub const RCC_PLL3SSCGR_INCSTEP_10: u32 = 0x0400 << RCC_PLL3SSCGR_INCSTEP_Pos;
pub const RCC_PLL3SSCGR_INCSTEP_11: u32 = 0x0800 << RCC_PLL3SSCGR_INCSTEP_Pos;
pub const RCC_PLL3SSCGR_INCSTEP_12: u32 = 0x1000 << RCC_PLL3SSCGR_INCSTEP_Pos;
pub const RCC_PLL3SSCGR_INCSTEP_13: u32 = 0x2000 << RCC_PLL3SSCGR_INCSTEP_Pos;
pub const RCC_PLL3SSCGR_INCSTEP_14: u32 = 0x4000 << RCC_PLL3SSCGR_INCSTEP_Pos;
pub const RCC_CKPROTR_XSPICKP_Pos: u32 = 0;
pub const RCC_CKPROTR_XSPICKP_Msk: u32 = 0x1 << RCC_CKPROTR_XSPICKP_Pos;
pub const RCC_CKPROTR_XSPICKP: u32 = RCC_CKPROTR_XSPICKP_Msk;
pub const RCC_CKPROTR_FMCCKP_Pos: u32 = 1;
pub const RCC_CKPROTR_FMCCKP_Msk: u32 = 0x1 << RCC_CKPROTR_FMCCKP_Pos;
pub const RCC_CKPROTR_FMCCKP: u32 = RCC_CKPROTR_FMCCKP_Msk;
pub const RCC_CKPROTR_XSPI1SWP_Pos: u32 = 4;
pub const RCC_CKPROTR_XSPI1SWP_Msk: u32 = 0x7 << RCC_CKPROTR_XSPI1SWP_Pos;
pub const RCC_CKPROTR_XSPI1SWP: u32 = RCC_CKPROTR_XSPI1SWP_Msk;
pub const RCC_CKPROTR_XSPI1SWP_0: u32 = 0x1 << RCC_CKPROTR_XSPI1SWP_Pos;
pub const RCC_CKPROTR_XSPI1SWP_1: u32 = 0x2 << RCC_CKPROTR_XSPI1SWP_Pos;
pub const RCC_CKPROTR_XSPI1SWP_2: u32 = 0x4 << RCC_CKPROTR_XSPI1SWP_Pos;
pub const RCC_CKPROTR_XSPI2SWP_Pos: u32 = 8;
pub const RCC_CKPROTR_XSPI2SWP_Msk: u32 = 0x7 << RCC_CKPROTR_XSPI2SWP_Pos;
pub const RCC_CKPROTR_XSPI2SWP: u32 = RCC_CKPROTR_XSPI2SWP_Msk;
pub const RCC_CKPROTR_XSPI2SWP_0: u32 = 0x1 << RCC_CKPROTR_XSPI2SWP_Pos;
pub const RCC_CKPROTR_XSPI2SWP_1: u32 = 0x2 << RCC_CKPROTR_XSPI2SWP_Pos;
pub const RCC_CKPROTR_XSPI2SWP_2: u32 = 0x4 << RCC_CKPROTR_XSPI2SWP_Pos;
pub const RCC_CKPROTR_FMCSWP_Pos: u32 = 12;
pub const RCC_CKPROTR_FMCSWP_Msk: u32 = 0x7 << RCC_CKPROTR_FMCSWP_Pos;
pub const RCC_CKPROTR_FMCSWP: u32 = RCC_CKPROTR_FMCSWP_Msk;
pub const RCC_CKPROTR_FMCSWP_0: u32 = 0x1 << RCC_CKPROTR_FMCSWP_Pos;
pub const RCC_CKPROTR_FMCSWP_1: u32 = 0x2 << RCC_CKPROTR_FMCSWP_Pos;
pub const RCC_CKPROTR_FMCSWP_2: u32 = 0x4 << RCC_CKPROTR_FMCSWP_Pos;
pub const RCC_RSR_RMVF_Pos: u32 = 16;
pub const RCC_RSR_RMVF_Msk: u32 = 0x1 << RCC_RSR_RMVF_Pos;
pub const RCC_RSR_RMVF: u32 = RCC_RSR_RMVF_Msk;
pub const RCC_RSR_OBLRSTF_Pos: u32 = 17;
pub const RCC_RSR_OBLRSTF_Msk: u32 = 0x1 << RCC_RSR_OBLRSTF_Pos;
pub const RCC_RSR_OBLRSTF: u32 = RCC_RSR_OBLRSTF_Msk;
pub const RCC_RSR_BORRSTF_Pos: u32 = 21;
pub const RCC_RSR_BORRSTF_Msk: u32 = 0x1 << RCC_RSR_BORRSTF_Pos;
pub const RCC_RSR_BORRSTF: u32 = RCC_RSR_BORRSTF_Msk;
pub const RCC_RSR_PINRSTF_Pos: u32 = 22;
pub const RCC_RSR_PINRSTF_Msk: u32 = 0x1 << RCC_RSR_PINRSTF_Pos;
pub const RCC_RSR_PINRSTF: u32 = RCC_RSR_PINRSTF_Msk;
pub const RCC_RSR_PORRSTF_Pos: u32 = 23;
pub const RCC_RSR_PORRSTF_Msk: u32 = 0x1 << RCC_RSR_PORRSTF_Pos;
pub const RCC_RSR_PORRSTF: u32 = RCC_RSR_PORRSTF_Msk;
pub const RCC_RSR_SFTRSTF_Pos: u32 = 24;
pub const RCC_RSR_SFTRSTF_Msk: u32 = 0x1 << RCC_RSR_SFTRSTF_Pos;
pub const RCC_RSR_SFTRSTF: u32 = RCC_RSR_SFTRSTF_Msk;
pub const RCC_RSR_IWDGRSTF_Pos: u32 = 26;
pub const RCC_RSR_IWDGRSTF_Msk: u32 = 0x1 << RCC_RSR_IWDGRSTF_Pos;
pub const RCC_RSR_IWDGRSTF: u32 = RCC_RSR_IWDGRSTF_Msk;
pub const RCC_RSR_WWDGRSTF_Pos: u32 = 28;
pub const RCC_RSR_WWDGRSTF_Msk: u32 = 0x1 << RCC_RSR_WWDGRSTF_Pos;
pub const RCC_RSR_WWDGRSTF: u32 = RCC_RSR_WWDGRSTF_Msk;
pub const RCC_RSR_LPWRRSTF_Pos: u32 = 30;
pub const RCC_RSR_LPWRRSTF_Msk: u32 = 0x1 << RCC_RSR_LPWRRSTF_Pos;
pub const RCC_RSR_LPWRRSTF: u32 = RCC_RSR_LPWRRSTF_Msk;
pub const RCC_AHB1ENR_GPDMA1EN_Pos: u32 = 4;
pub const RCC_AHB1ENR_GPDMA1EN_Msk: u32 = 0x1 << RCC_AHB1ENR_GPDMA1EN_Pos;
pub const RCC_AHB1ENR_GPDMA1EN: u32 = RCC_AHB1ENR_GPDMA1EN_Msk;
pub const RCC_AHB1ENR_ADC12EN_Pos: u32 = 5;
pub const RCC_AHB1ENR_ADC12EN_Msk: u32 = 0x1 << RCC_AHB1ENR_ADC12EN_Pos;
pub const RCC_AHB1ENR_ADC12EN: u32 = RCC_AHB1ENR_ADC12EN_Msk;
pub const RCC_AHB1ENR_ETH1MACEN_Pos: u32 = 15;
pub const RCC_AHB1ENR_ETH1MACEN_Msk: u32 = 0x1 << RCC_AHB1ENR_ETH1MACEN_Pos;
pub const RCC_AHB1ENR_ETH1MACEN: u32 = RCC_AHB1ENR_ETH1MACEN_Msk;
pub const RCC_AHB1ENR_ETH1TXEN_Pos: u32 = 16;
pub const RCC_AHB1ENR_ETH1TXEN_Msk: u32 = 0x1 << RCC_AHB1ENR_ETH1TXEN_Pos;
pub const RCC_AHB1ENR_ETH1TXEN: u32 = RCC_AHB1ENR_ETH1TXEN_Msk;
pub const RCC_AHB1ENR_ETH1RXEN_Pos: u32 = 17;
pub const RCC_AHB1ENR_ETH1RXEN_Msk: u32 = 0x1 << RCC_AHB1ENR_ETH1RXEN_Pos;
pub const RCC_AHB1ENR_ETH1RXEN: u32 = RCC_AHB1ENR_ETH1RXEN_Msk;
pub const RCC_AHB1ENR_OTGHSEN_Pos: u32 = 25;
pub const RCC_AHB1ENR_OTGHSEN_Msk: u32 = 0x1 << RCC_AHB1ENR_OTGHSEN_Pos;
pub const RCC_AHB1ENR_OTGHSEN: u32 = RCC_AHB1ENR_OTGHSEN_Msk;
pub const RCC_AHB1ENR_USBPHYCEN_Pos: u32 = 26;
pub const RCC_AHB1ENR_USBPHYCEN_Msk: u32 = 0x1 << RCC_AHB1ENR_USBPHYCEN_Pos;
pub const RCC_AHB1ENR_USBPHYCEN: u32 = RCC_AHB1ENR_USBPHYCEN_Msk;
pub const RCC_AHB1ENR_OTGFSEN_Pos: u32 = 27;
pub const RCC_AHB1ENR_OTGFSEN_Msk: u32 = 0x1 << RCC_AHB1ENR_OTGFSEN_Pos;
pub const RCC_AHB1ENR_OTGFSEN: u32 = RCC_AHB1ENR_OTGFSEN_Msk;
pub const RCC_AHB1ENR_ADF1EN_Pos: u32 = 31;
pub const RCC_AHB1ENR_ADF1EN_Msk: u32 = 0x1 << RCC_AHB1ENR_ADF1EN_Pos;
pub const RCC_AHB1ENR_ADF1EN: u32 = RCC_AHB1ENR_ADF1EN_Msk;
pub const RCC_AHB2ENR_PSSIEN_Pos: u32 = 1;
pub const RCC_AHB2ENR_PSSIEN_Msk: u32 = 0x1 << RCC_AHB2ENR_PSSIEN_Pos;
pub const RCC_AHB2ENR_PSSIEN: u32 = RCC_AHB2ENR_PSSIEN_Msk;
pub const RCC_AHB2ENR_SDMMC2EN_Pos: u32 = 9;
pub const RCC_AHB2ENR_SDMMC2EN_Msk: u32 = 0x1 << RCC_AHB2ENR_SDMMC2EN_Pos;
pub const RCC_AHB2ENR_SDMMC2EN: u32 = RCC_AHB2ENR_SDMMC2EN_Msk;
pub const RCC_AHB2ENR_CORDICEN_Pos: u32 = 14;
pub const RCC_AHB2ENR_CORDICEN_Msk: u32 = 0x1 << RCC_AHB2ENR_CORDICEN_Pos;
pub const RCC_AHB2ENR_CORDICEN: u32 = RCC_AHB2ENR_CORDICEN_Msk;
pub const RCC_AHB2ENR_SRAM1EN_Pos: u32 = 29;
pub const RCC_AHB2ENR_SRAM1EN_Msk: u32 = 0x1 << RCC_AHB2ENR_SRAM1EN_Pos;
pub const RCC_AHB2ENR_SRAM1EN: u32 = RCC_AHB2ENR_SRAM1EN_Msk;
pub const RCC_AHB2ENR_SRAM2EN_Pos: u32 = 30;
pub const RCC_AHB2ENR_SRAM2EN_Msk: u32 = 0x1 << RCC_AHB2ENR_SRAM2EN_Pos;
pub const RCC_AHB2ENR_SRAM2EN: u32 = RCC_AHB2ENR_SRAM2EN_Msk;
pub const RCC_AHB3ENR_RNGEN_Pos: u32 = 0;
pub const RCC_AHB3ENR_RNGEN_Msk: u32 = 0x1 << RCC_AHB3ENR_RNGEN_Pos;
pub const RCC_AHB3ENR_RNGEN: u32 = RCC_AHB3ENR_RNGEN_Msk;
pub const RCC_AHB3ENR_HASHEN_Pos: u32 = 1;
pub const RCC_AHB3ENR_HASHEN_Msk: u32 = 0x1 << RCC_AHB3ENR_HASHEN_Pos;
pub const RCC_AHB3ENR_HASHEN: u32 = RCC_AHB3ENR_HASHEN_Msk;
pub const RCC_AHB3ENR_CRYPEN_Pos: u32 = 2;
pub const RCC_AHB3ENR_CRYPEN_Msk: u32 = 0x1 << RCC_AHB3ENR_CRYPEN_Pos;
pub const RCC_AHB3ENR_CRYPEN: u32 = RCC_AHB3ENR_CRYPEN_Msk;
pub const RCC_AHB3ENR_SAESEN_Pos: u32 = 4;
pub const RCC_AHB3ENR_SAESEN_Msk: u32 = 0x1 << RCC_AHB3ENR_SAESEN_Pos;
pub const RCC_AHB3ENR_SAESEN: u32 = RCC_AHB3ENR_SAESEN_Msk;
pub const RCC_AHB3ENR_PKAEN_Pos: u32 = 6;
pub const RCC_AHB3ENR_PKAEN_Msk: u32 = 0x1 << RCC_AHB3ENR_PKAEN_Pos;
pub const RCC_AHB3ENR_PKAEN: u32 = RCC_AHB3ENR_PKAEN_Msk;
pub const RCC_AHB4ENR_GPIOAEN_Pos: u32 = 0;
pub const RCC_AHB4ENR_GPIOAEN_Msk: u32 = 0x1 << RCC_AHB4ENR_GPIOAEN_Pos;
pub const RCC_AHB4ENR_GPIOAEN: u32 = RCC_AHB4ENR_GPIOAEN_Msk;
pub const RCC_AHB4ENR_GPIOBEN_Pos: u32 = 1;
pub const RCC_AHB4ENR_GPIOBEN_Msk: u32 = 0x1 << RCC_AHB4ENR_GPIOBEN_Pos;
pub const RCC_AHB4ENR_GPIOBEN: u32 = RCC_AHB4ENR_GPIOBEN_Msk;
pub const RCC_AHB4ENR_GPIOCEN_Pos: u32 = 2;
pub const RCC_AHB4ENR_GPIOCEN_Msk: u32 = 0x1 << RCC_AHB4ENR_GPIOCEN_Pos;
pub const RCC_AHB4ENR_GPIOCEN: u32 = RCC_AHB4ENR_GPIOCEN_Msk;
pub const RCC_AHB4ENR_GPIODEN_Pos: u32 = 3;
pub const RCC_AHB4ENR_GPIODEN_Msk: u32 = 0x1 << RCC_AHB4ENR_GPIODEN_Pos;
pub const RCC_AHB4ENR_GPIODEN: u32 = RCC_AHB4ENR_GPIODEN_Msk;
pub const RCC_AHB4ENR_GPIOEEN_Pos: u32 = 4;
pub const RCC_AHB4ENR_GPIOEEN_Msk: u32 = 0x1 << RCC_AHB4ENR_GPIOEEN_Pos;
pub const RCC_AHB4ENR_GPIOEEN: u32 = RCC_AHB4ENR_GPIOEEN_Msk;
pub const RCC_AHB4ENR_GPIOFEN_Pos: u32 = 5;
pub const RCC_AHB4ENR_GPIOFEN_Msk: u32 = 0x1 << RCC_AHB4ENR_GPIOFEN_Pos;
pub const RCC_AHB4ENR_GPIOFEN: u32 = RCC_AHB4ENR_GPIOFEN_Msk;
pub const RCC_AHB4ENR_GPIOGEN_Pos: u32 = 6;
pub const RCC_AHB4ENR_GPIOGEN_Msk: u32 = 0x1 << RCC_AHB4ENR_GPIOGEN_Pos;
pub const RCC_AHB4ENR_GPIOGEN: u32 = RCC_AHB4ENR_GPIOGEN_Msk;
pub const RCC_AHB4ENR_GPIOHEN_Pos: u32 = 7;
pub const RCC_AHB4ENR_GPIOHEN_Msk: u32 = 0x1 << RCC_AHB4ENR_GPIOHEN_Pos;
pub const RCC_AHB4ENR_GPIOHEN: u32 = RCC_AHB4ENR_GPIOHEN_Msk;
pub const RCC_AHB4ENR_GPIOMEN_Pos: u32 = 12;
pub const RCC_AHB4ENR_GPIOMEN_Msk: u32 = 0x1 << RCC_AHB4ENR_GPIOMEN_Pos;
pub const RCC_AHB4ENR_GPIOMEN: u32 = RCC_AHB4ENR_GPIOMEN_Msk;
pub const RCC_AHB4ENR_GPIONEN_Pos: u32 = 13;
pub const RCC_AHB4ENR_GPIONEN_Msk: u32 = 0x1 << RCC_AHB4ENR_GPIONEN_Pos;
pub const RCC_AHB4ENR_GPIONEN: u32 = RCC_AHB4ENR_GPIONEN_Msk;
pub const RCC_AHB4ENR_GPIOOEN_Pos: u32 = 14;
pub const RCC_AHB4ENR_GPIOOEN_Msk: u32 = 0x1 << RCC_AHB4ENR_GPIOOEN_Pos;
pub const RCC_AHB4ENR_GPIOOEN: u32 = RCC_AHB4ENR_GPIOOEN_Msk;
pub const RCC_AHB4ENR_GPIOPEN_Pos: u32 = 15;
pub const RCC_AHB4ENR_GPIOPEN_Msk: u32 = 0x1 << RCC_AHB4ENR_GPIOPEN_Pos;
pub const RCC_AHB4ENR_GPIOPEN: u32 = RCC_AHB4ENR_GPIOPEN_Msk;
pub const RCC_AHB4ENR_CRCEN_Pos: u32 = 19;
pub const RCC_AHB4ENR_CRCEN_Msk: u32 = 0x1 << RCC_AHB4ENR_CRCEN_Pos;
pub const RCC_AHB4ENR_CRCEN: u32 = RCC_AHB4ENR_CRCEN_Msk;
pub const RCC_AHB4ENR_BKPRAMEN_Pos: u32 = 28;
pub const RCC_AHB4ENR_BKPRAMEN_Msk: u32 = 0x1 << RCC_AHB4ENR_BKPRAMEN_Pos;
pub const RCC_AHB4ENR_BKPRAMEN: u32 = RCC_AHB4ENR_BKPRAMEN_Msk;
pub const RCC_AHB5ENR_HPDMA1EN_Pos: u32 = 0;
pub const RCC_AHB5ENR_HPDMA1EN_Msk: u32 = 0x1 << RCC_AHB5ENR_HPDMA1EN_Pos;
pub const RCC_AHB5ENR_HPDMA1EN: u32 = RCC_AHB5ENR_HPDMA1EN_Msk;
pub const RCC_AHB5ENR_DMA2DEN_Pos: u32 = 1;
pub const RCC_AHB5ENR_DMA2DEN_Msk: u32 = 0x1 << RCC_AHB5ENR_DMA2DEN_Pos;
pub const RCC_AHB5ENR_DMA2DEN: u32 = RCC_AHB5ENR_DMA2DEN_Msk;
pub const RCC_AHB5ENR_JPEGEN_Pos: u32 = 3;
pub const RCC_AHB5ENR_JPEGEN_Msk: u32 = 0x1 << RCC_AHB5ENR_JPEGEN_Pos;
pub const RCC_AHB5ENR_JPEGEN: u32 = RCC_AHB5ENR_JPEGEN_Msk;
pub const RCC_AHB5ENR_FMCEN_Pos: u32 = 4;
pub const RCC_AHB5ENR_FMCEN_Msk: u32 = 0x1 << RCC_AHB5ENR_FMCEN_Pos;
pub const RCC_AHB5ENR_FMCEN: u32 = RCC_AHB5ENR_FMCEN_Msk;
pub const RCC_AHB5ENR_XSPI1EN_Pos: u32 = 5;
pub const RCC_AHB5ENR_XSPI1EN_Msk: u32 = 0x1 << RCC_AHB5ENR_XSPI1EN_Pos;
pub const RCC_AHB5ENR_XSPI1EN: u32 = RCC_AHB5ENR_XSPI1EN_Msk;
pub const RCC_AHB5ENR_SDMMC1EN_Pos: u32 = 8;
pub const RCC_AHB5ENR_SDMMC1EN_Msk: u32 = 0x1 << RCC_AHB5ENR_SDMMC1EN_Pos;
pub const RCC_AHB5ENR_SDMMC1EN: u32 = RCC_AHB5ENR_SDMMC1EN_Msk;
pub const RCC_AHB5ENR_XSPI2EN_Pos: u32 = 12;
pub const RCC_AHB5ENR_XSPI2EN_Msk: u32 = 0x1 << RCC_AHB5ENR_XSPI2EN_Pos;
pub const RCC_AHB5ENR_XSPI2EN: u32 = RCC_AHB5ENR_XSPI2EN_Msk;
pub const RCC_AHB5ENR_XSPIMEN_Pos: u32 = 14;
pub const RCC_AHB5ENR_XSPIMEN_Msk: u32 = 0x1 << RCC_AHB5ENR_XSPIMEN_Pos;
pub const RCC_AHB5ENR_XSPIMEN: u32 = RCC_AHB5ENR_XSPIMEN_Msk;
pub const RCC_AHB5ENR_GFXMMUEN_Pos: u32 = 19;
pub const RCC_AHB5ENR_GFXMMUEN_Msk: u32 = 0x1 << RCC_AHB5ENR_GFXMMUEN_Pos;
pub const RCC_AHB5ENR_GFXMMUEN: u32 = RCC_AHB5ENR_GFXMMUEN_Msk;
pub const RCC_AHB5ENR_GPU2DEN_Pos: u32 = 20;
pub const RCC_AHB5ENR_GPU2DEN_Msk: u32 = 0x1 << RCC_AHB5ENR_GPU2DEN_Pos;
pub const RCC_AHB5ENR_GPU2DEN: u32 = RCC_AHB5ENR_GPU2DEN_Msk;
pub const RCC_APB1ENR1_TIM2EN_Pos: u32 = 0;
pub const RCC_APB1ENR1_TIM2EN_Msk: u32 = 0x1 << RCC_APB1ENR1_TIM2EN_Pos;
pub const RCC_APB1ENR1_TIM2EN: u32 = RCC_APB1ENR1_TIM2EN_Msk;
pub const RCC_APB1ENR1_TIM3EN_Pos: u32 = 1;
pub const RCC_APB1ENR1_TIM3EN_Msk: u32 = 0x1 << RCC_APB1ENR1_TIM3EN_Pos;
pub const RCC_APB1ENR1_TIM3EN: u32 = RCC_APB1ENR1_TIM3EN_Msk;
pub const RCC_APB1ENR1_TIM4EN_Pos: u32 = 2;
pub const RCC_APB1ENR1_TIM4EN_Msk: u32 = 0x1 << RCC_APB1ENR1_TIM4EN_Pos;
pub const RCC_APB1ENR1_TIM4EN: u32 = RCC_APB1ENR1_TIM4EN_Msk;
pub const RCC_APB1ENR1_TIM5EN_Pos: u32 = 3;
pub const RCC_APB1ENR1_TIM5EN_Msk: u32 = 0x1 << RCC_APB1ENR1_TIM5EN_Pos;
pub const RCC_APB1ENR1_TIM5EN: u32 = RCC_APB1ENR1_TIM5EN_Msk;
pub const RCC_APB1ENR1_TIM6EN_Pos: u32 = 4;
pub const RCC_APB1ENR1_TIM6EN_Msk: u32 = 0x1 << RCC_APB1ENR1_TIM6EN_Pos;
pub const RCC_APB1ENR1_TIM6EN: u32 = RCC_APB1ENR1_TIM6EN_Msk;
pub const RCC_APB1ENR1_TIM7EN_Pos: u32 = 5;
pub const RCC_APB1ENR1_TIM7EN_Msk: u32 = 0x1 << RCC_APB1ENR1_TIM7EN_Pos;
pub const RCC_APB1ENR1_TIM7EN: u32 = RCC_APB1ENR1_TIM7EN_Msk;
pub const RCC_APB1ENR1_TIM12EN_Pos: u32 = 6;
pub const RCC_APB1ENR1_TIM12EN_Msk: u32 = 0x1 << RCC_APB1ENR1_TIM12EN_Pos;
pub const RCC_APB1ENR1_TIM12EN: u32 = RCC_APB1ENR1_TIM12EN_Msk;
pub const RCC_APB1ENR1_TIM13EN_Pos: u32 = 7;
pub const RCC_APB1ENR1_TIM13EN_Msk: u32 = 0x1 << RCC_APB1ENR1_TIM13EN_Pos;
pub const RCC_APB1ENR1_TIM13EN: u32 = RCC_APB1ENR1_TIM13EN_Msk;
pub const RCC_APB1ENR1_TIM14EN_Pos: u32 = 8;
pub const RCC_APB1ENR1_TIM14EN_Msk: u32 = 0x1 << RCC_APB1ENR1_TIM14EN_Pos;
pub const RCC_APB1ENR1_TIM14EN: u32 = RCC_APB1ENR1_TIM14EN_Msk;
pub const RCC_APB1ENR1_LPTIM1EN_Pos: u32 = 9;
pub const RCC_APB1ENR1_LPTIM1EN_Msk: u32 = 0x1 << RCC_APB1ENR1_LPTIM1EN_Pos;
pub const RCC_APB1ENR1_LPTIM1EN: u32 = RCC_APB1ENR1_LPTIM1EN_Msk;
pub const RCC_APB1ENR1_WWDGEN_Pos: u32 = 11;
pub const RCC_APB1ENR1_WWDGEN_Msk: u32 = 0x1 << RCC_APB1ENR1_WWDGEN_Pos;
pub const RCC_APB1ENR1_WWDGEN: u32 = RCC_APB1ENR1_WWDGEN_Msk;
pub const RCC_APB1ENR1_SPI2EN_Pos: u32 = 14;
pub const RCC_APB1ENR1_SPI2EN_Msk: u32 = 0x1 << RCC_APB1ENR1_SPI2EN_Pos;
pub const RCC_APB1ENR1_SPI2EN: u32 = RCC_APB1ENR1_SPI2EN_Msk;
pub const RCC_APB1ENR1_SPI3EN_Pos: u32 = 15;
pub const RCC_APB1ENR1_SPI3EN_Msk: u32 = 0x1 << RCC_APB1ENR1_SPI3EN_Pos;
pub const RCC_APB1ENR1_SPI3EN: u32 = RCC_APB1ENR1_SPI3EN_Msk;
pub const RCC_APB1ENR1_SPDIFRXEN_Pos: u32 = 16;
pub const RCC_APB1ENR1_SPDIFRXEN_Msk: u32 = 0x1 << RCC_APB1ENR1_SPDIFRXEN_Pos;
pub const RCC_APB1ENR1_SPDIFRXEN: u32 = RCC_APB1ENR1_SPDIFRXEN_Msk;
pub const RCC_APB1ENR1_USART2EN_Pos: u32 = 17;
pub const RCC_APB1ENR1_USART2EN_Msk: u32 = 0x1 << RCC_APB1ENR1_USART2EN_Pos;
pub const RCC_APB1ENR1_USART2EN: u32 = RCC_APB1ENR1_USART2EN_Msk;
pub const RCC_APB1ENR1_USART3EN_Pos: u32 = 18;
pub const RCC_APB1ENR1_USART3EN_Msk: u32 = 0x1 << RCC_APB1ENR1_USART3EN_Pos;
pub const RCC_APB1ENR1_USART3EN: u32 = RCC_APB1ENR1_USART3EN_Msk;
pub const RCC_APB1ENR1_UART4EN_Pos: u32 = 19;
pub const RCC_APB1ENR1_UART4EN_Msk: u32 = 0x1 << RCC_APB1ENR1_UART4EN_Pos;
pub const RCC_APB1ENR1_UART4EN: u32 = RCC_APB1ENR1_UART4EN_Msk;
pub const RCC_APB1ENR1_UART5EN_Pos: u32 = 20;
pub const RCC_APB1ENR1_UART5EN_Msk: u32 = 0x1 << RCC_APB1ENR1_UART5EN_Pos;
pub const RCC_APB1ENR1_UART5EN: u32 = RCC_APB1ENR1_UART5EN_Msk;
pub const RCC_APB1ENR1_I2C1_I3C1EN_Pos: u32 = 21;
pub const RCC_APB1ENR1_I2C1_I3C1EN_Msk: u32 = 0x1 << RCC_APB1ENR1_I2C1_I3C1EN_Pos;
pub const RCC_APB1ENR1_I2C1_I3C1EN: u32 = RCC_APB1ENR1_I2C1_I3C1EN_Msk;
pub const RCC_APB1ENR1_I2C2EN_Pos: u32 = 22;
pub const RCC_APB1ENR1_I2C2EN_Msk: u32 = 0x1 << RCC_APB1ENR1_I2C2EN_Pos;
pub const RCC_APB1ENR1_I2C2EN: u32 = RCC_APB1ENR1_I2C2EN_Msk;
pub const RCC_APB1ENR1_I2C3EN_Pos: u32 = 23;
pub const RCC_APB1ENR1_I2C3EN_Msk: u32 = 0x1 << RCC_APB1ENR1_I2C3EN_Pos;
pub const RCC_APB1ENR1_I2C3EN: u32 = RCC_APB1ENR1_I2C3EN_Msk;
pub const RCC_APB1ENR1_CECEN_Pos: u32 = 27;
pub const RCC_APB1ENR1_CECEN_Msk: u32 = 0x1 << RCC_APB1ENR1_CECEN_Pos;
pub const RCC_APB1ENR1_CECEN: u32 = RCC_APB1ENR1_CECEN_Msk;
pub const RCC_APB1ENR1_UART7EN_Pos: u32 = 30;
pub const RCC_APB1ENR1_UART7EN_Msk: u32 = 0x1 << RCC_APB1ENR1_UART7EN_Pos;
pub const RCC_APB1ENR1_UART7EN: u32 = RCC_APB1ENR1_UART7EN_Msk;
pub const RCC_APB1ENR1_UART8EN_Pos: u32 = 31;
pub const RCC_APB1ENR1_UART8EN_Msk: u32 = 0x1 << RCC_APB1ENR1_UART8EN_Pos;
pub const RCC_APB1ENR1_UART8EN: u32 = RCC_APB1ENR1_UART8EN_Msk;
pub const RCC_APB1ENR2_CRSEN_Pos: u32 = 1;
pub const RCC_APB1ENR2_CRSEN_Msk: u32 = 0x1 << RCC_APB1ENR2_CRSEN_Pos;
pub const RCC_APB1ENR2_CRSEN: u32 = RCC_APB1ENR2_CRSEN_Msk;
pub const RCC_APB1ENR2_MDIOSEN_Pos: u32 = 5;
pub const RCC_APB1ENR2_MDIOSEN_Msk: u32 = 0x1 << RCC_APB1ENR2_MDIOSEN_Pos;
pub const RCC_APB1ENR2_MDIOSEN: u32 = RCC_APB1ENR2_MDIOSEN_Msk;
pub const RCC_APB1ENR2_FDCANEN_Pos: u32 = 8;
pub const RCC_APB1ENR2_FDCANEN_Msk: u32 = 0x1 << RCC_APB1ENR2_FDCANEN_Pos;
pub const RCC_APB1ENR2_FDCANEN: u32 = RCC_APB1ENR2_FDCANEN_Msk;
pub const RCC_APB1ENR2_UCPD1EN_Pos: u32 = 27;
pub const RCC_APB1ENR2_UCPD1EN_Msk: u32 = 0x1 << RCC_APB1ENR2_UCPD1EN_Pos;
pub const RCC_APB1ENR2_UCPD1EN: u32 = RCC_APB1ENR2_UCPD1EN_Msk;
pub const RCC_APB2ENR_TIM1EN_Pos: u32 = 0;
pub const RCC_APB2ENR_TIM1EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM1EN_Pos;
pub const RCC_APB2ENR_TIM1EN: u32 = RCC_APB2ENR_TIM1EN_Msk;
pub const RCC_APB2ENR_USART1EN_Pos: u32 = 4;
pub const RCC_APB2ENR_USART1EN_Msk: u32 = 0x1 << RCC_APB2ENR_USART1EN_Pos;
pub const RCC_APB2ENR_USART1EN: u32 = RCC_APB2ENR_USART1EN_Msk;
pub const RCC_APB2ENR_SPI1EN_Pos: u32 = 12;
pub const RCC_APB2ENR_SPI1EN_Msk: u32 = 0x1 << RCC_APB2ENR_SPI1EN_Pos;
pub const RCC_APB2ENR_SPI1EN: u32 = RCC_APB2ENR_SPI1EN_Msk;
pub const RCC_APB2ENR_SPI4EN_Pos: u32 = 13;
pub const RCC_APB2ENR_SPI4EN_Msk: u32 = 0x1 << RCC_APB2ENR_SPI4EN_Pos;
pub const RCC_APB2ENR_SPI4EN: u32 = RCC_APB2ENR_SPI4EN_Msk;
pub const RCC_APB2ENR_TIM15EN_Pos: u32 = 16;
pub const RCC_APB2ENR_TIM15EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM15EN_Pos;
pub const RCC_APB2ENR_TIM15EN: u32 = RCC_APB2ENR_TIM15EN_Msk;
pub const RCC_APB2ENR_TIM16EN_Pos: u32 = 17;
pub const RCC_APB2ENR_TIM16EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM16EN_Pos;
pub const RCC_APB2ENR_TIM16EN: u32 = RCC_APB2ENR_TIM16EN_Msk;
pub const RCC_APB2ENR_TIM17EN_Pos: u32 = 18;
pub const RCC_APB2ENR_TIM17EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM17EN_Pos;
pub const RCC_APB2ENR_TIM17EN: u32 = RCC_APB2ENR_TIM17EN_Msk;
pub const RCC_APB2ENR_TIM9EN_Pos: u32 = 19;
pub const RCC_APB2ENR_TIM9EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM9EN_Pos;
pub const RCC_APB2ENR_TIM9EN: u32 = RCC_APB2ENR_TIM9EN_Msk;
pub const RCC_APB2ENR_SPI5EN_Pos: u32 = 20;
pub const RCC_APB2ENR_SPI5EN_Msk: u32 = 0x1 << RCC_APB2ENR_SPI5EN_Pos;
pub const RCC_APB2ENR_SPI5EN: u32 = RCC_APB2ENR_SPI5EN_Msk;
pub const RCC_APB2ENR_SAI1EN_Pos: u32 = 22;
pub const RCC_APB2ENR_SAI1EN_Msk: u32 = 0x1 << RCC_APB2ENR_SAI1EN_Pos;
pub const RCC_APB2ENR_SAI1EN: u32 = RCC_APB2ENR_SAI1EN_Msk;
pub const RCC_APB2ENR_SAI2EN_Pos: u32 = 23;
pub const RCC_APB2ENR_SAI2EN_Msk: u32 = 0x1 << RCC_APB2ENR_SAI2EN_Pos;
pub const RCC_APB2ENR_SAI2EN: u32 = RCC_APB2ENR_SAI2EN_Msk;
pub const RCC_APB4ENR_SBSEN_Pos: u32 = 1;
pub const RCC_APB4ENR_SBSEN_Msk: u32 = 0x1 << RCC_APB4ENR_SBSEN_Pos;
pub const RCC_APB4ENR_SBSEN: u32 = RCC_APB4ENR_SBSEN_Msk;
pub const RCC_APB4ENR_LPUART1EN_Pos: u32 = 3;
pub const RCC_APB4ENR_LPUART1EN_Msk: u32 = 0x1 << RCC_APB4ENR_LPUART1EN_Pos;
pub const RCC_APB4ENR_LPUART1EN: u32 = RCC_APB4ENR_LPUART1EN_Msk;
pub const RCC_APB4ENR_SPI6EN_Pos: u32 = 5;
pub const RCC_APB4ENR_SPI6EN_Msk: u32 = 0x1 << RCC_APB4ENR_SPI6EN_Pos;
pub const RCC_APB4ENR_SPI6EN: u32 = RCC_APB4ENR_SPI6EN_Msk;
pub const RCC_APB4ENR_LPTIM2EN_Pos: u32 = 9;
pub const RCC_APB4ENR_LPTIM2EN_Msk: u32 = 0x1 << RCC_APB4ENR_LPTIM2EN_Pos;
pub const RCC_APB4ENR_LPTIM2EN: u32 = RCC_APB4ENR_LPTIM2EN_Msk;
pub const RCC_APB4ENR_LPTIM3EN_Pos: u32 = 10;
pub const RCC_APB4ENR_LPTIM3EN_Msk: u32 = 0x1 << RCC_APB4ENR_LPTIM3EN_Pos;
pub const RCC_APB4ENR_LPTIM3EN: u32 = RCC_APB4ENR_LPTIM3EN_Msk;
pub const RCC_APB4ENR_LPTIM4EN_Pos: u32 = 11;
pub const RCC_APB4ENR_LPTIM4EN_Msk: u32 = 0x1 << RCC_APB4ENR_LPTIM4EN_Pos;
pub const RCC_APB4ENR_LPTIM4EN: u32 = RCC_APB4ENR_LPTIM4EN_Msk;
pub const RCC_APB4ENR_LPTIM5EN_Pos: u32 = 12;
pub const RCC_APB4ENR_LPTIM5EN_Msk: u32 = 0x1 << RCC_APB4ENR_LPTIM5EN_Pos;
pub const RCC_APB4ENR_LPTIM5EN: u32 = RCC_APB4ENR_LPTIM5EN_Msk;
pub const RCC_APB4ENR_VREFEN_Pos: u32 = 15;
pub const RCC_APB4ENR_VREFEN_Msk: u32 = 0x1 << RCC_APB4ENR_VREFEN_Pos;
pub const RCC_APB4ENR_VREFEN: u32 = RCC_APB4ENR_VREFEN_Msk;
pub const RCC_APB4ENR_RTCAPBEN_Pos: u32 = 16;
pub const RCC_APB4ENR_RTCAPBEN_Msk: u32 = 0x1 << RCC_APB4ENR_RTCAPBEN_Pos;
pub const RCC_APB4ENR_RTCAPBEN: u32 = RCC_APB4ENR_RTCAPBEN_Msk;
pub const RCC_APB4ENR_DTSEN_Pos: u32 = 26;
pub const RCC_APB4ENR_DTSEN_Msk: u32 = 0x1 << RCC_APB4ENR_DTSEN_Pos;
pub const RCC_APB4ENR_DTSEN: u32 = RCC_APB4ENR_DTSEN_Msk;
pub const RCC_APB5ENR_LTDCEN_Pos: u32 = 1;
pub const RCC_APB5ENR_LTDCEN_Msk: u32 = 0x1 << RCC_APB5ENR_LTDCEN_Pos;
pub const RCC_APB5ENR_LTDCEN: u32 = RCC_APB5ENR_LTDCEN_Msk;
pub const RCC_APB5ENR_DCMIPPEN_Pos: u32 = 2;
pub const RCC_APB5ENR_DCMIPPEN_Msk: u32 = 0x1 << RCC_APB5ENR_DCMIPPEN_Pos;
pub const RCC_APB5ENR_DCMIPPEN: u32 = RCC_APB5ENR_DCMIPPEN_Msk;
pub const RCC_APB5ENR_GFXTIMEN_Pos: u32 = 4;
pub const RCC_APB5ENR_GFXTIMEN_Msk: u32 = 0x1 << RCC_APB5ENR_GFXTIMEN_Pos;
pub const RCC_APB5ENR_GFXTIMEN: u32 = RCC_APB5ENR_GFXTIMEN_Msk;
pub const RCC_AHB1LPENR_GPDMA1LPEN_Pos: u32 = 4;
pub const RCC_AHB1LPENR_GPDMA1LPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_GPDMA1LPEN_Pos;
pub const RCC_AHB1LPENR_GPDMA1LPEN: u32 = RCC_AHB1LPENR_GPDMA1LPEN_Msk;
pub const RCC_AHB1LPENR_ADC12LPEN_Pos: u32 = 5;
pub const RCC_AHB1LPENR_ADC12LPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_ADC12LPEN_Pos;
pub const RCC_AHB1LPENR_ADC12LPEN: u32 = RCC_AHB1LPENR_ADC12LPEN_Msk;
pub const RCC_AHB1LPENR_ETH1MACLPEN_Pos: u32 = 15;
pub const RCC_AHB1LPENR_ETH1MACLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_ETH1MACLPEN_Pos;
pub const RCC_AHB1LPENR_ETH1MACLPEN: u32 = RCC_AHB1LPENR_ETH1MACLPEN_Msk;
pub const RCC_AHB1LPENR_ETH1TXLPEN_Pos: u32 = 16;
pub const RCC_AHB1LPENR_ETH1TXLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_ETH1TXLPEN_Pos;
pub const RCC_AHB1LPENR_ETH1TXLPEN: u32 = RCC_AHB1LPENR_ETH1TXLPEN_Msk;
pub const RCC_AHB1LPENR_ETH1RXLPEN_Pos: u32 = 17;
pub const RCC_AHB1LPENR_ETH1RXLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_ETH1RXLPEN_Pos;
pub const RCC_AHB1LPENR_ETH1RXLPEN: u32 = RCC_AHB1LPENR_ETH1RXLPEN_Msk;
pub const RCC_AHB1LPENR_UCPDCTRL_Pos: u32 = 24;
pub const RCC_AHB1LPENR_UCPDCTRL_Msk: u32 = 0x1 << RCC_AHB1LPENR_UCPDCTRL_Pos;
pub const RCC_AHB1LPENR_UCPDCTRL: u32 = RCC_AHB1LPENR_UCPDCTRL_Msk;
pub const RCC_AHB1LPENR_OTGHSLPEN_Pos: u32 = 25;
pub const RCC_AHB1LPENR_OTGHSLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_OTGHSLPEN_Pos;
pub const RCC_AHB1LPENR_OTGHSLPEN: u32 = RCC_AHB1LPENR_OTGHSLPEN_Msk;
pub const RCC_AHB1LPENR_USBPHYCLPEN_Pos: u32 = 26;
pub const RCC_AHB1LPENR_USBPHYCLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_USBPHYCLPEN_Pos;
pub const RCC_AHB1LPENR_USBPHYCLPEN: u32 = RCC_AHB1LPENR_USBPHYCLPEN_Msk;
pub const RCC_AHB1LPENR_OTGFSLPEN_Pos: u32 = 27;
pub const RCC_AHB1LPENR_OTGFSLPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_OTGFSLPEN_Pos;
pub const RCC_AHB1LPENR_OTGFSLPEN: u32 = RCC_AHB1LPENR_OTGFSLPEN_Msk;
pub const RCC_AHB1LPENR_ADF1LPEN_Pos: u32 = 31;
pub const RCC_AHB1LPENR_ADF1LPEN_Msk: u32 = 0x1 << RCC_AHB1LPENR_ADF1LPEN_Pos;
pub const RCC_AHB1LPENR_ADF1LPEN: u32 = RCC_AHB1LPENR_ADF1LPEN_Msk;
pub const RCC_AHB2LPENR_PSSILPEN_Pos: u32 = 1;
pub const RCC_AHB2LPENR_PSSILPEN_Msk: u32 = 0x1 << RCC_AHB2LPENR_PSSILPEN_Pos;
pub const RCC_AHB2LPENR_PSSILPEN: u32 = RCC_AHB2LPENR_PSSILPEN_Msk;
pub const RCC_AHB2LPENR_SDMMC2LPEN_Pos: u32 = 9;
pub const RCC_AHB2LPENR_SDMMC2LPEN_Msk: u32 = 0x1 << RCC_AHB2LPENR_SDMMC2LPEN_Pos;
pub const RCC_AHB2LPENR_SDMMC2LPEN: u32 = RCC_AHB2LPENR_SDMMC2LPEN_Msk;
pub const RCC_AHB2LPENR_CORDICLPEN_Pos: u32 = 14;
pub const RCC_AHB2LPENR_CORDICLPEN_Msk: u32 = 0x1 << RCC_AHB2LPENR_CORDICLPEN_Pos;
pub const RCC_AHB2LPENR_CORDICLPEN: u32 = RCC_AHB2LPENR_CORDICLPEN_Msk;
pub const RCC_AHB2LPENR_SRAM1LPEN_Pos: u32 = 29;
pub const RCC_AHB2LPENR_SRAM1LPEN_Msk: u32 = 0x1 << RCC_AHB2LPENR_SRAM1LPEN_Pos;
pub const RCC_AHB2LPENR_SRAM1LPEN: u32 = RCC_AHB2LPENR_SRAM1LPEN_Msk;
pub const RCC_AHB2LPENR_SRAM2LPEN_Pos: u32 = 30;
pub const RCC_AHB2LPENR_SRAM2LPEN_Msk: u32 = 0x1 << RCC_AHB2LPENR_SRAM2LPEN_Pos;
pub const RCC_AHB2LPENR_SRAM2LPEN: u32 = RCC_AHB2LPENR_SRAM2LPEN_Msk;
pub const RCC_AHB3LPENR_RNGLPEN_Pos: u32 = 0;
pub const RCC_AHB3LPENR_RNGLPEN_Msk: u32 = 0x1 << RCC_AHB3LPENR_RNGLPEN_Pos;
pub const RCC_AHB3LPENR_RNGLPEN: u32 = RCC_AHB3LPENR_RNGLPEN_Msk;
pub const RCC_AHB3LPENR_HASHLPEN_Pos: u32 = 1;
pub const RCC_AHB3LPENR_HASHLPEN_Msk: u32 = 0x1 << RCC_AHB3LPENR_HASHLPEN_Pos;
pub const RCC_AHB3LPENR_HASHLPEN: u32 = RCC_AHB3LPENR_HASHLPEN_Msk;
pub const RCC_AHB3LPENR_CRYPLPEN_Pos: u32 = 2;
pub const RCC_AHB3LPENR_CRYPLPEN_Msk: u32 = 0x1 << RCC_AHB3LPENR_CRYPLPEN_Pos;
pub const RCC_AHB3LPENR_CRYPLPEN: u32 = RCC_AHB3LPENR_CRYPLPEN_Msk;
pub const RCC_AHB3LPENR_SAESLPEN_Pos: u32 = 4;
pub const RCC_AHB3LPENR_SAESLPEN_Msk: u32 = 0x1 << RCC_AHB3LPENR_SAESLPEN_Pos;
pub const RCC_AHB3LPENR_SAESLPEN: u32 = RCC_AHB3LPENR_SAESLPEN_Msk;
pub const RCC_AHB3LPENR_PKALPEN_Pos: u32 = 6;
pub const RCC_AHB3LPENR_PKALPEN_Msk: u32 = 0x1 << RCC_AHB3LPENR_PKALPEN_Pos;
pub const RCC_AHB3LPENR_PKALPEN: u32 = RCC_AHB3LPENR_PKALPEN_Msk;
pub const RCC_AHB4LPENR_GPIOALPEN_Pos: u32 = 0;
pub const RCC_AHB4LPENR_GPIOALPEN_Msk: u32 = 0x1 << RCC_AHB4LPENR_GPIOALPEN_Pos;
pub const RCC_AHB4LPENR_GPIOALPEN: u32 = RCC_AHB4LPENR_GPIOALPEN_Msk;
pub const RCC_AHB4LPENR_GPIOBLPEN_Pos: u32 = 1;
pub const RCC_AHB4LPENR_GPIOBLPEN_Msk: u32 = 0x1 << RCC_AHB4LPENR_GPIOBLPEN_Pos;
pub const RCC_AHB4LPENR_GPIOBLPEN: u32 = RCC_AHB4LPENR_GPIOBLPEN_Msk;
pub const RCC_AHB4LPENR_GPIOCLPEN_Pos: u32 = 2;
pub const RCC_AHB4LPENR_GPIOCLPEN_Msk: u32 = 0x1 << RCC_AHB4LPENR_GPIOCLPEN_Pos;
pub const RCC_AHB4LPENR_GPIOCLPEN: u32 = RCC_AHB4LPENR_GPIOCLPEN_Msk;
pub const RCC_AHB4LPENR_GPIODLPEN_Pos: u32 = 3;
pub const RCC_AHB4LPENR_GPIODLPEN_Msk: u32 = 0x1 << RCC_AHB4LPENR_GPIODLPEN_Pos;
pub const RCC_AHB4LPENR_GPIODLPEN: u32 = RCC_AHB4LPENR_GPIODLPEN_Msk;
pub const RCC_AHB4LPENR_GPIOELPEN_Pos: u32 = 4;
pub const RCC_AHB4LPENR_GPIOELPEN_Msk: u32 = 0x1 << RCC_AHB4LPENR_GPIOELPEN_Pos;
pub const RCC_AHB4LPENR_GPIOELPEN: u32 = RCC_AHB4LPENR_GPIOELPEN_Msk;
pub const RCC_AHB4LPENR_GPIOFLPEN_Pos: u32 = 5;
pub const RCC_AHB4LPENR_GPIOFLPEN_Msk: u32 = 0x1 << RCC_AHB4LPENR_GPIOFLPEN_Pos;
pub const RCC_AHB4LPENR_GPIOFLPEN: u32 = RCC_AHB4LPENR_GPIOFLPEN_Msk;
pub const RCC_AHB4LPENR_GPIOGLPEN_Pos: u32 = 6;
pub const RCC_AHB4LPENR_GPIOGLPEN_Msk: u32 = 0x1 << RCC_AHB4LPENR_GPIOGLPEN_Pos;
pub const RCC_AHB4LPENR_GPIOGLPEN: u32 = RCC_AHB4LPENR_GPIOGLPEN_Msk;
pub const RCC_AHB4LPENR_GPIOHLPEN_Pos: u32 = 7;
pub const RCC_AHB4LPENR_GPIOHLPEN_Msk: u32 = 0x1 << RCC_AHB4LPENR_GPIOHLPEN_Pos;
pub const RCC_AHB4LPENR_GPIOHLPEN: u32 = RCC_AHB4LPENR_GPIOHLPEN_Msk;
pub const RCC_AHB4LPENR_GPIOMLPEN_Pos: u32 = 12;
pub const RCC_AHB4LPENR_GPIOMLPEN_Msk: u32 = 0x1 << RCC_AHB4LPENR_GPIOMLPEN_Pos;
pub const RCC_AHB4LPENR_GPIOMLPEN: u32 = RCC_AHB4LPENR_GPIOMLPEN_Msk;
pub const RCC_AHB4LPENR_GPIONLPEN_Pos: u32 = 13;
pub const RCC_AHB4LPENR_GPIONLPEN_Msk: u32 = 0x1 << RCC_AHB4LPENR_GPIONLPEN_Pos;
pub const RCC_AHB4LPENR_GPIONLPEN: u32 = RCC_AHB4LPENR_GPIONLPEN_Msk;
pub const RCC_AHB4LPENR_GPIOOLPEN_Pos: u32 = 14;
pub const RCC_AHB4LPENR_GPIOOLPEN_Msk: u32 = 0x1 << RCC_AHB4LPENR_GPIOOLPEN_Pos;
pub const RCC_AHB4LPENR_GPIOOLPEN: u32 = RCC_AHB4LPENR_GPIOOLPEN_Msk;
pub const RCC_AHB4LPENR_GPIOPLPEN_Pos: u32 = 15;
pub const RCC_AHB4LPENR_GPIOPLPEN_Msk: u32 = 0x1 << RCC_AHB4LPENR_GPIOPLPEN_Pos;
pub const RCC_AHB4LPENR_GPIOPLPEN: u32 = RCC_AHB4LPENR_GPIOPLPEN_Msk;
pub const RCC_AHB4LPENR_CRCLPEN_Pos: u32 = 19;
pub const RCC_AHB4LPENR_CRCLPEN_Msk: u32 = 0x1 << RCC_AHB4LPENR_CRCLPEN_Pos;
pub const RCC_AHB4LPENR_CRCLPEN: u32 = RCC_AHB4LPENR_CRCLPEN_Msk;
pub const RCC_AHB4LPENR_BKPRAMLPEN_Pos: u32 = 28;
pub const RCC_AHB4LPENR_BKPRAMLPEN_Msk: u32 = 0x1 << RCC_AHB4LPENR_BKPRAMLPEN_Pos;
pub const RCC_AHB4LPENR_BKPRAMLPEN: u32 = RCC_AHB4LPENR_BKPRAMLPEN_Msk;
pub const RCC_AHB5LPENR_HPDMA1LPEN_Pos: u32 = 0;
pub const RCC_AHB5LPENR_HPDMA1LPEN_Msk: u32 = 0x1 << RCC_AHB5LPENR_HPDMA1LPEN_Pos;
pub const RCC_AHB5LPENR_HPDMA1LPEN: u32 = RCC_AHB5LPENR_HPDMA1LPEN_Msk;
pub const RCC_AHB5LPENR_DMA2DLPEN_Pos: u32 = 1;
pub const RCC_AHB5LPENR_DMA2DLPEN_Msk: u32 = 0x1 << RCC_AHB5LPENR_DMA2DLPEN_Pos;
pub const RCC_AHB5LPENR_DMA2DLPEN: u32 = RCC_AHB5LPENR_DMA2DLPEN_Msk;
pub const RCC_AHB5LPENR_FLASHLPEN_Pos: u32 = 2;
pub const RCC_AHB5LPENR_FLASHLPEN_Msk: u32 = 0x1 << RCC_AHB5LPENR_FLASHLPEN_Pos;
pub const RCC_AHB5LPENR_FLASHLPEN: u32 = RCC_AHB5LPENR_FLASHLPEN_Msk;
pub const RCC_AHB5LPENR_JPEGLPEN_Pos: u32 = 3;
pub const RCC_AHB5LPENR_JPEGLPEN_Msk: u32 = 0x1 << RCC_AHB5LPENR_JPEGLPEN_Pos;
pub const RCC_AHB5LPENR_JPEGLPEN: u32 = RCC_AHB5LPENR_JPEGLPEN_Msk;
pub const RCC_AHB5LPENR_FMCLPEN_Pos: u32 = 4;
pub const RCC_AHB5LPENR_FMCLPEN_Msk: u32 = 0x1 << RCC_AHB5LPENR_FMCLPEN_Pos;
pub const RCC_AHB5LPENR_FMCLPEN: u32 = RCC_AHB5LPENR_FMCLPEN_Msk;
pub const RCC_AHB5LPENR_XSPI1LPEN_Pos: u32 = 5;
pub const RCC_AHB5LPENR_XSPI1LPEN_Msk: u32 = 0x1 << RCC_AHB5LPENR_XSPI1LPEN_Pos;
pub const RCC_AHB5LPENR_XSPI1LPEN: u32 = RCC_AHB5LPENR_XSPI1LPEN_Msk;
pub const RCC_AHB5LPENR_SDMMC1LPEN_Pos: u32 = 8;
pub const RCC_AHB5LPENR_SDMMC1LPEN_Msk: u32 = 0x1 << RCC_AHB5LPENR_SDMMC1LPEN_Pos;
pub const RCC_AHB5LPENR_SDMMC1LPEN: u32 = RCC_AHB5LPENR_SDMMC1LPEN_Msk;
pub const RCC_AHB5LPENR_XSPI2LPEN_Pos: u32 = 12;
pub const RCC_AHB5LPENR_XSPI2LPEN_Msk: u32 = 0x1 << RCC_AHB5LPENR_XSPI2LPEN_Pos;
pub const RCC_AHB5LPENR_XSPI2LPEN: u32 = RCC_AHB5LPENR_XSPI2LPEN_Msk;
pub const RCC_AHB5LPENR_XSPIMLPEN_Pos: u32 = 14;
pub const RCC_AHB5LPENR_XSPIMLPEN_Msk: u32 = 0x1 << RCC_AHB5LPENR_XSPIMLPEN_Pos;
pub const RCC_AHB5LPENR_XSPIMLPEN: u32 = RCC_AHB5LPENR_XSPIMLPEN_Msk;
pub const RCC_AHB5LPENR_GFXMMULPEN_Pos: u32 = 19;
pub const RCC_AHB5LPENR_GFXMMULPEN_Msk: u32 = 0x1 << RCC_AHB5LPENR_GFXMMULPEN_Pos;
pub const RCC_AHB5LPENR_GFXMMULPEN: u32 = RCC_AHB5LPENR_GFXMMULPEN_Msk;
pub const RCC_AHB5LPENR_GPU2DLPEN_Pos: u32 = 20;
pub const RCC_AHB5LPENR_GPU2DLPEN_Msk: u32 = 0x1 << RCC_AHB5LPENR_GPU2DLPEN_Pos;
pub const RCC_AHB5LPENR_GPU2DLPEN: u32 = RCC_AHB5LPENR_GPU2DLPEN_Msk;
pub const RCC_AHB5LPENR_DTCM1LPEN_Pos: u32 = 28;
pub const RCC_AHB5LPENR_DTCM1LPEN_Msk: u32 = 0x1 << RCC_AHB5LPENR_DTCM1LPEN_Pos;
pub const RCC_AHB5LPENR_DTCM1LPEN: u32 = RCC_AHB5LPENR_DTCM1LPEN_Msk;
pub const RCC_AHB5LPENR_DTCM2LPEN_Pos: u32 = 29;
pub const RCC_AHB5LPENR_DTCM2LPEN_Msk: u32 = 0x1 << RCC_AHB5LPENR_DTCM2LPEN_Pos;
pub const RCC_AHB5LPENR_DTCM2LPEN: u32 = RCC_AHB5LPENR_DTCM2LPEN_Msk;
pub const RCC_AHB5LPENR_ITCMLPEN_Pos: u32 = 30;
pub const RCC_AHB5LPENR_ITCMLPEN_Msk: u32 = 0x1 << RCC_AHB5LPENR_ITCMLPEN_Pos;
pub const RCC_AHB5LPENR_ITCMLPEN: u32 = RCC_AHB5LPENR_ITCMLPEN_Msk;
pub const RCC_AHB5LPENR_AXISRAMLPEN_Pos: u32 = 31;
pub const RCC_AHB5LPENR_AXISRAMLPEN_Msk: u32 = 0x1 << RCC_AHB5LPENR_AXISRAMLPEN_Pos;
pub const RCC_AHB5LPENR_AXISRAMLPEN: u32 = RCC_AHB5LPENR_AXISRAMLPEN_Msk;
pub const RCC_APB1LPENR1_TIM2LPEN_Pos: u32 = 0;
pub const RCC_APB1LPENR1_TIM2LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_TIM2LPEN_Pos;
pub const RCC_APB1LPENR1_TIM2LPEN: u32 = RCC_APB1LPENR1_TIM2LPEN_Msk;
pub const RCC_APB1LPENR1_TIM3LPEN_Pos: u32 = 1;
pub const RCC_APB1LPENR1_TIM3LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_TIM3LPEN_Pos;
pub const RCC_APB1LPENR1_TIM3LPEN: u32 = RCC_APB1LPENR1_TIM3LPEN_Msk;
pub const RCC_APB1LPENR1_TIM4LPEN_Pos: u32 = 2;
pub const RCC_APB1LPENR1_TIM4LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_TIM4LPEN_Pos;
pub const RCC_APB1LPENR1_TIM4LPEN: u32 = RCC_APB1LPENR1_TIM4LPEN_Msk;
pub const RCC_APB1LPENR1_TIM5LPEN_Pos: u32 = 3;
pub const RCC_APB1LPENR1_TIM5LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_TIM5LPEN_Pos;
pub const RCC_APB1LPENR1_TIM5LPEN: u32 = RCC_APB1LPENR1_TIM5LPEN_Msk;
pub const RCC_APB1LPENR1_TIM6LPEN_Pos: u32 = 4;
pub const RCC_APB1LPENR1_TIM6LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_TIM6LPEN_Pos;
pub const RCC_APB1LPENR1_TIM6LPEN: u32 = RCC_APB1LPENR1_TIM6LPEN_Msk;
pub const RCC_APB1LPENR1_TIM7LPEN_Pos: u32 = 5;
pub const RCC_APB1LPENR1_TIM7LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_TIM7LPEN_Pos;
pub const RCC_APB1LPENR1_TIM7LPEN: u32 = RCC_APB1LPENR1_TIM7LPEN_Msk;
pub const RCC_APB1LPENR1_TIM12LPEN_Pos: u32 = 6;
pub const RCC_APB1LPENR1_TIM12LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_TIM12LPEN_Pos;
pub const RCC_APB1LPENR1_TIM12LPEN: u32 = RCC_APB1LPENR1_TIM12LPEN_Msk;
pub const RCC_APB1LPENR1_TIM13LPEN_Pos: u32 = 7;
pub const RCC_APB1LPENR1_TIM13LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_TIM13LPEN_Pos;
pub const RCC_APB1LPENR1_TIM13LPEN: u32 = RCC_APB1LPENR1_TIM13LPEN_Msk;
pub const RCC_APB1LPENR1_TIM14LPEN_Pos: u32 = 8;
pub const RCC_APB1LPENR1_TIM14LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_TIM14LPEN_Pos;
pub const RCC_APB1LPENR1_TIM14LPEN: u32 = RCC_APB1LPENR1_TIM14LPEN_Msk;
pub const RCC_APB1LPENR1_LPTIM1LPEN_Pos: u32 = 9;
pub const RCC_APB1LPENR1_LPTIM1LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_LPTIM1LPEN_Pos;
pub const RCC_APB1LPENR1_LPTIM1LPEN: u32 = RCC_APB1LPENR1_LPTIM1LPEN_Msk;
pub const RCC_APB1LPENR1_WWDGLPEN_Pos: u32 = 11;
pub const RCC_APB1LPENR1_WWDGLPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_WWDGLPEN_Pos;
pub const RCC_APB1LPENR1_WWDGLPEN: u32 = RCC_APB1LPENR1_WWDGLPEN_Msk;
pub const RCC_APB1LPENR1_SPI2LPEN_Pos: u32 = 14;
pub const RCC_APB1LPENR1_SPI2LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_SPI2LPEN_Pos;
pub const RCC_APB1LPENR1_SPI2LPEN: u32 = RCC_APB1LPENR1_SPI2LPEN_Msk;
pub const RCC_APB1LPENR1_SPI3LPEN_Pos: u32 = 15;
pub const RCC_APB1LPENR1_SPI3LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_SPI3LPEN_Pos;
pub const RCC_APB1LPENR1_SPI3LPEN: u32 = RCC_APB1LPENR1_SPI3LPEN_Msk;
pub const RCC_APB1LPENR1_SPDIFRXLPEN_Pos: u32 = 16;
pub const RCC_APB1LPENR1_SPDIFRXLPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_SPDIFRXLPEN_Pos;
pub const RCC_APB1LPENR1_SPDIFRXLPEN: u32 = RCC_APB1LPENR1_SPDIFRXLPEN_Msk;
pub const RCC_APB1LPENR1_USART2LPEN_Pos: u32 = 17;
pub const RCC_APB1LPENR1_USART2LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_USART2LPEN_Pos;
pub const RCC_APB1LPENR1_USART2LPEN: u32 = RCC_APB1LPENR1_USART2LPEN_Msk;
pub const RCC_APB1LPENR1_USART3LPEN_Pos: u32 = 18;
pub const RCC_APB1LPENR1_USART3LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_USART3LPEN_Pos;
pub const RCC_APB1LPENR1_USART3LPEN: u32 = RCC_APB1LPENR1_USART3LPEN_Msk;
pub const RCC_APB1LPENR1_UART4LPEN_Pos: u32 = 19;
pub const RCC_APB1LPENR1_UART4LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_UART4LPEN_Pos;
pub const RCC_APB1LPENR1_UART4LPEN: u32 = RCC_APB1LPENR1_UART4LPEN_Msk;
pub const RCC_APB1LPENR1_UART5LPEN_Pos: u32 = 20;
pub const RCC_APB1LPENR1_UART5LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_UART5LPEN_Pos;
pub const RCC_APB1LPENR1_UART5LPEN: u32 = RCC_APB1LPENR1_UART5LPEN_Msk;
pub const RCC_APB1LPENR1_I2C1_I3C1LPEN_Pos: u32 = 21;
pub const RCC_APB1LPENR1_I2C1_I3C1LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_I2C1_I3C1LPEN_Pos;
pub const RCC_APB1LPENR1_I2C1_I3C1LPEN: u32 = RCC_APB1LPENR1_I2C1_I3C1LPEN_Msk;
pub const RCC_APB1LPENR1_I2C2LPEN_Pos: u32 = 22;
pub const RCC_APB1LPENR1_I2C2LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_I2C2LPEN_Pos;
pub const RCC_APB1LPENR1_I2C2LPEN: u32 = RCC_APB1LPENR1_I2C2LPEN_Msk;
pub const RCC_APB1LPENR1_I2C3LPEN_Pos: u32 = 23;
pub const RCC_APB1LPENR1_I2C3LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_I2C3LPEN_Pos;
pub const RCC_APB1LPENR1_I2C3LPEN: u32 = RCC_APB1LPENR1_I2C3LPEN_Msk;
pub const RCC_APB1LPENR1_CECLPEN_Pos: u32 = 27;
pub const RCC_APB1LPENR1_CECLPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_CECLPEN_Pos;
pub const RCC_APB1LPENR1_CECLPEN: u32 = RCC_APB1LPENR1_CECLPEN_Msk;
pub const RCC_APB1LPENR1_UART7LPEN_Pos: u32 = 30;
pub const RCC_APB1LPENR1_UART7LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_UART7LPEN_Pos;
pub const RCC_APB1LPENR1_UART7LPEN: u32 = RCC_APB1LPENR1_UART7LPEN_Msk;
pub const RCC_APB1LPENR1_UART8LPEN_Pos: u32 = 31;
pub const RCC_APB1LPENR1_UART8LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR1_UART8LPEN_Pos;
pub const RCC_APB1LPENR1_UART8LPEN: u32 = RCC_APB1LPENR1_UART8LPEN_Msk;
pub const RCC_APB1LPENR2_CRSLPEN_Pos: u32 = 1;
pub const RCC_APB1LPENR2_CRSLPEN_Msk: u32 = 0x1 << RCC_APB1LPENR2_CRSLPEN_Pos;
pub const RCC_APB1LPENR2_CRSLPEN: u32 = RCC_APB1LPENR2_CRSLPEN_Msk;
pub const RCC_APB1LPENR2_MDIOSLPEN_Pos: u32 = 5;
pub const RCC_APB1LPENR2_MDIOSLPEN_Msk: u32 = 0x1 << RCC_APB1LPENR2_MDIOSLPEN_Pos;
pub const RCC_APB1LPENR2_MDIOSLPEN: u32 = RCC_APB1LPENR2_MDIOSLPEN_Msk;
pub const RCC_APB1LPENR2_FDCANLPEN_Pos: u32 = 8;
pub const RCC_APB1LPENR2_FDCANLPEN_Msk: u32 = 0x1 << RCC_APB1LPENR2_FDCANLPEN_Pos;
pub const RCC_APB1LPENR2_FDCANLPEN: u32 = RCC_APB1LPENR2_FDCANLPEN_Msk;
pub const RCC_APB1LPENR2_UCPD1LPEN_Pos: u32 = 27;
pub const RCC_APB1LPENR2_UCPD1LPEN_Msk: u32 = 0x1 << RCC_APB1LPENR2_UCPD1LPEN_Pos;
pub const RCC_APB1LPENR2_UCPD1LPEN: u32 = RCC_APB1LPENR2_UCPD1LPEN_Msk;
pub const RCC_APB2LPENR_TIM1LPEN_Pos: u32 = 0;
pub const RCC_APB2LPENR_TIM1LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_TIM1LPEN_Pos;
pub const RCC_APB2LPENR_TIM1LPEN: u32 = RCC_APB2LPENR_TIM1LPEN_Msk;
pub const RCC_APB2LPENR_USART1LPEN_Pos: u32 = 4;
pub const RCC_APB2LPENR_USART1LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_USART1LPEN_Pos;
pub const RCC_APB2LPENR_USART1LPEN: u32 = RCC_APB2LPENR_USART1LPEN_Msk;
pub const RCC_APB2LPENR_SPI1LPEN_Pos: u32 = 12;
pub const RCC_APB2LPENR_SPI1LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_SPI1LPEN_Pos;
pub const RCC_APB2LPENR_SPI1LPEN: u32 = RCC_APB2LPENR_SPI1LPEN_Msk;
pub const RCC_APB2LPENR_SPI4LPEN_Pos: u32 = 13;
pub const RCC_APB2LPENR_SPI4LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_SPI4LPEN_Pos;
pub const RCC_APB2LPENR_SPI4LPEN: u32 = RCC_APB2LPENR_SPI4LPEN_Msk;
pub const RCC_APB2LPENR_TIM15LPEN_Pos: u32 = 16;
pub const RCC_APB2LPENR_TIM15LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_TIM15LPEN_Pos;
pub const RCC_APB2LPENR_TIM15LPEN: u32 = RCC_APB2LPENR_TIM15LPEN_Msk;
pub const RCC_APB2LPENR_TIM16LPEN_Pos: u32 = 17;
pub const RCC_APB2LPENR_TIM16LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_TIM16LPEN_Pos;
pub const RCC_APB2LPENR_TIM16LPEN: u32 = RCC_APB2LPENR_TIM16LPEN_Msk;
pub const RCC_APB2LPENR_TIM17LPEN_Pos: u32 = 18;
pub const RCC_APB2LPENR_TIM17LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_TIM17LPEN_Pos;
pub const RCC_APB2LPENR_TIM17LPEN: u32 = RCC_APB2LPENR_TIM17LPEN_Msk;
pub const RCC_APB2LPENR_TIM9LPEN_Pos: u32 = 19;
pub const RCC_APB2LPENR_TIM9LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_TIM9LPEN_Pos;
pub const RCC_APB2LPENR_TIM9LPEN: u32 = RCC_APB2LPENR_TIM9LPEN_Msk;
pub const RCC_APB2LPENR_SPI5LPEN_Pos: u32 = 20;
pub const RCC_APB2LPENR_SPI5LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_SPI5LPEN_Pos;
pub const RCC_APB2LPENR_SPI5LPEN: u32 = RCC_APB2LPENR_SPI5LPEN_Msk;
pub const RCC_APB2LPENR_SAI1LPEN_Pos: u32 = 22;
pub const RCC_APB2LPENR_SAI1LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_SAI1LPEN_Pos;
pub const RCC_APB2LPENR_SAI1LPEN: u32 = RCC_APB2LPENR_SAI1LPEN_Msk;
pub const RCC_APB2LPENR_SAI2LPEN_Pos: u32 = 23;
pub const RCC_APB2LPENR_SAI2LPEN_Msk: u32 = 0x1 << RCC_APB2LPENR_SAI2LPEN_Pos;
pub const RCC_APB2LPENR_SAI2LPEN: u32 = RCC_APB2LPENR_SAI2LPEN_Msk;
pub const RCC_APB4LPENR_SBSLPEN_Pos: u32 = 1;
pub const RCC_APB4LPENR_SBSLPEN_Msk: u32 = 0x1 << RCC_APB4LPENR_SBSLPEN_Pos;
pub const RCC_APB4LPENR_SBSLPEN: u32 = RCC_APB4LPENR_SBSLPEN_Msk;
pub const RCC_APB4LPENR_LPUART1LPEN_Pos: u32 = 3;
pub const RCC_APB4LPENR_LPUART1LPEN_Msk: u32 = 0x1 << RCC_APB4LPENR_LPUART1LPEN_Pos;
pub const RCC_APB4LPENR_LPUART1LPEN: u32 = RCC_APB4LPENR_LPUART1LPEN_Msk;
pub const RCC_APB4LPENR_SPI6LPEN_Pos: u32 = 5;
pub const RCC_APB4LPENR_SPI6LPEN_Msk: u32 = 0x1 << RCC_APB4LPENR_SPI6LPEN_Pos;
pub const RCC_APB4LPENR_SPI6LPEN: u32 = RCC_APB4LPENR_SPI6LPEN_Msk;
pub const RCC_APB4LPENR_LPTIM2LPEN_Pos: u32 = 9;
pub const RCC_APB4LPENR_LPTIM2LPEN_Msk: u32 = 0x1 << RCC_APB4LPENR_LPTIM2LPEN_Pos;
pub const RCC_APB4LPENR_LPTIM2LPEN: u32 = RCC_APB4LPENR_LPTIM2LPEN_Msk;
pub const RCC_APB4LPENR_LPTIM3LPEN_Pos: u32 = 10;
pub const RCC_APB4LPENR_LPTIM3LPEN_Msk: u32 = 0x1 << RCC_APB4LPENR_LPTIM3LPEN_Pos;
pub const RCC_APB4LPENR_LPTIM3LPEN: u32 = RCC_APB4LPENR_LPTIM3LPEN_Msk;
pub const RCC_APB4LPENR_LPTIM4LPEN_Pos: u32 = 11;
pub const RCC_APB4LPENR_LPTIM4LPEN_Msk: u32 = 0x1 << RCC_APB4LPENR_LPTIM4LPEN_Pos;
pub const RCC_APB4LPENR_LPTIM4LPEN: u32 = RCC_APB4LPENR_LPTIM4LPEN_Msk;
pub const RCC_APB4LPENR_LPTIM5LPEN_Pos: u32 = 12;
pub const RCC_APB4LPENR_LPTIM5LPEN_Msk: u32 = 0x1 << RCC_APB4LPENR_LPTIM5LPEN_Pos;
pub const RCC_APB4LPENR_LPTIM5LPEN: u32 = RCC_APB4LPENR_LPTIM5LPEN_Msk;
pub const RCC_APB4LPENR_VREFLPEN_Pos: u32 = 15;
pub const RCC_APB4LPENR_VREFLPEN_Msk: u32 = 0x1 << RCC_APB4LPENR_VREFLPEN_Pos;
pub const RCC_APB4LPENR_VREFLPEN: u32 = RCC_APB4LPENR_VREFLPEN_Msk;
pub const RCC_APB4LPENR_RTCAPBLPEN_Pos: u32 = 16;
pub const RCC_APB4LPENR_RTCAPBLPEN_Msk: u32 = 0x1 << RCC_APB4LPENR_RTCAPBLPEN_Pos;
pub const RCC_APB4LPENR_RTCAPBLPEN: u32 = RCC_APB4LPENR_RTCAPBLPEN_Msk;
pub const RCC_APB4LPENR_DTSLPEN_Pos: u32 = 26;
pub const RCC_APB4LPENR_DTSLPEN_Msk: u32 = 0x1 << RCC_APB4LPENR_DTSLPEN_Pos;
pub const RCC_APB4LPENR_DTSLPEN: u32 = RCC_APB4LPENR_DTSLPEN_Msk;
pub const RCC_APB5LPENR_LTDCLPEN_Pos: u32 = 1;
pub const RCC_APB5LPENR_LTDCLPEN_Msk: u32 = 0x1 << RCC_APB5LPENR_LTDCLPEN_Pos;
pub const RCC_APB5LPENR_LTDCLPEN: u32 = RCC_APB5LPENR_LTDCLPEN_Msk;
pub const RCC_APB5LPENR_DCMIPPLPEN_Pos: u32 = 2;
pub const RCC_APB5LPENR_DCMIPPLPEN_Msk: u32 = 0x1 << RCC_APB5LPENR_DCMIPPLPEN_Pos;
pub const RCC_APB5LPENR_DCMIPPLPEN: u32 = RCC_APB5LPENR_DCMIPPLPEN_Msk;
pub const RCC_APB5LPENR_GFXTIMLPEN_Pos: u32 = 4;
pub const RCC_APB5LPENR_GFXTIMLPEN_Msk: u32 = 0x1 << RCC_APB5LPENR_GFXTIMLPEN_Pos;
pub const RCC_APB5LPENR_GFXTIMLPEN: u32 = RCC_APB5LPENR_GFXTIMLPEN_Msk;
pub const RNG_CR_RNGEN_Pos: u32 = 2;
pub const RNG_CR_RNGEN_Msk: u32 = 0x1 << RNG_CR_RNGEN_Pos;
pub const RNG_CR_RNGEN: u32 = RNG_CR_RNGEN_Msk;
pub const RNG_CR_IE_Pos: u32 = 3;
pub const RNG_CR_IE_Msk: u32 = 0x1 << RNG_CR_IE_Pos;
pub const RNG_CR_IE: u32 = RNG_CR_IE_Msk;
pub const RNG_CR_CED_Pos: u32 = 5;
pub const RNG_CR_CED_Msk: u32 = 0x1 << RNG_CR_CED_Pos;
pub const RNG_CR_CED: u32 = RNG_CR_CED_Msk;
pub const RNG_CR_ARDIS_Pos: u32 = 7;
pub const RNG_CR_ARDIS_Msk: u32 = 0x1 << RNG_CR_ARDIS_Pos;
pub const RNG_CR_ARDIS: u32 = RNG_CR_ARDIS_Msk;
pub const RNG_CR_RNG_CONFIG3_Pos: u32 = 8;
pub const RNG_CR_RNG_CONFIG3_Msk: u32 = 0xF << RNG_CR_RNG_CONFIG3_Pos;
pub const RNG_CR_RNG_CONFIG3: u32 = RNG_CR_RNG_CONFIG3_Msk;
pub const RNG_CR_NISTC_Pos: u32 = 12;
pub const RNG_CR_NISTC_Msk: u32 = 0x1 << RNG_CR_NISTC_Pos;
pub const RNG_CR_NISTC: u32 = RNG_CR_NISTC_Msk;
pub const RNG_CR_RNG_CONFIG2_Pos: u32 = 13;
pub const RNG_CR_RNG_CONFIG2_Msk: u32 = 0x7 << RNG_CR_RNG_CONFIG2_Pos;
pub const RNG_CR_RNG_CONFIG2: u32 = RNG_CR_RNG_CONFIG2_Msk;
pub const RNG_CR_CLKDIV_Pos: u32 = 16;
pub const RNG_CR_CLKDIV_Msk: u32 = 0xF << RNG_CR_CLKDIV_Pos;
pub const RNG_CR_CLKDIV: u32 = RNG_CR_CLKDIV_Msk;
pub const RNG_CR_CLKDIV_0: u32 = 0x1 << RNG_CR_CLKDIV_Pos;
pub const RNG_CR_CLKDIV_1: u32 = 0x2 << RNG_CR_CLKDIV_Pos;
pub const RNG_CR_CLKDIV_2: u32 = 0x4 << RNG_CR_CLKDIV_Pos;
pub const RNG_CR_CLKDIV_3: u32 = 0x8 << RNG_CR_CLKDIV_Pos;
pub const RNG_CR_RNG_CONFIG1_Pos: u32 = 20;
pub const RNG_CR_RNG_CONFIG1_Msk: u32 = 0x3F << RNG_CR_RNG_CONFIG1_Pos;
pub const RNG_CR_RNG_CONFIG1: u32 = RNG_CR_RNG_CONFIG1_Msk;
pub const RNG_CR_CONDRST_Pos: u32 = 30;
pub const RNG_CR_CONDRST_Msk: u32 = 0x1 << RNG_CR_CONDRST_Pos;
pub const RNG_CR_CONDRST: u32 = RNG_CR_CONDRST_Msk;
pub const RNG_CR_CONFIGLOCK_Pos: u32 = 31;
pub const RNG_CR_CONFIGLOCK_Msk: u32 = 0x1 << RNG_CR_CONFIGLOCK_Pos;
pub const RNG_CR_CONFIGLOCK: u32 = RNG_CR_CONFIGLOCK_Msk;
pub const RNG_SR_DRDY_Pos: u32 = 0;
pub const RNG_SR_DRDY_Msk: u32 = 0x1 << RNG_SR_DRDY_Pos;
pub const RNG_SR_DRDY: u32 = RNG_SR_DRDY_Msk;
pub const RNG_SR_CECS_Pos: u32 = 1;
pub const RNG_SR_CECS_Msk: u32 = 0x1 << RNG_SR_CECS_Pos;
pub const RNG_SR_CECS: u32 = RNG_SR_CECS_Msk;
pub const RNG_SR_SECS_Pos: u32 = 2;
pub const RNG_SR_SECS_Msk: u32 = 0x1 << RNG_SR_SECS_Pos;
pub const RNG_SR_SECS: u32 = RNG_SR_SECS_Msk;
pub const RNG_SR_CEIS_Pos: u32 = 5;
pub const RNG_SR_CEIS_Msk: u32 = 0x1 << RNG_SR_CEIS_Pos;
pub const RNG_SR_CEIS: u32 = RNG_SR_CEIS_Msk;
pub const RNG_SR_SEIS_Pos: u32 = 6;
pub const RNG_SR_SEIS_Msk: u32 = 0x1 << RNG_SR_SEIS_Pos;
pub const RNG_SR_SEIS: u32 = RNG_SR_SEIS_Msk;
pub const RNG_HTCR_HTCFG_Pos: u32 = 0;
pub const RNG_HTCR_HTCFG_Msk: u32 = 0xFFFFFFFF << RNG_HTCR_HTCFG_Pos;
pub const RNG_HTCR_HTCFG: u32 = RNG_HTCR_HTCFG_Msk;
pub const RTC_TR_SU_Pos: u32 = 0;
pub const RTC_TR_SU_Msk: u32 = 0xF << RTC_TR_SU_Pos;
pub const RTC_TR_SU: u32 = RTC_TR_SU_Msk;
pub const RTC_TR_SU_0: u32 = 0x1 << RTC_TR_SU_Pos;
pub const RTC_TR_SU_1: u32 = 0x2 << RTC_TR_SU_Pos;
pub const RTC_TR_SU_2: u32 = 0x4 << RTC_TR_SU_Pos;
pub const RTC_TR_SU_3: u32 = 0x8 << RTC_TR_SU_Pos;
pub const RTC_TR_ST_Pos: u32 = 4;
pub const RTC_TR_ST_Msk: u32 = 0x7 << RTC_TR_ST_Pos;
pub const RTC_TR_ST: u32 = RTC_TR_ST_Msk;
pub const RTC_TR_ST_0: u32 = 0x1 << RTC_TR_ST_Pos;
pub const RTC_TR_ST_1: u32 = 0x2 << RTC_TR_ST_Pos;
pub const RTC_TR_ST_2: u32 = 0x4 << RTC_TR_ST_Pos;
pub const RTC_TR_MNU_Pos: u32 = 8;
pub const RTC_TR_MNU_Msk: u32 = 0xF << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU: u32 = RTC_TR_MNU_Msk;
pub const RTC_TR_MNU_0: u32 = 0x1 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU_1: u32 = 0x2 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU_2: u32 = 0x4 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU_3: u32 = 0x8 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNT_Pos: u32 = 12;
pub const RTC_TR_MNT_Msk: u32 = 0x7 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNT: u32 = RTC_TR_MNT_Msk;
pub const RTC_TR_MNT_0: u32 = 0x1 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNT_1: u32 = 0x2 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNT_2: u32 = 0x4 << RTC_TR_MNT_Pos;
pub const RTC_TR_HU_Pos: u32 = 16;
pub const RTC_TR_HU_Msk: u32 = 0xF << RTC_TR_HU_Pos;
pub const RTC_TR_HU: u32 = RTC_TR_HU_Msk;
pub const RTC_TR_HU_0: u32 = 0x1 << RTC_TR_HU_Pos;
pub const RTC_TR_HU_1: u32 = 0x2 << RTC_TR_HU_Pos;
pub const RTC_TR_HU_2: u32 = 0x4 << RTC_TR_HU_Pos;
pub const RTC_TR_HU_3: u32 = 0x8 << RTC_TR_HU_Pos;
pub const RTC_TR_HT_Pos: u32 = 20;
pub const RTC_TR_HT_Msk: u32 = 0x3 << RTC_TR_HT_Pos;
pub const RTC_TR_HT: u32 = RTC_TR_HT_Msk;
pub const RTC_TR_HT_0: u32 = 0x1 << RTC_TR_HT_Pos;
pub const RTC_TR_HT_1: u32 = 0x2 << RTC_TR_HT_Pos;
pub const RTC_TR_PM_Pos: u32 = 22;
pub const RTC_TR_PM_Msk: u32 = 0x1 << RTC_TR_PM_Pos;
pub const RTC_TR_PM: u32 = RTC_TR_PM_Msk;
pub const RTC_DR_DU_Pos: u32 = 0;
pub const RTC_DR_DU_Msk: u32 = 0xF << RTC_DR_DU_Pos;
pub const RTC_DR_DU: u32 = RTC_DR_DU_Msk;
pub const RTC_DR_DU_0: u32 = 0x1 << RTC_DR_DU_Pos;
pub const RTC_DR_DU_1: u32 = 0x2 << RTC_DR_DU_Pos;
pub const RTC_DR_DU_2: u32 = 0x4 << RTC_DR_DU_Pos;
pub const RTC_DR_DU_3: u32 = 0x8 << RTC_DR_DU_Pos;
pub const RTC_DR_DT_Pos: u32 = 4;
pub const RTC_DR_DT_Msk: u32 = 0x3 << RTC_DR_DT_Pos;
pub const RTC_DR_DT: u32 = RTC_DR_DT_Msk;
pub const RTC_DR_DT_0: u32 = 0x1 << RTC_DR_DT_Pos;
pub const RTC_DR_DT_1: u32 = 0x2 << RTC_DR_DT_Pos;
pub const RTC_DR_MU_Pos: u32 = 8;
pub const RTC_DR_MU_Msk: u32 = 0xF << RTC_DR_MU_Pos;
pub const RTC_DR_MU: u32 = RTC_DR_MU_Msk;
pub const RTC_DR_MU_0: u32 = 0x1 << RTC_DR_MU_Pos;
pub const RTC_DR_MU_1: u32 = 0x2 << RTC_DR_MU_Pos;
pub const RTC_DR_MU_2: u32 = 0x4 << RTC_DR_MU_Pos;
pub const RTC_DR_MU_3: u32 = 0x8 << RTC_DR_MU_Pos;
pub const RTC_DR_MT_Pos: u32 = 12;
pub const RTC_DR_MT_Msk: u32 = 0x1 << RTC_DR_MT_Pos;
pub const RTC_DR_MT: u32 = RTC_DR_MT_Msk;
pub const RTC_DR_WDU_Pos: u32 = 13;
pub const RTC_DR_WDU_Msk: u32 = 0x7 << RTC_DR_WDU_Pos;
pub const RTC_DR_WDU: u32 = RTC_DR_WDU_Msk;
pub const RTC_DR_WDU_0: u32 = 0x1 << RTC_DR_WDU_Pos;
pub const RTC_DR_WDU_1: u32 = 0x2 << RTC_DR_WDU_Pos;
pub const RTC_DR_WDU_2: u32 = 0x4 << RTC_DR_WDU_Pos;
pub const RTC_DR_YU_Pos: u32 = 16;
pub const RTC_DR_YU_Msk: u32 = 0xF << RTC_DR_YU_Pos;
pub const RTC_DR_YU: u32 = RTC_DR_YU_Msk;
pub const RTC_DR_YU_0: u32 = 0x1 << RTC_DR_YU_Pos;
pub const RTC_DR_YU_1: u32 = 0x2 << RTC_DR_YU_Pos;
pub const RTC_DR_YU_2: u32 = 0x4 << RTC_DR_YU_Pos;
pub const RTC_DR_YU_3: u32 = 0x8 << RTC_DR_YU_Pos;
pub const RTC_DR_YT_Pos: u32 = 20;
pub const RTC_DR_YT_Msk: u32 = 0xF << RTC_DR_YT_Pos;
pub const RTC_DR_YT: u32 = RTC_DR_YT_Msk;
pub const RTC_DR_YT_0: u32 = 0x1 << RTC_DR_YT_Pos;
pub const RTC_DR_YT_1: u32 = 0x2 << RTC_DR_YT_Pos;
pub const RTC_DR_YT_2: u32 = 0x4 << RTC_DR_YT_Pos;
pub const RTC_DR_YT_3: u32 = 0x8 << RTC_DR_YT_Pos;
pub const RTC_SSR_SS_Pos: u32 = 0;
pub const RTC_SSR_SS_Msk: u32 = 0xFFFFFFFF << RTC_SSR_SS_Pos;
pub const RTC_SSR_SS: u32 = RTC_SSR_SS_Msk;
pub const RTC_ICSR_WUTWF_Pos: u32 = 2;
pub const RTC_ICSR_WUTWF_Msk: u32 = 0x1 << RTC_ICSR_WUTWF_Pos;
pub const RTC_ICSR_WUTWF: u32 = RTC_ICSR_WUTWF_Msk;
pub const RTC_ICSR_SHPF_Pos: u32 = 3;
pub const RTC_ICSR_SHPF_Msk: u32 = 0x1 << RTC_ICSR_SHPF_Pos;
pub const RTC_ICSR_SHPF: u32 = RTC_ICSR_SHPF_Msk;
pub const RTC_ICSR_INITS_Pos: u32 = 4;
pub const RTC_ICSR_INITS_Msk: u32 = 0x1 << RTC_ICSR_INITS_Pos;
pub const RTC_ICSR_INITS: u32 = RTC_ICSR_INITS_Msk;
pub const RTC_ICSR_RSF_Pos: u32 = 5;
pub const RTC_ICSR_RSF_Msk: u32 = 0x1 << RTC_ICSR_RSF_Pos;
pub const RTC_ICSR_RSF: u32 = RTC_ICSR_RSF_Msk;
pub const RTC_ICSR_INITF_Pos: u32 = 6;
pub const RTC_ICSR_INITF_Msk: u32 = 0x1 << RTC_ICSR_INITF_Pos;
pub const RTC_ICSR_INITF: u32 = RTC_ICSR_INITF_Msk;
pub const RTC_ICSR_INIT_Pos: u32 = 7;
pub const RTC_ICSR_INIT_Msk: u32 = 0x1 << RTC_ICSR_INIT_Pos;
pub const RTC_ICSR_INIT: u32 = RTC_ICSR_INIT_Msk;
pub const RTC_ICSR_BIN_Pos: u32 = 8;
pub const RTC_ICSR_BIN_Msk: u32 = 0x3 << RTC_ICSR_BIN_Pos;
pub const RTC_ICSR_BIN: u32 = RTC_ICSR_BIN_Msk;
pub const RTC_ICSR_BIN_0: u32 = 0x1 << RTC_ICSR_BIN_Pos;
pub const RTC_ICSR_BIN_1: u32 = 0x2 << RTC_ICSR_BIN_Pos;
pub const RTC_ICSR_BCDU_Pos: u32 = 10;
pub const RTC_ICSR_BCDU_Msk: u32 = 0x7 << RTC_ICSR_BCDU_Pos;
pub const RTC_ICSR_BCDU: u32 = RTC_ICSR_BCDU_Msk;
pub const RTC_ICSR_BCDU_0: u32 = 0x1 << RTC_ICSR_BCDU_Pos;
pub const RTC_ICSR_BCDU_1: u32 = 0x2 << RTC_ICSR_BCDU_Pos;
pub const RTC_ICSR_BCDU_2: u32 = 0x4 << RTC_ICSR_BCDU_Pos;
pub const RTC_ICSR_RECALPF_Pos: u32 = 16;
pub const RTC_ICSR_RECALPF_Msk: u32 = 0x1 << RTC_ICSR_RECALPF_Pos;
pub const RTC_ICSR_RECALPF: u32 = RTC_ICSR_RECALPF_Msk;
pub const RTC_PRER_PREDIV_S_Pos: u32 = 0;
pub const RTC_PRER_PREDIV_S_Msk: u32 = 0x7FFF << RTC_PRER_PREDIV_S_Pos;
pub const RTC_PRER_PREDIV_S: u32 = RTC_PRER_PREDIV_S_Msk;
pub const RTC_PRER_PREDIV_A_Pos: u32 = 16;
pub const RTC_PRER_PREDIV_A_Msk: u32 = 0x7F << RTC_PRER_PREDIV_A_Pos;
pub const RTC_PRER_PREDIV_A: u32 = RTC_PRER_PREDIV_A_Msk;
pub const RTC_WUTR_WUT_Pos: u32 = 0;
pub const RTC_WUTR_WUT_Msk: u32 = 0xFFFF << RTC_WUTR_WUT_Pos;
pub const RTC_WUTR_WUT: u32 = RTC_WUTR_WUT_Msk;
pub const RTC_WUTR_WUTOCLR_Pos: u32 = 16;
pub const RTC_WUTR_WUTOCLR_Msk: u32 = 0xFFFF << RTC_WUTR_WUTOCLR_Pos;
pub const RTC_WUTR_WUTOCLR: u32 = RTC_WUTR_WUTOCLR_Msk;
pub const RTC_CR_WUCKSEL_Pos: u32 = 0;
pub const RTC_CR_WUCKSEL_Msk: u32 = 0x7 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_WUCKSEL: u32 = RTC_CR_WUCKSEL_Msk;
pub const RTC_CR_WUCKSEL_0: u32 = 0x1 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_WUCKSEL_1: u32 = 0x2 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_WUCKSEL_2: u32 = 0x4 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_TSEDGE_Pos: u32 = 3;
pub const RTC_CR_TSEDGE_Msk: u32 = 0x1 << RTC_CR_TSEDGE_Pos;
pub const RTC_CR_TSEDGE: u32 = RTC_CR_TSEDGE_Msk;
pub const RTC_CR_REFCKON_Pos: u32 = 4;
pub const RTC_CR_REFCKON_Msk: u32 = 0x1 << RTC_CR_REFCKON_Pos;
pub const RTC_CR_REFCKON: u32 = RTC_CR_REFCKON_Msk;
pub const RTC_CR_BYPSHAD_Pos: u32 = 5;
pub const RTC_CR_BYPSHAD_Msk: u32 = 0x1 << RTC_CR_BYPSHAD_Pos;
pub const RTC_CR_BYPSHAD: u32 = RTC_CR_BYPSHAD_Msk;
pub const RTC_CR_FMT_Pos: u32 = 6;
pub const RTC_CR_FMT_Msk: u32 = 0x1 << RTC_CR_FMT_Pos;
pub const RTC_CR_FMT: u32 = RTC_CR_FMT_Msk;
pub const RTC_CR_SSRUIE_Pos: u32 = 7;
pub const RTC_CR_SSRUIE_Msk: u32 = 0x1 << RTC_CR_SSRUIE_Pos;
pub const RTC_CR_SSRUIE: u32 = RTC_CR_SSRUIE_Msk;
pub const RTC_CR_ALRAE_Pos: u32 = 8;
pub const RTC_CR_ALRAE_Msk: u32 = 0x1 << RTC_CR_ALRAE_Pos;
pub const RTC_CR_ALRAE: u32 = RTC_CR_ALRAE_Msk;
pub const RTC_CR_ALRBE_Pos: u32 = 9;
pub const RTC_CR_ALRBE_Msk: u32 = 0x1 << RTC_CR_ALRBE_Pos;
pub const RTC_CR_ALRBE: u32 = RTC_CR_ALRBE_Msk;
pub const RTC_CR_WUTE_Pos: u32 = 10;
pub const RTC_CR_WUTE_Msk: u32 = 0x1 << RTC_CR_WUTE_Pos;
pub const RTC_CR_WUTE: u32 = RTC_CR_WUTE_Msk;
pub const RTC_CR_TSE_Pos: u32 = 11;
pub const RTC_CR_TSE_Msk: u32 = 0x1 << RTC_CR_TSE_Pos;
pub const RTC_CR_TSE: u32 = RTC_CR_TSE_Msk;
pub const RTC_CR_ALRAIE_Pos: u32 = 12;
pub const RTC_CR_ALRAIE_Msk: u32 = 0x1 << RTC_CR_ALRAIE_Pos;
pub const RTC_CR_ALRAIE: u32 = RTC_CR_ALRAIE_Msk;
pub const RTC_CR_ALRBIE_Pos: u32 = 13;
pub const RTC_CR_ALRBIE_Msk: u32 = 0x1 << RTC_CR_ALRBIE_Pos;
pub const RTC_CR_ALRBIE: u32 = RTC_CR_ALRBIE_Msk;
pub const RTC_CR_WUTIE_Pos: u32 = 14;
pub const RTC_CR_WUTIE_Msk: u32 = 0x1 << RTC_CR_WUTIE_Pos;
pub const RTC_CR_WUTIE: u32 = RTC_CR_WUTIE_Msk;
pub const RTC_CR_TSIE_Pos: u32 = 15;
pub const RTC_CR_TSIE_Msk: u32 = 0x1 << RTC_CR_TSIE_Pos;
pub const RTC_CR_TSIE: u32 = RTC_CR_TSIE_Msk;
pub const RTC_CR_ADD1H_Pos: u32 = 16;
pub const RTC_CR_ADD1H_Msk: u32 = 0x1 << RTC_CR_ADD1H_Pos;
pub const RTC_CR_ADD1H: u32 = RTC_CR_ADD1H_Msk;
pub const RTC_CR_SUB1H_Pos: u32 = 17;
pub const RTC_CR_SUB1H_Msk: u32 = 0x1 << RTC_CR_SUB1H_Pos;
pub const RTC_CR_SUB1H: u32 = RTC_CR_SUB1H_Msk;
pub const RTC_CR_BKP_Pos: u32 = 18;
pub const RTC_CR_BKP_Msk: u32 = 0x1 << RTC_CR_BKP_Pos;
pub const RTC_CR_BKP: u32 = RTC_CR_BKP_Msk;
pub const RTC_CR_COSEL_Pos: u32 = 19;
pub const RTC_CR_COSEL_Msk: u32 = 0x1 << RTC_CR_COSEL_Pos;
pub const RTC_CR_COSEL: u32 = RTC_CR_COSEL_Msk;
pub const RTC_CR_POL_Pos: u32 = 20;
pub const RTC_CR_POL_Msk: u32 = 0x1 << RTC_CR_POL_Pos;
pub const RTC_CR_POL: u32 = RTC_CR_POL_Msk;
pub const RTC_CR_OSEL_Pos: u32 = 21;
pub const RTC_CR_OSEL_Msk: u32 = 0x3 << RTC_CR_OSEL_Pos;
pub const RTC_CR_OSEL: u32 = RTC_CR_OSEL_Msk;
pub const RTC_CR_OSEL_0: u32 = 0x1 << RTC_CR_OSEL_Pos;
pub const RTC_CR_OSEL_1: u32 = 0x2 << RTC_CR_OSEL_Pos;
pub const RTC_CR_COE_Pos: u32 = 23;
pub const RTC_CR_COE_Msk: u32 = 0x1 << RTC_CR_COE_Pos;
pub const RTC_CR_COE: u32 = RTC_CR_COE_Msk;
pub const RTC_CR_ITSE_Pos: u32 = 24;
pub const RTC_CR_ITSE_Msk: u32 = 0x1 << RTC_CR_ITSE_Pos;
pub const RTC_CR_ITSE: u32 = RTC_CR_ITSE_Msk;
pub const RTC_CR_TAMPTS_Pos: u32 = 25;
pub const RTC_CR_TAMPTS_Msk: u32 = 0x1 << RTC_CR_TAMPTS_Pos;
pub const RTC_CR_TAMPTS: u32 = RTC_CR_TAMPTS_Msk;
pub const RTC_CR_TAMPOE_Pos: u32 = 26;
pub const RTC_CR_TAMPOE_Msk: u32 = 0x1 << RTC_CR_TAMPOE_Pos;
pub const RTC_CR_TAMPOE: u32 = RTC_CR_TAMPOE_Msk;
pub const RTC_CR_ALRAFCLR_Pos: u32 = 27;
pub const RTC_CR_ALRAFCLR_Msk: u32 = 0x1 << RTC_CR_ALRAFCLR_Pos;
pub const RTC_CR_ALRAFCLR: u32 = RTC_CR_ALRAFCLR_Msk;
pub const RTC_CR_ALRBFCLR_Pos: u32 = 28;
pub const RTC_CR_ALRBFCLR_Msk: u32 = 0x1 << RTC_CR_ALRBFCLR_Pos;
pub const RTC_CR_ALRBFCLR: u32 = RTC_CR_ALRBFCLR_Msk;
pub const RTC_CR_TAMPALRM_PU_Pos: u32 = 29;
pub const RTC_CR_TAMPALRM_PU_Msk: u32 = 0x1 << RTC_CR_TAMPALRM_PU_Pos;
pub const RTC_CR_TAMPALRM_PU: u32 = RTC_CR_TAMPALRM_PU_Msk;
pub const RTC_CR_TAMPALRM_TYPE_Pos: u32 = 30;
pub const RTC_CR_TAMPALRM_TYPE_Msk: u32 = 0x1 << RTC_CR_TAMPALRM_TYPE_Pos;
pub const RTC_CR_TAMPALRM_TYPE: u32 = RTC_CR_TAMPALRM_TYPE_Msk;
pub const RTC_CR_OUT2EN_Pos: u32 = 31;
pub const RTC_CR_OUT2EN_Msk: u32 = 0x1 << RTC_CR_OUT2EN_Pos;
pub const RTC_CR_OUT2EN: u32 = RTC_CR_OUT2EN_Msk;
pub const RTC_PRIVCFGR_ALRAPRIV_Pos: u32 = 0;
pub const RTC_PRIVCFGR_ALRAPRIV_Msk: u32 = 0x1 << RTC_PRIVCFGR_ALRAPRIV_Pos;
pub const RTC_PRIVCFGR_ALRAPRIV: u32 = RTC_PRIVCFGR_ALRAPRIV_Msk;
pub const RTC_PRIVCFGR_ALRBPRIV_Pos: u32 = 1;
pub const RTC_PRIVCFGR_ALRBPRIV_Msk: u32 = 0x1 << RTC_PRIVCFGR_ALRBPRIV_Pos;
pub const RTC_PRIVCFGR_ALRBPRIV: u32 = RTC_PRIVCFGR_ALRBPRIV_Msk;
pub const RTC_PRIVCFGR_WUTPRIV_Pos: u32 = 2;
pub const RTC_PRIVCFGR_WUTPRIV_Msk: u32 = 0x1 << RTC_PRIVCFGR_WUTPRIV_Pos;
pub const RTC_PRIVCFGR_WUTPRIV: u32 = RTC_PRIVCFGR_WUTPRIV_Msk;
pub const RTC_PRIVCFGR_TSPRIV_Pos: u32 = 3;
pub const RTC_PRIVCFGR_TSPRIV_Msk: u32 = 0x1 << RTC_PRIVCFGR_TSPRIV_Pos;
pub const RTC_PRIVCFGR_TSPRIV: u32 = RTC_PRIVCFGR_TSPRIV_Msk;
pub const RTC_PRIVCFGR_CALPRIV_Pos: u32 = 13;
pub const RTC_PRIVCFGR_CALPRIV_Msk: u32 = 0x1 << RTC_PRIVCFGR_CALPRIV_Pos;
pub const RTC_PRIVCFGR_CALPRIV: u32 = RTC_PRIVCFGR_CALPRIV_Msk;
pub const RTC_PRIVCFGR_INITPRIV_Pos: u32 = 14;
pub const RTC_PRIVCFGR_INITPRIV_Msk: u32 = 0x1 << RTC_PRIVCFGR_INITPRIV_Pos;
pub const RTC_PRIVCFGR_INITPRIV: u32 = RTC_PRIVCFGR_INITPRIV_Msk;
pub const RTC_PRIVCFGR_PRIV_Pos: u32 = 15;
pub const RTC_PRIVCFGR_PRIV_Msk: u32 = 0x1 << RTC_PRIVCFGR_PRIV_Pos;
pub const RTC_PRIVCFGR_PRIV: u32 = RTC_PRIVCFGR_PRIV_Msk;
pub const RTC_WPR_KEY_Pos: u32 = 0;
pub const RTC_WPR_KEY_Msk: u32 = 0xFF << RTC_WPR_KEY_Pos;
pub const RTC_WPR_KEY: u32 = RTC_WPR_KEY_Msk;
pub const RTC_CALR_CALM_Pos: u32 = 0;
pub const RTC_CALR_CALM_Msk: u32 = 0x1FF << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM: u32 = RTC_CALR_CALM_Msk;
pub const RTC_CALR_CALM_0: u32 = 0x001 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_1: u32 = 0x002 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_2: u32 = 0x004 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_3: u32 = 0x008 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_4: u32 = 0x010 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_5: u32 = 0x020 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_6: u32 = 0x040 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_7: u32 = 0x080 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_8: u32 = 0x100 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_LPCAL_Pos: u32 = 12;
pub const RTC_CALR_LPCAL_Msk: u32 = 0x1 << RTC_CALR_LPCAL_Pos;
pub const RTC_CALR_CALW16: u32 = RTC_CALR_CALW16_Msk;
pub const RTC_CALR_CALW16_Pos: u32 = 13;
pub const RTC_CALR_CALW16_Msk: u32 = 0x1 << RTC_CALR_CALW16_Pos;
pub const RTC_CALR_LPCAL: u32 = RTC_CALR_LPCAL_Msk;
pub const RTC_CALR_CALW8_Pos: u32 = 14;
pub const RTC_CALR_CALW8_Msk: u32 = 0x1 << RTC_CALR_CALW8_Pos;
pub const RTC_CALR_CALW8: u32 = RTC_CALR_CALW8_Msk;
pub const RTC_CALR_CALP_Pos: u32 = 15;
pub const RTC_CALR_CALP_Msk: u32 = 0x1 << RTC_CALR_CALP_Pos;
pub const RTC_CALR_CALP: u32 = RTC_CALR_CALP_Msk;
pub const RTC_SHIFTR_SUBFS_Pos: u32 = 0;
pub const RTC_SHIFTR_SUBFS_Msk: u32 = 0x7FFF << RTC_SHIFTR_SUBFS_Pos;
pub const RTC_SHIFTR_SUBFS: u32 = RTC_SHIFTR_SUBFS_Msk;
pub const RTC_SHIFTR_ADD1S_Pos: u32 = 31;
pub const RTC_SHIFTR_ADD1S_Msk: u32 = 0x1 << RTC_SHIFTR_ADD1S_Pos;
pub const RTC_SHIFTR_ADD1S: u32 = RTC_SHIFTR_ADD1S_Msk;
pub const RTC_TSTR_SU_Pos: u32 = 0;
pub const RTC_TSTR_SU_Msk: u32 = 0xF << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU: u32 = RTC_TSTR_SU_Msk;
pub const RTC_TSTR_SU_0: u32 = 0x1 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU_1: u32 = 0x2 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU_2: u32 = 0x4 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU_3: u32 = 0x8 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_ST_Pos: u32 = 4;
pub const RTC_TSTR_ST_Msk: u32 = 0x7 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_ST: u32 = RTC_TSTR_ST_Msk;
pub const RTC_TSTR_ST_0: u32 = 0x1 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_ST_1: u32 = 0x2 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_ST_2: u32 = 0x4 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_MNU_Pos: u32 = 8;
pub const RTC_TSTR_MNU_Msk: u32 = 0xF << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU: u32 = RTC_TSTR_MNU_Msk;
pub const RTC_TSTR_MNU_0: u32 = 0x1 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU_1: u32 = 0x2 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU_2: u32 = 0x4 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU_3: u32 = 0x8 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNT_Pos: u32 = 12;
pub const RTC_TSTR_MNT_Msk: u32 = 0x7 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNT: u32 = RTC_TSTR_MNT_Msk;
pub const RTC_TSTR_MNT_0: u32 = 0x1 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNT_1: u32 = 0x2 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNT_2: u32 = 0x4 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_HU_Pos: u32 = 16;
pub const RTC_TSTR_HU_Msk: u32 = 0xF << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU: u32 = RTC_TSTR_HU_Msk;
pub const RTC_TSTR_HU_0: u32 = 0x1 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU_1: u32 = 0x2 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU_2: u32 = 0x4 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU_3: u32 = 0x8 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HT_Pos: u32 = 20;
pub const RTC_TSTR_HT_Msk: u32 = 0x3 << RTC_TSTR_HT_Pos;
pub const RTC_TSTR_HT: u32 = RTC_TSTR_HT_Msk;
pub const RTC_TSTR_HT_0: u32 = 0x1 << RTC_TSTR_HT_Pos;
pub const RTC_TSTR_HT_1: u32 = 0x2 << RTC_TSTR_HT_Pos;
pub const RTC_TSTR_PM_Pos: u32 = 22;
pub const RTC_TSTR_PM_Msk: u32 = 0x1 << RTC_TSTR_PM_Pos;
pub const RTC_TSTR_PM: u32 = RTC_TSTR_PM_Msk;
pub const RTC_TSDR_DU_Pos: u32 = 0;
pub const RTC_TSDR_DU_Msk: u32 = 0xF << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU: u32 = RTC_TSDR_DU_Msk;
pub const RTC_TSDR_DU_0: u32 = 0x1 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU_1: u32 = 0x2 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU_2: u32 = 0x4 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU_3: u32 = 0x8 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DT_Pos: u32 = 4;
pub const RTC_TSDR_DT_Msk: u32 = 0x3 << RTC_TSDR_DT_Pos;
pub const RTC_TSDR_DT: u32 = RTC_TSDR_DT_Msk;
pub const RTC_TSDR_DT_0: u32 = 0x1 << RTC_TSDR_DT_Pos;
pub const RTC_TSDR_DT_1: u32 = 0x2 << RTC_TSDR_DT_Pos;
pub const RTC_TSDR_MU_Pos: u32 = 8;
pub const RTC_TSDR_MU_Msk: u32 = 0xF << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU: u32 = RTC_TSDR_MU_Msk;
pub const RTC_TSDR_MU_0: u32 = 0x1 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU_1: u32 = 0x2 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU_2: u32 = 0x4 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU_3: u32 = 0x8 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MT_Pos: u32 = 12;
pub const RTC_TSDR_MT_Msk: u32 = 0x1 << RTC_TSDR_MT_Pos;
pub const RTC_TSDR_MT: u32 = RTC_TSDR_MT_Msk;
pub const RTC_TSDR_WDU_Pos: u32 = 13;
pub const RTC_TSDR_WDU_Msk: u32 = 0x7 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_WDU: u32 = RTC_TSDR_WDU_Msk;
pub const RTC_TSDR_WDU_0: u32 = 0x1 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_WDU_1: u32 = 0x2 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_WDU_2: u32 = 0x4 << RTC_TSDR_WDU_Pos;
pub const RTC_TSSSR_SS_Pos: u32 = 0;
pub const RTC_TSSSR_SS_Msk: u32 = 0xFFFFFFFF << RTC_TSSSR_SS_Pos;
pub const RTC_TSSSR_SS: u32 = RTC_TSSSR_SS_Msk;
pub const RTC_ALRMAR_SU_Pos: u32 = 0;
pub const RTC_ALRMAR_SU_Msk: u32 = 0xF << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU: u32 = RTC_ALRMAR_SU_Msk;
pub const RTC_ALRMAR_SU_0: u32 = 0x1 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU_1: u32 = 0x2 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU_2: u32 = 0x4 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU_3: u32 = 0x8 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_ST_Pos: u32 = 4;
pub const RTC_ALRMAR_ST_Msk: u32 = 0x7 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_ST: u32 = RTC_ALRMAR_ST_Msk;
pub const RTC_ALRMAR_ST_0: u32 = 0x1 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_ST_1: u32 = 0x2 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_ST_2: u32 = 0x4 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_MSK1_Pos: u32 = 7;
pub const RTC_ALRMAR_MSK1_Msk: u32 = 0x1 << RTC_ALRMAR_MSK1_Pos;
pub const RTC_ALRMAR_MSK1: u32 = RTC_ALRMAR_MSK1_Msk;
pub const RTC_ALRMAR_MNU_Pos: u32 = 8;
pub const RTC_ALRMAR_MNU_Msk: u32 = 0xF << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU: u32 = RTC_ALRMAR_MNU_Msk;
pub const RTC_ALRMAR_MNU_0: u32 = 0x1 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU_1: u32 = 0x2 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU_2: u32 = 0x4 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU_3: u32 = 0x8 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNT_Pos: u32 = 12;
pub const RTC_ALRMAR_MNT_Msk: u32 = 0x7 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNT: u32 = RTC_ALRMAR_MNT_Msk;
pub const RTC_ALRMAR_MNT_0: u32 = 0x1 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNT_1: u32 = 0x2 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNT_2: u32 = 0x4 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MSK2_Pos: u32 = 15;
pub const RTC_ALRMAR_MSK2_Msk: u32 = 0x1 << RTC_ALRMAR_MSK2_Pos;
pub const RTC_ALRMAR_MSK2: u32 = RTC_ALRMAR_MSK2_Msk;
pub const RTC_ALRMAR_HU_Pos: u32 = 16;
pub const RTC_ALRMAR_HU_Msk: u32 = 0xF << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU: u32 = RTC_ALRMAR_HU_Msk;
pub const RTC_ALRMAR_HU_0: u32 = 0x1 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU_1: u32 = 0x2 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU_2: u32 = 0x4 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU_3: u32 = 0x8 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HT_Pos: u32 = 20;
pub const RTC_ALRMAR_HT_Msk: u32 = 0x3 << RTC_ALRMAR_HT_Pos;
pub const RTC_ALRMAR_HT: u32 = RTC_ALRMAR_HT_Msk;
pub const RTC_ALRMAR_HT_0: u32 = 0x1 << RTC_ALRMAR_HT_Pos;
pub const RTC_ALRMAR_HT_1: u32 = 0x2 << RTC_ALRMAR_HT_Pos;
pub const RTC_ALRMAR_PM_Pos: u32 = 22;
pub const RTC_ALRMAR_PM_Msk: u32 = 0x1 << RTC_ALRMAR_PM_Pos;
pub const RTC_ALRMAR_PM: u32 = RTC_ALRMAR_PM_Msk;
pub const RTC_ALRMAR_MSK3_Pos: u32 = 23;
pub const RTC_ALRMAR_MSK3_Msk: u32 = 0x1 << RTC_ALRMAR_MSK3_Pos;
pub const RTC_ALRMAR_MSK3: u32 = RTC_ALRMAR_MSK3_Msk;
pub const RTC_ALRMAR_DU_Pos: u32 = 24;
pub const RTC_ALRMAR_DU_Msk: u32 = 0xF << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU: u32 = RTC_ALRMAR_DU_Msk;
pub const RTC_ALRMAR_DU_0: u32 = 0x1 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU_1: u32 = 0x2 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU_2: u32 = 0x4 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU_3: u32 = 0x8 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DT_Pos: u32 = 28;
pub const RTC_ALRMAR_DT_Msk: u32 = 0x3 << RTC_ALRMAR_DT_Pos;
pub const RTC_ALRMAR_DT: u32 = RTC_ALRMAR_DT_Msk;
pub const RTC_ALRMAR_DT_0: u32 = 0x1 << RTC_ALRMAR_DT_Pos;
pub const RTC_ALRMAR_DT_1: u32 = 0x2 << RTC_ALRMAR_DT_Pos;
pub const RTC_ALRMAR_WDSEL_Pos: u32 = 30;
pub const RTC_ALRMAR_WDSEL_Msk: u32 = 0x1 << RTC_ALRMAR_WDSEL_Pos;
pub const RTC_ALRMAR_WDSEL: u32 = RTC_ALRMAR_WDSEL_Msk;
pub const RTC_ALRMAR_MSK4_Pos: u32 = 31;
pub const RTC_ALRMAR_MSK4_Msk: u32 = 0x1 << RTC_ALRMAR_MSK4_Pos;
pub const RTC_ALRMAR_MSK4: u32 = RTC_ALRMAR_MSK4_Msk;
pub const RTC_ALRMASSR_SS_Pos: u32 = 0;
pub const RTC_ALRMASSR_SS_Msk: u32 = 0x7FFF << RTC_ALRMASSR_SS_Pos;
pub const RTC_ALRMASSR_SS: u32 = RTC_ALRMASSR_SS_Msk;
pub const RTC_ALRMASSR_MASKSS_Pos: u32 = 24;
pub const RTC_ALRMASSR_MASKSS_Msk: u32 = 0x3F << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS: u32 = RTC_ALRMASSR_MASKSS_Msk;
pub const RTC_ALRMASSR_MASKSS_0: u32 = 0x1 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_1: u32 = 0x2 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_2: u32 = 0x4 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_3: u32 = 0x8 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_4: u32 = 0x10 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_5: u32 = 0x20 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_SSCLR_Pos: u32 = 31;
pub const RTC_ALRMASSR_SSCLR_Msk: u32 = 0x1 << RTC_ALRMASSR_SSCLR_Pos;
pub const RTC_ALRMASSR_SSCLR: u32 = RTC_ALRMASSR_SSCLR_Msk;
pub const RTC_ALRMBR_SU_Pos: u32 = 0;
pub const RTC_ALRMBR_SU_Msk: u32 = 0xF << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU: u32 = RTC_ALRMBR_SU_Msk;
pub const RTC_ALRMBR_SU_0: u32 = 0x1 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU_1: u32 = 0x2 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU_2: u32 = 0x4 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU_3: u32 = 0x8 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_ST_Pos: u32 = 4;
pub const RTC_ALRMBR_ST_Msk: u32 = 0x7 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_ST: u32 = RTC_ALRMBR_ST_Msk;
pub const RTC_ALRMBR_ST_0: u32 = 0x1 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_ST_1: u32 = 0x2 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_ST_2: u32 = 0x4 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_MSK1_Pos: u32 = 7;
pub const RTC_ALRMBR_MSK1_Msk: u32 = 0x1 << RTC_ALRMBR_MSK1_Pos;
pub const RTC_ALRMBR_MSK1: u32 = RTC_ALRMBR_MSK1_Msk;
pub const RTC_ALRMBR_MNU_Pos: u32 = 8;
pub const RTC_ALRMBR_MNU_Msk: u32 = 0xF << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU: u32 = RTC_ALRMBR_MNU_Msk;
pub const RTC_ALRMBR_MNU_0: u32 = 0x1 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU_1: u32 = 0x2 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU_2: u32 = 0x4 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU_3: u32 = 0x8 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNT_Pos: u32 = 12;
pub const RTC_ALRMBR_MNT_Msk: u32 = 0x7 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNT: u32 = RTC_ALRMBR_MNT_Msk;
pub const RTC_ALRMBR_MNT_0: u32 = 0x1 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNT_1: u32 = 0x2 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNT_2: u32 = 0x4 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MSK2_Pos: u32 = 15;
pub const RTC_ALRMBR_MSK2_Msk: u32 = 0x1 << RTC_ALRMBR_MSK2_Pos;
pub const RTC_ALRMBR_MSK2: u32 = RTC_ALRMBR_MSK2_Msk;
pub const RTC_ALRMBR_HU_Pos: u32 = 16;
pub const RTC_ALRMBR_HU_Msk: u32 = 0xF << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU: u32 = RTC_ALRMBR_HU_Msk;
pub const RTC_ALRMBR_HU_0: u32 = 0x1 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU_1: u32 = 0x2 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU_2: u32 = 0x4 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU_3: u32 = 0x8 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HT_Pos: u32 = 20;
pub const RTC_ALRMBR_HT_Msk: u32 = 0x3 << RTC_ALRMBR_HT_Pos;
pub const RTC_ALRMBR_HT: u32 = RTC_ALRMBR_HT_Msk;
pub const RTC_ALRMBR_HT_0: u32 = 0x1 << RTC_ALRMBR_HT_Pos;
pub const RTC_ALRMBR_HT_1: u32 = 0x2 << RTC_ALRMBR_HT_Pos;
pub const RTC_ALRMBR_PM_Pos: u32 = 22;
pub const RTC_ALRMBR_PM_Msk: u32 = 0x1 << RTC_ALRMBR_PM_Pos;
pub const RTC_ALRMBR_PM: u32 = RTC_ALRMBR_PM_Msk;
pub const RTC_ALRMBR_MSK3_Pos: u32 = 23;
pub const RTC_ALRMBR_MSK3_Msk: u32 = 0x1 << RTC_ALRMBR_MSK3_Pos;
pub const RTC_ALRMBR_MSK3: u32 = RTC_ALRMBR_MSK3_Msk;
pub const RTC_ALRMBR_DU_Pos: u32 = 24;
pub const RTC_ALRMBR_DU_Msk: u32 = 0xF << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU: u32 = RTC_ALRMBR_DU_Msk;
pub const RTC_ALRMBR_DU_0: u32 = 0x1 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU_1: u32 = 0x2 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU_2: u32 = 0x4 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU_3: u32 = 0x8 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DT_Pos: u32 = 28;
pub const RTC_ALRMBR_DT_Msk: u32 = 0x3 << RTC_ALRMBR_DT_Pos;
pub const RTC_ALRMBR_DT: u32 = RTC_ALRMBR_DT_Msk;
pub const RTC_ALRMBR_DT_0: u32 = 0x1 << RTC_ALRMBR_DT_Pos;
pub const RTC_ALRMBR_DT_1: u32 = 0x2 << RTC_ALRMBR_DT_Pos;
pub const RTC_ALRMBR_WDSEL_Pos: u32 = 30;
pub const RTC_ALRMBR_WDSEL_Msk: u32 = 0x1 << RTC_ALRMBR_WDSEL_Pos;
pub const RTC_ALRMBR_WDSEL: u32 = RTC_ALRMBR_WDSEL_Msk;
pub const RTC_ALRMBR_MSK4_Pos: u32 = 31;
pub const RTC_ALRMBR_MSK4_Msk: u32 = 0x1 << RTC_ALRMBR_MSK4_Pos;
pub const RTC_ALRMBR_MSK4: u32 = RTC_ALRMBR_MSK4_Msk;
pub const RTC_ALRMBSSR_SS_Pos: u32 = 0;
pub const RTC_ALRMBSSR_SS_Msk: u32 = 0x7FFF << RTC_ALRMBSSR_SS_Pos;
pub const RTC_ALRMBSSR_SS: u32 = RTC_ALRMBSSR_SS_Msk;
pub const RTC_ALRMBSSR_MASKSS_Pos: u32 = 24;
pub const RTC_ALRMBSSR_MASKSS_Msk: u32 = 0x3F << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS: u32 = RTC_ALRMBSSR_MASKSS_Msk;
pub const RTC_ALRMBSSR_MASKSS_0: u32 = 0x1 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_1: u32 = 0x2 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_2: u32 = 0x4 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_3: u32 = 0x8 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_4: u32 = 0x10 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_5: u32 = 0x20 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_SSCLR_Pos: u32 = 31;
pub const RTC_ALRMBSSR_SSCLR_Msk: u32 = 0x1 << RTC_ALRMBSSR_SSCLR_Pos;
pub const RTC_ALRMBSSR_SSCLR: u32 = RTC_ALRMBSSR_SSCLR_Msk;
pub const RTC_SR_ALRAF_Pos: u32 = 0;
pub const RTC_SR_ALRAF_Msk: u32 = 0x1 << RTC_SR_ALRAF_Pos;
pub const RTC_SR_ALRAF: u32 = RTC_SR_ALRAF_Msk;
pub const RTC_SR_ALRBF_Pos: u32 = 1;
pub const RTC_SR_ALRBF_Msk: u32 = 0x1 << RTC_SR_ALRBF_Pos;
pub const RTC_SR_ALRBF: u32 = RTC_SR_ALRBF_Msk;
pub const RTC_SR_WUTF_Pos: u32 = 2;
pub const RTC_SR_WUTF_Msk: u32 = 0x1 << RTC_SR_WUTF_Pos;
pub const RTC_SR_WUTF: u32 = RTC_SR_WUTF_Msk;
pub const RTC_SR_TSF_Pos: u32 = 3;
pub const RTC_SR_TSF_Msk: u32 = 0x1 << RTC_SR_TSF_Pos;
pub const RTC_SR_TSF: u32 = RTC_SR_TSF_Msk;
pub const RTC_SR_TSOVF_Pos: u32 = 4;
pub const RTC_SR_TSOVF_Msk: u32 = 0x1 << RTC_SR_TSOVF_Pos;
pub const RTC_SR_TSOVF: u32 = RTC_SR_TSOVF_Msk;
pub const RTC_SR_ITSF_Pos: u32 = 5;
pub const RTC_SR_ITSF_Msk: u32 = 0x1 << RTC_SR_ITSF_Pos;
pub const RTC_SR_ITSF: u32 = RTC_SR_ITSF_Msk;
pub const RTC_SR_SSRUF_Pos: u32 = 6;
pub const RTC_SR_SSRUF_Msk: u32 = 0x1 << RTC_SR_SSRUF_Pos;
pub const RTC_SR_SSRUF: u32 = RTC_SR_SSRUF_Msk;
pub const RTC_MISR_ALRAMF_Pos: u32 = 0;
pub const RTC_MISR_ALRAMF_Msk: u32 = 0x1 << RTC_MISR_ALRAMF_Pos;
pub const RTC_MISR_ALRAMF: u32 = RTC_MISR_ALRAMF_Msk;
pub const RTC_MISR_ALRBMF_Pos: u32 = 1;
pub const RTC_MISR_ALRBMF_Msk: u32 = 0x1 << RTC_MISR_ALRBMF_Pos;
pub const RTC_MISR_ALRBMF: u32 = RTC_MISR_ALRBMF_Msk;
pub const RTC_MISR_WUTMF_Pos: u32 = 2;
pub const RTC_MISR_WUTMF_Msk: u32 = 0x1 << RTC_MISR_WUTMF_Pos;
pub const RTC_MISR_WUTMF: u32 = RTC_MISR_WUTMF_Msk;
pub const RTC_MISR_TSMF_Pos: u32 = 3;
pub const RTC_MISR_TSMF_Msk: u32 = 0x1 << RTC_MISR_TSMF_Pos;
pub const RTC_MISR_TSMF: u32 = RTC_MISR_TSMF_Msk;
pub const RTC_MISR_TSOVMF_Pos: u32 = 4;
pub const RTC_MISR_TSOVMF_Msk: u32 = 0x1 << RTC_MISR_TSOVMF_Pos;
pub const RTC_MISR_TSOVMF: u32 = RTC_MISR_TSOVMF_Msk;
pub const RTC_MISR_ITSMF_Pos: u32 = 5;
pub const RTC_MISR_ITSMF_Msk: u32 = 0x1 << RTC_MISR_ITSMF_Pos;
pub const RTC_MISR_ITSMF: u32 = RTC_MISR_ITSMF_Msk;
pub const RTC_MISR_SSRUMF_Pos: u32 = 6;
pub const RTC_MISR_SSRUMF_Msk: u32 = 0x1 << RTC_MISR_SSRUMF_Pos;
pub const RTC_MISR_SSRUMF: u32 = RTC_MISR_SSRUMF_Msk;
pub const RTC_SCR_CALRAF_Pos: u32 = 0;
pub const RTC_SCR_CALRAF_Msk: u32 = 0x1 << RTC_SCR_CALRAF_Pos;
pub const RTC_SCR_CALRAF: u32 = RTC_SCR_CALRAF_Msk;
pub const RTC_SCR_CALRBF_Pos: u32 = 1;
pub const RTC_SCR_CALRBF_Msk: u32 = 0x1 << RTC_SCR_CALRBF_Pos;
pub const RTC_SCR_CALRBF: u32 = RTC_SCR_CALRBF_Msk;
pub const RTC_SCR_CWUTF_Pos: u32 = 2;
pub const RTC_SCR_CWUTF_Msk: u32 = 0x1 << RTC_SCR_CWUTF_Pos;
pub const RTC_SCR_CWUTF: u32 = RTC_SCR_CWUTF_Msk;
pub const RTC_SCR_CTSF_Pos: u32 = 3;
pub const RTC_SCR_CTSF_Msk: u32 = 0x1 << RTC_SCR_CTSF_Pos;
pub const RTC_SCR_CTSF: u32 = RTC_SCR_CTSF_Msk;
pub const RTC_SCR_CTSOVF_Pos: u32 = 4;
pub const RTC_SCR_CTSOVF_Msk: u32 = 0x1 << RTC_SCR_CTSOVF_Pos;
pub const RTC_SCR_CTSOVF: u32 = RTC_SCR_CTSOVF_Msk;
pub const RTC_SCR_CITSF_Pos: u32 = 5;
pub const RTC_SCR_CITSF_Msk: u32 = 0x1 << RTC_SCR_CITSF_Pos;
pub const RTC_SCR_CITSF: u32 = RTC_SCR_CITSF_Msk;
pub const RTC_SCR_CSSRUF_Pos: u32 = 6;
pub const RTC_SCR_CSSRUF_Msk: u32 = 0x1 << RTC_SCR_CSSRUF_Pos;
pub const RTC_SCR_CSSRUF: u32 = RTC_SCR_CSSRUF_Msk;
pub const RTC_ALRABINR_SS_Pos: u32 = 0;
pub const RTC_ALRABINR_SS_Msk: u32 = 0xFFFFFFFF << RTC_ALRABINR_SS_Pos;
pub const RTC_ALRABINR_SS: u32 = RTC_ALRABINR_SS_Msk;
pub const RTC_ALRBBINR_SS_Pos: u32 = 0;
pub const RTC_ALRBBINR_SS_Msk: u32 = 0xFFFFFFFF << RTC_ALRBBINR_SS_Pos;
pub const RTC_ALRBBINR_SS: u32 = RTC_ALRBBINR_SS_Msk;
pub const SAES_CR_EN_Pos: u32 = 0;
pub const SAES_CR_EN_Msk: u32 = 0x1 << SAES_CR_EN_Pos;
pub const SAES_CR_EN: u32 = SAES_CR_EN_Msk;
pub const SAES_CR_DATATYPE_Pos: u32 = 1;
pub const SAES_CR_DATATYPE_Msk: u32 = 0x3 << SAES_CR_DATATYPE_Pos;
pub const SAES_CR_DATATYPE: u32 = SAES_CR_DATATYPE_Msk;
pub const SAES_CR_DATATYPE_0: u32 = 0x1 << SAES_CR_DATATYPE_Pos;
pub const SAES_CR_DATATYPE_1: u32 = 0x2 << SAES_CR_DATATYPE_Pos;
pub const SAES_CR_MODE_Pos: u32 = 3;
pub const SAES_CR_MODE_Msk: u32 = 0x3 << SAES_CR_MODE_Pos;
pub const SAES_CR_MODE: u32 = SAES_CR_MODE_Msk;
pub const SAES_CR_MODE_0: u32 = 0x1 << SAES_CR_MODE_Pos;
pub const SAES_CR_MODE_1: u32 = 0x2 << SAES_CR_MODE_Pos;
pub const SAES_CR_CHMOD_Pos: u32 = 5;
pub const SAES_CR_CHMOD_Msk: u32 = 0x803 << SAES_CR_CHMOD_Pos;
pub const SAES_CR_CHMOD: u32 = SAES_CR_CHMOD_Msk;
pub const SAES_CR_CHMOD_0: u32 = 0x001 << SAES_CR_CHMOD_Pos;
pub const SAES_CR_CHMOD_1: u32 = 0x002 << SAES_CR_CHMOD_Pos;
pub const SAES_CR_CHMOD_2: u32 = 0x800 << SAES_CR_CHMOD_Pos;
pub const SAES_CR_DMAINEN_Pos: u32 = 11;
pub const SAES_CR_DMAINEN_Msk: u32 = 0x1 << SAES_CR_DMAINEN_Pos;
pub const SAES_CR_DMAINEN: u32 = SAES_CR_DMAINEN_Msk;
pub const SAES_CR_DMAOUTEN_Pos: u32 = 12;
pub const SAES_CR_DMAOUTEN_Msk: u32 = 0x1 << SAES_CR_DMAOUTEN_Pos;
pub const SAES_CR_DMAOUTEN: u32 = SAES_CR_DMAOUTEN_Msk;
pub const SAES_CR_GCMPH_Pos: u32 = 13;
pub const SAES_CR_GCMPH_Msk: u32 = 0x3 << SAES_CR_GCMPH_Pos;
pub const SAES_CR_GCMPH: u32 = SAES_CR_GCMPH_Msk;
pub const SAES_CR_GCMPH_0: u32 = 0x1 << SAES_CR_GCMPH_Pos;
pub const SAES_CR_GCMPH_1: u32 = 0x2 << SAES_CR_GCMPH_Pos;
pub const SAES_CR_KEYSIZE_Pos: u32 = 18;
pub const SAES_CR_KEYSIZE_Msk: u32 = 0x1 << SAES_CR_KEYSIZE_Pos;
pub const SAES_CR_KEYSIZE: u32 = SAES_CR_KEYSIZE_Msk;
pub const SAES_CR_NPBLB_Pos: u32 = 20;
pub const SAES_CR_NPBLB_Msk: u32 = 0xF << SAES_CR_NPBLB_Pos;
pub const SAES_CR_NPBLB: u32 = SAES_CR_NPBLB_Msk;
pub const SAES_CR_NPBLB_0: u32 = 0x1 << SAES_CR_NPBLB_Pos;
pub const SAES_CR_NPBLB_1: u32 = 0x2 << SAES_CR_NPBLB_Pos;
pub const SAES_CR_NPBLB_2: u32 = 0x4 << SAES_CR_NPBLB_Pos;
pub const SAES_CR_NPBLB_3: u32 = 0x8 << SAES_CR_NPBLB_Pos;
pub const SAES_CR_KMOD_Pos: u32 = 24;
pub const SAES_CR_KMOD_Msk: u32 = 0x3 << SAES_CR_KMOD_Pos;
pub const SAES_CR_KMOD: u32 = SAES_CR_KMOD_Msk;
pub const SAES_CR_KMOD_0: u32 = 0x1 << SAES_CR_KMOD_Pos;
pub const SAES_CR_KMOD_1: u32 = 0x2 << SAES_CR_KMOD_Pos;
pub const SAES_CR_KSHAREID_Pos: u32 = 26;
pub const SAES_CR_KSHAREID_Msk: u32 = 0x3 << SAES_CR_KSHAREID_Pos;
pub const SAES_CR_KSHAREID: u32 = SAES_CR_KSHAREID_Msk;
pub const SAES_CR_KEYSEL_Pos: u32 = 28;
pub const SAES_CR_KEYSEL_Msk: u32 = 0x7 << SAES_CR_KEYSEL_Pos;
pub const SAES_CR_KEYSEL: u32 = SAES_CR_KEYSEL_Msk;
pub const SAES_CR_KEYSEL_0: u32 = 0x1 << SAES_CR_KEYSEL_Pos;
pub const SAES_CR_KEYSEL_1: u32 = 0x2 << SAES_CR_KEYSEL_Pos;
pub const SAES_CR_KEYSEL_2: u32 = 0x4 << SAES_CR_KEYSEL_Pos;
pub const SAES_CR_IPRST_Pos: u32 = 31;
pub const SAES_CR_IPRST_Msk: u32 = 0x1 << SAES_CR_IPRST_Pos;
pub const SAES_CR_IPRST: u32 = SAES_CR_IPRST_Msk;
pub const SAES_SR_CCF_Pos: u32 = 0;
pub const SAES_SR_CCF_Msk: u32 = 0x1 << SAES_SR_CCF_Pos;
pub const SAES_SR_CCF: u32 = SAES_SR_CCF_Msk;
pub const SAES_SR_RDERR_Pos: u32 = 1;
pub const SAES_SR_RDERR_Msk: u32 = 0x1 << SAES_SR_RDERR_Pos;
pub const SAES_SR_RDERR: u32 = SAES_SR_RDERR_Msk;
pub const SAES_SR_WRERR_Pos: u32 = 2;
pub const SAES_SR_WRERR_Msk: u32 = 0x1 << SAES_SR_WRERR_Pos;
pub const SAES_SR_WRERR: u32 = SAES_SR_WRERR_Msk;
pub const SAES_SR_BUSY_Pos: u32 = 3;
pub const SAES_SR_BUSY_Msk: u32 = 0x1 << SAES_SR_BUSY_Pos;
pub const SAES_SR_BUSY: u32 = SAES_SR_BUSY_Msk;
pub const SAES_SR_KEYVALID_Pos: u32 = 7;
pub const SAES_SR_KEYVALID_Msk: u32 = 0x1 << SAES_SR_KEYVALID_Pos;
pub const SAES_SR_KEYVALID: u32 = SAES_SR_KEYVALID_Msk;
pub const SAES_DINR_Pos: u32 = 0;
pub const SAES_DINR_Msk: u32 = 0xFFFFFFFF << SAES_DINR_Pos;
pub const SAES_DINR: u32 = SAES_DINR_Msk;
pub const SAES_DOUTR_Pos: u32 = 0;
pub const SAES_DOUTR_Msk: u32 = 0xFFFFFFFF << SAES_DOUTR_Pos;
pub const SAES_DOUTR: u32 = SAES_DOUTR_Msk;
pub const SAES_KEYR0_Pos: u32 = 0;
pub const SAES_KEYR0_Msk: u32 = 0xFFFFFFFF << SAES_KEYR0_Pos;
pub const SAES_KEYR0: u32 = SAES_KEYR0_Msk;
pub const SAES_KEYR1_Pos: u32 = 0;
pub const SAES_KEYR1_Msk: u32 = 0xFFFFFFFF << SAES_KEYR1_Pos;
pub const SAES_KEYR1: u32 = SAES_KEYR1_Msk;
pub const SAES_KEYR2_Pos: u32 = 0;
pub const SAES_KEYR2_Msk: u32 = 0xFFFFFFFF << SAES_KEYR2_Pos;
pub const SAES_KEYR2: u32 = SAES_KEYR2_Msk;
pub const SAES_KEYR3_Pos: u32 = 0;
pub const SAES_KEYR3_Msk: u32 = 0xFFFFFFFF << SAES_KEYR3_Pos;
pub const SAES_KEYR3: u32 = SAES_KEYR3_Msk;
pub const SAES_KEYR4_Pos: u32 = 0;
pub const SAES_KEYR4_Msk: u32 = 0xFFFFFFFF << SAES_KEYR4_Pos;
pub const SAES_KEYR4: u32 = SAES_KEYR4_Msk;
pub const SAES_KEYR5_Pos: u32 = 0;
pub const SAES_KEYR5_Msk: u32 = 0xFFFFFFFF << SAES_KEYR5_Pos;
pub const SAES_KEYR5: u32 = SAES_KEYR5_Msk;
pub const SAES_KEYR6_Pos: u32 = 0;
pub const SAES_KEYR6_Msk: u32 = 0xFFFFFFFF << SAES_KEYR6_Pos;
pub const SAES_KEYR6: u32 = SAES_KEYR6_Msk;
pub const SAES_KEYR7_Pos: u32 = 0;
pub const SAES_KEYR7_Msk: u32 = 0xFFFFFFFF << SAES_KEYR7_Pos;
pub const SAES_KEYR7: u32 = SAES_KEYR7_Msk;
pub const SAES_IVR0_Pos: u32 = 0;
pub const SAES_IVR0_Msk: u32 = 0xFFFFFFFF << SAES_IVR0_Pos;
pub const SAES_IVR0: u32 = SAES_IVR0_Msk;
pub const SAES_IVR1_Pos: u32 = 0;
pub const SAES_IVR1_Msk: u32 = 0xFFFFFFFF << SAES_IVR1_Pos;
pub const SAES_IVR1: u32 = SAES_IVR1_Msk;
pub const SAES_IVR2_Pos: u32 = 0;
pub const SAES_IVR2_Msk: u32 = 0xFFFFFFFF << SAES_IVR2_Pos;
pub const SAES_IVR2: u32 = SAES_IVR2_Msk;
pub const SAES_IVR3_Pos: u32 = 0;
pub const SAES_IVR3_Msk: u32 = 0xFFFFFFFF << SAES_IVR3_Pos;
pub const SAES_IVR3: u32 = SAES_IVR3_Msk;
pub const SAES_SUSP0R_Pos: u32 = 0;
pub const SAES_SUSP0R_Msk: u32 = 0xFFFFFFFF << SAES_SUSP0R_Pos;
pub const SAES_SUSP0R: u32 = SAES_SUSP0R_Msk;
pub const SAES_SUSP1R_Pos: u32 = 0;
pub const SAES_SUSP1R_Msk: u32 = 0xFFFFFFFF << SAES_SUSP1R_Pos;
pub const SAES_SUSP1R: u32 = SAES_SUSP1R_Msk;
pub const SAES_SUSP2R_Pos: u32 = 0;
pub const SAES_SUSP2R_Msk: u32 = 0xFFFFFFFF << SAES_SUSP2R_Pos;
pub const SAES_SUSP2R: u32 = SAES_SUSP2R_Msk;
pub const SAES_SUSP3R_Pos: u32 = 0;
pub const SAES_SUSP3R_Msk: u32 = 0xFFFFFFFF << SAES_SUSP3R_Pos;
pub const SAES_SUSP3R: u32 = SAES_SUSP3R_Msk;
pub const SAES_SUSP4R_Pos: u32 = 0;
pub const SAES_SUSP4R_Msk: u32 = 0xFFFFFFFF << SAES_SUSP4R_Pos;
pub const SAES_SUSP4R: u32 = SAES_SUSP4R_Msk;
pub const SAES_SUSP5R_Pos: u32 = 0;
pub const SAES_SUSP5R_Msk: u32 = 0xFFFFFFFF << SAES_SUSP5R_Pos;
pub const SAES_SUSP5R: u32 = SAES_SUSP5R_Msk;
pub const SAES_SUSP6R_Pos: u32 = 0;
pub const SAES_SUSP6R_Msk: u32 = 0xFFFFFFFF << SAES_SUSP6R_Pos;
pub const SAES_SUSP6R: u32 = SAES_SUSP6R_Msk;
pub const SAES_SUSP7R_Pos: u32 = 0;
pub const SAES_SUSP7R_Msk: u32 = 0xFFFFFFFF << SAES_SUSP7R_Pos;
pub const SAES_SUSP7R: u32 = SAES_SUSP7R_Msk;
pub const SAES_IER_CCFIE_Pos: u32 = 0;
pub const SAES_IER_CCFIE_Msk: u32 = 0x1 << SAES_IER_CCFIE_Pos;
pub const SAES_IER_CCFIE: u32 = SAES_IER_CCFIE_Msk;
pub const SAES_IER_RWEIE_Pos: u32 = 1;
pub const SAES_IER_RWEIE_Msk: u32 = 0x1 << SAES_IER_RWEIE_Pos;
pub const SAES_IER_RWEIE: u32 = SAES_IER_RWEIE_Msk;
pub const SAES_IER_KEIE_Pos: u32 = 2;
pub const SAES_IER_KEIE_Msk: u32 = 0x1 << SAES_IER_KEIE_Pos;
pub const SAES_IER_KEIE: u32 = SAES_IER_KEIE_Msk;
pub const SAES_IER_RNGEIE_Pos: u32 = 3;
pub const SAES_IER_RNGEIE_Msk: u32 = 0x1 << SAES_IER_RNGEIE_Pos;
pub const SAES_IER_RNGEIE: u32 = SAES_IER_RNGEIE_Msk;
pub const SAES_ISR_CCF_Pos: u32 = 0;
pub const SAES_ISR_CCF_Msk: u32 = 0x1 << SAES_ISR_CCF_Pos;
pub const SAES_ISR_CCF: u32 = SAES_ISR_CCF_Msk;
pub const SAES_ISR_RWEIF_Pos: u32 = 1;
pub const SAES_ISR_RWEIF_Msk: u32 = 0x1 << SAES_ISR_RWEIF_Pos;
pub const SAES_ISR_RWEIF: u32 = SAES_ISR_RWEIF_Msk;
pub const SAES_ISR_KEIF_Pos: u32 = 2;
pub const SAES_ISR_KEIF_Msk: u32 = 0x1 << SAES_ISR_KEIF_Pos;
pub const SAES_ISR_KEIF: u32 = SAES_ISR_KEIF_Msk;
pub const SAES_ISR_RNGEIF_Pos: u32 = 3;
pub const SAES_ISR_RNGEIF_Msk: u32 = 0x1 << SAES_ISR_RNGEIF_Pos;
pub const SAES_ISR_RNGEIF: u32 = SAES_ISR_RNGEIF_Msk;
pub const SAES_ICR_CCF_Pos: u32 = 0;
pub const SAES_ICR_CCF_Msk: u32 = 0x1 << SAES_ICR_CCF_Pos;
pub const SAES_ICR_CCF: u32 = SAES_ICR_CCF_Msk;
pub const SAES_ICR_RWEIF_Pos: u32 = 1;
pub const SAES_ICR_RWEIF_Msk: u32 = 0x1 << SAES_ICR_RWEIF_Pos;
pub const SAES_ICR_RWEIF: u32 = SAES_ICR_RWEIF_Msk;
pub const SAES_ICR_KEIF_Pos: u32 = 2;
pub const SAES_ICR_KEIF_Msk: u32 = 0x1 << SAES_ICR_KEIF_Pos;
pub const SAES_ICR_KEIF: u32 = SAES_ICR_KEIF_Msk;
pub const SAES_ICR_RNGEIF_Pos: u32 = 3;
pub const SAES_ICR_RNGEIF_Msk: u32 = 0x1 << SAES_ICR_RNGEIF_Pos;
pub const SAES_ICR_RNGEIF: u32 = SAES_ICR_RNGEIF_Msk;
pub const SAI_GCR_SYNCIN_Pos: u32 = 0;
pub const SAI_GCR_SYNCIN_Msk: u32 = 0x3 << SAI_GCR_SYNCIN_Pos;
pub const SAI_GCR_SYNCIN: u32 = SAI_GCR_SYNCIN_Msk;
pub const SAI_GCR_SYNCIN_0: u32 = 0x1 << SAI_GCR_SYNCIN_Pos;
pub const SAI_GCR_SYNCIN_1: u32 = 0x2 << SAI_GCR_SYNCIN_Pos;
pub const SAI_GCR_SYNCOUT_Pos: u32 = 4;
pub const SAI_GCR_SYNCOUT_Msk: u32 = 0x3 << SAI_GCR_SYNCOUT_Pos;
pub const SAI_GCR_SYNCOUT: u32 = SAI_GCR_SYNCOUT_Msk;
pub const SAI_GCR_SYNCOUT_0: u32 = 0x1 << SAI_GCR_SYNCOUT_Pos;
pub const SAI_GCR_SYNCOUT_1: u32 = 0x2 << SAI_GCR_SYNCOUT_Pos;
pub const SAI_xCR1_MODE_Pos: u32 = 0;
pub const SAI_xCR1_MODE_Msk: u32 = 0x3 << SAI_xCR1_MODE_Pos;
pub const SAI_xCR1_MODE: u32 = SAI_xCR1_MODE_Msk;
pub const SAI_xCR1_MODE_0: u32 = 0x1 << SAI_xCR1_MODE_Pos;
pub const SAI_xCR1_MODE_1: u32 = 0x2 << SAI_xCR1_MODE_Pos;
pub const SAI_xCR1_PRTCFG_Pos: u32 = 2;
pub const SAI_xCR1_PRTCFG_Msk: u32 = 0x3 << SAI_xCR1_PRTCFG_Pos;
pub const SAI_xCR1_PRTCFG: u32 = SAI_xCR1_PRTCFG_Msk;
pub const SAI_xCR1_PRTCFG_0: u32 = 0x1 << SAI_xCR1_PRTCFG_Pos;
pub const SAI_xCR1_PRTCFG_1: u32 = 0x2 << SAI_xCR1_PRTCFG_Pos;
pub const SAI_xCR1_DS_Pos: u32 = 5;
pub const SAI_xCR1_DS_Msk: u32 = 0x7 << SAI_xCR1_DS_Pos;
pub const SAI_xCR1_DS: u32 = SAI_xCR1_DS_Msk;
pub const SAI_xCR1_DS_0: u32 = 0x1 << SAI_xCR1_DS_Pos;
pub const SAI_xCR1_DS_1: u32 = 0x2 << SAI_xCR1_DS_Pos;
pub const SAI_xCR1_DS_2: u32 = 0x4 << SAI_xCR1_DS_Pos;
pub const SAI_xCR1_LSBFIRST_Pos: u32 = 8;
pub const SAI_xCR1_LSBFIRST_Msk: u32 = 0x1 << SAI_xCR1_LSBFIRST_Pos;
pub const SAI_xCR1_LSBFIRST: u32 = SAI_xCR1_LSBFIRST_Msk;
pub const SAI_xCR1_CKSTR_Pos: u32 = 9;
pub const SAI_xCR1_CKSTR_Msk: u32 = 0x1 << SAI_xCR1_CKSTR_Pos;
pub const SAI_xCR1_CKSTR: u32 = SAI_xCR1_CKSTR_Msk;
pub const SAI_xCR1_SYNCEN_Pos: u32 = 10;
pub const SAI_xCR1_SYNCEN_Msk: u32 = 0x3 << SAI_xCR1_SYNCEN_Pos;
pub const SAI_xCR1_SYNCEN: u32 = SAI_xCR1_SYNCEN_Msk;
pub const SAI_xCR1_SYNCEN_0: u32 = 0x1 << SAI_xCR1_SYNCEN_Pos;
pub const SAI_xCR1_SYNCEN_1: u32 = 0x2 << SAI_xCR1_SYNCEN_Pos;
pub const SAI_xCR1_MONO_Pos: u32 = 12;
pub const SAI_xCR1_MONO_Msk: u32 = 0x1 << SAI_xCR1_MONO_Pos;
pub const SAI_xCR1_MONO: u32 = SAI_xCR1_MONO_Msk;
pub const SAI_xCR1_OUTDRIV_Pos: u32 = 13;
pub const SAI_xCR1_OUTDRIV_Msk: u32 = 0x1 << SAI_xCR1_OUTDRIV_Pos;
pub const SAI_xCR1_OUTDRIV: u32 = SAI_xCR1_OUTDRIV_Msk;
pub const SAI_xCR1_SAIEN_Pos: u32 = 16;
pub const SAI_xCR1_SAIEN_Msk: u32 = 0x1 << SAI_xCR1_SAIEN_Pos;
pub const SAI_xCR1_SAIEN: u32 = SAI_xCR1_SAIEN_Msk;
pub const SAI_xCR1_DMAEN_Pos: u32 = 17;
pub const SAI_xCR1_DMAEN_Msk: u32 = 0x1 << SAI_xCR1_DMAEN_Pos;
pub const SAI_xCR1_DMAEN: u32 = SAI_xCR1_DMAEN_Msk;
pub const SAI_xCR1_NODIV_Pos: u32 = 19;
pub const SAI_xCR1_NODIV_Msk: u32 = 0x1 << SAI_xCR1_NODIV_Pos;
pub const SAI_xCR1_NODIV: u32 = SAI_xCR1_NODIV_Msk;
pub const SAI_xCR1_MCKDIV_Pos: u32 = 20;
pub const SAI_xCR1_MCKDIV_Msk: u32 = 0x3F << SAI_xCR1_MCKDIV_Pos;
pub const SAI_xCR1_MCKDIV: u32 = SAI_xCR1_MCKDIV_Msk;
pub const SAI_xCR1_MCKDIV_0: u32 = 0x00100000;
pub const SAI_xCR1_MCKDIV_1: u32 = 0x00200000;
pub const SAI_xCR1_MCKDIV_2: u32 = 0x00400000;
pub const SAI_xCR1_MCKDIV_3: u32 = 0x00800000;
pub const SAI_xCR1_MCKDIV_4: u32 = 0x01000000;
pub const SAI_xCR1_MCKDIV_5: u32 = 0x02000000;
pub const SAI_xCR1_OSR_Pos: u32 = 26;
pub const SAI_xCR1_OSR_Msk: u32 = 0x1 << SAI_xCR1_OSR_Pos;
pub const SAI_xCR1_OSR: u32 = SAI_xCR1_OSR_Msk;
pub const SAI_xCR1_MCKEN_Pos: u32 = 27;
pub const SAI_xCR1_MCKEN_Msk: u32 = 0x1 << SAI_xCR1_MCKEN_Pos;
pub const SAI_xCR1_MCKEN: u32 = SAI_xCR1_MCKEN_Msk;
pub const SAI_xCR2_FTH_Pos: u32 = 0;
pub const SAI_xCR2_FTH_Msk: u32 = 0x7 << SAI_xCR2_FTH_Pos;
pub const SAI_xCR2_FTH: u32 = SAI_xCR2_FTH_Msk;
pub const SAI_xCR2_FTH_0: u32 = 0x1 << SAI_xCR2_FTH_Pos;
pub const SAI_xCR2_FTH_1: u32 = 0x2 << SAI_xCR2_FTH_Pos;
pub const SAI_xCR2_FTH_2: u32 = 0x4 << SAI_xCR2_FTH_Pos;
pub const SAI_xCR2_FFLUSH_Pos: u32 = 3;
pub const SAI_xCR2_FFLUSH_Msk: u32 = 0x1 << SAI_xCR2_FFLUSH_Pos;
pub const SAI_xCR2_FFLUSH: u32 = SAI_xCR2_FFLUSH_Msk;
pub const SAI_xCR2_TRIS_Pos: u32 = 4;
pub const SAI_xCR2_TRIS_Msk: u32 = 0x1 << SAI_xCR2_TRIS_Pos;
pub const SAI_xCR2_TRIS: u32 = SAI_xCR2_TRIS_Msk;
pub const SAI_xCR2_MUTE_Pos: u32 = 5;
pub const SAI_xCR2_MUTE_Msk: u32 = 0x1 << SAI_xCR2_MUTE_Pos;
pub const SAI_xCR2_MUTE: u32 = SAI_xCR2_MUTE_Msk;
pub const SAI_xCR2_MUTEVAL_Pos: u32 = 6;
pub const SAI_xCR2_MUTEVAL_Msk: u32 = 0x1 << SAI_xCR2_MUTEVAL_Pos;
pub const SAI_xCR2_MUTEVAL: u32 = SAI_xCR2_MUTEVAL_Msk;
pub const SAI_xCR2_MUTECNT_Pos: u32 = 7;
pub const SAI_xCR2_MUTECNT_Msk: u32 = 0x3F << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_MUTECNT: u32 = SAI_xCR2_MUTECNT_Msk;
pub const SAI_xCR2_MUTECNT_0: u32 = 0x01 << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_MUTECNT_1: u32 = 0x02 << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_MUTECNT_2: u32 = 0x04 << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_MUTECNT_3: u32 = 0x08 << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_MUTECNT_4: u32 = 0x10 << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_MUTECNT_5: u32 = 0x20 << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_CPL_Pos: u32 = 13;
pub const SAI_xCR2_CPL_Msk: u32 = 0x1 << SAI_xCR2_CPL_Pos;
pub const SAI_xCR2_CPL: u32 = SAI_xCR2_CPL_Msk;
pub const SAI_xCR2_COMP_Pos: u32 = 14;
pub const SAI_xCR2_COMP_Msk: u32 = 0x3 << SAI_xCR2_COMP_Pos;
pub const SAI_xCR2_COMP: u32 = SAI_xCR2_COMP_Msk;
pub const SAI_xCR2_COMP_0: u32 = 0x1 << SAI_xCR2_COMP_Pos;
pub const SAI_xCR2_COMP_1: u32 = 0x2 << SAI_xCR2_COMP_Pos;
pub const SAI_xFRCR_FRL_Pos: u32 = 0;
pub const SAI_xFRCR_FRL_Msk: u32 = 0xFF << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL: u32 = SAI_xFRCR_FRL_Msk;
pub const SAI_xFRCR_FRL_0: u32 = 0x01 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_1: u32 = 0x02 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_2: u32 = 0x04 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_3: u32 = 0x08 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_4: u32 = 0x10 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_5: u32 = 0x20 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_6: u32 = 0x40 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_7: u32 = 0x80 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FSALL_Pos: u32 = 8;
pub const SAI_xFRCR_FSALL_Msk: u32 = 0x7F << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL: u32 = SAI_xFRCR_FSALL_Msk;
pub const SAI_xFRCR_FSALL_0: u32 = 0x01 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL_1: u32 = 0x02 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL_2: u32 = 0x04 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL_3: u32 = 0x08 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL_4: u32 = 0x10 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL_5: u32 = 0x20 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL_6: u32 = 0x40 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSDEF_Pos: u32 = 16;
pub const SAI_xFRCR_FSDEF_Msk: u32 = 0x1 << SAI_xFRCR_FSDEF_Pos;
pub const SAI_xFRCR_FSDEF: u32 = SAI_xFRCR_FSDEF_Msk;
pub const SAI_xFRCR_FSPOL_Pos: u32 = 17;
pub const SAI_xFRCR_FSPOL_Msk: u32 = 0x1 << SAI_xFRCR_FSPOL_Pos;
pub const SAI_xFRCR_FSPOL: u32 = SAI_xFRCR_FSPOL_Msk;
pub const SAI_xFRCR_FSOFF_Pos: u32 = 18;
pub const SAI_xFRCR_FSOFF_Msk: u32 = 0x1 << SAI_xFRCR_FSOFF_Pos;
pub const SAI_xFRCR_FSOFF: u32 = SAI_xFRCR_FSOFF_Msk;
pub const SAI_xSLOTR_FBOFF_Pos: u32 = 0;
pub const SAI_xSLOTR_FBOFF_Msk: u32 = 0x1F << SAI_xSLOTR_FBOFF_Pos;
pub const SAI_xSLOTR_FBOFF: u32 = SAI_xSLOTR_FBOFF_Msk;
pub const SAI_xSLOTR_FBOFF_0: u32 = 0x01 << SAI_xSLOTR_FBOFF_Pos;
pub const SAI_xSLOTR_FBOFF_1: u32 = 0x02 << SAI_xSLOTR_FBOFF_Pos;
pub const SAI_xSLOTR_FBOFF_2: u32 = 0x04 << SAI_xSLOTR_FBOFF_Pos;
pub const SAI_xSLOTR_FBOFF_3: u32 = 0x08 << SAI_xSLOTR_FBOFF_Pos;
pub const SAI_xSLOTR_FBOFF_4: u32 = 0x10 << SAI_xSLOTR_FBOFF_Pos;
pub const SAI_xSLOTR_SLOTSZ_Pos: u32 = 6;
pub const SAI_xSLOTR_SLOTSZ_Msk: u32 = 0x3 << SAI_xSLOTR_SLOTSZ_Pos;
pub const SAI_xSLOTR_SLOTSZ: u32 = SAI_xSLOTR_SLOTSZ_Msk;
pub const SAI_xSLOTR_SLOTSZ_0: u32 = 0x1 << SAI_xSLOTR_SLOTSZ_Pos;
pub const SAI_xSLOTR_SLOTSZ_1: u32 = 0x2 << SAI_xSLOTR_SLOTSZ_Pos;
pub const SAI_xSLOTR_NBSLOT_Pos: u32 = 8;
pub const SAI_xSLOTR_NBSLOT_Msk: u32 = 0xF << SAI_xSLOTR_NBSLOT_Pos;
pub const SAI_xSLOTR_NBSLOT: u32 = SAI_xSLOTR_NBSLOT_Msk;
pub const SAI_xSLOTR_NBSLOT_0: u32 = 0x1 << SAI_xSLOTR_NBSLOT_Pos;
pub const SAI_xSLOTR_NBSLOT_1: u32 = 0x2 << SAI_xSLOTR_NBSLOT_Pos;
pub const SAI_xSLOTR_NBSLOT_2: u32 = 0x4 << SAI_xSLOTR_NBSLOT_Pos;
pub const SAI_xSLOTR_NBSLOT_3: u32 = 0x8 << SAI_xSLOTR_NBSLOT_Pos;
pub const SAI_xSLOTR_SLOTEN_Pos: u32 = 16;
pub const SAI_xSLOTR_SLOTEN_Msk: u32 = 0xFFFF << SAI_xSLOTR_SLOTEN_Pos;
pub const SAI_xSLOTR_SLOTEN: u32 = SAI_xSLOTR_SLOTEN_Msk;
pub const SAI_xIMR_OVRUDRIE_Pos: u32 = 0;
pub const SAI_xIMR_OVRUDRIE_Msk: u32 = 0x1 << SAI_xIMR_OVRUDRIE_Pos;
pub const SAI_xIMR_OVRUDRIE: u32 = SAI_xIMR_OVRUDRIE_Msk;
pub const SAI_xIMR_MUTEDETIE_Pos: u32 = 1;
pub const SAI_xIMR_MUTEDETIE_Msk: u32 = 0x1 << SAI_xIMR_MUTEDETIE_Pos;
pub const SAI_xIMR_MUTEDETIE: u32 = SAI_xIMR_MUTEDETIE_Msk;
pub const SAI_xIMR_WCKCFGIE_Pos: u32 = 2;
pub const SAI_xIMR_WCKCFGIE_Msk: u32 = 0x1 << SAI_xIMR_WCKCFGIE_Pos;
pub const SAI_xIMR_WCKCFGIE: u32 = SAI_xIMR_WCKCFGIE_Msk;
pub const SAI_xIMR_FREQIE_Pos: u32 = 3;
pub const SAI_xIMR_FREQIE_Msk: u32 = 0x1 << SAI_xIMR_FREQIE_Pos;
pub const SAI_xIMR_FREQIE: u32 = SAI_xIMR_FREQIE_Msk;
pub const SAI_xIMR_CNRDYIE_Pos: u32 = 4;
pub const SAI_xIMR_CNRDYIE_Msk: u32 = 0x1 << SAI_xIMR_CNRDYIE_Pos;
pub const SAI_xIMR_CNRDYIE: u32 = SAI_xIMR_CNRDYIE_Msk;
pub const SAI_xIMR_AFSDETIE_Pos: u32 = 5;
pub const SAI_xIMR_AFSDETIE_Msk: u32 = 0x1 << SAI_xIMR_AFSDETIE_Pos;
pub const SAI_xIMR_AFSDETIE: u32 = SAI_xIMR_AFSDETIE_Msk;
pub const SAI_xIMR_LFSDETIE_Pos: u32 = 6;
pub const SAI_xIMR_LFSDETIE_Msk: u32 = 0x1 << SAI_xIMR_LFSDETIE_Pos;
pub const SAI_xIMR_LFSDETIE: u32 = SAI_xIMR_LFSDETIE_Msk;
pub const SAI_xSR_OVRUDR_Pos: u32 = 0;
pub const SAI_xSR_OVRUDR_Msk: u32 = 0x1 << SAI_xSR_OVRUDR_Pos;
pub const SAI_xSR_OVRUDR: u32 = SAI_xSR_OVRUDR_Msk;
pub const SAI_xSR_MUTEDET_Pos: u32 = 1;
pub const SAI_xSR_MUTEDET_Msk: u32 = 0x1 << SAI_xSR_MUTEDET_Pos;
pub const SAI_xSR_MUTEDET: u32 = SAI_xSR_MUTEDET_Msk;
pub const SAI_xSR_WCKCFG_Pos: u32 = 2;
pub const SAI_xSR_WCKCFG_Msk: u32 = 0x1 << SAI_xSR_WCKCFG_Pos;
pub const SAI_xSR_WCKCFG: u32 = SAI_xSR_WCKCFG_Msk;
pub const SAI_xSR_FREQ_Pos: u32 = 3;
pub const SAI_xSR_FREQ_Msk: u32 = 0x1 << SAI_xSR_FREQ_Pos;
pub const SAI_xSR_FREQ: u32 = SAI_xSR_FREQ_Msk;
pub const SAI_xSR_CNRDY_Pos: u32 = 4;
pub const SAI_xSR_CNRDY_Msk: u32 = 0x1 << SAI_xSR_CNRDY_Pos;
pub const SAI_xSR_CNRDY: u32 = SAI_xSR_CNRDY_Msk;
pub const SAI_xSR_AFSDET_Pos: u32 = 5;
pub const SAI_xSR_AFSDET_Msk: u32 = 0x1 << SAI_xSR_AFSDET_Pos;
pub const SAI_xSR_AFSDET: u32 = SAI_xSR_AFSDET_Msk;
pub const SAI_xSR_LFSDET_Pos: u32 = 6;
pub const SAI_xSR_LFSDET_Msk: u32 = 0x1 << SAI_xSR_LFSDET_Pos;
pub const SAI_xSR_LFSDET: u32 = SAI_xSR_LFSDET_Msk;
pub const SAI_xSR_FLVL_Pos: u32 = 16;
pub const SAI_xSR_FLVL_Msk: u32 = 0x7 << SAI_xSR_FLVL_Pos;
pub const SAI_xSR_FLVL: u32 = SAI_xSR_FLVL_Msk;
pub const SAI_xSR_FLVL_0: u32 = 0x1 << SAI_xSR_FLVL_Pos;
pub const SAI_xSR_FLVL_1: u32 = 0x2 << SAI_xSR_FLVL_Pos;
pub const SAI_xSR_FLVL_2: u32 = 0x4 << SAI_xSR_FLVL_Pos;
pub const SAI_xCLRFR_COVRUDR_Pos: u32 = 0;
pub const SAI_xCLRFR_COVRUDR_Msk: u32 = 0x1 << SAI_xCLRFR_COVRUDR_Pos;
pub const SAI_xCLRFR_COVRUDR: u32 = SAI_xCLRFR_COVRUDR_Msk;
pub const SAI_xCLRFR_CMUTEDET_Pos: u32 = 1;
pub const SAI_xCLRFR_CMUTEDET_Msk: u32 = 0x1 << SAI_xCLRFR_CMUTEDET_Pos;
pub const SAI_xCLRFR_CMUTEDET: u32 = SAI_xCLRFR_CMUTEDET_Msk;
pub const SAI_xCLRFR_CWCKCFG_Pos: u32 = 2;
pub const SAI_xCLRFR_CWCKCFG_Msk: u32 = 0x1 << SAI_xCLRFR_CWCKCFG_Pos;
pub const SAI_xCLRFR_CWCKCFG: u32 = SAI_xCLRFR_CWCKCFG_Msk;
pub const SAI_xCLRFR_CCNRDY_Pos: u32 = 4;
pub const SAI_xCLRFR_CCNRDY_Msk: u32 = 0x1 << SAI_xCLRFR_CCNRDY_Pos;
pub const SAI_xCLRFR_CCNRDY: u32 = SAI_xCLRFR_CCNRDY_Msk;
pub const SAI_xCLRFR_CAFSDET_Pos: u32 = 5;
pub const SAI_xCLRFR_CAFSDET_Msk: u32 = 0x1 << SAI_xCLRFR_CAFSDET_Pos;
pub const SAI_xCLRFR_CAFSDET: u32 = SAI_xCLRFR_CAFSDET_Msk;
pub const SAI_xCLRFR_CLFSDET_Pos: u32 = 6;
pub const SAI_xCLRFR_CLFSDET_Msk: u32 = 0x1 << SAI_xCLRFR_CLFSDET_Pos;
pub const SAI_xCLRFR_CLFSDET: u32 = SAI_xCLRFR_CLFSDET_Msk;
pub const SAI_xDR_DATA_Pos: u32 = 0;
pub const SAI_xDR_DATA_Msk: u32 = 0xFFFFFFFF << SAI_xDR_DATA_Pos;
pub const SAI_xDR_DATA: u32 = SAI_xDR_DATA_Msk;
pub const SAI_PDMCR_PDMEN_Pos: u32 = 0;
pub const SAI_PDMCR_PDMEN_Msk: u32 = 0x1 << SAI_PDMCR_PDMEN_Pos;
pub const SAI_PDMCR_PDMEN: u32 = SAI_PDMCR_PDMEN_Msk;
pub const SAI_PDMCR_MICNBR_Pos: u32 = 4;
pub const SAI_PDMCR_MICNBR_Msk: u32 = 0x3 << SAI_PDMCR_MICNBR_Pos;
pub const SAI_PDMCR_MICNBR: u32 = SAI_PDMCR_MICNBR_Msk;
pub const SAI_PDMCR_MICNBR_0: u32 = 0x1 << SAI_PDMCR_MICNBR_Pos;
pub const SAI_PDMCR_MICNBR_1: u32 = 0x2 << SAI_PDMCR_MICNBR_Pos;
pub const SAI_PDMCR_CKEN1_Pos: u32 = 8;
pub const SAI_PDMCR_CKEN1_Msk: u32 = 0x1 << SAI_PDMCR_CKEN1_Pos;
pub const SAI_PDMCR_CKEN1: u32 = SAI_PDMCR_CKEN1_Msk;
pub const SAI_PDMCR_CKEN2_Pos: u32 = 9;
pub const SAI_PDMCR_CKEN2_Msk: u32 = 0x1 << SAI_PDMCR_CKEN2_Pos;
pub const SAI_PDMCR_CKEN2: u32 = SAI_PDMCR_CKEN2_Msk;
pub const SAI_PDMDLY_DLYM1L_Pos: u32 = 0;
pub const SAI_PDMDLY_DLYM1L_Msk: u32 = 0x7 << SAI_PDMDLY_DLYM1L_Pos;
pub const SAI_PDMDLY_DLYM1L: u32 = SAI_PDMDLY_DLYM1L_Msk;
pub const SAI_PDMDLY_DLYM1L_0: u32 = 0x1 << SAI_PDMDLY_DLYM1L_Pos;
pub const SAI_PDMDLY_DLYM1L_1: u32 = 0x2 << SAI_PDMDLY_DLYM1L_Pos;
pub const SAI_PDMDLY_DLYM1L_2: u32 = 0x4 << SAI_PDMDLY_DLYM1L_Pos;
pub const SAI_PDMDLY_DLYM1R_Pos: u32 = 4;
pub const SAI_PDMDLY_DLYM1R_Msk: u32 = 0x7 << SAI_PDMDLY_DLYM1R_Pos;
pub const SAI_PDMDLY_DLYM1R: u32 = SAI_PDMDLY_DLYM1R_Msk;
pub const SAI_PDMDLY_DLYM1R_0: u32 = 0x1 << SAI_PDMDLY_DLYM1R_Pos;
pub const SAI_PDMDLY_DLYM1R_1: u32 = 0x2 << SAI_PDMDLY_DLYM1R_Pos;
pub const SAI_PDMDLY_DLYM1R_2: u32 = 0x4 << SAI_PDMDLY_DLYM1R_Pos;
pub const SAI_PDMDLY_DLYM2L_Pos: u32 = 8;
pub const SAI_PDMDLY_DLYM2L_Msk: u32 = 0x7 << SAI_PDMDLY_DLYM2L_Pos;
pub const SAI_PDMDLY_DLYM2L: u32 = SAI_PDMDLY_DLYM2L_Msk;
pub const SAI_PDMDLY_DLYM2L_0: u32 = 0x1 << SAI_PDMDLY_DLYM2L_Pos;
pub const SAI_PDMDLY_DLYM2L_1: u32 = 0x2 << SAI_PDMDLY_DLYM2L_Pos;
pub const SAI_PDMDLY_DLYM2L_2: u32 = 0x4 << SAI_PDMDLY_DLYM2L_Pos;
pub const SAI_PDMDLY_DLYM2R_Pos: u32 = 12;
pub const SAI_PDMDLY_DLYM2R_Msk: u32 = 0x7 << SAI_PDMDLY_DLYM2R_Pos;
pub const SAI_PDMDLY_DLYM2R: u32 = SAI_PDMDLY_DLYM2R_Msk;
pub const SAI_PDMDLY_DLYM2R_0: u32 = 0x1 << SAI_PDMDLY_DLYM2R_Pos;
pub const SAI_PDMDLY_DLYM2R_1: u32 = 0x2 << SAI_PDMDLY_DLYM2R_Pos;
pub const SAI_PDMDLY_DLYM2R_2: u32 = 0x4 << SAI_PDMDLY_DLYM2R_Pos;
pub const SAI_PDMDLY_DLYM3L_Pos: u32 = 16;
pub const SAI_PDMDLY_DLYM3L_Msk: u32 = 0x7 << SAI_PDMDLY_DLYM3L_Pos;
pub const SAI_PDMDLY_DLYM3L: u32 = SAI_PDMDLY_DLYM3L_Msk;
pub const SAI_PDMDLY_DLYM3L_0: u32 = 0x1 << SAI_PDMDLY_DLYM3L_Pos;
pub const SAI_PDMDLY_DLYM3L_1: u32 = 0x2 << SAI_PDMDLY_DLYM3L_Pos;
pub const SAI_PDMDLY_DLYM3L_2: u32 = 0x4 << SAI_PDMDLY_DLYM3L_Pos;
pub const SAI_PDMDLY_DLYM3R_Pos: u32 = 20;
pub const SAI_PDMDLY_DLYM3R_Msk: u32 = 0x7 << SAI_PDMDLY_DLYM3R_Pos;
pub const SAI_PDMDLY_DLYM3R: u32 = SAI_PDMDLY_DLYM3R_Msk;
pub const SAI_PDMDLY_DLYM3R_0: u32 = 0x1 << SAI_PDMDLY_DLYM3R_Pos;
pub const SAI_PDMDLY_DLYM3R_1: u32 = 0x2 << SAI_PDMDLY_DLYM3R_Pos;
pub const SAI_PDMDLY_DLYM3R_2: u32 = 0x4 << SAI_PDMDLY_DLYM3R_Pos;
pub const SAI_PDMDLY_DLYM4L_Pos: u32 = 24;
pub const SAI_PDMDLY_DLYM4L_Msk: u32 = 0x7 << SAI_PDMDLY_DLYM4L_Pos;
pub const SAI_PDMDLY_DLYM4L: u32 = SAI_PDMDLY_DLYM4L_Msk;
pub const SAI_PDMDLY_DLYM4L_0: u32 = 0x1 << SAI_PDMDLY_DLYM4L_Pos;
pub const SAI_PDMDLY_DLYM4L_1: u32 = 0x2 << SAI_PDMDLY_DLYM4L_Pos;
pub const SAI_PDMDLY_DLYM4L_2: u32 = 0x4 << SAI_PDMDLY_DLYM4L_Pos;
pub const SAI_PDMDLY_DLYM4R_Pos: u32 = 28;
pub const SAI_PDMDLY_DLYM4R_Msk: u32 = 0x7 << SAI_PDMDLY_DLYM4R_Pos;
pub const SAI_PDMDLY_DLYM4R: u32 = SAI_PDMDLY_DLYM4R_Msk;
pub const SAI_PDMDLY_DLYM4R_0: u32 = 0x1 << SAI_PDMDLY_DLYM4R_Pos;
pub const SAI_PDMDLY_DLYM4R_1: u32 = 0x2 << SAI_PDMDLY_DLYM4R_Pos;
pub const SAI_PDMDLY_DLYM4R_2: u32 = 0x4 << SAI_PDMDLY_DLYM4R_Pos;
pub const SBS_BOOTSR_INITVTOR_Pos: u32 = 0;
pub const SBS_BOOTSR_INITVTOR_Msk: u32 = 0xFFFFFFFF << SBS_BOOTSR_INITVTOR_Pos;
pub const SBS_BOOTSR_INITVTOR: u32 = SBS_BOOTSR_INITVTOR_Msk;
pub const SBS_HDPLCR_INCR_HDPL_Pos: u32 = 0;
pub const SBS_HDPLCR_INCR_HDPL_Msk: u32 = 0xFF << SBS_HDPLCR_INCR_HDPL_Pos;
pub const SBS_HDPLCR_INCR_HDPL: u32 = SBS_HDPLCR_INCR_HDPL_Msk;
pub const SBS_HDPLSR_HDPL_Pos: u32 = 0;
pub const SBS_HDPLSR_HDPL_Msk: u32 = 0xFF << SBS_HDPLSR_HDPL_Pos;
pub const SBS_HDPLSR_HDPL: u32 = SBS_HDPLSR_HDPL_Msk;
pub const SBS_DBGCR_AP_UNLOCK_Pos: u32 = 0;
pub const SBS_DBGCR_AP_UNLOCK_Msk: u32 = 0xFF << SBS_DBGCR_AP_UNLOCK_Pos;
pub const SBS_DBGCR_AP_UNLOCK: u32 = SBS_DBGCR_AP_UNLOCK_Msk;
pub const SBS_DBGCR_DBG_UNLOCK_Pos: u32 = 8;
pub const SBS_DBGCR_DBG_UNLOCK_Msk: u32 = 0xFF << SBS_DBGCR_DBG_UNLOCK_Pos;
pub const SBS_DBGCR_DBG_UNLOCK: u32 = SBS_DBGCR_DBG_UNLOCK_Msk;
pub const SBS_DBGCR_DBG_AUTH_HDPL_Pos: u32 = 16;
pub const SBS_DBGCR_DBG_AUTH_HDPL_Msk: u32 = 0xFF << SBS_DBGCR_DBG_AUTH_HDPL_Pos;
pub const SBS_DBGCR_DBG_AUTH_HDPL: u32 = SBS_DBGCR_DBG_AUTH_HDPL_Msk;
pub const SBS_DBGLOCKR_DBGCFG_LOCK_Pos: u32 = 0;
pub const SBS_DBGLOCKR_DBGCFG_LOCK_Msk: u32 = 0xFF << SBS_DBGLOCKR_DBGCFG_LOCK_Pos;
pub const SBS_DBGLOCKR_DBGCFG_LOCK: u32 = SBS_DBGLOCKR_DBGCFG_LOCK_Msk;
pub const SBS_RSSCMDR_RSSCMD_Pos: u32 = 0;
pub const SBS_RSSCMDR_RSSCMD_Msk: u32 = 0xFFFF << SBS_RSSCMDR_RSSCMD_Pos;
pub const SBS_RSSCMDR_RSSCMD: u32 = SBS_RSSCMDR_RSSCMD_Msk;
pub const SBS_PMCR_BOOSTEN_Pos: u32 = 8;
pub const SBS_PMCR_BOOSTEN_Msk: u32 = 0x1 << SBS_PMCR_BOOSTEN_Pos;
pub const SBS_PMCR_BOOSTEN: u32 = SBS_PMCR_BOOSTEN_Msk;
pub const SBS_PMCR_BOOSTVDDSEL_Pos: u32 = 9;
pub const SBS_PMCR_BOOSTVDDSEL_Msk: u32 = 0x1 << SBS_PMCR_BOOSTVDDSEL_Pos;
pub const SBS_PMCR_BOOSTVDDSEL: u32 = SBS_PMCR_BOOSTVDDSEL_Msk;
pub const SBS_PMCR_ETH_PHYSEL_Pos: u32 = 21;
pub const SBS_PMCR_ETH_PHYSEL_Msk: u32 = 0x7 << SBS_PMCR_ETH_PHYSEL_Pos;
pub const SBS_PMCR_ETH_PHYSEL: u32 = SBS_PMCR_ETH_PHYSEL_Msk;
pub const SBS_PMCR_ETH_PHYSEL_0: u32 = 0x1 << SBS_PMCR_ETH_PHYSEL_Pos;
pub const SBS_PMCR_ETH_PHYSEL_1: u32 = 0x2 << SBS_PMCR_ETH_PHYSEL_Pos;
pub const SBS_PMCR_ETH_PHYSEL_2: u32 = 0x4 << SBS_PMCR_ETH_PHYSEL_Pos;
pub const SBS_PMCR_AXISRAM_WS_Pos: u32 = 28;
pub const SBS_PMCR_AXISRAM_WS_Msk: u32 = 0x1 << SBS_PMCR_AXISRAM_WS_Pos;
pub const SBS_PMCR_AXISRAM_WS: u32 = SBS_PMCR_AXISRAM_WS_Msk;
pub const SBS_FPUIMR_FPU_IE_Pos: u32 = 0;
pub const SBS_FPUIMR_FPU_IE_Msk: u32 = 0x3F << SBS_FPUIMR_FPU_IE_Pos;
pub const SBS_FPUIMR_FPU_IE: u32 = SBS_FPUIMR_FPU_IE_Msk;
pub const SBS_FPUIMR_FPU_IE_0_Pos: u32 = 0;
pub const SBS_FPUIMR_FPU_IE_0_Msk: u32 = 0x1 << SBS_FPUIMR_FPU_IE_0_Pos;
pub const SBS_FPUIMR_FPU_IE_0: u32 = SBS_FPUIMR_FPU_IE_0_Msk;
pub const SBS_FPUIMR_FPU_IE_1_Pos: u32 = 1;
pub const SBS_FPUIMR_FPU_IE_1_Msk: u32 = 0x1 << SBS_FPUIMR_FPU_IE_1_Pos;
pub const SBS_FPUIMR_FPU_IE_1: u32 = SBS_FPUIMR_FPU_IE_1_Msk;
pub const SBS_FPUIMR_FPU_IE_2_Pos: u32 = 2;
pub const SBS_FPUIMR_FPU_IE_2_Msk: u32 = 0x1 << SBS_FPUIMR_FPU_IE_2_Pos;
pub const SBS_FPUIMR_FPU_IE_2: u32 = SBS_FPUIMR_FPU_IE_2_Msk;
pub const SBS_FPUIMR_FPU_IE_3_Pos: u32 = 3;
pub const SBS_FPUIMR_FPU_IE_3_Msk: u32 = 0x1 << SBS_FPUIMR_FPU_IE_3_Pos;
pub const SBS_FPUIMR_FPU_IE_3: u32 = SBS_FPUIMR_FPU_IE_3_Msk;
pub const SBS_FPUIMR_FPU_IE_4_Pos: u32 = 4;
pub const SBS_FPUIMR_FPU_IE_4_Msk: u32 = 0x1 << SBS_FPUIMR_FPU_IE_4_Pos;
pub const SBS_FPUIMR_FPU_IE_4: u32 = SBS_FPUIMR_FPU_IE_4_Msk;
pub const SBS_FPUIMR_FPU_IE_5_Pos: u32 = 5;
pub const SBS_FPUIMR_FPU_IE_5_Msk: u32 = 0x1 << SBS_FPUIMR_FPU_IE_5_Pos;
pub const SBS_FPUIMR_FPU_IE_5: u32 = SBS_FPUIMR_FPU_IE_5_Msk;
pub const SBS_MESR_MEF_Pos: u32 = 0;
pub const SBS_MESR_MEF_Msk: u32 = 0x1 << SBS_MESR_MEF_Pos;
pub const SBS_MESR_MEF: u32 = SBS_MESR_MEF_Msk;
pub const SBS_CCCSR_COMP_EN_Pos: u32 = 0;
pub const SBS_CCCSR_COMP_EN_Msk: u32 = 0x1 << SBS_CCCSR_COMP_EN_Pos;
pub const SBS_CCCSR_COMP_EN: u32 = SBS_CCCSR_COMP_EN_Msk;
pub const SBS_CCCSR_COMP_CODESEL_Pos: u32 = 1;
pub const SBS_CCCSR_COMP_CODESEL_Msk: u32 = 0x1 << SBS_CCCSR_COMP_CODESEL_Pos;
pub const SBS_CCCSR_COMP_CODESEL: u32 = SBS_CCCSR_COMP_CODESEL_Msk;
pub const SBS_CCCSR_XSPI1_COMP_EN_Pos: u32 = 2;
pub const SBS_CCCSR_XSPI1_COMP_EN_Msk: u32 = 0x1 << SBS_CCCSR_XSPI1_COMP_EN_Pos;
pub const SBS_CCCSR_XSPI1_COMP_EN: u32 = SBS_CCCSR_XSPI1_COMP_EN_Msk;
pub const SBS_CCCSR_XSPI1_COMP_CODESEL_Pos: u32 = 3;
pub const SBS_CCCSR_XSPI1_COMP_CODESEL_Msk: u32 = 0x1 << SBS_CCCSR_XSPI1_COMP_CODESEL_Pos;
pub const SBS_CCCSR_XSPI1_COMP_CODESEL: u32 = SBS_CCCSR_XSPI1_COMP_CODESEL_Msk;
pub const SBS_CCCSR_XSPI2_COMP_EN_Pos: u32 = 4;
pub const SBS_CCCSR_XSPI2_COMP_EN_Msk: u32 = 0x1 << SBS_CCCSR_XSPI2_COMP_EN_Pos;
pub const SBS_CCCSR_XSPI2_COMP_EN: u32 = SBS_CCCSR_XSPI2_COMP_EN_Msk;
pub const SBS_CCCSR_XSPI2_COMP_CODESEL_Pos: u32 = 5;
pub const SBS_CCCSR_XSPI2_COMP_CODESEL_Msk: u32 = 0x1 << SBS_CCCSR_XSPI2_COMP_CODESEL_Pos;
pub const SBS_CCCSR_XSPI2_COMP_CODESEL: u32 = SBS_CCCSR_XSPI2_COMP_CODESEL_Msk;
pub const SBS_CCCSR_COMP_RDY_Pos: u32 = 8;
pub const SBS_CCCSR_COMP_RDY_Msk: u32 = 0x1 << SBS_CCCSR_COMP_RDY_Pos;
pub const SBS_CCCSR_COMP_RDY: u32 = SBS_CCCSR_COMP_RDY_Msk;
pub const SBS_CCCSR_XSPI1_COMP_RDY_Pos: u32 = 9;
pub const SBS_CCCSR_XSPI1_COMP_RDY_Msk: u32 = 0x1 << SBS_CCCSR_XSPI1_COMP_RDY_Pos;
pub const SBS_CCCSR_XSPI1_COMP_RDY: u32 = SBS_CCCSR_XSPI1_COMP_RDY_Msk;
pub const SBS_CCCSR_XSPI2_COMP_RDY_Pos: u32 = 10;
pub const SBS_CCCSR_XSPI2_COMP_RDY_Msk: u32 = 0x1 << SBS_CCCSR_XSPI2_COMP_RDY_Pos;
pub const SBS_CCCSR_XSPI2_COMP_RDY: u32 = SBS_CCCSR_XSPI2_COMP_RDY_Msk;
pub const SBS_CCCSR_IOHSLV_Pos: u32 = 16;
pub const SBS_CCCSR_IOHSLV_Msk: u32 = 0x1 << SBS_CCCSR_IOHSLV_Pos;
pub const SBS_CCCSR_IOHSLV: u32 = SBS_CCCSR_IOHSLV_Msk;
pub const SBS_CCCSR_XSPI1_IOHSLV_Pos: u32 = 17;
pub const SBS_CCCSR_XSPI1_IOHSLV_Msk: u32 = 0x1 << SBS_CCCSR_XSPI1_IOHSLV_Pos;
pub const SBS_CCCSR_XSPI1_IOHSLV: u32 = SBS_CCCSR_XSPI1_IOHSLV_Msk;
pub const SBS_CCCSR_XSPI2_IOHSLV_Pos: u32 = 18;
pub const SBS_CCCSR_XSPI2_IOHSLV_Msk: u32 = 0x1 << SBS_CCCSR_XSPI2_IOHSLV_Pos;
pub const SBS_CCCSR_XSPI2_IOHSLV: u32 = SBS_CCCSR_XSPI2_IOHSLV_Msk;
pub const SBS_CCVALR_NSRC_Pos: u32 = 0;
pub const SBS_CCVALR_NSRC_Msk: u32 = 0xF << SBS_CCVALR_NSRC_Pos;
pub const SBS_CCVALR_NSRC: u32 = SBS_CCVALR_NSRC_Msk;
pub const SBS_CCVALR_PSRC_Pos: u32 = 4;
pub const SBS_CCVALR_PSRC_Msk: u32 = 0xF << SBS_CCVALR_PSRC_Pos;
pub const SBS_CCVALR_PSRC: u32 = SBS_CCVALR_PSRC_Msk;
pub const SBS_CCVALR_XSPI1_NSRC_Pos: u32 = 8;
pub const SBS_CCVALR_XSPI1_NSRC_Msk: u32 = 0xF << SBS_CCVALR_XSPI1_NSRC_Pos;
pub const SBS_CCVALR_XSPI1_NSRC: u32 = SBS_CCVALR_XSPI1_NSRC_Msk;
pub const SBS_CCVALR_XSPI1_PSRC_Pos: u32 = 12;
pub const SBS_CCVALR_XSPI1_PSRC_Msk: u32 = 0xF << SBS_CCVALR_XSPI1_PSRC_Pos;
pub const SBS_CCVALR_XSPI1_PSRC: u32 = SBS_CCVALR_XSPI1_PSRC_Msk;
pub const SBS_CCVALR_XSPI2_NSRC_Pos: u32 = 16;
pub const SBS_CCVALR_XSPI2_NSRC_Msk: u32 = 0xF << SBS_CCVALR_XSPI2_NSRC_Pos;
pub const SBS_CCVALR_XSPI2_NSRC: u32 = SBS_CCVALR_XSPI2_NSRC_Msk;
pub const SBS_CCVALR_XSPI2_PSRC_Pos: u32 = 20;
pub const SBS_CCVALR_XSPI2_PSRC_Msk: u32 = 0xF << SBS_CCVALR_XSPI2_PSRC_Pos;
pub const SBS_CCVALR_XSPI2_PSRC: u32 = SBS_CCVALR_XSPI2_PSRC_Msk;
pub const SBS_CCSWVALR_SW_NSRC_Pos: u32 = 0;
pub const SBS_CCSWVALR_SW_NSRC_Msk: u32 = 0xF << SBS_CCSWVALR_SW_NSRC_Pos;
pub const SBS_CCSWVALR_SW_NSRC: u32 = SBS_CCSWVALR_SW_NSRC_Msk;
pub const SBS_CCSWVALR_SW_PSRC_Pos: u32 = 4;
pub const SBS_CCSWVALR_SW_PSRC_Msk: u32 = 0xF << SBS_CCSWVALR_SW_PSRC_Pos;
pub const SBS_CCSWVALR_SW_PSRC: u32 = SBS_CCSWVALR_SW_PSRC_Msk;
pub const SBS_CCSWVALR_XSPI1_SW_NSRC_Pos: u32 = 8;
pub const SBS_CCSWVALR_XSPI1_SW_NSRC_Msk: u32 = 0xF << SBS_CCSWVALR_XSPI1_SW_NSRC_Pos;
pub const SBS_CCSWVALR_XSPI1_SW_NSRC: u32 = SBS_CCSWVALR_XSPI1_SW_NSRC_Msk;
pub const SBS_CCSWVALR_XSPI1_SW_PSRC_Pos: u32 = 12;
pub const SBS_CCSWVALR_XSPI1_SW_PSRC_Msk: u32 = 0xF << SBS_CCSWVALR_XSPI1_SW_PSRC_Pos;
pub const SBS_CCSWVALR_XSPI1_SW_PSRC: u32 = SBS_CCSWVALR_XSPI1_SW_PSRC_Msk;
pub const SBS_CCSWVALR_XSPI2_SW_NSRC_Pos: u32 = 16;
pub const SBS_CCSWVALR_XSPI2_SW_NSRC_Msk: u32 = 0xF << SBS_CCSWVALR_XSPI2_SW_NSRC_Pos;
pub const SBS_CCSWVALR_XSPI2_SW_NSRC: u32 = SBS_CCSWVALR_XSPI2_SW_NSRC_Msk;
pub const SBS_CCSWVALR_XSPI2_SW_PSRC_Pos: u32 = 20;
pub const SBS_CCSWVALR_XSPI2_SW_PSRC_Msk: u32 = 0xF << SBS_CCSWVALR_XSPI2_SW_PSRC_Pos;
pub const SBS_CCSWVALR_XSPI2_SW_PSRC: u32 = SBS_CCSWVALR_XSPI2_SW_PSRC_Msk;
pub const SBS_BKLOCKR_PVD_BL_Pos: u32 = 2;
pub const SBS_BKLOCKR_PVD_BL_Msk: u32 = 0x1 << SBS_BKLOCKR_PVD_BL_Pos;
pub const SBS_BKLOCKR_PVD_BL: u32 = SBS_BKLOCKR_PVD_BL_Msk;
pub const SBS_BKLOCKR_FLASHECC_BL_Pos: u32 = 3;
pub const SBS_BKLOCKR_FLASHECC_BL_Msk: u32 = 0x1 << SBS_BKLOCKR_FLASHECC_BL_Pos;
pub const SBS_BKLOCKR_FLASHECC_BL: u32 = SBS_BKLOCKR_FLASHECC_BL_Msk;
pub const SBS_BKLOCKR_CM7LCKUP_BL_Pos: u32 = 6;
pub const SBS_BKLOCKR_CM7LCKUP_BL_Msk: u32 = 0x1 << SBS_BKLOCKR_CM7LCKUP_BL_Pos;
pub const SBS_BKLOCKR_CM7LCKUP_BL: u32 = SBS_BKLOCKR_CM7LCKUP_BL_Msk;
pub const SBS_BKLOCKR_BKRAMECC_BL_Pos: u32 = 7;
pub const SBS_BKLOCKR_BKRAMECC_BL_Msk: u32 = 0x1 << SBS_BKLOCKR_BKRAMECC_BL_Pos;
pub const SBS_BKLOCKR_BKRAMECC_BL: u32 = SBS_BKLOCKR_BKRAMECC_BL_Msk;
pub const SBS_BKLOCKR_DTCMECC_BL_Pos: u32 = 13;
pub const SBS_BKLOCKR_DTCMECC_BL_Msk: u32 = 0x1 << SBS_BKLOCKR_DTCMECC_BL_Pos;
pub const SBS_BKLOCKR_DTCMECC_BL: u32 = SBS_BKLOCKR_DTCMECC_BL_Msk;
pub const SBS_BKLOCKR_ITCMECC_BL_Pos: u32 = 14;
pub const SBS_BKLOCKR_ITCMECC_BL_Msk: u32 = 0x1 << SBS_BKLOCKR_ITCMECC_BL_Pos;
pub const SBS_BKLOCKR_ITCMECC_BL: u32 = SBS_BKLOCKR_ITCMECC_BL_Msk;
pub const SBS_BKLOCKR_ARAM3ECC_BL_Pos: u32 = 21;
pub const SBS_BKLOCKR_ARAM3ECC_BL_Msk: u32 = 0x1 << SBS_BKLOCKR_ARAM3ECC_BL_Pos;
pub const SBS_BKLOCKR_ARAM3ECC_BL: u32 = SBS_BKLOCKR_ARAM3ECC_BL_Msk;
pub const SBS_BKLOCKR_ARAM1ECC_BL_Pos: u32 = 23;
pub const SBS_BKLOCKR_ARAM1ECC_BL_Msk: u32 = 0x1 << SBS_BKLOCKR_ARAM1ECC_BL_Pos;
pub const SBS_BKLOCKR_ARAM1ECC_BL: u32 = SBS_BKLOCKR_ARAM1ECC_BL_Msk;
pub const SBS_EXTICR1_PC_EXTI0_Pos: u32 = 0;
pub const SBS_EXTICR1_PC_EXTI0_Msk: u32 = 0xF << SBS_EXTICR1_PC_EXTI0_Pos;
pub const SBS_EXTICR1_PC_EXTI0: u32 = SBS_EXTICR1_PC_EXTI0_Msk;
pub const SBS_EXTICR1_PC_EXTI0_0: u32 = 0x1 << SBS_EXTICR1_PC_EXTI0_Pos;
pub const SBS_EXTICR1_PC_EXTI0_1: u32 = 0x2 << SBS_EXTICR1_PC_EXTI0_Pos;
pub const SBS_EXTICR1_PC_EXTI0_2: u32 = 0x4 << SBS_EXTICR1_PC_EXTI0_Pos;
pub const SBS_EXTICR1_PC_EXTI0_3: u32 = 0x8 << SBS_EXTICR1_PC_EXTI0_Pos;
pub const SBS_EXTICR1_PC_EXTI1_Pos: u32 = 4;
pub const SBS_EXTICR1_PC_EXTI1_Msk: u32 = 0xF << SBS_EXTICR1_PC_EXTI1_Pos;
pub const SBS_EXTICR1_PC_EXTI1: u32 = SBS_EXTICR1_PC_EXTI1_Msk;
pub const SBS_EXTICR1_PC_EXTI1_0: u32 = 0x1 << SBS_EXTICR1_PC_EXTI1_Pos;
pub const SBS_EXTICR1_PC_EXTI1_1: u32 = 0x2 << SBS_EXTICR1_PC_EXTI1_Pos;
pub const SBS_EXTICR1_PC_EXTI1_2: u32 = 0x4 << SBS_EXTICR1_PC_EXTI1_Pos;
pub const SBS_EXTICR1_PC_EXTI1_3: u32 = 0x8 << SBS_EXTICR1_PC_EXTI1_Pos;
pub const SBS_EXTICR1_PC_EXTI2_Pos: u32 = 8;
pub const SBS_EXTICR1_PC_EXTI2_Msk: u32 = 0xF << SBS_EXTICR1_PC_EXTI2_Pos;
pub const SBS_EXTICR1_PC_EXTI2: u32 = SBS_EXTICR1_PC_EXTI2_Msk;
pub const SBS_EXTICR1_PC_EXTI2_0: u32 = 0x1 << SBS_EXTICR1_PC_EXTI2_Pos;
pub const SBS_EXTICR1_PC_EXTI2_1: u32 = 0x2 << SBS_EXTICR1_PC_EXTI2_Pos;
pub const SBS_EXTICR1_PC_EXTI2_2: u32 = 0x4 << SBS_EXTICR1_PC_EXTI2_Pos;
pub const SBS_EXTICR1_PC_EXTI2_3: u32 = 0x8 << SBS_EXTICR1_PC_EXTI2_Pos;
pub const SBS_EXTICR1_PC_EXTI3_Pos: u32 = 12;
pub const SBS_EXTICR1_PC_EXTI3_Msk: u32 = 0xF << SBS_EXTICR1_PC_EXTI3_Pos;
pub const SBS_EXTICR1_PC_EXTI3: u32 = SBS_EXTICR1_PC_EXTI3_Msk;
pub const SBS_EXTICR1_PC_EXTI3_0: u32 = 0x1 << SBS_EXTICR1_PC_EXTI3_Pos;
pub const SBS_EXTICR1_PC_EXTI3_1: u32 = 0x2 << SBS_EXTICR1_PC_EXTI3_Pos;
pub const SBS_EXTICR1_PC_EXTI3_2: u32 = 0x4 << SBS_EXTICR1_PC_EXTI3_Pos;
pub const SBS_EXTICR1_PC_EXTI3_3: u32 = 0x8 << SBS_EXTICR1_PC_EXTI3_Pos;
pub const SBS_EXTICR2_PC_EXTI4_Pos: u32 = 0;
pub const SBS_EXTICR2_PC_EXTI4_Msk: u32 = 0xF << SBS_EXTICR2_PC_EXTI4_Pos;
pub const SBS_EXTICR2_PC_EXTI4: u32 = SBS_EXTICR2_PC_EXTI4_Msk;
pub const SBS_EXTICR2_PC_EXTI4_0: u32 = 0x1 << SBS_EXTICR2_PC_EXTI4_Pos;
pub const SBS_EXTICR2_PC_EXTI4_1: u32 = 0x2 << SBS_EXTICR2_PC_EXTI4_Pos;
pub const SBS_EXTICR2_PC_EXTI4_2: u32 = 0x4 << SBS_EXTICR2_PC_EXTI4_Pos;
pub const SBS_EXTICR2_PC_EXTI4_3: u32 = 0x8 << SBS_EXTICR2_PC_EXTI4_Pos;
pub const SBS_EXTICR2_PC_EXTI5_Pos: u32 = 4;
pub const SBS_EXTICR2_PC_EXTI5_Msk: u32 = 0xF << SBS_EXTICR2_PC_EXTI5_Pos;
pub const SBS_EXTICR2_PC_EXTI5: u32 = SBS_EXTICR2_PC_EXTI5_Msk;
pub const SBS_EXTICR2_PC_EXTI5_0: u32 = 0x1 << SBS_EXTICR2_PC_EXTI5_Pos;
pub const SBS_EXTICR2_PC_EXTI5_1: u32 = 0x2 << SBS_EXTICR2_PC_EXTI5_Pos;
pub const SBS_EXTICR2_PC_EXTI5_2: u32 = 0x4 << SBS_EXTICR2_PC_EXTI5_Pos;
pub const SBS_EXTICR2_PC_EXTI5_3: u32 = 0x8 << SBS_EXTICR2_PC_EXTI5_Pos;
pub const SBS_EXTICR2_PC_EXTI6_Pos: u32 = 8;
pub const SBS_EXTICR2_PC_EXTI6_Msk: u32 = 0xF << SBS_EXTICR2_PC_EXTI6_Pos;
pub const SBS_EXTICR2_PC_EXTI6: u32 = SBS_EXTICR2_PC_EXTI6_Msk;
pub const SBS_EXTICR2_PC_EXTI6_0: u32 = 0x1 << SBS_EXTICR2_PC_EXTI6_Pos;
pub const SBS_EXTICR2_PC_EXTI6_1: u32 = 0x2 << SBS_EXTICR2_PC_EXTI6_Pos;
pub const SBS_EXTICR2_PC_EXTI6_2: u32 = 0x4 << SBS_EXTICR2_PC_EXTI6_Pos;
pub const SBS_EXTICR2_PC_EXTI6_3: u32 = 0x8 << SBS_EXTICR2_PC_EXTI6_Pos;
pub const SBS_EXTICR2_PC_EXTI7_Pos: u32 = 12;
pub const SBS_EXTICR2_PC_EXTI7_Msk: u32 = 0xF << SBS_EXTICR2_PC_EXTI7_Pos;
pub const SBS_EXTICR2_PC_EXTI7: u32 = SBS_EXTICR2_PC_EXTI7_Msk;
pub const SBS_EXTICR2_PC_EXTI7_0: u32 = 0x1 << SBS_EXTICR2_PC_EXTI7_Pos;
pub const SBS_EXTICR2_PC_EXTI7_1: u32 = 0x2 << SBS_EXTICR2_PC_EXTI7_Pos;
pub const SBS_EXTICR2_PC_EXTI7_2: u32 = 0x4 << SBS_EXTICR2_PC_EXTI7_Pos;
pub const SBS_EXTICR2_PC_EXTI7_3: u32 = 0x8 << SBS_EXTICR2_PC_EXTI7_Pos;
pub const SBS_EXTICR3_PC_EXTI8_Pos: u32 = 0;
pub const SBS_EXTICR3_PC_EXTI8_Msk: u32 = 0xF << SBS_EXTICR3_PC_EXTI8_Pos;
pub const SBS_EXTICR3_PC_EXTI8: u32 = SBS_EXTICR3_PC_EXTI8_Msk;
pub const SBS_EXTICR3_PC_EXTI8_0: u32 = 0x1 << SBS_EXTICR3_PC_EXTI8_Pos;
pub const SBS_EXTICR3_PC_EXTI8_1: u32 = 0x2 << SBS_EXTICR3_PC_EXTI8_Pos;
pub const SBS_EXTICR3_PC_EXTI8_2: u32 = 0x4 << SBS_EXTICR3_PC_EXTI8_Pos;
pub const SBS_EXTICR3_PC_EXTI8_3: u32 = 0x8 << SBS_EXTICR3_PC_EXTI8_Pos;
pub const SBS_EXTICR3_PC_EXTI9_Pos: u32 = 4;
pub const SBS_EXTICR3_PC_EXTI9_Msk: u32 = 0xF << SBS_EXTICR3_PC_EXTI9_Pos;
pub const SBS_EXTICR3_PC_EXTI9: u32 = SBS_EXTICR3_PC_EXTI9_Msk;
pub const SBS_EXTICR3_PC_EXTI9_0: u32 = 0x1 << SBS_EXTICR3_PC_EXTI9_Pos;
pub const SBS_EXTICR3_PC_EXTI9_1: u32 = 0x2 << SBS_EXTICR3_PC_EXTI9_Pos;
pub const SBS_EXTICR3_PC_EXTI9_2: u32 = 0x4 << SBS_EXTICR3_PC_EXTI9_Pos;
pub const SBS_EXTICR3_PC_EXTI9_3: u32 = 0x8 << SBS_EXTICR3_PC_EXTI9_Pos;
pub const SBS_EXTICR3_PC_EXTI10_Pos: u32 = 8;
pub const SBS_EXTICR3_PC_EXTI10_Msk: u32 = 0xF << SBS_EXTICR3_PC_EXTI10_Pos;
pub const SBS_EXTICR3_PC_EXTI10: u32 = SBS_EXTICR3_PC_EXTI10_Msk;
pub const SBS_EXTICR3_PC_EXTI10_0: u32 = 0x1 << SBS_EXTICR3_PC_EXTI10_Pos;
pub const SBS_EXTICR3_PC_EXTI10_1: u32 = 0x2 << SBS_EXTICR3_PC_EXTI10_Pos;
pub const SBS_EXTICR3_PC_EXTI10_2: u32 = 0x4 << SBS_EXTICR3_PC_EXTI10_Pos;
pub const SBS_EXTICR3_PC_EXTI10_3: u32 = 0x8 << SBS_EXTICR3_PC_EXTI10_Pos;
pub const SBS_EXTICR3_PC_EXTI11_Pos: u32 = 12;
pub const SBS_EXTICR3_PC_EXTI11_Msk: u32 = 0xF << SBS_EXTICR3_PC_EXTI11_Pos;
pub const SBS_EXTICR3_PC_EXTI11: u32 = SBS_EXTICR3_PC_EXTI11_Msk;
pub const SBS_EXTICR3_PC_EXTI11_0: u32 = 0x1 << SBS_EXTICR3_PC_EXTI11_Pos;
pub const SBS_EXTICR3_PC_EXTI11_1: u32 = 0x2 << SBS_EXTICR3_PC_EXTI11_Pos;
pub const SBS_EXTICR3_PC_EXTI11_2: u32 = 0x4 << SBS_EXTICR3_PC_EXTI11_Pos;
pub const SBS_EXTICR3_PC_EXTI11_3: u32 = 0x8 << SBS_EXTICR3_PC_EXTI11_Pos;
pub const SBS_EXTICR4_PC_EXTI12_Pos: u32 = 0;
pub const SBS_EXTICR4_PC_EXTI12_Msk: u32 = 0xF << SBS_EXTICR4_PC_EXTI12_Pos;
pub const SBS_EXTICR4_PC_EXTI12: u32 = SBS_EXTICR4_PC_EXTI12_Msk;
pub const SBS_EXTICR4_PC_EXTI12_0: u32 = 0x1 << SBS_EXTICR4_PC_EXTI12_Pos;
pub const SBS_EXTICR4_PC_EXTI12_1: u32 = 0x2 << SBS_EXTICR4_PC_EXTI12_Pos;
pub const SBS_EXTICR4_PC_EXTI12_2: u32 = 0x4 << SBS_EXTICR4_PC_EXTI12_Pos;
pub const SBS_EXTICR4_PC_EXTI12_3: u32 = 0x8 << SBS_EXTICR4_PC_EXTI12_Pos;
pub const SBS_EXTICR4_PC_EXTI13_Pos: u32 = 4;
pub const SBS_EXTICR4_PC_EXTI13_Msk: u32 = 0xF << SBS_EXTICR4_PC_EXTI13_Pos;
pub const SBS_EXTICR4_PC_EXTI13: u32 = SBS_EXTICR4_PC_EXTI13_Msk;
pub const SBS_EXTICR4_PC_EXTI13_0: u32 = 0x1 << SBS_EXTICR4_PC_EXTI13_Pos;
pub const SBS_EXTICR4_PC_EXTI13_1: u32 = 0x2 << SBS_EXTICR4_PC_EXTI13_Pos;
pub const SBS_EXTICR4_PC_EXTI13_2: u32 = 0x4 << SBS_EXTICR4_PC_EXTI13_Pos;
pub const SBS_EXTICR4_PC_EXTI13_3: u32 = 0x8 << SBS_EXTICR4_PC_EXTI13_Pos;
pub const SBS_EXTICR4_PC_EXTI14_Pos: u32 = 8;
pub const SBS_EXTICR4_PC_EXTI14_Msk: u32 = 0xF << SBS_EXTICR4_PC_EXTI14_Pos;
pub const SBS_EXTICR4_PC_EXTI14: u32 = SBS_EXTICR4_PC_EXTI14_Msk;
pub const SBS_EXTICR4_PC_EXTI14_0: u32 = 0x1 << SBS_EXTICR4_PC_EXTI14_Pos;
pub const SBS_EXTICR4_PC_EXTI14_1: u32 = 0x2 << SBS_EXTICR4_PC_EXTI14_Pos;
pub const SBS_EXTICR4_PC_EXTI14_2: u32 = 0x4 << SBS_EXTICR4_PC_EXTI14_Pos;
pub const SBS_EXTICR4_PC_EXTI14_3: u32 = 0x8 << SBS_EXTICR4_PC_EXTI14_Pos;
pub const SBS_EXTICR4_PC_EXTI15_Pos: u32 = 12;
pub const SBS_EXTICR4_PC_EXTI15_Msk: u32 = 0xF << SBS_EXTICR4_PC_EXTI15_Pos;
pub const SBS_EXTICR4_PC_EXTI15: u32 = SBS_EXTICR4_PC_EXTI15_Msk;
pub const SBS_EXTICR4_PC_EXTI15_0: u32 = 0x1 << SBS_EXTICR4_PC_EXTI15_Pos;
pub const SBS_EXTICR4_PC_EXTI15_1: u32 = 0x2 << SBS_EXTICR4_PC_EXTI15_Pos;
pub const SBS_EXTICR4_PC_EXTI15_2: u32 = 0x4 << SBS_EXTICR4_PC_EXTI15_Pos;
pub const SBS_EXTICR4_PC_EXTI15_3: u32 = 0x8 << SBS_EXTICR4_PC_EXTI15_Pos;
pub const SDMMC_POWER_PWRCTRL_Pos: u32 = 0;
pub const SDMMC_POWER_PWRCTRL_Msk: u32 = 0x3 << SDMMC_POWER_PWRCTRL_Pos;
pub const SDMMC_POWER_PWRCTRL: u32 = SDMMC_POWER_PWRCTRL_Msk;
pub const SDMMC_POWER_PWRCTRL_0: u32 = 0x1 << SDMMC_POWER_PWRCTRL_Pos;
pub const SDMMC_POWER_PWRCTRL_1: u32 = 0x2 << SDMMC_POWER_PWRCTRL_Pos;
pub const SDMMC_POWER_VSWITCH_Pos: u32 = 2;
pub const SDMMC_POWER_VSWITCH_Msk: u32 = 0x1 << SDMMC_POWER_VSWITCH_Pos;
pub const SDMMC_POWER_VSWITCH: u32 = SDMMC_POWER_VSWITCH_Msk;
pub const SDMMC_POWER_VSWITCHEN_Pos: u32 = 3;
pub const SDMMC_POWER_VSWITCHEN_Msk: u32 = 0x1 << SDMMC_POWER_VSWITCHEN_Pos;
pub const SDMMC_POWER_VSWITCHEN: u32 = SDMMC_POWER_VSWITCHEN_Msk;
pub const SDMMC_POWER_DIRPOL_Pos: u32 = 4;
pub const SDMMC_POWER_DIRPOL_Msk: u32 = 0x1 << SDMMC_POWER_DIRPOL_Pos;
pub const SDMMC_POWER_DIRPOL: u32 = SDMMC_POWER_DIRPOL_Msk;
pub const SDMMC_CLKCR_CLKDIV_Pos: u32 = 0;
pub const SDMMC_CLKCR_CLKDIV_Msk: u32 = 0x3FF << SDMMC_CLKCR_CLKDIV_Pos;
pub const SDMMC_CLKCR_CLKDIV: u32 = SDMMC_CLKCR_CLKDIV_Msk;
pub const SDMMC_CLKCR_PWRSAV_Pos: u32 = 12;
pub const SDMMC_CLKCR_PWRSAV_Msk: u32 = 0x1 << SDMMC_CLKCR_PWRSAV_Pos;
pub const SDMMC_CLKCR_PWRSAV: u32 = SDMMC_CLKCR_PWRSAV_Msk;
pub const SDMMC_CLKCR_WIDBUS_Pos: u32 = 14;
pub const SDMMC_CLKCR_WIDBUS_Msk: u32 = 0x3 << SDMMC_CLKCR_WIDBUS_Pos;
pub const SDMMC_CLKCR_WIDBUS: u32 = SDMMC_CLKCR_WIDBUS_Msk;
pub const SDMMC_CLKCR_WIDBUS_0: u32 = 0x1 << SDMMC_CLKCR_WIDBUS_Pos;
pub const SDMMC_CLKCR_WIDBUS_1: u32 = 0x2 << SDMMC_CLKCR_WIDBUS_Pos;
pub const SDMMC_CLKCR_NEGEDGE_Pos: u32 = 16;
pub const SDMMC_CLKCR_NEGEDGE_Msk: u32 = 0x1 << SDMMC_CLKCR_NEGEDGE_Pos;
pub const SDMMC_CLKCR_NEGEDGE: u32 = SDMMC_CLKCR_NEGEDGE_Msk;
pub const SDMMC_CLKCR_HWFC_EN_Pos: u32 = 17;
pub const SDMMC_CLKCR_HWFC_EN_Msk: u32 = 0x1 << SDMMC_CLKCR_HWFC_EN_Pos;
pub const SDMMC_CLKCR_HWFC_EN: u32 = SDMMC_CLKCR_HWFC_EN_Msk;
pub const SDMMC_CLKCR_DDR_Pos: u32 = 18;
pub const SDMMC_CLKCR_DDR_Msk: u32 = 0x1 << SDMMC_CLKCR_DDR_Pos;
pub const SDMMC_CLKCR_DDR: u32 = SDMMC_CLKCR_DDR_Msk;
pub const SDMMC_CLKCR_BUSSPEED_Pos: u32 = 19;
pub const SDMMC_CLKCR_BUSSPEED_Msk: u32 = 0x1 << SDMMC_CLKCR_BUSSPEED_Pos;
pub const SDMMC_CLKCR_BUSSPEED: u32 = SDMMC_CLKCR_BUSSPEED_Msk;
pub const SDMMC_CLKCR_SELCLKRX_Pos: u32 = 20;
pub const SDMMC_CLKCR_SELCLKRX_Msk: u32 = 0x3 << SDMMC_CLKCR_SELCLKRX_Pos;
pub const SDMMC_CLKCR_SELCLKRX: u32 = SDMMC_CLKCR_SELCLKRX_Msk;
pub const SDMMC_CLKCR_SELCLKRX_0: u32 = 0x1 << SDMMC_CLKCR_SELCLKRX_Pos;
pub const SDMMC_CLKCR_SELCLKRX_1: u32 = 0x2 << SDMMC_CLKCR_SELCLKRX_Pos;
pub const SDMMC_ARG_CMDARG_Pos: u32 = 0;
pub const SDMMC_ARG_CMDARG_Msk: u32 = 0xFFFFFFFF << SDMMC_ARG_CMDARG_Pos;
pub const SDMMC_ARG_CMDARG: u32 = SDMMC_ARG_CMDARG_Msk;
pub const SDMMC_CMD_CMDINDEX_Pos: u32 = 0;
pub const SDMMC_CMD_CMDINDEX_Msk: u32 = 0x3F << SDMMC_CMD_CMDINDEX_Pos;
pub const SDMMC_CMD_CMDINDEX: u32 = SDMMC_CMD_CMDINDEX_Msk;
pub const SDMMC_CMD_CMDTRANS_Pos: u32 = 6;
pub const SDMMC_CMD_CMDTRANS_Msk: u32 = 0x1 << SDMMC_CMD_CMDTRANS_Pos;
pub const SDMMC_CMD_CMDTRANS: u32 = SDMMC_CMD_CMDTRANS_Msk;
pub const SDMMC_CMD_CMDSTOP_Pos: u32 = 7;
pub const SDMMC_CMD_CMDSTOP_Msk: u32 = 0x1 << SDMMC_CMD_CMDSTOP_Pos;
pub const SDMMC_CMD_CMDSTOP: u32 = SDMMC_CMD_CMDSTOP_Msk;
pub const SDMMC_CMD_WAITRESP_Pos: u32 = 8;
pub const SDMMC_CMD_WAITRESP_Msk: u32 = 0x3 << SDMMC_CMD_WAITRESP_Pos;
pub const SDMMC_CMD_WAITRESP: u32 = SDMMC_CMD_WAITRESP_Msk;
pub const SDMMC_CMD_WAITRESP_0: u32 = 0x1 << SDMMC_CMD_WAITRESP_Pos;
pub const SDMMC_CMD_WAITRESP_1: u32 = 0x2 << SDMMC_CMD_WAITRESP_Pos;
pub const SDMMC_CMD_WAITINT_Pos: u32 = 10;
pub const SDMMC_CMD_WAITINT_Msk: u32 = 0x1 << SDMMC_CMD_WAITINT_Pos;
pub const SDMMC_CMD_WAITINT: u32 = SDMMC_CMD_WAITINT_Msk;
pub const SDMMC_CMD_WAITPEND_Pos: u32 = 11;
pub const SDMMC_CMD_WAITPEND_Msk: u32 = 0x1 << SDMMC_CMD_WAITPEND_Pos;
pub const SDMMC_CMD_WAITPEND: u32 = SDMMC_CMD_WAITPEND_Msk;
pub const SDMMC_CMD_CPSMEN_Pos: u32 = 12;
pub const SDMMC_CMD_CPSMEN_Msk: u32 = 0x1 << SDMMC_CMD_CPSMEN_Pos;
pub const SDMMC_CMD_CPSMEN: u32 = SDMMC_CMD_CPSMEN_Msk;
pub const SDMMC_CMD_DTHOLD_Pos: u32 = 13;
pub const SDMMC_CMD_DTHOLD_Msk: u32 = 0x1 << SDMMC_CMD_DTHOLD_Pos;
pub const SDMMC_CMD_DTHOLD: u32 = SDMMC_CMD_DTHOLD_Msk;
pub const SDMMC_CMD_BOOTMODE_Pos: u32 = 14;
pub const SDMMC_CMD_BOOTMODE_Msk: u32 = 0x1 << SDMMC_CMD_BOOTMODE_Pos;
pub const SDMMC_CMD_BOOTMODE: u32 = SDMMC_CMD_BOOTMODE_Msk;
pub const SDMMC_CMD_BOOTEN_Pos: u32 = 15;
pub const SDMMC_CMD_BOOTEN_Msk: u32 = 0x1 << SDMMC_CMD_BOOTEN_Pos;
pub const SDMMC_CMD_BOOTEN: u32 = SDMMC_CMD_BOOTEN_Msk;
pub const SDMMC_CMD_CMDSUSPEND_Pos: u32 = 16;
pub const SDMMC_CMD_CMDSUSPEND_Msk: u32 = 0x1 << SDMMC_CMD_CMDSUSPEND_Pos;
pub const SDMMC_CMD_CMDSUSPEND: u32 = SDMMC_CMD_CMDSUSPEND_Msk;
pub const SDMMC_RESPCMD_RESPCMD_Pos: u32 = 0;
pub const SDMMC_RESPCMD_RESPCMD_Msk: u32 = 0x3F << SDMMC_RESPCMD_RESPCMD_Pos;
pub const SDMMC_RESPCMD_RESPCMD: u32 = SDMMC_RESPCMD_RESPCMD_Msk;
pub const SDMMC_RESP1_CARDSTATUS1_Pos: u32 = 0;
pub const SDMMC_RESP1_CARDSTATUS1_Msk: u32 = 0xFFFFFFFF << SDMMC_RESP1_CARDSTATUS1_Pos;
pub const SDMMC_RESP1_CARDSTATUS1: u32 = SDMMC_RESP1_CARDSTATUS1_Msk;
pub const SDMMC_RESP2_CARDSTATUS2_Pos: u32 = 0;
pub const SDMMC_RESP2_CARDSTATUS2_Msk: u32 = 0xFFFFFFFF << SDMMC_RESP2_CARDSTATUS2_Pos;
pub const SDMMC_RESP2_CARDSTATUS2: u32 = SDMMC_RESP2_CARDSTATUS2_Msk;
pub const SDMMC_RESP3_CARDSTATUS3_Pos: u32 = 0;
pub const SDMMC_RESP3_CARDSTATUS3_Msk: u32 = 0xFFFFFFFF << SDMMC_RESP3_CARDSTATUS3_Pos;
pub const SDMMC_RESP3_CARDSTATUS3: u32 = SDMMC_RESP3_CARDSTATUS3_Msk;
pub const SDMMC_RESP4_CARDSTATUS4_Pos: u32 = 0;
pub const SDMMC_RESP4_CARDSTATUS4_Msk: u32 = 0xFFFFFFFF << SDMMC_RESP4_CARDSTATUS4_Pos;
pub const SDMMC_RESP4_CARDSTATUS4: u32 = SDMMC_RESP4_CARDSTATUS4_Msk;
pub const SDMMC_DTIMER_DATATIME_Pos: u32 = 0;
pub const SDMMC_DTIMER_DATATIME_Msk: u32 = 0xFFFFFFFF << SDMMC_DTIMER_DATATIME_Pos;
pub const SDMMC_DTIMER_DATATIME: u32 = SDMMC_DTIMER_DATATIME_Msk;
pub const SDMMC_DLEN_DATALENGTH_Pos: u32 = 0;
pub const SDMMC_DLEN_DATALENGTH_Msk: u32 = 0x07FFFFFF << SDMMC_DLEN_DATALENGTH_Pos;
pub const SDMMC_DLEN_DATALENGTH: u32 = SDMMC_DLEN_DATALENGTH_Msk;
pub const SDMMC_DCTRL_DTEN_Pos: u32 = 0;
pub const SDMMC_DCTRL_DTEN_Msk: u32 = 0x1 << SDMMC_DCTRL_DTEN_Pos;
pub const SDMMC_DCTRL_DTEN: u32 = SDMMC_DCTRL_DTEN_Msk;
pub const SDMMC_DCTRL_DTDIR_Pos: u32 = 1;
pub const SDMMC_DCTRL_DTDIR_Msk: u32 = 0x1 << SDMMC_DCTRL_DTDIR_Pos;
pub const SDMMC_DCTRL_DTDIR: u32 = SDMMC_DCTRL_DTDIR_Msk;
pub const SDMMC_DCTRL_DTMODE_Pos: u32 = 2;
pub const SDMMC_DCTRL_DTMODE_Msk: u32 = 0x3 << SDMMC_DCTRL_DTMODE_Pos;
pub const SDMMC_DCTRL_DTMODE: u32 = SDMMC_DCTRL_DTMODE_Msk;
pub const SDMMC_DCTRL_DTMODE_0: u32 = 0x1 << SDMMC_DCTRL_DTMODE_Pos;
pub const SDMMC_DCTRL_DTMODE_1: u32 = 0x2 << SDMMC_DCTRL_DTMODE_Pos;
pub const SDMMC_DCTRL_DBLOCKSIZE_Pos: u32 = 4;
pub const SDMMC_DCTRL_DBLOCKSIZE_Msk: u32 = 0xF << SDMMC_DCTRL_DBLOCKSIZE_Pos;
pub const SDMMC_DCTRL_DBLOCKSIZE: u32 = SDMMC_DCTRL_DBLOCKSIZE_Msk;
pub const SDMMC_DCTRL_DBLOCKSIZE_0: u32 = 0x1 << SDMMC_DCTRL_DBLOCKSIZE_Pos;
pub const SDMMC_DCTRL_DBLOCKSIZE_1: u32 = 0x2 << SDMMC_DCTRL_DBLOCKSIZE_Pos;
pub const SDMMC_DCTRL_DBLOCKSIZE_2: u32 = 0x4 << SDMMC_DCTRL_DBLOCKSIZE_Pos;
pub const SDMMC_DCTRL_DBLOCKSIZE_3: u32 = 0x8 << SDMMC_DCTRL_DBLOCKSIZE_Pos;
pub const SDMMC_DCTRL_RWSTART_Pos: u32 = 8;
pub const SDMMC_DCTRL_RWSTART_Msk: u32 = 0x1 << SDMMC_DCTRL_RWSTART_Pos;
pub const SDMMC_DCTRL_RWSTART: u32 = SDMMC_DCTRL_RWSTART_Msk;
pub const SDMMC_DCTRL_RWSTOP_Pos: u32 = 9;
pub const SDMMC_DCTRL_RWSTOP_Msk: u32 = 0x1 << SDMMC_DCTRL_RWSTOP_Pos;
pub const SDMMC_DCTRL_RWSTOP: u32 = SDMMC_DCTRL_RWSTOP_Msk;
pub const SDMMC_DCTRL_RWMOD_Pos: u32 = 10;
pub const SDMMC_DCTRL_RWMOD_Msk: u32 = 0x1 << SDMMC_DCTRL_RWMOD_Pos;
pub const SDMMC_DCTRL_RWMOD: u32 = SDMMC_DCTRL_RWMOD_Msk;
pub const SDMMC_DCTRL_SDIOEN_Pos: u32 = 11;
pub const SDMMC_DCTRL_SDIOEN_Msk: u32 = 0x1 << SDMMC_DCTRL_SDIOEN_Pos;
pub const SDMMC_DCTRL_SDIOEN: u32 = SDMMC_DCTRL_SDIOEN_Msk;
pub const SDMMC_DCTRL_BOOTACKEN_Pos: u32 = 12;
pub const SDMMC_DCTRL_BOOTACKEN_Msk: u32 = 0x1 << SDMMC_DCTRL_BOOTACKEN_Pos;
pub const SDMMC_DCTRL_BOOTACKEN: u32 = SDMMC_DCTRL_BOOTACKEN_Msk;
pub const SDMMC_DCTRL_FIFORST_Pos: u32 = 13;
pub const SDMMC_DCTRL_FIFORST_Msk: u32 = 0x1 << SDMMC_DCTRL_FIFORST_Pos;
pub const SDMMC_DCTRL_FIFORST: u32 = SDMMC_DCTRL_FIFORST_Msk;
pub const SDMMC_DCOUNT_DATACOUNT_Pos: u32 = 0;
pub const SDMMC_DCOUNT_DATACOUNT_Msk: u32 = 0x07FFFFFF << SDMMC_DCOUNT_DATACOUNT_Pos;
pub const SDMMC_DCOUNT_DATACOUNT: u32 = SDMMC_DCOUNT_DATACOUNT_Msk;
pub const SDMMC_STA_CCRCFAIL_Pos: u32 = 0;
pub const SDMMC_STA_CCRCFAIL_Msk: u32 = 0x1 << SDMMC_STA_CCRCFAIL_Pos;
pub const SDMMC_STA_CCRCFAIL: u32 = SDMMC_STA_CCRCFAIL_Msk;
pub const SDMMC_STA_DCRCFAIL_Pos: u32 = 1;
pub const SDMMC_STA_DCRCFAIL_Msk: u32 = 0x1 << SDMMC_STA_DCRCFAIL_Pos;
pub const SDMMC_STA_DCRCFAIL: u32 = SDMMC_STA_DCRCFAIL_Msk;
pub const SDMMC_STA_CTIMEOUT_Pos: u32 = 2;
pub const SDMMC_STA_CTIMEOUT_Msk: u32 = 0x1 << SDMMC_STA_CTIMEOUT_Pos;
pub const SDMMC_STA_CTIMEOUT: u32 = SDMMC_STA_CTIMEOUT_Msk;
pub const SDMMC_STA_DTIMEOUT_Pos: u32 = 3;
pub const SDMMC_STA_DTIMEOUT_Msk: u32 = 0x1 << SDMMC_STA_DTIMEOUT_Pos;
pub const SDMMC_STA_DTIMEOUT: u32 = SDMMC_STA_DTIMEOUT_Msk;
pub const SDMMC_STA_TXUNDERR_Pos: u32 = 4;
pub const SDMMC_STA_TXUNDERR_Msk: u32 = 0x1 << SDMMC_STA_TXUNDERR_Pos;
pub const SDMMC_STA_TXUNDERR: u32 = SDMMC_STA_TXUNDERR_Msk;
pub const SDMMC_STA_RXOVERR_Pos: u32 = 5;
pub const SDMMC_STA_RXOVERR_Msk: u32 = 0x1 << SDMMC_STA_RXOVERR_Pos;
pub const SDMMC_STA_RXOVERR: u32 = SDMMC_STA_RXOVERR_Msk;
pub const SDMMC_STA_CMDREND_Pos: u32 = 6;
pub const SDMMC_STA_CMDREND_Msk: u32 = 0x1 << SDMMC_STA_CMDREND_Pos;
pub const SDMMC_STA_CMDREND: u32 = SDMMC_STA_CMDREND_Msk;
pub const SDMMC_STA_CMDSENT_Pos: u32 = 7;
pub const SDMMC_STA_CMDSENT_Msk: u32 = 0x1 << SDMMC_STA_CMDSENT_Pos;
pub const SDMMC_STA_CMDSENT: u32 = SDMMC_STA_CMDSENT_Msk;
pub const SDMMC_STA_DATAEND_Pos: u32 = 8;
pub const SDMMC_STA_DATAEND_Msk: u32 = 0x1 << SDMMC_STA_DATAEND_Pos;
pub const SDMMC_STA_DATAEND: u32 = SDMMC_STA_DATAEND_Msk;
pub const SDMMC_STA_DHOLD_Pos: u32 = 9;
pub const SDMMC_STA_DHOLD_Msk: u32 = 0x1 << SDMMC_STA_DHOLD_Pos;
pub const SDMMC_STA_DHOLD: u32 = SDMMC_STA_DHOLD_Msk;
pub const SDMMC_STA_DBCKEND_Pos: u32 = 10;
pub const SDMMC_STA_DBCKEND_Msk: u32 = 0x1 << SDMMC_STA_DBCKEND_Pos;
pub const SDMMC_STA_DBCKEND: u32 = SDMMC_STA_DBCKEND_Msk;
pub const SDMMC_STA_DABORT_Pos: u32 = 11;
pub const SDMMC_STA_DABORT_Msk: u32 = 0x1 << SDMMC_STA_DABORT_Pos;
pub const SDMMC_STA_DABORT: u32 = SDMMC_STA_DABORT_Msk;
pub const SDMMC_STA_DPSMACT_Pos: u32 = 12;
pub const SDMMC_STA_DPSMACT_Msk: u32 = 0x1 << SDMMC_STA_DPSMACT_Pos;
pub const SDMMC_STA_DPSMACT: u32 = SDMMC_STA_DPSMACT_Msk;
pub const SDMMC_STA_CPSMACT_Pos: u32 = 13;
pub const SDMMC_STA_CPSMACT_Msk: u32 = 0x1 << SDMMC_STA_CPSMACT_Pos;
pub const SDMMC_STA_CPSMACT: u32 = SDMMC_STA_CPSMACT_Msk;
pub const SDMMC_STA_TXFIFOHE_Pos: u32 = 14;
pub const SDMMC_STA_TXFIFOHE_Msk: u32 = 0x1 << SDMMC_STA_TXFIFOHE_Pos;
pub const SDMMC_STA_TXFIFOHE: u32 = SDMMC_STA_TXFIFOHE_Msk;
pub const SDMMC_STA_RXFIFOHF_Pos: u32 = 15;
pub const SDMMC_STA_RXFIFOHF_Msk: u32 = 0x1 << SDMMC_STA_RXFIFOHF_Pos;
pub const SDMMC_STA_RXFIFOHF: u32 = SDMMC_STA_RXFIFOHF_Msk;
pub const SDMMC_STA_TXFIFOF_Pos: u32 = 16;
pub const SDMMC_STA_TXFIFOF_Msk: u32 = 0x1 << SDMMC_STA_TXFIFOF_Pos;
pub const SDMMC_STA_TXFIFOF: u32 = SDMMC_STA_TXFIFOF_Msk;
pub const SDMMC_STA_RXFIFOF_Pos: u32 = 17;
pub const SDMMC_STA_RXFIFOF_Msk: u32 = 0x1 << SDMMC_STA_RXFIFOF_Pos;
pub const SDMMC_STA_RXFIFOF: u32 = SDMMC_STA_RXFIFOF_Msk;
pub const SDMMC_STA_TXFIFOE_Pos: u32 = 18;
pub const SDMMC_STA_TXFIFOE_Msk: u32 = 0x1 << SDMMC_STA_TXFIFOE_Pos;
pub const SDMMC_STA_TXFIFOE: u32 = SDMMC_STA_TXFIFOE_Msk;
pub const SDMMC_STA_RXFIFOE_Pos: u32 = 19;
pub const SDMMC_STA_RXFIFOE_Msk: u32 = 0x1 << SDMMC_STA_RXFIFOE_Pos;
pub const SDMMC_STA_RXFIFOE: u32 = SDMMC_STA_RXFIFOE_Msk;
pub const SDMMC_STA_BUSYD0_Pos: u32 = 20;
pub const SDMMC_STA_BUSYD0_Msk: u32 = 0x1 << SDMMC_STA_BUSYD0_Pos;
pub const SDMMC_STA_BUSYD0: u32 = SDMMC_STA_BUSYD0_Msk;
pub const SDMMC_STA_BUSYD0END_Pos: u32 = 21;
pub const SDMMC_STA_BUSYD0END_Msk: u32 = 0x1 << SDMMC_STA_BUSYD0END_Pos;
pub const SDMMC_STA_BUSYD0END: u32 = SDMMC_STA_BUSYD0END_Msk;
pub const SDMMC_STA_SDIOIT_Pos: u32 = 22;
pub const SDMMC_STA_SDIOIT_Msk: u32 = 0x1 << SDMMC_STA_SDIOIT_Pos;
pub const SDMMC_STA_SDIOIT: u32 = SDMMC_STA_SDIOIT_Msk;
pub const SDMMC_STA_ACKFAIL_Pos: u32 = 23;
pub const SDMMC_STA_ACKFAIL_Msk: u32 = 0x1 << SDMMC_STA_ACKFAIL_Pos;
pub const SDMMC_STA_ACKFAIL: u32 = SDMMC_STA_ACKFAIL_Msk;
pub const SDMMC_STA_ACKTIMEOUT_Pos: u32 = 24;
pub const SDMMC_STA_ACKTIMEOUT_Msk: u32 = 0x1 << SDMMC_STA_ACKTIMEOUT_Pos;
pub const SDMMC_STA_ACKTIMEOUT: u32 = SDMMC_STA_ACKTIMEOUT_Msk;
pub const SDMMC_STA_VSWEND_Pos: u32 = 25;
pub const SDMMC_STA_VSWEND_Msk: u32 = 0x1 << SDMMC_STA_VSWEND_Pos;
pub const SDMMC_STA_VSWEND: u32 = SDMMC_STA_VSWEND_Msk;
pub const SDMMC_STA_CKSTOP_Pos: u32 = 26;
pub const SDMMC_STA_CKSTOP_Msk: u32 = 0x1 << SDMMC_STA_CKSTOP_Pos;
pub const SDMMC_STA_CKSTOP: u32 = SDMMC_STA_CKSTOP_Msk;
pub const SDMMC_STA_IDMATE_Pos: u32 = 27;
pub const SDMMC_STA_IDMATE_Msk: u32 = 0x1 << SDMMC_STA_IDMATE_Pos;
pub const SDMMC_STA_IDMATE: u32 = SDMMC_STA_IDMATE_Msk;
pub const SDMMC_STA_IDMABTC_Pos: u32 = 28;
pub const SDMMC_STA_IDMABTC_Msk: u32 = 0x1 << SDMMC_STA_IDMABTC_Pos;
pub const SDMMC_STA_IDMABTC: u32 = SDMMC_STA_IDMABTC_Msk;
pub const SDMMC_ICR_CCRCFAILC_Pos: u32 = 0;
pub const SDMMC_ICR_CCRCFAILC_Msk: u32 = 0x1 << SDMMC_ICR_CCRCFAILC_Pos;
pub const SDMMC_ICR_CCRCFAILC: u32 = SDMMC_ICR_CCRCFAILC_Msk;
pub const SDMMC_ICR_DCRCFAILC_Pos: u32 = 1;
pub const SDMMC_ICR_DCRCFAILC_Msk: u32 = 0x1 << SDMMC_ICR_DCRCFAILC_Pos;
pub const SDMMC_ICR_DCRCFAILC: u32 = SDMMC_ICR_DCRCFAILC_Msk;
pub const SDMMC_ICR_CTIMEOUTC_Pos: u32 = 2;
pub const SDMMC_ICR_CTIMEOUTC_Msk: u32 = 0x1 << SDMMC_ICR_CTIMEOUTC_Pos;
pub const SDMMC_ICR_CTIMEOUTC: u32 = SDMMC_ICR_CTIMEOUTC_Msk;
pub const SDMMC_ICR_DTIMEOUTC_Pos: u32 = 3;
pub const SDMMC_ICR_DTIMEOUTC_Msk: u32 = 0x1 << SDMMC_ICR_DTIMEOUTC_Pos;
pub const SDMMC_ICR_DTIMEOUTC: u32 = SDMMC_ICR_DTIMEOUTC_Msk;
pub const SDMMC_ICR_TXUNDERRC_Pos: u32 = 4;
pub const SDMMC_ICR_TXUNDERRC_Msk: u32 = 0x1 << SDMMC_ICR_TXUNDERRC_Pos;
pub const SDMMC_ICR_TXUNDERRC: u32 = SDMMC_ICR_TXUNDERRC_Msk;
pub const SDMMC_ICR_RXOVERRC_Pos: u32 = 5;
pub const SDMMC_ICR_RXOVERRC_Msk: u32 = 0x1 << SDMMC_ICR_RXOVERRC_Pos;
pub const SDMMC_ICR_RXOVERRC: u32 = SDMMC_ICR_RXOVERRC_Msk;
pub const SDMMC_ICR_CMDRENDC_Pos: u32 = 6;
pub const SDMMC_ICR_CMDRENDC_Msk: u32 = 0x1 << SDMMC_ICR_CMDRENDC_Pos;
pub const SDMMC_ICR_CMDRENDC: u32 = SDMMC_ICR_CMDRENDC_Msk;
pub const SDMMC_ICR_CMDSENTC_Pos: u32 = 7;
pub const SDMMC_ICR_CMDSENTC_Msk: u32 = 0x1 << SDMMC_ICR_CMDSENTC_Pos;
pub const SDMMC_ICR_CMDSENTC: u32 = SDMMC_ICR_CMDSENTC_Msk;
pub const SDMMC_ICR_DATAENDC_Pos: u32 = 8;
pub const SDMMC_ICR_DATAENDC_Msk: u32 = 0x1 << SDMMC_ICR_DATAENDC_Pos;
pub const SDMMC_ICR_DATAENDC: u32 = SDMMC_ICR_DATAENDC_Msk;
pub const SDMMC_ICR_DHOLDC_Pos: u32 = 9;
pub const SDMMC_ICR_DHOLDC_Msk: u32 = 0x1 << SDMMC_ICR_DHOLDC_Pos;
pub const SDMMC_ICR_DHOLDC: u32 = SDMMC_ICR_DHOLDC_Msk;
pub const SDMMC_ICR_DBCKENDC_Pos: u32 = 10;
pub const SDMMC_ICR_DBCKENDC_Msk: u32 = 0x1 << SDMMC_ICR_DBCKENDC_Pos;
pub const SDMMC_ICR_DBCKENDC: u32 = SDMMC_ICR_DBCKENDC_Msk;
pub const SDMMC_ICR_DABORTC_Pos: u32 = 11;
pub const SDMMC_ICR_DABORTC_Msk: u32 = 0x1 << SDMMC_ICR_DABORTC_Pos;
pub const SDMMC_ICR_DABORTC: u32 = SDMMC_ICR_DABORTC_Msk;
pub const SDMMC_ICR_BUSYD0ENDC_Pos: u32 = 21;
pub const SDMMC_ICR_BUSYD0ENDC_Msk: u32 = 0x1 << SDMMC_ICR_BUSYD0ENDC_Pos;
pub const SDMMC_ICR_BUSYD0ENDC: u32 = SDMMC_ICR_BUSYD0ENDC_Msk;
pub const SDMMC_ICR_SDIOITC_Pos: u32 = 22;
pub const SDMMC_ICR_SDIOITC_Msk: u32 = 0x1 << SDMMC_ICR_SDIOITC_Pos;
pub const SDMMC_ICR_SDIOITC: u32 = SDMMC_ICR_SDIOITC_Msk;
pub const SDMMC_ICR_ACKFAILC_Pos: u32 = 23;
pub const SDMMC_ICR_ACKFAILC_Msk: u32 = 0x1 << SDMMC_ICR_ACKFAILC_Pos;
pub const SDMMC_ICR_ACKFAILC: u32 = SDMMC_ICR_ACKFAILC_Msk;
pub const SDMMC_ICR_ACKTIMEOUTC_Pos: u32 = 24;
pub const SDMMC_ICR_ACKTIMEOUTC_Msk: u32 = 0x1 << SDMMC_ICR_ACKTIMEOUTC_Pos;
pub const SDMMC_ICR_ACKTIMEOUTC: u32 = SDMMC_ICR_ACKTIMEOUTC_Msk;
pub const SDMMC_ICR_VSWENDC_Pos: u32 = 25;
pub const SDMMC_ICR_VSWENDC_Msk: u32 = 0x1 << SDMMC_ICR_VSWENDC_Pos;
pub const SDMMC_ICR_VSWENDC: u32 = SDMMC_ICR_VSWENDC_Msk;
pub const SDMMC_ICR_CKSTOPC_Pos: u32 = 26;
pub const SDMMC_ICR_CKSTOPC_Msk: u32 = 0x1 << SDMMC_ICR_CKSTOPC_Pos;
pub const SDMMC_ICR_CKSTOPC: u32 = SDMMC_ICR_CKSTOPC_Msk;
pub const SDMMC_ICR_IDMATEC_Pos: u32 = 27;
pub const SDMMC_ICR_IDMATEC_Msk: u32 = 0x1 << SDMMC_ICR_IDMATEC_Pos;
pub const SDMMC_ICR_IDMATEC: u32 = SDMMC_ICR_IDMATEC_Msk;
pub const SDMMC_ICR_IDMABTCC_Pos: u32 = 28;
pub const SDMMC_ICR_IDMABTCC_Msk: u32 = 0x1 << SDMMC_ICR_IDMABTCC_Pos;
pub const SDMMC_ICR_IDMABTCC: u32 = SDMMC_ICR_IDMABTCC_Msk;
pub const SDMMC_MASK_CCRCFAILIE_Pos: u32 = 0;
pub const SDMMC_MASK_CCRCFAILIE_Msk: u32 = 0x1 << SDMMC_MASK_CCRCFAILIE_Pos;
pub const SDMMC_MASK_CCRCFAILIE: u32 = SDMMC_MASK_CCRCFAILIE_Msk;
pub const SDMMC_MASK_DCRCFAILIE_Pos: u32 = 1;
pub const SDMMC_MASK_DCRCFAILIE_Msk: u32 = 0x1 << SDMMC_MASK_DCRCFAILIE_Pos;
pub const SDMMC_MASK_DCRCFAILIE: u32 = SDMMC_MASK_DCRCFAILIE_Msk;
pub const SDMMC_MASK_CTIMEOUTIE_Pos: u32 = 2;
pub const SDMMC_MASK_CTIMEOUTIE_Msk: u32 = 0x1 << SDMMC_MASK_CTIMEOUTIE_Pos;
pub const SDMMC_MASK_CTIMEOUTIE: u32 = SDMMC_MASK_CTIMEOUTIE_Msk;
pub const SDMMC_MASK_DTIMEOUTIE_Pos: u32 = 3;
pub const SDMMC_MASK_DTIMEOUTIE_Msk: u32 = 0x1 << SDMMC_MASK_DTIMEOUTIE_Pos;
pub const SDMMC_MASK_DTIMEOUTIE: u32 = SDMMC_MASK_DTIMEOUTIE_Msk;
pub const SDMMC_MASK_TXUNDERRIE_Pos: u32 = 4;
pub const SDMMC_MASK_TXUNDERRIE_Msk: u32 = 0x1 << SDMMC_MASK_TXUNDERRIE_Pos;
pub const SDMMC_MASK_TXUNDERRIE: u32 = SDMMC_MASK_TXUNDERRIE_Msk;
pub const SDMMC_MASK_RXOVERRIE_Pos: u32 = 5;
pub const SDMMC_MASK_RXOVERRIE_Msk: u32 = 0x1 << SDMMC_MASK_RXOVERRIE_Pos;
pub const SDMMC_MASK_RXOVERRIE: u32 = SDMMC_MASK_RXOVERRIE_Msk;
pub const SDMMC_MASK_CMDRENDIE_Pos: u32 = 6;
pub const SDMMC_MASK_CMDRENDIE_Msk: u32 = 0x1 << SDMMC_MASK_CMDRENDIE_Pos;
pub const SDMMC_MASK_CMDRENDIE: u32 = SDMMC_MASK_CMDRENDIE_Msk;
pub const SDMMC_MASK_CMDSENTIE_Pos: u32 = 7;
pub const SDMMC_MASK_CMDSENTIE_Msk: u32 = 0x1 << SDMMC_MASK_CMDSENTIE_Pos;
pub const SDMMC_MASK_CMDSENTIE: u32 = SDMMC_MASK_CMDSENTIE_Msk;
pub const SDMMC_MASK_DATAENDIE_Pos: u32 = 8;
pub const SDMMC_MASK_DATAENDIE_Msk: u32 = 0x1 << SDMMC_MASK_DATAENDIE_Pos;
pub const SDMMC_MASK_DATAENDIE: u32 = SDMMC_MASK_DATAENDIE_Msk;
pub const SDMMC_MASK_DHOLDIE_Pos: u32 = 9;
pub const SDMMC_MASK_DHOLDIE_Msk: u32 = 0x1 << SDMMC_MASK_DHOLDIE_Pos;
pub const SDMMC_MASK_DHOLDIE: u32 = SDMMC_MASK_DHOLDIE_Msk;
pub const SDMMC_MASK_DBCKENDIE_Pos: u32 = 10;
pub const SDMMC_MASK_DBCKENDIE_Msk: u32 = 0x1 << SDMMC_MASK_DBCKENDIE_Pos;
pub const SDMMC_MASK_DBCKENDIE: u32 = SDMMC_MASK_DBCKENDIE_Msk;
pub const SDMMC_MASK_DABORTIE_Pos: u32 = 11;
pub const SDMMC_MASK_DABORTIE_Msk: u32 = 0x1 << SDMMC_MASK_DABORTIE_Pos;
pub const SDMMC_MASK_DABORTIE: u32 = SDMMC_MASK_DABORTIE_Msk;
pub const SDMMC_MASK_TXFIFOHEIE_Pos: u32 = 14;
pub const SDMMC_MASK_TXFIFOHEIE_Msk: u32 = 0x1 << SDMMC_MASK_TXFIFOHEIE_Pos;
pub const SDMMC_MASK_TXFIFOHEIE: u32 = SDMMC_MASK_TXFIFOHEIE_Msk;
pub const SDMMC_MASK_RXFIFOHFIE_Pos: u32 = 15;
pub const SDMMC_MASK_RXFIFOHFIE_Msk: u32 = 0x1 << SDMMC_MASK_RXFIFOHFIE_Pos;
pub const SDMMC_MASK_RXFIFOHFIE: u32 = SDMMC_MASK_RXFIFOHFIE_Msk;
pub const SDMMC_MASK_RXFIFOFIE_Pos: u32 = 17;
pub const SDMMC_MASK_RXFIFOFIE_Msk: u32 = 0x1 << SDMMC_MASK_RXFIFOFIE_Pos;
pub const SDMMC_MASK_RXFIFOFIE: u32 = SDMMC_MASK_RXFIFOFIE_Msk;
pub const SDMMC_MASK_TXFIFOEIE_Pos: u32 = 18;
pub const SDMMC_MASK_TXFIFOEIE_Msk: u32 = 0x1 << SDMMC_MASK_TXFIFOEIE_Pos;
pub const SDMMC_MASK_TXFIFOEIE: u32 = SDMMC_MASK_TXFIFOEIE_Msk;
pub const SDMMC_MASK_BUSYD0ENDIE_Pos: u32 = 21;
pub const SDMMC_MASK_BUSYD0ENDIE_Msk: u32 = 0x1 << SDMMC_MASK_BUSYD0ENDIE_Pos;
pub const SDMMC_MASK_BUSYD0ENDIE: u32 = SDMMC_MASK_BUSYD0ENDIE_Msk;
pub const SDMMC_MASK_SDIOITIE_Pos: u32 = 22;
pub const SDMMC_MASK_SDIOITIE_Msk: u32 = 0x1 << SDMMC_MASK_SDIOITIE_Pos;
pub const SDMMC_MASK_SDIOITIE: u32 = SDMMC_MASK_SDIOITIE_Msk;
pub const SDMMC_MASK_ACKFAILIE_Pos: u32 = 23;
pub const SDMMC_MASK_ACKFAILIE_Msk: u32 = 0x1 << SDMMC_MASK_ACKFAILIE_Pos;
pub const SDMMC_MASK_ACKFAILIE: u32 = SDMMC_MASK_ACKFAILIE_Msk;
pub const SDMMC_MASK_ACKTIMEOUTIE_Pos: u32 = 24;
pub const SDMMC_MASK_ACKTIMEOUTIE_Msk: u32 = 0x1 << SDMMC_MASK_ACKTIMEOUTIE_Pos;
pub const SDMMC_MASK_ACKTIMEOUTIE: u32 = SDMMC_MASK_ACKTIMEOUTIE_Msk;
pub const SDMMC_MASK_VSWENDIE_Pos: u32 = 25;
pub const SDMMC_MASK_VSWENDIE_Msk: u32 = 0x1 << SDMMC_MASK_VSWENDIE_Pos;
pub const SDMMC_MASK_VSWENDIE: u32 = SDMMC_MASK_VSWENDIE_Msk;
pub const SDMMC_MASK_CKSTOPIE_Pos: u32 = 26;
pub const SDMMC_MASK_CKSTOPIE_Msk: u32 = 0x1 << SDMMC_MASK_CKSTOPIE_Pos;
pub const SDMMC_MASK_CKSTOPIE: u32 = SDMMC_MASK_CKSTOPIE_Msk;
pub const SDMMC_MASK_IDMABTCIE_Pos: u32 = 28;
pub const SDMMC_MASK_IDMABTCIE_Msk: u32 = 0x1 << SDMMC_MASK_IDMABTCIE_Pos;
pub const SDMMC_MASK_IDMABTCIE: u32 = SDMMC_MASK_IDMABTCIE_Msk;
pub const SDMMC_ACKTIME_ACKTIME_Pos: u32 = 0;
pub const SDMMC_ACKTIME_ACKTIME_Msk: u32 = 0x07FFFFFF << SDMMC_ACKTIME_ACKTIME_Pos;
pub const SDMMC_ACKTIME_ACKTIME: u32 = SDMMC_ACKTIME_ACKTIME_Msk;
pub const SDMMC_FIFO_FIFODATA_Pos: u32 = 0;
pub const SDMMC_FIFO_FIFODATA_Msk: u32 = 0xFFFFFFFF << SDMMC_FIFO_FIFODATA_Pos;
pub const SDMMC_FIFO_FIFODATA: u32 = SDMMC_FIFO_FIFODATA_Msk;
pub const SDMMC_IDMA_IDMAEN_Pos: u32 = 0;
pub const SDMMC_IDMA_IDMAEN_Msk: u32 = 0x1 << SDMMC_IDMA_IDMAEN_Pos;
pub const SDMMC_IDMA_IDMAEN: u32 = SDMMC_IDMA_IDMAEN_Msk;
pub const SDMMC_IDMA_IDMABMODE_Pos: u32 = 1;
pub const SDMMC_IDMA_IDMABMODE_Msk: u32 = 0x1 << SDMMC_IDMA_IDMABMODE_Pos;
pub const SDMMC_IDMA_IDMABMODE: u32 = SDMMC_IDMA_IDMABMODE_Msk;
pub const SDMMC_IDMABSIZE_IDMABNDT_Pos: u32 = 5;
pub const SDMMC_IDMABSIZE_IDMABNDT_Msk: u32 = 0xFFF << SDMMC_IDMABSIZE_IDMABNDT_Pos;
pub const SDMMC_IDMABSIZE_IDMABNDT: u32 = SDMMC_IDMABSIZE_IDMABNDT_Msk;
pub const SDMMC_IDMABASER_IDMABASER_Pos: u32 = 0;
pub const SDMMC_IDMABASER_IDMABASER_Msk: u32 = 0xFFFFFFFF << SDMMC_IDMABASER_IDMABASER_Pos;
pub const SDMMC_IDMABASER_IDMABASER: u32 = SDMMC_IDMABASER_IDMABASER_Msk;
pub const SDMMC_IDMALAR_IDMALA_Pos: u32 = 2;
pub const SDMMC_IDMALAR_IDMALA_Msk: u32 = 0x3FFF << SDMMC_IDMALAR_IDMALA_Pos;
pub const SDMMC_IDMALAR_IDMALA: u32 = SDMMC_IDMALAR_IDMALA_Msk;
pub const SDMMC_IDMALAR_ABR_Pos: u32 = 29;
pub const SDMMC_IDMALAR_ABR_Msk: u32 = 0x1 << SDMMC_IDMALAR_ABR_Pos;
pub const SDMMC_IDMALAR_ABR: u32 = SDMMC_IDMALAR_ABR_Msk;
pub const SDMMC_IDMALAR_ULS_Pos: u32 = 30;
pub const SDMMC_IDMALAR_ULS_Msk: u32 = 0x1 << SDMMC_IDMALAR_ULS_Pos;
pub const SDMMC_IDMALAR_ULS: u32 = SDMMC_IDMALAR_ULS_Msk;
pub const SDMMC_IDMALAR_ULA_Pos: u32 = 31;
pub const SDMMC_IDMALAR_ULA_Msk: u32 = 0x1 << SDMMC_IDMALAR_ULA_Pos;
pub const SDMMC_IDMALAR_ULA: u32 = SDMMC_IDMALAR_ULA_Msk;
pub const SDMMC_IDMABAR_IDMABAR_Pos: u32 = 2;
pub const SDMMC_IDMABAR_IDMABAR_Msk: u32 = 0x3FFFFFFF << SDMMC_IDMABAR_IDMABAR_Pos;
pub const SDMMC_IDMABAR_IDMABAR: u32 = SDMMC_IDMABAR_IDMABAR_Msk;
pub const SPDIFRX_CR_SPDIFRXEN_Pos: u32 = 0;
pub const SPDIFRX_CR_SPDIFRXEN_Msk: u32 = 0x3 << SPDIFRX_CR_SPDIFRXEN_Pos;
pub const SPDIFRX_CR_SPDIFRXEN: u32 = SPDIFRX_CR_SPDIFRXEN_Msk;
pub const SPDIFRX_CR_SPDIFRXEN_0: u32 = 0x1 << SPDIFRX_CR_SPDIFRXEN_Pos;
pub const SPDIFRX_CR_SPDIFRXEN_1: u32 = 0x2 << SPDIFRX_CR_SPDIFRXEN_Pos;
pub const SPDIFRX_CR_RXDMAEN_Pos: u32 = 2;
pub const SPDIFRX_CR_RXDMAEN_Msk: u32 = 0x1 << SPDIFRX_CR_RXDMAEN_Pos;
pub const SPDIFRX_CR_RXDMAEN: u32 = SPDIFRX_CR_RXDMAEN_Msk;
pub const SPDIFRX_CR_RXSTEO_Pos: u32 = 3;
pub const SPDIFRX_CR_RXSTEO_Msk: u32 = 0x1 << SPDIFRX_CR_RXSTEO_Pos;
pub const SPDIFRX_CR_RXSTEO: u32 = SPDIFRX_CR_RXSTEO_Msk;
pub const SPDIFRX_CR_DRFMT_Pos: u32 = 4;
pub const SPDIFRX_CR_DRFMT_Msk: u32 = 0x3 << SPDIFRX_CR_DRFMT_Pos;
pub const SPDIFRX_CR_DRFMT: u32 = SPDIFRX_CR_DRFMT_Msk;
pub const SPDIFRX_CR_DRFMT_0: u32 = 0x1 << SPDIFRX_CR_DRFMT_Pos;
pub const SPDIFRX_CR_DRFMT_1: u32 = 0x2 << SPDIFRX_CR_DRFMT_Pos;
pub const SPDIFRX_CR_PMSK_Pos: u32 = 6;
pub const SPDIFRX_CR_PMSK_Msk: u32 = 0x1 << SPDIFRX_CR_PMSK_Pos;
pub const SPDIFRX_CR_PMSK: u32 = SPDIFRX_CR_PMSK_Msk;
pub const SPDIFRX_CR_VMSK_Pos: u32 = 7;
pub const SPDIFRX_CR_VMSK_Msk: u32 = 0x1 << SPDIFRX_CR_VMSK_Pos;
pub const SPDIFRX_CR_VMSK: u32 = SPDIFRX_CR_VMSK_Msk;
pub const SPDIFRX_CR_CUMSK_Pos: u32 = 8;
pub const SPDIFRX_CR_CUMSK_Msk: u32 = 0x1 << SPDIFRX_CR_CUMSK_Pos;
pub const SPDIFRX_CR_CUMSK: u32 = SPDIFRX_CR_CUMSK_Msk;
pub const SPDIFRX_CR_PTMSK_Pos: u32 = 9;
pub const SPDIFRX_CR_PTMSK_Msk: u32 = 0x1 << SPDIFRX_CR_PTMSK_Pos;
pub const SPDIFRX_CR_PTMSK: u32 = SPDIFRX_CR_PTMSK_Msk;
pub const SPDIFRX_CR_CBDMAEN_Pos: u32 = 10;
pub const SPDIFRX_CR_CBDMAEN_Msk: u32 = 0x1 << SPDIFRX_CR_CBDMAEN_Pos;
pub const SPDIFRX_CR_CBDMAEN: u32 = SPDIFRX_CR_CBDMAEN_Msk;
pub const SPDIFRX_CR_CHSEL_Pos: u32 = 11;
pub const SPDIFRX_CR_CHSEL_Msk: u32 = 0x1 << SPDIFRX_CR_CHSEL_Pos;
pub const SPDIFRX_CR_CHSEL: u32 = SPDIFRX_CR_CHSEL_Msk;
pub const SPDIFRX_CR_NBTR_Pos: u32 = 12;
pub const SPDIFRX_CR_NBTR_Msk: u32 = 0x3 << SPDIFRX_CR_NBTR_Pos;
pub const SPDIFRX_CR_NBTR: u32 = SPDIFRX_CR_NBTR_Msk;
pub const SPDIFRX_CR_NBTR_0: u32 = 0x1 << SPDIFRX_CR_NBTR_Pos;
pub const SPDIFRX_CR_NBTR_1: u32 = 0x2 << SPDIFRX_CR_NBTR_Pos;
pub const SPDIFRX_CR_WFA_Pos: u32 = 14;
pub const SPDIFRX_CR_WFA_Msk: u32 = 0x1 << SPDIFRX_CR_WFA_Pos;
pub const SPDIFRX_CR_WFA: u32 = SPDIFRX_CR_WFA_Msk;
pub const SPDIFRX_CR_INSEL_Pos: u32 = 16;
pub const SPDIFRX_CR_INSEL_Msk: u32 = 0x7 << SPDIFRX_CR_INSEL_Pos;
pub const SPDIFRX_CR_INSEL: u32 = SPDIFRX_CR_INSEL_Msk;
pub const SPDIFRX_CR_INSEL_0: u32 = 0x1 << SPDIFRX_CR_INSEL_Pos;
pub const SPDIFRX_CR_INSEL_1: u32 = 0x2 << SPDIFRX_CR_INSEL_Pos;
pub const SPDIFRX_CR_INSEL_2: u32 = 0x4 << SPDIFRX_CR_INSEL_Pos;
pub const SPDIFRX_CR_CKSEN_Pos: u32 = 20;
pub const SPDIFRX_CR_CKSEN_Msk: u32 = 0x1 << SPDIFRX_CR_CKSEN_Pos;
pub const SPDIFRX_CR_CKSEN: u32 = SPDIFRX_CR_CKSEN_Msk;
pub const SPDIFRX_CR_CKSBKPEN_Pos: u32 = 21;
pub const SPDIFRX_CR_CKSBKPEN_Msk: u32 = 0x1 << SPDIFRX_CR_CKSBKPEN_Pos;
pub const SPDIFRX_CR_CKSBKPEN: u32 = SPDIFRX_CR_CKSBKPEN_Msk;
pub const SPDIFRX_IMR_RXNEIE_Pos: u32 = 0;
pub const SPDIFRX_IMR_RXNEIE_Msk: u32 = 0x1 << SPDIFRX_IMR_RXNEIE_Pos;
pub const SPDIFRX_IMR_RXNEIE: u32 = SPDIFRX_IMR_RXNEIE_Msk;
pub const SPDIFRX_IMR_CSRNEIE_Pos: u32 = 1;
pub const SPDIFRX_IMR_CSRNEIE_Msk: u32 = 0x1 << SPDIFRX_IMR_CSRNEIE_Pos;
pub const SPDIFRX_IMR_CSRNEIE: u32 = SPDIFRX_IMR_CSRNEIE_Msk;
pub const SPDIFRX_IMR_PERRIE_Pos: u32 = 2;
pub const SPDIFRX_IMR_PERRIE_Msk: u32 = 0x1 << SPDIFRX_IMR_PERRIE_Pos;
pub const SPDIFRX_IMR_PERRIE: u32 = SPDIFRX_IMR_PERRIE_Msk;
pub const SPDIFRX_IMR_OVRIE_Pos: u32 = 3;
pub const SPDIFRX_IMR_OVRIE_Msk: u32 = 0x1 << SPDIFRX_IMR_OVRIE_Pos;
pub const SPDIFRX_IMR_OVRIE: u32 = SPDIFRX_IMR_OVRIE_Msk;
pub const SPDIFRX_IMR_SBLKIE_Pos: u32 = 4;
pub const SPDIFRX_IMR_SBLKIE_Msk: u32 = 0x1 << SPDIFRX_IMR_SBLKIE_Pos;
pub const SPDIFRX_IMR_SBLKIE: u32 = SPDIFRX_IMR_SBLKIE_Msk;
pub const SPDIFRX_IMR_SYNCDIE_Pos: u32 = 5;
pub const SPDIFRX_IMR_SYNCDIE_Msk: u32 = 0x1 << SPDIFRX_IMR_SYNCDIE_Pos;
pub const SPDIFRX_IMR_SYNCDIE: u32 = SPDIFRX_IMR_SYNCDIE_Msk;
pub const SPDIFRX_IMR_IFEIE_Pos: u32 = 6;
pub const SPDIFRX_IMR_IFEIE_Msk: u32 = 0x1 << SPDIFRX_IMR_IFEIE_Pos;
pub const SPDIFRX_IMR_IFEIE: u32 = SPDIFRX_IMR_IFEIE_Msk;
pub const SPDIFRX_SR_RXNE_Pos: u32 = 0;
pub const SPDIFRX_SR_RXNE_Msk: u32 = 0x1 << SPDIFRX_SR_RXNE_Pos;
pub const SPDIFRX_SR_RXNE: u32 = SPDIFRX_SR_RXNE_Msk;
pub const SPDIFRX_SR_CSRNE_Pos: u32 = 1;
pub const SPDIFRX_SR_CSRNE_Msk: u32 = 0x1 << SPDIFRX_SR_CSRNE_Pos;
pub const SPDIFRX_SR_CSRNE: u32 = SPDIFRX_SR_CSRNE_Msk;
pub const SPDIFRX_SR_PERR_Pos: u32 = 2;
pub const SPDIFRX_SR_PERR_Msk: u32 = 0x1 << SPDIFRX_SR_PERR_Pos;
pub const SPDIFRX_SR_PERR: u32 = SPDIFRX_SR_PERR_Msk;
pub const SPDIFRX_SR_OVR_Pos: u32 = 3;
pub const SPDIFRX_SR_OVR_Msk: u32 = 0x1 << SPDIFRX_SR_OVR_Pos;
pub const SPDIFRX_SR_OVR: u32 = SPDIFRX_SR_OVR_Msk;
pub const SPDIFRX_SR_SBD_Pos: u32 = 4;
pub const SPDIFRX_SR_SBD_Msk: u32 = 0x1 << SPDIFRX_SR_SBD_Pos;
pub const SPDIFRX_SR_SBD: u32 = SPDIFRX_SR_SBD_Msk;
pub const SPDIFRX_SR_SYNCD_Pos: u32 = 5;
pub const SPDIFRX_SR_SYNCD_Msk: u32 = 0x1 << SPDIFRX_SR_SYNCD_Pos;
pub const SPDIFRX_SR_SYNCD: u32 = SPDIFRX_SR_SYNCD_Msk;
pub const SPDIFRX_SR_FERR_Pos: u32 = 6;
pub const SPDIFRX_SR_FERR_Msk: u32 = 0x1 << SPDIFRX_SR_FERR_Pos;
pub const SPDIFRX_SR_FERR: u32 = SPDIFRX_SR_FERR_Msk;
pub const SPDIFRX_SR_SERR_Pos: u32 = 7;
pub const SPDIFRX_SR_SERR_Msk: u32 = 0x1 << SPDIFRX_SR_SERR_Pos;
pub const SPDIFRX_SR_SERR: u32 = SPDIFRX_SR_SERR_Msk;
pub const SPDIFRX_SR_TERR_Pos: u32 = 8;
pub const SPDIFRX_SR_TERR_Msk: u32 = 0x1 << SPDIFRX_SR_TERR_Pos;
pub const SPDIFRX_SR_TERR: u32 = SPDIFRX_SR_TERR_Msk;
pub const SPDIFRX_SR_WIDTH5_Pos: u32 = 16;
pub const SPDIFRX_SR_WIDTH5_Msk: u32 = 0x7FFF << SPDIFRX_SR_WIDTH5_Pos;
pub const SPDIFRX_SR_WIDTH5: u32 = SPDIFRX_SR_WIDTH5_Msk;
pub const SPDIFRX_IFCR_PERRCF_Pos: u32 = 2;
pub const SPDIFRX_IFCR_PERRCF_Msk: u32 = 0x1 << SPDIFRX_IFCR_PERRCF_Pos;
pub const SPDIFRX_IFCR_PERRCF: u32 = SPDIFRX_IFCR_PERRCF_Msk;
pub const SPDIFRX_IFCR_OVRCF_Pos: u32 = 3;
pub const SPDIFRX_IFCR_OVRCF_Msk: u32 = 0x1 << SPDIFRX_IFCR_OVRCF_Pos;
pub const SPDIFRX_IFCR_OVRCF: u32 = SPDIFRX_IFCR_OVRCF_Msk;
pub const SPDIFRX_IFCR_SBDCF_Pos: u32 = 4;
pub const SPDIFRX_IFCR_SBDCF_Msk: u32 = 0x1 << SPDIFRX_IFCR_SBDCF_Pos;
pub const SPDIFRX_IFCR_SBDCF: u32 = SPDIFRX_IFCR_SBDCF_Msk;
pub const SPDIFRX_IFCR_SYNCDCF_Pos: u32 = 5;
pub const SPDIFRX_IFCR_SYNCDCF_Msk: u32 = 0x1 << SPDIFRX_IFCR_SYNCDCF_Pos;
pub const SPDIFRX_IFCR_SYNCDCF: u32 = SPDIFRX_IFCR_SYNCDCF_Msk;
pub const SPDIFRX_DR0_DR_Pos: u32 = 0;
pub const SPDIFRX_DR0_DR_Msk: u32 = 0xFFFFFF << SPDIFRX_DR0_DR_Pos;
pub const SPDIFRX_DR0_DR: u32 = SPDIFRX_DR0_DR_Msk;
pub const SPDIFRX_DR0_PE_Pos: u32 = 24;
pub const SPDIFRX_DR0_PE_Msk: u32 = 0x1 << SPDIFRX_DR0_PE_Pos;
pub const SPDIFRX_DR0_PE: u32 = SPDIFRX_DR0_PE_Msk;
pub const SPDIFRX_DR0_V_Pos: u32 = 25;
pub const SPDIFRX_DR0_V_Msk: u32 = 0x1 << SPDIFRX_DR0_V_Pos;
pub const SPDIFRX_DR0_V: u32 = SPDIFRX_DR0_V_Msk;
pub const SPDIFRX_DR0_U_Pos: u32 = 26;
pub const SPDIFRX_DR0_U_Msk: u32 = 0x1 << SPDIFRX_DR0_U_Pos;
pub const SPDIFRX_DR0_U: u32 = SPDIFRX_DR0_U_Msk;
pub const SPDIFRX_DR0_C_Pos: u32 = 27;
pub const SPDIFRX_DR0_C_Msk: u32 = 0x1 << SPDIFRX_DR0_C_Pos;
pub const SPDIFRX_DR0_C: u32 = SPDIFRX_DR0_C_Msk;
pub const SPDIFRX_DR0_PT_Pos: u32 = 28;
pub const SPDIFRX_DR0_PT_Msk: u32 = 0x3 << SPDIFRX_DR0_PT_Pos;
pub const SPDIFRX_DR0_PT: u32 = SPDIFRX_DR0_PT_Msk;
pub const SPDIFRX_DR1_DR_Pos: u32 = 8;
pub const SPDIFRX_DR1_DR_Msk: u32 = 0xFFFFFF << SPDIFRX_DR1_DR_Pos;
pub const SPDIFRX_DR1_DR: u32 = SPDIFRX_DR1_DR_Msk;
pub const SPDIFRX_DR1_PT_Pos: u32 = 4;
pub const SPDIFRX_DR1_PT_Msk: u32 = 0x3 << SPDIFRX_DR1_PT_Pos;
pub const SPDIFRX_DR1_PT: u32 = SPDIFRX_DR1_PT_Msk;
pub const SPDIFRX_DR1_C_Pos: u32 = 3;
pub const SPDIFRX_DR1_C_Msk: u32 = 0x1 << SPDIFRX_DR1_C_Pos;
pub const SPDIFRX_DR1_C: u32 = SPDIFRX_DR1_C_Msk;
pub const SPDIFRX_DR1_U_Pos: u32 = 2;
pub const SPDIFRX_DR1_U_Msk: u32 = 0x1 << SPDIFRX_DR1_U_Pos;
pub const SPDIFRX_DR1_U: u32 = SPDIFRX_DR1_U_Msk;
pub const SPDIFRX_DR1_V_Pos: u32 = 1;
pub const SPDIFRX_DR1_V_Msk: u32 = 0x1 << SPDIFRX_DR1_V_Pos;
pub const SPDIFRX_DR1_V: u32 = SPDIFRX_DR1_V_Msk;
pub const SPDIFRX_DR1_PE_Pos: u32 = 0;
pub const SPDIFRX_DR1_PE_Msk: u32 = 0x1 << SPDIFRX_DR1_PE_Pos;
pub const SPDIFRX_DR1_PE: u32 = SPDIFRX_DR1_PE_Msk;
pub const SPDIFRX_DR1_DRNL1_Pos: u32 = 16;
pub const SPDIFRX_DR1_DRNL1_Msk: u32 = 0xFFFF << SPDIFRX_DR1_DRNL1_Pos;
pub const SPDIFRX_DR1_DRNL1: u32 = SPDIFRX_DR1_DRNL1_Msk;
pub const SPDIFRX_DR1_DRNL2_Pos: u32 = 0;
pub const SPDIFRX_DR1_DRNL2_Msk: u32 = 0xFFFF << SPDIFRX_DR1_DRNL2_Pos;
pub const SPDIFRX_DR1_DRNL2: u32 = SPDIFRX_DR1_DRNL2_Msk;
pub const SPDIFRX_CSR_USR_Pos: u32 = 0;
pub const SPDIFRX_CSR_USR_Msk: u32 = 0xFFFF << SPDIFRX_CSR_USR_Pos;
pub const SPDIFRX_CSR_USR: u32 = SPDIFRX_CSR_USR_Msk;
pub const SPDIFRX_CSR_CS_Pos: u32 = 16;
pub const SPDIFRX_CSR_CS_Msk: u32 = 0xFF << SPDIFRX_CSR_CS_Pos;
pub const SPDIFRX_CSR_CS: u32 = SPDIFRX_CSR_CS_Msk;
pub const SPDIFRX_CSR_SOB_Pos: u32 = 24;
pub const SPDIFRX_CSR_SOB_Msk: u32 = 0x1 << SPDIFRX_CSR_SOB_Pos;
pub const SPDIFRX_CSR_SOB: u32 = SPDIFRX_CSR_SOB_Msk;
pub const SPDIFRX_DIR_THI_Pos: u32 = 0;
pub const SPDIFRX_DIR_THI_Msk: u32 = 0x1FFF << SPDIFRX_DIR_THI_Pos;
pub const SPDIFRX_DIR_THI: u32 = SPDIFRX_DIR_THI_Msk;
pub const SPDIFRX_DIR_TLO_Pos: u32 = 16;
pub const SPDIFRX_DIR_TLO_Msk: u32 = 0x1FFF << SPDIFRX_DIR_TLO_Pos;
pub const SPDIFRX_DIR_TLO: u32 = SPDIFRX_DIR_TLO_Msk;
pub const SPI_CR1_SPE_Pos: u32 = 0;
pub const SPI_CR1_SPE_Msk: u32 = 0x1 << SPI_CR1_SPE_Pos;
pub const SPI_CR1_SPE: u32 = SPI_CR1_SPE_Msk;
pub const SPI_CR1_MASRX_Pos: u32 = 8;
pub const SPI_CR1_MASRX_Msk: u32 = 0x1 << SPI_CR1_MASRX_Pos;
pub const SPI_CR1_MASRX: u32 = SPI_CR1_MASRX_Msk;
pub const SPI_CR1_CSTART_Pos: u32 = 9;
pub const SPI_CR1_CSTART_Msk: u32 = 0x1 << SPI_CR1_CSTART_Pos;
pub const SPI_CR1_CSTART: u32 = SPI_CR1_CSTART_Msk;
pub const SPI_CR1_CSUSP_Pos: u32 = 10;
pub const SPI_CR1_CSUSP_Msk: u32 = 0x1 << SPI_CR1_CSUSP_Pos;
pub const SPI_CR1_CSUSP: u32 = SPI_CR1_CSUSP_Msk;
pub const SPI_CR1_HDDIR_Pos: u32 = 11;
pub const SPI_CR1_HDDIR_Msk: u32 = 0x1 << SPI_CR1_HDDIR_Pos;
pub const SPI_CR1_HDDIR: u32 = SPI_CR1_HDDIR_Msk;
pub const SPI_CR1_SSI_Pos: u32 = 12;
pub const SPI_CR1_SSI_Msk: u32 = 0x1 << SPI_CR1_SSI_Pos;
pub const SPI_CR1_SSI: u32 = SPI_CR1_SSI_Msk;
pub const SPI_CR1_CRC33_17_Pos: u32 = 13;
pub const SPI_CR1_CRC33_17_Msk: u32 = 0x1 << SPI_CR1_CRC33_17_Pos;
pub const SPI_CR1_CRC33_17: u32 = SPI_CR1_CRC33_17_Msk;
pub const SPI_CR1_RCRCINI_Pos: u32 = 14;
pub const SPI_CR1_RCRCINI_Msk: u32 = 0x1 << SPI_CR1_RCRCINI_Pos;
pub const SPI_CR1_RCRCINI: u32 = SPI_CR1_RCRCINI_Msk;
pub const SPI_CR1_TCRCINI_Pos: u32 = 15;
pub const SPI_CR1_TCRCINI_Msk: u32 = 0x1 << SPI_CR1_TCRCINI_Pos;
pub const SPI_CR1_TCRCINI: u32 = SPI_CR1_TCRCINI_Msk;
pub const SPI_CR1_IOLOCK_Pos: u32 = 16;
pub const SPI_CR1_IOLOCK_Msk: u32 = 0x1 << SPI_CR1_IOLOCK_Pos;
pub const SPI_CR1_IOLOCK: u32 = SPI_CR1_IOLOCK_Msk;
pub const SPI_CR2_TSIZE_Pos: u32 = 0;
pub const SPI_CR2_TSIZE_Msk: u32 = 0xFFFF << SPI_CR2_TSIZE_Pos;
pub const SPI_CR2_TSIZE: u32 = SPI_CR2_TSIZE_Msk;
pub const SPI_CFG1_DSIZE_Pos: u32 = 0;
pub const SPI_CFG1_DSIZE_Msk: u32 = 0x1F << SPI_CFG1_DSIZE_Pos;
pub const SPI_CFG1_DSIZE: u32 = SPI_CFG1_DSIZE_Msk;
pub const SPI_CFG1_DSIZE_0: u32 = 0x01 << SPI_CFG1_DSIZE_Pos;
pub const SPI_CFG1_DSIZE_1: u32 = 0x02 << SPI_CFG1_DSIZE_Pos;
pub const SPI_CFG1_DSIZE_2: u32 = 0x04 << SPI_CFG1_DSIZE_Pos;
pub const SPI_CFG1_DSIZE_3: u32 = 0x08 << SPI_CFG1_DSIZE_Pos;
pub const SPI_CFG1_DSIZE_4: u32 = 0x10 << SPI_CFG1_DSIZE_Pos;
pub const SPI_CFG1_FTHLV_Pos: u32 = 5;
pub const SPI_CFG1_FTHLV_Msk: u32 = 0xF << SPI_CFG1_FTHLV_Pos;
pub const SPI_CFG1_FTHLV: u32 = SPI_CFG1_FTHLV_Msk;
pub const SPI_CFG1_FTHLV_0: u32 = 0x1 << SPI_CFG1_FTHLV_Pos;
pub const SPI_CFG1_FTHLV_1: u32 = 0x2 << SPI_CFG1_FTHLV_Pos;
pub const SPI_CFG1_FTHLV_2: u32 = 0x4 << SPI_CFG1_FTHLV_Pos;
pub const SPI_CFG1_FTHLV_3: u32 = 0x8 << SPI_CFG1_FTHLV_Pos;
pub const SPI_CFG1_UDRCFG_Pos: u32 = 9;
pub const SPI_CFG1_UDRCFG_Msk: u32 = 0x1 << SPI_CFG1_UDRCFG_Pos;
pub const SPI_CFG1_UDRCFG: u32 = SPI_CFG1_UDRCFG_Msk;
pub const SPI_CFG1_RXDMAEN_Pos: u32 = 14;
pub const SPI_CFG1_RXDMAEN_Msk: u32 = 0x1 << SPI_CFG1_RXDMAEN_Pos;
pub const SPI_CFG1_RXDMAEN: u32 = SPI_CFG1_RXDMAEN_Msk;
pub const SPI_CFG1_TXDMAEN_Pos: u32 = 15;
pub const SPI_CFG1_TXDMAEN_Msk: u32 = 0x1 << SPI_CFG1_TXDMAEN_Pos;
pub const SPI_CFG1_TXDMAEN: u32 = SPI_CFG1_TXDMAEN_Msk;
pub const SPI_CFG1_CRCSIZE_Pos: u32 = 16;
pub const SPI_CFG1_CRCSIZE_Msk: u32 = 0x1F << SPI_CFG1_CRCSIZE_Pos;
pub const SPI_CFG1_CRCSIZE: u32 = SPI_CFG1_CRCSIZE_Msk;
pub const SPI_CFG1_CRCSIZE_0: u32 = 0x01 << SPI_CFG1_CRCSIZE_Pos;
pub const SPI_CFG1_CRCSIZE_1: u32 = 0x02 << SPI_CFG1_CRCSIZE_Pos;
pub const SPI_CFG1_CRCSIZE_2: u32 = 0x04 << SPI_CFG1_CRCSIZE_Pos;
pub const SPI_CFG1_CRCSIZE_3: u32 = 0x08 << SPI_CFG1_CRCSIZE_Pos;
pub const SPI_CFG1_CRCSIZE_4: u32 = 0x10 << SPI_CFG1_CRCSIZE_Pos;
pub const SPI_CFG1_CRCEN_Pos: u32 = 22;
pub const SPI_CFG1_CRCEN_Msk: u32 = 0x1 << SPI_CFG1_CRCEN_Pos;
pub const SPI_CFG1_CRCEN: u32 = SPI_CFG1_CRCEN_Msk;
pub const SPI_CFG1_MBR_Pos: u32 = 28;
pub const SPI_CFG1_MBR_Msk: u32 = 0x7 << SPI_CFG1_MBR_Pos;
pub const SPI_CFG1_MBR: u32 = SPI_CFG1_MBR_Msk;
pub const SPI_CFG1_MBR_0: u32 = 0x1 << SPI_CFG1_MBR_Pos;
pub const SPI_CFG1_MBR_1: u32 = 0x2 << SPI_CFG1_MBR_Pos;
pub const SPI_CFG1_MBR_2: u32 = 0x4 << SPI_CFG1_MBR_Pos;
pub const SPI_CFG1_BPASS_Pos: u32 = 31;
pub const SPI_CFG1_BPASS_Msk: u32 = 0x1 << SPI_CFG1_BPASS_Pos;
pub const SPI_CFG1_BPASS: u32 = SPI_CFG1_BPASS_Msk;
pub const SPI_CFG2_MSSI_Pos: u32 = 0;
pub const SPI_CFG2_MSSI_Msk: u32 = 0xF << SPI_CFG2_MSSI_Pos;
pub const SPI_CFG2_MSSI: u32 = SPI_CFG2_MSSI_Msk;
pub const SPI_CFG2_MSSI_0: u32 = 0x1 << SPI_CFG2_MSSI_Pos;
pub const SPI_CFG2_MSSI_1: u32 = 0x2 << SPI_CFG2_MSSI_Pos;
pub const SPI_CFG2_MSSI_2: u32 = 0x4 << SPI_CFG2_MSSI_Pos;
pub const SPI_CFG2_MSSI_3: u32 = 0x8 << SPI_CFG2_MSSI_Pos;
pub const SPI_CFG2_MIDI_Pos: u32 = 4;
pub const SPI_CFG2_MIDI_Msk: u32 = 0xF << SPI_CFG2_MIDI_Pos;
pub const SPI_CFG2_MIDI: u32 = SPI_CFG2_MIDI_Msk;
pub const SPI_CFG2_MIDI_0: u32 = 0x1 << SPI_CFG2_MIDI_Pos;
pub const SPI_CFG2_MIDI_1: u32 = 0x2 << SPI_CFG2_MIDI_Pos;
pub const SPI_CFG2_MIDI_2: u32 = 0x4 << SPI_CFG2_MIDI_Pos;
pub const SPI_CFG2_MIDI_3: u32 = 0x8 << SPI_CFG2_MIDI_Pos;
pub const SPI_CFG2_RDIOM_Pos: u32 = 13;
pub const SPI_CFG2_RDIOM_Msk: u32 = 0x1 << SPI_CFG2_RDIOM_Pos;
pub const SPI_CFG2_RDIOM: u32 = SPI_CFG2_RDIOM_Msk;
pub const SPI_CFG2_RDIOP_Pos: u32 = 14;
pub const SPI_CFG2_RDIOP_Msk: u32 = 0x1 << SPI_CFG2_RDIOP_Pos;
pub const SPI_CFG2_RDIOP: u32 = SPI_CFG2_RDIOP_Msk;
pub const SPI_CFG2_IOSWP_Pos: u32 = 15;
pub const SPI_CFG2_IOSWP_Msk: u32 = 0x1 << SPI_CFG2_IOSWP_Pos;
pub const SPI_CFG2_IOSWP: u32 = SPI_CFG2_IOSWP_Msk;
pub const SPI_CFG2_COMM_Pos: u32 = 17;
pub const SPI_CFG2_COMM_Msk: u32 = 0x3 << SPI_CFG2_COMM_Pos;
pub const SPI_CFG2_COMM: u32 = SPI_CFG2_COMM_Msk;
pub const SPI_CFG2_COMM_0: u32 = 0x1 << SPI_CFG2_COMM_Pos;
pub const SPI_CFG2_COMM_1: u32 = 0x2 << SPI_CFG2_COMM_Pos;
pub const SPI_CFG2_SP_Pos: u32 = 19;
pub const SPI_CFG2_SP_Msk: u32 = 0x7 << SPI_CFG2_SP_Pos;
pub const SPI_CFG2_SP: u32 = SPI_CFG2_SP_Msk;
pub const SPI_CFG2_SP_0: u32 = 0x1 << SPI_CFG2_SP_Pos;
pub const SPI_CFG2_SP_1: u32 = 0x2 << SPI_CFG2_SP_Pos;
pub const SPI_CFG2_SP_2: u32 = 0x4 << SPI_CFG2_SP_Pos;
pub const SPI_CFG2_MASTER_Pos: u32 = 22;
pub const SPI_CFG2_MASTER_Msk: u32 = 0x1 << SPI_CFG2_MASTER_Pos;
pub const SPI_CFG2_MASTER: u32 = SPI_CFG2_MASTER_Msk;
pub const SPI_CFG2_LSBFRST_Pos: u32 = 23;
pub const SPI_CFG2_LSBFRST_Msk: u32 = 0x1 << SPI_CFG2_LSBFRST_Pos;
pub const SPI_CFG2_LSBFRST: u32 = SPI_CFG2_LSBFRST_Msk;
pub const SPI_CFG2_CPHA_Pos: u32 = 24;
pub const SPI_CFG2_CPHA_Msk: u32 = 0x1 << SPI_CFG2_CPHA_Pos;
pub const SPI_CFG2_CPHA: u32 = SPI_CFG2_CPHA_Msk;
pub const SPI_CFG2_CPOL_Pos: u32 = 25;
pub const SPI_CFG2_CPOL_Msk: u32 = 0x1 << SPI_CFG2_CPOL_Pos;
pub const SPI_CFG2_CPOL: u32 = SPI_CFG2_CPOL_Msk;
pub const SPI_CFG2_SSM_Pos: u32 = 26;
pub const SPI_CFG2_SSM_Msk: u32 = 0x1 << SPI_CFG2_SSM_Pos;
pub const SPI_CFG2_SSM: u32 = SPI_CFG2_SSM_Msk;
pub const SPI_CFG2_SSIOP_Pos: u32 = 28;
pub const SPI_CFG2_SSIOP_Msk: u32 = 0x1 << SPI_CFG2_SSIOP_Pos;
pub const SPI_CFG2_SSIOP: u32 = SPI_CFG2_SSIOP_Msk;
pub const SPI_CFG2_SSOE_Pos: u32 = 29;
pub const SPI_CFG2_SSOE_Msk: u32 = 0x1 << SPI_CFG2_SSOE_Pos;
pub const SPI_CFG2_SSOE: u32 = SPI_CFG2_SSOE_Msk;
pub const SPI_CFG2_SSOM_Pos: u32 = 30;
pub const SPI_CFG2_SSOM_Msk: u32 = 0x1 << SPI_CFG2_SSOM_Pos;
pub const SPI_CFG2_SSOM: u32 = SPI_CFG2_SSOM_Msk;
pub const SPI_CFG2_AFCNTR_Pos: u32 = 31;
pub const SPI_CFG2_AFCNTR_Msk: u32 = 0x1 << SPI_CFG2_AFCNTR_Pos;
pub const SPI_CFG2_AFCNTR: u32 = SPI_CFG2_AFCNTR_Msk;
pub const SPI_IER_RXPIE_Pos: u32 = 0;
pub const SPI_IER_RXPIE_Msk: u32 = 0x1 << SPI_IER_RXPIE_Pos;
pub const SPI_IER_RXPIE: u32 = SPI_IER_RXPIE_Msk;
pub const SPI_IER_TXPIE_Pos: u32 = 1;
pub const SPI_IER_TXPIE_Msk: u32 = 0x1 << SPI_IER_TXPIE_Pos;
pub const SPI_IER_TXPIE: u32 = SPI_IER_TXPIE_Msk;
pub const SPI_IER_DXPIE_Pos: u32 = 2;
pub const SPI_IER_DXPIE_Msk: u32 = 0x1 << SPI_IER_DXPIE_Pos;
pub const SPI_IER_DXPIE: u32 = SPI_IER_DXPIE_Msk;
pub const SPI_IER_EOTIE_Pos: u32 = 3;
pub const SPI_IER_EOTIE_Msk: u32 = 0x1 << SPI_IER_EOTIE_Pos;
pub const SPI_IER_EOTIE: u32 = SPI_IER_EOTIE_Msk;
pub const SPI_IER_TXTFIE_Pos: u32 = 4;
pub const SPI_IER_TXTFIE_Msk: u32 = 0x1 << SPI_IER_TXTFIE_Pos;
pub const SPI_IER_TXTFIE: u32 = SPI_IER_TXTFIE_Msk;
pub const SPI_IER_UDRIE_Pos: u32 = 5;
pub const SPI_IER_UDRIE_Msk: u32 = 0x1 << SPI_IER_UDRIE_Pos;
pub const SPI_IER_UDRIE: u32 = SPI_IER_UDRIE_Msk;
pub const SPI_IER_OVRIE_Pos: u32 = 6;
pub const SPI_IER_OVRIE_Msk: u32 = 0x1 << SPI_IER_OVRIE_Pos;
pub const SPI_IER_OVRIE: u32 = SPI_IER_OVRIE_Msk;
pub const SPI_IER_CRCEIE_Pos: u32 = 7;
pub const SPI_IER_CRCEIE_Msk: u32 = 0x1 << SPI_IER_CRCEIE_Pos;
pub const SPI_IER_CRCEIE: u32 = SPI_IER_CRCEIE_Msk;
pub const SPI_IER_TIFREIE_Pos: u32 = 8;
pub const SPI_IER_TIFREIE_Msk: u32 = 0x1 << SPI_IER_TIFREIE_Pos;
pub const SPI_IER_TIFREIE: u32 = SPI_IER_TIFREIE_Msk;
pub const SPI_IER_MODFIE_Pos: u32 = 9;
pub const SPI_IER_MODFIE_Msk: u32 = 0x1 << SPI_IER_MODFIE_Pos;
pub const SPI_IER_MODFIE: u32 = SPI_IER_MODFIE_Msk;
pub const SPI_SR_RXP_Pos: u32 = 0;
pub const SPI_SR_RXP_Msk: u32 = 0x1 << SPI_SR_RXP_Pos;
pub const SPI_SR_RXP: u32 = SPI_SR_RXP_Msk;
pub const SPI_SR_TXP_Pos: u32 = 1;
pub const SPI_SR_TXP_Msk: u32 = 0x1 << SPI_SR_TXP_Pos;
pub const SPI_SR_TXP: u32 = SPI_SR_TXP_Msk;
pub const SPI_SR_DXP_Pos: u32 = 2;
pub const SPI_SR_DXP_Msk: u32 = 0x1 << SPI_SR_DXP_Pos;
pub const SPI_SR_DXP: u32 = SPI_SR_DXP_Msk;
pub const SPI_SR_EOT_Pos: u32 = 3;
pub const SPI_SR_EOT_Msk: u32 = 0x1 << SPI_SR_EOT_Pos;
pub const SPI_SR_EOT: u32 = SPI_SR_EOT_Msk;
pub const SPI_SR_TXTF_Pos: u32 = 4;
pub const SPI_SR_TXTF_Msk: u32 = 0x1 << SPI_SR_TXTF_Pos;
pub const SPI_SR_TXTF: u32 = SPI_SR_TXTF_Msk;
pub const SPI_SR_UDR_Pos: u32 = 5;
pub const SPI_SR_UDR_Msk: u32 = 0x1 << SPI_SR_UDR_Pos;
pub const SPI_SR_UDR: u32 = SPI_SR_UDR_Msk;
pub const SPI_SR_OVR_Pos: u32 = 6;
pub const SPI_SR_OVR_Msk: u32 = 0x1 << SPI_SR_OVR_Pos;
pub const SPI_SR_OVR: u32 = SPI_SR_OVR_Msk;
pub const SPI_SR_CRCE_Pos: u32 = 7;
pub const SPI_SR_CRCE_Msk: u32 = 0x1 << SPI_SR_CRCE_Pos;
pub const SPI_SR_CRCE: u32 = SPI_SR_CRCE_Msk;
pub const SPI_SR_TIFRE_Pos: u32 = 8;
pub const SPI_SR_TIFRE_Msk: u32 = 0x1 << SPI_SR_TIFRE_Pos;
pub const SPI_SR_TIFRE: u32 = SPI_SR_TIFRE_Msk;
pub const SPI_SR_MODF_Pos: u32 = 9;
pub const SPI_SR_MODF_Msk: u32 = 0x1 << SPI_SR_MODF_Pos;
pub const SPI_SR_MODF: u32 = SPI_SR_MODF_Msk;
pub const SPI_SR_TSERF_Pos: u32 = 10;
pub const SPI_SR_TSERF_Msk: u32 = 0x1 << SPI_SR_TSERF_Pos;
pub const SPI_SR_TSERF: u32 = SPI_SR_TSERF_Msk;
pub const SPI_SR_SUSP_Pos: u32 = 11;
pub const SPI_SR_SUSP_Msk: u32 = 0x1 << SPI_SR_SUSP_Pos;
pub const SPI_SR_SUSP: u32 = SPI_SR_SUSP_Msk;
pub const SPI_SR_TXC_Pos: u32 = 12;
pub const SPI_SR_TXC_Msk: u32 = 0x1 << SPI_SR_TXC_Pos;
pub const SPI_SR_TXC: u32 = SPI_SR_TXC_Msk;
pub const SPI_SR_RXPLVL_Pos: u32 = 13;
pub const SPI_SR_RXPLVL_Msk: u32 = 0x3 << SPI_SR_RXPLVL_Pos;
pub const SPI_SR_RXPLVL: u32 = SPI_SR_RXPLVL_Msk;
pub const SPI_SR_RXPLVL_0: u32 = 0x1 << SPI_SR_RXPLVL_Pos;
pub const SPI_SR_RXPLVL_1: u32 = 0x2 << SPI_SR_RXPLVL_Pos;
pub const SPI_SR_RXWNE_Pos: u32 = 15;
pub const SPI_SR_RXWNE_Msk: u32 = 0x1 << SPI_SR_RXWNE_Pos;
pub const SPI_SR_RXWNE: u32 = SPI_SR_RXWNE_Msk;
pub const SPI_SR_CTSIZE_Pos: u32 = 16;
pub const SPI_SR_CTSIZE_Msk: u32 = 0xFFFF << SPI_SR_CTSIZE_Pos;
pub const SPI_SR_CTSIZE: u32 = SPI_SR_CTSIZE_Msk;
pub const SPI_IFCR_EOTC_Pos: u32 = 3;
pub const SPI_IFCR_EOTC_Msk: u32 = 0x1 << SPI_IFCR_EOTC_Pos;
pub const SPI_IFCR_EOTC: u32 = SPI_IFCR_EOTC_Msk;
pub const SPI_IFCR_TXTFC_Pos: u32 = 4;
pub const SPI_IFCR_TXTFC_Msk: u32 = 0x1 << SPI_IFCR_TXTFC_Pos;
pub const SPI_IFCR_TXTFC: u32 = SPI_IFCR_TXTFC_Msk;
pub const SPI_IFCR_UDRC_Pos: u32 = 5;
pub const SPI_IFCR_UDRC_Msk: u32 = 0x1 << SPI_IFCR_UDRC_Pos;
pub const SPI_IFCR_UDRC: u32 = SPI_IFCR_UDRC_Msk;
pub const SPI_IFCR_OVRC_Pos: u32 = 6;
pub const SPI_IFCR_OVRC_Msk: u32 = 0x1 << SPI_IFCR_OVRC_Pos;
pub const SPI_IFCR_OVRC: u32 = SPI_IFCR_OVRC_Msk;
pub const SPI_IFCR_CRCEC_Pos: u32 = 7;
pub const SPI_IFCR_CRCEC_Msk: u32 = 0x1 << SPI_IFCR_CRCEC_Pos;
pub const SPI_IFCR_CRCEC: u32 = SPI_IFCR_CRCEC_Msk;
pub const SPI_IFCR_TIFREC_Pos: u32 = 8;
pub const SPI_IFCR_TIFREC_Msk: u32 = 0x1 << SPI_IFCR_TIFREC_Pos;
pub const SPI_IFCR_TIFREC: u32 = SPI_IFCR_TIFREC_Msk;
pub const SPI_IFCR_MODFC_Pos: u32 = 9;
pub const SPI_IFCR_MODFC_Msk: u32 = 0x1 << SPI_IFCR_MODFC_Pos;
pub const SPI_IFCR_MODFC: u32 = SPI_IFCR_MODFC_Msk;
pub const SPI_IFCR_SUSPC_Pos: u32 = 11;
pub const SPI_IFCR_SUSPC_Msk: u32 = 0x1 << SPI_IFCR_SUSPC_Pos;
pub const SPI_IFCR_SUSPC: u32 = SPI_IFCR_SUSPC_Msk;
pub const SPI_TXDR_TXDR_Pos: u32 = 0;
pub const SPI_TXDR_TXDR_Msk: u32 = 0xFFFFFFFF << SPI_TXDR_TXDR_Pos;
pub const SPI_TXDR_TXDR: u32 = SPI_TXDR_TXDR_Msk;
pub const SPI_RXDR_RXDR_Pos: u32 = 0;
pub const SPI_RXDR_RXDR_Msk: u32 = 0xFFFFFFFF << SPI_RXDR_RXDR_Pos;
pub const SPI_RXDR_RXDR: u32 = SPI_RXDR_RXDR_Msk;
pub const SPI_CRCPOLY_CRCPOLY_Pos: u32 = 0;
pub const SPI_CRCPOLY_CRCPOLY_Msk: u32 = 0xFFFFFFFF << SPI_CRCPOLY_CRCPOLY_Pos;
pub const SPI_CRCPOLY_CRCPOLY: u32 = SPI_CRCPOLY_CRCPOLY_Msk;
pub const SPI_TXCRC_TXCRC_Pos: u32 = 0;
pub const SPI_TXCRC_TXCRC_Msk: u32 = 0xFFFFFFFF << SPI_TXCRC_TXCRC_Pos;
pub const SPI_TXCRC_TXCRC: u32 = SPI_TXCRC_TXCRC_Msk;
pub const SPI_RXCRC_RXCRC_Pos: u32 = 0;
pub const SPI_RXCRC_RXCRC_Msk: u32 = 0xFFFFFFFF << SPI_RXCRC_RXCRC_Pos;
pub const SPI_RXCRC_RXCRC: u32 = SPI_RXCRC_RXCRC_Msk;
pub const SPI_UDRDR_UDRDR_Pos: u32 = 0;
pub const SPI_UDRDR_UDRDR_Msk: u32 = 0xFFFFFFFF << SPI_UDRDR_UDRDR_Pos;
pub const SPI_UDRDR_UDRDR: u32 = SPI_UDRDR_UDRDR_Msk;
pub const SPI_I2SCFGR_I2SMOD_Pos: u32 = 0;
pub const SPI_I2SCFGR_I2SMOD_Msk: u32 = 0x1 << SPI_I2SCFGR_I2SMOD_Pos;
pub const SPI_I2SCFGR_I2SMOD: u32 = SPI_I2SCFGR_I2SMOD_Msk;
pub const SPI_I2SCFGR_I2SCFG_Pos: u32 = 1;
pub const SPI_I2SCFGR_I2SCFG_Msk: u32 = 0x7 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SCFG: u32 = SPI_I2SCFGR_I2SCFG_Msk;
pub const SPI_I2SCFGR_I2SCFG_0: u32 = 0x1 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SCFG_1: u32 = 0x2 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SCFG_2: u32 = 0x4 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SSTD_Pos: u32 = 4;
pub const SPI_I2SCFGR_I2SSTD_Msk: u32 = 0x3 << SPI_I2SCFGR_I2SSTD_Pos;
pub const SPI_I2SCFGR_I2SSTD: u32 = SPI_I2SCFGR_I2SSTD_Msk;
pub const SPI_I2SCFGR_I2SSTD_0: u32 = 0x1 << SPI_I2SCFGR_I2SSTD_Pos;
pub const SPI_I2SCFGR_I2SSTD_1: u32 = 0x2 << SPI_I2SCFGR_I2SSTD_Pos;
pub const SPI_I2SCFGR_PCMSYNC_Pos: u32 = 7;
pub const SPI_I2SCFGR_PCMSYNC_Msk: u32 = 0x1 << SPI_I2SCFGR_PCMSYNC_Pos;
pub const SPI_I2SCFGR_PCMSYNC: u32 = SPI_I2SCFGR_PCMSYNC_Msk;
pub const SPI_I2SCFGR_DATLEN_Pos: u32 = 8;
pub const SPI_I2SCFGR_DATLEN_Msk: u32 = 0x3 << SPI_I2SCFGR_DATLEN_Pos;
pub const SPI_I2SCFGR_DATLEN: u32 = SPI_I2SCFGR_DATLEN_Msk;
pub const SPI_I2SCFGR_DATLEN_0: u32 = 0x1 << SPI_I2SCFGR_DATLEN_Pos;
pub const SPI_I2SCFGR_DATLEN_1: u32 = 0x2 << SPI_I2SCFGR_DATLEN_Pos;
pub const SPI_I2SCFGR_CHLEN_Pos: u32 = 10;
pub const SPI_I2SCFGR_CHLEN_Msk: u32 = 0x1 << SPI_I2SCFGR_CHLEN_Pos;
pub const SPI_I2SCFGR_CHLEN: u32 = SPI_I2SCFGR_CHLEN_Msk;
pub const SPI_I2SCFGR_CKPOL_Pos: u32 = 11;
pub const SPI_I2SCFGR_CKPOL_Msk: u32 = 0x1 << SPI_I2SCFGR_CKPOL_Pos;
pub const SPI_I2SCFGR_CKPOL: u32 = SPI_I2SCFGR_CKPOL_Msk;
pub const SPI_I2SCFGR_FIXCH_Pos: u32 = 12;
pub const SPI_I2SCFGR_FIXCH_Msk: u32 = 0x1 << SPI_I2SCFGR_FIXCH_Pos;
pub const SPI_I2SCFGR_FIXCH: u32 = SPI_I2SCFGR_FIXCH_Msk;
pub const SPI_I2SCFGR_WSINV_Pos: u32 = 13;
pub const SPI_I2SCFGR_WSINV_Msk: u32 = 0x1 << SPI_I2SCFGR_WSINV_Pos;
pub const SPI_I2SCFGR_WSINV: u32 = SPI_I2SCFGR_WSINV_Msk;
pub const SPI_I2SCFGR_DATFMT_Pos: u32 = 14;
pub const SPI_I2SCFGR_DATFMT_Msk: u32 = 0x1 << SPI_I2SCFGR_DATFMT_Pos;
pub const SPI_I2SCFGR_DATFMT: u32 = SPI_I2SCFGR_DATFMT_Msk;
pub const SPI_I2SCFGR_I2SDIV_Pos: u32 = 16;
pub const SPI_I2SCFGR_I2SDIV_Msk: u32 = 0xFF << SPI_I2SCFGR_I2SDIV_Pos;
pub const SPI_I2SCFGR_I2SDIV: u32 = SPI_I2SCFGR_I2SDIV_Msk;
pub const SPI_I2SCFGR_ODD_Pos: u32 = 24;
pub const SPI_I2SCFGR_ODD_Msk: u32 = 0x1 << SPI_I2SCFGR_ODD_Pos;
pub const SPI_I2SCFGR_ODD: u32 = SPI_I2SCFGR_ODD_Msk;
pub const SPI_I2SCFGR_MCKOE_Pos: u32 = 25;
pub const SPI_I2SCFGR_MCKOE_Msk: u32 = 0x1 << SPI_I2SCFGR_MCKOE_Pos;
pub const SPI_I2SCFGR_MCKOE: u32 = SPI_I2SCFGR_MCKOE_Msk;
pub const TAMP_CR1_TAMP1E_Pos: u32 = 0;
pub const TAMP_CR1_TAMP1E_Msk: u32 = 0x1 << TAMP_CR1_TAMP1E_Pos;
pub const TAMP_CR1_TAMP1E: u32 = TAMP_CR1_TAMP1E_Msk;
pub const TAMP_CR1_TAMP2E_Pos: u32 = 1;
pub const TAMP_CR1_TAMP2E_Msk: u32 = 0x1 << TAMP_CR1_TAMP2E_Pos;
pub const TAMP_CR1_TAMP2E: u32 = TAMP_CR1_TAMP2E_Msk;
pub const TAMP_CR1_TAMP3E_Pos: u32 = 2;
pub const TAMP_CR1_TAMP3E_Msk: u32 = 0x1 << TAMP_CR1_TAMP3E_Pos;
pub const TAMP_CR1_TAMP3E: u32 = TAMP_CR1_TAMP3E_Msk;
pub const TAMP_CR1_TAMP4E_Pos: u32 = 3;
pub const TAMP_CR1_TAMP4E_Msk: u32 = 0x1 << TAMP_CR1_TAMP4E_Pos;
pub const TAMP_CR1_TAMP4E: u32 = TAMP_CR1_TAMP4E_Msk;
pub const TAMP_CR1_TAMP5E_Pos: u32 = 4;
pub const TAMP_CR1_TAMP5E_Msk: u32 = 0x1 << TAMP_CR1_TAMP5E_Pos;
pub const TAMP_CR1_TAMP5E: u32 = TAMP_CR1_TAMP5E_Msk;
pub const TAMP_CR1_TAMP6E_Pos: u32 = 5;
pub const TAMP_CR1_TAMP6E_Msk: u32 = 0x1 << TAMP_CR1_TAMP6E_Pos;
pub const TAMP_CR1_TAMP6E: u32 = TAMP_CR1_TAMP6E_Msk;
pub const TAMP_CR1_TAMP7E_Pos: u32 = 6;
pub const TAMP_CR1_TAMP7E_Msk: u32 = 0x1 << TAMP_CR1_TAMP7E_Pos;
pub const TAMP_CR1_TAMP7E: u32 = TAMP_CR1_TAMP7E_Msk;
pub const TAMP_CR1_TAMP8E_Pos: u32 = 7;
pub const TAMP_CR1_TAMP8E_Msk: u32 = 0x1 << TAMP_CR1_TAMP8E_Pos;
pub const TAMP_CR1_TAMP8E: u32 = TAMP_CR1_TAMP8E_Msk;
pub const TAMP_CR1_ITAMP1E_Pos: u32 = 16;
pub const TAMP_CR1_ITAMP1E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP1E_Pos;
pub const TAMP_CR1_ITAMP1E: u32 = TAMP_CR1_ITAMP1E_Msk;
pub const TAMP_CR1_ITAMP2E_Pos: u32 = 17;
pub const TAMP_CR1_ITAMP2E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP2E_Pos;
pub const TAMP_CR1_ITAMP2E: u32 = TAMP_CR1_ITAMP2E_Msk;
pub const TAMP_CR1_ITAMP3E_Pos: u32 = 18;
pub const TAMP_CR1_ITAMP3E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP3E_Pos;
pub const TAMP_CR1_ITAMP3E: u32 = TAMP_CR1_ITAMP3E_Msk;
pub const TAMP_CR1_ITAMP4E_Pos: u32 = 19;
pub const TAMP_CR1_ITAMP4E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP4E_Pos;
pub const TAMP_CR1_ITAMP4E: u32 = TAMP_CR1_ITAMP4E_Msk;
pub const TAMP_CR1_ITAMP5E_Pos: u32 = 20;
pub const TAMP_CR1_ITAMP5E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP5E_Pos;
pub const TAMP_CR1_ITAMP5E: u32 = TAMP_CR1_ITAMP5E_Msk;
pub const TAMP_CR1_ITAMP6E_Pos: u32 = 21;
pub const TAMP_CR1_ITAMP6E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP6E_Pos;
pub const TAMP_CR1_ITAMP6E: u32 = TAMP_CR1_ITAMP6E_Msk;
pub const TAMP_CR1_ITAMP7E_Pos: u32 = 22;
pub const TAMP_CR1_ITAMP7E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP7E_Pos;
pub const TAMP_CR1_ITAMP7E: u32 = TAMP_CR1_ITAMP7E_Msk;
pub const TAMP_CR1_ITAMP8E_Pos: u32 = 23;
pub const TAMP_CR1_ITAMP8E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP8E_Pos;
pub const TAMP_CR1_ITAMP8E: u32 = TAMP_CR1_ITAMP8E_Msk;
pub const TAMP_CR1_ITAMP9E_Pos: u32 = 24;
pub const TAMP_CR1_ITAMP9E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP9E_Pos;
pub const TAMP_CR1_ITAMP9E: u32 = TAMP_CR1_ITAMP9E_Msk;
pub const TAMP_CR1_ITAMP11E_Pos: u32 = 26;
pub const TAMP_CR1_ITAMP11E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP11E_Pos;
pub const TAMP_CR1_ITAMP11E: u32 = TAMP_CR1_ITAMP11E_Msk;
pub const TAMP_CR1_ITAMP15E_Pos: u32 = 30;
pub const TAMP_CR1_ITAMP15E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP15E_Pos;
pub const TAMP_CR1_ITAMP15E: u32 = TAMP_CR1_ITAMP15E_Msk;
pub const TAMP_CR2_TAMP1POM_Pos: u32 = 0;
pub const TAMP_CR2_TAMP1POM_Msk: u32 = 0x1 << TAMP_CR2_TAMP1POM_Pos;
pub const TAMP_CR2_TAMP1POM: u32 = TAMP_CR2_TAMP1POM_Msk;
pub const TAMP_CR2_TAMP2POM_Pos: u32 = 1;
pub const TAMP_CR2_TAMP2POM_Msk: u32 = 0x1 << TAMP_CR2_TAMP2POM_Pos;
pub const TAMP_CR2_TAMP2POM: u32 = TAMP_CR2_TAMP2POM_Msk;
pub const TAMP_CR2_TAMP3POM_Pos: u32 = 2;
pub const TAMP_CR2_TAMP3POM_Msk: u32 = 0x1 << TAMP_CR2_TAMP3POM_Pos;
pub const TAMP_CR2_TAMP3POM: u32 = TAMP_CR2_TAMP3POM_Msk;
pub const TAMP_CR2_TAMP4POM_Pos: u32 = 3;
pub const TAMP_CR2_TAMP4POM_Msk: u32 = 0x1 << TAMP_CR2_TAMP4POM_Pos;
pub const TAMP_CR2_TAMP4POM: u32 = TAMP_CR2_TAMP4POM_Msk;
pub const TAMP_CR2_TAMP5POM_Pos: u32 = 4;
pub const TAMP_CR2_TAMP5POM_Msk: u32 = 0x1 << TAMP_CR2_TAMP5POM_Pos;
pub const TAMP_CR2_TAMP5POM: u32 = TAMP_CR2_TAMP5POM_Msk;
pub const TAMP_CR2_TAMP6POM_Pos: u32 = 5;
pub const TAMP_CR2_TAMP6POM_Msk: u32 = 0x1 << TAMP_CR2_TAMP6POM_Pos;
pub const TAMP_CR2_TAMP6POM: u32 = TAMP_CR2_TAMP6POM_Msk;
pub const TAMP_CR2_TAMP7POM_Pos: u32 = 6;
pub const TAMP_CR2_TAMP7POM_Msk: u32 = 0x1 << TAMP_CR2_TAMP7POM_Pos;
pub const TAMP_CR2_TAMP7POM: u32 = TAMP_CR2_TAMP7POM_Msk;
pub const TAMP_CR2_TAMP8POM_Pos: u32 = 7;
pub const TAMP_CR2_TAMP8POM_Msk: u32 = 0x1 << TAMP_CR2_TAMP8POM_Pos;
pub const TAMP_CR2_TAMP8POM: u32 = TAMP_CR2_TAMP8POM_Msk;
pub const TAMP_CR2_TAMP1MSK_Pos: u32 = 16;
pub const TAMP_CR2_TAMP1MSK_Msk: u32 = 0x1 << TAMP_CR2_TAMP1MSK_Pos;
pub const TAMP_CR2_TAMP1MSK: u32 = TAMP_CR2_TAMP1MSK_Msk;
pub const TAMP_CR2_TAMP2MSK_Pos: u32 = 17;
pub const TAMP_CR2_TAMP2MSK_Msk: u32 = 0x1 << TAMP_CR2_TAMP2MSK_Pos;
pub const TAMP_CR2_TAMP2MSK: u32 = TAMP_CR2_TAMP2MSK_Msk;
pub const TAMP_CR2_TAMP3MSK_Pos: u32 = 18;
pub const TAMP_CR2_TAMP3MSK_Msk: u32 = 0x1 << TAMP_CR2_TAMP3MSK_Pos;
pub const TAMP_CR2_TAMP3MSK: u32 = TAMP_CR2_TAMP3MSK_Msk;
pub const TAMP_CR2_BKBLOCK_Pos: u32 = 22;
pub const TAMP_CR2_BKBLOCK_Msk: u32 = 0x1 << TAMP_CR2_BKBLOCK_Pos;
pub const TAMP_CR2_BKBLOCK: u32 = TAMP_CR2_BKBLOCK_Msk;
pub const TAMP_CR2_BKERASE_Pos: u32 = 23;
pub const TAMP_CR2_BKERASE_Msk: u32 = 0x1 << TAMP_CR2_BKERASE_Pos;
pub const TAMP_CR2_BKERASE: u32 = TAMP_CR2_BKERASE_Msk;
pub const TAMP_CR2_TAMP1TRG_Pos: u32 = 24;
pub const TAMP_CR2_TAMP1TRG_Msk: u32 = 0x1 << TAMP_CR2_TAMP1TRG_Pos;
pub const TAMP_CR2_TAMP1TRG: u32 = TAMP_CR2_TAMP1TRG_Msk;
pub const TAMP_CR2_TAMP2TRG_Pos: u32 = 25;
pub const TAMP_CR2_TAMP2TRG_Msk: u32 = 0x1 << TAMP_CR2_TAMP2TRG_Pos;
pub const TAMP_CR2_TAMP2TRG: u32 = TAMP_CR2_TAMP2TRG_Msk;
pub const TAMP_CR2_TAMP3TRG_Pos: u32 = 26;
pub const TAMP_CR2_TAMP3TRG_Msk: u32 = 0x1 << TAMP_CR2_TAMP3TRG_Pos;
pub const TAMP_CR2_TAMP3TRG: u32 = TAMP_CR2_TAMP3TRG_Msk;
pub const TAMP_CR2_TAMP4TRG_Pos: u32 = 27;
pub const TAMP_CR2_TAMP4TRG_Msk: u32 = 0x1 << TAMP_CR2_TAMP4TRG_Pos;
pub const TAMP_CR2_TAMP4TRG: u32 = TAMP_CR2_TAMP4TRG_Msk;
pub const TAMP_CR2_TAMP5TRG_Pos: u32 = 28;
pub const TAMP_CR2_TAMP5TRG_Msk: u32 = 0x1 << TAMP_CR2_TAMP5TRG_Pos;
pub const TAMP_CR2_TAMP5TRG: u32 = TAMP_CR2_TAMP5TRG_Msk;
pub const TAMP_CR2_TAMP6TRG_Pos: u32 = 29;
pub const TAMP_CR2_TAMP6TRG_Msk: u32 = 0x1 << TAMP_CR2_TAMP6TRG_Pos;
pub const TAMP_CR2_TAMP6TRG: u32 = TAMP_CR2_TAMP6TRG_Msk;
pub const TAMP_CR2_TAMP7TRG_Pos: u32 = 30;
pub const TAMP_CR2_TAMP7TRG_Msk: u32 = 0x1 << TAMP_CR2_TAMP7TRG_Pos;
pub const TAMP_CR2_TAMP7TRG: u32 = TAMP_CR2_TAMP7TRG_Msk;
pub const TAMP_CR2_TAMP8TRG_Pos: u32 = 31;
pub const TAMP_CR2_TAMP8TRG_Msk: u32 = 0x1 << TAMP_CR2_TAMP8TRG_Pos;
pub const TAMP_CR2_TAMP8TRG: u32 = TAMP_CR2_TAMP8TRG_Msk;
pub const TAMP_CR3_ITAMP1POM_Pos: u32 = 0;
pub const TAMP_CR3_ITAMP1POM_Msk: u32 = 0x1 << TAMP_CR3_ITAMP1POM_Pos;
pub const TAMP_CR3_ITAMP1POM: u32 = TAMP_CR3_ITAMP1POM_Msk;
pub const TAMP_CR3_ITAMP2POM_Pos: u32 = 1;
pub const TAMP_CR3_ITAMP2POM_Msk: u32 = 0x1 << TAMP_CR3_ITAMP2POM_Pos;
pub const TAMP_CR3_ITAMP2POM: u32 = TAMP_CR3_ITAMP2POM_Msk;
pub const TAMP_CR3_ITAMP3POM_Pos: u32 = 2;
pub const TAMP_CR3_ITAMP3POM_Msk: u32 = 0x1 << TAMP_CR3_ITAMP3POM_Pos;
pub const TAMP_CR3_ITAMP3POM: u32 = TAMP_CR3_ITAMP3POM_Msk;
pub const TAMP_CR3_ITAMP4POM_Pos: u32 = 3;
pub const TAMP_CR3_ITAMP4POM_Msk: u32 = 0x1 << TAMP_CR3_ITAMP4POM_Pos;
pub const TAMP_CR3_ITAMP4POM: u32 = TAMP_CR3_ITAMP4POM_Msk;
pub const TAMP_CR3_ITAMP5POM_Pos: u32 = 4;
pub const TAMP_CR3_ITAMP5POM_Msk: u32 = 0x1 << TAMP_CR3_ITAMP5POM_Pos;
pub const TAMP_CR3_ITAMP5POM: u32 = TAMP_CR3_ITAMP5POM_Msk;
pub const TAMP_CR3_ITAMP6POM_Pos: u32 = 5;
pub const TAMP_CR3_ITAMP6POM_Msk: u32 = 0x1 << TAMP_CR3_ITAMP6POM_Pos;
pub const TAMP_CR3_ITAMP6POM: u32 = TAMP_CR3_ITAMP6POM_Msk;
pub const TAMP_CR3_ITAMP7POM_Pos: u32 = 6;
pub const TAMP_CR3_ITAMP7POM_Msk: u32 = 0x1 << TAMP_CR3_ITAMP7POM_Pos;
pub const TAMP_CR3_ITAMP7POM: u32 = TAMP_CR3_ITAMP7POM_Msk;
pub const TAMP_CR3_ITAMP8POM_Pos: u32 = 7;
pub const TAMP_CR3_ITAMP8POM_Msk: u32 = 0x1 << TAMP_CR3_ITAMP8POM_Pos;
pub const TAMP_CR3_ITAMP8POM: u32 = TAMP_CR3_ITAMP8POM_Msk;
pub const TAMP_CR3_ITAMP9POM_Pos: u32 = 8;
pub const TAMP_CR3_ITAMP9POM_Msk: u32 = 0x1 << TAMP_CR3_ITAMP9POM_Pos;
pub const TAMP_CR3_ITAMP9POM: u32 = TAMP_CR3_ITAMP9POM_Msk;
pub const TAMP_CR3_ITAMP11POM_Pos: u32 = 10;
pub const TAMP_CR3_ITAMP11POM_Msk: u32 = 0x1 << TAMP_CR3_ITAMP11POM_Pos;
pub const TAMP_CR3_ITAMP11POM: u32 = TAMP_CR3_ITAMP11POM_Msk;
pub const TAMP_CR3_ITAMP15POM_Pos: u32 = 14;
pub const TAMP_CR3_ITAMP15POM_Msk: u32 = 0x1 << TAMP_CR3_ITAMP15POM_Pos;
pub const TAMP_CR3_ITAMP15POM: u32 = TAMP_CR3_ITAMP15POM_Msk;
pub const TAMP_FLTCR_TAMPFREQ_Pos: u32 = 0;
pub const TAMP_FLTCR_TAMPFREQ_Msk: u32 = 0x7 << TAMP_FLTCR_TAMPFREQ_Pos;
pub const TAMP_FLTCR_TAMPFREQ: u32 = TAMP_FLTCR_TAMPFREQ_Msk;
pub const TAMP_FLTCR_TAMPFREQ_0: u32 = 0x1 << TAMP_FLTCR_TAMPFREQ_Pos;
pub const TAMP_FLTCR_TAMPFREQ_1: u32 = 0x2 << TAMP_FLTCR_TAMPFREQ_Pos;
pub const TAMP_FLTCR_TAMPFREQ_2: u32 = 0x4 << TAMP_FLTCR_TAMPFREQ_Pos;
pub const TAMP_FLTCR_TAMPFLT_Pos: u32 = 3;
pub const TAMP_FLTCR_TAMPFLT_Msk: u32 = 0x3 << TAMP_FLTCR_TAMPFLT_Pos;
pub const TAMP_FLTCR_TAMPFLT: u32 = TAMP_FLTCR_TAMPFLT_Msk;
pub const TAMP_FLTCR_TAMPFLT_0: u32 = 0x1 << TAMP_FLTCR_TAMPFLT_Pos;
pub const TAMP_FLTCR_TAMPFLT_1: u32 = 0x2 << TAMP_FLTCR_TAMPFLT_Pos;
pub const TAMP_FLTCR_TAMPPRCH_Pos: u32 = 5;
pub const TAMP_FLTCR_TAMPPRCH_Msk: u32 = 0x3 << TAMP_FLTCR_TAMPPRCH_Pos;
pub const TAMP_FLTCR_TAMPPRCH: u32 = TAMP_FLTCR_TAMPPRCH_Msk;
pub const TAMP_FLTCR_TAMPPRCH_0: u32 = 0x1 << TAMP_FLTCR_TAMPPRCH_Pos;
pub const TAMP_FLTCR_TAMPPRCH_1: u32 = 0x2 << TAMP_FLTCR_TAMPPRCH_Pos;
pub const TAMP_FLTCR_TAMPPUDIS_Pos: u32 = 7;
pub const TAMP_FLTCR_TAMPPUDIS_Msk: u32 = 0x1 << TAMP_FLTCR_TAMPPUDIS_Pos;
pub const TAMP_FLTCR_TAMPPUDIS: u32 = TAMP_FLTCR_TAMPPUDIS_Msk;
pub const TAMP_ATCR1_TAMP1AM_Pos: u32 = 0;
pub const TAMP_ATCR1_TAMP1AM_Msk: u32 = 0x1 << TAMP_ATCR1_TAMP1AM_Pos;
pub const TAMP_ATCR1_TAMP1AM: u32 = TAMP_ATCR1_TAMP1AM_Msk;
pub const TAMP_ATCR1_TAMP2AM_Pos: u32 = 1;
pub const TAMP_ATCR1_TAMP2AM_Msk: u32 = 0x1 << TAMP_ATCR1_TAMP2AM_Pos;
pub const TAMP_ATCR1_TAMP2AM: u32 = TAMP_ATCR1_TAMP2AM_Msk;
pub const TAMP_ATCR1_TAMP3AM_Pos: u32 = 2;
pub const TAMP_ATCR1_TAMP3AM_Msk: u32 = 0x1 << TAMP_ATCR1_TAMP3AM_Pos;
pub const TAMP_ATCR1_TAMP3AM: u32 = TAMP_ATCR1_TAMP3AM_Msk;
pub const TAMP_ATCR1_TAMP4AM_Pos: u32 = 3;
pub const TAMP_ATCR1_TAMP4AM_Msk: u32 = 0x1 << TAMP_ATCR1_TAMP4AM_Pos;
pub const TAMP_ATCR1_TAMP4AM: u32 = TAMP_ATCR1_TAMP4AM_Msk;
pub const TAMP_ATCR1_TAMP5AM_Pos: u32 = 4;
pub const TAMP_ATCR1_TAMP5AM_Msk: u32 = 0x1 << TAMP_ATCR1_TAMP5AM_Pos;
pub const TAMP_ATCR1_TAMP5AM: u32 = TAMP_ATCR1_TAMP5AM_Msk;
pub const TAMP_ATCR1_TAMP6AM_Pos: u32 = 5;
pub const TAMP_ATCR1_TAMP6AM_Msk: u32 = 0x1 << TAMP_ATCR1_TAMP6AM_Pos;
pub const TAMP_ATCR1_TAMP6AM: u32 = TAMP_ATCR1_TAMP6AM_Msk;
pub const TAMP_ATCR1_TAMP7AM_Pos: u32 = 6;
pub const TAMP_ATCR1_TAMP7AM_Msk: u32 = 0x1 << TAMP_ATCR1_TAMP7AM_Pos;
pub const TAMP_ATCR1_TAMP7AM: u32 = TAMP_ATCR1_TAMP7AM_Msk;
pub const TAMP_ATCR1_TAMP8AM_Pos: u32 = 7;
pub const TAMP_ATCR1_TAMP8AM_Msk: u32 = 0x1 << TAMP_ATCR1_TAMP8AM_Pos;
pub const TAMP_ATCR1_TAMP8AM: u32 = TAMP_ATCR1_TAMP8AM_Msk;
pub const TAMP_ATCR1_ATOSEL1_Pos: u32 = 8;
pub const TAMP_ATCR1_ATOSEL1_Msk: u32 = 0x3 << TAMP_ATCR1_ATOSEL1_Pos;
pub const TAMP_ATCR1_ATOSEL1: u32 = TAMP_ATCR1_ATOSEL1_Msk;
pub const TAMP_ATCR1_ATOSEL1_0: u32 = 0x1 << TAMP_ATCR1_ATOSEL1_Pos;
pub const TAMP_ATCR1_ATOSEL1_1: u32 = 0x2 << TAMP_ATCR1_ATOSEL1_Pos;
pub const TAMP_ATCR1_ATOSEL2_Pos: u32 = 10;
pub const TAMP_ATCR1_ATOSEL2_Msk: u32 = 0x3 << TAMP_ATCR1_ATOSEL2_Pos;
pub const TAMP_ATCR1_ATOSEL2: u32 = TAMP_ATCR1_ATOSEL2_Msk;
pub const TAMP_ATCR1_ATOSEL2_0: u32 = 0x1 << TAMP_ATCR1_ATOSEL2_Pos;
pub const TAMP_ATCR1_ATOSEL2_1: u32 = 0x2 << TAMP_ATCR1_ATOSEL2_Pos;
pub const TAMP_ATCR1_ATOSEL3_Pos: u32 = 12;
pub const TAMP_ATCR1_ATOSEL3_Msk: u32 = 0x3 << TAMP_ATCR1_ATOSEL3_Pos;
pub const TAMP_ATCR1_ATOSEL3: u32 = TAMP_ATCR1_ATOSEL3_Msk;
pub const TAMP_ATCR1_ATOSEL3_0: u32 = 0x1 << TAMP_ATCR1_ATOSEL3_Pos;
pub const TAMP_ATCR1_ATOSEL3_1: u32 = 0x2 << TAMP_ATCR1_ATOSEL3_Pos;
pub const TAMP_ATCR1_ATOSEL4_Pos: u32 = 14;
pub const TAMP_ATCR1_ATOSEL4_Msk: u32 = 0x3 << TAMP_ATCR1_ATOSEL4_Pos;
pub const TAMP_ATCR1_ATOSEL4: u32 = TAMP_ATCR1_ATOSEL4_Msk;
pub const TAMP_ATCR1_ATOSEL4_0: u32 = 0x1 << TAMP_ATCR1_ATOSEL4_Pos;
pub const TAMP_ATCR1_ATOSEL4_1: u32 = 0x2 << TAMP_ATCR1_ATOSEL4_Pos;
pub const TAMP_ATCR1_ATCKSEL_Pos: u32 = 16;
pub const TAMP_ATCR1_ATCKSEL_Msk: u32 = 0xF << TAMP_ATCR1_ATCKSEL_Pos;
pub const TAMP_ATCR1_ATCKSEL: u32 = TAMP_ATCR1_ATCKSEL_Msk;
pub const TAMP_ATCR1_ATCKSEL_0: u32 = 0x1 << TAMP_ATCR1_ATCKSEL_Pos;
pub const TAMP_ATCR1_ATCKSEL_1: u32 = 0x2 << TAMP_ATCR1_ATCKSEL_Pos;
pub const TAMP_ATCR1_ATCKSEL_2: u32 = 0x4 << TAMP_ATCR1_ATCKSEL_Pos;
pub const TAMP_ATCR1_ATCKSEL_3: u32 = 0x8 << TAMP_ATCR1_ATCKSEL_Pos;
pub const TAMP_ATCR1_ATPER_Pos: u32 = 24;
pub const TAMP_ATCR1_ATPER_Msk: u32 = 0x7 << TAMP_ATCR1_ATPER_Pos;
pub const TAMP_ATCR1_ATPER: u32 = TAMP_ATCR1_ATPER_Msk;
pub const TAMP_ATCR1_ATPER_0: u32 = 0x1 << TAMP_ATCR1_ATPER_Pos;
pub const TAMP_ATCR1_ATPER_1: u32 = 0x2 << TAMP_ATCR1_ATPER_Pos;
pub const TAMP_ATCR1_ATPER_2: u32 = 0x4 << TAMP_ATCR1_ATPER_Pos;
pub const TAMP_ATCR1_ATOSHARE_Pos: u32 = 30;
pub const TAMP_ATCR1_ATOSHARE_Msk: u32 = 0x1 << TAMP_ATCR1_ATOSHARE_Pos;
pub const TAMP_ATCR1_ATOSHARE: u32 = TAMP_ATCR1_ATOSHARE_Msk;
pub const TAMP_ATCR1_FLTEN_Pos: u32 = 31;
pub const TAMP_ATCR1_FLTEN_Msk: u32 = 0x1 << TAMP_ATCR1_FLTEN_Pos;
pub const TAMP_ATCR1_FLTEN: u32 = TAMP_ATCR1_FLTEN_Msk;
pub const TAMP_ATSEEDR_SEED_Pos: u32 = 0;
pub const TAMP_ATSEEDR_SEED_Msk: u32 = 0xFFFFFFFF << TAMP_ATSEEDR_SEED_Pos;
pub const TAMP_ATSEEDR_SEED: u32 = TAMP_ATSEEDR_SEED_Msk;
pub const TAMP_ATOR_PRNG_Pos: u32 = 0;
pub const TAMP_ATOR_PRNG_Msk: u32 = 0xFF << TAMP_ATOR_PRNG_Pos;
pub const TAMP_ATOR_PRNG: u32 = TAMP_ATOR_PRNG_Msk;
pub const TAMP_ATOR_PRNG_0: u32 = 0x1 << TAMP_ATOR_PRNG_Pos;
pub const TAMP_ATOR_PRNG_1: u32 = 0x2 << TAMP_ATOR_PRNG_Pos;
pub const TAMP_ATOR_PRNG_2: u32 = 0x4 << TAMP_ATOR_PRNG_Pos;
pub const TAMP_ATOR_PRNG_3: u32 = 0x8 << TAMP_ATOR_PRNG_Pos;
pub const TAMP_ATOR_PRNG_4: u32 = 0x10 << TAMP_ATOR_PRNG_Pos;
pub const TAMP_ATOR_PRNG_5: u32 = 0x20 << TAMP_ATOR_PRNG_Pos;
pub const TAMP_ATOR_PRNG_6: u32 = 0x40 << TAMP_ATOR_PRNG_Pos;
pub const TAMP_ATOR_PRNG_7: u32 = 0x80 << TAMP_ATOR_PRNG_Pos;
pub const TAMP_ATOR_SEEDF_Pos: u32 = 14;
pub const TAMP_ATOR_SEEDF_Msk: u32 = 1 << TAMP_ATOR_SEEDF_Pos;
pub const TAMP_ATOR_SEEDF: u32 = TAMP_ATOR_SEEDF_Msk;
pub const TAMP_ATOR_INITS_Pos: u32 = 15;
pub const TAMP_ATOR_INITS_Msk: u32 = 1 << TAMP_ATOR_INITS_Pos;
pub const TAMP_ATOR_INITS: u32 = TAMP_ATOR_INITS_Msk;
pub const TAMP_ATCR2_ATOSEL1_Pos: u32 = 8;
pub const TAMP_ATCR2_ATOSEL1_Msk: u32 = 0x7 << TAMP_ATCR2_ATOSEL1_Pos;
pub const TAMP_ATCR2_ATOSEL1: u32 = TAMP_ATCR2_ATOSEL1_Msk;
pub const TAMP_ATCR2_ATOSEL1_0: u32 = 0x1 << TAMP_ATCR2_ATOSEL1_Pos;
pub const TAMP_ATCR2_ATOSEL1_1: u32 = 0x2 << TAMP_ATCR2_ATOSEL1_Pos;
pub const TAMP_ATCR2_ATOSEL1_2: u32 = 0x4 << TAMP_ATCR2_ATOSEL1_Pos;
pub const TAMP_ATCR2_ATOSEL2_Pos: u32 = 11;
pub const TAMP_ATCR2_ATOSEL2_Msk: u32 = 0x7 << TAMP_ATCR2_ATOSEL2_Pos;
pub const TAMP_ATCR2_ATOSEL2: u32 = TAMP_ATCR2_ATOSEL2_Msk;
pub const TAMP_ATCR2_ATOSEL2_0: u32 = 0x1 << TAMP_ATCR2_ATOSEL2_Pos;
pub const TAMP_ATCR2_ATOSEL2_1: u32 = 0x2 << TAMP_ATCR2_ATOSEL2_Pos;
pub const TAMP_ATCR2_ATOSEL2_2: u32 = 0x4 << TAMP_ATCR2_ATOSEL2_Pos;
pub const TAMP_ATCR2_ATOSEL3_Pos: u32 = 14;
pub const TAMP_ATCR2_ATOSEL3_Msk: u32 = 0x7 << TAMP_ATCR2_ATOSEL3_Pos;
pub const TAMP_ATCR2_ATOSEL3: u32 = TAMP_ATCR2_ATOSEL3_Msk;
pub const TAMP_ATCR2_ATOSEL3_0: u32 = 0x1 << TAMP_ATCR2_ATOSEL3_Pos;
pub const TAMP_ATCR2_ATOSEL3_1: u32 = 0x2 << TAMP_ATCR2_ATOSEL3_Pos;
pub const TAMP_ATCR2_ATOSEL3_2: u32 = 0x4 << TAMP_ATCR2_ATOSEL3_Pos;
pub const TAMP_ATCR2_ATOSEL4_Pos: u32 = 17;
pub const TAMP_ATCR2_ATOSEL4_Msk: u32 = 0x7 << TAMP_ATCR2_ATOSEL4_Pos;
pub const TAMP_ATCR2_ATOSEL4: u32 = TAMP_ATCR2_ATOSEL4_Msk;
pub const TAMP_ATCR2_ATOSEL4_0: u32 = 0x1 << TAMP_ATCR2_ATOSEL4_Pos;
pub const TAMP_ATCR2_ATOSEL4_1: u32 = 0x2 << TAMP_ATCR2_ATOSEL4_Pos;
pub const TAMP_ATCR2_ATOSEL4_2: u32 = 0x4 << TAMP_ATCR2_ATOSEL4_Pos;
pub const TAMP_ATCR2_ATOSEL5_Pos: u32 = 20;
pub const TAMP_ATCR2_ATOSEL5_Msk: u32 = 0x7 << TAMP_ATCR2_ATOSEL5_Pos;
pub const TAMP_ATCR2_ATOSEL5: u32 = TAMP_ATCR2_ATOSEL5_Msk;
pub const TAMP_ATCR2_ATOSEL5_0: u32 = 0x1 << TAMP_ATCR2_ATOSEL5_Pos;
pub const TAMP_ATCR2_ATOSEL5_1: u32 = 0x2 << TAMP_ATCR2_ATOSEL5_Pos;
pub const TAMP_ATCR2_ATOSEL5_2: u32 = 0x4 << TAMP_ATCR2_ATOSEL5_Pos;
pub const TAMP_ATCR2_ATOSEL6_Pos: u32 = 23;
pub const TAMP_ATCR2_ATOSEL6_Msk: u32 = 0x7 << TAMP_ATCR2_ATOSEL6_Pos;
pub const TAMP_ATCR2_ATOSEL6: u32 = TAMP_ATCR2_ATOSEL6_Msk;
pub const TAMP_ATCR2_ATOSEL6_0: u32 = 0x1 << TAMP_ATCR2_ATOSEL6_Pos;
pub const TAMP_ATCR2_ATOSEL6_1: u32 = 0x2 << TAMP_ATCR2_ATOSEL6_Pos;
pub const TAMP_ATCR2_ATOSEL6_2: u32 = 0x4 << TAMP_ATCR2_ATOSEL6_Pos;
pub const TAMP_ATCR2_ATOSEL7_Pos: u32 = 26;
pub const TAMP_ATCR2_ATOSEL7_Msk: u32 = 0x7 << TAMP_ATCR2_ATOSEL7_Pos;
pub const TAMP_ATCR2_ATOSEL7: u32 = TAMP_ATCR2_ATOSEL7_Msk;
pub const TAMP_ATCR2_ATOSEL7_0: u32 = 0x1 << TAMP_ATCR2_ATOSEL7_Pos;
pub const TAMP_ATCR2_ATOSEL7_1: u32 = 0x2 << TAMP_ATCR2_ATOSEL7_Pos;
pub const TAMP_ATCR2_ATOSEL7_2: u32 = 0x4 << TAMP_ATCR2_ATOSEL7_Pos;
pub const TAMP_ATCR2_ATOSEL8_Pos: u32 = 29;
pub const TAMP_ATCR2_ATOSEL8_Msk: u32 = 0x7 << TAMP_ATCR2_ATOSEL8_Pos;
pub const TAMP_ATCR2_ATOSEL8: u32 = TAMP_ATCR2_ATOSEL8_Msk;
pub const TAMP_ATCR2_ATOSEL8_0: u32 = 0x1 << TAMP_ATCR2_ATOSEL8_Pos;
pub const TAMP_ATCR2_ATOSEL8_1: u32 = 0x2 << TAMP_ATCR2_ATOSEL8_Pos;
pub const TAMP_ATCR2_ATOSEL8_2: u32 = 0x4 << TAMP_ATCR2_ATOSEL8_Pos;
pub const TAMP_CFGR_BKPRW_Pos: u32 = 0;
pub const TAMP_CFGR_BKPRW_Msk: u32 = 0xFF << TAMP_CFGR_BKPRW_Pos;
pub const TAMP_CFGR_BKPRW: u32 = TAMP_CFGR_BKPRW_Msk;
pub const TAMP_CFGR_BKPRW_0: u32 = 0x1 << TAMP_CFGR_BKPRW_Pos;
pub const TAMP_CFGR_BKPRW_1: u32 = 0x2 << TAMP_CFGR_BKPRW_Pos;
pub const TAMP_CFGR_BKPRW_2: u32 = 0x4 << TAMP_CFGR_BKPRW_Pos;
pub const TAMP_CFGR_BKPRW_3: u32 = 0x8 << TAMP_CFGR_BKPRW_Pos;
pub const TAMP_CFGR_BKPRW_4: u32 = 0x10 << TAMP_CFGR_BKPRW_Pos;
pub const TAMP_CFGR_BKPRW_5: u32 = 0x20 << TAMP_CFGR_BKPRW_Pos;
pub const TAMP_CFGR_BKPRW_6: u32 = 0x40 << TAMP_CFGR_BKPRW_Pos;
pub const TAMP_CFGR_BKPRW_7: u32 = 0x80 << TAMP_CFGR_BKPRW_Pos;
pub const TAMP_CFGR_BKPW_Pos: u32 = 16;
pub const TAMP_CFGR_BKPW_Msk: u32 = 0xFF << TAMP_CFGR_BKPW_Pos;
pub const TAMP_CFGR_BKPW: u32 = TAMP_CFGR_BKPW_Msk;
pub const TAMP_CFGR_BKPW_0: u32 = 0x1 << TAMP_CFGR_BKPW_Pos;
pub const TAMP_CFGR_BKPW_1: u32 = 0x2 << TAMP_CFGR_BKPW_Pos;
pub const TAMP_CFGR_BKPW_2: u32 = 0x4 << TAMP_CFGR_BKPW_Pos;
pub const TAMP_CFGR_BKPW_3: u32 = 0x8 << TAMP_CFGR_BKPW_Pos;
pub const TAMP_CFGR_BKPW_4: u32 = 0x10 << TAMP_CFGR_BKPW_Pos;
pub const TAMP_CFGR_BKPW_5: u32 = 0x20 << TAMP_CFGR_BKPW_Pos;
pub const TAMP_CFGR_BKPW_6: u32 = 0x40 << TAMP_CFGR_BKPW_Pos;
pub const TAMP_CFGR_BKPW_7: u32 = 0x80 << TAMP_CFGR_BKPW_Pos;
pub const TAMP_CFGR_BHKLOCK_Pos: u32 = 30;
pub const TAMP_CFGR_BHKLOCK_Msk: u32 = 0x1 << TAMP_CFGR_BHKLOCK_Pos;
pub const TAMP_CFGR_BHKLOCK: u32 = TAMP_CFGR_BHKLOCK_Msk;
pub const TAMP_PRIVCFGR_CNT1PRIV_Pos: u32 = 15;
pub const TAMP_PRIVCFGR_CNT1PRIV_Msk: u32 = 0x1 << TAMP_PRIVCFGR_CNT1PRIV_Pos;
pub const TAMP_PRIVCFGR_CNT1PRIV: u32 = TAMP_PRIVCFGR_CNT1PRIV_Msk;
pub const TAMP_PRIVCFGR_BKPRWPRIV_Pos: u32 = 29;
pub const TAMP_PRIVCFGR_BKPRWPRIV_Msk: u32 = 0x1 << TAMP_PRIVCFGR_BKPRWPRIV_Pos;
pub const TAMP_PRIVCFGR_BKPRWPRIV: u32 = TAMP_PRIVCFGR_BKPRWPRIV_Msk;
pub const TAMP_PRIVCFGR_BKPWPRIV_Pos: u32 = 30;
pub const TAMP_PRIVCFGR_BKPWPRIV_Msk: u32 = 0x1 << TAMP_PRIVCFGR_BKPWPRIV_Pos;
pub const TAMP_PRIVCFGR_BKPWPRIV: u32 = TAMP_PRIVCFGR_BKPWPRIV_Msk;
pub const TAMP_PRIVCFGR_TAMPPRIV_Pos: u32 = 31;
pub const TAMP_PRIVCFGR_TAMPPRIV_Msk: u32 = 0x1 << TAMP_PRIVCFGR_TAMPPRIV_Pos;
pub const TAMP_PRIVCFGR_TAMPPRIV: u32 = TAMP_PRIVCFGR_TAMPPRIV_Msk;
pub const TAMP_IER_TAMP1IE_Pos: u32 = 0;
pub const TAMP_IER_TAMP1IE_Msk: u32 = 0x1 << TAMP_IER_TAMP1IE_Pos;
pub const TAMP_IER_TAMP1IE: u32 = TAMP_IER_TAMP1IE_Msk;
pub const TAMP_IER_TAMP2IE_Pos: u32 = 1;
pub const TAMP_IER_TAMP2IE_Msk: u32 = 0x1 << TAMP_IER_TAMP2IE_Pos;
pub const TAMP_IER_TAMP2IE: u32 = TAMP_IER_TAMP2IE_Msk;
pub const TAMP_IER_TAMP3IE_Pos: u32 = 2;
pub const TAMP_IER_TAMP3IE_Msk: u32 = 0x1 << TAMP_IER_TAMP3IE_Pos;
pub const TAMP_IER_TAMP3IE: u32 = TAMP_IER_TAMP3IE_Msk;
pub const TAMP_IER_TAMP4IE_Pos: u32 = 3;
pub const TAMP_IER_TAMP4IE_Msk: u32 = 0x1 << TAMP_IER_TAMP4IE_Pos;
pub const TAMP_IER_TAMP4IE: u32 = TAMP_IER_TAMP4IE_Msk;
pub const TAMP_IER_TAMP5IE_Pos: u32 = 4;
pub const TAMP_IER_TAMP5IE_Msk: u32 = 0x1 << TAMP_IER_TAMP5IE_Pos;
pub const TAMP_IER_TAMP5IE: u32 = TAMP_IER_TAMP5IE_Msk;
pub const TAMP_IER_TAMP6IE_Pos: u32 = 5;
pub const TAMP_IER_TAMP6IE_Msk: u32 = 0x1 << TAMP_IER_TAMP6IE_Pos;
pub const TAMP_IER_TAMP6IE: u32 = TAMP_IER_TAMP6IE_Msk;
pub const TAMP_IER_TAMP7IE_Pos: u32 = 6;
pub const TAMP_IER_TAMP7IE_Msk: u32 = 0x1 << TAMP_IER_TAMP7IE_Pos;
pub const TAMP_IER_TAMP7IE: u32 = TAMP_IER_TAMP7IE_Msk;
pub const TAMP_IER_TAMP8IE_Pos: u32 = 7;
pub const TAMP_IER_TAMP8IE_Msk: u32 = 0x1 << TAMP_IER_TAMP8IE_Pos;
pub const TAMP_IER_TAMP8IE: u32 = TAMP_IER_TAMP8IE_Msk;
pub const TAMP_IER_ITAMP1IE_Pos: u32 = 16;
pub const TAMP_IER_ITAMP1IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP1IE_Pos;
pub const TAMP_IER_ITAMP1IE: u32 = TAMP_IER_ITAMP1IE_Msk;
pub const TAMP_IER_ITAMP2IE_Pos: u32 = 17;
pub const TAMP_IER_ITAMP2IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP2IE_Pos;
pub const TAMP_IER_ITAMP2IE: u32 = TAMP_IER_ITAMP2IE_Msk;
pub const TAMP_IER_ITAMP3IE_Pos: u32 = 18;
pub const TAMP_IER_ITAMP3IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP3IE_Pos;
pub const TAMP_IER_ITAMP3IE: u32 = TAMP_IER_ITAMP3IE_Msk;
pub const TAMP_IER_ITAMP4IE_Pos: u32 = 19;
pub const TAMP_IER_ITAMP4IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP4IE_Pos;
pub const TAMP_IER_ITAMP4IE: u32 = TAMP_IER_ITAMP4IE_Msk;
pub const TAMP_IER_ITAMP5IE_Pos: u32 = 20;
pub const TAMP_IER_ITAMP5IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP5IE_Pos;
pub const TAMP_IER_ITAMP5IE: u32 = TAMP_IER_ITAMP5IE_Msk;
pub const TAMP_IER_ITAMP6IE_Pos: u32 = 21;
pub const TAMP_IER_ITAMP6IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP6IE_Pos;
pub const TAMP_IER_ITAMP6IE: u32 = TAMP_IER_ITAMP6IE_Msk;
pub const TAMP_IER_ITAMP7IE_Pos: u32 = 22;
pub const TAMP_IER_ITAMP7IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP7IE_Pos;
pub const TAMP_IER_ITAMP7IE: u32 = TAMP_IER_ITAMP7IE_Msk;
pub const TAMP_IER_ITAMP8IE_Pos: u32 = 23;
pub const TAMP_IER_ITAMP8IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP8IE_Pos;
pub const TAMP_IER_ITAMP8IE: u32 = TAMP_IER_ITAMP8IE_Msk;
pub const TAMP_IER_ITAMP9IE_Pos: u32 = 24;
pub const TAMP_IER_ITAMP9IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP9IE_Pos;
pub const TAMP_IER_ITAMP9IE: u32 = TAMP_IER_ITAMP9IE_Msk;
pub const TAMP_IER_ITAMP11IE_Pos: u32 = 26;
pub const TAMP_IER_ITAMP11IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP11IE_Pos;
pub const TAMP_IER_ITAMP11IE: u32 = TAMP_IER_ITAMP11IE_Msk;
pub const TAMP_IER_ITAMP15IE_Pos: u32 = 30;
pub const TAMP_IER_ITAMP15IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP15IE_Pos;
pub const TAMP_IER_ITAMP15IE: u32 = TAMP_IER_ITAMP15IE_Msk;
pub const TAMP_SR_TAMP1F_Pos: u32 = 0;
pub const TAMP_SR_TAMP1F_Msk: u32 = 0x1 << TAMP_SR_TAMP1F_Pos;
pub const TAMP_SR_TAMP1F: u32 = TAMP_SR_TAMP1F_Msk;
pub const TAMP_SR_TAMP2F_Pos: u32 = 1;
pub const TAMP_SR_TAMP2F_Msk: u32 = 0x1 << TAMP_SR_TAMP2F_Pos;
pub const TAMP_SR_TAMP2F: u32 = TAMP_SR_TAMP2F_Msk;
pub const TAMP_SR_TAMP3F_Pos: u32 = 2;
pub const TAMP_SR_TAMP3F_Msk: u32 = 0x1 << TAMP_SR_TAMP3F_Pos;
pub const TAMP_SR_TAMP3F: u32 = TAMP_SR_TAMP3F_Msk;
pub const TAMP_SR_TAMP4F_Pos: u32 = 3;
pub const TAMP_SR_TAMP4F_Msk: u32 = 0x1 << TAMP_SR_TAMP4F_Pos;
pub const TAMP_SR_TAMP4F: u32 = TAMP_SR_TAMP4F_Msk;
pub const TAMP_SR_TAMP5F_Pos: u32 = 4;
pub const TAMP_SR_TAMP5F_Msk: u32 = 0x1 << TAMP_SR_TAMP5F_Pos;
pub const TAMP_SR_TAMP5F: u32 = TAMP_SR_TAMP5F_Msk;
pub const TAMP_SR_TAMP6F_Pos: u32 = 5;
pub const TAMP_SR_TAMP6F_Msk: u32 = 0x1 << TAMP_SR_TAMP6F_Pos;
pub const TAMP_SR_TAMP6F: u32 = TAMP_SR_TAMP6F_Msk;
pub const TAMP_SR_TAMP7F_Pos: u32 = 6;
pub const TAMP_SR_TAMP7F_Msk: u32 = 0x1 << TAMP_SR_TAMP7F_Pos;
pub const TAMP_SR_TAMP7F: u32 = TAMP_SR_TAMP7F_Msk;
pub const TAMP_SR_TAMP8F_Pos: u32 = 7;
pub const TAMP_SR_TAMP8F_Msk: u32 = 0x1 << TAMP_SR_TAMP8F_Pos;
pub const TAMP_SR_TAMP8F: u32 = TAMP_SR_TAMP8F_Msk;
pub const TAMP_SR_ITAMP1F_Pos: u32 = 16;
pub const TAMP_SR_ITAMP1F_Msk: u32 = 0x1 << TAMP_SR_ITAMP1F_Pos;
pub const TAMP_SR_ITAMP1F: u32 = TAMP_SR_ITAMP1F_Msk;
pub const TAMP_SR_ITAMP2F_Pos: u32 = 17;
pub const TAMP_SR_ITAMP2F_Msk: u32 = 0x1 << TAMP_SR_ITAMP2F_Pos;
pub const TAMP_SR_ITAMP2F: u32 = TAMP_SR_ITAMP2F_Msk;
pub const TAMP_SR_ITAMP3F_Pos: u32 = 18;
pub const TAMP_SR_ITAMP3F_Msk: u32 = 0x1 << TAMP_SR_ITAMP3F_Pos;
pub const TAMP_SR_ITAMP3F: u32 = TAMP_SR_ITAMP3F_Msk;
pub const TAMP_SR_ITAMP4F_Pos: u32 = 19;
pub const TAMP_SR_ITAMP4F_Msk: u32 = 0x1 << TAMP_SR_ITAMP4F_Pos;
pub const TAMP_SR_ITAMP4F: u32 = TAMP_SR_ITAMP4F_Msk;
pub const TAMP_SR_ITAMP5F_Pos: u32 = 20;
pub const TAMP_SR_ITAMP5F_Msk: u32 = 0x1 << TAMP_SR_ITAMP5F_Pos;
pub const TAMP_SR_ITAMP5F: u32 = TAMP_SR_ITAMP5F_Msk;
pub const TAMP_SR_ITAMP6F_Pos: u32 = 21;
pub const TAMP_SR_ITAMP6F_Msk: u32 = 0x1 << TAMP_SR_ITAMP6F_Pos;
pub const TAMP_SR_ITAMP6F: u32 = TAMP_SR_ITAMP6F_Msk;
pub const TAMP_SR_ITAMP7F_Pos: u32 = 22;
pub const TAMP_SR_ITAMP7F_Msk: u32 = 0x1 << TAMP_SR_ITAMP7F_Pos;
pub const TAMP_SR_ITAMP7F: u32 = TAMP_SR_ITAMP7F_Msk;
pub const TAMP_SR_ITAMP8F_Pos: u32 = 23;
pub const TAMP_SR_ITAMP8F_Msk: u32 = 0x1 << TAMP_SR_ITAMP8F_Pos;
pub const TAMP_SR_ITAMP8F: u32 = TAMP_SR_ITAMP8F_Msk;
pub const TAMP_SR_ITAMP9F_Pos: u32 = 24;
pub const TAMP_SR_ITAMP9F_Msk: u32 = 0x1 << TAMP_SR_ITAMP9F_Pos;
pub const TAMP_SR_ITAMP9F: u32 = TAMP_SR_ITAMP9F_Msk;
pub const TAMP_SR_ITAMP11F_Pos: u32 = 26;
pub const TAMP_SR_ITAMP11F_Msk: u32 = 0x1 << TAMP_SR_ITAMP11F_Pos;
pub const TAMP_SR_ITAMP11F: u32 = TAMP_SR_ITAMP11F_Msk;
pub const TAMP_SR_ITAMP15F_Pos: u32 = 30;
pub const TAMP_SR_ITAMP15F_Msk: u32 = 0x1 << TAMP_SR_ITAMP15F_Pos;
pub const TAMP_SR_ITAMP15F: u32 = TAMP_SR_ITAMP15F_Msk;
pub const TAMP_MISR_TAMP1MF_Pos: u32 = 0;
pub const TAMP_MISR_TAMP1MF_Msk: u32 = 0x1 << TAMP_MISR_TAMP1MF_Pos;
pub const TAMP_MISR_TAMP1MF: u32 = TAMP_MISR_TAMP1MF_Msk;
pub const TAMP_MISR_TAMP2MF_Pos: u32 = 1;
pub const TAMP_MISR_TAMP2MF_Msk: u32 = 0x1 << TAMP_MISR_TAMP2MF_Pos;
pub const TAMP_MISR_TAMP2MF: u32 = TAMP_MISR_TAMP2MF_Msk;
pub const TAMP_MISR_TAMP3MF_Pos: u32 = 2;
pub const TAMP_MISR_TAMP3MF_Msk: u32 = 0x1 << TAMP_MISR_TAMP3MF_Pos;
pub const TAMP_MISR_TAMP3MF: u32 = TAMP_MISR_TAMP3MF_Msk;
pub const TAMP_MISR_TAMP4MF_Pos: u32 = 3;
pub const TAMP_MISR_TAMP4MF_Msk: u32 = 0x1 << TAMP_MISR_TAMP4MF_Pos;
pub const TAMP_MISR_TAMP4MF: u32 = TAMP_MISR_TAMP4MF_Msk;
pub const TAMP_MISR_TAMP5MF_Pos: u32 = 4;
pub const TAMP_MISR_TAMP5MF_Msk: u32 = 0x1 << TAMP_MISR_TAMP5MF_Pos;
pub const TAMP_MISR_TAMP5MF: u32 = TAMP_MISR_TAMP5MF_Msk;
pub const TAMP_MISR_TAMP6MF_Pos: u32 = 5;
pub const TAMP_MISR_TAMP6MF_Msk: u32 = 0x1 << TAMP_MISR_TAMP6MF_Pos;
pub const TAMP_MISR_TAMP6MF: u32 = TAMP_MISR_TAMP6MF_Msk;
pub const TAMP_MISR_TAMP7MF_Pos: u32 = 6;
pub const TAMP_MISR_TAMP7MF_Msk: u32 = 0x1 << TAMP_MISR_TAMP7MF_Pos;
pub const TAMP_MISR_TAMP7MF: u32 = TAMP_MISR_TAMP7MF_Msk;
pub const TAMP_MISR_TAMP8MF_Pos: u32 = 7;
pub const TAMP_MISR_TAMP8MF_Msk: u32 = 0x1 << TAMP_MISR_TAMP8MF_Pos;
pub const TAMP_MISR_TAMP8MF: u32 = TAMP_MISR_TAMP8MF_Msk;
pub const TAMP_MISR_ITAMP1MF_Pos: u32 = 16;
pub const TAMP_MISR_ITAMP1MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP1MF_Pos;
pub const TAMP_MISR_ITAMP1MF: u32 = TAMP_MISR_ITAMP1MF_Msk;
pub const TAMP_MISR_ITAMP2MF_Pos: u32 = 17;
pub const TAMP_MISR_ITAMP2MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP2MF_Pos;
pub const TAMP_MISR_ITAMP2MF: u32 = TAMP_MISR_ITAMP2MF_Msk;
pub const TAMP_MISR_ITAMP3MF_Pos: u32 = 18;
pub const TAMP_MISR_ITAMP3MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP3MF_Pos;
pub const TAMP_MISR_ITAMP3MF: u32 = TAMP_MISR_ITAMP3MF_Msk;
pub const TAMP_MISR_ITAMP4MF_Pos: u32 = 19;
pub const TAMP_MISR_ITAMP4MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP4MF_Pos;
pub const TAMP_MISR_ITAMP4MF: u32 = TAMP_MISR_ITAMP4MF_Msk;
pub const TAMP_MISR_ITAMP5MF_Pos: u32 = 20;
pub const TAMP_MISR_ITAMP5MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP5MF_Pos;
pub const TAMP_MISR_ITAMP5MF: u32 = TAMP_MISR_ITAMP5MF_Msk;
pub const TAMP_MISR_ITAMP6MF_Pos: u32 = 21;
pub const TAMP_MISR_ITAMP6MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP6MF_Pos;
pub const TAMP_MISR_ITAMP6MF: u32 = TAMP_MISR_ITAMP6MF_Msk;
pub const TAMP_MISR_ITAMP7MF_Pos: u32 = 22;
pub const TAMP_MISR_ITAMP7MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP7MF_Pos;
pub const TAMP_MISR_ITAMP7MF: u32 = TAMP_MISR_ITAMP7MF_Msk;
pub const TAMP_MISR_ITAMP8MF_Pos: u32 = 23;
pub const TAMP_MISR_ITAMP8MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP8MF_Pos;
pub const TAMP_MISR_ITAMP8MF: u32 = TAMP_MISR_ITAMP8MF_Msk;
pub const TAMP_MISR_ITAMP9MF_Pos: u32 = 24;
pub const TAMP_MISR_ITAMP9MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP9MF_Pos;
pub const TAMP_MISR_ITAMP9MF: u32 = TAMP_MISR_ITAMP9MF_Msk;
pub const TAMP_MISR_ITAMP11MF_Pos: u32 = 26;
pub const TAMP_MISR_ITAMP11MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP11MF_Pos;
pub const TAMP_MISR_ITAMP11MF: u32 = TAMP_MISR_ITAMP11MF_Msk;
pub const TAMP_MISR_ITAMP15MF_Pos: u32 = 30;
pub const TAMP_MISR_ITAMP15MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP15MF_Pos;
pub const TAMP_MISR_ITAMP15MF: u32 = TAMP_MISR_ITAMP15MF_Msk;
pub const TAMP_SCR_CTAMP1F_Pos: u32 = 0;
pub const TAMP_SCR_CTAMP1F_Msk: u32 = 0x1 << TAMP_SCR_CTAMP1F_Pos;
pub const TAMP_SCR_CTAMP1F: u32 = TAMP_SCR_CTAMP1F_Msk;
pub const TAMP_SCR_CTAMP2F_Pos: u32 = 1;
pub const TAMP_SCR_CTAMP2F_Msk: u32 = 0x1 << TAMP_SCR_CTAMP2F_Pos;
pub const TAMP_SCR_CTAMP2F: u32 = TAMP_SCR_CTAMP2F_Msk;
pub const TAMP_SCR_CTAMP3F_Pos: u32 = 2;
pub const TAMP_SCR_CTAMP3F_Msk: u32 = 0x1 << TAMP_SCR_CTAMP3F_Pos;
pub const TAMP_SCR_CTAMP3F: u32 = TAMP_SCR_CTAMP3F_Msk;
pub const TAMP_SCR_CTAMP4F_Pos: u32 = 3;
pub const TAMP_SCR_CTAMP4F_Msk: u32 = 0x1 << TAMP_SCR_CTAMP4F_Pos;
pub const TAMP_SCR_CTAMP4F: u32 = TAMP_SCR_CTAMP4F_Msk;
pub const TAMP_SCR_CTAMP5F_Pos: u32 = 4;
pub const TAMP_SCR_CTAMP5F_Msk: u32 = 0x1 << TAMP_SCR_CTAMP5F_Pos;
pub const TAMP_SCR_CTAMP5F: u32 = TAMP_SCR_CTAMP5F_Msk;
pub const TAMP_SCR_CTAMP6F_Pos: u32 = 5;
pub const TAMP_SCR_CTAMP6F_Msk: u32 = 0x1 << TAMP_SCR_CTAMP6F_Pos;
pub const TAMP_SCR_CTAMP6F: u32 = TAMP_SCR_CTAMP6F_Msk;
pub const TAMP_SCR_CTAMP7F_Pos: u32 = 6;
pub const TAMP_SCR_CTAMP7F_Msk: u32 = 0x1 << TAMP_SCR_CTAMP7F_Pos;
pub const TAMP_SCR_CTAMP7F: u32 = TAMP_SCR_CTAMP7F_Msk;
pub const TAMP_SCR_CTAMP8F_Pos: u32 = 7;
pub const TAMP_SCR_CTAMP8F_Msk: u32 = 0x1 << TAMP_SCR_CTAMP8F_Pos;
pub const TAMP_SCR_CTAMP8F: u32 = TAMP_SCR_CTAMP8F_Msk;
pub const TAMP_SCR_CITAMP1F_Pos: u32 = 16;
pub const TAMP_SCR_CITAMP1F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP1F_Pos;
pub const TAMP_SCR_CITAMP1F: u32 = TAMP_SCR_CITAMP1F_Msk;
pub const TAMP_SCR_CITAMP2F_Pos: u32 = 17;
pub const TAMP_SCR_CITAMP2F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP2F_Pos;
pub const TAMP_SCR_CITAMP2F: u32 = TAMP_SCR_CITAMP2F_Msk;
pub const TAMP_SCR_CITAMP3F_Pos: u32 = 18;
pub const TAMP_SCR_CITAMP3F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP3F_Pos;
pub const TAMP_SCR_CITAMP3F: u32 = TAMP_SCR_CITAMP3F_Msk;
pub const TAMP_SCR_CITAMP4F_Pos: u32 = 19;
pub const TAMP_SCR_CITAMP4F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP4F_Pos;
pub const TAMP_SCR_CITAMP4F: u32 = TAMP_SCR_CITAMP4F_Msk;
pub const TAMP_SCR_CITAMP5F_Pos: u32 = 20;
pub const TAMP_SCR_CITAMP5F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP5F_Pos;
pub const TAMP_SCR_CITAMP5F: u32 = TAMP_SCR_CITAMP5F_Msk;
pub const TAMP_SCR_CITAMP6F_Pos: u32 = 21;
pub const TAMP_SCR_CITAMP6F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP6F_Pos;
pub const TAMP_SCR_CITAMP6F: u32 = TAMP_SCR_CITAMP6F_Msk;
pub const TAMP_SCR_CITAMP7F_Pos: u32 = 22;
pub const TAMP_SCR_CITAMP7F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP7F_Pos;
pub const TAMP_SCR_CITAMP7F: u32 = TAMP_SCR_CITAMP7F_Msk;
pub const TAMP_SCR_CITAMP8F_Pos: u32 = 23;
pub const TAMP_SCR_CITAMP8F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP8F_Pos;
pub const TAMP_SCR_CITAMP8F: u32 = TAMP_SCR_CITAMP8F_Msk;
pub const TAMP_SCR_CITAMP9F_Pos: u32 = 24;
pub const TAMP_SCR_CITAMP9F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP9F_Pos;
pub const TAMP_SCR_CITAMP9F: u32 = TAMP_SCR_CITAMP9F_Msk;
pub const TAMP_SCR_CITAMP11F_Pos: u32 = 26;
pub const TAMP_SCR_CITAMP11F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP11F_Pos;
pub const TAMP_SCR_CITAMP11F: u32 = TAMP_SCR_CITAMP11F_Msk;
pub const TAMP_SCR_CITAMP15F_Pos: u32 = 30;
pub const TAMP_SCR_CITAMP15F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP15F_Pos;
pub const TAMP_SCR_CITAMP15F: u32 = TAMP_SCR_CITAMP15F_Msk;
pub const TAMP_COUNT1R_COUNT_Pos: u32 = 0;
pub const TAMP_COUNT1R_COUNT_Msk: u32 = 0xFFFFFFFF << TAMP_COUNT1R_COUNT_Pos;
pub const TAMP_COUNT1R_COUNT: u32 = TAMP_COUNT1R_COUNT_Msk;
pub const TAMP_RPCFGR_RPCFG0_Pos: u32 = 0;
pub const TAMP_RPCFGR_RPCFG0_Msk: u32 = 0x1 << TAMP_RPCFGR_RPCFG0_Pos;
pub const TAMP_RPCFGR_RPCFG0: u32 = TAMP_RPCFGR_RPCFG0_Msk;
pub const TAMP_BKP0R_Pos: u32 = 0;
pub const TAMP_BKP0R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP0R_Pos;
pub const TAMP_BKP0R: u32 = TAMP_BKP0R_Msk;
pub const TAMP_BKP1R_Pos: u32 = 0;
pub const TAMP_BKP1R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP1R_Pos;
pub const TAMP_BKP1R: u32 = TAMP_BKP1R_Msk;
pub const TAMP_BKP2R_Pos: u32 = 0;
pub const TAMP_BKP2R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP2R_Pos;
pub const TAMP_BKP2R: u32 = TAMP_BKP2R_Msk;
pub const TAMP_BKP3R_Pos: u32 = 0;
pub const TAMP_BKP3R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP3R_Pos;
pub const TAMP_BKP3R: u32 = TAMP_BKP3R_Msk;
pub const TAMP_BKP4R_Pos: u32 = 0;
pub const TAMP_BKP4R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP4R_Pos;
pub const TAMP_BKP4R: u32 = TAMP_BKP4R_Msk;
pub const TAMP_BKP5R_Pos: u32 = 0;
pub const TAMP_BKP5R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP5R_Pos;
pub const TAMP_BKP5R: u32 = TAMP_BKP5R_Msk;
pub const TAMP_BKP6R_Pos: u32 = 0;
pub const TAMP_BKP6R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP6R_Pos;
pub const TAMP_BKP6R: u32 = TAMP_BKP6R_Msk;
pub const TAMP_BKP7R_Pos: u32 = 0;
pub const TAMP_BKP7R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP7R_Pos;
pub const TAMP_BKP7R: u32 = TAMP_BKP7R_Msk;
pub const TAMP_BKP8R_Pos: u32 = 0;
pub const TAMP_BKP8R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP8R_Pos;
pub const TAMP_BKP8R: u32 = TAMP_BKP8R_Msk;
pub const TAMP_BKP9R_Pos: u32 = 0;
pub const TAMP_BKP9R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP9R_Pos;
pub const TAMP_BKP9R: u32 = TAMP_BKP9R_Msk;
pub const TAMP_BKP10R_Pos: u32 = 0;
pub const TAMP_BKP10R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP10R_Pos;
pub const TAMP_BKP10R: u32 = TAMP_BKP10R_Msk;
pub const TAMP_BKP11R_Pos: u32 = 0;
pub const TAMP_BKP11R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP11R_Pos;
pub const TAMP_BKP11R: u32 = TAMP_BKP11R_Msk;
pub const TAMP_BKP12R_Pos: u32 = 0;
pub const TAMP_BKP12R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP12R_Pos;
pub const TAMP_BKP12R: u32 = TAMP_BKP12R_Msk;
pub const TAMP_BKP13R_Pos: u32 = 0;
pub const TAMP_BKP13R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP13R_Pos;
pub const TAMP_BKP13R: u32 = TAMP_BKP13R_Msk;
pub const TAMP_BKP14R_Pos: u32 = 0;
pub const TAMP_BKP14R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP14R_Pos;
pub const TAMP_BKP14R: u32 = TAMP_BKP14R_Msk;
pub const TAMP_BKP15R_Pos: u32 = 0;
pub const TAMP_BKP15R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP15R_Pos;
pub const TAMP_BKP15R: u32 = TAMP_BKP15R_Msk;
pub const TAMP_BKP16R_Pos: u32 = 0;
pub const TAMP_BKP16R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP16R_Pos;
pub const TAMP_BKP16R: u32 = TAMP_BKP16R_Msk;
pub const TAMP_BKP17R_Pos: u32 = 0;
pub const TAMP_BKP17R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP17R_Pos;
pub const TAMP_BKP17R: u32 = TAMP_BKP17R_Msk;
pub const TAMP_BKP18R_Pos: u32 = 0;
pub const TAMP_BKP18R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP18R_Pos;
pub const TAMP_BKP18R: u32 = TAMP_BKP18R_Msk;
pub const TAMP_BKP19R_Pos: u32 = 0;
pub const TAMP_BKP19R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP19R_Pos;
pub const TAMP_BKP19R: u32 = TAMP_BKP19R_Msk;
pub const TAMP_BKP20R_Pos: u32 = 0;
pub const TAMP_BKP20R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP20R_Pos;
pub const TAMP_BKP20R: u32 = TAMP_BKP20R_Msk;
pub const TAMP_BKP21R_Pos: u32 = 0;
pub const TAMP_BKP21R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP21R_Pos;
pub const TAMP_BKP21R: u32 = TAMP_BKP21R_Msk;
pub const TAMP_BKP22R_Pos: u32 = 0;
pub const TAMP_BKP22R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP22R_Pos;
pub const TAMP_BKP22R: u32 = TAMP_BKP22R_Msk;
pub const TAMP_BKP23R_Pos: u32 = 0;
pub const TAMP_BKP23R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP23R_Pos;
pub const TAMP_BKP23R: u32 = TAMP_BKP23R_Msk;
pub const TAMP_BKP24R_Pos: u32 = 0;
pub const TAMP_BKP24R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP24R_Pos;
pub const TAMP_BKP24R: u32 = TAMP_BKP24R_Msk;
pub const TAMP_BKP25R_Pos: u32 = 0;
pub const TAMP_BKP25R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP25R_Pos;
pub const TAMP_BKP25R: u32 = TAMP_BKP25R_Msk;
pub const TAMP_BKP26R_Pos: u32 = 0;
pub const TAMP_BKP26R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP26R_Pos;
pub const TAMP_BKP26R: u32 = TAMP_BKP26R_Msk;
pub const TAMP_BKP27R_Pos: u32 = 0;
pub const TAMP_BKP27R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP27R_Pos;
pub const TAMP_BKP27R: u32 = TAMP_BKP27R_Msk;
pub const TAMP_BKP28R_Pos: u32 = 0;
pub const TAMP_BKP28R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP28R_Pos;
pub const TAMP_BKP28R: u32 = TAMP_BKP28R_Msk;
pub const TAMP_BKP29R_Pos: u32 = 0;
pub const TAMP_BKP29R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP29R_Pos;
pub const TAMP_BKP29R: u32 = TAMP_BKP29R_Msk;
pub const TAMP_BKP30R_Pos: u32 = 0;
pub const TAMP_BKP30R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP30R_Pos;
pub const TAMP_BKP30R: u32 = TAMP_BKP30R_Msk;
pub const TAMP_BKP31R_Pos: u32 = 0;
pub const TAMP_BKP31R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP31R_Pos;
pub const TAMP_BKP31R: u32 = TAMP_BKP31R_Msk;
pub const TIM_CR1_CEN_Pos: u32 = 0;
pub const TIM_CR1_CEN_Msk: u32 = 0x1 << TIM_CR1_CEN_Pos;
pub const TIM_CR1_CEN: u32 = TIM_CR1_CEN_Msk;
pub const TIM_CR1_UDIS_Pos: u32 = 1;
pub const TIM_CR1_UDIS_Msk: u32 = 0x1 << TIM_CR1_UDIS_Pos;
pub const TIM_CR1_UDIS: u32 = TIM_CR1_UDIS_Msk;
pub const TIM_CR1_URS_Pos: u32 = 2;
pub const TIM_CR1_URS_Msk: u32 = 0x1 << TIM_CR1_URS_Pos;
pub const TIM_CR1_URS: u32 = TIM_CR1_URS_Msk;
pub const TIM_CR1_OPM_Pos: u32 = 3;
pub const TIM_CR1_OPM_Msk: u32 = 0x1 << TIM_CR1_OPM_Pos;
pub const TIM_CR1_OPM: u32 = TIM_CR1_OPM_Msk;
pub const TIM_CR1_DIR_Pos: u32 = 4;
pub const TIM_CR1_DIR_Msk: u32 = 0x1 << TIM_CR1_DIR_Pos;
pub const TIM_CR1_DIR: u32 = TIM_CR1_DIR_Msk;
pub const TIM_CR1_CMS_Pos: u32 = 5;
pub const TIM_CR1_CMS_Msk: u32 = 0x3 << TIM_CR1_CMS_Pos;
pub const TIM_CR1_CMS: u32 = TIM_CR1_CMS_Msk;
pub const TIM_CR1_CMS_0: u32 = 0x1 << TIM_CR1_CMS_Pos;
pub const TIM_CR1_CMS_1: u32 = 0x2 << TIM_CR1_CMS_Pos;
pub const TIM_CR1_ARPE_Pos: u32 = 7;
pub const TIM_CR1_ARPE_Msk: u32 = 0x1 << TIM_CR1_ARPE_Pos;
pub const TIM_CR1_ARPE: u32 = TIM_CR1_ARPE_Msk;
pub const TIM_CR1_CKD_Pos: u32 = 8;
pub const TIM_CR1_CKD_Msk: u32 = 0x3 << TIM_CR1_CKD_Pos;
pub const TIM_CR1_CKD: u32 = TIM_CR1_CKD_Msk;
pub const TIM_CR1_CKD_0: u32 = 0x1 << TIM_CR1_CKD_Pos;
pub const TIM_CR1_CKD_1: u32 = 0x2 << TIM_CR1_CKD_Pos;
pub const TIM_CR1_UIFREMAP_Pos: u32 = 11;
pub const TIM_CR1_UIFREMAP_Msk: u32 = 0x1 << TIM_CR1_UIFREMAP_Pos;
pub const TIM_CR1_UIFREMAP: u32 = TIM_CR1_UIFREMAP_Msk;
pub const TIM_CR1_DITHEN_Pos: u32 = 12;
pub const TIM_CR1_DITHEN_Msk: u32 = 0x1 << TIM_CR1_DITHEN_Pos;
pub const TIM_CR1_DITHEN: u32 = TIM_CR1_DITHEN_Msk;
pub const TIM_CR2_CCPC_Pos: u32 = 0;
pub const TIM_CR2_CCPC_Msk: u32 = 0x1 << TIM_CR2_CCPC_Pos;
pub const TIM_CR2_CCPC: u32 = TIM_CR2_CCPC_Msk;
pub const TIM_CR2_CCUS_Pos: u32 = 2;
pub const TIM_CR2_CCUS_Msk: u32 = 0x1 << TIM_CR2_CCUS_Pos;
pub const TIM_CR2_CCUS: u32 = TIM_CR2_CCUS_Msk;
pub const TIM_CR2_CCDS_Pos: u32 = 3;
pub const TIM_CR2_CCDS_Msk: u32 = 0x1 << TIM_CR2_CCDS_Pos;
pub const TIM_CR2_CCDS: u32 = TIM_CR2_CCDS_Msk;
pub const TIM_CR2_MMS_Pos: u32 = 4;
pub const TIM_CR2_MMS_Msk: u32 = 0x200007 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS: u32 = TIM_CR2_MMS_Msk;
pub const TIM_CR2_MMS_0: u32 = 0x000001 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS_1: u32 = 0x000002 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS_2: u32 = 0x000004 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS_3: u32 = 0x200000 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_TI1S_Pos: u32 = 7;
pub const TIM_CR2_TI1S_Msk: u32 = 0x1 << TIM_CR2_TI1S_Pos;
pub const TIM_CR2_TI1S: u32 = TIM_CR2_TI1S_Msk;
pub const TIM_CR2_OIS1_Pos: u32 = 8;
pub const TIM_CR2_OIS1_Msk: u32 = 0x1 << TIM_CR2_OIS1_Pos;
pub const TIM_CR2_OIS1: u32 = TIM_CR2_OIS1_Msk;
pub const TIM_CR2_OIS1N_Pos: u32 = 9;
pub const TIM_CR2_OIS1N_Msk: u32 = 0x1 << TIM_CR2_OIS1N_Pos;
pub const TIM_CR2_OIS1N: u32 = TIM_CR2_OIS1N_Msk;
pub const TIM_CR2_OIS2_Pos: u32 = 10;
pub const TIM_CR2_OIS2_Msk: u32 = 0x1 << TIM_CR2_OIS2_Pos;
pub const TIM_CR2_OIS2: u32 = TIM_CR2_OIS2_Msk;
pub const TIM_CR2_OIS2N_Pos: u32 = 11;
pub const TIM_CR2_OIS2N_Msk: u32 = 0x1 << TIM_CR2_OIS2N_Pos;
pub const TIM_CR2_OIS2N: u32 = TIM_CR2_OIS2N_Msk;
pub const TIM_CR2_OIS3_Pos: u32 = 12;
pub const TIM_CR2_OIS3_Msk: u32 = 0x1 << TIM_CR2_OIS3_Pos;
pub const TIM_CR2_OIS3: u32 = TIM_CR2_OIS3_Msk;
pub const TIM_CR2_OIS3N_Pos: u32 = 13;
pub const TIM_CR2_OIS3N_Msk: u32 = 0x1 << TIM_CR2_OIS3N_Pos;
pub const TIM_CR2_OIS3N: u32 = TIM_CR2_OIS3N_Msk;
pub const TIM_CR2_OIS4_Pos: u32 = 14;
pub const TIM_CR2_OIS4_Msk: u32 = 0x1 << TIM_CR2_OIS4_Pos;
pub const TIM_CR2_OIS4: u32 = TIM_CR2_OIS4_Msk;
pub const TIM_CR2_OIS4N_Pos: u32 = 15;
pub const TIM_CR2_OIS4N_Msk: u32 = 0x1 << TIM_CR2_OIS4N_Pos;
pub const TIM_CR2_OIS4N: u32 = TIM_CR2_OIS4N_Msk;
pub const TIM_CR2_OIS5_Pos: u32 = 16;
pub const TIM_CR2_OIS5_Msk: u32 = 0x1 << TIM_CR2_OIS5_Pos;
pub const TIM_CR2_OIS5: u32 = TIM_CR2_OIS5_Msk;
pub const TIM_CR2_OIS6_Pos: u32 = 18;
pub const TIM_CR2_OIS6_Msk: u32 = 0x1 << TIM_CR2_OIS6_Pos;
pub const TIM_CR2_OIS6: u32 = TIM_CR2_OIS6_Msk;
pub const TIM_CR2_MMS2_Pos: u32 = 20;
pub const TIM_CR2_MMS2_Msk: u32 = 0xF << TIM_CR2_MMS2_Pos;
pub const TIM_CR2_MMS2: u32 = TIM_CR2_MMS2_Msk;
pub const TIM_CR2_MMS2_0: u32 = 0x1 << TIM_CR2_MMS2_Pos;
pub const TIM_CR2_MMS2_1: u32 = 0x2 << TIM_CR2_MMS2_Pos;
pub const TIM_CR2_MMS2_2: u32 = 0x4 << TIM_CR2_MMS2_Pos;
pub const TIM_CR2_MMS2_3: u32 = 0x8 << TIM_CR2_MMS2_Pos;
pub const TIM_SMCR_SMS_Pos: u32 = 0;
pub const TIM_SMCR_SMS_Msk: u32 = 0x10007 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS: u32 = TIM_SMCR_SMS_Msk;
pub const TIM_SMCR_SMS_0: u32 = 0x00001 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS_1: u32 = 0x00002 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS_2: u32 = 0x00004 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS_3: u32 = 0x10000 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_TS_Pos: u32 = 4;
pub const TIM_SMCR_TS_Msk: u32 = 0x30007 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS: u32 = TIM_SMCR_TS_Msk;
pub const TIM_SMCR_TS_0: u32 = 0x00001 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS_1: u32 = 0x00002 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS_2: u32 = 0x00004 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS_3: u32 = 0x10000 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS_4: u32 = 0x20000 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_MSM_Pos: u32 = 7;
pub const TIM_SMCR_MSM_Msk: u32 = 0x1 << TIM_SMCR_MSM_Pos;
pub const TIM_SMCR_MSM: u32 = TIM_SMCR_MSM_Msk;
pub const TIM_SMCR_ETF_Pos: u32 = 8;
pub const TIM_SMCR_ETF_Msk: u32 = 0xF << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF: u32 = TIM_SMCR_ETF_Msk;
pub const TIM_SMCR_ETF_0: u32 = 0x1 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF_1: u32 = 0x2 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF_2: u32 = 0x4 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF_3: u32 = 0x8 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETPS_Pos: u32 = 12;
pub const TIM_SMCR_ETPS_Msk: u32 = 0x3 << TIM_SMCR_ETPS_Pos;
pub const TIM_SMCR_ETPS: u32 = TIM_SMCR_ETPS_Msk;
pub const TIM_SMCR_ETPS_0: u32 = 0x1 << TIM_SMCR_ETPS_Pos;
pub const TIM_SMCR_ETPS_1: u32 = 0x2 << TIM_SMCR_ETPS_Pos;
pub const TIM_SMCR_ECE_Pos: u32 = 14;
pub const TIM_SMCR_ECE_Msk: u32 = 0x1 << TIM_SMCR_ECE_Pos;
pub const TIM_SMCR_ECE: u32 = TIM_SMCR_ECE_Msk;
pub const TIM_SMCR_ETP_Pos: u32 = 15;
pub const TIM_SMCR_ETP_Msk: u32 = 0x1 << TIM_SMCR_ETP_Pos;
pub const TIM_SMCR_ETP: u32 = TIM_SMCR_ETP_Msk;
pub const TIM_SMCR_SMSPE_Pos: u32 = 24;
pub const TIM_SMCR_SMSPE_Msk: u32 = 0x1 << TIM_SMCR_SMSPE_Pos;
pub const TIM_SMCR_SMSPE: u32 = TIM_SMCR_SMSPE_Msk;
pub const TIM_SMCR_SMSPS_Pos: u32 = 25;
pub const TIM_SMCR_SMSPS_Msk: u32 = 0x1 << TIM_SMCR_SMSPS_Pos;
pub const TIM_SMCR_SMSPS: u32 = TIM_SMCR_SMSPS_Msk;
pub const TIM_DIER_UIE_Pos: u32 = 0;
pub const TIM_DIER_UIE_Msk: u32 = 0x1 << TIM_DIER_UIE_Pos;
pub const TIM_DIER_UIE: u32 = TIM_DIER_UIE_Msk;
pub const TIM_DIER_CC1IE_Pos: u32 = 1;
pub const TIM_DIER_CC1IE_Msk: u32 = 0x1 << TIM_DIER_CC1IE_Pos;
pub const TIM_DIER_CC1IE: u32 = TIM_DIER_CC1IE_Msk;
pub const TIM_DIER_CC2IE_Pos: u32 = 2;
pub const TIM_DIER_CC2IE_Msk: u32 = 0x1 << TIM_DIER_CC2IE_Pos;
pub const TIM_DIER_CC2IE: u32 = TIM_DIER_CC2IE_Msk;
pub const TIM_DIER_CC3IE_Pos: u32 = 3;
pub const TIM_DIER_CC3IE_Msk: u32 = 0x1 << TIM_DIER_CC3IE_Pos;
pub const TIM_DIER_CC3IE: u32 = TIM_DIER_CC3IE_Msk;
pub const TIM_DIER_CC4IE_Pos: u32 = 4;
pub const TIM_DIER_CC4IE_Msk: u32 = 0x1 << TIM_DIER_CC4IE_Pos;
pub const TIM_DIER_CC4IE: u32 = TIM_DIER_CC4IE_Msk;
pub const TIM_DIER_COMIE_Pos: u32 = 5;
pub const TIM_DIER_COMIE_Msk: u32 = 0x1 << TIM_DIER_COMIE_Pos;
pub const TIM_DIER_COMIE: u32 = TIM_DIER_COMIE_Msk;
pub const TIM_DIER_TIE_Pos: u32 = 6;
pub const TIM_DIER_TIE_Msk: u32 = 0x1 << TIM_DIER_TIE_Pos;
pub const TIM_DIER_TIE: u32 = TIM_DIER_TIE_Msk;
pub const TIM_DIER_BIE_Pos: u32 = 7;
pub const TIM_DIER_BIE_Msk: u32 = 0x1 << TIM_DIER_BIE_Pos;
pub const TIM_DIER_BIE: u32 = TIM_DIER_BIE_Msk;
pub const TIM_DIER_UDE_Pos: u32 = 8;
pub const TIM_DIER_UDE_Msk: u32 = 0x1 << TIM_DIER_UDE_Pos;
pub const TIM_DIER_UDE: u32 = TIM_DIER_UDE_Msk;
pub const TIM_DIER_CC1DE_Pos: u32 = 9;
pub const TIM_DIER_CC1DE_Msk: u32 = 0x1 << TIM_DIER_CC1DE_Pos;
pub const TIM_DIER_CC1DE: u32 = TIM_DIER_CC1DE_Msk;
pub const TIM_DIER_CC2DE_Pos: u32 = 10;
pub const TIM_DIER_CC2DE_Msk: u32 = 0x1 << TIM_DIER_CC2DE_Pos;
pub const TIM_DIER_CC2DE: u32 = TIM_DIER_CC2DE_Msk;
pub const TIM_DIER_CC3DE_Pos: u32 = 11;
pub const TIM_DIER_CC3DE_Msk: u32 = 0x1 << TIM_DIER_CC3DE_Pos;
pub const TIM_DIER_CC3DE: u32 = TIM_DIER_CC3DE_Msk;
pub const TIM_DIER_CC4DE_Pos: u32 = 12;
pub const TIM_DIER_CC4DE_Msk: u32 = 0x1 << TIM_DIER_CC4DE_Pos;
pub const TIM_DIER_CC4DE: u32 = TIM_DIER_CC4DE_Msk;
pub const TIM_DIER_COMDE_Pos: u32 = 13;
pub const TIM_DIER_COMDE_Msk: u32 = 0x1 << TIM_DIER_COMDE_Pos;
pub const TIM_DIER_COMDE: u32 = TIM_DIER_COMDE_Msk;
pub const TIM_DIER_TDE_Pos: u32 = 14;
pub const TIM_DIER_TDE_Msk: u32 = 0x1 << TIM_DIER_TDE_Pos;
pub const TIM_DIER_TDE: u32 = TIM_DIER_TDE_Msk;
pub const TIM_DIER_IDXIE_Pos: u32 = 20;
pub const TIM_DIER_IDXIE_Msk: u32 = 0x1 << TIM_DIER_IDXIE_Pos;
pub const TIM_DIER_IDXIE: u32 = TIM_DIER_IDXIE_Msk;
pub const TIM_DIER_DIRIE_Pos: u32 = 21;
pub const TIM_DIER_DIRIE_Msk: u32 = 0x1 << TIM_DIER_DIRIE_Pos;
pub const TIM_DIER_DIRIE: u32 = TIM_DIER_DIRIE_Msk;
pub const TIM_DIER_IERRIE_Pos: u32 = 22;
pub const TIM_DIER_IERRIE_Msk: u32 = 0x1 << TIM_DIER_IERRIE_Pos;
pub const TIM_DIER_IERRIE: u32 = TIM_DIER_IERRIE_Msk;
pub const TIM_DIER_TERRIE_Pos: u32 = 23;
pub const TIM_DIER_TERRIE_Msk: u32 = 0x1 << TIM_DIER_TERRIE_Pos;
pub const TIM_DIER_TERRIE: u32 = TIM_DIER_TERRIE_Msk;
pub const TIM_SR_UIF_Pos: u32 = 0;
pub const TIM_SR_UIF_Msk: u32 = 0x1 << TIM_SR_UIF_Pos;
pub const TIM_SR_UIF: u32 = TIM_SR_UIF_Msk;
pub const TIM_SR_CC1IF_Pos: u32 = 1;
pub const TIM_SR_CC1IF_Msk: u32 = 0x1 << TIM_SR_CC1IF_Pos;
pub const TIM_SR_CC1IF: u32 = TIM_SR_CC1IF_Msk;
pub const TIM_SR_CC2IF_Pos: u32 = 2;
pub const TIM_SR_CC2IF_Msk: u32 = 0x1 << TIM_SR_CC2IF_Pos;
pub const TIM_SR_CC2IF: u32 = TIM_SR_CC2IF_Msk;
pub const TIM_SR_CC3IF_Pos: u32 = 3;
pub const TIM_SR_CC3IF_Msk: u32 = 0x1 << TIM_SR_CC3IF_Pos;
pub const TIM_SR_CC3IF: u32 = TIM_SR_CC3IF_Msk;
pub const TIM_SR_CC4IF_Pos: u32 = 4;
pub const TIM_SR_CC4IF_Msk: u32 = 0x1 << TIM_SR_CC4IF_Pos;
pub const TIM_SR_CC4IF: u32 = TIM_SR_CC4IF_Msk;
pub const TIM_SR_COMIF_Pos: u32 = 5;
pub const TIM_SR_COMIF_Msk: u32 = 0x1 << TIM_SR_COMIF_Pos;
pub const TIM_SR_COMIF: u32 = TIM_SR_COMIF_Msk;
pub const TIM_SR_TIF_Pos: u32 = 6;
pub const TIM_SR_TIF_Msk: u32 = 0x1 << TIM_SR_TIF_Pos;
pub const TIM_SR_TIF: u32 = TIM_SR_TIF_Msk;
pub const TIM_SR_BIF_Pos: u32 = 7;
pub const TIM_SR_BIF_Msk: u32 = 0x1 << TIM_SR_BIF_Pos;
pub const TIM_SR_BIF: u32 = TIM_SR_BIF_Msk;
pub const TIM_SR_B2IF_Pos: u32 = 8;
pub const TIM_SR_B2IF_Msk: u32 = 0x1 << TIM_SR_B2IF_Pos;
pub const TIM_SR_B2IF: u32 = TIM_SR_B2IF_Msk;
pub const TIM_SR_CC1OF_Pos: u32 = 9;
pub const TIM_SR_CC1OF_Msk: u32 = 0x1 << TIM_SR_CC1OF_Pos;
pub const TIM_SR_CC1OF: u32 = TIM_SR_CC1OF_Msk;
pub const TIM_SR_CC2OF_Pos: u32 = 10;
pub const TIM_SR_CC2OF_Msk: u32 = 0x1 << TIM_SR_CC2OF_Pos;
pub const TIM_SR_CC2OF: u32 = TIM_SR_CC2OF_Msk;
pub const TIM_SR_CC3OF_Pos: u32 = 11;
pub const TIM_SR_CC3OF_Msk: u32 = 0x1 << TIM_SR_CC3OF_Pos;
pub const TIM_SR_CC3OF: u32 = TIM_SR_CC3OF_Msk;
pub const TIM_SR_CC4OF_Pos: u32 = 12;
pub const TIM_SR_CC4OF_Msk: u32 = 0x1 << TIM_SR_CC4OF_Pos;
pub const TIM_SR_CC4OF: u32 = TIM_SR_CC4OF_Msk;
pub const TIM_SR_SBIF_Pos: u32 = 13;
pub const TIM_SR_SBIF_Msk: u32 = 0x1 << TIM_SR_SBIF_Pos;
pub const TIM_SR_SBIF: u32 = TIM_SR_SBIF_Msk;
pub const TIM_SR_CC5IF_Pos: u32 = 16;
pub const TIM_SR_CC5IF_Msk: u32 = 0x1 << TIM_SR_CC5IF_Pos;
pub const TIM_SR_CC5IF: u32 = TIM_SR_CC5IF_Msk;
pub const TIM_SR_CC6IF_Pos: u32 = 17;
pub const TIM_SR_CC6IF_Msk: u32 = 0x1 << TIM_SR_CC6IF_Pos;
pub const TIM_SR_CC6IF: u32 = TIM_SR_CC6IF_Msk;
pub const TIM_SR_IDXF_Pos: u32 = 20;
pub const TIM_SR_IDXF_Msk: u32 = 0x1 << TIM_SR_IDXF_Pos;
pub const TIM_SR_IDXF: u32 = TIM_SR_IDXF_Msk;
pub const TIM_SR_DIRF_Pos: u32 = 21;
pub const TIM_SR_DIRF_Msk: u32 = 0x1 << TIM_SR_DIRF_Pos;
pub const TIM_SR_DIRF: u32 = TIM_SR_DIRF_Msk;
pub const TIM_SR_IERRF_Pos: u32 = 22;
pub const TIM_SR_IERRF_Msk: u32 = 0x1 << TIM_SR_IERRF_Pos;
pub const TIM_SR_IERRF: u32 = TIM_SR_IERRF_Msk;
pub const TIM_SR_TERRF_Pos: u32 = 23;
pub const TIM_SR_TERRF_Msk: u32 = 0x1 << TIM_SR_TERRF_Pos;
pub const TIM_SR_TERRF: u32 = TIM_SR_TERRF_Msk;
pub const TIM_EGR_UG_Pos: u32 = 0;
pub const TIM_EGR_UG_Msk: u32 = 0x1 << TIM_EGR_UG_Pos;
pub const TIM_EGR_UG: u32 = TIM_EGR_UG_Msk;
pub const TIM_EGR_CC1G_Pos: u32 = 1;
pub const TIM_EGR_CC1G_Msk: u32 = 0x1 << TIM_EGR_CC1G_Pos;
pub const TIM_EGR_CC1G: u32 = TIM_EGR_CC1G_Msk;
pub const TIM_EGR_CC2G_Pos: u32 = 2;
pub const TIM_EGR_CC2G_Msk: u32 = 0x1 << TIM_EGR_CC2G_Pos;
pub const TIM_EGR_CC2G: u32 = TIM_EGR_CC2G_Msk;
pub const TIM_EGR_CC3G_Pos: u32 = 3;
pub const TIM_EGR_CC3G_Msk: u32 = 0x1 << TIM_EGR_CC3G_Pos;
pub const TIM_EGR_CC3G: u32 = TIM_EGR_CC3G_Msk;
pub const TIM_EGR_CC4G_Pos: u32 = 4;
pub const TIM_EGR_CC4G_Msk: u32 = 0x1 << TIM_EGR_CC4G_Pos;
pub const TIM_EGR_CC4G: u32 = TIM_EGR_CC4G_Msk;
pub const TIM_EGR_COMG_Pos: u32 = 5;
pub const TIM_EGR_COMG_Msk: u32 = 0x1 << TIM_EGR_COMG_Pos;
pub const TIM_EGR_COMG: u32 = TIM_EGR_COMG_Msk;
pub const TIM_EGR_TG_Pos: u32 = 6;
pub const TIM_EGR_TG_Msk: u32 = 0x1 << TIM_EGR_TG_Pos;
pub const TIM_EGR_TG: u32 = TIM_EGR_TG_Msk;
pub const TIM_EGR_BG_Pos: u32 = 7;
pub const TIM_EGR_BG_Msk: u32 = 0x1 << TIM_EGR_BG_Pos;
pub const TIM_EGR_BG: u32 = TIM_EGR_BG_Msk;
pub const TIM_EGR_B2G_Pos: u32 = 8;
pub const TIM_EGR_B2G_Msk: u32 = 0x1 << TIM_EGR_B2G_Pos;
pub const TIM_EGR_B2G: u32 = TIM_EGR_B2G_Msk;
pub const TIM_CCMR1_CC1S_Pos: u32 = 0;
pub const TIM_CCMR1_CC1S_Msk: u32 = 0x3 << TIM_CCMR1_CC1S_Pos;
pub const TIM_CCMR1_CC1S: u32 = TIM_CCMR1_CC1S_Msk;
pub const TIM_CCMR1_CC1S_0: u32 = 0x1 << TIM_CCMR1_CC1S_Pos;
pub const TIM_CCMR1_CC1S_1: u32 = 0x2 << TIM_CCMR1_CC1S_Pos;
pub const TIM_CCMR1_OC1FE_Pos: u32 = 2;
pub const TIM_CCMR1_OC1FE_Msk: u32 = 0x1 << TIM_CCMR1_OC1FE_Pos;
pub const TIM_CCMR1_OC1FE: u32 = TIM_CCMR1_OC1FE_Msk;
pub const TIM_CCMR1_OC1PE_Pos: u32 = 3;
pub const TIM_CCMR1_OC1PE_Msk: u32 = 0x1 << TIM_CCMR1_OC1PE_Pos;
pub const TIM_CCMR1_OC1PE: u32 = TIM_CCMR1_OC1PE_Msk;
pub const TIM_CCMR1_OC1M_Pos: u32 = 4;
pub const TIM_CCMR1_OC1M_Msk: u32 = 0x1007 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M: u32 = TIM_CCMR1_OC1M_Msk;
pub const TIM_CCMR1_OC1M_0: u32 = 0x0001 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M_1: u32 = 0x0002 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M_2: u32 = 0x0004 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M_3: u32 = 0x1000 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1CE_Pos: u32 = 7;
pub const TIM_CCMR1_OC1CE_Msk: u32 = 0x1 << TIM_CCMR1_OC1CE_Pos;
pub const TIM_CCMR1_OC1CE: u32 = TIM_CCMR1_OC1CE_Msk;
pub const TIM_CCMR1_CC2S_Pos: u32 = 8;
pub const TIM_CCMR1_CC2S_Msk: u32 = 0x3 << TIM_CCMR1_CC2S_Pos;
pub const TIM_CCMR1_CC2S: u32 = TIM_CCMR1_CC2S_Msk;
pub const TIM_CCMR1_CC2S_0: u32 = 0x1 << TIM_CCMR1_CC2S_Pos;
pub const TIM_CCMR1_CC2S_1: u32 = 0x2 << TIM_CCMR1_CC2S_Pos;
pub const TIM_CCMR1_OC2FE_Pos: u32 = 10;
pub const TIM_CCMR1_OC2FE_Msk: u32 = 0x1 << TIM_CCMR1_OC2FE_Pos;
pub const TIM_CCMR1_OC2FE: u32 = TIM_CCMR1_OC2FE_Msk;
pub const TIM_CCMR1_OC2PE_Pos: u32 = 11;
pub const TIM_CCMR1_OC2PE_Msk: u32 = 0x1 << TIM_CCMR1_OC2PE_Pos;
pub const TIM_CCMR1_OC2PE: u32 = TIM_CCMR1_OC2PE_Msk;
pub const TIM_CCMR1_OC2M_Pos: u32 = 12;
pub const TIM_CCMR1_OC2M_Msk: u32 = 0x1007 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M: u32 = TIM_CCMR1_OC2M_Msk;
pub const TIM_CCMR1_OC2M_0: u32 = 0x0001 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M_1: u32 = 0x0002 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M_2: u32 = 0x0004 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M_3: u32 = 0x1000 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2CE_Pos: u32 = 15;
pub const TIM_CCMR1_OC2CE_Msk: u32 = 0x1 << TIM_CCMR1_OC2CE_Pos;
pub const TIM_CCMR1_OC2CE: u32 = TIM_CCMR1_OC2CE_Msk;
pub const TIM_CCMR1_IC1PSC_Pos: u32 = 2;
pub const TIM_CCMR1_IC1PSC_Msk: u32 = 0x3 << TIM_CCMR1_IC1PSC_Pos;
pub const TIM_CCMR1_IC1PSC: u32 = TIM_CCMR1_IC1PSC_Msk;
pub const TIM_CCMR1_IC1PSC_0: u32 = 0x1 << TIM_CCMR1_IC1PSC_Pos;
pub const TIM_CCMR1_IC1PSC_1: u32 = 0x2 << TIM_CCMR1_IC1PSC_Pos;
pub const TIM_CCMR1_IC1F_Pos: u32 = 4;
pub const TIM_CCMR1_IC1F_Msk: u32 = 0xF << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F: u32 = TIM_CCMR1_IC1F_Msk;
pub const TIM_CCMR1_IC1F_0: u32 = 0x1 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F_1: u32 = 0x2 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F_2: u32 = 0x4 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F_3: u32 = 0x8 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC2PSC_Pos: u32 = 10;
pub const TIM_CCMR1_IC2PSC_Msk: u32 = 0x3 << TIM_CCMR1_IC2PSC_Pos;
pub const TIM_CCMR1_IC2PSC: u32 = TIM_CCMR1_IC2PSC_Msk;
pub const TIM_CCMR1_IC2PSC_0: u32 = 0x1 << TIM_CCMR1_IC2PSC_Pos;
pub const TIM_CCMR1_IC2PSC_1: u32 = 0x2 << TIM_CCMR1_IC2PSC_Pos;
pub const TIM_CCMR1_IC2F_Pos: u32 = 12;
pub const TIM_CCMR1_IC2F_Msk: u32 = 0xF << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F: u32 = TIM_CCMR1_IC2F_Msk;
pub const TIM_CCMR1_IC2F_0: u32 = 0x1 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F_1: u32 = 0x2 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F_2: u32 = 0x4 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F_3: u32 = 0x8 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR2_CC3S_Pos: u32 = 0;
pub const TIM_CCMR2_CC3S_Msk: u32 = 0x3 << TIM_CCMR2_CC3S_Pos;
pub const TIM_CCMR2_CC3S: u32 = TIM_CCMR2_CC3S_Msk;
pub const TIM_CCMR2_CC3S_0: u32 = 0x1 << TIM_CCMR2_CC3S_Pos;
pub const TIM_CCMR2_CC3S_1: u32 = 0x2 << TIM_CCMR2_CC3S_Pos;
pub const TIM_CCMR2_OC3FE_Pos: u32 = 2;
pub const TIM_CCMR2_OC3FE_Msk: u32 = 0x1 << TIM_CCMR2_OC3FE_Pos;
pub const TIM_CCMR2_OC3FE: u32 = TIM_CCMR2_OC3FE_Msk;
pub const TIM_CCMR2_OC3PE_Pos: u32 = 3;
pub const TIM_CCMR2_OC3PE_Msk: u32 = 0x1 << TIM_CCMR2_OC3PE_Pos;
pub const TIM_CCMR2_OC3PE: u32 = TIM_CCMR2_OC3PE_Msk;
pub const TIM_CCMR2_OC3M_Pos: u32 = 4;
pub const TIM_CCMR2_OC3M_Msk: u32 = 0x1007 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M: u32 = TIM_CCMR2_OC3M_Msk;
pub const TIM_CCMR2_OC3M_0: u32 = 0x0001 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M_1: u32 = 0x0002 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M_2: u32 = 0x0004 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M_3: u32 = 0x1000 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3CE_Pos: u32 = 7;
pub const TIM_CCMR2_OC3CE_Msk: u32 = 0x1 << TIM_CCMR2_OC3CE_Pos;
pub const TIM_CCMR2_OC3CE: u32 = TIM_CCMR2_OC3CE_Msk;
pub const TIM_CCMR2_CC4S_Pos: u32 = 8;
pub const TIM_CCMR2_CC4S_Msk: u32 = 0x3 << TIM_CCMR2_CC4S_Pos;
pub const TIM_CCMR2_CC4S: u32 = TIM_CCMR2_CC4S_Msk;
pub const TIM_CCMR2_CC4S_0: u32 = 0x1 << TIM_CCMR2_CC4S_Pos;
pub const TIM_CCMR2_CC4S_1: u32 = 0x2 << TIM_CCMR2_CC4S_Pos;
pub const TIM_CCMR2_OC4FE_Pos: u32 = 10;
pub const TIM_CCMR2_OC4FE_Msk: u32 = 0x1 << TIM_CCMR2_OC4FE_Pos;
pub const TIM_CCMR2_OC4FE: u32 = TIM_CCMR2_OC4FE_Msk;
pub const TIM_CCMR2_OC4PE_Pos: u32 = 11;
pub const TIM_CCMR2_OC4PE_Msk: u32 = 0x1 << TIM_CCMR2_OC4PE_Pos;
pub const TIM_CCMR2_OC4PE: u32 = TIM_CCMR2_OC4PE_Msk;
pub const TIM_CCMR2_OC4M_Pos: u32 = 12;
pub const TIM_CCMR2_OC4M_Msk: u32 = 0x1007 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M: u32 = TIM_CCMR2_OC4M_Msk;
pub const TIM_CCMR2_OC4M_0: u32 = 0x0001 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M_1: u32 = 0x0002 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M_2: u32 = 0x0004 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M_3: u32 = 0x1000 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4CE_Pos: u32 = 15;
pub const TIM_CCMR2_OC4CE_Msk: u32 = 0x1 << TIM_CCMR2_OC4CE_Pos;
pub const TIM_CCMR2_OC4CE: u32 = TIM_CCMR2_OC4CE_Msk;
pub const TIM_CCMR2_IC3PSC_Pos: u32 = 2;
pub const TIM_CCMR2_IC3PSC_Msk: u32 = 0x3 << TIM_CCMR2_IC3PSC_Pos;
pub const TIM_CCMR2_IC3PSC: u32 = TIM_CCMR2_IC3PSC_Msk;
pub const TIM_CCMR2_IC3PSC_0: u32 = 0x1 << TIM_CCMR2_IC3PSC_Pos;
pub const TIM_CCMR2_IC3PSC_1: u32 = 0x2 << TIM_CCMR2_IC3PSC_Pos;
pub const TIM_CCMR2_IC3F_Pos: u32 = 4;
pub const TIM_CCMR2_IC3F_Msk: u32 = 0xF << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F: u32 = TIM_CCMR2_IC3F_Msk;
pub const TIM_CCMR2_IC3F_0: u32 = 0x1 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F_1: u32 = 0x2 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F_2: u32 = 0x4 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F_3: u32 = 0x8 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC4PSC_Pos: u32 = 10;
pub const TIM_CCMR2_IC4PSC_Msk: u32 = 0x3 << TIM_CCMR2_IC4PSC_Pos;
pub const TIM_CCMR2_IC4PSC: u32 = TIM_CCMR2_IC4PSC_Msk;
pub const TIM_CCMR2_IC4PSC_0: u32 = 0x1 << TIM_CCMR2_IC4PSC_Pos;
pub const TIM_CCMR2_IC4PSC_1: u32 = 0x2 << TIM_CCMR2_IC4PSC_Pos;
pub const TIM_CCMR2_IC4F_Pos: u32 = 12;
pub const TIM_CCMR2_IC4F_Msk: u32 = 0xF << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F: u32 = TIM_CCMR2_IC4F_Msk;
pub const TIM_CCMR2_IC4F_0: u32 = 0x1 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F_1: u32 = 0x2 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F_2: u32 = 0x4 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F_3: u32 = 0x8 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR3_OC5FE_Pos: u32 = 2;
pub const TIM_CCMR3_OC5FE_Msk: u32 = 0x1 << TIM_CCMR3_OC5FE_Pos;
pub const TIM_CCMR3_OC5FE: u32 = TIM_CCMR3_OC5FE_Msk;
pub const TIM_CCMR3_OC5PE_Pos: u32 = 3;
pub const TIM_CCMR3_OC5PE_Msk: u32 = 0x1 << TIM_CCMR3_OC5PE_Pos;
pub const TIM_CCMR3_OC5PE: u32 = TIM_CCMR3_OC5PE_Msk;
pub const TIM_CCMR3_OC5M_Pos: u32 = 4;
pub const TIM_CCMR3_OC5M_Msk: u32 = 0x1007 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5M: u32 = TIM_CCMR3_OC5M_Msk;
pub const TIM_CCMR3_OC5M_0: u32 = 0x0001 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5M_1: u32 = 0x0002 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5M_2: u32 = 0x0004 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5M_3: u32 = 0x1000 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5CE_Pos: u32 = 7;
pub const TIM_CCMR3_OC5CE_Msk: u32 = 0x1 << TIM_CCMR3_OC5CE_Pos;
pub const TIM_CCMR3_OC5CE: u32 = TIM_CCMR3_OC5CE_Msk;
pub const TIM_CCMR3_OC6FE_Pos: u32 = 10;
pub const TIM_CCMR3_OC6FE_Msk: u32 = 0x1 << TIM_CCMR3_OC6FE_Pos;
pub const TIM_CCMR3_OC6FE: u32 = TIM_CCMR3_OC6FE_Msk;
pub const TIM_CCMR3_OC6PE_Pos: u32 = 11;
pub const TIM_CCMR3_OC6PE_Msk: u32 = 0x1 << TIM_CCMR3_OC6PE_Pos;
pub const TIM_CCMR3_OC6PE: u32 = TIM_CCMR3_OC6PE_Msk;
pub const TIM_CCMR3_OC6M_Pos: u32 = 12;
pub const TIM_CCMR3_OC6M_Msk: u32 = 0x1007 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6M: u32 = TIM_CCMR3_OC6M_Msk;
pub const TIM_CCMR3_OC6M_0: u32 = 0x0001 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6M_1: u32 = 0x0002 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6M_2: u32 = 0x0004 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6M_3: u32 = 0x1000 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6CE_Pos: u32 = 15;
pub const TIM_CCMR3_OC6CE_Msk: u32 = 0x1 << TIM_CCMR3_OC6CE_Pos;
pub const TIM_CCMR3_OC6CE: u32 = TIM_CCMR3_OC6CE_Msk;
pub const TIM_CCER_CC1E_Pos: u32 = 0;
pub const TIM_CCER_CC1E_Msk: u32 = 0x1 << TIM_CCER_CC1E_Pos;
pub const TIM_CCER_CC1E: u32 = TIM_CCER_CC1E_Msk;
pub const TIM_CCER_CC1P_Pos: u32 = 1;
pub const TIM_CCER_CC1P_Msk: u32 = 0x1 << TIM_CCER_CC1P_Pos;
pub const TIM_CCER_CC1P: u32 = TIM_CCER_CC1P_Msk;
pub const TIM_CCER_CC1NE_Pos: u32 = 2;
pub const TIM_CCER_CC1NE_Msk: u32 = 0x1 << TIM_CCER_CC1NE_Pos;
pub const TIM_CCER_CC1NE: u32 = TIM_CCER_CC1NE_Msk;
pub const TIM_CCER_CC1NP_Pos: u32 = 3;
pub const TIM_CCER_CC1NP_Msk: u32 = 0x1 << TIM_CCER_CC1NP_Pos;
pub const TIM_CCER_CC1NP: u32 = TIM_CCER_CC1NP_Msk;
pub const TIM_CCER_CC2E_Pos: u32 = 4;
pub const TIM_CCER_CC2E_Msk: u32 = 0x1 << TIM_CCER_CC2E_Pos;
pub const TIM_CCER_CC2E: u32 = TIM_CCER_CC2E_Msk;
pub const TIM_CCER_CC2P_Pos: u32 = 5;
pub const TIM_CCER_CC2P_Msk: u32 = 0x1 << TIM_CCER_CC2P_Pos;
pub const TIM_CCER_CC2P: u32 = TIM_CCER_CC2P_Msk;
pub const TIM_CCER_CC2NE_Pos: u32 = 6;
pub const TIM_CCER_CC2NE_Msk: u32 = 0x1 << TIM_CCER_CC2NE_Pos;
pub const TIM_CCER_CC2NE: u32 = TIM_CCER_CC2NE_Msk;
pub const TIM_CCER_CC2NP_Pos: u32 = 7;
pub const TIM_CCER_CC2NP_Msk: u32 = 0x1 << TIM_CCER_CC2NP_Pos;
pub const TIM_CCER_CC2NP: u32 = TIM_CCER_CC2NP_Msk;
pub const TIM_CCER_CC3E_Pos: u32 = 8;
pub const TIM_CCER_CC3E_Msk: u32 = 0x1 << TIM_CCER_CC3E_Pos;
pub const TIM_CCER_CC3E: u32 = TIM_CCER_CC3E_Msk;
pub const TIM_CCER_CC3P_Pos: u32 = 9;
pub const TIM_CCER_CC3P_Msk: u32 = 0x1 << TIM_CCER_CC3P_Pos;
pub const TIM_CCER_CC3P: u32 = TIM_CCER_CC3P_Msk;
pub const TIM_CCER_CC3NE_Pos: u32 = 10;
pub const TIM_CCER_CC3NE_Msk: u32 = 0x1 << TIM_CCER_CC3NE_Pos;
pub const TIM_CCER_CC3NE: u32 = TIM_CCER_CC3NE_Msk;
pub const TIM_CCER_CC3NP_Pos: u32 = 11;
pub const TIM_CCER_CC3NP_Msk: u32 = 0x1 << TIM_CCER_CC3NP_Pos;
pub const TIM_CCER_CC3NP: u32 = TIM_CCER_CC3NP_Msk;
pub const TIM_CCER_CC4E_Pos: u32 = 12;
pub const TIM_CCER_CC4E_Msk: u32 = 0x1 << TIM_CCER_CC4E_Pos;
pub const TIM_CCER_CC4E: u32 = TIM_CCER_CC4E_Msk;
pub const TIM_CCER_CC4P_Pos: u32 = 13;
pub const TIM_CCER_CC4P_Msk: u32 = 0x1 << TIM_CCER_CC4P_Pos;
pub const TIM_CCER_CC4P: u32 = TIM_CCER_CC4P_Msk;
pub const TIM_CCER_CC4NE_Pos: u32 = 14;
pub const TIM_CCER_CC4NE_Msk: u32 = 0x1 << TIM_CCER_CC4NE_Pos;
pub const TIM_CCER_CC4NE: u32 = TIM_CCER_CC4NE_Msk;
pub const TIM_CCER_CC4NP_Pos: u32 = 15;
pub const TIM_CCER_CC4NP_Msk: u32 = 0x1 << TIM_CCER_CC4NP_Pos;
pub const TIM_CCER_CC4NP: u32 = TIM_CCER_CC4NP_Msk;
pub const TIM_CCER_CC5E_Pos: u32 = 16;
pub const TIM_CCER_CC5E_Msk: u32 = 0x1 << TIM_CCER_CC5E_Pos;
pub const TIM_CCER_CC5E: u32 = TIM_CCER_CC5E_Msk;
pub const TIM_CCER_CC5P_Pos: u32 = 17;
pub const TIM_CCER_CC5P_Msk: u32 = 0x1 << TIM_CCER_CC5P_Pos;
pub const TIM_CCER_CC5P: u32 = TIM_CCER_CC5P_Msk;
pub const TIM_CCER_CC6E_Pos: u32 = 20;
pub const TIM_CCER_CC6E_Msk: u32 = 0x1 << TIM_CCER_CC6E_Pos;
pub const TIM_CCER_CC6E: u32 = TIM_CCER_CC6E_Msk;
pub const TIM_CCER_CC6P_Pos: u32 = 21;
pub const TIM_CCER_CC6P_Msk: u32 = 0x1 << TIM_CCER_CC6P_Pos;
pub const TIM_CCER_CC6P: u32 = TIM_CCER_CC6P_Msk;
pub const TIM_CNT_CNT_Pos: u32 = 0;
pub const TIM_CNT_CNT_Msk: u32 = 0xFFFFFFFF << TIM_CNT_CNT_Pos;
pub const TIM_CNT_CNT: u32 = TIM_CNT_CNT_Msk;
pub const TIM_CNT_UIFCPY_Pos: u32 = 31;
pub const TIM_CNT_UIFCPY_Msk: u32 = 0x1 << TIM_CNT_UIFCPY_Pos;
pub const TIM_CNT_UIFCPY: u32 = TIM_CNT_UIFCPY_Msk;
pub const TIM_PSC_PSC_Pos: u32 = 0;
pub const TIM_PSC_PSC_Msk: u32 = 0xFFFF << TIM_PSC_PSC_Pos;
pub const TIM_PSC_PSC: u32 = TIM_PSC_PSC_Msk;
pub const TIM_ARR_ARR_Pos: u32 = 0;
pub const TIM_ARR_ARR_Msk: u32 = 0xFFFFFFFF << TIM_ARR_ARR_Pos;
pub const TIM_ARR_ARR: u32 = TIM_ARR_ARR_Msk;
pub const TIM_RCR_REP_Pos: u32 = 0;
pub const TIM_RCR_REP_Msk: u32 = 0xFFFF << TIM_RCR_REP_Pos;
pub const TIM_RCR_REP: u32 = TIM_RCR_REP_Msk;
pub const TIM_CCR1_CCR1_Pos: u32 = 0;
pub const TIM_CCR1_CCR1_Msk: u32 = 0xFFFFFFFF << TIM_CCR1_CCR1_Pos;
pub const TIM_CCR1_CCR1: u32 = TIM_CCR1_CCR1_Msk;
pub const TIM_CCR2_CCR2_Pos: u32 = 0;
pub const TIM_CCR2_CCR2_Msk: u32 = 0xFFFFFFFF << TIM_CCR2_CCR2_Pos;
pub const TIM_CCR2_CCR2: u32 = TIM_CCR2_CCR2_Msk;
pub const TIM_CCR3_CCR3_Pos: u32 = 0;
pub const TIM_CCR3_CCR3_Msk: u32 = 0xFFFFFFFF << TIM_CCR3_CCR3_Pos;
pub const TIM_CCR3_CCR3: u32 = TIM_CCR3_CCR3_Msk;
pub const TIM_CCR4_CCR4_Pos: u32 = 0;
pub const TIM_CCR4_CCR4_Msk: u32 = 0xFFFFFFFF << TIM_CCR4_CCR4_Pos;
pub const TIM_CCR4_CCR4: u32 = TIM_CCR4_CCR4_Msk;
pub const TIM_CCR5_CCR5_Pos: u32 = 0;
pub const TIM_CCR5_CCR5_Msk: u32 = 0xFFFFF << TIM_CCR5_CCR5_Pos;
pub const TIM_CCR5_CCR5: u32 = TIM_CCR5_CCR5_Msk;
pub const TIM_CCR5_GC5C1_Pos: u32 = 29;
pub const TIM_CCR5_GC5C1_Msk: u32 = 0x1 << TIM_CCR5_GC5C1_Pos;
pub const TIM_CCR5_GC5C1: u32 = TIM_CCR5_GC5C1_Msk;
pub const TIM_CCR5_GC5C2_Pos: u32 = 30;
pub const TIM_CCR5_GC5C2_Msk: u32 = 0x1 << TIM_CCR5_GC5C2_Pos;
pub const TIM_CCR5_GC5C2: u32 = TIM_CCR5_GC5C2_Msk;
pub const TIM_CCR5_GC5C3_Pos: u32 = 31;
pub const TIM_CCR5_GC5C3_Msk: u32 = 0x1 << TIM_CCR5_GC5C3_Pos;
pub const TIM_CCR5_GC5C3: u32 = TIM_CCR5_GC5C3_Msk;
pub const TIM_CCR6_CCR6_Pos: u32 = 0;
pub const TIM_CCR6_CCR6_Msk: u32 = 0xFFFFF << TIM_CCR6_CCR6_Pos;
pub const TIM_CCR6_CCR6: u32 = TIM_CCR6_CCR6_Msk;
pub const TIM_BDTR_DTG_Pos: u32 = 0;
pub const TIM_BDTR_DTG_Msk: u32 = 0xFF << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG: u32 = TIM_BDTR_DTG_Msk;
pub const TIM_BDTR_DTG_0: u32 = 0x01 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_1: u32 = 0x02 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_2: u32 = 0x04 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_3: u32 = 0x08 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_4: u32 = 0x10 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_5: u32 = 0x20 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_6: u32 = 0x40 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_7: u32 = 0x80 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_LOCK_Pos: u32 = 8;
pub const TIM_BDTR_LOCK_Msk: u32 = 0x3 << TIM_BDTR_LOCK_Pos;
pub const TIM_BDTR_LOCK: u32 = TIM_BDTR_LOCK_Msk;
pub const TIM_BDTR_LOCK_0: u32 = 0x1 << TIM_BDTR_LOCK_Pos;
pub const TIM_BDTR_LOCK_1: u32 = 0x2 << TIM_BDTR_LOCK_Pos;
pub const TIM_BDTR_OSSI_Pos: u32 = 10;
pub const TIM_BDTR_OSSI_Msk: u32 = 0x1 << TIM_BDTR_OSSI_Pos;
pub const TIM_BDTR_OSSI: u32 = TIM_BDTR_OSSI_Msk;
pub const TIM_BDTR_OSSR_Pos: u32 = 11;
pub const TIM_BDTR_OSSR_Msk: u32 = 0x1 << TIM_BDTR_OSSR_Pos;
pub const TIM_BDTR_OSSR: u32 = TIM_BDTR_OSSR_Msk;
pub const TIM_BDTR_BKE_Pos: u32 = 12;
pub const TIM_BDTR_BKE_Msk: u32 = 0x1 << TIM_BDTR_BKE_Pos;
pub const TIM_BDTR_BKE: u32 = TIM_BDTR_BKE_Msk;
pub const TIM_BDTR_BKP_Pos: u32 = 13;
pub const TIM_BDTR_BKP_Msk: u32 = 0x1 << TIM_BDTR_BKP_Pos;
pub const TIM_BDTR_BKP: u32 = TIM_BDTR_BKP_Msk;
pub const TIM_BDTR_AOE_Pos: u32 = 14;
pub const TIM_BDTR_AOE_Msk: u32 = 0x1 << TIM_BDTR_AOE_Pos;
pub const TIM_BDTR_AOE: u32 = TIM_BDTR_AOE_Msk;
pub const TIM_BDTR_MOE_Pos: u32 = 15;
pub const TIM_BDTR_MOE_Msk: u32 = 0x1 << TIM_BDTR_MOE_Pos;
pub const TIM_BDTR_MOE: u32 = TIM_BDTR_MOE_Msk;
pub const TIM_BDTR_BKF_Pos: u32 = 16;
pub const TIM_BDTR_BKF_Msk: u32 = 0xF << TIM_BDTR_BKF_Pos;
pub const TIM_BDTR_BKF: u32 = TIM_BDTR_BKF_Msk;
pub const TIM_BDTR_BK2F_Pos: u32 = 20;
pub const TIM_BDTR_BK2F_Msk: u32 = 0xF << TIM_BDTR_BK2F_Pos;
pub const TIM_BDTR_BK2F: u32 = TIM_BDTR_BK2F_Msk;
pub const TIM_BDTR_BK2E_Pos: u32 = 24;
pub const TIM_BDTR_BK2E_Msk: u32 = 0x1 << TIM_BDTR_BK2E_Pos;
pub const TIM_BDTR_BK2E: u32 = TIM_BDTR_BK2E_Msk;
pub const TIM_BDTR_BK2P_Pos: u32 = 25;
pub const TIM_BDTR_BK2P_Msk: u32 = 0x1 << TIM_BDTR_BK2P_Pos;
pub const TIM_BDTR_BK2P: u32 = TIM_BDTR_BK2P_Msk;
pub const TIM_BDTR_BKDSRM_Pos: u32 = 26;
pub const TIM_BDTR_BKDSRM_Msk: u32 = 0x1 << TIM_BDTR_BKDSRM_Pos;
pub const TIM_BDTR_BKDSRM: u32 = TIM_BDTR_BKDSRM_Msk;
pub const TIM_BDTR_BK2DSRM_Pos: u32 = 27;
pub const TIM_BDTR_BK2DSRM_Msk: u32 = 0x1 << TIM_BDTR_BK2DSRM_Pos;
pub const TIM_BDTR_BK2DSRM: u32 = TIM_BDTR_BK2DSRM_Msk;
pub const TIM_BDTR_BKBID_Pos: u32 = 28;
pub const TIM_BDTR_BKBID_Msk: u32 = 0x1 << TIM_BDTR_BKBID_Pos;
pub const TIM_BDTR_BKBID: u32 = TIM_BDTR_BKBID_Msk;
pub const TIM_BDTR_BK2BID_Pos: u32 = 29;
pub const TIM_BDTR_BK2BID_Msk: u32 = 0x1 << TIM_BDTR_BK2BID_Pos;
pub const TIM_BDTR_BK2BID: u32 = TIM_BDTR_BK2BID_Msk;
pub const TIM_DCR_DBA_Pos: u32 = 0;
pub const TIM_DCR_DBA_Msk: u32 = 0x1F << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA: u32 = TIM_DCR_DBA_Msk;
pub const TIM_DCR_DBA_0: u32 = 0x01 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_1: u32 = 0x02 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_2: u32 = 0x04 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_3: u32 = 0x08 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_4: u32 = 0x10 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBL_Pos: u32 = 8;
pub const TIM_DCR_DBL_Msk: u32 = 0x1F << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL: u32 = TIM_DCR_DBL_Msk;
pub const TIM_DCR_DBL_0: u32 = 0x01 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_1: u32 = 0x02 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_2: u32 = 0x04 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_3: u32 = 0x08 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_4: u32 = 0x10 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBSS_Pos: u32 = 16;
pub const TIM_DCR_DBSS_Msk: u32 = 0xF << TIM_DCR_DBSS_Pos;
pub const TIM_DCR_DBSS: u32 = TIM_DCR_DBSS_Msk;
pub const TIM_DCR_DBSS_0: u32 = 0x01 << TIM_DCR_DBSS_Pos;
pub const TIM_DCR_DBSS_1: u32 = 0x02 << TIM_DCR_DBSS_Pos;
pub const TIM_DCR_DBSS_2: u32 = 0x04 << TIM_DCR_DBSS_Pos;
pub const TIM_DCR_DBSS_3: u32 = 0x08 << TIM_DCR_DBSS_Pos;
pub const TIM_AF1_BKINE_Pos: u32 = 0;
pub const TIM_AF1_BKINE_Msk: u32 = 0x1 << TIM_AF1_BKINE_Pos;
pub const TIM_AF1_BKINE: u32 = TIM_AF1_BKINE_Msk;
pub const TIM_AF1_BKINP_Pos: u32 = 9;
pub const TIM_AF1_BKINP_Msk: u32 = 0x1 << TIM_AF1_BKINP_Pos;
pub const TIM_AF1_BKINP: u32 = TIM_AF1_BKINP_Msk;
pub const TIM_AF1_ETRSEL_Pos: u32 = 14;
pub const TIM_AF1_ETRSEL_Msk: u32 = 0xF << TIM_AF1_ETRSEL_Pos;
pub const TIM_AF1_ETRSEL: u32 = TIM_AF1_ETRSEL_Msk;
pub const TIM_AF1_ETRSEL_0: u32 = 0x1 << TIM_AF1_ETRSEL_Pos;
pub const TIM_AF1_ETRSEL_1: u32 = 0x2 << TIM_AF1_ETRSEL_Pos;
pub const TIM_AF1_ETRSEL_2: u32 = 0x4 << TIM_AF1_ETRSEL_Pos;
pub const TIM_AF1_ETRSEL_3: u32 = 0x8 << TIM_AF1_ETRSEL_Pos;
pub const TIM_AF2_BK2INE_Pos: u32 = 0;
pub const TIM_AF2_BK2INE_Msk: u32 = 0x1 << TIM_AF2_BK2INE_Pos;
pub const TIM_AF2_BK2INE: u32 = TIM_AF2_BK2INE_Msk;
pub const TIM_AF2_BK2INP_Pos: u32 = 9;
pub const TIM_AF2_BK2INP_Msk: u32 = 0x1 << TIM_AF2_BK2INP_Pos;
pub const TIM_AF2_BK2INP: u32 = TIM_AF2_BK2INP_Msk;
pub const TIM_TISEL_TI1SEL_Pos: u32 = 0;
pub const TIM_TISEL_TI1SEL_Msk: u32 = 0xF << TIM_TISEL_TI1SEL_Pos;
pub const TIM_TISEL_TI1SEL: u32 = TIM_TISEL_TI1SEL_Msk;
pub const TIM_TISEL_TI1SEL_0: u32 = 0x1 << TIM_TISEL_TI1SEL_Pos;
pub const TIM_TISEL_TI1SEL_1: u32 = 0x2 << TIM_TISEL_TI1SEL_Pos;
pub const TIM_TISEL_TI1SEL_2: u32 = 0x4 << TIM_TISEL_TI1SEL_Pos;
pub const TIM_TISEL_TI1SEL_3: u32 = 0x8 << TIM_TISEL_TI1SEL_Pos;
pub const TIM_TISEL_TI2SEL_Pos: u32 = 8;
pub const TIM_TISEL_TI2SEL_Msk: u32 = 0xF << TIM_TISEL_TI2SEL_Pos;
pub const TIM_TISEL_TI2SEL: u32 = TIM_TISEL_TI2SEL_Msk;
pub const TIM_TISEL_TI2SEL_0: u32 = 0x1 << TIM_TISEL_TI2SEL_Pos;
pub const TIM_TISEL_TI2SEL_1: u32 = 0x2 << TIM_TISEL_TI2SEL_Pos;
pub const TIM_TISEL_TI2SEL_2: u32 = 0x4 << TIM_TISEL_TI2SEL_Pos;
pub const TIM_TISEL_TI2SEL_3: u32 = 0x8 << TIM_TISEL_TI2SEL_Pos;
pub const TIM_TISEL_TI3SEL_Pos: u32 = 16;
pub const TIM_TISEL_TI3SEL_Msk: u32 = 0xF << TIM_TISEL_TI3SEL_Pos;
pub const TIM_TISEL_TI3SEL: u32 = TIM_TISEL_TI3SEL_Msk;
pub const TIM_TISEL_TI3SEL_0: u32 = 0x1 << TIM_TISEL_TI3SEL_Pos;
pub const TIM_TISEL_TI3SEL_1: u32 = 0x2 << TIM_TISEL_TI3SEL_Pos;
pub const TIM_TISEL_TI3SEL_2: u32 = 0x4 << TIM_TISEL_TI3SEL_Pos;
pub const TIM_TISEL_TI3SEL_3: u32 = 0x8 << TIM_TISEL_TI3SEL_Pos;
pub const TIM_TISEL_TI4SEL_Pos: u32 = 24;
pub const TIM_TISEL_TI4SEL_Msk: u32 = 0xF << TIM_TISEL_TI4SEL_Pos;
pub const TIM_TISEL_TI4SEL: u32 = TIM_TISEL_TI4SEL_Msk;
pub const TIM_TISEL_TI4SEL_0: u32 = 0x1 << TIM_TISEL_TI4SEL_Pos;
pub const TIM_TISEL_TI4SEL_1: u32 = 0x2 << TIM_TISEL_TI4SEL_Pos;
pub const TIM_TISEL_TI4SEL_2: u32 = 0x4 << TIM_TISEL_TI4SEL_Pos;
pub const TIM_TISEL_TI4SEL_3: u32 = 0x8 << TIM_TISEL_TI4SEL_Pos;
pub const TIM_DTR2_DTGF_Pos: u32 = 0;
pub const TIM_DTR2_DTGF_Msk: u32 = 0xFF << TIM_DTR2_DTGF_Pos;
pub const TIM_DTR2_DTGF: u32 = TIM_DTR2_DTGF_Msk;
pub const TIM_DTR2_DTGF_0: u32 = 0x01 << TIM_DTR2_DTGF_Pos;
pub const TIM_DTR2_DTGF_1: u32 = 0x02 << TIM_DTR2_DTGF_Pos;
pub const TIM_DTR2_DTGF_2: u32 = 0x04 << TIM_DTR2_DTGF_Pos;
pub const TIM_DTR2_DTGF_3: u32 = 0x08 << TIM_DTR2_DTGF_Pos;
pub const TIM_DTR2_DTGF_4: u32 = 0x10 << TIM_DTR2_DTGF_Pos;
pub const TIM_DTR2_DTGF_5: u32 = 0x20 << TIM_DTR2_DTGF_Pos;
pub const TIM_DTR2_DTGF_6: u32 = 0x40 << TIM_DTR2_DTGF_Pos;
pub const TIM_DTR2_DTGF_7: u32 = 0x80 << TIM_DTR2_DTGF_Pos;
pub const TIM_DTR2_DTAE_Pos: u32 = 16;
pub const TIM_DTR2_DTAE_Msk: u32 = 0x1 << TIM_DTR2_DTAE_Pos;
pub const TIM_DTR2_DTAE: u32 = TIM_DTR2_DTAE_Msk;
pub const TIM_DTR2_DTPE_Pos: u32 = 17;
pub const TIM_DTR2_DTPE_Msk: u32 = 0x1 << TIM_DTR2_DTPE_Pos;
pub const TIM_DTR2_DTPE: u32 = TIM_DTR2_DTPE_Msk;
pub const TIM_ECR_IE_Pos: u32 = 0;
pub const TIM_ECR_IE_Msk: u32 = 0x1 << TIM_ECR_IE_Pos;
pub const TIM_ECR_IE: u32 = TIM_ECR_IE_Msk;
pub const TIM_ECR_IDIR_Pos: u32 = 1;
pub const TIM_ECR_IDIR_Msk: u32 = 0x3 << TIM_ECR_IDIR_Pos;
pub const TIM_ECR_IDIR: u32 = TIM_ECR_IDIR_Msk;
pub const TIM_ECR_IDIR_0: u32 = 0x01 << TIM_ECR_IDIR_Pos;
pub const TIM_ECR_IDIR_1: u32 = 0x02 << TIM_ECR_IDIR_Pos;
pub const TIM_ECR_IBLK_Pos: u32 = 3;
pub const TIM_ECR_IBLK_Msk: u32 = 0x3 << TIM_ECR_IBLK_Pos;
pub const TIM_ECR_IBLK: u32 = TIM_ECR_IBLK_Msk;
pub const TIM_ECR_IBLK_0: u32 = 0x01 << TIM_ECR_IBLK_Pos;
pub const TIM_ECR_IBLK_1: u32 = 0x02 << TIM_ECR_IBLK_Pos;
pub const TIM_ECR_FIDX_Pos: u32 = 5;
pub const TIM_ECR_FIDX_Msk: u32 = 0x1 << TIM_ECR_FIDX_Pos;
pub const TIM_ECR_FIDX: u32 = TIM_ECR_FIDX_Msk;
pub const TIM_ECR_IPOS_Pos: u32 = 6;
pub const TIM_ECR_IPOS_Msk: u32 = 0x3 << TIM_ECR_IPOS_Pos;
pub const TIM_ECR_IPOS: u32 = TIM_ECR_IPOS_Msk;
pub const TIM_ECR_IPOS_0: u32 = 0x01 << TIM_ECR_IPOS_Pos;
pub const TIM_ECR_IPOS_1: u32 = 0x02 << TIM_ECR_IPOS_Pos;
pub const TIM_ECR_PW_Pos: u32 = 16;
pub const TIM_ECR_PW_Msk: u32 = 0xFF << TIM_ECR_PW_Pos;
pub const TIM_ECR_PW: u32 = TIM_ECR_PW_Msk;
pub const TIM_ECR_PW_0: u32 = 0x01 << TIM_ECR_PW_Pos;
pub const TIM_ECR_PW_1: u32 = 0x02 << TIM_ECR_PW_Pos;
pub const TIM_ECR_PW_2: u32 = 0x04 << TIM_ECR_PW_Pos;
pub const TIM_ECR_PW_3: u32 = 0x08 << TIM_ECR_PW_Pos;
pub const TIM_ECR_PW_4: u32 = 0x10 << TIM_ECR_PW_Pos;
pub const TIM_ECR_PW_5: u32 = 0x20 << TIM_ECR_PW_Pos;
pub const TIM_ECR_PW_6: u32 = 0x40 << TIM_ECR_PW_Pos;
pub const TIM_ECR_PW_7: u32 = 0x80 << TIM_ECR_PW_Pos;
pub const TIM_ECR_PWPRSC_Pos: u32 = 24;
pub const TIM_ECR_PWPRSC_Msk: u32 = 0x7 << TIM_ECR_PWPRSC_Pos;
pub const TIM_ECR_PWPRSC: u32 = TIM_ECR_PWPRSC_Msk;
pub const TIM_ECR_PWPRSC_0: u32 = 0x01 << TIM_ECR_PWPRSC_Pos;
pub const TIM_ECR_PWPRSC_1: u32 = 0x02 << TIM_ECR_PWPRSC_Pos;
pub const TIM_ECR_PWPRSC_2: u32 = 0x04 << TIM_ECR_PWPRSC_Pos;
pub const TIM_DMAR_DMAB_Pos: u32 = 0;
pub const TIM_DMAR_DMAB_Msk: u32 = 0xFFFFFFFF << TIM_DMAR_DMAB_Pos;
pub const TIM_DMAR_DMAB: u32 = TIM_DMAR_DMAB_Msk;
pub const UCPD_CFG1_HBITCLKDIV_Pos: u32 = 0;
pub const UCPD_CFG1_HBITCLKDIV_Msk: u32 = 0x3F << UCPD_CFG1_HBITCLKDIV_Pos;
pub const UCPD_CFG1_HBITCLKDIV: u32 = UCPD_CFG1_HBITCLKDIV_Msk;
pub const UCPD_CFG1_HBITCLKDIV_0: u32 = 0x01 << UCPD_CFG1_HBITCLKDIV_Pos;
pub const UCPD_CFG1_HBITCLKDIV_1: u32 = 0x02 << UCPD_CFG1_HBITCLKDIV_Pos;
pub const UCPD_CFG1_HBITCLKDIV_2: u32 = 0x04 << UCPD_CFG1_HBITCLKDIV_Pos;
pub const UCPD_CFG1_HBITCLKDIV_3: u32 = 0x08 << UCPD_CFG1_HBITCLKDIV_Pos;
pub const UCPD_CFG1_HBITCLKDIV_4: u32 = 0x10 << UCPD_CFG1_HBITCLKDIV_Pos;
pub const UCPD_CFG1_HBITCLKDIV_5: u32 = 0x20 << UCPD_CFG1_HBITCLKDIV_Pos;
pub const UCPD_CFG1_IFRGAP_Pos: u32 = 6;
pub const UCPD_CFG1_IFRGAP_Msk: u32 = 0x1F << UCPD_CFG1_IFRGAP_Pos;
pub const UCPD_CFG1_IFRGAP: u32 = UCPD_CFG1_IFRGAP_Msk;
pub const UCPD_CFG1_IFRGAP_0: u32 = 0x01 << UCPD_CFG1_IFRGAP_Pos;
pub const UCPD_CFG1_IFRGAP_1: u32 = 0x02 << UCPD_CFG1_IFRGAP_Pos;
pub const UCPD_CFG1_IFRGAP_2: u32 = 0x04 << UCPD_CFG1_IFRGAP_Pos;
pub const UCPD_CFG1_IFRGAP_3: u32 = 0x08 << UCPD_CFG1_IFRGAP_Pos;
pub const UCPD_CFG1_IFRGAP_4: u32 = 0x10 << UCPD_CFG1_IFRGAP_Pos;
pub const UCPD_CFG1_TRANSWIN_Pos: u32 = 11;
pub const UCPD_CFG1_TRANSWIN_Msk: u32 = 0x1F << UCPD_CFG1_TRANSWIN_Pos;
pub const UCPD_CFG1_TRANSWIN: u32 = UCPD_CFG1_TRANSWIN_Msk;
pub const UCPD_CFG1_TRANSWIN_0: u32 = 0x01 << UCPD_CFG1_TRANSWIN_Pos;
pub const UCPD_CFG1_TRANSWIN_1: u32 = 0x02 << UCPD_CFG1_TRANSWIN_Pos;
pub const UCPD_CFG1_TRANSWIN_2: u32 = 0x04 << UCPD_CFG1_TRANSWIN_Pos;
pub const UCPD_CFG1_TRANSWIN_3: u32 = 0x08 << UCPD_CFG1_TRANSWIN_Pos;
pub const UCPD_CFG1_TRANSWIN_4: u32 = 0x10 << UCPD_CFG1_TRANSWIN_Pos;
pub const UCPD_CFG1_PSC_UCPDCLK_Pos: u32 = 17;
pub const UCPD_CFG1_PSC_UCPDCLK_Msk: u32 = 0x7 << UCPD_CFG1_PSC_UCPDCLK_Pos;
pub const UCPD_CFG1_PSC_UCPDCLK: u32 = UCPD_CFG1_PSC_UCPDCLK_Msk;
pub const UCPD_CFG1_PSC_UCPDCLK_0: u32 = 0x1 << UCPD_CFG1_PSC_UCPDCLK_Pos;
pub const UCPD_CFG1_PSC_UCPDCLK_1: u32 = 0x2 << UCPD_CFG1_PSC_UCPDCLK_Pos;
pub const UCPD_CFG1_PSC_UCPDCLK_2: u32 = 0x4 << UCPD_CFG1_PSC_UCPDCLK_Pos;
pub const UCPD_CFG1_RXORDSETEN_Pos: u32 = 20;
pub const UCPD_CFG1_RXORDSETEN_Msk: u32 = 0x1FF << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_RXORDSETEN: u32 = UCPD_CFG1_RXORDSETEN_Msk;
pub const UCPD_CFG1_RXORDSETEN_0: u32 = 0x001 << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_RXORDSETEN_1: u32 = 0x002 << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_RXORDSETEN_2: u32 = 0x004 << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_RXORDSETEN_3: u32 = 0x008 << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_RXORDSETEN_4: u32 = 0x010 << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_RXORDSETEN_5: u32 = 0x020 << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_RXORDSETEN_6: u32 = 0x040 << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_RXORDSETEN_7: u32 = 0x080 << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_RXORDSETEN_8: u32 = 0x100 << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_TXDMAEN_Pos: u32 = 29;
pub const UCPD_CFG1_TXDMAEN_Msk: u32 = 0x1 << UCPD_CFG1_TXDMAEN_Pos;
pub const UCPD_CFG1_TXDMAEN: u32 = UCPD_CFG1_TXDMAEN_Msk;
pub const UCPD_CFG1_RXDMAEN_Pos: u32 = 30;
pub const UCPD_CFG1_RXDMAEN_Msk: u32 = 0x1 << UCPD_CFG1_RXDMAEN_Pos;
pub const UCPD_CFG1_RXDMAEN: u32 = UCPD_CFG1_RXDMAEN_Msk;
pub const UCPD_CFG1_UCPDEN_Pos: u32 = 31;
pub const UCPD_CFG1_UCPDEN_Msk: u32 = 0x1 << UCPD_CFG1_UCPDEN_Pos;
pub const UCPD_CFG1_UCPDEN: u32 = UCPD_CFG1_UCPDEN_Msk;
pub const UCPD_CFG2_RXFILTDIS_Pos: u32 = 0;
pub const UCPD_CFG2_RXFILTDIS_Msk: u32 = 0x1 << UCPD_CFG2_RXFILTDIS_Pos;
pub const UCPD_CFG2_RXFILTDIS: u32 = UCPD_CFG2_RXFILTDIS_Msk;
pub const UCPD_CFG2_RXFILT2N3_Pos: u32 = 1;
pub const UCPD_CFG2_RXFILT2N3_Msk: u32 = 0x1 << UCPD_CFG2_RXFILT2N3_Pos;
pub const UCPD_CFG2_RXFILT2N3: u32 = UCPD_CFG2_RXFILT2N3_Msk;
pub const UCPD_CFG2_FORCECLK_Pos: u32 = 2;
pub const UCPD_CFG2_FORCECLK_Msk: u32 = 0x1 << UCPD_CFG2_FORCECLK_Pos;
pub const UCPD_CFG2_FORCECLK: u32 = UCPD_CFG2_FORCECLK_Msk;
pub const UCPD_CFG2_WUPEN_Pos: u32 = 3;
pub const UCPD_CFG2_WUPEN_Msk: u32 = 0x1 << UCPD_CFG2_WUPEN_Pos;
pub const UCPD_CFG2_WUPEN: u32 = UCPD_CFG2_WUPEN_Msk;
pub const UCPD_CFG2_RXAFILTEN_Pos: u32 = 8;
pub const UCPD_CFG2_RXAFILTEN_Msk: u32 = 0x1 << UCPD_CFG2_RXAFILTEN_Pos;
pub const UCPD_CFG2_RXAFILTEN: u32 = UCPD_CFG2_RXAFILTEN_Msk;
pub const UCPD_CFG3_TRIM_CC1_RD_Pos: u32 = 0;
pub const UCPD_CFG3_TRIM_CC1_RD_Msk: u32 = 0xF << UCPD_CFG3_TRIM_CC1_RD_Pos;
pub const UCPD_CFG3_TRIM_CC1_RD: u32 = UCPD_CFG3_TRIM_CC1_RD_Msk;
pub const UCPD_CFG3_TRIM_CC1_RP_Pos: u32 = 9;
pub const UCPD_CFG3_TRIM_CC1_RP_Msk: u32 = 0xF << UCPD_CFG3_TRIM_CC1_RP_Pos;
pub const UCPD_CFG3_TRIM_CC1_RP: u32 = UCPD_CFG3_TRIM_CC1_RP_Msk;
pub const UCPD_CFG3_TRIM_CC2_RD_Pos: u32 = 16;
pub const UCPD_CFG3_TRIM_CC2_RD_Msk: u32 = 0xF << UCPD_CFG3_TRIM_CC2_RD_Pos;
pub const UCPD_CFG3_TRIM_CC2_RD: u32 = UCPD_CFG3_TRIM_CC2_RD_Msk;
pub const UCPD_CFG3_TRIM_CC2_RP_Pos: u32 = 25;
pub const UCPD_CFG3_TRIM_CC2_RP_Msk: u32 = 0xF << UCPD_CFG3_TRIM_CC2_RP_Pos;
pub const UCPD_CFG3_TRIM_CC2_RP: u32 = UCPD_CFG3_TRIM_CC2_RP_Msk;
pub const UCPD_CR_TXMODE_Pos: u32 = 0;
pub const UCPD_CR_TXMODE_Msk: u32 = 0x3 << UCPD_CR_TXMODE_Pos;
pub const UCPD_CR_TXMODE: u32 = UCPD_CR_TXMODE_Msk;
pub const UCPD_CR_TXMODE_0: u32 = 0x1 << UCPD_CR_TXMODE_Pos;
pub const UCPD_CR_TXMODE_1: u32 = 0x2 << UCPD_CR_TXMODE_Pos;
pub const UCPD_CR_TXSEND_Pos: u32 = 2;
pub const UCPD_CR_TXSEND_Msk: u32 = 0x1 << UCPD_CR_TXSEND_Pos;
pub const UCPD_CR_TXSEND: u32 = UCPD_CR_TXSEND_Msk;
pub const UCPD_CR_TXHRST_Pos: u32 = 3;
pub const UCPD_CR_TXHRST_Msk: u32 = 0x1 << UCPD_CR_TXHRST_Pos;
pub const UCPD_CR_TXHRST: u32 = UCPD_CR_TXHRST_Msk;
pub const UCPD_CR_RXMODE_Pos: u32 = 4;
pub const UCPD_CR_RXMODE_Msk: u32 = 0x1 << UCPD_CR_RXMODE_Pos;
pub const UCPD_CR_RXMODE: u32 = UCPD_CR_RXMODE_Msk;
pub const UCPD_CR_PHYRXEN_Pos: u32 = 5;
pub const UCPD_CR_PHYRXEN_Msk: u32 = 0x1 << UCPD_CR_PHYRXEN_Pos;
pub const UCPD_CR_PHYRXEN: u32 = UCPD_CR_PHYRXEN_Msk;
pub const UCPD_CR_PHYCCSEL_Pos: u32 = 6;
pub const UCPD_CR_PHYCCSEL_Msk: u32 = 0x1 << UCPD_CR_PHYCCSEL_Pos;
pub const UCPD_CR_PHYCCSEL: u32 = UCPD_CR_PHYCCSEL_Msk;
pub const UCPD_CR_ANASUBMODE_Pos: u32 = 7;
pub const UCPD_CR_ANASUBMODE_Msk: u32 = 0x3 << UCPD_CR_ANASUBMODE_Pos;
pub const UCPD_CR_ANASUBMODE: u32 = UCPD_CR_ANASUBMODE_Msk;
pub const UCPD_CR_ANASUBMODE_0: u32 = 0x1 << UCPD_CR_ANASUBMODE_Pos;
pub const UCPD_CR_ANASUBMODE_1: u32 = 0x2 << UCPD_CR_ANASUBMODE_Pos;
pub const UCPD_CR_ANAMODE_Pos: u32 = 9;
pub const UCPD_CR_ANAMODE_Msk: u32 = 0x1 << UCPD_CR_ANAMODE_Pos;
pub const UCPD_CR_ANAMODE: u32 = UCPD_CR_ANAMODE_Msk;
pub const UCPD_CR_CCENABLE_Pos: u32 = 10;
pub const UCPD_CR_CCENABLE_Msk: u32 = 0x3 << UCPD_CR_CCENABLE_Pos;
pub const UCPD_CR_CCENABLE: u32 = UCPD_CR_CCENABLE_Msk;
pub const UCPD_CR_CCENABLE_0: u32 = 0x1 << UCPD_CR_CCENABLE_Pos;
pub const UCPD_CR_CCENABLE_1: u32 = 0x2 << UCPD_CR_CCENABLE_Pos;
pub const UCPD_CR_USEEXTPHY_Pos: u32 = 12;
pub const UCPD_CR_USEEXTPHY_Msk: u32 = 0x1 << UCPD_CR_USEEXTPHY_Pos;
pub const UCPD_CR_USEEXTPHY: u32 = UCPD_CR_USEEXTPHY_Msk;
pub const UCPD_CR_CC2VCONNEN_Pos: u32 = 13;
pub const UCPD_CR_CC2VCONNEN_Msk: u32 = 0x1 << UCPD_CR_CC2VCONNEN_Pos;
pub const UCPD_CR_CC2VCONNEN: u32 = UCPD_CR_CC2VCONNEN_Msk;
pub const UCPD_CR_CC1VCONNEN_Pos: u32 = 14;
pub const UCPD_CR_CC1VCONNEN_Msk: u32 = 0x1 << UCPD_CR_CC1VCONNEN_Pos;
pub const UCPD_CR_CC1VCONNEN: u32 = UCPD_CR_CC1VCONNEN_Msk;
pub const UCPD_CR_DBATEN_Pos: u32 = 15;
pub const UCPD_CR_DBATEN_Msk: u32 = 0x1 << UCPD_CR_DBATEN_Pos;
pub const UCPD_CR_DBATEN: u32 = UCPD_CR_DBATEN_Msk;
pub const UCPD_CR_FRSRXEN_Pos: u32 = 16;
pub const UCPD_CR_FRSRXEN_Msk: u32 = 0x1 << UCPD_CR_FRSRXEN_Pos;
pub const UCPD_CR_FRSRXEN: u32 = UCPD_CR_FRSRXEN_Msk;
pub const UCPD_CR_FRSTX_Pos: u32 = 17;
pub const UCPD_CR_FRSTX_Msk: u32 = 0x1 << UCPD_CR_FRSTX_Pos;
pub const UCPD_CR_FRSTX: u32 = UCPD_CR_FRSTX_Msk;
pub const UCPD_CR_RDCH_Pos: u32 = 18;
pub const UCPD_CR_RDCH_Msk: u32 = 0x1 << UCPD_CR_RDCH_Pos;
pub const UCPD_CR_RDCH: u32 = UCPD_CR_RDCH_Msk;
pub const UCPD_CR_RPUSBABSENT_Pos: u32 = 19;
pub const UCPD_CR_RPUSBABSENT_Msk: u32 = 0x1 << UCPD_CR_RPUSBABSENT_Pos;
pub const UCPD_CR_RPUSBABSENT: u32 = UCPD_CR_RPUSBABSENT_Msk;
pub const UCPD_CR_CC1TCDIS_Pos: u32 = 20;
pub const UCPD_CR_CC1TCDIS_Msk: u32 = 0x1 << UCPD_CR_CC1TCDIS_Pos;
pub const UCPD_CR_CC1TCDIS: u32 = UCPD_CR_CC1TCDIS_Msk;
pub const UCPD_CR_CC2TCDIS_Pos: u32 = 21;
pub const UCPD_CR_CC2TCDIS_Msk: u32 = 0x1 << UCPD_CR_CC2TCDIS_Pos;
pub const UCPD_CR_CC2TCDIS: u32 = UCPD_CR_CC2TCDIS_Msk;
pub const UCPD_IMR_TXISIE_Pos: u32 = 0;
pub const UCPD_IMR_TXISIE_Msk: u32 = 0x1 << UCPD_IMR_TXISIE_Pos;
pub const UCPD_IMR_TXISIE: u32 = UCPD_IMR_TXISIE_Msk;
pub const UCPD_IMR_TXMSGDISCIE_Pos: u32 = 1;
pub const UCPD_IMR_TXMSGDISCIE_Msk: u32 = 0x1 << UCPD_IMR_TXMSGDISCIE_Pos;
pub const UCPD_IMR_TXMSGDISCIE: u32 = UCPD_IMR_TXMSGDISCIE_Msk;
pub const UCPD_IMR_TXMSGSENTIE_Pos: u32 = 2;
pub const UCPD_IMR_TXMSGSENTIE_Msk: u32 = 0x1 << UCPD_IMR_TXMSGSENTIE_Pos;
pub const UCPD_IMR_TXMSGSENTIE: u32 = UCPD_IMR_TXMSGSENTIE_Msk;
pub const UCPD_IMR_TXMSGABTIE_Pos: u32 = 3;
pub const UCPD_IMR_TXMSGABTIE_Msk: u32 = 0x1 << UCPD_IMR_TXMSGABTIE_Pos;
pub const UCPD_IMR_TXMSGABTIE: u32 = UCPD_IMR_TXMSGABTIE_Msk;
pub const UCPD_IMR_HRSTDISCIE_Pos: u32 = 4;
pub const UCPD_IMR_HRSTDISCIE_Msk: u32 = 0x1 << UCPD_IMR_HRSTDISCIE_Pos;
pub const UCPD_IMR_HRSTDISCIE: u32 = UCPD_IMR_HRSTDISCIE_Msk;
pub const UCPD_IMR_HRSTSENTIE_Pos: u32 = 5;
pub const UCPD_IMR_HRSTSENTIE_Msk: u32 = 0x1 << UCPD_IMR_HRSTSENTIE_Pos;
pub const UCPD_IMR_HRSTSENTIE: u32 = UCPD_IMR_HRSTSENTIE_Msk;
pub const UCPD_IMR_TXUNDIE_Pos: u32 = 6;
pub const UCPD_IMR_TXUNDIE_Msk: u32 = 0x1 << UCPD_IMR_TXUNDIE_Pos;
pub const UCPD_IMR_TXUNDIE: u32 = UCPD_IMR_TXUNDIE_Msk;
pub const UCPD_IMR_RXNEIE_Pos: u32 = 8;
pub const UCPD_IMR_RXNEIE_Msk: u32 = 0x1 << UCPD_IMR_RXNEIE_Pos;
pub const UCPD_IMR_RXNEIE: u32 = UCPD_IMR_RXNEIE_Msk;
pub const UCPD_IMR_RXORDDETIE_Pos: u32 = 9;
pub const UCPD_IMR_RXORDDETIE_Msk: u32 = 0x1 << UCPD_IMR_RXORDDETIE_Pos;
pub const UCPD_IMR_RXORDDETIE: u32 = UCPD_IMR_RXORDDETIE_Msk;
pub const UCPD_IMR_RXHRSTDETIE_Pos: u32 = 10;
pub const UCPD_IMR_RXHRSTDETIE_Msk: u32 = 0x1 << UCPD_IMR_RXHRSTDETIE_Pos;
pub const UCPD_IMR_RXHRSTDETIE: u32 = UCPD_IMR_RXHRSTDETIE_Msk;
pub const UCPD_IMR_RXOVRIE_Pos: u32 = 11;
pub const UCPD_IMR_RXOVRIE_Msk: u32 = 0x1 << UCPD_IMR_RXOVRIE_Pos;
pub const UCPD_IMR_RXOVRIE: u32 = UCPD_IMR_RXOVRIE_Msk;
pub const UCPD_IMR_RXMSGENDIE_Pos: u32 = 12;
pub const UCPD_IMR_RXMSGENDIE_Msk: u32 = 0x1 << UCPD_IMR_RXMSGENDIE_Pos;
pub const UCPD_IMR_RXMSGENDIE: u32 = UCPD_IMR_RXMSGENDIE_Msk;
pub const UCPD_IMR_TYPECEVT1IE_Pos: u32 = 14;
pub const UCPD_IMR_TYPECEVT1IE_Msk: u32 = 0x1 << UCPD_IMR_TYPECEVT1IE_Pos;
pub const UCPD_IMR_TYPECEVT1IE: u32 = UCPD_IMR_TYPECEVT1IE_Msk;
pub const UCPD_IMR_TYPECEVT2IE_Pos: u32 = 15;
pub const UCPD_IMR_TYPECEVT2IE_Msk: u32 = 0x1 << UCPD_IMR_TYPECEVT2IE_Pos;
pub const UCPD_IMR_TYPECEVT2IE: u32 = UCPD_IMR_TYPECEVT2IE_Msk;
pub const UCPD_IMR_FRSEVTIE_Pos: u32 = 20;
pub const UCPD_IMR_FRSEVTIE_Msk: u32 = 0x1 << UCPD_IMR_FRSEVTIE_Pos;
pub const UCPD_IMR_FRSEVTIE: u32 = UCPD_IMR_FRSEVTIE_Msk;
pub const UCPD_SR_TXIS_Pos: u32 = 0;
pub const UCPD_SR_TXIS_Msk: u32 = 0x1 << UCPD_SR_TXIS_Pos;
pub const UCPD_SR_TXIS: u32 = UCPD_SR_TXIS_Msk;
pub const UCPD_SR_TXMSGDISC_Pos: u32 = 1;
pub const UCPD_SR_TXMSGDISC_Msk: u32 = 0x1 << UCPD_SR_TXMSGDISC_Pos;
pub const UCPD_SR_TXMSGDISC: u32 = UCPD_SR_TXMSGDISC_Msk;
pub const UCPD_SR_TXMSGSENT_Pos: u32 = 2;
pub const UCPD_SR_TXMSGSENT_Msk: u32 = 0x1 << UCPD_SR_TXMSGSENT_Pos;
pub const UCPD_SR_TXMSGSENT: u32 = UCPD_SR_TXMSGSENT_Msk;
pub const UCPD_SR_TXMSGABT_Pos: u32 = 3;
pub const UCPD_SR_TXMSGABT_Msk: u32 = 0x1 << UCPD_SR_TXMSGABT_Pos;
pub const UCPD_SR_TXMSGABT: u32 = UCPD_SR_TXMSGABT_Msk;
pub const UCPD_SR_HRSTDISC_Pos: u32 = 4;
pub const UCPD_SR_HRSTDISC_Msk: u32 = 0x1 << UCPD_SR_HRSTDISC_Pos;
pub const UCPD_SR_HRSTDISC: u32 = UCPD_SR_HRSTDISC_Msk;
pub const UCPD_SR_HRSTSENT_Pos: u32 = 5;
pub const UCPD_SR_HRSTSENT_Msk: u32 = 0x1 << UCPD_SR_HRSTSENT_Pos;
pub const UCPD_SR_HRSTSENT: u32 = UCPD_SR_HRSTSENT_Msk;
pub const UCPD_SR_TXUND_Pos: u32 = 6;
pub const UCPD_SR_TXUND_Msk: u32 = 0x1 << UCPD_SR_TXUND_Pos;
pub const UCPD_SR_TXUND: u32 = UCPD_SR_TXUND_Msk;
pub const UCPD_SR_RXNE_Pos: u32 = 8;
pub const UCPD_SR_RXNE_Msk: u32 = 0x1 << UCPD_SR_RXNE_Pos;
pub const UCPD_SR_RXNE: u32 = UCPD_SR_RXNE_Msk;
pub const UCPD_SR_RXORDDET_Pos: u32 = 9;
pub const UCPD_SR_RXORDDET_Msk: u32 = 0x1 << UCPD_SR_RXORDDET_Pos;
pub const UCPD_SR_RXORDDET: u32 = UCPD_SR_RXORDDET_Msk;
pub const UCPD_SR_RXHRSTDET_Pos: u32 = 10;
pub const UCPD_SR_RXHRSTDET_Msk: u32 = 0x1 << UCPD_SR_RXHRSTDET_Pos;
pub const UCPD_SR_RXHRSTDET: u32 = UCPD_SR_RXHRSTDET_Msk;
pub const UCPD_SR_RXOVR_Pos: u32 = 11;
pub const UCPD_SR_RXOVR_Msk: u32 = 0x1 << UCPD_SR_RXOVR_Pos;
pub const UCPD_SR_RXOVR: u32 = UCPD_SR_RXOVR_Msk;
pub const UCPD_SR_RXMSGEND_Pos: u32 = 12;
pub const UCPD_SR_RXMSGEND_Msk: u32 = 0x1 << UCPD_SR_RXMSGEND_Pos;
pub const UCPD_SR_RXMSGEND: u32 = UCPD_SR_RXMSGEND_Msk;
pub const UCPD_SR_RXERR_Pos: u32 = 13;
pub const UCPD_SR_RXERR_Msk: u32 = 0x1 << UCPD_SR_RXERR_Pos;
pub const UCPD_SR_RXERR: u32 = UCPD_SR_RXERR_Msk;
pub const UCPD_SR_TYPECEVT1_Pos: u32 = 14;
pub const UCPD_SR_TYPECEVT1_Msk: u32 = 0x1 << UCPD_SR_TYPECEVT1_Pos;
pub const UCPD_SR_TYPECEVT1: u32 = UCPD_SR_TYPECEVT1_Msk;
pub const UCPD_SR_TYPECEVT2_Pos: u32 = 15;
pub const UCPD_SR_TYPECEVT2_Msk: u32 = 0x1 << UCPD_SR_TYPECEVT2_Pos;
pub const UCPD_SR_TYPECEVT2: u32 = UCPD_SR_TYPECEVT2_Msk;
pub const UCPD_SR_TYPEC_VSTATE_CC1_Pos: u32 = 16;
pub const UCPD_SR_TYPEC_VSTATE_CC1_Msk: u32 = 0x3 << UCPD_SR_TYPEC_VSTATE_CC1_Pos;
pub const UCPD_SR_TYPEC_VSTATE_CC1: u32 = UCPD_SR_TYPEC_VSTATE_CC1_Msk;
pub const UCPD_SR_TYPEC_VSTATE_CC1_0: u32 = 0x1 << UCPD_SR_TYPEC_VSTATE_CC1_Pos;
pub const UCPD_SR_TYPEC_VSTATE_CC1_1: u32 = 0x2 << UCPD_SR_TYPEC_VSTATE_CC1_Pos;
pub const UCPD_SR_TYPEC_VSTATE_CC2_Pos: u32 = 18;
pub const UCPD_SR_TYPEC_VSTATE_CC2_Msk: u32 = 0x3 << UCPD_SR_TYPEC_VSTATE_CC2_Pos;
pub const UCPD_SR_TYPEC_VSTATE_CC2: u32 = UCPD_SR_TYPEC_VSTATE_CC2_Msk;
pub const UCPD_SR_TYPEC_VSTATE_CC2_0: u32 = 0x1 << UCPD_SR_TYPEC_VSTATE_CC2_Pos;
pub const UCPD_SR_TYPEC_VSTATE_CC2_1: u32 = 0x2 << UCPD_SR_TYPEC_VSTATE_CC2_Pos;
pub const UCPD_SR_FRSEVT_Pos: u32 = 20;
pub const UCPD_SR_FRSEVT_Msk: u32 = 0x1 << UCPD_SR_FRSEVT_Pos;
pub const UCPD_SR_FRSEVT: u32 = UCPD_SR_FRSEVT_Msk;
pub const UCPD_ICR_TXMSGDISCCF_Pos: u32 = 1;
pub const UCPD_ICR_TXMSGDISCCF_Msk: u32 = 0x1 << UCPD_ICR_TXMSGDISCCF_Pos;
pub const UCPD_ICR_TXMSGDISCCF: u32 = UCPD_ICR_TXMSGDISCCF_Msk;
pub const UCPD_ICR_TXMSGSENTCF_Pos: u32 = 2;
pub const UCPD_ICR_TXMSGSENTCF_Msk: u32 = 0x1 << UCPD_ICR_TXMSGSENTCF_Pos;
pub const UCPD_ICR_TXMSGSENTCF: u32 = UCPD_ICR_TXMSGSENTCF_Msk;
pub const UCPD_ICR_TXMSGABTCF_Pos: u32 = 3;
pub const UCPD_ICR_TXMSGABTCF_Msk: u32 = 0x1 << UCPD_ICR_TXMSGABTCF_Pos;
pub const UCPD_ICR_TXMSGABTCF: u32 = UCPD_ICR_TXMSGABTCF_Msk;
pub const UCPD_ICR_HRSTDISCCF_Pos: u32 = 4;
pub const UCPD_ICR_HRSTDISCCF_Msk: u32 = 0x1 << UCPD_ICR_HRSTDISCCF_Pos;
pub const UCPD_ICR_HRSTDISCCF: u32 = UCPD_ICR_HRSTDISCCF_Msk;
pub const UCPD_ICR_HRSTSENTCF_Pos: u32 = 5;
pub const UCPD_ICR_HRSTSENTCF_Msk: u32 = 0x1 << UCPD_ICR_HRSTSENTCF_Pos;
pub const UCPD_ICR_HRSTSENTCF: u32 = UCPD_ICR_HRSTSENTCF_Msk;
pub const UCPD_ICR_TXUNDCF_Pos: u32 = 6;
pub const UCPD_ICR_TXUNDCF_Msk: u32 = 0x1 << UCPD_ICR_TXUNDCF_Pos;
pub const UCPD_ICR_TXUNDCF: u32 = UCPD_ICR_TXUNDCF_Msk;
pub const UCPD_ICR_RXORDDETCF_Pos: u32 = 9;
pub const UCPD_ICR_RXORDDETCF_Msk: u32 = 0x1 << UCPD_ICR_RXORDDETCF_Pos;
pub const UCPD_ICR_RXORDDETCF: u32 = UCPD_ICR_RXORDDETCF_Msk;
pub const UCPD_ICR_RXHRSTDETCF_Pos: u32 = 10;
pub const UCPD_ICR_RXHRSTDETCF_Msk: u32 = 0x1 << UCPD_ICR_RXHRSTDETCF_Pos;
pub const UCPD_ICR_RXHRSTDETCF: u32 = UCPD_ICR_RXHRSTDETCF_Msk;
pub const UCPD_ICR_RXOVRCF_Pos: u32 = 11;
pub const UCPD_ICR_RXOVRCF_Msk: u32 = 0x1 << UCPD_ICR_RXOVRCF_Pos;
pub const UCPD_ICR_RXOVRCF: u32 = UCPD_ICR_RXOVRCF_Msk;
pub const UCPD_ICR_RXMSGENDCF_Pos: u32 = 12;
pub const UCPD_ICR_RXMSGENDCF_Msk: u32 = 0x1 << UCPD_ICR_RXMSGENDCF_Pos;
pub const UCPD_ICR_RXMSGENDCF: u32 = UCPD_ICR_RXMSGENDCF_Msk;
pub const UCPD_ICR_TYPECEVT1CF_Pos: u32 = 14;
pub const UCPD_ICR_TYPECEVT1CF_Msk: u32 = 0x1 << UCPD_ICR_TYPECEVT1CF_Pos;
pub const UCPD_ICR_TYPECEVT1CF: u32 = UCPD_ICR_TYPECEVT1CF_Msk;
pub const UCPD_ICR_TYPECEVT2CF_Pos: u32 = 15;
pub const UCPD_ICR_TYPECEVT2CF_Msk: u32 = 0x1 << UCPD_ICR_TYPECEVT2CF_Pos;
pub const UCPD_ICR_TYPECEVT2CF: u32 = UCPD_ICR_TYPECEVT2CF_Msk;
pub const UCPD_ICR_FRSEVTCF_Pos: u32 = 20;
pub const UCPD_ICR_FRSEVTCF_Msk: u32 = 0x1 << UCPD_ICR_FRSEVTCF_Pos;
pub const UCPD_ICR_FRSEVTCF: u32 = UCPD_ICR_FRSEVTCF_Msk;
pub const UCPD_TX_ORDSET_TXORDSET_Pos: u32 = 0;
pub const UCPD_TX_ORDSET_TXORDSET_Msk: u32 = 0xFFFFF << UCPD_TX_ORDSET_TXORDSET_Pos;
pub const UCPD_TX_ORDSET_TXORDSET: u32 = UCPD_TX_ORDSET_TXORDSET_Msk;
pub const UCPD_TX_PAYSZ_TXPAYSZ_Pos: u32 = 0;
pub const UCPD_TX_PAYSZ_TXPAYSZ_Msk: u32 = 0x3FF << UCPD_TX_PAYSZ_TXPAYSZ_Pos;
pub const UCPD_TX_PAYSZ_TXPAYSZ: u32 = UCPD_TX_PAYSZ_TXPAYSZ_Msk;
pub const UCPD_TXDR_TXDATA_Pos: u32 = 0;
pub const UCPD_TXDR_TXDATA_Msk: u32 = 0xFF << UCPD_TXDR_TXDATA_Pos;
pub const UCPD_TXDR_TXDATA: u32 = UCPD_TXDR_TXDATA_Msk;
pub const UCPD_RX_ORDSET_RXORDSET_Pos: u32 = 0;
pub const UCPD_RX_ORDSET_RXORDSET_Msk: u32 = 0x7 << UCPD_RX_ORDSET_RXORDSET_Pos;
pub const UCPD_RX_ORDSET_RXORDSET: u32 = UCPD_RX_ORDSET_RXORDSET_Msk;
pub const UCPD_RX_ORDSET_RXORDSET_0: u32 = 0x1 << UCPD_RX_ORDSET_RXORDSET_Pos;
pub const UCPD_RX_ORDSET_RXORDSET_1: u32 = 0x2 << UCPD_RX_ORDSET_RXORDSET_Pos;
pub const UCPD_RX_ORDSET_RXORDSET_2: u32 = 0x4 << UCPD_RX_ORDSET_RXORDSET_Pos;
pub const UCPD_RX_ORDSET_RXSOP3OF4_Pos: u32 = 3;
pub const UCPD_RX_ORDSET_RXSOP3OF4_Msk: u32 = 0x1 << UCPD_RX_ORDSET_RXSOP3OF4_Pos;
pub const UCPD_RX_ORDSET_RXSOP3OF4: u32 = UCPD_RX_ORDSET_RXSOP3OF4_Msk;
pub const UCPD_RX_ORDSET_RXSOPKINVALID_Pos: u32 = 4;
pub const UCPD_RX_ORDSET_RXSOPKINVALID_Msk: u32 = 0x7 << UCPD_RX_ORDSET_RXSOPKINVALID_Pos;
pub const UCPD_RX_ORDSET_RXSOPKINVALID: u32 = UCPD_RX_ORDSET_RXSOPKINVALID_Msk;
pub const UCPD_RX_PAYSZ_RXPAYSZ_Pos: u32 = 0;
pub const UCPD_RX_PAYSZ_RXPAYSZ_Msk: u32 = 0x3FF << UCPD_RX_PAYSZ_RXPAYSZ_Pos;
pub const UCPD_RX_PAYSZ_RXPAYSZ: u32 = UCPD_RX_PAYSZ_RXPAYSZ_Msk;
pub const UCPD_RXDR_RXDATA_Pos: u32 = 0;
pub const UCPD_RXDR_RXDATA_Msk: u32 = 0xFF << UCPD_RXDR_RXDATA_Pos;
pub const UCPD_RXDR_RXDATA: u32 = UCPD_RXDR_RXDATA_Msk;
pub const UCPD_RX_ORDEXT1_RXSOPX1_Pos: u32 = 0;
pub const UCPD_RX_ORDEXT1_RXSOPX1_Msk: u32 = 0xFFFFF << UCPD_RX_ORDEXT1_RXSOPX1_Pos;
pub const UCPD_RX_ORDEXT1_RXSOPX1: u32 = UCPD_RX_ORDEXT1_RXSOPX1_Msk;
pub const UCPD_RX_ORDEXT2_RXSOPX2_Pos: u32 = 0;
pub const UCPD_RX_ORDEXT2_RXSOPX2_Msk: u32 = 0xFFFFF << UCPD_RX_ORDEXT2_RXSOPX2_Pos;
pub const UCPD_RX_ORDEXT2_RXSOPX2: u32 = UCPD_RX_ORDEXT2_RXSOPX2_Msk;
pub const USB_OTG_GOTGCTL_SRQSCS_Pos: u32 = 0;
pub const USB_OTG_GOTGCTL_SRQSCS_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_SRQSCS_Pos;
pub const USB_OTG_GOTGCTL_SRQSCS: u32 = USB_OTG_GOTGCTL_SRQSCS_Msk;
pub const USB_OTG_GOTGCTL_SRQ_Pos: u32 = 1;
pub const USB_OTG_GOTGCTL_SRQ_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_SRQ_Pos;
pub const USB_OTG_GOTGCTL_SRQ: u32 = USB_OTG_GOTGCTL_SRQ_Msk;
pub const USB_OTG_GOTGCTL_VBVALOEN_Pos: u32 = 2;
pub const USB_OTG_GOTGCTL_VBVALOEN_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_VBVALOEN_Pos;
pub const USB_OTG_GOTGCTL_VBVALOEN: u32 = USB_OTG_GOTGCTL_VBVALOEN_Msk;
pub const USB_OTG_GOTGCTL_VBVALOVAL_Pos: u32 = 3;
pub const USB_OTG_GOTGCTL_VBVALOVAL_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_VBVALOVAL_Pos;
pub const USB_OTG_GOTGCTL_VBVALOVAL: u32 = USB_OTG_GOTGCTL_VBVALOVAL_Msk;
pub const USB_OTG_GOTGCTL_AVALOEN_Pos: u32 = 4;
pub const USB_OTG_GOTGCTL_AVALOEN_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_AVALOEN_Pos;
pub const USB_OTG_GOTGCTL_AVALOEN: u32 = USB_OTG_GOTGCTL_AVALOEN_Msk;
pub const USB_OTG_GOTGCTL_AVALOVAL_Pos: u32 = 5;
pub const USB_OTG_GOTGCTL_AVALOVAL_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_AVALOVAL_Pos;
pub const USB_OTG_GOTGCTL_AVALOVAL: u32 = USB_OTG_GOTGCTL_AVALOVAL_Msk;
pub const USB_OTG_GOTGCTL_BVALOEN_Pos: u32 = 6;
pub const USB_OTG_GOTGCTL_BVALOEN_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_BVALOEN_Pos;
pub const USB_OTG_GOTGCTL_BVALOEN: u32 = USB_OTG_GOTGCTL_BVALOEN_Msk;
pub const USB_OTG_GOTGCTL_BVALOVAL_Pos: u32 = 7;
pub const USB_OTG_GOTGCTL_BVALOVAL_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_BVALOVAL_Pos;
pub const USB_OTG_GOTGCTL_BVALOVAL: u32 = USB_OTG_GOTGCTL_BVALOVAL_Msk;
pub const USB_OTG_GOTGCTL_BSESVLD_Pos: u32 = 19;
pub const USB_OTG_GOTGCTL_BSESVLD_Msk: u32 = 0x1 << USB_OTG_GOTGCTL_BSESVLD_Pos;
pub const USB_OTG_GOTGCTL_BSESVLD: u32 = USB_OTG_GOTGCTL_BSESVLD_Msk;
pub const USB_OTG_HCFG_FSLSPCS_Pos: u32 = 0;
pub const USB_OTG_HCFG_FSLSPCS_Msk: u32 = 0x3 << USB_OTG_HCFG_FSLSPCS_Pos;
pub const USB_OTG_HCFG_FSLSPCS: u32 = USB_OTG_HCFG_FSLSPCS_Msk;
pub const USB_OTG_HCFG_FSLSPCS_0: u32 = 0x1 << USB_OTG_HCFG_FSLSPCS_Pos;
pub const USB_OTG_HCFG_FSLSPCS_1: u32 = 0x2 << USB_OTG_HCFG_FSLSPCS_Pos;
pub const USB_OTG_HCFG_FSLSS_Pos: u32 = 2;
pub const USB_OTG_HCFG_FSLSS_Msk: u32 = 0x1 << USB_OTG_HCFG_FSLSS_Pos;
pub const USB_OTG_HCFG_FSLSS: u32 = USB_OTG_HCFG_FSLSS_Msk;
pub const USB_OTG_DCFG_DSPD_Pos: u32 = 0;
pub const USB_OTG_DCFG_DSPD_Msk: u32 = 0x3 << USB_OTG_DCFG_DSPD_Pos;
pub const USB_OTG_DCFG_DSPD: u32 = USB_OTG_DCFG_DSPD_Msk;
pub const USB_OTG_DCFG_DSPD_0: u32 = 0x1 << USB_OTG_DCFG_DSPD_Pos;
pub const USB_OTG_DCFG_DSPD_1: u32 = 0x2 << USB_OTG_DCFG_DSPD_Pos;
pub const USB_OTG_DCFG_NZLSOHSK_Pos: u32 = 2;
pub const USB_OTG_DCFG_NZLSOHSK_Msk: u32 = 0x1 << USB_OTG_DCFG_NZLSOHSK_Pos;
pub const USB_OTG_DCFG_NZLSOHSK: u32 = USB_OTG_DCFG_NZLSOHSK_Msk;
pub const USB_OTG_DCFG_DAD_Pos: u32 = 4;
pub const USB_OTG_DCFG_DAD_Msk: u32 = 0x7F << USB_OTG_DCFG_DAD_Pos;
pub const USB_OTG_DCFG_DAD: u32 = USB_OTG_DCFG_DAD_Msk;
pub const USB_OTG_DCFG_DAD_0: u32 = 0x01 << USB_OTG_DCFG_DAD_Pos;
pub const USB_OTG_DCFG_DAD_1: u32 = 0x02 << USB_OTG_DCFG_DAD_Pos;
pub const USB_OTG_DCFG_DAD_2: u32 = 0x04 << USB_OTG_DCFG_DAD_Pos;
pub const USB_OTG_DCFG_DAD_3: u32 = 0x08 << USB_OTG_DCFG_DAD_Pos;
pub const USB_OTG_DCFG_DAD_4: u32 = 0x10 << USB_OTG_DCFG_DAD_Pos;
pub const USB_OTG_DCFG_DAD_5: u32 = 0x20 << USB_OTG_DCFG_DAD_Pos;
pub const USB_OTG_DCFG_DAD_6: u32 = 0x40 << USB_OTG_DCFG_DAD_Pos;
pub const USB_OTG_DCFG_PFIVL_Pos: u32 = 11;
pub const USB_OTG_DCFG_PFIVL_Msk: u32 = 0x3 << USB_OTG_DCFG_PFIVL_Pos;
pub const USB_OTG_DCFG_PFIVL: u32 = USB_OTG_DCFG_PFIVL_Msk;
pub const USB_OTG_DCFG_PFIVL_0: u32 = 0x1 << USB_OTG_DCFG_PFIVL_Pos;
pub const USB_OTG_DCFG_PFIVL_1: u32 = 0x2 << USB_OTG_DCFG_PFIVL_Pos;
pub const USB_OTG_DCFG_PERSCHIVL_Pos: u32 = 24;
pub const USB_OTG_DCFG_PERSCHIVL_Msk: u32 = 0x3 << USB_OTG_DCFG_PERSCHIVL_Pos;
pub const USB_OTG_DCFG_PERSCHIVL: u32 = USB_OTG_DCFG_PERSCHIVL_Msk;
pub const USB_OTG_DCFG_PERSCHIVL_0: u32 = 0x1 << USB_OTG_DCFG_PERSCHIVL_Pos;
pub const USB_OTG_DCFG_PERSCHIVL_1: u32 = 0x2 << USB_OTG_DCFG_PERSCHIVL_Pos;
pub const USB_OTG_PCGCR_STPPCLK_Pos: u32 = 0;
pub const USB_OTG_PCGCR_STPPCLK_Msk: u32 = 0x1 << USB_OTG_PCGCR_STPPCLK_Pos;
pub const USB_OTG_PCGCR_STPPCLK: u32 = USB_OTG_PCGCR_STPPCLK_Msk;
pub const USB_OTG_PCGCR_GATEHCLK_Pos: u32 = 1;
pub const USB_OTG_PCGCR_GATEHCLK_Msk: u32 = 0x1 << USB_OTG_PCGCR_GATEHCLK_Pos;
pub const USB_OTG_PCGCR_GATEHCLK: u32 = USB_OTG_PCGCR_GATEHCLK_Msk;
pub const USB_OTG_PCGCR_PHYSUSP_Pos: u32 = 4;
pub const USB_OTG_PCGCR_PHYSUSP_Msk: u32 = 0x1 << USB_OTG_PCGCR_PHYSUSP_Pos;
pub const USB_OTG_PCGCR_PHYSUSP: u32 = USB_OTG_PCGCR_PHYSUSP_Msk;
pub const USB_OTG_GOTGINT_SEDET_Pos: u32 = 2;
pub const USB_OTG_GOTGINT_SEDET_Msk: u32 = 0x1 << USB_OTG_GOTGINT_SEDET_Pos;
pub const USB_OTG_GOTGINT_SEDET: u32 = USB_OTG_GOTGINT_SEDET_Msk;
pub const USB_OTG_GOTGINT_SRSSCHG_Pos: u32 = 8;
pub const USB_OTG_GOTGINT_SRSSCHG_Msk: u32 = 0x1 << USB_OTG_GOTGINT_SRSSCHG_Pos;
pub const USB_OTG_GOTGINT_SRSSCHG: u32 = USB_OTG_GOTGINT_SRSSCHG_Msk;
pub const USB_OTG_GOTGINT_HNSSCHG_Pos: u32 = 9;
pub const USB_OTG_GOTGINT_HNSSCHG_Msk: u32 = 0x1 << USB_OTG_GOTGINT_HNSSCHG_Pos;
pub const USB_OTG_GOTGINT_HNSSCHG: u32 = USB_OTG_GOTGINT_HNSSCHG_Msk;
pub const USB_OTG_GOTGINT_HNGDET_Pos: u32 = 17;
pub const USB_OTG_GOTGINT_HNGDET_Msk: u32 = 0x1 << USB_OTG_GOTGINT_HNGDET_Pos;
pub const USB_OTG_GOTGINT_HNGDET: u32 = USB_OTG_GOTGINT_HNGDET_Msk;
pub const USB_OTG_GOTGINT_ADTOCHG_Pos: u32 = 18;
pub const USB_OTG_GOTGINT_ADTOCHG_Msk: u32 = 0x1 << USB_OTG_GOTGINT_ADTOCHG_Pos;
pub const USB_OTG_GOTGINT_ADTOCHG: u32 = USB_OTG_GOTGINT_ADTOCHG_Msk;
pub const USB_OTG_GOTGINT_DBCDNE_Pos: u32 = 19;
pub const USB_OTG_GOTGINT_DBCDNE_Msk: u32 = 0x1 << USB_OTG_GOTGINT_DBCDNE_Pos;
pub const USB_OTG_GOTGINT_DBCDNE: u32 = USB_OTG_GOTGINT_DBCDNE_Msk;
pub const USB_OTG_DCTL_RWUSIG_Pos: u32 = 0;
pub const USB_OTG_DCTL_RWUSIG_Msk: u32 = 0x1 << USB_OTG_DCTL_RWUSIG_Pos;
pub const USB_OTG_DCTL_RWUSIG: u32 = USB_OTG_DCTL_RWUSIG_Msk;
pub const USB_OTG_DCTL_SDIS_Pos: u32 = 1;
pub const USB_OTG_DCTL_SDIS_Msk: u32 = 0x1 << USB_OTG_DCTL_SDIS_Pos;
pub const USB_OTG_DCTL_SDIS: u32 = USB_OTG_DCTL_SDIS_Msk;
pub const USB_OTG_DCTL_GINSTS_Pos: u32 = 2;
pub const USB_OTG_DCTL_GINSTS_Msk: u32 = 0x1 << USB_OTG_DCTL_GINSTS_Pos;
pub const USB_OTG_DCTL_GINSTS: u32 = USB_OTG_DCTL_GINSTS_Msk;
pub const USB_OTG_DCTL_GONSTS_Pos: u32 = 3;
pub const USB_OTG_DCTL_GONSTS_Msk: u32 = 0x1 << USB_OTG_DCTL_GONSTS_Pos;
pub const USB_OTG_DCTL_GONSTS: u32 = USB_OTG_DCTL_GONSTS_Msk;
pub const USB_OTG_DCTL_TCTL_Pos: u32 = 4;
pub const USB_OTG_DCTL_TCTL_Msk: u32 = 0x7 << USB_OTG_DCTL_TCTL_Pos;
pub const USB_OTG_DCTL_TCTL: u32 = USB_OTG_DCTL_TCTL_Msk;
pub const USB_OTG_DCTL_TCTL_0: u32 = 0x1 << USB_OTG_DCTL_TCTL_Pos;
pub const USB_OTG_DCTL_TCTL_1: u32 = 0x2 << USB_OTG_DCTL_TCTL_Pos;
pub const USB_OTG_DCTL_TCTL_2: u32 = 0x4 << USB_OTG_DCTL_TCTL_Pos;
pub const USB_OTG_DCTL_SGINAK_Pos: u32 = 7;
pub const USB_OTG_DCTL_SGINAK_Msk: u32 = 0x1 << USB_OTG_DCTL_SGINAK_Pos;
pub const USB_OTG_DCTL_SGINAK: u32 = USB_OTG_DCTL_SGINAK_Msk;
pub const USB_OTG_DCTL_CGINAK_Pos: u32 = 8;
pub const USB_OTG_DCTL_CGINAK_Msk: u32 = 0x1 << USB_OTG_DCTL_CGINAK_Pos;
pub const USB_OTG_DCTL_CGINAK: u32 = USB_OTG_DCTL_CGINAK_Msk;
pub const USB_OTG_DCTL_SGONAK_Pos: u32 = 9;
pub const USB_OTG_DCTL_SGONAK_Msk: u32 = 0x1 << USB_OTG_DCTL_SGONAK_Pos;
pub const USB_OTG_DCTL_SGONAK: u32 = USB_OTG_DCTL_SGONAK_Msk;
pub const USB_OTG_DCTL_CGONAK_Pos: u32 = 10;
pub const USB_OTG_DCTL_CGONAK_Msk: u32 = 0x1 << USB_OTG_DCTL_CGONAK_Pos;
pub const USB_OTG_DCTL_CGONAK: u32 = USB_OTG_DCTL_CGONAK_Msk;
pub const USB_OTG_DCTL_POPRGDNE_Pos: u32 = 11;
pub const USB_OTG_DCTL_POPRGDNE_Msk: u32 = 0x1 << USB_OTG_DCTL_POPRGDNE_Pos;
pub const USB_OTG_DCTL_POPRGDNE: u32 = USB_OTG_DCTL_POPRGDNE_Msk;
pub const USB_OTG_HFIR_FRIVL_Pos: u32 = 0;
pub const USB_OTG_HFIR_FRIVL_Msk: u32 = 0xFFFF << USB_OTG_HFIR_FRIVL_Pos;
pub const USB_OTG_HFIR_FRIVL: u32 = USB_OTG_HFIR_FRIVL_Msk;
pub const USB_OTG_HFNUM_FRNUM_Pos: u32 = 0;
pub const USB_OTG_HFNUM_FRNUM_Msk: u32 = 0xFFFF << USB_OTG_HFNUM_FRNUM_Pos;
pub const USB_OTG_HFNUM_FRNUM: u32 = USB_OTG_HFNUM_FRNUM_Msk;
pub const USB_OTG_HFNUM_FTREM_Pos: u32 = 16;
pub const USB_OTG_HFNUM_FTREM_Msk: u32 = 0xFFFF << USB_OTG_HFNUM_FTREM_Pos;
pub const USB_OTG_HFNUM_FTREM: u32 = USB_OTG_HFNUM_FTREM_Msk;
pub const USB_OTG_DSTS_SUSPSTS_Pos: u32 = 0;
pub const USB_OTG_DSTS_SUSPSTS_Msk: u32 = 0x1 << USB_OTG_DSTS_SUSPSTS_Pos;
pub const USB_OTG_DSTS_SUSPSTS: u32 = USB_OTG_DSTS_SUSPSTS_Msk;
pub const USB_OTG_DSTS_ENUMSPD_Pos: u32 = 1;
pub const USB_OTG_DSTS_ENUMSPD_Msk: u32 = 0x3 << USB_OTG_DSTS_ENUMSPD_Pos;
pub const USB_OTG_DSTS_ENUMSPD: u32 = USB_OTG_DSTS_ENUMSPD_Msk;
pub const USB_OTG_DSTS_ENUMSPD_0: u32 = 0x1 << USB_OTG_DSTS_ENUMSPD_Pos;
pub const USB_OTG_DSTS_ENUMSPD_1: u32 = 0x2 << USB_OTG_DSTS_ENUMSPD_Pos;
pub const USB_OTG_DSTS_EERR_Pos: u32 = 3;
pub const USB_OTG_DSTS_EERR_Msk: u32 = 0x1 << USB_OTG_DSTS_EERR_Pos;
pub const USB_OTG_DSTS_EERR: u32 = USB_OTG_DSTS_EERR_Msk;
pub const USB_OTG_DSTS_FNSOF_Pos: u32 = 8;
pub const USB_OTG_DSTS_FNSOF_Msk: u32 = 0x3FFF << USB_OTG_DSTS_FNSOF_Pos;
pub const USB_OTG_DSTS_FNSOF: u32 = USB_OTG_DSTS_FNSOF_Msk;
pub const USB_OTG_GAHBCFG_GINT_Pos: u32 = 0;
pub const USB_OTG_GAHBCFG_GINT_Msk: u32 = 0x1 << USB_OTG_GAHBCFG_GINT_Pos;
pub const USB_OTG_GAHBCFG_GINT: u32 = USB_OTG_GAHBCFG_GINT_Msk;
pub const USB_OTG_GAHBCFG_HBSTLEN_Pos: u32 = 1;
pub const USB_OTG_GAHBCFG_HBSTLEN_Msk: u32 = 0xF << USB_OTG_GAHBCFG_HBSTLEN_Pos;
pub const USB_OTG_GAHBCFG_HBSTLEN: u32 = USB_OTG_GAHBCFG_HBSTLEN_Msk;
pub const USB_OTG_GAHBCFG_HBSTLEN_0: u32 = 0x1 << USB_OTG_GAHBCFG_HBSTLEN_Pos;
pub const USB_OTG_GAHBCFG_HBSTLEN_1: u32 = 0x2 << USB_OTG_GAHBCFG_HBSTLEN_Pos;
pub const USB_OTG_GAHBCFG_HBSTLEN_2: u32 = 0x4 << USB_OTG_GAHBCFG_HBSTLEN_Pos;
pub const USB_OTG_GAHBCFG_HBSTLEN_3: u32 = 0x8 << USB_OTG_GAHBCFG_HBSTLEN_Pos;
pub const USB_OTG_GAHBCFG_DMAEN_Pos: u32 = 5;
pub const USB_OTG_GAHBCFG_DMAEN_Msk: u32 = 0x1 << USB_OTG_GAHBCFG_DMAEN_Pos;
pub const USB_OTG_GAHBCFG_DMAEN: u32 = USB_OTG_GAHBCFG_DMAEN_Msk;
pub const USB_OTG_GAHBCFG_TXFELVL_Pos: u32 = 7;
pub const USB_OTG_GAHBCFG_TXFELVL_Msk: u32 = 0x1 << USB_OTG_GAHBCFG_TXFELVL_Pos;
pub const USB_OTG_GAHBCFG_TXFELVL: u32 = USB_OTG_GAHBCFG_TXFELVL_Msk;
pub const USB_OTG_GAHBCFG_PTXFELVL_Pos: u32 = 8;
pub const USB_OTG_GAHBCFG_PTXFELVL_Msk: u32 = 0x1 << USB_OTG_GAHBCFG_PTXFELVL_Pos;
pub const USB_OTG_GAHBCFG_PTXFELVL: u32 = USB_OTG_GAHBCFG_PTXFELVL_Msk;
pub const USB_OTG_GUSBCFG_TOCAL_Pos: u32 = 0;
pub const USB_OTG_GUSBCFG_TOCAL_Msk: u32 = 0x7 << USB_OTG_GUSBCFG_TOCAL_Pos;
pub const USB_OTG_GUSBCFG_TOCAL: u32 = USB_OTG_GUSBCFG_TOCAL_Msk;
pub const USB_OTG_GUSBCFG_TOCAL_0: u32 = 0x1 << USB_OTG_GUSBCFG_TOCAL_Pos;
pub const USB_OTG_GUSBCFG_TOCAL_1: u32 = 0x2 << USB_OTG_GUSBCFG_TOCAL_Pos;
pub const USB_OTG_GUSBCFG_TOCAL_2: u32 = 0x4 << USB_OTG_GUSBCFG_TOCAL_Pos;
pub const USB_OTG_GUSBCFG_PHYSEL_Pos: u32 = 6;
pub const USB_OTG_GUSBCFG_PHYSEL_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_PHYSEL_Pos;
pub const USB_OTG_GUSBCFG_PHYSEL: u32 = USB_OTG_GUSBCFG_PHYSEL_Msk;
pub const USB_OTG_GUSBCFG_SRPCAP_Pos: u32 = 8;
pub const USB_OTG_GUSBCFG_SRPCAP_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_SRPCAP_Pos;
pub const USB_OTG_GUSBCFG_SRPCAP: u32 = USB_OTG_GUSBCFG_SRPCAP_Msk;
pub const USB_OTG_GUSBCFG_HNPCAP_Pos: u32 = 9;
pub const USB_OTG_GUSBCFG_HNPCAP_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_HNPCAP_Pos;
pub const USB_OTG_GUSBCFG_HNPCAP: u32 = USB_OTG_GUSBCFG_HNPCAP_Msk;
pub const USB_OTG_GUSBCFG_TRDT_Pos: u32 = 10;
pub const USB_OTG_GUSBCFG_TRDT_Msk: u32 = 0xF << USB_OTG_GUSBCFG_TRDT_Pos;
pub const USB_OTG_GUSBCFG_TRDT: u32 = USB_OTG_GUSBCFG_TRDT_Msk;
pub const USB_OTG_GUSBCFG_TRDT_0: u32 = 0x1 << USB_OTG_GUSBCFG_TRDT_Pos;
pub const USB_OTG_GUSBCFG_TRDT_1: u32 = 0x2 << USB_OTG_GUSBCFG_TRDT_Pos;
pub const USB_OTG_GUSBCFG_TRDT_2: u32 = 0x4 << USB_OTG_GUSBCFG_TRDT_Pos;
pub const USB_OTG_GUSBCFG_TRDT_3: u32 = 0x8 << USB_OTG_GUSBCFG_TRDT_Pos;
pub const USB_OTG_GUSBCFG_PHYLPCS_Pos: u32 = 15;
pub const USB_OTG_GUSBCFG_PHYLPCS_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_PHYLPCS_Pos;
pub const USB_OTG_GUSBCFG_PHYLPCS: u32 = USB_OTG_GUSBCFG_PHYLPCS_Msk;
pub const USB_OTG_GUSBCFG_ULPIFSLS_Pos: u32 = 17;
pub const USB_OTG_GUSBCFG_ULPIFSLS_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_ULPIFSLS_Pos;
pub const USB_OTG_GUSBCFG_ULPIFSLS: u32 = USB_OTG_GUSBCFG_ULPIFSLS_Msk;
pub const USB_OTG_GUSBCFG_ULPIAR_Pos: u32 = 18;
pub const USB_OTG_GUSBCFG_ULPIAR_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_ULPIAR_Pos;
pub const USB_OTG_GUSBCFG_ULPIAR: u32 = USB_OTG_GUSBCFG_ULPIAR_Msk;
pub const USB_OTG_GUSBCFG_ULPICSM_Pos: u32 = 19;
pub const USB_OTG_GUSBCFG_ULPICSM_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_ULPICSM_Pos;
pub const USB_OTG_GUSBCFG_ULPICSM: u32 = USB_OTG_GUSBCFG_ULPICSM_Msk;
pub const USB_OTG_GUSBCFG_ULPIEVBUSD_Pos: u32 = 20;
pub const USB_OTG_GUSBCFG_ULPIEVBUSD_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_ULPIEVBUSD_Pos;
pub const USB_OTG_GUSBCFG_ULPIEVBUSD: u32 = USB_OTG_GUSBCFG_ULPIEVBUSD_Msk;
pub const USB_OTG_GUSBCFG_ULPIEVBUSI_Pos: u32 = 21;
pub const USB_OTG_GUSBCFG_ULPIEVBUSI_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_ULPIEVBUSI_Pos;
pub const USB_OTG_GUSBCFG_ULPIEVBUSI: u32 = USB_OTG_GUSBCFG_ULPIEVBUSI_Msk;
pub const USB_OTG_GUSBCFG_TSDPS_Pos: u32 = 22;
pub const USB_OTG_GUSBCFG_TSDPS_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_TSDPS_Pos;
pub const USB_OTG_GUSBCFG_TSDPS: u32 = USB_OTG_GUSBCFG_TSDPS_Msk;
pub const USB_OTG_GUSBCFG_PCCI_Pos: u32 = 23;
pub const USB_OTG_GUSBCFG_PCCI_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_PCCI_Pos;
pub const USB_OTG_GUSBCFG_PCCI: u32 = USB_OTG_GUSBCFG_PCCI_Msk;
pub const USB_OTG_GUSBCFG_PTCI_Pos: u32 = 24;
pub const USB_OTG_GUSBCFG_PTCI_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_PTCI_Pos;
pub const USB_OTG_GUSBCFG_PTCI: u32 = USB_OTG_GUSBCFG_PTCI_Msk;
pub const USB_OTG_GUSBCFG_ULPIIPD_Pos: u32 = 25;
pub const USB_OTG_GUSBCFG_ULPIIPD_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_ULPIIPD_Pos;
pub const USB_OTG_GUSBCFG_ULPIIPD: u32 = USB_OTG_GUSBCFG_ULPIIPD_Msk;
pub const USB_OTG_GUSBCFG_FHMOD_Pos: u32 = 29;
pub const USB_OTG_GUSBCFG_FHMOD_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_FHMOD_Pos;
pub const USB_OTG_GUSBCFG_FHMOD: u32 = USB_OTG_GUSBCFG_FHMOD_Msk;
pub const USB_OTG_GUSBCFG_FDMOD_Pos: u32 = 30;
pub const USB_OTG_GUSBCFG_FDMOD_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_FDMOD_Pos;
pub const USB_OTG_GUSBCFG_FDMOD: u32 = USB_OTG_GUSBCFG_FDMOD_Msk;
pub const USB_OTG_GUSBCFG_CTXPKT_Pos: u32 = 31;
pub const USB_OTG_GUSBCFG_CTXPKT_Msk: u32 = 0x1 << USB_OTG_GUSBCFG_CTXPKT_Pos;
pub const USB_OTG_GUSBCFG_CTXPKT: u32 = USB_OTG_GUSBCFG_CTXPKT_Msk;
pub const USB_OTG_GRSTCTL_CSRST_Pos: u32 = 0;
pub const USB_OTG_GRSTCTL_CSRST_Msk: u32 = 0x1 << USB_OTG_GRSTCTL_CSRST_Pos;
pub const USB_OTG_GRSTCTL_CSRST: u32 = USB_OTG_GRSTCTL_CSRST_Msk;
pub const USB_OTG_GRSTCTL_HSRST_Pos: u32 = 1;
pub const USB_OTG_GRSTCTL_HSRST_Msk: u32 = 0x1 << USB_OTG_GRSTCTL_HSRST_Pos;
pub const USB_OTG_GRSTCTL_HSRST: u32 = USB_OTG_GRSTCTL_HSRST_Msk;
pub const USB_OTG_GRSTCTL_FCRST_Pos: u32 = 2;
pub const USB_OTG_GRSTCTL_FCRST_Msk: u32 = 0x1 << USB_OTG_GRSTCTL_FCRST_Pos;
pub const USB_OTG_GRSTCTL_FCRST: u32 = USB_OTG_GRSTCTL_FCRST_Msk;
pub const USB_OTG_GRSTCTL_RXFFLSH_Pos: u32 = 4;
pub const USB_OTG_GRSTCTL_RXFFLSH_Msk: u32 = 0x1 << USB_OTG_GRSTCTL_RXFFLSH_Pos;
pub const USB_OTG_GRSTCTL_RXFFLSH: u32 = USB_OTG_GRSTCTL_RXFFLSH_Msk;
pub const USB_OTG_GRSTCTL_TXFFLSH_Pos: u32 = 5;
pub const USB_OTG_GRSTCTL_TXFFLSH_Msk: u32 = 0x1 << USB_OTG_GRSTCTL_TXFFLSH_Pos;
pub const USB_OTG_GRSTCTL_TXFFLSH: u32 = USB_OTG_GRSTCTL_TXFFLSH_Msk;
pub const USB_OTG_GRSTCTL_TXFNUM_Pos: u32 = 6;
pub const USB_OTG_GRSTCTL_TXFNUM_Msk: u32 = 0x1F << USB_OTG_GRSTCTL_TXFNUM_Pos;
pub const USB_OTG_GRSTCTL_TXFNUM: u32 = USB_OTG_GRSTCTL_TXFNUM_Msk;
pub const USB_OTG_GRSTCTL_TXFNUM_0: u32 = 0x01 << USB_OTG_GRSTCTL_TXFNUM_Pos;
pub const USB_OTG_GRSTCTL_TXFNUM_1: u32 = 0x02 << USB_OTG_GRSTCTL_TXFNUM_Pos;
pub const USB_OTG_GRSTCTL_TXFNUM_2: u32 = 0x04 << USB_OTG_GRSTCTL_TXFNUM_Pos;
pub const USB_OTG_GRSTCTL_TXFNUM_3: u32 = 0x08 << USB_OTG_GRSTCTL_TXFNUM_Pos;
pub const USB_OTG_GRSTCTL_TXFNUM_4: u32 = 0x10 << USB_OTG_GRSTCTL_TXFNUM_Pos;
pub const USB_OTG_GRSTCTL_DMAREQ_Pos: u32 = 30;
pub const USB_OTG_GRSTCTL_DMAREQ_Msk: u32 = 0x1 << USB_OTG_GRSTCTL_DMAREQ_Pos;
pub const USB_OTG_GRSTCTL_DMAREQ: u32 = USB_OTG_GRSTCTL_DMAREQ_Msk;
pub const USB_OTG_GRSTCTL_AHBIDL_Pos: u32 = 31;
pub const USB_OTG_GRSTCTL_AHBIDL_Msk: u32 = 0x1 << USB_OTG_GRSTCTL_AHBIDL_Pos;
pub const USB_OTG_GRSTCTL_AHBIDL: u32 = USB_OTG_GRSTCTL_AHBIDL_Msk;
pub const USB_OTG_DIEPMSK_XFRCM_Pos: u32 = 0;
pub const USB_OTG_DIEPMSK_XFRCM_Msk: u32 = 0x1 << USB_OTG_DIEPMSK_XFRCM_Pos;
pub const USB_OTG_DIEPMSK_XFRCM: u32 = USB_OTG_DIEPMSK_XFRCM_Msk;
pub const USB_OTG_DIEPMSK_EPDM_Pos: u32 = 1;
pub const USB_OTG_DIEPMSK_EPDM_Msk: u32 = 0x1 << USB_OTG_DIEPMSK_EPDM_Pos;
pub const USB_OTG_DIEPMSK_EPDM: u32 = USB_OTG_DIEPMSK_EPDM_Msk;
pub const USB_OTG_DIEPMSK_TOM_Pos: u32 = 3;
pub const USB_OTG_DIEPMSK_TOM_Msk: u32 = 0x1 << USB_OTG_DIEPMSK_TOM_Pos;
pub const USB_OTG_DIEPMSK_TOM: u32 = USB_OTG_DIEPMSK_TOM_Msk;
pub const USB_OTG_DIEPMSK_ITTXFEMSK_Pos: u32 = 4;
pub const USB_OTG_DIEPMSK_ITTXFEMSK_Msk: u32 = 0x1 << USB_OTG_DIEPMSK_ITTXFEMSK_Pos;
pub const USB_OTG_DIEPMSK_ITTXFEMSK: u32 = USB_OTG_DIEPMSK_ITTXFEMSK_Msk;
pub const USB_OTG_DIEPMSK_INEPNMM_Pos: u32 = 5;
pub const USB_OTG_DIEPMSK_INEPNMM_Msk: u32 = 0x1 << USB_OTG_DIEPMSK_INEPNMM_Pos;
pub const USB_OTG_DIEPMSK_INEPNMM: u32 = USB_OTG_DIEPMSK_INEPNMM_Msk;
pub const USB_OTG_DIEPMSK_INEPNEM_Pos: u32 = 6;
pub const USB_OTG_DIEPMSK_INEPNEM_Msk: u32 = 0x1 << USB_OTG_DIEPMSK_INEPNEM_Pos;
pub const USB_OTG_DIEPMSK_INEPNEM: u32 = USB_OTG_DIEPMSK_INEPNEM_Msk;
pub const USB_OTG_DIEPMSK_TXFURM_Pos: u32 = 8;
pub const USB_OTG_DIEPMSK_TXFURM_Msk: u32 = 0x1 << USB_OTG_DIEPMSK_TXFURM_Pos;
pub const USB_OTG_DIEPMSK_TXFURM: u32 = USB_OTG_DIEPMSK_TXFURM_Msk;
pub const USB_OTG_DIEPMSK_BIM_Pos: u32 = 9;
pub const USB_OTG_DIEPMSK_BIM_Msk: u32 = 0x1 << USB_OTG_DIEPMSK_BIM_Pos;
pub const USB_OTG_DIEPMSK_BIM: u32 = USB_OTG_DIEPMSK_BIM_Msk;
pub const USB_OTG_HPTXSTS_PTXFSAVL_Pos: u32 = 0;
pub const USB_OTG_HPTXSTS_PTXFSAVL_Msk: u32 = 0xFFFF << USB_OTG_HPTXSTS_PTXFSAVL_Pos;
pub const USB_OTG_HPTXSTS_PTXFSAVL: u32 = USB_OTG_HPTXSTS_PTXFSAVL_Msk;
pub const USB_OTG_HPTXSTS_PTXQSAV_Pos: u32 = 16;
pub const USB_OTG_HPTXSTS_PTXQSAV_Msk: u32 = 0xFF << USB_OTG_HPTXSTS_PTXQSAV_Pos;
pub const USB_OTG_HPTXSTS_PTXQSAV: u32 = USB_OTG_HPTXSTS_PTXQSAV_Msk;
pub const USB_OTG_HPTXSTS_PTXQSAV_0: u32 = 0x01 << USB_OTG_HPTXSTS_PTXQSAV_Pos;
pub const USB_OTG_HPTXSTS_PTXQSAV_1: u32 = 0x02 << USB_OTG_HPTXSTS_PTXQSAV_Pos;
pub const USB_OTG_HPTXSTS_PTXQSAV_2: u32 = 0x04 << USB_OTG_HPTXSTS_PTXQSAV_Pos;
pub const USB_OTG_HPTXSTS_PTXQSAV_3: u32 = 0x08 << USB_OTG_HPTXSTS_PTXQSAV_Pos;
pub const USB_OTG_HPTXSTS_PTXQSAV_4: u32 = 0x10 << USB_OTG_HPTXSTS_PTXQSAV_Pos;
pub const USB_OTG_HPTXSTS_PTXQSAV_5: u32 = 0x20 << USB_OTG_HPTXSTS_PTXQSAV_Pos;
pub const USB_OTG_HPTXSTS_PTXQSAV_6: u32 = 0x40 << USB_OTG_HPTXSTS_PTXQSAV_Pos;
pub const USB_OTG_HPTXSTS_PTXQSAV_7: u32 = 0x80 << USB_OTG_HPTXSTS_PTXQSAV_Pos;
pub const USB_OTG_HPTXSTS_PTXQTOP_Pos: u32 = 24;
pub const USB_OTG_HPTXSTS_PTXQTOP_Msk: u32 = 0xFF << USB_OTG_HPTXSTS_PTXQTOP_Pos;
pub const USB_OTG_HPTXSTS_PTXQTOP: u32 = USB_OTG_HPTXSTS_PTXQTOP_Msk;
pub const USB_OTG_HPTXSTS_PTXQTOP_0: u32 = 0x01 << USB_OTG_HPTXSTS_PTXQTOP_Pos;
pub const USB_OTG_HPTXSTS_PTXQTOP_1: u32 = 0x02 << USB_OTG_HPTXSTS_PTXQTOP_Pos;
pub const USB_OTG_HPTXSTS_PTXQTOP_2: u32 = 0x04 << USB_OTG_HPTXSTS_PTXQTOP_Pos;
pub const USB_OTG_HPTXSTS_PTXQTOP_3: u32 = 0x08 << USB_OTG_HPTXSTS_PTXQTOP_Pos;
pub const USB_OTG_HPTXSTS_PTXQTOP_4: u32 = 0x10 << USB_OTG_HPTXSTS_PTXQTOP_Pos;
pub const USB_OTG_HPTXSTS_PTXQTOP_5: u32 = 0x20 << USB_OTG_HPTXSTS_PTXQTOP_Pos;
pub const USB_OTG_HPTXSTS_PTXQTOP_6: u32 = 0x40 << USB_OTG_HPTXSTS_PTXQTOP_Pos;
pub const USB_OTG_HPTXSTS_PTXQTOP_7: u32 = 0x80 << USB_OTG_HPTXSTS_PTXQTOP_Pos;
pub const USB_OTG_HAINT_HAINT_Pos: u32 = 0;
pub const USB_OTG_HAINT_HAINT_Msk: u32 = 0xFFFF << USB_OTG_HAINT_HAINT_Pos;
pub const USB_OTG_HAINT_HAINT: u32 = USB_OTG_HAINT_HAINT_Msk;
pub const USB_OTG_DOEPMSK_XFRCM_Pos: u32 = 0;
pub const USB_OTG_DOEPMSK_XFRCM_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_XFRCM_Pos;
pub const USB_OTG_DOEPMSK_XFRCM: u32 = USB_OTG_DOEPMSK_XFRCM_Msk;
pub const USB_OTG_DOEPMSK_EPDM_Pos: u32 = 1;
pub const USB_OTG_DOEPMSK_EPDM_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_EPDM_Pos;
pub const USB_OTG_DOEPMSK_EPDM: u32 = USB_OTG_DOEPMSK_EPDM_Msk;
pub const USB_OTG_DOEPMSK_STUPM_Pos: u32 = 3;
pub const USB_OTG_DOEPMSK_STUPM_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_STUPM_Pos;
pub const USB_OTG_DOEPMSK_STUPM: u32 = USB_OTG_DOEPMSK_STUPM_Msk;
pub const USB_OTG_DOEPMSK_OTEPDM_Pos: u32 = 4;
pub const USB_OTG_DOEPMSK_OTEPDM_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_OTEPDM_Pos;
pub const USB_OTG_DOEPMSK_OTEPDM: u32 = USB_OTG_DOEPMSK_OTEPDM_Msk;
pub const USB_OTG_DOEPMSK_B2BSTUP_Pos: u32 = 6;
pub const USB_OTG_DOEPMSK_B2BSTUP_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_B2BSTUP_Pos;
pub const USB_OTG_DOEPMSK_B2BSTUP: u32 = USB_OTG_DOEPMSK_B2BSTUP_Msk;
pub const USB_OTG_DOEPMSK_OPEM_Pos: u32 = 8;
pub const USB_OTG_DOEPMSK_OPEM_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_OPEM_Pos;
pub const USB_OTG_DOEPMSK_OPEM: u32 = USB_OTG_DOEPMSK_OPEM_Msk;
pub const USB_OTG_DOEPMSK_BOIM_Pos: u32 = 9;
pub const USB_OTG_DOEPMSK_BOIM_Msk: u32 = 0x1 << USB_OTG_DOEPMSK_BOIM_Pos;
pub const USB_OTG_DOEPMSK_BOIM: u32 = USB_OTG_DOEPMSK_BOIM_Msk;
pub const USB_OTG_GINTSTS_CMOD_Pos: u32 = 0;
pub const USB_OTG_GINTSTS_CMOD_Msk: u32 = 0x1 << USB_OTG_GINTSTS_CMOD_Pos;
pub const USB_OTG_GINTSTS_CMOD: u32 = USB_OTG_GINTSTS_CMOD_Msk;
pub const USB_OTG_GINTSTS_MMIS_Pos: u32 = 1;
pub const USB_OTG_GINTSTS_MMIS_Msk: u32 = 0x1 << USB_OTG_GINTSTS_MMIS_Pos;
pub const USB_OTG_GINTSTS_MMIS: u32 = USB_OTG_GINTSTS_MMIS_Msk;
pub const USB_OTG_GINTSTS_OTGINT_Pos: u32 = 2;
pub const USB_OTG_GINTSTS_OTGINT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_OTGINT_Pos;
pub const USB_OTG_GINTSTS_OTGINT: u32 = USB_OTG_GINTSTS_OTGINT_Msk;
pub const USB_OTG_GINTSTS_SOF_Pos: u32 = 3;
pub const USB_OTG_GINTSTS_SOF_Msk: u32 = 0x1 << USB_OTG_GINTSTS_SOF_Pos;
pub const USB_OTG_GINTSTS_SOF: u32 = USB_OTG_GINTSTS_SOF_Msk;
pub const USB_OTG_GINTSTS_RXFLVL_Pos: u32 = 4;
pub const USB_OTG_GINTSTS_RXFLVL_Msk: u32 = 0x1 << USB_OTG_GINTSTS_RXFLVL_Pos;
pub const USB_OTG_GINTSTS_RXFLVL: u32 = USB_OTG_GINTSTS_RXFLVL_Msk;
pub const USB_OTG_GINTSTS_NPTXFE_Pos: u32 = 5;
pub const USB_OTG_GINTSTS_NPTXFE_Msk: u32 = 0x1 << USB_OTG_GINTSTS_NPTXFE_Pos;
pub const USB_OTG_GINTSTS_NPTXFE: u32 = USB_OTG_GINTSTS_NPTXFE_Msk;
pub const USB_OTG_GINTSTS_GINAKEFF_Pos: u32 = 6;
pub const USB_OTG_GINTSTS_GINAKEFF_Msk: u32 = 0x1 << USB_OTG_GINTSTS_GINAKEFF_Pos;
pub const USB_OTG_GINTSTS_GINAKEFF: u32 = USB_OTG_GINTSTS_GINAKEFF_Msk;
pub const USB_OTG_GINTSTS_BOUTNAKEFF_Pos: u32 = 7;
pub const USB_OTG_GINTSTS_BOUTNAKEFF_Msk: u32 = 0x1 << USB_OTG_GINTSTS_BOUTNAKEFF_Pos;
pub const USB_OTG_GINTSTS_BOUTNAKEFF: u32 = USB_OTG_GINTSTS_BOUTNAKEFF_Msk;
pub const USB_OTG_GINTSTS_ESUSP_Pos: u32 = 10;
pub const USB_OTG_GINTSTS_ESUSP_Msk: u32 = 0x1 << USB_OTG_GINTSTS_ESUSP_Pos;
pub const USB_OTG_GINTSTS_ESUSP: u32 = USB_OTG_GINTSTS_ESUSP_Msk;
pub const USB_OTG_GINTSTS_USBSUSP_Pos: u32 = 11;
pub const USB_OTG_GINTSTS_USBSUSP_Msk: u32 = 0x1 << USB_OTG_GINTSTS_USBSUSP_Pos;
pub const USB_OTG_GINTSTS_USBSUSP: u32 = USB_OTG_GINTSTS_USBSUSP_Msk;
pub const USB_OTG_GINTSTS_USBRST_Pos: u32 = 12;
pub const USB_OTG_GINTSTS_USBRST_Msk: u32 = 0x1 << USB_OTG_GINTSTS_USBRST_Pos;
pub const USB_OTG_GINTSTS_USBRST: u32 = USB_OTG_GINTSTS_USBRST_Msk;
pub const USB_OTG_GINTSTS_ENUMDNE_Pos: u32 = 13;
pub const USB_OTG_GINTSTS_ENUMDNE_Msk: u32 = 0x1 << USB_OTG_GINTSTS_ENUMDNE_Pos;
pub const USB_OTG_GINTSTS_ENUMDNE: u32 = USB_OTG_GINTSTS_ENUMDNE_Msk;
pub const USB_OTG_GINTSTS_ISOODRP_Pos: u32 = 14;
pub const USB_OTG_GINTSTS_ISOODRP_Msk: u32 = 0x1 << USB_OTG_GINTSTS_ISOODRP_Pos;
pub const USB_OTG_GINTSTS_ISOODRP: u32 = USB_OTG_GINTSTS_ISOODRP_Msk;
pub const USB_OTG_GINTSTS_EOPF_Pos: u32 = 15;
pub const USB_OTG_GINTSTS_EOPF_Msk: u32 = 0x1 << USB_OTG_GINTSTS_EOPF_Pos;
pub const USB_OTG_GINTSTS_EOPF: u32 = USB_OTG_GINTSTS_EOPF_Msk;
pub const USB_OTG_GINTSTS_IEPINT_Pos: u32 = 18;
pub const USB_OTG_GINTSTS_IEPINT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_IEPINT_Pos;
pub const USB_OTG_GINTSTS_IEPINT: u32 = USB_OTG_GINTSTS_IEPINT_Msk;
pub const USB_OTG_GINTSTS_OEPINT_Pos: u32 = 19;
pub const USB_OTG_GINTSTS_OEPINT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_OEPINT_Pos;
pub const USB_OTG_GINTSTS_OEPINT: u32 = USB_OTG_GINTSTS_OEPINT_Msk;
pub const USB_OTG_GINTSTS_IISOIXFR_Pos: u32 = 20;
pub const USB_OTG_GINTSTS_IISOIXFR_Msk: u32 = 0x1 << USB_OTG_GINTSTS_IISOIXFR_Pos;
pub const USB_OTG_GINTSTS_IISOIXFR: u32 = USB_OTG_GINTSTS_IISOIXFR_Msk;
pub const USB_OTG_GINTSTS_PXFR_INCOMPISOOUT_Pos: u32 = 21;
pub const USB_OTG_GINTSTS_PXFR_INCOMPISOOUT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_PXFR_INCOMPISOOUT_Pos;
pub const USB_OTG_GINTSTS_PXFR_INCOMPISOOUT: u32 = USB_OTG_GINTSTS_PXFR_INCOMPISOOUT_Msk;
pub const USB_OTG_GINTSTS_DATAFSUSP_Pos: u32 = 22;
pub const USB_OTG_GINTSTS_DATAFSUSP_Msk: u32 = 0x1 << USB_OTG_GINTSTS_DATAFSUSP_Pos;
pub const USB_OTG_GINTSTS_DATAFSUSP: u32 = USB_OTG_GINTSTS_DATAFSUSP_Msk;
pub const USB_OTG_GINTSTS_HPRTINT_Pos: u32 = 24;
pub const USB_OTG_GINTSTS_HPRTINT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_HPRTINT_Pos;
pub const USB_OTG_GINTSTS_HPRTINT: u32 = USB_OTG_GINTSTS_HPRTINT_Msk;
pub const USB_OTG_GINTSTS_HCINT_Pos: u32 = 25;
pub const USB_OTG_GINTSTS_HCINT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_HCINT_Pos;
pub const USB_OTG_GINTSTS_HCINT: u32 = USB_OTG_GINTSTS_HCINT_Msk;
pub const USB_OTG_GINTSTS_PTXFE_Pos: u32 = 26;
pub const USB_OTG_GINTSTS_PTXFE_Msk: u32 = 0x1 << USB_OTG_GINTSTS_PTXFE_Pos;
pub const USB_OTG_GINTSTS_PTXFE: u32 = USB_OTG_GINTSTS_PTXFE_Msk;
pub const USB_OTG_GINTSTS_LPMINT_Pos: u32 = 27;
pub const USB_OTG_GINTSTS_LPMINT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_LPMINT_Pos;
pub const USB_OTG_GINTSTS_LPMINT: u32 = USB_OTG_GINTSTS_LPMINT_Msk;
pub const USB_OTG_GINTSTS_CIDSCHG_Pos: u32 = 28;
pub const USB_OTG_GINTSTS_CIDSCHG_Msk: u32 = 0x1 << USB_OTG_GINTSTS_CIDSCHG_Pos;
pub const USB_OTG_GINTSTS_CIDSCHG: u32 = USB_OTG_GINTSTS_CIDSCHG_Msk;
pub const USB_OTG_GINTSTS_DISCINT_Pos: u32 = 29;
pub const USB_OTG_GINTSTS_DISCINT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_DISCINT_Pos;
pub const USB_OTG_GINTSTS_DISCINT: u32 = USB_OTG_GINTSTS_DISCINT_Msk;
pub const USB_OTG_GINTSTS_SRQINT_Pos: u32 = 30;
pub const USB_OTG_GINTSTS_SRQINT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_SRQINT_Pos;
pub const USB_OTG_GINTSTS_SRQINT: u32 = USB_OTG_GINTSTS_SRQINT_Msk;
pub const USB_OTG_GINTSTS_WKUINT_Pos: u32 = 31;
pub const USB_OTG_GINTSTS_WKUINT_Msk: u32 = 0x1 << USB_OTG_GINTSTS_WKUINT_Pos;
pub const USB_OTG_GINTSTS_WKUINT: u32 = USB_OTG_GINTSTS_WKUINT_Msk;
pub const USB_OTG_GINTMSK_MMISM_Pos: u32 = 1;
pub const USB_OTG_GINTMSK_MMISM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_MMISM_Pos;
pub const USB_OTG_GINTMSK_MMISM: u32 = USB_OTG_GINTMSK_MMISM_Msk;
pub const USB_OTG_GINTMSK_OTGINT_Pos: u32 = 2;
pub const USB_OTG_GINTMSK_OTGINT_Msk: u32 = 0x1 << USB_OTG_GINTMSK_OTGINT_Pos;
pub const USB_OTG_GINTMSK_OTGINT: u32 = USB_OTG_GINTMSK_OTGINT_Msk;
pub const USB_OTG_GINTMSK_SOFM_Pos: u32 = 3;
pub const USB_OTG_GINTMSK_SOFM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_SOFM_Pos;
pub const USB_OTG_GINTMSK_SOFM: u32 = USB_OTG_GINTMSK_SOFM_Msk;
pub const USB_OTG_GINTMSK_RXFLVLM_Pos: u32 = 4;
pub const USB_OTG_GINTMSK_RXFLVLM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_RXFLVLM_Pos;
pub const USB_OTG_GINTMSK_RXFLVLM: u32 = USB_OTG_GINTMSK_RXFLVLM_Msk;
pub const USB_OTG_GINTMSK_NPTXFEM_Pos: u32 = 5;
pub const USB_OTG_GINTMSK_NPTXFEM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_NPTXFEM_Pos;
pub const USB_OTG_GINTMSK_NPTXFEM: u32 = USB_OTG_GINTMSK_NPTXFEM_Msk;
pub const USB_OTG_GINTMSK_GINAKEFFM_Pos: u32 = 6;
pub const USB_OTG_GINTMSK_GINAKEFFM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_GINAKEFFM_Pos;
pub const USB_OTG_GINTMSK_GINAKEFFM: u32 = USB_OTG_GINTMSK_GINAKEFFM_Msk;
pub const USB_OTG_GINTMSK_GONAKEFFM_Pos: u32 = 7;
pub const USB_OTG_GINTMSK_GONAKEFFM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_GONAKEFFM_Pos;
pub const USB_OTG_GINTMSK_GONAKEFFM: u32 = USB_OTG_GINTMSK_GONAKEFFM_Msk;
pub const USB_OTG_GINTMSK_ESUSPM_Pos: u32 = 10;
pub const USB_OTG_GINTMSK_ESUSPM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_ESUSPM_Pos;
pub const USB_OTG_GINTMSK_ESUSPM: u32 = USB_OTG_GINTMSK_ESUSPM_Msk;
pub const USB_OTG_GINTMSK_USBSUSPM_Pos: u32 = 11;
pub const USB_OTG_GINTMSK_USBSUSPM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_USBSUSPM_Pos;
pub const USB_OTG_GINTMSK_USBSUSPM: u32 = USB_OTG_GINTMSK_USBSUSPM_Msk;
pub const USB_OTG_GINTMSK_USBRST_Pos: u32 = 12;
pub const USB_OTG_GINTMSK_USBRST_Msk: u32 = 0x1 << USB_OTG_GINTMSK_USBRST_Pos;
pub const USB_OTG_GINTMSK_USBRST: u32 = USB_OTG_GINTMSK_USBRST_Msk;
pub const USB_OTG_GINTMSK_ENUMDNEM_Pos: u32 = 13;
pub const USB_OTG_GINTMSK_ENUMDNEM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_ENUMDNEM_Pos;
pub const USB_OTG_GINTMSK_ENUMDNEM: u32 = USB_OTG_GINTMSK_ENUMDNEM_Msk;
pub const USB_OTG_GINTMSK_ISOODRPM_Pos: u32 = 14;
pub const USB_OTG_GINTMSK_ISOODRPM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_ISOODRPM_Pos;
pub const USB_OTG_GINTMSK_ISOODRPM: u32 = USB_OTG_GINTMSK_ISOODRPM_Msk;
pub const USB_OTG_GINTMSK_EOPFM_Pos: u32 = 15;
pub const USB_OTG_GINTMSK_EOPFM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_EOPFM_Pos;
pub const USB_OTG_GINTMSK_EOPFM: u32 = USB_OTG_GINTMSK_EOPFM_Msk;
pub const USB_OTG_GINTMSK_EPMISM_Pos: u32 = 17;
pub const USB_OTG_GINTMSK_EPMISM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_EPMISM_Pos;
pub const USB_OTG_GINTMSK_EPMISM: u32 = USB_OTG_GINTMSK_EPMISM_Msk;
pub const USB_OTG_GINTMSK_IEPINT_Pos: u32 = 18;
pub const USB_OTG_GINTMSK_IEPINT_Msk: u32 = 0x1 << USB_OTG_GINTMSK_IEPINT_Pos;
pub const USB_OTG_GINTMSK_IEPINT: u32 = USB_OTG_GINTMSK_IEPINT_Msk;
pub const USB_OTG_GINTMSK_OEPINT_Pos: u32 = 19;
pub const USB_OTG_GINTMSK_OEPINT_Msk: u32 = 0x1 << USB_OTG_GINTMSK_OEPINT_Pos;
pub const USB_OTG_GINTMSK_OEPINT: u32 = USB_OTG_GINTMSK_OEPINT_Msk;
pub const USB_OTG_GINTMSK_IISOIXFRM_Pos: u32 = 20;
pub const USB_OTG_GINTMSK_IISOIXFRM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_IISOIXFRM_Pos;
pub const USB_OTG_GINTMSK_IISOIXFRM: u32 = USB_OTG_GINTMSK_IISOIXFRM_Msk;
pub const USB_OTG_GINTMSK_PXFRM_IISOOXFRM_Pos: u32 = 21;
pub const USB_OTG_GINTMSK_PXFRM_IISOOXFRM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_PXFRM_IISOOXFRM_Pos;
pub const USB_OTG_GINTMSK_PXFRM_IISOOXFRM: u32 = USB_OTG_GINTMSK_PXFRM_IISOOXFRM_Msk;
pub const USB_OTG_GINTMSK_FSUSPM_Pos: u32 = 22;
pub const USB_OTG_GINTMSK_FSUSPM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_FSUSPM_Pos;
pub const USB_OTG_GINTMSK_FSUSPM: u32 = USB_OTG_GINTMSK_FSUSPM_Msk;
pub const USB_OTG_GINTMSK_PRTIM_Pos: u32 = 24;
pub const USB_OTG_GINTMSK_PRTIM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_PRTIM_Pos;
pub const USB_OTG_GINTMSK_PRTIM: u32 = USB_OTG_GINTMSK_PRTIM_Msk;
pub const USB_OTG_GINTMSK_HCIM_Pos: u32 = 25;
pub const USB_OTG_GINTMSK_HCIM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_HCIM_Pos;
pub const USB_OTG_GINTMSK_HCIM: u32 = USB_OTG_GINTMSK_HCIM_Msk;
pub const USB_OTG_GINTMSK_PTXFEM_Pos: u32 = 26;
pub const USB_OTG_GINTMSK_PTXFEM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_PTXFEM_Pos;
pub const USB_OTG_GINTMSK_PTXFEM: u32 = USB_OTG_GINTMSK_PTXFEM_Msk;
pub const USB_OTG_GINTMSK_LPMINTM_Pos: u32 = 27;
pub const USB_OTG_GINTMSK_LPMINTM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_LPMINTM_Pos;
pub const USB_OTG_GINTMSK_LPMINTM: u32 = USB_OTG_GINTMSK_LPMINTM_Msk;
pub const USB_OTG_GINTMSK_CIDSCHGM_Pos: u32 = 28;
pub const USB_OTG_GINTMSK_CIDSCHGM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_CIDSCHGM_Pos;
pub const USB_OTG_GINTMSK_CIDSCHGM: u32 = USB_OTG_GINTMSK_CIDSCHGM_Msk;
pub const USB_OTG_GINTMSK_DISCINT_Pos: u32 = 29;
pub const USB_OTG_GINTMSK_DISCINT_Msk: u32 = 0x1 << USB_OTG_GINTMSK_DISCINT_Pos;
pub const USB_OTG_GINTMSK_DISCINT: u32 = USB_OTG_GINTMSK_DISCINT_Msk;
pub const USB_OTG_GINTMSK_SRQIM_Pos: u32 = 30;
pub const USB_OTG_GINTMSK_SRQIM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_SRQIM_Pos;
pub const USB_OTG_GINTMSK_SRQIM: u32 = USB_OTG_GINTMSK_SRQIM_Msk;
pub const USB_OTG_GINTMSK_WUIM_Pos: u32 = 31;
pub const USB_OTG_GINTMSK_WUIM_Msk: u32 = 0x1 << USB_OTG_GINTMSK_WUIM_Pos;
pub const USB_OTG_GINTMSK_WUIM: u32 = USB_OTG_GINTMSK_WUIM_Msk;
pub const USB_OTG_DAINT_IEPINT_Pos: u32 = 0;
pub const USB_OTG_DAINT_IEPINT_Msk: u32 = 0xFFFF << USB_OTG_DAINT_IEPINT_Pos;
pub const USB_OTG_DAINT_IEPINT: u32 = USB_OTG_DAINT_IEPINT_Msk;
pub const USB_OTG_DAINT_OEPINT_Pos: u32 = 16;
pub const USB_OTG_DAINT_OEPINT_Msk: u32 = 0xFFFF << USB_OTG_DAINT_OEPINT_Pos;
pub const USB_OTG_DAINT_OEPINT: u32 = USB_OTG_DAINT_OEPINT_Msk;
pub const USB_OTG_HAINTMSK_HAINTM_Pos: u32 = 0;
pub const USB_OTG_HAINTMSK_HAINTM_Msk: u32 = 0xFFFF << USB_OTG_HAINTMSK_HAINTM_Pos;
pub const USB_OTG_HAINTMSK_HAINTM: u32 = USB_OTG_HAINTMSK_HAINTM_Msk;
pub const USB_OTG_GRXSTSP_EPNUM_Pos: u32 = 0;
pub const USB_OTG_GRXSTSP_EPNUM_Msk: u32 = 0xF << USB_OTG_GRXSTSP_EPNUM_Pos;
pub const USB_OTG_GRXSTSP_EPNUM: u32 = USB_OTG_GRXSTSP_EPNUM_Msk;
pub const USB_OTG_GRXSTSP_BCNT_Pos: u32 = 4;
pub const USB_OTG_GRXSTSP_BCNT_Msk: u32 = 0x7FF << USB_OTG_GRXSTSP_BCNT_Pos;
pub const USB_OTG_GRXSTSP_BCNT: u32 = USB_OTG_GRXSTSP_BCNT_Msk;
pub const USB_OTG_GRXSTSP_DPID_Pos: u32 = 15;
pub const USB_OTG_GRXSTSP_DPID_Msk: u32 = 0x3 << USB_OTG_GRXSTSP_DPID_Pos;
pub const USB_OTG_GRXSTSP_DPID: u32 = USB_OTG_GRXSTSP_DPID_Msk;
pub const USB_OTG_GRXSTSP_PKTSTS_Pos: u32 = 17;
pub const USB_OTG_GRXSTSP_PKTSTS_Msk: u32 = 0xF << USB_OTG_GRXSTSP_PKTSTS_Pos;
pub const USB_OTG_GRXSTSP_PKTSTS: u32 = USB_OTG_GRXSTSP_PKTSTS_Msk;
pub const USB_OTG_DAINTMSK_IEPM_Pos: u32 = 0;
pub const USB_OTG_DAINTMSK_IEPM_Msk: u32 = 0xFFFF << USB_OTG_DAINTMSK_IEPM_Pos;
pub const USB_OTG_DAINTMSK_IEPM: u32 = USB_OTG_DAINTMSK_IEPM_Msk;
pub const USB_OTG_DAINTMSK_OEPM_Pos: u32 = 16;
pub const USB_OTG_DAINTMSK_OEPM_Msk: u32 = 0xFFFF << USB_OTG_DAINTMSK_OEPM_Pos;
pub const USB_OTG_DAINTMSK_OEPM: u32 = USB_OTG_DAINTMSK_OEPM_Msk;
pub const USB_OTG_CHNUM_Pos: u32 = 0;
pub const USB_OTG_CHNUM_Msk: u32 = 0xF << USB_OTG_CHNUM_Pos;
pub const USB_OTG_CHNUM: u32 = USB_OTG_CHNUM_Msk;
pub const USB_OTG_CHNUM_0: u32 = 0x1 << USB_OTG_CHNUM_Pos;
pub const USB_OTG_CHNUM_1: u32 = 0x2 << USB_OTG_CHNUM_Pos;
pub const USB_OTG_CHNUM_2: u32 = 0x4 << USB_OTG_CHNUM_Pos;
pub const USB_OTG_CHNUM_3: u32 = 0x8 << USB_OTG_CHNUM_Pos;
pub const USB_OTG_BCNT_Pos: u32 = 4;
pub const USB_OTG_BCNT_Msk: u32 = 0x7FF << USB_OTG_BCNT_Pos;
pub const USB_OTG_BCNT: u32 = USB_OTG_BCNT_Msk;
pub const USB_OTG_DPID_Pos: u32 = 15;
pub const USB_OTG_DPID_Msk: u32 = 0x3 << USB_OTG_DPID_Pos;
pub const USB_OTG_DPID: u32 = USB_OTG_DPID_Msk;
pub const USB_OTG_DPID_0: u32 = 0x1 << USB_OTG_DPID_Pos;
pub const USB_OTG_DPID_1: u32 = 0x2 << USB_OTG_DPID_Pos;
pub const USB_OTG_PKTSTS_Pos: u32 = 17;
pub const USB_OTG_PKTSTS_Msk: u32 = 0xF << USB_OTG_PKTSTS_Pos;
pub const USB_OTG_PKTSTS: u32 = USB_OTG_PKTSTS_Msk;
pub const USB_OTG_PKTSTS_0: u32 = 0x1 << USB_OTG_PKTSTS_Pos;
pub const USB_OTG_PKTSTS_1: u32 = 0x2 << USB_OTG_PKTSTS_Pos;
pub const USB_OTG_PKTSTS_2: u32 = 0x4 << USB_OTG_PKTSTS_Pos;
pub const USB_OTG_PKTSTS_3: u32 = 0x8 << USB_OTG_PKTSTS_Pos;
pub const USB_OTG_EPNUM_Pos: u32 = 0;
pub const USB_OTG_EPNUM_Msk: u32 = 0xF << USB_OTG_EPNUM_Pos;
pub const USB_OTG_EPNUM: u32 = USB_OTG_EPNUM_Msk;
pub const USB_OTG_EPNUM_0: u32 = 0x1 << USB_OTG_EPNUM_Pos;
pub const USB_OTG_EPNUM_1: u32 = 0x2 << USB_OTG_EPNUM_Pos;
pub const USB_OTG_EPNUM_2: u32 = 0x4 << USB_OTG_EPNUM_Pos;
pub const USB_OTG_EPNUM_3: u32 = 0x8 << USB_OTG_EPNUM_Pos;
pub const USB_OTG_FRMNUM_Pos: u32 = 21;
pub const USB_OTG_FRMNUM_Msk: u32 = 0xF << USB_OTG_FRMNUM_Pos;
pub const USB_OTG_FRMNUM: u32 = USB_OTG_FRMNUM_Msk;
pub const USB_OTG_FRMNUM_0: u32 = 0x1 << USB_OTG_FRMNUM_Pos;
pub const USB_OTG_FRMNUM_1: u32 = 0x2 << USB_OTG_FRMNUM_Pos;
pub const USB_OTG_FRMNUM_2: u32 = 0x4 << USB_OTG_FRMNUM_Pos;
pub const USB_OTG_FRMNUM_3: u32 = 0x8 << USB_OTG_FRMNUM_Pos;
pub const USB_OTG_GRXFSIZ_RXFD_Pos: u32 = 0;
pub const USB_OTG_GRXFSIZ_RXFD_Msk: u32 = 0xFFFF << USB_OTG_GRXFSIZ_RXFD_Pos;
pub const USB_OTG_GRXFSIZ_RXFD: u32 = USB_OTG_GRXFSIZ_RXFD_Msk;
pub const USB_OTG_DVBUSDIS_VBUSDT_Pos: u32 = 0;
pub const USB_OTG_DVBUSDIS_VBUSDT_Msk: u32 = 0xFFFF << USB_OTG_DVBUSDIS_VBUSDT_Pos;
pub const USB_OTG_DVBUSDIS_VBUSDT: u32 = USB_OTG_DVBUSDIS_VBUSDT_Msk;
pub const USB_OTG_NPTXFSA_Pos: u32 = 0;
pub const USB_OTG_NPTXFSA_Msk: u32 = 0xFFFF << USB_OTG_NPTXFSA_Pos;
pub const USB_OTG_NPTXFSA: u32 = USB_OTG_NPTXFSA_Msk;
pub const USB_OTG_NPTXFD_Pos: u32 = 16;
pub const USB_OTG_NPTXFD_Msk: u32 = 0xFFFF << USB_OTG_NPTXFD_Pos;
pub const USB_OTG_NPTXFD: u32 = USB_OTG_NPTXFD_Msk;
pub const USB_OTG_TX0FSA_Pos: u32 = 0;
pub const USB_OTG_TX0FSA_Msk: u32 = 0xFFFF << USB_OTG_TX0FSA_Pos;
pub const USB_OTG_TX0FSA: u32 = USB_OTG_TX0FSA_Msk;
pub const USB_OTG_TX0FD_Pos: u32 = 16;
pub const USB_OTG_TX0FD_Msk: u32 = 0xFFFF << USB_OTG_TX0FD_Pos;
pub const USB_OTG_TX0FD: u32 = USB_OTG_TX0FD_Msk;
pub const USB_OTG_DVBUSPULSE_DVBUSP_Pos: u32 = 0;
pub const USB_OTG_DVBUSPULSE_DVBUSP_Msk: u32 = 0xFFF << USB_OTG_DVBUSPULSE_DVBUSP_Pos;
pub const USB_OTG_DVBUSPULSE_DVBUSP: u32 = USB_OTG_DVBUSPULSE_DVBUSP_Msk;
pub const USB_OTG_GNPTXSTS_NPTXFSAV_Pos: u32 = 0;
pub const USB_OTG_GNPTXSTS_NPTXFSAV_Msk: u32 = 0xFFFF << USB_OTG_GNPTXSTS_NPTXFSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTXFSAV: u32 = USB_OTG_GNPTXSTS_NPTXFSAV_Msk;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_Pos: u32 = 16;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_Msk: u32 = 0xFF << USB_OTG_GNPTXSTS_NPTQXSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTQXSAV: u32 = USB_OTG_GNPTXSTS_NPTQXSAV_Msk;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_0: u32 = 0x01 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_1: u32 = 0x02 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_2: u32 = 0x04 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_3: u32 = 0x08 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_4: u32 = 0x10 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_5: u32 = 0x20 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_6: u32 = 0x40 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTQXSAV_7: u32 = 0x80 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos;
pub const USB_OTG_GNPTXSTS_NPTXQTOP_Pos: u32 = 24;
pub const USB_OTG_GNPTXSTS_NPTXQTOP_Msk: u32 = 0x7F << USB_OTG_GNPTXSTS_NPTXQTOP_Pos;
pub const USB_OTG_GNPTXSTS_NPTXQTOP: u32 = USB_OTG_GNPTXSTS_NPTXQTOP_Msk;
pub const USB_OTG_GNPTXSTS_NPTXQTOP_0: u32 = 0x01 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos;
pub const USB_OTG_GNPTXSTS_NPTXQTOP_1: u32 = 0x02 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos;
pub const USB_OTG_GNPTXSTS_NPTXQTOP_2: u32 = 0x04 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos;
pub const USB_OTG_GNPTXSTS_NPTXQTOP_3: u32 = 0x08 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos;
pub const USB_OTG_GNPTXSTS_NPTXQTOP_4: u32 = 0x10 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos;
pub const USB_OTG_GNPTXSTS_NPTXQTOP_5: u32 = 0x20 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos;
pub const USB_OTG_GNPTXSTS_NPTXQTOP_6: u32 = 0x40 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos;
pub const USB_OTG_DTHRCTL_NONISOTHREN_Pos: u32 = 0;
pub const USB_OTG_DTHRCTL_NONISOTHREN_Msk: u32 = 0x1 << USB_OTG_DTHRCTL_NONISOTHREN_Pos;
pub const USB_OTG_DTHRCTL_NONISOTHREN: u32 = USB_OTG_DTHRCTL_NONISOTHREN_Msk;
pub const USB_OTG_DTHRCTL_ISOTHREN_Pos: u32 = 1;
pub const USB_OTG_DTHRCTL_ISOTHREN_Msk: u32 = 0x1 << USB_OTG_DTHRCTL_ISOTHREN_Pos;
pub const USB_OTG_DTHRCTL_ISOTHREN: u32 = USB_OTG_DTHRCTL_ISOTHREN_Msk;
pub const USB_OTG_DTHRCTL_TXTHRLEN_Pos: u32 = 2;
pub const USB_OTG_DTHRCTL_TXTHRLEN_Msk: u32 = 0x1FF << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_TXTHRLEN: u32 = USB_OTG_DTHRCTL_TXTHRLEN_Msk;
pub const USB_OTG_DTHRCTL_TXTHRLEN_0: u32 = 0x001 << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_TXTHRLEN_1: u32 = 0x002 << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_TXTHRLEN_2: u32 = 0x004 << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_TXTHRLEN_3: u32 = 0x008 << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_TXTHRLEN_4: u32 = 0x010 << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_TXTHRLEN_5: u32 = 0x020 << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_TXTHRLEN_6: u32 = 0x040 << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_TXTHRLEN_7: u32 = 0x080 << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_TXTHRLEN_8: u32 = 0x100 << USB_OTG_DTHRCTL_TXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHREN_Pos: u32 = 16;
pub const USB_OTG_DTHRCTL_RXTHREN_Msk: u32 = 0x1 << USB_OTG_DTHRCTL_RXTHREN_Pos;
pub const USB_OTG_DTHRCTL_RXTHREN: u32 = USB_OTG_DTHRCTL_RXTHREN_Msk;
pub const USB_OTG_DTHRCTL_RXTHRLEN_Pos: u32 = 17;
pub const USB_OTG_DTHRCTL_RXTHRLEN_Msk: u32 = 0x1FF << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHRLEN: u32 = USB_OTG_DTHRCTL_RXTHRLEN_Msk;
pub const USB_OTG_DTHRCTL_RXTHRLEN_0: u32 = 0x001 << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHRLEN_1: u32 = 0x002 << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHRLEN_2: u32 = 0x004 << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHRLEN_3: u32 = 0x008 << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHRLEN_4: u32 = 0x010 << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHRLEN_5: u32 = 0x020 << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHRLEN_6: u32 = 0x040 << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHRLEN_7: u32 = 0x080 << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_RXTHRLEN_8: u32 = 0x100 << USB_OTG_DTHRCTL_RXTHRLEN_Pos;
pub const USB_OTG_DTHRCTL_ARPEN_Pos: u32 = 27;
pub const USB_OTG_DTHRCTL_ARPEN_Msk: u32 = 0x1 << USB_OTG_DTHRCTL_ARPEN_Pos;
pub const USB_OTG_DTHRCTL_ARPEN: u32 = USB_OTG_DTHRCTL_ARPEN_Msk;
pub const USB_OTG_DIEPEMPMSK_INEPTXFEM_Pos: u32 = 0;
pub const USB_OTG_DIEPEMPMSK_INEPTXFEM_Msk: u32 = 0xFFFF << USB_OTG_DIEPEMPMSK_INEPTXFEM_Pos;
pub const USB_OTG_DIEPEMPMSK_INEPTXFEM: u32 = USB_OTG_DIEPEMPMSK_INEPTXFEM_Msk;
pub const USB_OTG_DEACHINT_IEP1INT_Pos: u32 = 1;
pub const USB_OTG_DEACHINT_IEP1INT_Msk: u32 = 0x1 << USB_OTG_DEACHINT_IEP1INT_Pos;
pub const USB_OTG_DEACHINT_IEP1INT: u32 = USB_OTG_DEACHINT_IEP1INT_Msk;
pub const USB_OTG_DEACHINT_OEP1INT_Pos: u32 = 17;
pub const USB_OTG_DEACHINT_OEP1INT_Msk: u32 = 0x1 << USB_OTG_DEACHINT_OEP1INT_Pos;
pub const USB_OTG_DEACHINT_OEP1INT: u32 = USB_OTG_DEACHINT_OEP1INT_Msk;
pub const USB_OTG_GCCFG_DCDET_Pos: u32 = 0;
pub const USB_OTG_GCCFG_DCDET_Msk: u32 = 0x1 << USB_OTG_GCCFG_DCDET_Pos;
pub const USB_OTG_GCCFG_DCDET: u32 = USB_OTG_GCCFG_DCDET_Msk;
pub const USB_OTG_GCCFG_PDET_Pos: u32 = 1;
pub const USB_OTG_GCCFG_PDET_Msk: u32 = 0x1 << USB_OTG_GCCFG_PDET_Pos;
pub const USB_OTG_GCCFG_PDET: u32 = USB_OTG_GCCFG_PDET_Msk;
pub const USB_OTG_GCCFG_SDET_Pos: u32 = 2;
pub const USB_OTG_GCCFG_SDET_Msk: u32 = 0x1 << USB_OTG_GCCFG_SDET_Pos;
pub const USB_OTG_GCCFG_SDET: u32 = USB_OTG_GCCFG_SDET_Msk;
pub const USB_OTG_GCCFG_PS2DET_Pos: u32 = 3;
pub const USB_OTG_GCCFG_PS2DET_Msk: u32 = 0x1 << USB_OTG_GCCFG_PS2DET_Pos;
pub const USB_OTG_GCCFG_PS2DET: u32 = USB_OTG_GCCFG_PS2DET_Msk;
pub const USB_OTG_GCCFG_PWRDWN_Pos: u32 = 16;
pub const USB_OTG_GCCFG_PWRDWN_Msk: u32 = 0x1 << USB_OTG_GCCFG_PWRDWN_Pos;
pub const USB_OTG_GCCFG_PWRDWN: u32 = USB_OTG_GCCFG_PWRDWN_Msk;
pub const USB_OTG_GCCFG_BCDEN_Pos: u32 = 17;
pub const USB_OTG_GCCFG_BCDEN_Msk: u32 = 0x1 << USB_OTG_GCCFG_BCDEN_Pos;
pub const USB_OTG_GCCFG_BCDEN: u32 = USB_OTG_GCCFG_BCDEN_Msk;
pub const USB_OTG_GCCFG_DCDEN_Pos: u32 = 18;
pub const USB_OTG_GCCFG_DCDEN_Msk: u32 = 0x1 << USB_OTG_GCCFG_DCDEN_Pos;
pub const USB_OTG_GCCFG_DCDEN: u32 = USB_OTG_GCCFG_DCDEN_Msk;
pub const USB_OTG_GCCFG_PDEN_Pos: u32 = 19;
pub const USB_OTG_GCCFG_PDEN_Msk: u32 = 0x1 << USB_OTG_GCCFG_PDEN_Pos;
pub const USB_OTG_GCCFG_PDEN: u32 = USB_OTG_GCCFG_PDEN_Msk;
pub const USB_OTG_GCCFG_SDEN_Pos: u32 = 20;
pub const USB_OTG_GCCFG_SDEN_Msk: u32 = 0x1 << USB_OTG_GCCFG_SDEN_Pos;
pub const USB_OTG_GCCFG_SDEN: u32 = USB_OTG_GCCFG_SDEN_Msk;
pub const USB_OTG_GCCFG_CHGDET_Pos: u32 = 0;
pub const USB_OTG_GCCFG_CHGDET_Msk: u32 = 0x1 << USB_OTG_GCCFG_CHGDET_Pos;
pub const USB_OTG_GCCFG_CHGDET: u32 = USB_OTG_GCCFG_CHGDET_Msk;
pub const USB_OTG_GCCFG_FSVPLUS_Pos: u32 = 1;
pub const USB_OTG_GCCFG_FSVPLUS_Msk: u32 = 0x1 << USB_OTG_GCCFG_FSVPLUS_Pos;
pub const USB_OTG_GCCFG_FSVPLUS: u32 = USB_OTG_GCCFG_FSVPLUS_Msk;
pub const USB_OTG_GCCFG_FSVMINUS_Pos: u32 = 2;
pub const USB_OTG_GCCFG_FSVMINUS_Msk: u32 = 0x1 << USB_OTG_GCCFG_FSVMINUS_Pos;
pub const USB_OTG_GCCFG_FSVMINUS: u32 = USB_OTG_GCCFG_FSVMINUS_Msk;
pub const USB_OTG_GCCFG_SESSVLD_Pos: u32 = 3;
pub const USB_OTG_GCCFG_SESSVLD_Msk: u32 = 0x1 << USB_OTG_GCCFG_SESSVLD_Pos;
pub const USB_OTG_GCCFG_SESSVLD: u32 = USB_OTG_GCCFG_SESSVLD_Msk;
pub const USB_OTG_GCCFG_H_CDPEN_Pos: u32 = 16;
pub const USB_OTG_GCCFG_H_CDPEN_Msk: u32 = 0x1 << USB_OTG_GCCFG_H_CDPEN_Pos;
pub const USB_OTG_GCCFG_H_CDPEN: u32 = USB_OTG_GCCFG_H_CDPEN_Msk;
pub const USB_OTG_GCCFG_H_CDPDETEN_Pos: u32 = 17;
pub const USB_OTG_GCCFG_H_CDPDETEN_Msk: u32 = 0x1 << USB_OTG_GCCFG_H_CDPDETEN_Pos;
pub const USB_OTG_GCCFG_H_CDPDETEN: u32 = USB_OTG_GCCFG_H_CDPDETEN_Msk;
pub const USB_OTG_GCCFG_H_VDMSRCEN_Pos: u32 = 18;
pub const USB_OTG_GCCFG_H_VDMSRCEN_Msk: u32 = 0x1 << USB_OTG_GCCFG_H_VDMSRCEN_Pos;
pub const USB_OTG_GCCFG_H_VDMSRCEN: u32 = USB_OTG_GCCFG_H_VDMSRCEN_Msk;
pub const USB_OTG_GCCFG_DCDETEN_Pos: u32 = 19;
pub const USB_OTG_GCCFG_DCDETEN_Msk: u32 = 0x1 << USB_OTG_GCCFG_DCDETEN_Pos;
pub const USB_OTG_GCCFG_DCDETEN: u32 = USB_OTG_GCCFG_DCDETEN_Msk;
pub const USB_OTG_GCCFG_PDETEN_Pos: u32 = 20;
pub const USB_OTG_GCCFG_PDETEN_Msk: u32 = 0x1 << USB_OTG_GCCFG_PDETEN_Pos;
pub const USB_OTG_GCCFG_PDETEN: u32 = USB_OTG_GCCFG_PDETEN_Msk;
pub const USB_OTG_GCCFG_VBDEN_Pos: u32 = 21;
pub const USB_OTG_GCCFG_VBDEN_Msk: u32 = 0x1 << USB_OTG_GCCFG_VBDEN_Pos;
pub const USB_OTG_GCCFG_VBDEN: u32 = USB_OTG_GCCFG_VBDEN_Msk;
pub const USB_OTG_GCCFG_SDETEN_Pos: u32 = 22;
pub const USB_OTG_GCCFG_SDETEN_Msk: u32 = 0x1 << USB_OTG_GCCFG_SDETEN_Pos;
pub const USB_OTG_GCCFG_SDETEN: u32 = USB_OTG_GCCFG_SDETEN_Msk;
pub const USB_OTG_GCCFG_VBVALOVAL_Pos: u32 = 23;
pub const USB_OTG_GCCFG_VBVALOVAL_Msk: u32 = 0x1 << USB_OTG_GCCFG_VBVALOVAL_Pos;
pub const USB_OTG_GCCFG_VBVALOVAL: u32 = USB_OTG_GCCFG_VBVALOVAL_Msk;
pub const USB_OTG_GCCFG_VBVALEXTOEN_Pos: u32 = 24;
pub const USB_OTG_GCCFG_VBVALEXTOEN_Msk: u32 = 0x1 << USB_OTG_GCCFG_VBVALEXTOEN_Pos;
pub const USB_OTG_GCCFG_VBVALEXTOEN: u32 = USB_OTG_GCCFG_VBVALEXTOEN_Msk;
pub const USB_OTG_GCCFG_PULLDOWNEN_Pos: u32 = 25;
pub const USB_OTG_GCCFG_PULLDOWNEN_Msk: u32 = 0x1 << USB_OTG_GCCFG_PULLDOWNEN_Pos;
pub const USB_OTG_GCCFG_PULLDOWNEN: u32 = USB_OTG_GCCFG_PULLDOWNEN_Msk;
pub const USB_OTG_GPWRDN_DISABLEVBUS_Pos: u32 = 6;
pub const USB_OTG_GPWRDN_DISABLEVBUS_Msk: u32 = 0x1 << USB_OTG_GPWRDN_DISABLEVBUS_Pos;
pub const USB_OTG_GPWRDN_DISABLEVBUS: u32 = USB_OTG_GPWRDN_DISABLEVBUS_Msk;
pub const USB_OTG_DEACHINTMSK_IEP1INTM_Pos: u32 = 1;
pub const USB_OTG_DEACHINTMSK_IEP1INTM_Msk: u32 = 0x1 << USB_OTG_DEACHINTMSK_IEP1INTM_Pos;
pub const USB_OTG_DEACHINTMSK_IEP1INTM: u32 = USB_OTG_DEACHINTMSK_IEP1INTM_Msk;
pub const USB_OTG_DEACHINTMSK_OEP1INTM_Pos: u32 = 17;
pub const USB_OTG_DEACHINTMSK_OEP1INTM_Msk: u32 = 0x1 << USB_OTG_DEACHINTMSK_OEP1INTM_Pos;
pub const USB_OTG_DEACHINTMSK_OEP1INTM: u32 = USB_OTG_DEACHINTMSK_OEP1INTM_Msk;
pub const USB_OTG_CID_PRODUCT_ID_Pos: u32 = 0;
pub const USB_OTG_CID_PRODUCT_ID_Msk: u32 = 0xFFFFFFFF << USB_OTG_CID_PRODUCT_ID_Pos;
pub const USB_OTG_CID_PRODUCT_ID: u32 = USB_OTG_CID_PRODUCT_ID_Msk;
pub const USB_OTG_GHWCFG3_LPMMode_Pos: u32 = 14;
pub const USB_OTG_GHWCFG3_LPMMode_Msk: u32 = 0x1 << USB_OTG_GHWCFG3_LPMMode_Pos;
pub const USB_OTG_GHWCFG3_LPMMode: u32 = USB_OTG_GHWCFG3_LPMMode_Msk;
pub const USB_OTG_GLPMCFG_ENBESL_Pos: u32 = 28;
pub const USB_OTG_GLPMCFG_ENBESL_Msk: u32 = 0x1 << USB_OTG_GLPMCFG_ENBESL_Pos;
pub const USB_OTG_GLPMCFG_ENBESL: u32 = USB_OTG_GLPMCFG_ENBESL_Msk;
pub const USB_OTG_GLPMCFG_LPMRCNTSTS_Pos: u32 = 25;
pub const USB_OTG_GLPMCFG_LPMRCNTSTS_Msk: u32 = 0x7 << USB_OTG_GLPMCFG_LPMRCNTSTS_Pos;
pub const USB_OTG_GLPMCFG_LPMRCNTSTS: u32 = USB_OTG_GLPMCFG_LPMRCNTSTS_Msk;
pub const USB_OTG_GLPMCFG_SNDLPM_Pos: u32 = 24;
pub const USB_OTG_GLPMCFG_SNDLPM_Msk: u32 = 0x1 << USB_OTG_GLPMCFG_SNDLPM_Pos;
pub const USB_OTG_GLPMCFG_SNDLPM: u32 = USB_OTG_GLPMCFG_SNDLPM_Msk;
pub const USB_OTG_GLPMCFG_LPMRCNT_Pos: u32 = 21;
pub const USB_OTG_GLPMCFG_LPMRCNT_Msk: u32 = 0x7 << USB_OTG_GLPMCFG_LPMRCNT_Pos;
pub const USB_OTG_GLPMCFG_LPMRCNT: u32 = USB_OTG_GLPMCFG_LPMRCNT_Msk;
pub const USB_OTG_GLPMCFG_LPMCHIDX_Pos: u32 = 17;
pub const USB_OTG_GLPMCFG_LPMCHIDX_Msk: u32 = 0xF << USB_OTG_GLPMCFG_LPMCHIDX_Pos;
pub const USB_OTG_GLPMCFG_LPMCHIDX: u32 = USB_OTG_GLPMCFG_LPMCHIDX_Msk;
pub const USB_OTG_GLPMCFG_L1ResumeOK_Pos: u32 = 16;
pub const USB_OTG_GLPMCFG_L1ResumeOK_Msk: u32 = 0x1 << USB_OTG_GLPMCFG_L1ResumeOK_Pos;
pub const USB_OTG_GLPMCFG_L1ResumeOK: u32 = USB_OTG_GLPMCFG_L1ResumeOK_Msk;
pub const USB_OTG_GLPMCFG_SLPSTS_Pos: u32 = 15;
pub const USB_OTG_GLPMCFG_SLPSTS_Msk: u32 = 0x1 << USB_OTG_GLPMCFG_SLPSTS_Pos;
pub const USB_OTG_GLPMCFG_SLPSTS: u32 = USB_OTG_GLPMCFG_SLPSTS_Msk;
pub const USB_OTG_GLPMCFG_LPMRSP_Pos: u32 = 13;
pub const USB_OTG_GLPMCFG_LPMRSP_Msk: u32 = 0x3 << USB_OTG_GLPMCFG_LPMRSP_Pos;
pub const USB_OTG_GLPMCFG_LPMRSP: u32 = USB_OTG_GLPMCFG_LPMRSP_Msk;
pub const USB_OTG_GLPMCFG_L1DSEN_Pos: u32 = 12;
pub const USB_OTG_GLPMCFG_L1DSEN_Msk: u32 = 0x1 << USB_OTG_GLPMCFG_L1DSEN_Pos;
pub const USB_OTG_GLPMCFG_L1DSEN: u32 = USB_OTG_GLPMCFG_L1DSEN_Msk;
pub const USB_OTG_GLPMCFG_BESLTHRS_Pos: u32 = 8;
pub const USB_OTG_GLPMCFG_BESLTHRS_Msk: u32 = 0xF << USB_OTG_GLPMCFG_BESLTHRS_Pos;
pub const USB_OTG_GLPMCFG_BESLTHRS: u32 = USB_OTG_GLPMCFG_BESLTHRS_Msk;
pub const USB_OTG_GLPMCFG_L1SSEN_Pos: u32 = 7;
pub const USB_OTG_GLPMCFG_L1SSEN_Msk: u32 = 0x1 << USB_OTG_GLPMCFG_L1SSEN_Pos;
pub const USB_OTG_GLPMCFG_L1SSEN: u32 = USB_OTG_GLPMCFG_L1SSEN_Msk;
pub const USB_OTG_GLPMCFG_REMWAKE_Pos: u32 = 6;
pub const USB_OTG_GLPMCFG_REMWAKE_Msk: u32 = 0x1 << USB_OTG_GLPMCFG_REMWAKE_Pos;
pub const USB_OTG_GLPMCFG_REMWAKE: u32 = USB_OTG_GLPMCFG_REMWAKE_Msk;
pub const USB_OTG_GLPMCFG_BESL_Pos: u32 = 2;
pub const USB_OTG_GLPMCFG_BESL_Msk: u32 = 0xF << USB_OTG_GLPMCFG_BESL_Pos;
pub const USB_OTG_GLPMCFG_BESL: u32 = USB_OTG_GLPMCFG_BESL_Msk;
pub const USB_OTG_GLPMCFG_LPMACK_Pos: u32 = 1;
pub const USB_OTG_GLPMCFG_LPMACK_Msk: u32 = 0x1 << USB_OTG_GLPMCFG_LPMACK_Pos;
pub const USB_OTG_GLPMCFG_LPMACK: u32 = USB_OTG_GLPMCFG_LPMACK_Msk;
pub const USB_OTG_GLPMCFG_LPMEN_Pos: u32 = 0;
pub const USB_OTG_GLPMCFG_LPMEN_Msk: u32 = 0x1 << USB_OTG_GLPMCFG_LPMEN_Pos;
pub const USB_OTG_GLPMCFG_LPMEN: u32 = USB_OTG_GLPMCFG_LPMEN_Msk;
pub const USB_OTG_DIEPEACHMSK1_XFRCM_Pos: u32 = 0;
pub const USB_OTG_DIEPEACHMSK1_XFRCM_Msk: u32 = 0x1 << USB_OTG_DIEPEACHMSK1_XFRCM_Pos;
pub const USB_OTG_DIEPEACHMSK1_XFRCM: u32 = USB_OTG_DIEPEACHMSK1_XFRCM_Msk;
pub const USB_OTG_DIEPEACHMSK1_EPDM_Pos: u32 = 1;
pub const USB_OTG_DIEPEACHMSK1_EPDM_Msk: u32 = 0x1 << USB_OTG_DIEPEACHMSK1_EPDM_Pos;
pub const USB_OTG_DIEPEACHMSK1_EPDM: u32 = USB_OTG_DIEPEACHMSK1_EPDM_Msk;
pub const USB_OTG_DIEPEACHMSK1_TOM_Pos: u32 = 3;
pub const USB_OTG_DIEPEACHMSK1_TOM_Msk: u32 = 0x1 << USB_OTG_DIEPEACHMSK1_TOM_Pos;
pub const USB_OTG_DIEPEACHMSK1_TOM: u32 = USB_OTG_DIEPEACHMSK1_TOM_Msk;
pub const USB_OTG_DIEPEACHMSK1_ITTXFEMSK_Pos: u32 = 4;
pub const USB_OTG_DIEPEACHMSK1_ITTXFEMSK_Msk: u32 = 0x1 << USB_OTG_DIEPEACHMSK1_ITTXFEMSK_Pos;
pub const USB_OTG_DIEPEACHMSK1_ITTXFEMSK: u32 = USB_OTG_DIEPEACHMSK1_ITTXFEMSK_Msk;
pub const USB_OTG_DIEPEACHMSK1_INEPNMM_Pos: u32 = 5;
pub const USB_OTG_DIEPEACHMSK1_INEPNMM_Msk: u32 = 0x1 << USB_OTG_DIEPEACHMSK1_INEPNMM_Pos;
pub const USB_OTG_DIEPEACHMSK1_INEPNMM: u32 = USB_OTG_DIEPEACHMSK1_INEPNMM_Msk;
pub const USB_OTG_DIEPEACHMSK1_INEPNEM_Pos: u32 = 6;
pub const USB_OTG_DIEPEACHMSK1_INEPNEM_Msk: u32 = 0x1 << USB_OTG_DIEPEACHMSK1_INEPNEM_Pos;
pub const USB_OTG_DIEPEACHMSK1_INEPNEM: u32 = USB_OTG_DIEPEACHMSK1_INEPNEM_Msk;
pub const USB_OTG_DIEPEACHMSK1_TXFURM_Pos: u32 = 8;
pub const USB_OTG_DIEPEACHMSK1_TXFURM_Msk: u32 = 0x1 << USB_OTG_DIEPEACHMSK1_TXFURM_Pos;
pub const USB_OTG_DIEPEACHMSK1_TXFURM: u32 = USB_OTG_DIEPEACHMSK1_TXFURM_Msk;
pub const USB_OTG_DIEPEACHMSK1_BIM_Pos: u32 = 9;
pub const USB_OTG_DIEPEACHMSK1_BIM_Msk: u32 = 0x1 << USB_OTG_DIEPEACHMSK1_BIM_Pos;
pub const USB_OTG_DIEPEACHMSK1_BIM: u32 = USB_OTG_DIEPEACHMSK1_BIM_Msk;
pub const USB_OTG_DIEPEACHMSK1_NAKM_Pos: u32 = 13;
pub const USB_OTG_DIEPEACHMSK1_NAKM_Msk: u32 = 0x1 << USB_OTG_DIEPEACHMSK1_NAKM_Pos;
pub const USB_OTG_DIEPEACHMSK1_NAKM: u32 = USB_OTG_DIEPEACHMSK1_NAKM_Msk;
pub const USB_OTG_HPRT_PCSTS_Pos: u32 = 0;
pub const USB_OTG_HPRT_PCSTS_Msk: u32 = 0x1 << USB_OTG_HPRT_PCSTS_Pos;
pub const USB_OTG_HPRT_PCSTS: u32 = USB_OTG_HPRT_PCSTS_Msk;
pub const USB_OTG_HPRT_PCDET_Pos: u32 = 1;
pub const USB_OTG_HPRT_PCDET_Msk: u32 = 0x1 << USB_OTG_HPRT_PCDET_Pos;
pub const USB_OTG_HPRT_PCDET: u32 = USB_OTG_HPRT_PCDET_Msk;
pub const USB_OTG_HPRT_PENA_Pos: u32 = 2;
pub const USB_OTG_HPRT_PENA_Msk: u32 = 0x1 << USB_OTG_HPRT_PENA_Pos;
pub const USB_OTG_HPRT_PENA: u32 = USB_OTG_HPRT_PENA_Msk;
pub const USB_OTG_HPRT_PENCHNG_Pos: u32 = 3;
pub const USB_OTG_HPRT_PENCHNG_Msk: u32 = 0x1 << USB_OTG_HPRT_PENCHNG_Pos;
pub const USB_OTG_HPRT_PENCHNG: u32 = USB_OTG_HPRT_PENCHNG_Msk;
pub const USB_OTG_HPRT_POCA_Pos: u32 = 4;
pub const USB_OTG_HPRT_POCA_Msk: u32 = 0x1 << USB_OTG_HPRT_POCA_Pos;
pub const USB_OTG_HPRT_POCA: u32 = USB_OTG_HPRT_POCA_Msk;
pub const USB_OTG_HPRT_POCCHNG_Pos: u32 = 5;
pub const USB_OTG_HPRT_POCCHNG_Msk: u32 = 0x1 << USB_OTG_HPRT_POCCHNG_Pos;
pub const USB_OTG_HPRT_POCCHNG: u32 = USB_OTG_HPRT_POCCHNG_Msk;
pub const USB_OTG_HPRT_PRES_Pos: u32 = 6;
pub const USB_OTG_HPRT_PRES_Msk: u32 = 0x1 << USB_OTG_HPRT_PRES_Pos;
pub const USB_OTG_HPRT_PRES: u32 = USB_OTG_HPRT_PRES_Msk;
pub const USB_OTG_HPRT_PSUSP_Pos: u32 = 7;
pub const USB_OTG_HPRT_PSUSP_Msk: u32 = 0x1 << USB_OTG_HPRT_PSUSP_Pos;
pub const USB_OTG_HPRT_PSUSP: u32 = USB_OTG_HPRT_PSUSP_Msk;
pub const USB_OTG_HPRT_PRST_Pos: u32 = 8;
pub const USB_OTG_HPRT_PRST_Msk: u32 = 0x1 << USB_OTG_HPRT_PRST_Pos;
pub const USB_OTG_HPRT_PRST: u32 = USB_OTG_HPRT_PRST_Msk;
pub const USB_OTG_HPRT_PLSTS_Pos: u32 = 10;
pub const USB_OTG_HPRT_PLSTS_Msk: u32 = 0x3 << USB_OTG_HPRT_PLSTS_Pos;
pub const USB_OTG_HPRT_PLSTS: u32 = USB_OTG_HPRT_PLSTS_Msk;
pub const USB_OTG_HPRT_PLSTS_0: u32 = 0x1 << USB_OTG_HPRT_PLSTS_Pos;
pub const USB_OTG_HPRT_PLSTS_1: u32 = 0x2 << USB_OTG_HPRT_PLSTS_Pos;
pub const USB_OTG_HPRT_PPWR_Pos: u32 = 12;
pub const USB_OTG_HPRT_PPWR_Msk: u32 = 0x1 << USB_OTG_HPRT_PPWR_Pos;
pub const USB_OTG_HPRT_PPWR: u32 = USB_OTG_HPRT_PPWR_Msk;
pub const USB_OTG_HPRT_PTCTL_Pos: u32 = 13;
pub const USB_OTG_HPRT_PTCTL_Msk: u32 = 0xF << USB_OTG_HPRT_PTCTL_Pos;
pub const USB_OTG_HPRT_PTCTL: u32 = USB_OTG_HPRT_PTCTL_Msk;
pub const USB_OTG_HPRT_PTCTL_0: u32 = 0x1 << USB_OTG_HPRT_PTCTL_Pos;
pub const USB_OTG_HPRT_PTCTL_1: u32 = 0x2 << USB_OTG_HPRT_PTCTL_Pos;
pub const USB_OTG_HPRT_PTCTL_2: u32 = 0x4 << USB_OTG_HPRT_PTCTL_Pos;
pub const USB_OTG_HPRT_PTCTL_3: u32 = 0x8 << USB_OTG_HPRT_PTCTL_Pos;
pub const USB_OTG_HPRT_PSPD_Pos: u32 = 17;
pub const USB_OTG_HPRT_PSPD_Msk: u32 = 0x3 << USB_OTG_HPRT_PSPD_Pos;
pub const USB_OTG_HPRT_PSPD: u32 = USB_OTG_HPRT_PSPD_Msk;
pub const USB_OTG_HPRT_PSPD_0: u32 = 0x1 << USB_OTG_HPRT_PSPD_Pos;
pub const USB_OTG_HPRT_PSPD_1: u32 = 0x2 << USB_OTG_HPRT_PSPD_Pos;
pub const USB_OTG_DOEPEACHMSK1_XFRCM_Pos: u32 = 0;
pub const USB_OTG_DOEPEACHMSK1_XFRCM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_XFRCM_Pos;
pub const USB_OTG_DOEPEACHMSK1_XFRCM: u32 = USB_OTG_DOEPEACHMSK1_XFRCM_Msk;
pub const USB_OTG_DOEPEACHMSK1_EPDM_Pos: u32 = 1;
pub const USB_OTG_DOEPEACHMSK1_EPDM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_EPDM_Pos;
pub const USB_OTG_DOEPEACHMSK1_EPDM: u32 = USB_OTG_DOEPEACHMSK1_EPDM_Msk;
pub const USB_OTG_DOEPEACHMSK1_TOM_Pos: u32 = 3;
pub const USB_OTG_DOEPEACHMSK1_TOM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_TOM_Pos;
pub const USB_OTG_DOEPEACHMSK1_TOM: u32 = USB_OTG_DOEPEACHMSK1_TOM_Msk;
pub const USB_OTG_DOEPEACHMSK1_ITTXFEMSK_Pos: u32 = 4;
pub const USB_OTG_DOEPEACHMSK1_ITTXFEMSK_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_ITTXFEMSK_Pos;
pub const USB_OTG_DOEPEACHMSK1_ITTXFEMSK: u32 = USB_OTG_DOEPEACHMSK1_ITTXFEMSK_Msk;
pub const USB_OTG_DOEPEACHMSK1_INEPNMM_Pos: u32 = 5;
pub const USB_OTG_DOEPEACHMSK1_INEPNMM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_INEPNMM_Pos;
pub const USB_OTG_DOEPEACHMSK1_INEPNMM: u32 = USB_OTG_DOEPEACHMSK1_INEPNMM_Msk;
pub const USB_OTG_DOEPEACHMSK1_INEPNEM_Pos: u32 = 6;
pub const USB_OTG_DOEPEACHMSK1_INEPNEM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_INEPNEM_Pos;
pub const USB_OTG_DOEPEACHMSK1_INEPNEM: u32 = USB_OTG_DOEPEACHMSK1_INEPNEM_Msk;
pub const USB_OTG_DOEPEACHMSK1_TXFURM_Pos: u32 = 8;
pub const USB_OTG_DOEPEACHMSK1_TXFURM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_TXFURM_Pos;
pub const USB_OTG_DOEPEACHMSK1_TXFURM: u32 = USB_OTG_DOEPEACHMSK1_TXFURM_Msk;
pub const USB_OTG_DOEPEACHMSK1_BIM_Pos: u32 = 9;
pub const USB_OTG_DOEPEACHMSK1_BIM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_BIM_Pos;
pub const USB_OTG_DOEPEACHMSK1_BIM: u32 = USB_OTG_DOEPEACHMSK1_BIM_Msk;
pub const USB_OTG_DOEPEACHMSK1_BERRM_Pos: u32 = 12;
pub const USB_OTG_DOEPEACHMSK1_BERRM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_BERRM_Pos;
pub const USB_OTG_DOEPEACHMSK1_BERRM: u32 = USB_OTG_DOEPEACHMSK1_BERRM_Msk;
pub const USB_OTG_DOEPEACHMSK1_NAKM_Pos: u32 = 13;
pub const USB_OTG_DOEPEACHMSK1_NAKM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_NAKM_Pos;
pub const USB_OTG_DOEPEACHMSK1_NAKM: u32 = USB_OTG_DOEPEACHMSK1_NAKM_Msk;
pub const USB_OTG_DOEPEACHMSK1_NYETM_Pos: u32 = 14;
pub const USB_OTG_DOEPEACHMSK1_NYETM_Msk: u32 = 0x1 << USB_OTG_DOEPEACHMSK1_NYETM_Pos;
pub const USB_OTG_DOEPEACHMSK1_NYETM: u32 = USB_OTG_DOEPEACHMSK1_NYETM_Msk;
pub const USB_OTG_HPTXFSIZ_PTXSA_Pos: u32 = 0;
pub const USB_OTG_HPTXFSIZ_PTXSA_Msk: u32 = 0xFFFF << USB_OTG_HPTXFSIZ_PTXSA_Pos;
pub const USB_OTG_HPTXFSIZ_PTXSA: u32 = USB_OTG_HPTXFSIZ_PTXSA_Msk;
pub const USB_OTG_HPTXFSIZ_PTXFD_Pos: u32 = 16;
pub const USB_OTG_HPTXFSIZ_PTXFD_Msk: u32 = 0xFFFF << USB_OTG_HPTXFSIZ_PTXFD_Pos;
pub const USB_OTG_HPTXFSIZ_PTXFD: u32 = USB_OTG_HPTXFSIZ_PTXFD_Msk;
pub const USB_OTG_DIEPCTL_MPSIZ_Pos: u32 = 0;
pub const USB_OTG_DIEPCTL_MPSIZ_Msk: u32 = 0x7FF << USB_OTG_DIEPCTL_MPSIZ_Pos;
pub const USB_OTG_DIEPCTL_MPSIZ: u32 = USB_OTG_DIEPCTL_MPSIZ_Msk;
pub const USB_OTG_DIEPCTL_USBAEP_Pos: u32 = 15;
pub const USB_OTG_DIEPCTL_USBAEP_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_USBAEP_Pos;
pub const USB_OTG_DIEPCTL_USBAEP: u32 = USB_OTG_DIEPCTL_USBAEP_Msk;
pub const USB_OTG_DIEPCTL_EONUM_DPID_Pos: u32 = 16;
pub const USB_OTG_DIEPCTL_EONUM_DPID_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_EONUM_DPID_Pos;
pub const USB_OTG_DIEPCTL_EONUM_DPID: u32 = USB_OTG_DIEPCTL_EONUM_DPID_Msk;
pub const USB_OTG_DIEPCTL_NAKSTS_Pos: u32 = 17;
pub const USB_OTG_DIEPCTL_NAKSTS_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_NAKSTS_Pos;
pub const USB_OTG_DIEPCTL_NAKSTS: u32 = USB_OTG_DIEPCTL_NAKSTS_Msk;
pub const USB_OTG_DIEPCTL_EPTYP_Pos: u32 = 18;
pub const USB_OTG_DIEPCTL_EPTYP_Msk: u32 = 0x3 << USB_OTG_DIEPCTL_EPTYP_Pos;
pub const USB_OTG_DIEPCTL_EPTYP: u32 = USB_OTG_DIEPCTL_EPTYP_Msk;
pub const USB_OTG_DIEPCTL_EPTYP_0: u32 = 0x1 << USB_OTG_DIEPCTL_EPTYP_Pos;
pub const USB_OTG_DIEPCTL_EPTYP_1: u32 = 0x2 << USB_OTG_DIEPCTL_EPTYP_Pos;
pub const USB_OTG_DIEPCTL_STALL_Pos: u32 = 21;
pub const USB_OTG_DIEPCTL_STALL_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_STALL_Pos;
pub const USB_OTG_DIEPCTL_STALL: u32 = USB_OTG_DIEPCTL_STALL_Msk;
pub const USB_OTG_DIEPCTL_TXFNUM_Pos: u32 = 22;
pub const USB_OTG_DIEPCTL_TXFNUM_Msk: u32 = 0xF << USB_OTG_DIEPCTL_TXFNUM_Pos;
pub const USB_OTG_DIEPCTL_TXFNUM: u32 = USB_OTG_DIEPCTL_TXFNUM_Msk;
pub const USB_OTG_DIEPCTL_TXFNUM_0: u32 = 0x1 << USB_OTG_DIEPCTL_TXFNUM_Pos;
pub const USB_OTG_DIEPCTL_TXFNUM_1: u32 = 0x2 << USB_OTG_DIEPCTL_TXFNUM_Pos;
pub const USB_OTG_DIEPCTL_TXFNUM_2: u32 = 0x4 << USB_OTG_DIEPCTL_TXFNUM_Pos;
pub const USB_OTG_DIEPCTL_TXFNUM_3: u32 = 0x8 << USB_OTG_DIEPCTL_TXFNUM_Pos;
pub const USB_OTG_DIEPCTL_CNAK_Pos: u32 = 26;
pub const USB_OTG_DIEPCTL_CNAK_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_CNAK_Pos;
pub const USB_OTG_DIEPCTL_CNAK: u32 = USB_OTG_DIEPCTL_CNAK_Msk;
pub const USB_OTG_DIEPCTL_SNAK_Pos: u32 = 27;
pub const USB_OTG_DIEPCTL_SNAK_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_SNAK_Pos;
pub const USB_OTG_DIEPCTL_SNAK: u32 = USB_OTG_DIEPCTL_SNAK_Msk;
pub const USB_OTG_DIEPCTL_SD0PID_SEVNFRM_Pos: u32 = 28;
pub const USB_OTG_DIEPCTL_SD0PID_SEVNFRM_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_SD0PID_SEVNFRM_Pos;
pub const USB_OTG_DIEPCTL_SD0PID_SEVNFRM: u32 = USB_OTG_DIEPCTL_SD0PID_SEVNFRM_Msk;
pub const USB_OTG_DIEPCTL_SODDFRM_Pos: u32 = 29;
pub const USB_OTG_DIEPCTL_SODDFRM_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_SODDFRM_Pos;
pub const USB_OTG_DIEPCTL_SODDFRM: u32 = USB_OTG_DIEPCTL_SODDFRM_Msk;
pub const USB_OTG_DIEPCTL_EPDIS_Pos: u32 = 30;
pub const USB_OTG_DIEPCTL_EPDIS_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_EPDIS_Pos;
pub const USB_OTG_DIEPCTL_EPDIS: u32 = USB_OTG_DIEPCTL_EPDIS_Msk;
pub const USB_OTG_DIEPCTL_EPENA_Pos: u32 = 31;
pub const USB_OTG_DIEPCTL_EPENA_Msk: u32 = 0x1 << USB_OTG_DIEPCTL_EPENA_Pos;
pub const USB_OTG_DIEPCTL_EPENA: u32 = USB_OTG_DIEPCTL_EPENA_Msk;
pub const USB_OTG_HCCHAR_MPSIZ_Pos: u32 = 0;
pub const USB_OTG_HCCHAR_MPSIZ_Msk: u32 = 0x7FF << USB_OTG_HCCHAR_MPSIZ_Pos;
pub const USB_OTG_HCCHAR_MPSIZ: u32 = USB_OTG_HCCHAR_MPSIZ_Msk;
pub const USB_OTG_HCCHAR_EPNUM_Pos: u32 = 11;
pub const USB_OTG_HCCHAR_EPNUM_Msk: u32 = 0xF << USB_OTG_HCCHAR_EPNUM_Pos;
pub const USB_OTG_HCCHAR_EPNUM: u32 = USB_OTG_HCCHAR_EPNUM_Msk;
pub const USB_OTG_HCCHAR_EPNUM_0: u32 = 0x1 << USB_OTG_HCCHAR_EPNUM_Pos;
pub const USB_OTG_HCCHAR_EPNUM_1: u32 = 0x2 << USB_OTG_HCCHAR_EPNUM_Pos;
pub const USB_OTG_HCCHAR_EPNUM_2: u32 = 0x4 << USB_OTG_HCCHAR_EPNUM_Pos;
pub const USB_OTG_HCCHAR_EPNUM_3: u32 = 0x8 << USB_OTG_HCCHAR_EPNUM_Pos;
pub const USB_OTG_HCCHAR_EPDIR_Pos: u32 = 15;
pub const USB_OTG_HCCHAR_EPDIR_Msk: u32 = 0x1 << USB_OTG_HCCHAR_EPDIR_Pos;
pub const USB_OTG_HCCHAR_EPDIR: u32 = USB_OTG_HCCHAR_EPDIR_Msk;
pub const USB_OTG_HCCHAR_LSDEV_Pos: u32 = 17;
pub const USB_OTG_HCCHAR_LSDEV_Msk: u32 = 0x1 << USB_OTG_HCCHAR_LSDEV_Pos;
pub const USB_OTG_HCCHAR_LSDEV: u32 = USB_OTG_HCCHAR_LSDEV_Msk;
pub const USB_OTG_HCCHAR_EPTYP_Pos: u32 = 18;
pub const USB_OTG_HCCHAR_EPTYP_Msk: u32 = 0x3 << USB_OTG_HCCHAR_EPTYP_Pos;
pub const USB_OTG_HCCHAR_EPTYP: u32 = USB_OTG_HCCHAR_EPTYP_Msk;
pub const USB_OTG_HCCHAR_EPTYP_0: u32 = 0x1 << USB_OTG_HCCHAR_EPTYP_Pos;
pub const USB_OTG_HCCHAR_EPTYP_1: u32 = 0x2 << USB_OTG_HCCHAR_EPTYP_Pos;
pub const USB_OTG_HCCHAR_MC_Pos: u32 = 20;
pub const USB_OTG_HCCHAR_MC_Msk: u32 = 0x3 << USB_OTG_HCCHAR_MC_Pos;
pub const USB_OTG_HCCHAR_MC: u32 = USB_OTG_HCCHAR_MC_Msk;
pub const USB_OTG_HCCHAR_MC_0: u32 = 0x1 << USB_OTG_HCCHAR_MC_Pos;
pub const USB_OTG_HCCHAR_MC_1: u32 = 0x2 << USB_OTG_HCCHAR_MC_Pos;
pub const USB_OTG_HCCHAR_DAD_Pos: u32 = 22;
pub const USB_OTG_HCCHAR_DAD_Msk: u32 = 0x7F << USB_OTG_HCCHAR_DAD_Pos;
pub const USB_OTG_HCCHAR_DAD: u32 = USB_OTG_HCCHAR_DAD_Msk;
pub const USB_OTG_HCCHAR_DAD_0: u32 = 0x01 << USB_OTG_HCCHAR_DAD_Pos;
pub const USB_OTG_HCCHAR_DAD_1: u32 = 0x02 << USB_OTG_HCCHAR_DAD_Pos;
pub const USB_OTG_HCCHAR_DAD_2: u32 = 0x04 << USB_OTG_HCCHAR_DAD_Pos;
pub const USB_OTG_HCCHAR_DAD_3: u32 = 0x08 << USB_OTG_HCCHAR_DAD_Pos;
pub const USB_OTG_HCCHAR_DAD_4: u32 = 0x10 << USB_OTG_HCCHAR_DAD_Pos;
pub const USB_OTG_HCCHAR_DAD_5: u32 = 0x20 << USB_OTG_HCCHAR_DAD_Pos;
pub const USB_OTG_HCCHAR_DAD_6: u32 = 0x40 << USB_OTG_HCCHAR_DAD_Pos;
pub const USB_OTG_HCCHAR_ODDFRM_Pos: u32 = 29;
pub const USB_OTG_HCCHAR_ODDFRM_Msk: u32 = 0x1 << USB_OTG_HCCHAR_ODDFRM_Pos;
pub const USB_OTG_HCCHAR_ODDFRM: u32 = USB_OTG_HCCHAR_ODDFRM_Msk;
pub const USB_OTG_HCCHAR_CHDIS_Pos: u32 = 30;
pub const USB_OTG_HCCHAR_CHDIS_Msk: u32 = 0x1 << USB_OTG_HCCHAR_CHDIS_Pos;
pub const USB_OTG_HCCHAR_CHDIS: u32 = USB_OTG_HCCHAR_CHDIS_Msk;
pub const USB_OTG_HCCHAR_CHENA_Pos: u32 = 31;
pub const USB_OTG_HCCHAR_CHENA_Msk: u32 = 0x1 << USB_OTG_HCCHAR_CHENA_Pos;
pub const USB_OTG_HCCHAR_CHENA: u32 = USB_OTG_HCCHAR_CHENA_Msk;
pub const USB_OTG_HCSPLT_PRTADDR_Pos: u32 = 0;
pub const USB_OTG_HCSPLT_PRTADDR_Msk: u32 = 0x7F << USB_OTG_HCSPLT_PRTADDR_Pos;
pub const USB_OTG_HCSPLT_PRTADDR: u32 = USB_OTG_HCSPLT_PRTADDR_Msk;
pub const USB_OTG_HCSPLT_PRTADDR_0: u32 = 0x01 << USB_OTG_HCSPLT_PRTADDR_Pos;
pub const USB_OTG_HCSPLT_PRTADDR_1: u32 = 0x02 << USB_OTG_HCSPLT_PRTADDR_Pos;
pub const USB_OTG_HCSPLT_PRTADDR_2: u32 = 0x04 << USB_OTG_HCSPLT_PRTADDR_Pos;
pub const USB_OTG_HCSPLT_PRTADDR_3: u32 = 0x08 << USB_OTG_HCSPLT_PRTADDR_Pos;
pub const USB_OTG_HCSPLT_PRTADDR_4: u32 = 0x10 << USB_OTG_HCSPLT_PRTADDR_Pos;
pub const USB_OTG_HCSPLT_PRTADDR_5: u32 = 0x20 << USB_OTG_HCSPLT_PRTADDR_Pos;
pub const USB_OTG_HCSPLT_PRTADDR_6: u32 = 0x40 << USB_OTG_HCSPLT_PRTADDR_Pos;
pub const USB_OTG_HCSPLT_HUBADDR_Pos: u32 = 7;
pub const USB_OTG_HCSPLT_HUBADDR_Msk: u32 = 0x7F << USB_OTG_HCSPLT_HUBADDR_Pos;
pub const USB_OTG_HCSPLT_HUBADDR: u32 = USB_OTG_HCSPLT_HUBADDR_Msk;
pub const USB_OTG_HCSPLT_HUBADDR_0: u32 = 0x01 << USB_OTG_HCSPLT_HUBADDR_Pos;
pub const USB_OTG_HCSPLT_HUBADDR_1: u32 = 0x02 << USB_OTG_HCSPLT_HUBADDR_Pos;
pub const USB_OTG_HCSPLT_HUBADDR_2: u32 = 0x04 << USB_OTG_HCSPLT_HUBADDR_Pos;
pub const USB_OTG_HCSPLT_HUBADDR_3: u32 = 0x08 << USB_OTG_HCSPLT_HUBADDR_Pos;
pub const USB_OTG_HCSPLT_HUBADDR_4: u32 = 0x10 << USB_OTG_HCSPLT_HUBADDR_Pos;
pub const USB_OTG_HCSPLT_HUBADDR_5: u32 = 0x20 << USB_OTG_HCSPLT_HUBADDR_Pos;
pub const USB_OTG_HCSPLT_HUBADDR_6: u32 = 0x40 << USB_OTG_HCSPLT_HUBADDR_Pos;
pub const USB_OTG_HCSPLT_XACTPOS_Pos: u32 = 14;
pub const USB_OTG_HCSPLT_XACTPOS_Msk: u32 = 0x3 << USB_OTG_HCSPLT_XACTPOS_Pos;
pub const USB_OTG_HCSPLT_XACTPOS: u32 = USB_OTG_HCSPLT_XACTPOS_Msk;
pub const USB_OTG_HCSPLT_XACTPOS_0: u32 = 0x1 << USB_OTG_HCSPLT_XACTPOS_Pos;
pub const USB_OTG_HCSPLT_XACTPOS_1: u32 = 0x2 << USB_OTG_HCSPLT_XACTPOS_Pos;
pub const USB_OTG_HCSPLT_COMPLSPLT_Pos: u32 = 16;
pub const USB_OTG_HCSPLT_COMPLSPLT_Msk: u32 = 0x1 << USB_OTG_HCSPLT_COMPLSPLT_Pos;
pub const USB_OTG_HCSPLT_COMPLSPLT: u32 = USB_OTG_HCSPLT_COMPLSPLT_Msk;
pub const USB_OTG_HCSPLT_SPLITEN_Pos: u32 = 31;
pub const USB_OTG_HCSPLT_SPLITEN_Msk: u32 = 0x1 << USB_OTG_HCSPLT_SPLITEN_Pos;
pub const USB_OTG_HCSPLT_SPLITEN: u32 = USB_OTG_HCSPLT_SPLITEN_Msk;
pub const USB_OTG_HCINT_XFRC_Pos: u32 = 0;
pub const USB_OTG_HCINT_XFRC_Msk: u32 = 0x1 << USB_OTG_HCINT_XFRC_Pos;
pub const USB_OTG_HCINT_XFRC: u32 = USB_OTG_HCINT_XFRC_Msk;
pub const USB_OTG_HCINT_CHH_Pos: u32 = 1;
pub const USB_OTG_HCINT_CHH_Msk: u32 = 0x1 << USB_OTG_HCINT_CHH_Pos;
pub const USB_OTG_HCINT_CHH: u32 = USB_OTG_HCINT_CHH_Msk;
pub const USB_OTG_HCINT_AHBERR_Pos: u32 = 2;
pub const USB_OTG_HCINT_AHBERR_Msk: u32 = 0x1 << USB_OTG_HCINT_AHBERR_Pos;
pub const USB_OTG_HCINT_AHBERR: u32 = USB_OTG_HCINT_AHBERR_Msk;
pub const USB_OTG_HCINT_STALL_Pos: u32 = 3;
pub const USB_OTG_HCINT_STALL_Msk: u32 = 0x1 << USB_OTG_HCINT_STALL_Pos;
pub const USB_OTG_HCINT_STALL: u32 = USB_OTG_HCINT_STALL_Msk;
pub const USB_OTG_HCINT_NAK_Pos: u32 = 4;
pub const USB_OTG_HCINT_NAK_Msk: u32 = 0x1 << USB_OTG_HCINT_NAK_Pos;
pub const USB_OTG_HCINT_NAK: u32 = USB_OTG_HCINT_NAK_Msk;
pub const USB_OTG_HCINT_ACK_Pos: u32 = 5;
pub const USB_OTG_HCINT_ACK_Msk: u32 = 0x1 << USB_OTG_HCINT_ACK_Pos;
pub const USB_OTG_HCINT_ACK: u32 = USB_OTG_HCINT_ACK_Msk;
pub const USB_OTG_HCINT_NYET_Pos: u32 = 6;
pub const USB_OTG_HCINT_NYET_Msk: u32 = 0x1 << USB_OTG_HCINT_NYET_Pos;
pub const USB_OTG_HCINT_NYET: u32 = USB_OTG_HCINT_NYET_Msk;
pub const USB_OTG_HCINT_TXERR_Pos: u32 = 7;
pub const USB_OTG_HCINT_TXERR_Msk: u32 = 0x1 << USB_OTG_HCINT_TXERR_Pos;
pub const USB_OTG_HCINT_TXERR: u32 = USB_OTG_HCINT_TXERR_Msk;
pub const USB_OTG_HCINT_BBERR_Pos: u32 = 8;
pub const USB_OTG_HCINT_BBERR_Msk: u32 = 0x1 << USB_OTG_HCINT_BBERR_Pos;
pub const USB_OTG_HCINT_BBERR: u32 = USB_OTG_HCINT_BBERR_Msk;
pub const USB_OTG_HCINT_FRMOR_Pos: u32 = 9;
pub const USB_OTG_HCINT_FRMOR_Msk: u32 = 0x1 << USB_OTG_HCINT_FRMOR_Pos;
pub const USB_OTG_HCINT_FRMOR: u32 = USB_OTG_HCINT_FRMOR_Msk;
pub const USB_OTG_HCINT_DTERR_Pos: u32 = 10;
pub const USB_OTG_HCINT_DTERR_Msk: u32 = 0x1 << USB_OTG_HCINT_DTERR_Pos;
pub const USB_OTG_HCINT_DTERR: u32 = USB_OTG_HCINT_DTERR_Msk;
pub const USB_OTG_DIEPINT_XFRC_Pos: u32 = 0;
pub const USB_OTG_DIEPINT_XFRC_Msk: u32 = 0x1 << USB_OTG_DIEPINT_XFRC_Pos;
pub const USB_OTG_DIEPINT_XFRC: u32 = USB_OTG_DIEPINT_XFRC_Msk;
pub const USB_OTG_DIEPINT_EPDISD_Pos: u32 = 1;
pub const USB_OTG_DIEPINT_EPDISD_Msk: u32 = 0x1 << USB_OTG_DIEPINT_EPDISD_Pos;
pub const USB_OTG_DIEPINT_EPDISD: u32 = USB_OTG_DIEPINT_EPDISD_Msk;
pub const USB_OTG_DIEPINT_TOC_Pos: u32 = 3;
pub const USB_OTG_DIEPINT_TOC_Msk: u32 = 0x1 << USB_OTG_DIEPINT_TOC_Pos;
pub const USB_OTG_DIEPINT_TOC: u32 = USB_OTG_DIEPINT_TOC_Msk;
pub const USB_OTG_DIEPINT_ITTXFE_Pos: u32 = 4;
pub const USB_OTG_DIEPINT_ITTXFE_Msk: u32 = 0x1 << USB_OTG_DIEPINT_ITTXFE_Pos;
pub const USB_OTG_DIEPINT_ITTXFE: u32 = USB_OTG_DIEPINT_ITTXFE_Msk;
pub const USB_OTG_DIEPINT_INEPNE_Pos: u32 = 6;
pub const USB_OTG_DIEPINT_INEPNE_Msk: u32 = 0x1 << USB_OTG_DIEPINT_INEPNE_Pos;
pub const USB_OTG_DIEPINT_INEPNE: u32 = USB_OTG_DIEPINT_INEPNE_Msk;
pub const USB_OTG_DIEPINT_TXFE_Pos: u32 = 7;
pub const USB_OTG_DIEPINT_TXFE_Msk: u32 = 0x1 << USB_OTG_DIEPINT_TXFE_Pos;
pub const USB_OTG_DIEPINT_TXFE: u32 = USB_OTG_DIEPINT_TXFE_Msk;
pub const USB_OTG_DIEPINT_TXFIFOUDRN_Pos: u32 = 8;
pub const USB_OTG_DIEPINT_TXFIFOUDRN_Msk: u32 = 0x1 << USB_OTG_DIEPINT_TXFIFOUDRN_Pos;
pub const USB_OTG_DIEPINT_TXFIFOUDRN: u32 = USB_OTG_DIEPINT_TXFIFOUDRN_Msk;
pub const USB_OTG_DIEPINT_BNA_Pos: u32 = 9;
pub const USB_OTG_DIEPINT_BNA_Msk: u32 = 0x1 << USB_OTG_DIEPINT_BNA_Pos;
pub const USB_OTG_DIEPINT_BNA: u32 = USB_OTG_DIEPINT_BNA_Msk;
pub const USB_OTG_DIEPINT_PKTDRPSTS_Pos: u32 = 11;
pub const USB_OTG_DIEPINT_PKTDRPSTS_Msk: u32 = 0x1 << USB_OTG_DIEPINT_PKTDRPSTS_Pos;
pub const USB_OTG_DIEPINT_PKTDRPSTS: u32 = USB_OTG_DIEPINT_PKTDRPSTS_Msk;
pub const USB_OTG_DIEPINT_BERR_Pos: u32 = 12;
pub const USB_OTG_DIEPINT_BERR_Msk: u32 = 0x1 << USB_OTG_DIEPINT_BERR_Pos;
pub const USB_OTG_DIEPINT_BERR: u32 = USB_OTG_DIEPINT_BERR_Msk;
pub const USB_OTG_DIEPINT_NAK_Pos: u32 = 13;
pub const USB_OTG_DIEPINT_NAK_Msk: u32 = 0x1 << USB_OTG_DIEPINT_NAK_Pos;
pub const USB_OTG_DIEPINT_NAK: u32 = USB_OTG_DIEPINT_NAK_Msk;
pub const USB_OTG_HCINTMSK_XFRCM_Pos: u32 = 0;
pub const USB_OTG_HCINTMSK_XFRCM_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_XFRCM_Pos;
pub const USB_OTG_HCINTMSK_XFRCM: u32 = USB_OTG_HCINTMSK_XFRCM_Msk;
pub const USB_OTG_HCINTMSK_CHHM_Pos: u32 = 1;
pub const USB_OTG_HCINTMSK_CHHM_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_CHHM_Pos;
pub const USB_OTG_HCINTMSK_CHHM: u32 = USB_OTG_HCINTMSK_CHHM_Msk;
pub const USB_OTG_HCINTMSK_AHBERR_Pos: u32 = 2;
pub const USB_OTG_HCINTMSK_AHBERR_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_AHBERR_Pos;
pub const USB_OTG_HCINTMSK_AHBERR: u32 = USB_OTG_HCINTMSK_AHBERR_Msk;
pub const USB_OTG_HCINTMSK_STALLM_Pos: u32 = 3;
pub const USB_OTG_HCINTMSK_STALLM_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_STALLM_Pos;
pub const USB_OTG_HCINTMSK_STALLM: u32 = USB_OTG_HCINTMSK_STALLM_Msk;
pub const USB_OTG_HCINTMSK_NAKM_Pos: u32 = 4;
pub const USB_OTG_HCINTMSK_NAKM_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_NAKM_Pos;
pub const USB_OTG_HCINTMSK_NAKM: u32 = USB_OTG_HCINTMSK_NAKM_Msk;
pub const USB_OTG_HCINTMSK_ACKM_Pos: u32 = 5;
pub const USB_OTG_HCINTMSK_ACKM_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_ACKM_Pos;
pub const USB_OTG_HCINTMSK_ACKM: u32 = USB_OTG_HCINTMSK_ACKM_Msk;
pub const USB_OTG_HCINTMSK_NYET_Pos: u32 = 6;
pub const USB_OTG_HCINTMSK_NYET_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_NYET_Pos;
pub const USB_OTG_HCINTMSK_NYET: u32 = USB_OTG_HCINTMSK_NYET_Msk;
pub const USB_OTG_HCINTMSK_TXERRM_Pos: u32 = 7;
pub const USB_OTG_HCINTMSK_TXERRM_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_TXERRM_Pos;
pub const USB_OTG_HCINTMSK_TXERRM: u32 = USB_OTG_HCINTMSK_TXERRM_Msk;
pub const USB_OTG_HCINTMSK_BBERRM_Pos: u32 = 8;
pub const USB_OTG_HCINTMSK_BBERRM_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_BBERRM_Pos;
pub const USB_OTG_HCINTMSK_BBERRM: u32 = USB_OTG_HCINTMSK_BBERRM_Msk;
pub const USB_OTG_HCINTMSK_FRMORM_Pos: u32 = 9;
pub const USB_OTG_HCINTMSK_FRMORM_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_FRMORM_Pos;
pub const USB_OTG_HCINTMSK_FRMORM: u32 = USB_OTG_HCINTMSK_FRMORM_Msk;
pub const USB_OTG_HCINTMSK_DTERRM_Pos: u32 = 10;
pub const USB_OTG_HCINTMSK_DTERRM_Msk: u32 = 0x1 << USB_OTG_HCINTMSK_DTERRM_Pos;
pub const USB_OTG_HCINTMSK_DTERRM: u32 = USB_OTG_HCINTMSK_DTERRM_Msk;
pub const USB_OTG_DIEPTSIZ_XFRSIZ_Pos: u32 = 0;
pub const USB_OTG_DIEPTSIZ_XFRSIZ_Msk: u32 = 0x7FFFF << USB_OTG_DIEPTSIZ_XFRSIZ_Pos;
pub const USB_OTG_DIEPTSIZ_XFRSIZ: u32 = USB_OTG_DIEPTSIZ_XFRSIZ_Msk;
pub const USB_OTG_DIEPTSIZ_PKTCNT_Pos: u32 = 19;
pub const USB_OTG_DIEPTSIZ_PKTCNT_Msk: u32 = 0x3FF << USB_OTG_DIEPTSIZ_PKTCNT_Pos;
pub const USB_OTG_DIEPTSIZ_PKTCNT: u32 = USB_OTG_DIEPTSIZ_PKTCNT_Msk;
pub const USB_OTG_DIEPTSIZ_MULCNT_Pos: u32 = 29;
pub const USB_OTG_DIEPTSIZ_MULCNT_Msk: u32 = 0x3 << USB_OTG_DIEPTSIZ_MULCNT_Pos;
pub const USB_OTG_DIEPTSIZ_MULCNT: u32 = USB_OTG_DIEPTSIZ_MULCNT_Msk;
pub const USB_OTG_HCTSIZ_XFRSIZ_Pos: u32 = 0;
pub const USB_OTG_HCTSIZ_XFRSIZ_Msk: u32 = 0x7FFFF << USB_OTG_HCTSIZ_XFRSIZ_Pos;
pub const USB_OTG_HCTSIZ_XFRSIZ: u32 = USB_OTG_HCTSIZ_XFRSIZ_Msk;
pub const USB_OTG_HCTSIZ_PKTCNT_Pos: u32 = 19;
pub const USB_OTG_HCTSIZ_PKTCNT_Msk: u32 = 0x3FF << USB_OTG_HCTSIZ_PKTCNT_Pos;
pub const USB_OTG_HCTSIZ_PKTCNT: u32 = USB_OTG_HCTSIZ_PKTCNT_Msk;
pub const USB_OTG_HCTSIZ_DOPING_Pos: u32 = 31;
pub const USB_OTG_HCTSIZ_DOPING_Msk: u32 = 0x1 << USB_OTG_HCTSIZ_DOPING_Pos;
pub const USB_OTG_HCTSIZ_DOPING: u32 = USB_OTG_HCTSIZ_DOPING_Msk;
pub const USB_OTG_HCTSIZ_DPID_Pos: u32 = 29;
pub const USB_OTG_HCTSIZ_DPID_Msk: u32 = 0x3 << USB_OTG_HCTSIZ_DPID_Pos;
pub const USB_OTG_HCTSIZ_DPID: u32 = USB_OTG_HCTSIZ_DPID_Msk;
pub const USB_OTG_HCTSIZ_DPID_0: u32 = 0x1 << USB_OTG_HCTSIZ_DPID_Pos;
pub const USB_OTG_HCTSIZ_DPID_1: u32 = 0x2 << USB_OTG_HCTSIZ_DPID_Pos;
pub const USB_OTG_DIEPDMA_DMAADDR_Pos: u32 = 0;
pub const USB_OTG_DIEPDMA_DMAADDR_Msk: u32 = 0xFFFFFFFF << USB_OTG_DIEPDMA_DMAADDR_Pos;
pub const USB_OTG_DIEPDMA_DMAADDR: u32 = USB_OTG_DIEPDMA_DMAADDR_Msk;
pub const USB_OTG_HCDMA_DMAADDR_Pos: u32 = 0;
pub const USB_OTG_HCDMA_DMAADDR_Msk: u32 = 0xFFFFFFFF << USB_OTG_HCDMA_DMAADDR_Pos;
pub const USB_OTG_HCDMA_DMAADDR: u32 = USB_OTG_HCDMA_DMAADDR_Msk;
pub const USB_OTG_DTXFSTS_INEPTFSAV_Pos: u32 = 0;
pub const USB_OTG_DTXFSTS_INEPTFSAV_Msk: u32 = 0xFFFF << USB_OTG_DTXFSTS_INEPTFSAV_Pos;
pub const USB_OTG_DTXFSTS_INEPTFSAV: u32 = USB_OTG_DTXFSTS_INEPTFSAV_Msk;
pub const USB_OTG_DIEPTXF_INEPTXSA_Pos: u32 = 0;
pub const USB_OTG_DIEPTXF_INEPTXSA_Msk: u32 = 0xFFFF << USB_OTG_DIEPTXF_INEPTXSA_Pos;
pub const USB_OTG_DIEPTXF_INEPTXSA: u32 = USB_OTG_DIEPTXF_INEPTXSA_Msk;
pub const USB_OTG_DIEPTXF_INEPTXFD_Pos: u32 = 16;
pub const USB_OTG_DIEPTXF_INEPTXFD_Msk: u32 = 0xFFFF << USB_OTG_DIEPTXF_INEPTXFD_Pos;
pub const USB_OTG_DIEPTXF_INEPTXFD: u32 = USB_OTG_DIEPTXF_INEPTXFD_Msk;
pub const USB_OTG_DOEPCTL_MPSIZ_Pos: u32 = 0;
pub const USB_OTG_DOEPCTL_MPSIZ_Msk: u32 = 0x7FF << USB_OTG_DOEPCTL_MPSIZ_Pos;
pub const USB_OTG_DOEPCTL_MPSIZ: u32 = USB_OTG_DOEPCTL_MPSIZ_Msk;
pub const USB_OTG_DOEPCTL_USBAEP_Pos: u32 = 15;
pub const USB_OTG_DOEPCTL_USBAEP_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_USBAEP_Pos;
pub const USB_OTG_DOEPCTL_USBAEP: u32 = USB_OTG_DOEPCTL_USBAEP_Msk;
pub const USB_OTG_DOEPCTL_NAKSTS_Pos: u32 = 17;
pub const USB_OTG_DOEPCTL_NAKSTS_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_NAKSTS_Pos;
pub const USB_OTG_DOEPCTL_NAKSTS: u32 = USB_OTG_DOEPCTL_NAKSTS_Msk;
pub const USB_OTG_DOEPCTL_SD0PID_SEVNFRM_Pos: u32 = 28;
pub const USB_OTG_DOEPCTL_SD0PID_SEVNFRM_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_SD0PID_SEVNFRM_Pos;
pub const USB_OTG_DOEPCTL_SD0PID_SEVNFRM: u32 = USB_OTG_DOEPCTL_SD0PID_SEVNFRM_Msk;
pub const USB_OTG_DOEPCTL_SODDFRM_Pos: u32 = 29;
pub const USB_OTG_DOEPCTL_SODDFRM_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_SODDFRM_Pos;
pub const USB_OTG_DOEPCTL_SODDFRM: u32 = USB_OTG_DOEPCTL_SODDFRM_Msk;
pub const USB_OTG_DOEPCTL_EPTYP_Pos: u32 = 18;
pub const USB_OTG_DOEPCTL_EPTYP_Msk: u32 = 0x3 << USB_OTG_DOEPCTL_EPTYP_Pos;
pub const USB_OTG_DOEPCTL_EPTYP: u32 = USB_OTG_DOEPCTL_EPTYP_Msk;
pub const USB_OTG_DOEPCTL_EPTYP_0: u32 = 0x1 << USB_OTG_DOEPCTL_EPTYP_Pos;
pub const USB_OTG_DOEPCTL_EPTYP_1: u32 = 0x2 << USB_OTG_DOEPCTL_EPTYP_Pos;
pub const USB_OTG_DOEPCTL_SNPM_Pos: u32 = 20;
pub const USB_OTG_DOEPCTL_SNPM_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_SNPM_Pos;
pub const USB_OTG_DOEPCTL_SNPM: u32 = USB_OTG_DOEPCTL_SNPM_Msk;
pub const USB_OTG_DOEPCTL_STALL_Pos: u32 = 21;
pub const USB_OTG_DOEPCTL_STALL_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_STALL_Pos;
pub const USB_OTG_DOEPCTL_STALL: u32 = USB_OTG_DOEPCTL_STALL_Msk;
pub const USB_OTG_DOEPCTL_CNAK_Pos: u32 = 26;
pub const USB_OTG_DOEPCTL_CNAK_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_CNAK_Pos;
pub const USB_OTG_DOEPCTL_CNAK: u32 = USB_OTG_DOEPCTL_CNAK_Msk;
pub const USB_OTG_DOEPCTL_SNAK_Pos: u32 = 27;
pub const USB_OTG_DOEPCTL_SNAK_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_SNAK_Pos;
pub const USB_OTG_DOEPCTL_SNAK: u32 = USB_OTG_DOEPCTL_SNAK_Msk;
pub const USB_OTG_DOEPCTL_EPDIS_Pos: u32 = 30;
pub const USB_OTG_DOEPCTL_EPDIS_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_EPDIS_Pos;
pub const USB_OTG_DOEPCTL_EPDIS: u32 = USB_OTG_DOEPCTL_EPDIS_Msk;
pub const USB_OTG_DOEPCTL_EPENA_Pos: u32 = 31;
pub const USB_OTG_DOEPCTL_EPENA_Msk: u32 = 0x1 << USB_OTG_DOEPCTL_EPENA_Pos;
pub const USB_OTG_DOEPCTL_EPENA: u32 = USB_OTG_DOEPCTL_EPENA_Msk;
pub const USB_OTG_DOEPINT_XFRC_Pos: u32 = 0;
pub const USB_OTG_DOEPINT_XFRC_Msk: u32 = 0x1 << USB_OTG_DOEPINT_XFRC_Pos;
pub const USB_OTG_DOEPINT_XFRC: u32 = USB_OTG_DOEPINT_XFRC_Msk;
pub const USB_OTG_DOEPINT_EPDISD_Pos: u32 = 1;
pub const USB_OTG_DOEPINT_EPDISD_Msk: u32 = 0x1 << USB_OTG_DOEPINT_EPDISD_Pos;
pub const USB_OTG_DOEPINT_EPDISD: u32 = USB_OTG_DOEPINT_EPDISD_Msk;
pub const USB_OTG_DOEPINT_STUP_Pos: u32 = 3;
pub const USB_OTG_DOEPINT_STUP_Msk: u32 = 0x1 << USB_OTG_DOEPINT_STUP_Pos;
pub const USB_OTG_DOEPINT_STUP: u32 = USB_OTG_DOEPINT_STUP_Msk;
pub const USB_OTG_DOEPINT_OTEPDIS_Pos: u32 = 4;
pub const USB_OTG_DOEPINT_OTEPDIS_Msk: u32 = 0x1 << USB_OTG_DOEPINT_OTEPDIS_Pos;
pub const USB_OTG_DOEPINT_OTEPDIS: u32 = USB_OTG_DOEPINT_OTEPDIS_Msk;
pub const USB_OTG_DOEPINT_B2BSTUP_Pos: u32 = 6;
pub const USB_OTG_DOEPINT_B2BSTUP_Msk: u32 = 0x1 << USB_OTG_DOEPINT_B2BSTUP_Pos;
pub const USB_OTG_DOEPINT_B2BSTUP: u32 = USB_OTG_DOEPINT_B2BSTUP_Msk;
pub const USB_OTG_DOEPINT_NYET_Pos: u32 = 14;
pub const USB_OTG_DOEPINT_NYET_Msk: u32 = 0x1 << USB_OTG_DOEPINT_NYET_Pos;
pub const USB_OTG_DOEPINT_NYET: u32 = USB_OTG_DOEPINT_NYET_Msk;
pub const USB_OTG_DOEPTSIZ_XFRSIZ_Pos: u32 = 0;
pub const USB_OTG_DOEPTSIZ_XFRSIZ_Msk: u32 = 0x7FFFF << USB_OTG_DOEPTSIZ_XFRSIZ_Pos;
pub const USB_OTG_DOEPTSIZ_XFRSIZ: u32 = USB_OTG_DOEPTSIZ_XFRSIZ_Msk;
pub const USB_OTG_DOEPTSIZ_PKTCNT_Pos: u32 = 19;
pub const USB_OTG_DOEPTSIZ_PKTCNT_Msk: u32 = 0x3FF << USB_OTG_DOEPTSIZ_PKTCNT_Pos;
pub const USB_OTG_DOEPTSIZ_PKTCNT: u32 = USB_OTG_DOEPTSIZ_PKTCNT_Msk;
pub const USB_OTG_DOEPTSIZ_STUPCNT_Pos: u32 = 29;
pub const USB_OTG_DOEPTSIZ_STUPCNT_Msk: u32 = 0x3 << USB_OTG_DOEPTSIZ_STUPCNT_Pos;
pub const USB_OTG_DOEPTSIZ_STUPCNT: u32 = USB_OTG_DOEPTSIZ_STUPCNT_Msk;
pub const USB_OTG_DOEPTSIZ_STUPCNT_0: u32 = 0x1 << USB_OTG_DOEPTSIZ_STUPCNT_Pos;
pub const USB_OTG_DOEPTSIZ_STUPCNT_1: u32 = 0x2 << USB_OTG_DOEPTSIZ_STUPCNT_Pos;
pub const USB_OTG_PCGCCTL_STOPCLK_Pos: u32 = 0;
pub const USB_OTG_PCGCCTL_STOPCLK_Msk: u32 = 0x1 << USB_OTG_PCGCCTL_STOPCLK_Pos;
pub const USB_OTG_PCGCCTL_STOPCLK: u32 = USB_OTG_PCGCCTL_STOPCLK_Msk;
pub const USB_OTG_PCGCCTL_GATECLK_Pos: u32 = 1;
pub const USB_OTG_PCGCCTL_GATECLK_Msk: u32 = 0x1 << USB_OTG_PCGCCTL_GATECLK_Pos;
pub const USB_OTG_PCGCCTL_GATECLK: u32 = USB_OTG_PCGCCTL_GATECLK_Msk;
pub const USB_OTG_PCGCCTL_PHYSUSP_Pos: u32 = 4;
pub const USB_OTG_PCGCCTL_PHYSUSP_Msk: u32 = 0x1 << USB_OTG_PCGCCTL_PHYSUSP_Pos;
pub const USB_OTG_PCGCCTL_PHYSUSP: u32 = USB_OTG_PCGCCTL_PHYSUSP_Msk;
pub const USART_CR1_UE_Pos: u32 = 0;
pub const USART_CR1_UE_Msk: u32 = 0x1 << USART_CR1_UE_Pos;
pub const USART_CR1_UE: u32 = USART_CR1_UE_Msk;
pub const USART_CR1_UESM_Pos: u32 = 1;
pub const USART_CR1_UESM_Msk: u32 = 0x1 << USART_CR1_UESM_Pos;
pub const USART_CR1_UESM: u32 = USART_CR1_UESM_Msk;
pub const USART_CR1_RE_Pos: u32 = 2;
pub const USART_CR1_RE_Msk: u32 = 0x1 << USART_CR1_RE_Pos;
pub const USART_CR1_RE: u32 = USART_CR1_RE_Msk;
pub const USART_CR1_TE_Pos: u32 = 3;
pub const USART_CR1_TE_Msk: u32 = 0x1 << USART_CR1_TE_Pos;
pub const USART_CR1_TE: u32 = USART_CR1_TE_Msk;
pub const USART_CR1_IDLEIE_Pos: u32 = 4;
pub const USART_CR1_IDLEIE_Msk: u32 = 0x1 << USART_CR1_IDLEIE_Pos;
pub const USART_CR1_IDLEIE: u32 = USART_CR1_IDLEIE_Msk;
pub const USART_CR1_RXNEIE_Pos: u32 = 5;
pub const USART_CR1_RXNEIE_Msk: u32 = 0x1 << USART_CR1_RXNEIE_Pos;
pub const USART_CR1_RXNEIE: u32 = USART_CR1_RXNEIE_Msk;
pub const USART_CR1_RXNEIE_RXFNEIE_Pos: u32 = USART_CR1_RXNEIE_Pos;
pub const USART_CR1_RXNEIE_RXFNEIE_Msk: u32 = USART_CR1_RXNEIE_Msk;
pub const USART_CR1_RXNEIE_RXFNEIE: u32 = USART_CR1_RXNEIE_Msk;
pub const USART_CR1_TCIE_Pos: u32 = 6;
pub const USART_CR1_TCIE_Msk: u32 = 0x1 << USART_CR1_TCIE_Pos;
pub const USART_CR1_TCIE: u32 = USART_CR1_TCIE_Msk;
pub const USART_CR1_TXEIE_Pos: u32 = 7;
pub const USART_CR1_TXEIE_Msk: u32 = 0x1 << USART_CR1_TXEIE_Pos;
pub const USART_CR1_TXEIE: u32 = USART_CR1_TXEIE_Msk;
pub const USART_CR1_TXEIE_TXFNFIE_Pos: u32 = 7;
pub const USART_CR1_TXEIE_TXFNFIE_Msk: u32 = 0x1 << USART_CR1_TXEIE_Pos;
pub const USART_CR1_TXEIE_TXFNFIE: u32 = USART_CR1_TXEIE;
pub const USART_CR1_PEIE_Pos: u32 = 8;
pub const USART_CR1_PEIE_Msk: u32 = 0x1 << USART_CR1_PEIE_Pos;
pub const USART_CR1_PEIE: u32 = USART_CR1_PEIE_Msk;
pub const USART_CR1_PS_Pos: u32 = 9;
pub const USART_CR1_PS_Msk: u32 = 0x1 << USART_CR1_PS_Pos;
pub const USART_CR1_PS: u32 = USART_CR1_PS_Msk;
pub const USART_CR1_PCE_Pos: u32 = 10;
pub const USART_CR1_PCE_Msk: u32 = 0x1 << USART_CR1_PCE_Pos;
pub const USART_CR1_PCE: u32 = USART_CR1_PCE_Msk;
pub const USART_CR1_WAKE_Pos: u32 = 11;
pub const USART_CR1_WAKE_Msk: u32 = 0x1 << USART_CR1_WAKE_Pos;
pub const USART_CR1_WAKE: u32 = USART_CR1_WAKE_Msk;
pub const USART_CR1_M0_Pos: u32 = 12;
pub const USART_CR1_M0_Msk: u32 = 0x1 << USART_CR1_M0_Pos;
pub const USART_CR1_M0: u32 = USART_CR1_M0_Msk;
pub const USART_CR1_MME_Pos: u32 = 13;
pub const USART_CR1_MME_Msk: u32 = 0x1 << USART_CR1_MME_Pos;
pub const USART_CR1_MME: u32 = USART_CR1_MME_Msk;
pub const USART_CR1_CMIE_Pos: u32 = 14;
pub const USART_CR1_CMIE_Msk: u32 = 0x1 << USART_CR1_CMIE_Pos;
pub const USART_CR1_CMIE: u32 = USART_CR1_CMIE_Msk;
pub const USART_CR1_OVER8_Pos: u32 = 15;
pub const USART_CR1_OVER8_Msk: u32 = 0x1 << USART_CR1_OVER8_Pos;
pub const USART_CR1_OVER8: u32 = USART_CR1_OVER8_Msk;
pub const USART_CR1_DEDT_Pos: u32 = 16;
pub const USART_CR1_DEDT_Msk: u32 = 0x1F << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT: u32 = USART_CR1_DEDT_Msk;
pub const USART_CR1_DEDT_0: u32 = 0x01 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_1: u32 = 0x02 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_2: u32 = 0x04 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_3: u32 = 0x08 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_4: u32 = 0x10 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEAT_Pos: u32 = 21;
pub const USART_CR1_DEAT_Msk: u32 = 0x1F << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT: u32 = USART_CR1_DEAT_Msk;
pub const USART_CR1_DEAT_0: u32 = 0x01 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_1: u32 = 0x02 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_2: u32 = 0x04 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_3: u32 = 0x08 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_4: u32 = 0x10 << USART_CR1_DEAT_Pos;
pub const USART_CR1_RTOIE_Pos: u32 = 26;
pub const USART_CR1_RTOIE_Msk: u32 = 0x1 << USART_CR1_RTOIE_Pos;
pub const USART_CR1_RTOIE: u32 = USART_CR1_RTOIE_Msk;
pub const USART_CR1_EOBIE_Pos: u32 = 27;
pub const USART_CR1_EOBIE_Msk: u32 = 0x1 << USART_CR1_EOBIE_Pos;
pub const USART_CR1_EOBIE: u32 = USART_CR1_EOBIE_Msk;
pub const USART_CR1_M1_Pos: u32 = 28;
pub const USART_CR1_M1_Msk: u32 = 0x1 << USART_CR1_M1_Pos;
pub const USART_CR1_M1: u32 = USART_CR1_M1_Msk;
pub const USART_CR1_M: u32 = uint32_tUSART_CR1_M1 | USART_CR1_M0;
pub const USART_CR1_FIFOEN_Pos: u32 = 29;
pub const USART_CR1_FIFOEN_Msk: u32 = 0x1 << USART_CR1_FIFOEN_Pos;
pub const USART_CR1_FIFOEN: u32 = USART_CR1_FIFOEN_Msk;
pub const USART_CR1_TXFEIE_Pos: u32 = 30;
pub const USART_CR1_TXFEIE_Msk: u32 = 0x1 << USART_CR1_TXFEIE_Pos;
pub const USART_CR1_TXFEIE: u32 = USART_CR1_TXFEIE_Msk;
pub const USART_CR1_RXFFIE_Pos: u32 = 31;
pub const USART_CR1_RXFFIE_Msk: u32 = 0x1 << USART_CR1_RXFFIE_Pos;
pub const USART_CR1_RXFFIE: u32 = USART_CR1_RXFFIE_Msk;
pub const USART_CR2_SLVEN_Pos: u32 = 0;
pub const USART_CR2_SLVEN_Msk: u32 = 0x1 << USART_CR2_SLVEN_Pos;
pub const USART_CR2_SLVEN: u32 = USART_CR2_SLVEN_Msk;
pub const USART_CR2_DIS_NSS_Pos: u32 = 3;
pub const USART_CR2_DIS_NSS_Msk: u32 = 0x1 << USART_CR2_DIS_NSS_Pos;
pub const USART_CR2_DIS_NSS: u32 = USART_CR2_DIS_NSS_Msk;
pub const USART_CR2_ADDM7_Pos: u32 = 4;
pub const USART_CR2_ADDM7_Msk: u32 = 0x1 << USART_CR2_ADDM7_Pos;
pub const USART_CR2_ADDM7: u32 = USART_CR2_ADDM7_Msk;
pub const USART_CR2_LBDL_Pos: u32 = 5;
pub const USART_CR2_LBDL_Msk: u32 = 0x1 << USART_CR2_LBDL_Pos;
pub const USART_CR2_LBDL: u32 = USART_CR2_LBDL_Msk;
pub const USART_CR2_LBDIE_Pos: u32 = 6;
pub const USART_CR2_LBDIE_Msk: u32 = 0x1 << USART_CR2_LBDIE_Pos;
pub const USART_CR2_LBDIE: u32 = USART_CR2_LBDIE_Msk;
pub const USART_CR2_LBCL_Pos: u32 = 8;
pub const USART_CR2_LBCL_Msk: u32 = 0x1 << USART_CR2_LBCL_Pos;
pub const USART_CR2_LBCL: u32 = USART_CR2_LBCL_Msk;
pub const USART_CR2_CPHA_Pos: u32 = 9;
pub const USART_CR2_CPHA_Msk: u32 = 0x1 << USART_CR2_CPHA_Pos;
pub const USART_CR2_CPHA: u32 = USART_CR2_CPHA_Msk;
pub const USART_CR2_CPOL_Pos: u32 = 10;
pub const USART_CR2_CPOL_Msk: u32 = 0x1 << USART_CR2_CPOL_Pos;
pub const USART_CR2_CPOL: u32 = USART_CR2_CPOL_Msk;
pub const USART_CR2_CLKEN_Pos: u32 = 11;
pub const USART_CR2_CLKEN_Msk: u32 = 0x1 << USART_CR2_CLKEN_Pos;
pub const USART_CR2_CLKEN: u32 = USART_CR2_CLKEN_Msk;
pub const USART_CR2_STOP_Pos: u32 = 12;
pub const USART_CR2_STOP_Msk: u32 = 0x3 << USART_CR2_STOP_Pos;
pub const USART_CR2_STOP: u32 = USART_CR2_STOP_Msk;
pub const USART_CR2_STOP_0: u32 = 0x1 << USART_CR2_STOP_Pos;
pub const USART_CR2_STOP_1: u32 = 0x2 << USART_CR2_STOP_Pos;
pub const USART_CR2_LINEN_Pos: u32 = 14;
pub const USART_CR2_LINEN_Msk: u32 = 0x1 << USART_CR2_LINEN_Pos;
pub const USART_CR2_LINEN: u32 = USART_CR2_LINEN_Msk;
pub const USART_CR2_SWAP_Pos: u32 = 15;
pub const USART_CR2_SWAP_Msk: u32 = 0x1 << USART_CR2_SWAP_Pos;
pub const USART_CR2_SWAP: u32 = USART_CR2_SWAP_Msk;
pub const USART_CR2_RXINV_Pos: u32 = 16;
pub const USART_CR2_RXINV_Msk: u32 = 0x1 << USART_CR2_RXINV_Pos;
pub const USART_CR2_RXINV: u32 = USART_CR2_RXINV_Msk;
pub const USART_CR2_TXINV_Pos: u32 = 17;
pub const USART_CR2_TXINV_Msk: u32 = 0x1 << USART_CR2_TXINV_Pos;
pub const USART_CR2_TXINV: u32 = USART_CR2_TXINV_Msk;
pub const USART_CR2_DATAINV_Pos: u32 = 18;
pub const USART_CR2_DATAINV_Msk: u32 = 0x1 << USART_CR2_DATAINV_Pos;
pub const USART_CR2_DATAINV: u32 = USART_CR2_DATAINV_Msk;
pub const USART_CR2_MSBFIRST_Pos: u32 = 19;
pub const USART_CR2_MSBFIRST_Msk: u32 = 0x1 << USART_CR2_MSBFIRST_Pos;
pub const USART_CR2_MSBFIRST: u32 = USART_CR2_MSBFIRST_Msk;
pub const USART_CR2_ABREN_Pos: u32 = 20;
pub const USART_CR2_ABREN_Msk: u32 = 0x1 << USART_CR2_ABREN_Pos;
pub const USART_CR2_ABREN: u32 = USART_CR2_ABREN_Msk;
pub const USART_CR2_ABRMODE_Pos: u32 = 21;
pub const USART_CR2_ABRMODE_Msk: u32 = 0x3 << USART_CR2_ABRMODE_Pos;
pub const USART_CR2_ABRMODE: u32 = USART_CR2_ABRMODE_Msk;
pub const USART_CR2_ABRMODE_0: u32 = 0x1 << USART_CR2_ABRMODE_Pos;
pub const USART_CR2_ABRMODE_1: u32 = 0x2 << USART_CR2_ABRMODE_Pos;
pub const USART_CR2_RTOEN_Pos: u32 = 23;
pub const USART_CR2_RTOEN_Msk: u32 = 0x1 << USART_CR2_RTOEN_Pos;
pub const USART_CR2_RTOEN: u32 = USART_CR2_RTOEN_Msk;
pub const USART_CR2_ADD_Pos: u32 = 24;
pub const USART_CR2_ADD_Msk: u32 = 0xFF << USART_CR2_ADD_Pos;
pub const USART_CR2_ADD: u32 = USART_CR2_ADD_Msk;
pub const USART_CR3_EIE_Pos: u32 = 0;
pub const USART_CR3_EIE_Msk: u32 = 0x1 << USART_CR3_EIE_Pos;
pub const USART_CR3_EIE: u32 = USART_CR3_EIE_Msk;
pub const USART_CR3_IREN_Pos: u32 = 1;
pub const USART_CR3_IREN_Msk: u32 = 0x1 << USART_CR3_IREN_Pos;
pub const USART_CR3_IREN: u32 = USART_CR3_IREN_Msk;
pub const USART_CR3_IRLP_Pos: u32 = 2;
pub const USART_CR3_IRLP_Msk: u32 = 0x1 << USART_CR3_IRLP_Pos;
pub const USART_CR3_IRLP: u32 = USART_CR3_IRLP_Msk;
pub const USART_CR3_HDSEL_Pos: u32 = 3;
pub const USART_CR3_HDSEL_Msk: u32 = 0x1 << USART_CR3_HDSEL_Pos;
pub const USART_CR3_HDSEL: u32 = USART_CR3_HDSEL_Msk;
pub const USART_CR3_NACK_Pos: u32 = 4;
pub const USART_CR3_NACK_Msk: u32 = 0x1 << USART_CR3_NACK_Pos;
pub const USART_CR3_NACK: u32 = USART_CR3_NACK_Msk;
pub const USART_CR3_SCEN_Pos: u32 = 5;
pub const USART_CR3_SCEN_Msk: u32 = 0x1 << USART_CR3_SCEN_Pos;
pub const USART_CR3_SCEN: u32 = USART_CR3_SCEN_Msk;
pub const USART_CR3_DMAR_Pos: u32 = 6;
pub const USART_CR3_DMAR_Msk: u32 = 0x1 << USART_CR3_DMAR_Pos;
pub const USART_CR3_DMAR: u32 = USART_CR3_DMAR_Msk;
pub const USART_CR3_DMAT_Pos: u32 = 7;
pub const USART_CR3_DMAT_Msk: u32 = 0x1 << USART_CR3_DMAT_Pos;
pub const USART_CR3_DMAT: u32 = USART_CR3_DMAT_Msk;
pub const USART_CR3_RTSE_Pos: u32 = 8;
pub const USART_CR3_RTSE_Msk: u32 = 0x1 << USART_CR3_RTSE_Pos;
pub const USART_CR3_RTSE: u32 = USART_CR3_RTSE_Msk;
pub const USART_CR3_CTSE_Pos: u32 = 9;
pub const USART_CR3_CTSE_Msk: u32 = 0x1 << USART_CR3_CTSE_Pos;
pub const USART_CR3_CTSE: u32 = USART_CR3_CTSE_Msk;
pub const USART_CR3_CTSIE_Pos: u32 = 10;
pub const USART_CR3_CTSIE_Msk: u32 = 0x1 << USART_CR3_CTSIE_Pos;
pub const USART_CR3_CTSIE: u32 = USART_CR3_CTSIE_Msk;
pub const USART_CR3_ONEBIT_Pos: u32 = 11;
pub const USART_CR3_ONEBIT_Msk: u32 = 0x1 << USART_CR3_ONEBIT_Pos;
pub const USART_CR3_ONEBIT: u32 = USART_CR3_ONEBIT_Msk;
pub const USART_CR3_OVRDIS_Pos: u32 = 12;
pub const USART_CR3_OVRDIS_Msk: u32 = 0x1 << USART_CR3_OVRDIS_Pos;
pub const USART_CR3_OVRDIS: u32 = USART_CR3_OVRDIS_Msk;
pub const USART_CR3_DDRE_Pos: u32 = 13;
pub const USART_CR3_DDRE_Msk: u32 = 0x1 << USART_CR3_DDRE_Pos;
pub const USART_CR3_DDRE: u32 = USART_CR3_DDRE_Msk;
pub const USART_CR3_DEM_Pos: u32 = 14;
pub const USART_CR3_DEM_Msk: u32 = 0x1 << USART_CR3_DEM_Pos;
pub const USART_CR3_DEM: u32 = USART_CR3_DEM_Msk;
pub const USART_CR3_DEP_Pos: u32 = 15;
pub const USART_CR3_DEP_Msk: u32 = 0x1 << USART_CR3_DEP_Pos;
pub const USART_CR3_DEP: u32 = USART_CR3_DEP_Msk;
pub const USART_CR3_SCARCNT_Pos: u32 = 17;
pub const USART_CR3_SCARCNT_Msk: u32 = 0x7 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_SCARCNT: u32 = USART_CR3_SCARCNT_Msk;
pub const USART_CR3_SCARCNT_0: u32 = 0x1 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_SCARCNT_1: u32 = 0x2 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_SCARCNT_2: u32 = 0x4 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_WUS_Pos: u32 = 20;
pub const USART_CR3_WUS_Msk: u32 = 0x3 << USART_CR3_WUS_Pos;
pub const USART_CR3_WUS: u32 = USART_CR3_WUS_Msk;
pub const USART_CR3_WUS_0: u32 = 0x1 << USART_CR3_WUS_Pos;
pub const USART_CR3_WUS_1: u32 = 0x2 << USART_CR3_WUS_Pos;
pub const USART_CR3_WUFIE_Pos: u32 = 22;
pub const USART_CR3_WUFIE_Msk: u32 = 0x1 << USART_CR3_WUFIE_Pos;
pub const USART_CR3_WUFIE: u32 = USART_CR3_WUFIE_Msk;
pub const USART_CR3_TXFTIE_Pos: u32 = 23;
pub const USART_CR3_TXFTIE_Msk: u32 = 0x1 << USART_CR3_TXFTIE_Pos;
pub const USART_CR3_TXFTIE: u32 = USART_CR3_TXFTIE_Msk;
pub const USART_CR3_TCBGTIE_Pos: u32 = 24;
pub const USART_CR3_TCBGTIE_Msk: u32 = 0x1 << USART_CR3_TCBGTIE_Pos;
pub const USART_CR3_TCBGTIE: u32 = USART_CR3_TCBGTIE_Msk;
pub const USART_CR3_RXFTCFG_Pos: u32 = 25;
pub const USART_CR3_RXFTCFG_Msk: u32 = 0x7 << USART_CR3_RXFTCFG_Pos;
pub const USART_CR3_RXFTCFG: u32 = USART_CR3_RXFTCFG_Msk;
pub const USART_CR3_RXFTCFG_0: u32 = 0x1 << USART_CR3_RXFTCFG_Pos;
pub const USART_CR3_RXFTCFG_1: u32 = 0x2 << USART_CR3_RXFTCFG_Pos;
pub const USART_CR3_RXFTCFG_2: u32 = 0x4 << USART_CR3_RXFTCFG_Pos;
pub const USART_CR3_RXFTIE_Pos: u32 = 28;
pub const USART_CR3_RXFTIE_Msk: u32 = 0x1 << USART_CR3_RXFTIE_Pos;
pub const USART_CR3_RXFTIE: u32 = USART_CR3_RXFTIE_Msk;
pub const USART_CR3_TXFTCFG_Pos: u32 = 29;
pub const USART_CR3_TXFTCFG_Msk: u32 = 0x7 << USART_CR3_TXFTCFG_Pos;
pub const USART_CR3_TXFTCFG: u32 = USART_CR3_TXFTCFG_Msk;
pub const USART_CR3_TXFTCFG_0: u32 = 0x1 << USART_CR3_TXFTCFG_Pos;
pub const USART_CR3_TXFTCFG_1: u32 = 0x2 << USART_CR3_TXFTCFG_Pos;
pub const USART_CR3_TXFTCFG_2: u32 = 0x4 << USART_CR3_TXFTCFG_Pos;
pub const USART_BRR_LPUART: u32 = uint32_t0x000FFFFF;
pub const USART_BRR_BRR: u32 = 0xFFFF;
pub const USART_GTPR_PSC_Pos: u32 = 0;
pub const USART_GTPR_PSC_Msk: u32 = 0xFF << USART_GTPR_PSC_Pos;
pub const USART_GTPR_PSC: u32 = USART_GTPR_PSC_Msk;
pub const USART_GTPR_GT_Pos: u32 = 8;
pub const USART_GTPR_GT_Msk: u32 = 0xFF << USART_GTPR_GT_Pos;
pub const USART_GTPR_GT: u32 = USART_GTPR_GT_Msk;
pub const USART_RTOR_RTO_Pos: u32 = 0;
pub const USART_RTOR_RTO_Msk: u32 = 0xFFFFFF << USART_RTOR_RTO_Pos;
pub const USART_RTOR_RTO: u32 = USART_RTOR_RTO_Msk;
pub const USART_RTOR_BLEN_Pos: u32 = 24;
pub const USART_RTOR_BLEN_Msk: u32 = 0xFF << USART_RTOR_BLEN_Pos;
pub const USART_RTOR_BLEN: u32 = USART_RTOR_BLEN_Msk;
pub const USART_RQR_ABRRQ_Pos: u32 = 0;
pub const USART_RQR_ABRRQ_Msk: u32 = 0x1 << USART_RQR_ABRRQ_Pos;
pub const USART_RQR_ABRRQ: u32 = USART_RQR_ABRRQ_Msk;
pub const USART_RQR_SBKRQ_Pos: u32 = 1;
pub const USART_RQR_SBKRQ_Msk: u32 = 0x1 << USART_RQR_SBKRQ_Pos;
pub const USART_RQR_SBKRQ: u32 = USART_RQR_SBKRQ_Msk;
pub const USART_RQR_MMRQ_Pos: u32 = 2;
pub const USART_RQR_MMRQ_Msk: u32 = 0x1 << USART_RQR_MMRQ_Pos;
pub const USART_RQR_MMRQ: u32 = USART_RQR_MMRQ_Msk;
pub const USART_RQR_RXFRQ_Pos: u32 = 3;
pub const USART_RQR_RXFRQ_Msk: u32 = 0x1 << USART_RQR_RXFRQ_Pos;
pub const USART_RQR_RXFRQ: u32 = USART_RQR_RXFRQ_Msk;
pub const USART_RQR_TXFRQ_Pos: u32 = 4;
pub const USART_RQR_TXFRQ_Msk: u32 = 0x1 << USART_RQR_TXFRQ_Pos;
pub const USART_RQR_TXFRQ: u32 = USART_RQR_TXFRQ_Msk;
pub const USART_ISR_PE_Pos: u32 = 0;
pub const USART_ISR_PE_Msk: u32 = 0x1 << USART_ISR_PE_Pos;
pub const USART_ISR_PE: u32 = USART_ISR_PE_Msk;
pub const USART_ISR_FE_Pos: u32 = 1;
pub const USART_ISR_FE_Msk: u32 = 0x1 << USART_ISR_FE_Pos;
pub const USART_ISR_FE: u32 = USART_ISR_FE_Msk;
pub const USART_ISR_NE_Pos: u32 = 2;
pub const USART_ISR_NE_Msk: u32 = 0x1 << USART_ISR_NE_Pos;
pub const USART_ISR_NE: u32 = USART_ISR_NE_Msk;
pub const USART_ISR_ORE_Pos: u32 = 3;
pub const USART_ISR_ORE_Msk: u32 = 0x1 << USART_ISR_ORE_Pos;
pub const USART_ISR_ORE: u32 = USART_ISR_ORE_Msk;
pub const USART_ISR_IDLE_Pos: u32 = 4;
pub const USART_ISR_IDLE_Msk: u32 = 0x1 << USART_ISR_IDLE_Pos;
pub const USART_ISR_IDLE: u32 = USART_ISR_IDLE_Msk;
pub const USART_ISR_RXNE_Pos: u32 = 5;
pub const USART_ISR_RXNE_Msk: u32 = 0x1 << USART_ISR_RXNE_Pos;
pub const USART_ISR_RXNE: u32 = USART_ISR_RXNE_Msk;
pub const USART_ISR_RXNE_RXFNE_Pos: u32 = USART_ISR_RXNE_Pos;
pub const USART_ISR_RXNE_RXFNE_Msk: u32 = USART_ISR_RXNE_Msk;
pub const USART_ISR_RXNE_RXFNE: u32 = USART_ISR_RXNE_Msk;
pub const USART_ISR_TC_Pos: u32 = 6;
pub const USART_ISR_TC_Msk: u32 = 0x1 << USART_ISR_TC_Pos;
pub const USART_ISR_TC: u32 = USART_ISR_TC_Msk;
pub const USART_ISR_TXE_Pos: u32 = 7;
pub const USART_ISR_TXE_Msk: u32 = 0x1 << USART_ISR_TXE_Pos;
pub const USART_ISR_TXE: u32 = USART_ISR_TXE_Msk;
pub const USART_ISR_TXE_TXFNF_Pos: u32 = USART_ISR_TXE_Pos;
pub const USART_ISR_TXE_TXFNF_Msk: u32 = USART_ISR_TXE_Msk;
pub const USART_ISR_TXE_TXFNF: u32 = USART_ISR_TXE_Msk;
pub const USART_ISR_LBDF_Pos: u32 = 8;
pub const USART_ISR_LBDF_Msk: u32 = 0x1 << USART_ISR_LBDF_Pos;
pub const USART_ISR_LBDF: u32 = USART_ISR_LBDF_Msk;
pub const USART_ISR_CTSIF_Pos: u32 = 9;
pub const USART_ISR_CTSIF_Msk: u32 = 0x1 << USART_ISR_CTSIF_Pos;
pub const USART_ISR_CTSIF: u32 = USART_ISR_CTSIF_Msk;
pub const USART_ISR_CTS_Pos: u32 = 10;
pub const USART_ISR_CTS_Msk: u32 = 0x1 << USART_ISR_CTS_Pos;
pub const USART_ISR_CTS: u32 = USART_ISR_CTS_Msk;
pub const USART_ISR_RTOF_Pos: u32 = 11;
pub const USART_ISR_RTOF_Msk: u32 = 0x1 << USART_ISR_RTOF_Pos;
pub const USART_ISR_RTOF: u32 = USART_ISR_RTOF_Msk;
pub const USART_ISR_EOBF_Pos: u32 = 12;
pub const USART_ISR_EOBF_Msk: u32 = 0x1 << USART_ISR_EOBF_Pos;
pub const USART_ISR_EOBF: u32 = USART_ISR_EOBF_Msk;
pub const USART_ISR_UDR_Pos: u32 = 13;
pub const USART_ISR_UDR_Msk: u32 = 0x1 << USART_ISR_UDR_Pos;
pub const USART_ISR_UDR: u32 = USART_ISR_UDR_Msk;
pub const USART_ISR_ABRE_Pos: u32 = 14;
pub const USART_ISR_ABRE_Msk: u32 = 0x1 << USART_ISR_ABRE_Pos;
pub const USART_ISR_ABRE: u32 = USART_ISR_ABRE_Msk;
pub const USART_ISR_ABRF_Pos: u32 = 15;
pub const USART_ISR_ABRF_Msk: u32 = 0x1 << USART_ISR_ABRF_Pos;
pub const USART_ISR_ABRF: u32 = USART_ISR_ABRF_Msk;
pub const USART_ISR_BUSY_Pos: u32 = 16;
pub const USART_ISR_BUSY_Msk: u32 = 0x1 << USART_ISR_BUSY_Pos;
pub const USART_ISR_BUSY: u32 = USART_ISR_BUSY_Msk;
pub const USART_ISR_CMF_Pos: u32 = 17;
pub const USART_ISR_CMF_Msk: u32 = 0x1 << USART_ISR_CMF_Pos;
pub const USART_ISR_CMF: u32 = USART_ISR_CMF_Msk;
pub const USART_ISR_SBKF_Pos: u32 = 18;
pub const USART_ISR_SBKF_Msk: u32 = 0x1 << USART_ISR_SBKF_Pos;
pub const USART_ISR_SBKF: u32 = USART_ISR_SBKF_Msk;
pub const USART_ISR_RWU_Pos: u32 = 19;
pub const USART_ISR_RWU_Msk: u32 = 0x1 << USART_ISR_RWU_Pos;
pub const USART_ISR_RWU: u32 = USART_ISR_RWU_Msk;
pub const USART_ISR_WUF_Pos: u32 = 20;
pub const USART_ISR_WUF_Msk: u32 = 0x1 << USART_ISR_WUF_Pos;
pub const USART_ISR_WUF: u32 = USART_ISR_WUF_Msk;
pub const USART_ISR_TEACK_Pos: u32 = 21;
pub const USART_ISR_TEACK_Msk: u32 = 0x1 << USART_ISR_TEACK_Pos;
pub const USART_ISR_TEACK: u32 = USART_ISR_TEACK_Msk;
pub const USART_ISR_REACK_Pos: u32 = 22;
pub const USART_ISR_REACK_Msk: u32 = 0x1 << USART_ISR_REACK_Pos;
pub const USART_ISR_REACK: u32 = USART_ISR_REACK_Msk;
pub const USART_ISR_TXFE_Pos: u32 = 23;
pub const USART_ISR_TXFE_Msk: u32 = 0x1 << USART_ISR_TXFE_Pos;
pub const USART_ISR_TXFE: u32 = USART_ISR_TXFE_Msk;
pub const USART_ISR_RXFF_Pos: u32 = 24;
pub const USART_ISR_RXFF_Msk: u32 = 0x1 << USART_ISR_RXFF_Pos;
pub const USART_ISR_RXFF: u32 = USART_ISR_RXFF_Msk;
pub const USART_ISR_TCBGT_Pos: u32 = 25;
pub const USART_ISR_TCBGT_Msk: u32 = 0x1 << USART_ISR_TCBGT_Pos;
pub const USART_ISR_TCBGT: u32 = USART_ISR_TCBGT_Msk;
pub const USART_ISR_RXFT_Pos: u32 = 26;
pub const USART_ISR_RXFT_Msk: u32 = 0x1 << USART_ISR_RXFT_Pos;
pub const USART_ISR_RXFT: u32 = USART_ISR_RXFT_Msk;
pub const USART_ISR_TXFT_Pos: u32 = 27;
pub const USART_ISR_TXFT_Msk: u32 = 0x1 << USART_ISR_TXFT_Pos;
pub const USART_ISR_TXFT: u32 = USART_ISR_TXFT_Msk;
pub const USART_ICR_PECF_Pos: u32 = 0;
pub const USART_ICR_PECF_Msk: u32 = 0x1 << USART_ICR_PECF_Pos;
pub const USART_ICR_PECF: u32 = USART_ICR_PECF_Msk;
pub const USART_ICR_FECF_Pos: u32 = 1;
pub const USART_ICR_FECF_Msk: u32 = 0x1 << USART_ICR_FECF_Pos;
pub const USART_ICR_FECF: u32 = USART_ICR_FECF_Msk;
pub const USART_ICR_NECF_Pos: u32 = 2;
pub const USART_ICR_NECF_Msk: u32 = 0x1 << USART_ICR_NECF_Pos;
pub const USART_ICR_NECF: u32 = USART_ICR_NECF_Msk;
pub const USART_ICR_ORECF_Pos: u32 = 3;
pub const USART_ICR_ORECF_Msk: u32 = 0x1 << USART_ICR_ORECF_Pos;
pub const USART_ICR_ORECF: u32 = USART_ICR_ORECF_Msk;
pub const USART_ICR_IDLECF_Pos: u32 = 4;
pub const USART_ICR_IDLECF_Msk: u32 = 0x1 << USART_ICR_IDLECF_Pos;
pub const USART_ICR_IDLECF: u32 = USART_ICR_IDLECF_Msk;
pub const USART_ICR_TXFECF_Pos: u32 = 5;
pub const USART_ICR_TXFECF_Msk: u32 = 0x1 << USART_ICR_TXFECF_Pos;
pub const USART_ICR_TXFECF: u32 = USART_ICR_TXFECF_Msk;
pub const USART_ICR_TCCF_Pos: u32 = 6;
pub const USART_ICR_TCCF_Msk: u32 = 0x1 << USART_ICR_TCCF_Pos;
pub const USART_ICR_TCCF: u32 = USART_ICR_TCCF_Msk;
pub const USART_ICR_TCBGTCF_Pos: u32 = 7;
pub const USART_ICR_TCBGTCF_Msk: u32 = 0x1 << USART_ICR_TCBGTCF_Pos;
pub const USART_ICR_TCBGTCF: u32 = USART_ICR_TCBGTCF_Msk;
pub const USART_ICR_LBDCF_Pos: u32 = 8;
pub const USART_ICR_LBDCF_Msk: u32 = 0x1 << USART_ICR_LBDCF_Pos;
pub const USART_ICR_LBDCF: u32 = USART_ICR_LBDCF_Msk;
pub const USART_ICR_CTSCF_Pos: u32 = 9;
pub const USART_ICR_CTSCF_Msk: u32 = 0x1 << USART_ICR_CTSCF_Pos;
pub const USART_ICR_CTSCF: u32 = USART_ICR_CTSCF_Msk;
pub const USART_ICR_RTOCF_Pos: u32 = 11;
pub const USART_ICR_RTOCF_Msk: u32 = 0x1 << USART_ICR_RTOCF_Pos;
pub const USART_ICR_RTOCF: u32 = USART_ICR_RTOCF_Msk;
pub const USART_ICR_EOBCF_Pos: u32 = 12;
pub const USART_ICR_EOBCF_Msk: u32 = 0x1 << USART_ICR_EOBCF_Pos;
pub const USART_ICR_EOBCF: u32 = USART_ICR_EOBCF_Msk;
pub const USART_ICR_UDRCF_Pos: u32 = 13;
pub const USART_ICR_UDRCF_Msk: u32 = 0x1 << USART_ICR_UDRCF_Pos;
pub const USART_ICR_UDRCF: u32 = USART_ICR_UDRCF_Msk;
pub const USART_ICR_CMCF_Pos: u32 = 17;
pub const USART_ICR_CMCF_Msk: u32 = 0x1 << USART_ICR_CMCF_Pos;
pub const USART_ICR_CMCF: u32 = USART_ICR_CMCF_Msk;
pub const USART_ICR_WUCF_Pos: u32 = 20;
pub const USART_ICR_WUCF_Msk: u32 = 0x1 << USART_ICR_WUCF_Pos;
pub const USART_ICR_WUCF: u32 = USART_ICR_WUCF_Msk;
pub const USART_RDR_RDR_Pos: u32 = 0;
pub const USART_RDR_RDR_Msk: u32 = 0x01FF << USART_RDR_RDR_Pos;
pub const USART_RDR_RDR: u32 = USART_RDR_RDR_Msk;
pub const USART_TDR_TDR_Pos: u32 = 0;
pub const USART_TDR_TDR_Msk: u32 = 0x01FF << USART_TDR_TDR_Pos;
pub const USART_TDR_TDR: u32 = USART_TDR_TDR_Msk;
pub const USART_PRESC_PRESCALER_Pos: u32 = 0;
pub const USART_PRESC_PRESCALER_Msk: u32 = 0xF << USART_PRESC_PRESCALER_Pos;
pub const USART_PRESC_PRESCALER: u32 = USART_PRESC_PRESCALER_Msk;
pub const USART_PRESC_PRESCALER_0: u32 = 0x1 << USART_PRESC_PRESCALER_Pos;
pub const USART_PRESC_PRESCALER_1: u32 = 0x2 << USART_PRESC_PRESCALER_Pos;
pub const USART_PRESC_PRESCALER_2: u32 = 0x4 << USART_PRESC_PRESCALER_Pos;
pub const USART_PRESC_PRESCALER_3: u32 = 0x8 << USART_PRESC_PRESCALER_Pos;
pub const WWDG_CR_T_Pos: u32 = 0;
pub const WWDG_CR_T_Msk: u32 = 0x7F << WWDG_CR_T_Pos;
pub const WWDG_CR_T: u32 = WWDG_CR_T_Msk;
pub const WWDG_CR_T_0: u32 = 0x01 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_1: u32 = 0x02 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_2: u32 = 0x04 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_3: u32 = 0x08 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_4: u32 = 0x10 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_5: u32 = 0x20 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_6: u32 = 0x40 << WWDG_CR_T_Pos;
pub const WWDG_CR_WDGA_Pos: u32 = 7;
pub const WWDG_CR_WDGA_Msk: u32 = 0x1 << WWDG_CR_WDGA_Pos;
pub const WWDG_CR_WDGA: u32 = WWDG_CR_WDGA_Msk;
pub const WWDG_CFR_W_Pos: u32 = 0;
pub const WWDG_CFR_W_Msk: u32 = 0x7F << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W: u32 = WWDG_CFR_W_Msk;
pub const WWDG_CFR_W_0: u32 = 0x01 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_1: u32 = 0x02 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_2: u32 = 0x04 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_3: u32 = 0x08 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_4: u32 = 0x10 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_5: u32 = 0x20 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_6: u32 = 0x40 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_WDGTB_Pos: u32 = 11;
pub const WWDG_CFR_WDGTB_Msk: u32 = 0x7 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_WDGTB: u32 = WWDG_CFR_WDGTB_Msk;
pub const WWDG_CFR_WDGTB_0: u32 = 0x1 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_WDGTB_1: u32 = 0x2 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_WDGTB_2: u32 = 0x4 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_EWI_Pos: u32 = 9;
pub const WWDG_CFR_EWI_Msk: u32 = 0x1 << WWDG_CFR_EWI_Pos;
pub const WWDG_CFR_EWI: u32 = WWDG_CFR_EWI_Msk;
pub const WWDG_SR_EWIF_Pos: u32 = 0;
pub const WWDG_SR_EWIF_Msk: u32 = 0x1 << WWDG_SR_EWIF_Pos;
pub const WWDG_SR_EWIF: u32 = WWDG_SR_EWIF_Msk;
