#![no_std]
#![allow(non_camel_case_types, non_snake_case, non_upper_case_globals)]
#[repr(i32)]
pub enum IRQn_Type {
    NonMaskableInt_IRQn = -14,
    HardFault_IRQn = -13,
    MemoryManagement_IRQn = -12,
    BusFault_IRQn = -11,
    UsageFault_IRQn = -10,
    SVCall_IRQn = -5,
    DebugMonitor_IRQn = -4,
    PendSV_IRQn = -2,
    SysTick_IRQn = -1,
    WWDG_IRQn = 0,
    PVD_PVM_IRQn = 1,
    TAMP_STAMP_LSECSS_SSRU_IRQn = 2,
    RTC_WKUP_IRQn = 3,
    FLASH_IRQn = 4,
    RCC_IRQn = 5,
    EXTI0_IRQn = 6,
    EXTI1_IRQn = 7,
    EXTI2_IRQn = 8,
    EXTI3_IRQn = 9,
    EXTI4_IRQn = 10,
    DMA1_Channel1_IRQn = 11,
    DMA1_Channel2_IRQn = 12,
    DMA1_Channel3_IRQn = 13,
    DMA1_Channel4_IRQn = 14,
    DMA1_Channel5_IRQn = 15,
    DMA1_Channel6_IRQn = 16,
    DMA1_Channel7_IRQn = 17,
    ADC_IRQn = 18,
    DAC_IRQn = 19,
    COMP_IRQn = 21,
    EXTI9_5_IRQn = 22,
    TIM1_BRK_IRQn = 23,
    TIM1_UP_IRQn = 24,
    TIM1_TRG_COM_IRQn = 25,
    TIM1_CC_IRQn = 26,
    TIM2_IRQn = 27,
    TIM16_IRQn = 28,
    TIM17_IRQn = 29,
    I2C1_EV_IRQn = 30,
    I2C1_ER_IRQn = 31,
    I2C2_EV_IRQn = 32,
    I2C2_ER_IRQn = 33,
    SPI1_IRQn = 34,
    SPI2_IRQn = 35,
    USART1_IRQn = 36,
    USART2_IRQn = 37,
    LPUART1_IRQn = 38,
    LPTIM1_IRQn = 39,
    LPTIM2_IRQn = 40,
    EXTI15_10_IRQn = 41,
    RTC_Alarm_IRQn = 42,
    LPTIM3_IRQn = 43,
    SUBGHZSPI_IRQn = 44,
    HSEM_IRQn = 47,
    I2C3_EV_IRQn = 48,
    I2C3_ER_IRQn = 49,
    SUBGHZ_Radio_IRQn = 50,
    AES_IRQn = 51,
    RNG_IRQn = 52,
    PKA_IRQn = 53,
    DMA2_Channel1_IRQn = 54,
    DMA2_Channel2_IRQn = 55,
    DMA2_Channel3_IRQn = 56,
    DMA2_Channel4_IRQn = 57,
    DMA2_Channel5_IRQn = 58,
    DMA2_Channel6_IRQn = 59,
    DMA2_Channel7_IRQn = 60,
    DMAMUX1_OVR_IRQn = 61,
}
#[repr(C)]
pub struct ADC_TypeDef {
    pub ISR: u32,
    pub IER: u32,
    pub CR: u32,
    pub CFGR1: u32,
    pub CFGR2: u32,
    pub SMPR: u32,
    pub RESERVED1: u32,
    pub RESERVED2: u32,
    pub AWD1TR: u32,
    pub AWD2TR: u32,
    pub CHSELR: u32,
    pub AWD3TR: u32,
    pub RESERVED3: [u32; 4],
    pub DR: u32,
    pub RESERVED4: [u32; 23],
    pub AWD2CR: u32,
    pub AWD3CR: u32,
    pub RESERVED5: [u32; 3],
    pub CALFACT: u32,
}
#[repr(C)]
pub struct ADC_Common_TypeDef {
    pub CCR: u32,
}
#[repr(C)]
pub struct AES_TypeDef {
    pub CR: u32,
    pub SR: u32,
    pub DINR: u32,
    pub DOUTR: u32,
    pub KEYR0: u32,
    pub KEYR1: u32,
    pub KEYR2: u32,
    pub KEYR3: u32,
    pub IVR0: u32,
    pub IVR1: u32,
    pub IVR2: u32,
    pub IVR3: u32,
    pub KEYR4: u32,
    pub KEYR5: u32,
    pub KEYR6: u32,
    pub KEYR7: u32,
    pub SUSP0R: u32,
    pub SUSP1R: u32,
    pub SUSP2R: u32,
    pub SUSP3R: u32,
    pub SUSP4R: u32,
    pub SUSP5R: u32,
    pub SUSP6R: u32,
    pub SUSP7R: u32,
}
#[repr(C)]
pub struct COMP_TypeDef {
    pub CSR: u32,
}
#[repr(C)]
pub struct COMP_Common_TypeDef {
    pub CSR: u32,
}
#[repr(C)]
pub struct CRC_TypeDef {
    pub DR: u32,
    pub IDR: u32,
    pub CR: u32,
    pub RESERVED2: u32,
    pub INIT: u32,
    pub POL: u32,
}
#[repr(C)]
pub struct DAC_TypeDef {
    pub CR: u32,
    pub SWTRIGR: u32,
    pub DHR12R1: u32,
    pub DHR12L1: u32,
    pub DHR8R1: u32,
    pub RESERVED1: u32,
    pub RESERVED2: u32,
    pub RESERVED3: u32,
    pub DHR12RD: u32,
    pub DHR12LD: u32,
    pub DHR8RD: u32,
    pub DOR1: u32,
    pub RESERVED4: u32,
    pub SR: u32,
    pub CCR: u32,
    pub MCR: u32,
    pub SHSR1: u32,
    pub RESERVED5: u32,
    pub SHHR: u32,
    pub SHRR: u32,
}
#[repr(C)]
pub struct DBGMCU_TypeDef {
    pub IDCODE: u32,
    pub CR: u32,
    pub RESERVED1: [u32; 13],
    pub APB1FZR1: u32,
    pub RESERVED2: u32,
    pub APB1FZR2: u32,
    pub RESERVED3: u32,
    pub APB2FZR: u32,
}
#[repr(C)]
pub struct DMA_Channel_TypeDef {
    pub CCR: u32,
    pub CNDTR: u32,
    pub CPAR: u32,
    pub CMAR: u32,
}
#[repr(C)]
pub struct DMA_TypeDef {
    pub ISR: u32,
    pub IFCR: u32,
}
#[repr(C)]
pub struct DMAMUX_Channel_TypeDef {
    pub CCR: u32,
}
#[repr(C)]
pub struct DMAMUX_ChannelStatus_TypeDef {
    pub CSR: u32,
    pub CFR: u32,
}
#[repr(C)]
pub struct DMAMUX_RequestGen_TypeDef {
    pub RGCR: u32,
}
#[repr(C)]
pub struct DMAMUX_RequestGenStatus_TypeDef {
    pub RGSR: u32,
    pub RGCFR: u32,
}
#[repr(C)]
pub struct EXTI_TypeDef {
    pub RTSR1: u32,
    pub FTSR1: u32,
    pub SWIER1: u32,
    pub PR1: u32,
    pub RESERVED1: [u32; 4],
    pub RTSR2: u32,
    pub FTSR2: u32,
    pub SWIER2: u32,
    pub PR2: u32,
    pub RESERVED2: [u32; 4],
    pub RESERVED3: [u32; 8],
    pub RESERVED4: [u32; 8],
    pub IMR1: u32,
    pub EMR1: u32,
    pub RESERVED5: [u32; 2],
    pub IMR2: u32,
    pub EMR2: u32,
}
#[repr(C)]
pub struct FLASH_TypeDef {
    pub ACR: u32,
    pub RESERVED0: u32,
    pub KEYR: u32,
    pub OPTKEYR: u32,
    pub SR: u32,
    pub CR: u32,
    pub ECCR: u32,
    pub RESERVED1: u32,
    pub OPTR: u32,
    pub PCROP1ASR: u32,
    pub PCROP1AER: u32,
    pub WRP1AR: u32,
    pub WRP1BR: u32,
    pub PCROP1BSR: u32,
    pub PCROP1BER: u32,
}
#[repr(C)]
pub struct GPIO_TypeDef {
    pub MODER: u32,
    pub OTYPER: u32,
    pub OSPEEDR: u32,
    pub PUPDR: u32,
    pub IDR: u32,
    pub ODR: u32,
    pub BSRR: u32,
    pub LCKR: u32,
    pub AFR: [u32; 2],
    pub BRR: u32,
}
#[repr(C)]
pub struct HSEM_TypeDef {
    pub R: [u32; 16],
    pub Reserved1: [u32; 16],
    pub RLR: [u32; 16],
    pub Reserved2: [u32; 16],
    pub C1IER: u32,
    pub C1ICR: u32,
    pub C1ISR: u32,
    pub C1MISR: u32,
    pub Reserved: [u32; 12],
    pub CR: u32,
    pub KEYR: u32,
}
#[repr(C)]
pub struct HSEM_Common_TypeDef {
    pub IER: u32,
    pub ICR: u32,
    pub ISR: u32,
    pub MISR: u32,
}
#[repr(C)]
pub struct I2C_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub OAR1: u32,
    pub OAR2: u32,
    pub TIMINGR: u32,
    pub TIMEOUTR: u32,
    pub ISR: u32,
    pub ICR: u32,
    pub PECR: u32,
    pub RXDR: u32,
    pub TXDR: u32,
}
#[repr(C)]
pub struct IWDG_TypeDef {
    pub KR: u32,
    pub PR: u32,
    pub RLR: u32,
    pub SR: u32,
    pub WINR: u32,
}
#[repr(C)]
pub struct LPTIM_TypeDef {
    pub ISR: u32,
    pub ICR: u32,
    pub IER: u32,
    pub CFGR: u32,
    pub CR: u32,
    pub CMP: u32,
    pub ARR: u32,
    pub CNT: u32,
    pub OR: u32,
    pub RESERVED: u32,
    pub RCR: u32,
}
#[repr(C)]
pub struct PKA_TypeDef {
    pub CR: u32,
    pub SR: u32,
    pub CLRFR: u32,
    pub Reserved1: [u32; 253],
    pub RAM: [u32; 894],
}
#[repr(C)]
pub struct PWR_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub CR3: u32,
    pub CR4: u32,
    pub SR1: u32,
    pub SR2: u32,
    pub SCR: u32,
    pub CR5: u32,
    pub PUCRA: u32,
    pub PDCRA: u32,
    pub PUCRB: u32,
    pub PDCRB: u32,
    pub PUCRC: u32,
    pub PDCRC: u32,
    pub RESERVED0: [u32; 8],
    pub PUCRH: u32,
    pub PDCRH: u32,
    pub RESERVED1: [u32; 10],
    pub EXTSCR: u32,
    pub RESERVED2: u32,
    pub SUBGHZSPICR: u32,
}
#[repr(C)]
pub struct RCC_TypeDef {
    pub CR: u32,
    pub ICSCR: u32,
    pub CFGR: u32,
    pub PLLCFGR: u32,
    pub RESERVED0: u32,
    pub RESERVED1: u32,
    pub CIER: u32,
    pub CIFR: u32,
    pub CICR: u32,
    pub RESERVED2: u32,
    pub AHB1RSTR: u32,
    pub AHB2RSTR: u32,
    pub AHB3RSTR: u32,
    pub RESERVED3: u32,
    pub APB1RSTR1: u32,
    pub APB1RSTR2: u32,
    pub APB2RSTR: u32,
    pub APB3RSTR: u32,
    pub AHB1ENR: u32,
    pub AHB2ENR: u32,
    pub AHB3ENR: u32,
    pub RESERVED4: u32,
    pub APB1ENR1: u32,
    pub APB1ENR2: u32,
    pub APB2ENR: u32,
    pub APB3ENR: u32,
    pub AHB1SMENR: u32,
    pub AHB2SMENR: u32,
    pub AHB3SMENR: u32,
    pub RESERVED5: u32,
    pub APB1SMENR1: u32,
    pub APB1SMENR2: u32,
    pub APB2SMENR: u32,
    pub APB3SMENR: u32,
    pub CCIPR: u32,
    pub RESERVED6: u32,
    pub BDCR: u32,
    pub CSR: u32,
    pub RESERVED7: [u32; 28],
    pub EXTCFGR: u32,
}
#[repr(C)]
pub struct RNG_TypeDef {
    pub CR: u32,
    pub SR: u32,
    pub DR: u32,
    pub RESERVED0: u32,
    pub HTCR: u32,
}
#[repr(C)]
pub struct RTC_TypeDef {
    pub TR: u32,
    pub DR: u32,
    pub SSR: u32,
    pub ICSR: u32,
    pub PRER: u32,
    pub WUTR: u32,
    pub CR: u32,
    pub RESERVED0: u32,
    pub RESERVED1: u32,
    pub WPR: u32,
    pub CALR: u32,
    pub SHIFTR: u32,
    pub TSTR: u32,
    pub TSDR: u32,
    pub TSSSR: u32,
    pub RESERVED2: u32,
    pub ALRMAR: u32,
    pub ALRMASSR: u32,
    pub ALRMBR: u32,
    pub ALRMBSSR: u32,
    pub SR: u32,
    pub MISR: u32,
    pub RESERVED3: u32,
    pub SCR: u32,
    pub RESERVED4: [u32; 4],
    pub ALRABINR: u32,
    pub ALRBBINR: u32,
}
#[repr(C)]
pub struct SPI_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub SR: u32,
    pub DR: u32,
    pub CRCPR: u32,
    pub RXCRCR: u32,
    pub TXCRCR: u32,
    pub I2SCFGR: u32,
    pub I2SPR: u32,
}
#[repr(C)]
pub struct SYSCFG_TypeDef {
    pub MEMRMP: u32,
    pub CFGR1: u32,
    pub EXTICR: [u32; 4],
    pub SCSR: u32,
    pub CFGR2: u32,
    pub SWPR: u32,
    pub SKR: u32,
    pub RESERVED1: [u32; 120],
    pub RFDCR: u32,
}
#[repr(C)]
pub struct TAMP_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub CR3: u32,
    pub FLTCR: u32,
    pub RESERVED0: [u32; 7],
    pub IER: u32,
    pub SR: u32,
    pub MISR: u32,
    pub RESERVED1: u32,
    pub SCR: u32,
    pub COUNTR: u32,
    pub RESERVED2: [u32; 47],
    pub BKP0R: u32,
    pub BKP1R: u32,
    pub BKP2R: u32,
    pub BKP3R: u32,
    pub BKP4R: u32,
    pub BKP5R: u32,
    pub BKP6R: u32,
    pub BKP7R: u32,
    pub BKP8R: u32,
    pub BKP9R: u32,
    pub BKP10R: u32,
    pub BKP11R: u32,
    pub BKP12R: u32,
    pub BKP13R: u32,
    pub BKP14R: u32,
    pub BKP15R: u32,
    pub BKP16R: u32,
    pub BKP17R: u32,
    pub BKP18R: u32,
    pub BKP19R: u32,
}
#[repr(C)]
pub struct TIM_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub SMCR: u32,
    pub DIER: u32,
    pub SR: u32,
    pub EGR: u32,
    pub CCMR1: u32,
    pub CCMR2: u32,
    pub CCER: u32,
    pub CNT: u32,
    pub PSC: u32,
    pub ARR: u32,
    pub RCR: u32,
    pub CCR1: u32,
    pub CCR2: u32,
    pub CCR3: u32,
    pub CCR4: u32,
    pub BDTR: u32,
    pub DCR: u32,
    pub DMAR: u32,
    pub OR1: u32,
    pub CCMR3: u32,
    pub CCR5: u32,
    pub CCR6: u32,
    pub AF1: u32,
    pub AF2: u32,
}
#[repr(C)]
pub struct USART_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub CR3: u32,
    pub BRR: u32,
    pub GTPR: u32,
    pub RTOR: u32,
    pub RQR: u32,
    pub ISR: u32,
    pub ICR: u32,
    pub RDR: u32,
    pub TDR: u32,
    pub PRESC: u32,
}
#[repr(C)]
pub struct VREFBUF_TypeDef {
    pub CSR: u32,
    pub CCR: u32,
}
#[repr(C)]
pub struct WWDG_TypeDef {
    pub CR: u32,
    pub CFR: u32,
    pub SR: u32,
}
pub const __CM4_REV: u32 = 1;
pub const __MPU_PRESENT: u32 = 1;
pub const __VTOR_PRESENT: u32 = 1;
pub const __NVIC_PRIO_BITS: u32 = 4;
pub const __Vendor_SysTickConfig: u32 = 0;
pub const __FPU_PRESENT: u32 = 0;
pub const TR1: u32 = AWD1TR;
pub const TR2: u32 = AWD2TR;
pub const TR3: u32 = AWD3TR;
pub const RTC_BACKUP_NB: u32 = 20u;
pub const RTC_TAMP_NB: u32 = 3u;
pub const FLASH_BASE: u32 = 0x08000000;
pub const SYSTEM_FLASH_BASE: u32 = 0x1FFF0000;
pub const SRAM1_BASE: u32 = 0x20000000;
pub const SRAM2_BASE: u32 = 0x20008000;
pub const PERIPH_BASE: u32 = 0x40000000;
pub const SRAM1_SIZE: u32 = 0x00008000;
pub const SRAM2_SIZE: u32 = 0x00008000;
pub const OTP_AREA_BASE: u32 = SYSTEM_FLASH_BASE + 0x00007000;
pub const ENGI_BYTES_BASE: u32 = SYSTEM_FLASH_BASE + 0x00007400;
pub const OPTION_BYTES_BASE: u32 = SYSTEM_FLASH_BASE + 0x00007800;
pub const PACKAGE_BASE: u32 = ENGI_BYTES_BASE + 0x00000100;
pub const UID64_BASE: u32 = ENGI_BYTES_BASE + 0x00000180;
pub const UID_BASE: u32 = ENGI_BYTES_BASE + 0x00000190;
pub const FLASHSIZE_BASE: u32 = ENGI_BYTES_BASE + 0x000001E0;
pub const SYSTEM_MEMORY_END_ADDR: u32 = 0x1FFF6FFF;
pub const OTP_AREA_END_ADDR: u32 = 0x1FFF73FF;
pub const ENGI_BYTE_END_ADDR: u32 = 0x1FFF77FF;
pub const OPTION_BYTE_END_ADDR: u32 = 0x1FFF7FFF;
pub const APB1PERIPH_BASE: u32 = PERIPH_BASE;
pub const APB2PERIPH_BASE: u32 = PERIPH_BASE + 0x00010000;
pub const AHB1PERIPH_BASE: u32 = PERIPH_BASE + 0x00020000;
pub const AHB2PERIPH_BASE: u32 = PERIPH_BASE + 0x08000000;
pub const AHB3PERIPH_BASE: u32 = PERIPH_BASE + 0x18000000;
pub const APB3PERIPH_BASE: u32 = PERIPH_BASE + 0x18010000;
pub const TIM2_BASE: u32 = APB1PERIPH_BASE + 0x00000000;
pub const RTC_BASE: u32 = APB1PERIPH_BASE + 0x00002800;
pub const WWDG_BASE: u32 = APB1PERIPH_BASE + 0x00002C00;
pub const IWDG_BASE: u32 = APB1PERIPH_BASE + 0x00003000;
pub const SPI2_BASE: u32 = APB1PERIPH_BASE + 0x00003800;
pub const USART2_BASE: u32 = APB1PERIPH_BASE + 0x00004400;
pub const I2C1_BASE: u32 = APB1PERIPH_BASE + 0x00005400;
pub const I2C2_BASE: u32 = APB1PERIPH_BASE + 0x00005800;
pub const I2C3_BASE: u32 = APB1PERIPH_BASE + 0x00005C00;
pub const DAC_BASE: u32 = APB1PERIPH_BASE + 0x00007400;
pub const LPTIM1_BASE: u32 = APB1PERIPH_BASE + 0x00007C00;
pub const LPUART1_BASE: u32 = APB1PERIPH_BASE + 0x00008000;
pub const LPTIM2_BASE: u32 = APB1PERIPH_BASE + 0x00009400;
pub const LPTIM3_BASE: u32 = APB1PERIPH_BASE + 0x00009800;
pub const TAMP_BASE: u32 = APB1PERIPH_BASE + 0x0000B000;
pub const SYSCFG_BASE: u32 = APB2PERIPH_BASE + 0x00000000;
pub const VREFBUF_BASE: u32 = APB2PERIPH_BASE + 0x00000030;
pub const COMP1_BASE: u32 = APB2PERIPH_BASE + 0x00000200;
pub const COMP2_BASE: u32 = APB2PERIPH_BASE + 0x00000204;
pub const ADC_BASE: u32 = APB2PERIPH_BASE + 0x00002400;
pub const ADC_COMMON_BASE: u32 = APB2PERIPH_BASE + 0x00002708;
pub const TIM1_BASE: u32 = APB2PERIPH_BASE + 0x00002C00;
pub const SPI1_BASE: u32 = APB2PERIPH_BASE + 0x00003000;
pub const USART1_BASE: u32 = APB2PERIPH_BASE + 0x00003800;
pub const TIM16_BASE: u32 = APB2PERIPH_BASE + 0x00004400;
pub const TIM17_BASE: u32 = APB2PERIPH_BASE + 0x00004800;
pub const DMA1_BASE: u32 = AHB1PERIPH_BASE + 0x00000000;
pub const DMA2_BASE: u32 = AHB1PERIPH_BASE + 0x00000400;
pub const DMAMUX1_BASE: u32 = AHB1PERIPH_BASE + 0x00000800;
pub const CRC_BASE: u32 = AHB1PERIPH_BASE + 0x00003000;
pub const DMA1_Channel1_BASE: u32 = DMA1_BASE + 0x00000008;
pub const DMA1_Channel2_BASE: u32 = DMA1_BASE + 0x0000001C;
pub const DMA1_Channel3_BASE: u32 = DMA1_BASE + 0x00000030;
pub const DMA1_Channel4_BASE: u32 = DMA1_BASE + 0x00000044;
pub const DMA1_Channel5_BASE: u32 = DMA1_BASE + 0x00000058;
pub const DMA1_Channel6_BASE: u32 = DMA1_BASE + 0x0000006C;
pub const DMA1_Channel7_BASE: u32 = DMA1_BASE + 0x00000080;
pub const DMA2_Channel1_BASE: u32 = DMA2_BASE + 0x00000008;
pub const DMA2_Channel2_BASE: u32 = DMA2_BASE + 0x0000001C;
pub const DMA2_Channel3_BASE: u32 = DMA2_BASE + 0x00000030;
pub const DMA2_Channel4_BASE: u32 = DMA2_BASE + 0x00000044;
pub const DMA2_Channel5_BASE: u32 = DMA2_BASE + 0x00000058;
pub const DMA2_Channel6_BASE: u32 = DMA2_BASE + 0x0000006C;
pub const DMA2_Channel7_BASE: u32 = DMA2_BASE + 0x00000080;
pub const DMAMUX1_Channel0_BASE: u32 = DMAMUX1_BASE;
pub const DMAMUX1_Channel1_BASE: u32 = DMAMUX1_BASE + 0x00000004;
pub const DMAMUX1_Channel2_BASE: u32 = DMAMUX1_BASE + 0x00000008;
pub const DMAMUX1_Channel3_BASE: u32 = DMAMUX1_BASE + 0x0000000C;
pub const DMAMUX1_Channel4_BASE: u32 = DMAMUX1_BASE + 0x00000010;
pub const DMAMUX1_Channel5_BASE: u32 = DMAMUX1_BASE + 0x00000014;
pub const DMAMUX1_Channel6_BASE: u32 = DMAMUX1_BASE + 0x00000018;
pub const DMAMUX1_Channel7_BASE: u32 = DMAMUX1_BASE + 0x0000001C;
pub const DMAMUX1_Channel8_BASE: u32 = DMAMUX1_BASE + 0x00000020;
pub const DMAMUX1_Channel9_BASE: u32 = DMAMUX1_BASE + 0x00000024;
pub const DMAMUX1_Channel10_BASE: u32 = DMAMUX1_BASE + 0x00000028;
pub const DMAMUX1_Channel11_BASE: u32 = DMAMUX1_BASE + 0x0000002C;
pub const DMAMUX1_Channel12_BASE: u32 = DMAMUX1_BASE + 0x00000030;
pub const DMAMUX1_Channel13_BASE: u32 = DMAMUX1_BASE + 0x00000034;
pub const DMAMUX1_RequestGenerator0_BASE: u32 = DMAMUX1_BASE + 0x00000100;
pub const DMAMUX1_RequestGenerator1_BASE: u32 = DMAMUX1_BASE + 0x00000104;
pub const DMAMUX1_RequestGenerator2_BASE: u32 = DMAMUX1_BASE + 0x00000108;
pub const DMAMUX1_RequestGenerator3_BASE: u32 = DMAMUX1_BASE + 0x0000010C;
pub const DMAMUX1_ChannelStatus_BASE: u32 = DMAMUX1_BASE + 0x00000080;
pub const DMAMUX1_RequestGenStatus_BASE: u32 = DMAMUX1_BASE + 0x00000140;
pub const IOPORT_BASE: u32 = AHB2PERIPH_BASE + 0x00000000;
pub const GPIOA_BASE: u32 = IOPORT_BASE + 0x00000000;
pub const GPIOB_BASE: u32 = IOPORT_BASE + 0x00000400;
pub const GPIOC_BASE: u32 = IOPORT_BASE + 0x00000800;
pub const GPIOH_BASE: u32 = IOPORT_BASE + 0x00001C00;
pub const PWR_BASE: u32 = AHB3PERIPH_BASE + 0x00000400;
pub const EXTI_BASE: u32 = AHB3PERIPH_BASE + 0x00000800;
pub const RCC_BASE: u32 = AHB3PERIPH_BASE + 0x00000000;
pub const RNG_BASE: u32 = AHB3PERIPH_BASE + 0x00001000;
pub const HSEM_BASE: u32 = AHB3PERIPH_BASE + 0x00001400;
pub const AES_BASE: u32 = AHB3PERIPH_BASE + 0x00001800;
pub const PKA_BASE: u32 = AHB3PERIPH_BASE + 0x00002000;
pub const FLASH_REG_BASE: u32 = AHB3PERIPH_BASE + 0x00004000;
pub const SUBGHZSPI_BASE: u32 = APB3PERIPH_BASE + 0x00000000;
pub const DBGMCU_BASE: u32 = 0xE0042000;
pub const LSI_STARTUP_TIME: u32 = 130;
pub const ADC_ISR_ADRDY_Pos: u32 = 0;
pub const ADC_ISR_ADRDY_Msk: u32 = 0x1 << ADC_ISR_ADRDY_Pos;
pub const ADC_ISR_ADRDY: u32 = ADC_ISR_ADRDY_Msk;
pub const ADC_ISR_EOSMP_Pos: u32 = 1;
pub const ADC_ISR_EOSMP_Msk: u32 = 0x1 << ADC_ISR_EOSMP_Pos;
pub const ADC_ISR_EOSMP: u32 = ADC_ISR_EOSMP_Msk;
pub const ADC_ISR_EOC_Pos: u32 = 2;
pub const ADC_ISR_EOC_Msk: u32 = 0x1 << ADC_ISR_EOC_Pos;
pub const ADC_ISR_EOC: u32 = ADC_ISR_EOC_Msk;
pub const ADC_ISR_EOS_Pos: u32 = 3;
pub const ADC_ISR_EOS_Msk: u32 = 0x1 << ADC_ISR_EOS_Pos;
pub const ADC_ISR_EOS: u32 = ADC_ISR_EOS_Msk;
pub const ADC_ISR_OVR_Pos: u32 = 4;
pub const ADC_ISR_OVR_Msk: u32 = 0x1 << ADC_ISR_OVR_Pos;
pub const ADC_ISR_OVR: u32 = ADC_ISR_OVR_Msk;
pub const ADC_ISR_AWD1_Pos: u32 = 7;
pub const ADC_ISR_AWD1_Msk: u32 = 0x1 << ADC_ISR_AWD1_Pos;
pub const ADC_ISR_AWD1: u32 = ADC_ISR_AWD1_Msk;
pub const ADC_ISR_AWD2_Pos: u32 = 8;
pub const ADC_ISR_AWD2_Msk: u32 = 0x1 << ADC_ISR_AWD2_Pos;
pub const ADC_ISR_AWD2: u32 = ADC_ISR_AWD2_Msk;
pub const ADC_ISR_AWD3_Pos: u32 = 9;
pub const ADC_ISR_AWD3_Msk: u32 = 0x1 << ADC_ISR_AWD3_Pos;
pub const ADC_ISR_AWD3: u32 = ADC_ISR_AWD3_Msk;
pub const ADC_ISR_EOCAL_Pos: u32 = 11;
pub const ADC_ISR_EOCAL_Msk: u32 = 0x1 << ADC_ISR_EOCAL_Pos;
pub const ADC_ISR_EOCAL: u32 = ADC_ISR_EOCAL_Msk;
pub const ADC_ISR_CCRDY_Pos: u32 = 13;
pub const ADC_ISR_CCRDY_Msk: u32 = 0x1 << ADC_ISR_CCRDY_Pos;
pub const ADC_ISR_CCRDY: u32 = ADC_ISR_CCRDY_Msk;
pub const ADC_IER_ADRDYIE_Pos: u32 = 0;
pub const ADC_IER_ADRDYIE_Msk: u32 = 0x1 << ADC_IER_ADRDYIE_Pos;
pub const ADC_IER_ADRDYIE: u32 = ADC_IER_ADRDYIE_Msk;
pub const ADC_IER_EOSMPIE_Pos: u32 = 1;
pub const ADC_IER_EOSMPIE_Msk: u32 = 0x1 << ADC_IER_EOSMPIE_Pos;
pub const ADC_IER_EOSMPIE: u32 = ADC_IER_EOSMPIE_Msk;
pub const ADC_IER_EOCIE_Pos: u32 = 2;
pub const ADC_IER_EOCIE_Msk: u32 = 0x1 << ADC_IER_EOCIE_Pos;
pub const ADC_IER_EOCIE: u32 = ADC_IER_EOCIE_Msk;
pub const ADC_IER_EOSIE_Pos: u32 = 3;
pub const ADC_IER_EOSIE_Msk: u32 = 0x1 << ADC_IER_EOSIE_Pos;
pub const ADC_IER_EOSIE: u32 = ADC_IER_EOSIE_Msk;
pub const ADC_IER_OVRIE_Pos: u32 = 4;
pub const ADC_IER_OVRIE_Msk: u32 = 0x1 << ADC_IER_OVRIE_Pos;
pub const ADC_IER_OVRIE: u32 = ADC_IER_OVRIE_Msk;
pub const ADC_IER_AWD1IE_Pos: u32 = 7;
pub const ADC_IER_AWD1IE_Msk: u32 = 0x1 << ADC_IER_AWD1IE_Pos;
pub const ADC_IER_AWD1IE: u32 = ADC_IER_AWD1IE_Msk;
pub const ADC_IER_AWD2IE_Pos: u32 = 8;
pub const ADC_IER_AWD2IE_Msk: u32 = 0x1 << ADC_IER_AWD2IE_Pos;
pub const ADC_IER_AWD2IE: u32 = ADC_IER_AWD2IE_Msk;
pub const ADC_IER_AWD3IE_Pos: u32 = 9;
pub const ADC_IER_AWD3IE_Msk: u32 = 0x1 << ADC_IER_AWD3IE_Pos;
pub const ADC_IER_AWD3IE: u32 = ADC_IER_AWD3IE_Msk;
pub const ADC_IER_EOCALIE_Pos: u32 = 11;
pub const ADC_IER_EOCALIE_Msk: u32 = 0x1 << ADC_IER_EOCALIE_Pos;
pub const ADC_IER_EOCALIE: u32 = ADC_IER_EOCALIE_Msk;
pub const ADC_IER_CCRDYIE_Pos: u32 = 13;
pub const ADC_IER_CCRDYIE_Msk: u32 = 0x1 << ADC_IER_CCRDYIE_Pos;
pub const ADC_IER_CCRDYIE: u32 = ADC_IER_CCRDYIE_Msk;
pub const ADC_CR_ADEN_Pos: u32 = 0;
pub const ADC_CR_ADEN_Msk: u32 = 0x1 << ADC_CR_ADEN_Pos;
pub const ADC_CR_ADEN: u32 = ADC_CR_ADEN_Msk;
pub const ADC_CR_ADDIS_Pos: u32 = 1;
pub const ADC_CR_ADDIS_Msk: u32 = 0x1 << ADC_CR_ADDIS_Pos;
pub const ADC_CR_ADDIS: u32 = ADC_CR_ADDIS_Msk;
pub const ADC_CR_ADSTART_Pos: u32 = 2;
pub const ADC_CR_ADSTART_Msk: u32 = 0x1 << ADC_CR_ADSTART_Pos;
pub const ADC_CR_ADSTART: u32 = ADC_CR_ADSTART_Msk;
pub const ADC_CR_ADSTP_Pos: u32 = 4;
pub const ADC_CR_ADSTP_Msk: u32 = 0x1 << ADC_CR_ADSTP_Pos;
pub const ADC_CR_ADSTP: u32 = ADC_CR_ADSTP_Msk;
pub const ADC_CR_ADVREGEN_Pos: u32 = 28;
pub const ADC_CR_ADVREGEN_Msk: u32 = 0x1 << ADC_CR_ADVREGEN_Pos;
pub const ADC_CR_ADVREGEN: u32 = ADC_CR_ADVREGEN_Msk;
pub const ADC_CR_ADCAL_Pos: u32 = 31;
pub const ADC_CR_ADCAL_Msk: u32 = 0x1 << ADC_CR_ADCAL_Pos;
pub const ADC_CR_ADCAL: u32 = ADC_CR_ADCAL_Msk;
pub const ADC_CFGR1_DMAEN_Pos: u32 = 0;
pub const ADC_CFGR1_DMAEN_Msk: u32 = 0x1 << ADC_CFGR1_DMAEN_Pos;
pub const ADC_CFGR1_DMAEN: u32 = ADC_CFGR1_DMAEN_Msk;
pub const ADC_CFGR1_DMACFG_Pos: u32 = 1;
pub const ADC_CFGR1_DMACFG_Msk: u32 = 0x1 << ADC_CFGR1_DMACFG_Pos;
pub const ADC_CFGR1_DMACFG: u32 = ADC_CFGR1_DMACFG_Msk;
pub const ADC_CFGR1_SCANDIR_Pos: u32 = 2;
pub const ADC_CFGR1_SCANDIR_Msk: u32 = 0x1 << ADC_CFGR1_SCANDIR_Pos;
pub const ADC_CFGR1_SCANDIR: u32 = ADC_CFGR1_SCANDIR_Msk;
pub const ADC_CFGR1_RES_Pos: u32 = 3;
pub const ADC_CFGR1_RES_Msk: u32 = 0x3 << ADC_CFGR1_RES_Pos;
pub const ADC_CFGR1_RES: u32 = ADC_CFGR1_RES_Msk;
pub const ADC_CFGR1_RES_0: u32 = 0x1 << ADC_CFGR1_RES_Pos;
pub const ADC_CFGR1_RES_1: u32 = 0x2 << ADC_CFGR1_RES_Pos;
pub const ADC_CFGR1_ALIGN_Pos: u32 = 5;
pub const ADC_CFGR1_ALIGN_Msk: u32 = 0x1 << ADC_CFGR1_ALIGN_Pos;
pub const ADC_CFGR1_ALIGN: u32 = ADC_CFGR1_ALIGN_Msk;
pub const ADC_CFGR1_EXTSEL_Pos: u32 = 6;
pub const ADC_CFGR1_EXTSEL_Msk: u32 = 0x7 << ADC_CFGR1_EXTSEL_Pos;
pub const ADC_CFGR1_EXTSEL: u32 = ADC_CFGR1_EXTSEL_Msk;
pub const ADC_CFGR1_EXTSEL_0: u32 = 0x1 << ADC_CFGR1_EXTSEL_Pos;
pub const ADC_CFGR1_EXTSEL_1: u32 = 0x2 << ADC_CFGR1_EXTSEL_Pos;
pub const ADC_CFGR1_EXTSEL_2: u32 = 0x4 << ADC_CFGR1_EXTSEL_Pos;
pub const ADC_CFGR1_EXTEN_Pos: u32 = 10;
pub const ADC_CFGR1_EXTEN_Msk: u32 = 0x3 << ADC_CFGR1_EXTEN_Pos;
pub const ADC_CFGR1_EXTEN: u32 = ADC_CFGR1_EXTEN_Msk;
pub const ADC_CFGR1_EXTEN_0: u32 = 0x1 << ADC_CFGR1_EXTEN_Pos;
pub const ADC_CFGR1_EXTEN_1: u32 = 0x2 << ADC_CFGR1_EXTEN_Pos;
pub const ADC_CFGR1_OVRMOD_Pos: u32 = 12;
pub const ADC_CFGR1_OVRMOD_Msk: u32 = 0x1 << ADC_CFGR1_OVRMOD_Pos;
pub const ADC_CFGR1_OVRMOD: u32 = ADC_CFGR1_OVRMOD_Msk;
pub const ADC_CFGR1_CONT_Pos: u32 = 13;
pub const ADC_CFGR1_CONT_Msk: u32 = 0x1 << ADC_CFGR1_CONT_Pos;
pub const ADC_CFGR1_CONT: u32 = ADC_CFGR1_CONT_Msk;
pub const ADC_CFGR1_WAIT_Pos: u32 = 14;
pub const ADC_CFGR1_WAIT_Msk: u32 = 0x1 << ADC_CFGR1_WAIT_Pos;
pub const ADC_CFGR1_WAIT: u32 = ADC_CFGR1_WAIT_Msk;
pub const ADC_CFGR1_AUTOFF_Pos: u32 = 15;
pub const ADC_CFGR1_AUTOFF_Msk: u32 = 0x1 << ADC_CFGR1_AUTOFF_Pos;
pub const ADC_CFGR1_AUTOFF: u32 = ADC_CFGR1_AUTOFF_Msk;
pub const ADC_CFGR1_DISCEN_Pos: u32 = 16;
pub const ADC_CFGR1_DISCEN_Msk: u32 = 0x1 << ADC_CFGR1_DISCEN_Pos;
pub const ADC_CFGR1_DISCEN: u32 = ADC_CFGR1_DISCEN_Msk;
pub const ADC_CFGR1_CHSELRMOD_Pos: u32 = 21;
pub const ADC_CFGR1_CHSELRMOD_Msk: u32 = 0x1 << ADC_CFGR1_CHSELRMOD_Pos;
pub const ADC_CFGR1_CHSELRMOD: u32 = ADC_CFGR1_CHSELRMOD_Msk;
pub const ADC_CFGR1_AWD1SGL_Pos: u32 = 22;
pub const ADC_CFGR1_AWD1SGL_Msk: u32 = 0x1 << ADC_CFGR1_AWD1SGL_Pos;
pub const ADC_CFGR1_AWD1SGL: u32 = ADC_CFGR1_AWD1SGL_Msk;
pub const ADC_CFGR1_AWD1EN_Pos: u32 = 23;
pub const ADC_CFGR1_AWD1EN_Msk: u32 = 0x1 << ADC_CFGR1_AWD1EN_Pos;
pub const ADC_CFGR1_AWD1EN: u32 = ADC_CFGR1_AWD1EN_Msk;
pub const ADC_CFGR1_AWD1CH_Pos: u32 = 26;
pub const ADC_CFGR1_AWD1CH_Msk: u32 = 0x1F << ADC_CFGR1_AWD1CH_Pos;
pub const ADC_CFGR1_AWD1CH: u32 = ADC_CFGR1_AWD1CH_Msk;
pub const ADC_CFGR1_AWD1CH_0: u32 = 0x01 << ADC_CFGR1_AWD1CH_Pos;
pub const ADC_CFGR1_AWD1CH_1: u32 = 0x02 << ADC_CFGR1_AWD1CH_Pos;
pub const ADC_CFGR1_AWD1CH_2: u32 = 0x04 << ADC_CFGR1_AWD1CH_Pos;
pub const ADC_CFGR1_AWD1CH_3: u32 = 0x08 << ADC_CFGR1_AWD1CH_Pos;
pub const ADC_CFGR1_AWD1CH_4: u32 = 0x10 << ADC_CFGR1_AWD1CH_Pos;
pub const ADC_CFGR2_OVSE_Pos: u32 = 0;
pub const ADC_CFGR2_OVSE_Msk: u32 = 0x1 << ADC_CFGR2_OVSE_Pos;
pub const ADC_CFGR2_OVSE: u32 = ADC_CFGR2_OVSE_Msk;
pub const ADC_CFGR2_OVSR_Pos: u32 = 2;
pub const ADC_CFGR2_OVSR_Msk: u32 = 0x7 << ADC_CFGR2_OVSR_Pos;
pub const ADC_CFGR2_OVSR: u32 = ADC_CFGR2_OVSR_Msk;
pub const ADC_CFGR2_OVSR_0: u32 = 0x1 << ADC_CFGR2_OVSR_Pos;
pub const ADC_CFGR2_OVSR_1: u32 = 0x2 << ADC_CFGR2_OVSR_Pos;
pub const ADC_CFGR2_OVSR_2: u32 = 0x4 << ADC_CFGR2_OVSR_Pos;
pub const ADC_CFGR2_OVSS_Pos: u32 = 5;
pub const ADC_CFGR2_OVSS_Msk: u32 = 0xF << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_OVSS: u32 = ADC_CFGR2_OVSS_Msk;
pub const ADC_CFGR2_OVSS_0: u32 = 0x1 << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_OVSS_1: u32 = 0x2 << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_OVSS_2: u32 = 0x4 << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_OVSS_3: u32 = 0x8 << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_TOVS_Pos: u32 = 9;
pub const ADC_CFGR2_TOVS_Msk: u32 = 0x1 << ADC_CFGR2_TOVS_Pos;
pub const ADC_CFGR2_TOVS: u32 = ADC_CFGR2_TOVS_Msk;
pub const ADC_CFGR2_LFTRIG_Pos: u32 = 29;
pub const ADC_CFGR2_LFTRIG_Msk: u32 = 0x1 << ADC_CFGR2_LFTRIG_Pos;
pub const ADC_CFGR2_LFTRIG: u32 = ADC_CFGR2_LFTRIG_Msk;
pub const ADC_CFGR2_CKMODE_Pos: u32 = 30;
pub const ADC_CFGR2_CKMODE_Msk: u32 = 0x3 << ADC_CFGR2_CKMODE_Pos;
pub const ADC_CFGR2_CKMODE: u32 = ADC_CFGR2_CKMODE_Msk;
pub const ADC_CFGR2_CKMODE_1: u32 = 0x2 << ADC_CFGR2_CKMODE_Pos;
pub const ADC_CFGR2_CKMODE_0: u32 = 0x1 << ADC_CFGR2_CKMODE_Pos;
pub const ADC_SMPR_SMP1_Pos: u32 = 0;
pub const ADC_SMPR_SMP1_Msk: u32 = 0x7 << ADC_SMPR_SMP1_Pos;
pub const ADC_SMPR_SMP1: u32 = ADC_SMPR_SMP1_Msk;
pub const ADC_SMPR_SMP1_0: u32 = 0x1 << ADC_SMPR_SMP1_Pos;
pub const ADC_SMPR_SMP1_1: u32 = 0x2 << ADC_SMPR_SMP1_Pos;
pub const ADC_SMPR_SMP1_2: u32 = 0x4 << ADC_SMPR_SMP1_Pos;
pub const ADC_SMPR_SMP2_Pos: u32 = 4;
pub const ADC_SMPR_SMP2_Msk: u32 = 0x7 << ADC_SMPR_SMP2_Pos;
pub const ADC_SMPR_SMP2: u32 = ADC_SMPR_SMP2_Msk;
pub const ADC_SMPR_SMP2_0: u32 = 0x1 << ADC_SMPR_SMP2_Pos;
pub const ADC_SMPR_SMP2_1: u32 = 0x2 << ADC_SMPR_SMP2_Pos;
pub const ADC_SMPR_SMP2_2: u32 = 0x4 << ADC_SMPR_SMP2_Pos;
pub const ADC_SMPR_SMPSEL_Pos: u32 = 8;
pub const ADC_SMPR_SMPSEL_Msk: u32 = 0x3FFFF << ADC_SMPR_SMPSEL_Pos;
pub const ADC_SMPR_SMPSEL: u32 = ADC_SMPR_SMPSEL_Msk;
pub const ADC_SMPR_SMPSEL0_Pos: u32 = 8;
pub const ADC_SMPR_SMPSEL0_Msk: u32 = 0x1 << ADC_SMPR_SMPSEL0_Pos;
pub const ADC_SMPR_SMPSEL0: u32 = ADC_SMPR_SMPSEL0_Msk;
pub const ADC_SMPR_SMPSEL1_Pos: u32 = 9;
pub const ADC_SMPR_SMPSEL1_Msk: u32 = 0x1 << ADC_SMPR_SMPSEL1_Pos;
pub const ADC_SMPR_SMPSEL1: u32 = ADC_SMPR_SMPSEL1_Msk;
pub const ADC_SMPR_SMPSEL2_Pos: u32 = 10;
pub const ADC_SMPR_SMPSEL2_Msk: u32 = 0x1 << ADC_SMPR_SMPSEL2_Pos;
pub const ADC_SMPR_SMPSEL2: u32 = ADC_SMPR_SMPSEL2_Msk;
pub const ADC_SMPR_SMPSEL3_Pos: u32 = 11;
pub const ADC_SMPR_SMPSEL3_Msk: u32 = 0x1 << ADC_SMPR_SMPSEL3_Pos;
pub const ADC_SMPR_SMPSEL3: u32 = ADC_SMPR_SMPSEL3_Msk;
pub const ADC_SMPR_SMPSEL4_Pos: u32 = 12;
pub const ADC_SMPR_SMPSEL4_Msk: u32 = 0x1 << ADC_SMPR_SMPSEL4_Pos;
pub const ADC_SMPR_SMPSEL4: u32 = ADC_SMPR_SMPSEL4_Msk;
pub const ADC_SMPR_SMPSEL5_Pos: u32 = 13;
pub const ADC_SMPR_SMPSEL5_Msk: u32 = 0x1 << ADC_SMPR_SMPSEL5_Pos;
pub const ADC_SMPR_SMPSEL5: u32 = ADC_SMPR_SMPSEL5_Msk;
pub const ADC_SMPR_SMPSEL6_Pos: u32 = 14;
pub const ADC_SMPR_SMPSEL6_Msk: u32 = 0x1 << ADC_SMPR_SMPSEL6_Pos;
pub const ADC_SMPR_SMPSEL6: u32 = ADC_SMPR_SMPSEL6_Msk;
pub const ADC_SMPR_SMPSEL7_Pos: u32 = 15;
pub const ADC_SMPR_SMPSEL7_Msk: u32 = 0x1 << ADC_SMPR_SMPSEL7_Pos;
pub const ADC_SMPR_SMPSEL7: u32 = ADC_SMPR_SMPSEL7_Msk;
pub const ADC_SMPR_SMPSEL8_Pos: u32 = 16;
pub const ADC_SMPR_SMPSEL8_Msk: u32 = 0x1 << ADC_SMPR_SMPSEL8_Pos;
pub const ADC_SMPR_SMPSEL8: u32 = ADC_SMPR_SMPSEL8_Msk;
pub const ADC_SMPR_SMPSEL9_Pos: u32 = 17;
pub const ADC_SMPR_SMPSEL9_Msk: u32 = 0x1 << ADC_SMPR_SMPSEL9_Pos;
pub const ADC_SMPR_SMPSEL9: u32 = ADC_SMPR_SMPSEL9_Msk;
pub const ADC_SMPR_SMPSEL10_Pos: u32 = 18;
pub const ADC_SMPR_SMPSEL10_Msk: u32 = 0x1 << ADC_SMPR_SMPSEL10_Pos;
pub const ADC_SMPR_SMPSEL10: u32 = ADC_SMPR_SMPSEL10_Msk;
pub const ADC_SMPR_SMPSEL11_Pos: u32 = 19;
pub const ADC_SMPR_SMPSEL11_Msk: u32 = 0x1 << ADC_SMPR_SMPSEL11_Pos;
pub const ADC_SMPR_SMPSEL11: u32 = ADC_SMPR_SMPSEL11_Msk;
pub const ADC_SMPR_SMPSEL12_Pos: u32 = 20;
pub const ADC_SMPR_SMPSEL12_Msk: u32 = 0x1 << ADC_SMPR_SMPSEL12_Pos;
pub const ADC_SMPR_SMPSEL12: u32 = ADC_SMPR_SMPSEL12_Msk;
pub const ADC_SMPR_SMPSEL13_Pos: u32 = 21;
pub const ADC_SMPR_SMPSEL13_Msk: u32 = 0x1 << ADC_SMPR_SMPSEL13_Pos;
pub const ADC_SMPR_SMPSEL13: u32 = ADC_SMPR_SMPSEL13_Msk;
pub const ADC_SMPR_SMPSEL14_Pos: u32 = 22;
pub const ADC_SMPR_SMPSEL14_Msk: u32 = 0x1 << ADC_SMPR_SMPSEL14_Pos;
pub const ADC_SMPR_SMPSEL14: u32 = ADC_SMPR_SMPSEL14_Msk;
pub const ADC_SMPR_SMPSEL15_Pos: u32 = 23;
pub const ADC_SMPR_SMPSEL15_Msk: u32 = 0x1 << ADC_SMPR_SMPSEL15_Pos;
pub const ADC_SMPR_SMPSEL15: u32 = ADC_SMPR_SMPSEL15_Msk;
pub const ADC_SMPR_SMPSEL16_Pos: u32 = 24;
pub const ADC_SMPR_SMPSEL16_Msk: u32 = 0x1 << ADC_SMPR_SMPSEL16_Pos;
pub const ADC_SMPR_SMPSEL16: u32 = ADC_SMPR_SMPSEL16_Msk;
pub const ADC_SMPR_SMPSEL17_Pos: u32 = 25;
pub const ADC_SMPR_SMPSEL17_Msk: u32 = 0x1 << ADC_SMPR_SMPSEL17_Pos;
pub const ADC_SMPR_SMPSEL17: u32 = ADC_SMPR_SMPSEL17_Msk;
pub const ADC_AWD1TR_LT1_Pos: u32 = 0;
pub const ADC_AWD1TR_LT1_Msk: u32 = 0xFFF << ADC_AWD1TR_LT1_Pos;
pub const ADC_AWD1TR_LT1: u32 = ADC_AWD1TR_LT1_Msk;
pub const ADC_AWD1TR_LT1_0: u32 = 0x001 << ADC_AWD1TR_LT1_Pos;
pub const ADC_AWD1TR_LT1_1: u32 = 0x002 << ADC_AWD1TR_LT1_Pos;
pub const ADC_AWD1TR_LT1_2: u32 = 0x004 << ADC_AWD1TR_LT1_Pos;
pub const ADC_AWD1TR_LT1_3: u32 = 0x008 << ADC_AWD1TR_LT1_Pos;
pub const ADC_AWD1TR_LT1_4: u32 = 0x010 << ADC_AWD1TR_LT1_Pos;
pub const ADC_AWD1TR_LT1_5: u32 = 0x020 << ADC_AWD1TR_LT1_Pos;
pub const ADC_AWD1TR_LT1_6: u32 = 0x040 << ADC_AWD1TR_LT1_Pos;
pub const ADC_AWD1TR_LT1_7: u32 = 0x080 << ADC_AWD1TR_LT1_Pos;
pub const ADC_AWD1TR_LT1_8: u32 = 0x100 << ADC_AWD1TR_LT1_Pos;
pub const ADC_AWD1TR_LT1_9: u32 = 0x200 << ADC_AWD1TR_LT1_Pos;
pub const ADC_AWD1TR_LT1_10: u32 = 0x400 << ADC_AWD1TR_LT1_Pos;
pub const ADC_AWD1TR_LT1_11: u32 = 0x800 << ADC_AWD1TR_LT1_Pos;
pub const ADC_AWD1TR_HT1_Pos: u32 = 16;
pub const ADC_AWD1TR_HT1_Msk: u32 = 0xFFF << ADC_AWD1TR_HT1_Pos;
pub const ADC_AWD1TR_HT1: u32 = ADC_AWD1TR_HT1_Msk;
pub const ADC_AWD1TR_HT1_0: u32 = 0x001 << ADC_AWD1TR_HT1_Pos;
pub const ADC_AWD1TR_HT1_1: u32 = 0x002 << ADC_AWD1TR_HT1_Pos;
pub const ADC_AWD1TR_HT1_2: u32 = 0x004 << ADC_AWD1TR_HT1_Pos;
pub const ADC_AWD1TR_HT1_3: u32 = 0x008 << ADC_AWD1TR_HT1_Pos;
pub const ADC_AWD1TR_HT1_4: u32 = 0x010 << ADC_AWD1TR_HT1_Pos;
pub const ADC_AWD1TR_HT1_5: u32 = 0x020 << ADC_AWD1TR_HT1_Pos;
pub const ADC_AWD1TR_HT1_6: u32 = 0x040 << ADC_AWD1TR_HT1_Pos;
pub const ADC_AWD1TR_HT1_7: u32 = 0x080 << ADC_AWD1TR_HT1_Pos;
pub const ADC_AWD1TR_HT1_8: u32 = 0x100 << ADC_AWD1TR_HT1_Pos;
pub const ADC_AWD1TR_HT1_9: u32 = 0x200 << ADC_AWD1TR_HT1_Pos;
pub const ADC_AWD1TR_HT1_10: u32 = 0x400 << ADC_AWD1TR_HT1_Pos;
pub const ADC_AWD1TR_HT1_11: u32 = 0x800 << ADC_AWD1TR_HT1_Pos;
pub const ADC_TR1_LT1: u32 = ADC_AWD1TR_LT1;
pub const ADC_TR1_LT1_0: u32 = ADC_AWD1TR_LT1_0;
pub const ADC_TR1_LT1_1: u32 = ADC_AWD1TR_LT1_1;
pub const ADC_TR1_LT1_2: u32 = ADC_AWD1TR_LT1_2;
pub const ADC_TR1_LT1_3: u32 = ADC_AWD1TR_LT1_3;
pub const ADC_TR1_LT1_4: u32 = ADC_AWD1TR_LT1_4;
pub const ADC_TR1_LT1_5: u32 = ADC_AWD1TR_LT1_5;
pub const ADC_TR1_LT1_6: u32 = ADC_AWD1TR_LT1_6;
pub const ADC_TR1_LT1_7: u32 = ADC_AWD1TR_LT1_7;
pub const ADC_TR1_LT1_8: u32 = ADC_AWD1TR_LT1_8;
pub const ADC_TR1_LT1_9: u32 = ADC_AWD1TR_LT1_9;
pub const ADC_TR1_LT1_10: u32 = ADC_AWD1TR_LT1_10;
pub const ADC_TR1_LT1_11: u32 = ADC_AWD1TR_LT1_11;
pub const ADC_TR1_HT1: u32 = ADC_AWD1TR_HT1;
pub const ADC_TR1_HT1_0: u32 = ADC_AWD1TR_HT1_0;
pub const ADC_TR1_HT1_1: u32 = ADC_AWD1TR_HT1_1;
pub const ADC_TR1_HT1_2: u32 = ADC_AWD1TR_HT1_2;
pub const ADC_TR1_HT1_3: u32 = ADC_AWD1TR_HT1_3;
pub const ADC_TR1_HT1_4: u32 = ADC_AWD1TR_HT1_4;
pub const ADC_TR1_HT1_5: u32 = ADC_AWD1TR_HT1_5;
pub const ADC_TR1_HT1_6: u32 = ADC_AWD1TR_HT1_6;
pub const ADC_TR1_HT1_7: u32 = ADC_AWD1TR_HT1_7;
pub const ADC_TR1_HT1_8: u32 = ADC_AWD1TR_HT1_8;
pub const ADC_TR1_HT1_9: u32 = ADC_AWD1TR_HT1_9;
pub const ADC_TR1_HT1_10: u32 = ADC_AWD1TR_HT1_10;
pub const ADC_TR1_HT1_11: u32 = ADC_AWD1TR_HT1_11;
pub const ADC_AWD2TR_LT2_Pos: u32 = 0;
pub const ADC_AWD2TR_LT2_Msk: u32 = 0xFFF << ADC_AWD2TR_LT2_Pos;
pub const ADC_AWD2TR_LT2: u32 = ADC_AWD2TR_LT2_Msk;
pub const ADC_AWD2TR_LT2_0: u32 = 0x001 << ADC_AWD2TR_LT2_Pos;
pub const ADC_AWD2TR_LT2_1: u32 = 0x002 << ADC_AWD2TR_LT2_Pos;
pub const ADC_AWD2TR_LT2_2: u32 = 0x004 << ADC_AWD2TR_LT2_Pos;
pub const ADC_AWD2TR_LT2_3: u32 = 0x008 << ADC_AWD2TR_LT2_Pos;
pub const ADC_AWD2TR_LT2_4: u32 = 0x010 << ADC_AWD2TR_LT2_Pos;
pub const ADC_AWD2TR_LT2_5: u32 = 0x020 << ADC_AWD2TR_LT2_Pos;
pub const ADC_AWD2TR_LT2_6: u32 = 0x040 << ADC_AWD2TR_LT2_Pos;
pub const ADC_AWD2TR_LT2_7: u32 = 0x080 << ADC_AWD2TR_LT2_Pos;
pub const ADC_AWD2TR_LT2_8: u32 = 0x100 << ADC_AWD2TR_LT2_Pos;
pub const ADC_AWD2TR_LT2_9: u32 = 0x200 << ADC_AWD2TR_LT2_Pos;
pub const ADC_AWD2TR_LT2_10: u32 = 0x400 << ADC_AWD2TR_LT2_Pos;
pub const ADC_AWD2TR_LT2_11: u32 = 0x800 << ADC_AWD2TR_LT2_Pos;
pub const ADC_AWD2TR_HT2_Pos: u32 = 16;
pub const ADC_AWD2TR_HT2_Msk: u32 = 0xFFF << ADC_AWD2TR_HT2_Pos;
pub const ADC_AWD2TR_HT2: u32 = ADC_AWD2TR_HT2_Msk;
pub const ADC_AWD2TR_HT2_0: u32 = 0x001 << ADC_AWD2TR_HT2_Pos;
pub const ADC_AWD2TR_HT2_1: u32 = 0x002 << ADC_AWD2TR_HT2_Pos;
pub const ADC_AWD2TR_HT2_2: u32 = 0x004 << ADC_AWD2TR_HT2_Pos;
pub const ADC_AWD2TR_HT2_3: u32 = 0x008 << ADC_AWD2TR_HT2_Pos;
pub const ADC_AWD2TR_HT2_4: u32 = 0x010 << ADC_AWD2TR_HT2_Pos;
pub const ADC_AWD2TR_HT2_5: u32 = 0x020 << ADC_AWD2TR_HT2_Pos;
pub const ADC_AWD2TR_HT2_6: u32 = 0x040 << ADC_AWD2TR_HT2_Pos;
pub const ADC_AWD2TR_HT2_7: u32 = 0x080 << ADC_AWD2TR_HT2_Pos;
pub const ADC_AWD2TR_HT2_8: u32 = 0x100 << ADC_AWD2TR_HT2_Pos;
pub const ADC_AWD2TR_HT2_9: u32 = 0x200 << ADC_AWD2TR_HT2_Pos;
pub const ADC_AWD2TR_HT2_10: u32 = 0x400 << ADC_AWD2TR_HT2_Pos;
pub const ADC_AWD2TR_HT2_11: u32 = 0x800 << ADC_AWD2TR_HT2_Pos;
pub const ADC_TR2_LT2: u32 = ADC_AWD2TR_LT2;
pub const ADC_TR2_LT2_0: u32 = ADC_AWD2TR_LT2_0;
pub const ADC_TR2_LT2_1: u32 = ADC_AWD2TR_LT2_1;
pub const ADC_TR2_LT2_2: u32 = ADC_AWD2TR_LT2_2;
pub const ADC_TR2_LT2_3: u32 = ADC_AWD2TR_LT2_3;
pub const ADC_TR2_LT2_4: u32 = ADC_AWD2TR_LT2_4;
pub const ADC_TR2_LT2_5: u32 = ADC_AWD2TR_LT2_5;
pub const ADC_TR2_LT2_6: u32 = ADC_AWD2TR_LT2_6;
pub const ADC_TR2_LT2_7: u32 = ADC_AWD2TR_LT2_7;
pub const ADC_TR2_LT2_8: u32 = ADC_AWD2TR_LT2_8;
pub const ADC_TR2_LT2_9: u32 = ADC_AWD2TR_LT2_9;
pub const ADC_TR2_LT2_10: u32 = ADC_AWD2TR_LT2_10;
pub const ADC_TR2_LT2_11: u32 = ADC_AWD2TR_LT2_11;
pub const ADC_TR2_HT2: u32 = ADC_AWD2TR_HT2;
pub const ADC_TR2_HT2_0: u32 = ADC_AWD2TR_HT2_0;
pub const ADC_TR2_HT2_1: u32 = ADC_AWD2TR_HT2_1;
pub const ADC_TR2_HT2_2: u32 = ADC_AWD2TR_HT2_2;
pub const ADC_TR2_HT2_3: u32 = ADC_AWD2TR_HT2_3;
pub const ADC_TR2_HT2_4: u32 = ADC_AWD2TR_HT2_4;
pub const ADC_TR2_HT2_5: u32 = ADC_AWD2TR_HT2_5;
pub const ADC_TR2_HT2_6: u32 = ADC_AWD2TR_HT2_6;
pub const ADC_TR2_HT2_7: u32 = ADC_AWD2TR_HT2_7;
pub const ADC_TR2_HT2_8: u32 = ADC_AWD2TR_HT2_8;
pub const ADC_TR2_HT2_9: u32 = ADC_AWD2TR_HT2_9;
pub const ADC_TR2_HT2_10: u32 = ADC_AWD2TR_HT2_10;
pub const ADC_TR2_HT2_11: u32 = ADC_AWD2TR_HT2_11;
pub const ADC_CHSELR_CHSEL_Pos: u32 = 0;
pub const ADC_CHSELR_CHSEL_Msk: u32 = 0x3FFFF << ADC_CHSELR_CHSEL_Pos;
pub const ADC_CHSELR_CHSEL: u32 = ADC_CHSELR_CHSEL_Msk;
pub const ADC_CHSELR_CHSEL17_Pos: u32 = 17;
pub const ADC_CHSELR_CHSEL17_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL17_Pos;
pub const ADC_CHSELR_CHSEL17: u32 = ADC_CHSELR_CHSEL17_Msk;
pub const ADC_CHSELR_CHSEL16_Pos: u32 = 16;
pub const ADC_CHSELR_CHSEL16_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL16_Pos;
pub const ADC_CHSELR_CHSEL16: u32 = ADC_CHSELR_CHSEL16_Msk;
pub const ADC_CHSELR_CHSEL15_Pos: u32 = 15;
pub const ADC_CHSELR_CHSEL15_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL15_Pos;
pub const ADC_CHSELR_CHSEL15: u32 = ADC_CHSELR_CHSEL15_Msk;
pub const ADC_CHSELR_CHSEL14_Pos: u32 = 14;
pub const ADC_CHSELR_CHSEL14_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL14_Pos;
pub const ADC_CHSELR_CHSEL14: u32 = ADC_CHSELR_CHSEL14_Msk;
pub const ADC_CHSELR_CHSEL13_Pos: u32 = 13;
pub const ADC_CHSELR_CHSEL13_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL13_Pos;
pub const ADC_CHSELR_CHSEL13: u32 = ADC_CHSELR_CHSEL13_Msk;
pub const ADC_CHSELR_CHSEL12_Pos: u32 = 12;
pub const ADC_CHSELR_CHSEL12_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL12_Pos;
pub const ADC_CHSELR_CHSEL12: u32 = ADC_CHSELR_CHSEL12_Msk;
pub const ADC_CHSELR_CHSEL11_Pos: u32 = 11;
pub const ADC_CHSELR_CHSEL11_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL11_Pos;
pub const ADC_CHSELR_CHSEL11: u32 = ADC_CHSELR_CHSEL11_Msk;
pub const ADC_CHSELR_CHSEL10_Pos: u32 = 10;
pub const ADC_CHSELR_CHSEL10_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL10_Pos;
pub const ADC_CHSELR_CHSEL10: u32 = ADC_CHSELR_CHSEL10_Msk;
pub const ADC_CHSELR_CHSEL9_Pos: u32 = 9;
pub const ADC_CHSELR_CHSEL9_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL9_Pos;
pub const ADC_CHSELR_CHSEL9: u32 = ADC_CHSELR_CHSEL9_Msk;
pub const ADC_CHSELR_CHSEL8_Pos: u32 = 8;
pub const ADC_CHSELR_CHSEL8_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL8_Pos;
pub const ADC_CHSELR_CHSEL8: u32 = ADC_CHSELR_CHSEL8_Msk;
pub const ADC_CHSELR_CHSEL7_Pos: u32 = 7;
pub const ADC_CHSELR_CHSEL7_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL7_Pos;
pub const ADC_CHSELR_CHSEL7: u32 = ADC_CHSELR_CHSEL7_Msk;
pub const ADC_CHSELR_CHSEL6_Pos: u32 = 6;
pub const ADC_CHSELR_CHSEL6_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL6_Pos;
pub const ADC_CHSELR_CHSEL6: u32 = ADC_CHSELR_CHSEL6_Msk;
pub const ADC_CHSELR_CHSEL5_Pos: u32 = 5;
pub const ADC_CHSELR_CHSEL5_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL5_Pos;
pub const ADC_CHSELR_CHSEL5: u32 = ADC_CHSELR_CHSEL5_Msk;
pub const ADC_CHSELR_CHSEL4_Pos: u32 = 4;
pub const ADC_CHSELR_CHSEL4_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL4_Pos;
pub const ADC_CHSELR_CHSEL4: u32 = ADC_CHSELR_CHSEL4_Msk;
pub const ADC_CHSELR_CHSEL3_Pos: u32 = 3;
pub const ADC_CHSELR_CHSEL3_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL3_Pos;
pub const ADC_CHSELR_CHSEL3: u32 = ADC_CHSELR_CHSEL3_Msk;
pub const ADC_CHSELR_CHSEL2_Pos: u32 = 2;
pub const ADC_CHSELR_CHSEL2_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL2_Pos;
pub const ADC_CHSELR_CHSEL2: u32 = ADC_CHSELR_CHSEL2_Msk;
pub const ADC_CHSELR_CHSEL1_Pos: u32 = 1;
pub const ADC_CHSELR_CHSEL1_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL1_Pos;
pub const ADC_CHSELR_CHSEL1: u32 = ADC_CHSELR_CHSEL1_Msk;
pub const ADC_CHSELR_CHSEL0_Pos: u32 = 0;
pub const ADC_CHSELR_CHSEL0_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL0_Pos;
pub const ADC_CHSELR_CHSEL0: u32 = ADC_CHSELR_CHSEL0_Msk;
pub const ADC_CHSELR_SQ_ALL_Pos: u32 = 0;
pub const ADC_CHSELR_SQ_ALL_Msk: u32 = 0xFFFFFFFF << ADC_CHSELR_SQ_ALL_Pos;
pub const ADC_CHSELR_SQ_ALL: u32 = ADC_CHSELR_SQ_ALL_Msk;
pub const ADC_CHSELR_SQ8_Pos: u32 = 28;
pub const ADC_CHSELR_SQ8_Msk: u32 = 0xF << ADC_CHSELR_SQ8_Pos;
pub const ADC_CHSELR_SQ8: u32 = ADC_CHSELR_SQ8_Msk;
pub const ADC_CHSELR_SQ8_0: u32 = 0x1 << ADC_CHSELR_SQ8_Pos;
pub const ADC_CHSELR_SQ8_1: u32 = 0x2 << ADC_CHSELR_SQ8_Pos;
pub const ADC_CHSELR_SQ8_2: u32 = 0x4 << ADC_CHSELR_SQ8_Pos;
pub const ADC_CHSELR_SQ8_3: u32 = 0x8 << ADC_CHSELR_SQ8_Pos;
pub const ADC_CHSELR_SQ7_Pos: u32 = 24;
pub const ADC_CHSELR_SQ7_Msk: u32 = 0xF << ADC_CHSELR_SQ7_Pos;
pub const ADC_CHSELR_SQ7: u32 = ADC_CHSELR_SQ7_Msk;
pub const ADC_CHSELR_SQ7_0: u32 = 0x1 << ADC_CHSELR_SQ7_Pos;
pub const ADC_CHSELR_SQ7_1: u32 = 0x2 << ADC_CHSELR_SQ7_Pos;
pub const ADC_CHSELR_SQ7_2: u32 = 0x4 << ADC_CHSELR_SQ7_Pos;
pub const ADC_CHSELR_SQ7_3: u32 = 0x8 << ADC_CHSELR_SQ7_Pos;
pub const ADC_CHSELR_SQ6_Pos: u32 = 20;
pub const ADC_CHSELR_SQ6_Msk: u32 = 0xF << ADC_CHSELR_SQ6_Pos;
pub const ADC_CHSELR_SQ6: u32 = ADC_CHSELR_SQ6_Msk;
pub const ADC_CHSELR_SQ6_0: u32 = 0x1 << ADC_CHSELR_SQ6_Pos;
pub const ADC_CHSELR_SQ6_1: u32 = 0x2 << ADC_CHSELR_SQ6_Pos;
pub const ADC_CHSELR_SQ6_2: u32 = 0x4 << ADC_CHSELR_SQ6_Pos;
pub const ADC_CHSELR_SQ6_3: u32 = 0x8 << ADC_CHSELR_SQ6_Pos;
pub const ADC_CHSELR_SQ5_Pos: u32 = 16;
pub const ADC_CHSELR_SQ5_Msk: u32 = 0xF << ADC_CHSELR_SQ5_Pos;
pub const ADC_CHSELR_SQ5: u32 = ADC_CHSELR_SQ5_Msk;
pub const ADC_CHSELR_SQ5_0: u32 = 0x1 << ADC_CHSELR_SQ5_Pos;
pub const ADC_CHSELR_SQ5_1: u32 = 0x2 << ADC_CHSELR_SQ5_Pos;
pub const ADC_CHSELR_SQ5_2: u32 = 0x4 << ADC_CHSELR_SQ5_Pos;
pub const ADC_CHSELR_SQ5_3: u32 = 0x8 << ADC_CHSELR_SQ5_Pos;
pub const ADC_CHSELR_SQ4_Pos: u32 = 12;
pub const ADC_CHSELR_SQ4_Msk: u32 = 0xF << ADC_CHSELR_SQ4_Pos;
pub const ADC_CHSELR_SQ4: u32 = ADC_CHSELR_SQ4_Msk;
pub const ADC_CHSELR_SQ4_0: u32 = 0x1 << ADC_CHSELR_SQ4_Pos;
pub const ADC_CHSELR_SQ4_1: u32 = 0x2 << ADC_CHSELR_SQ4_Pos;
pub const ADC_CHSELR_SQ4_2: u32 = 0x4 << ADC_CHSELR_SQ4_Pos;
pub const ADC_CHSELR_SQ4_3: u32 = 0x8 << ADC_CHSELR_SQ4_Pos;
pub const ADC_CHSELR_SQ3_Pos: u32 = 8;
pub const ADC_CHSELR_SQ3_Msk: u32 = 0xF << ADC_CHSELR_SQ3_Pos;
pub const ADC_CHSELR_SQ3: u32 = ADC_CHSELR_SQ3_Msk;
pub const ADC_CHSELR_SQ3_0: u32 = 0x1 << ADC_CHSELR_SQ3_Pos;
pub const ADC_CHSELR_SQ3_1: u32 = 0x2 << ADC_CHSELR_SQ3_Pos;
pub const ADC_CHSELR_SQ3_2: u32 = 0x4 << ADC_CHSELR_SQ3_Pos;
pub const ADC_CHSELR_SQ3_3: u32 = 0x8 << ADC_CHSELR_SQ3_Pos;
pub const ADC_CHSELR_SQ2_Pos: u32 = 4;
pub const ADC_CHSELR_SQ2_Msk: u32 = 0xF << ADC_CHSELR_SQ2_Pos;
pub const ADC_CHSELR_SQ2: u32 = ADC_CHSELR_SQ2_Msk;
pub const ADC_CHSELR_SQ2_0: u32 = 0x1 << ADC_CHSELR_SQ2_Pos;
pub const ADC_CHSELR_SQ2_1: u32 = 0x2 << ADC_CHSELR_SQ2_Pos;
pub const ADC_CHSELR_SQ2_2: u32 = 0x4 << ADC_CHSELR_SQ2_Pos;
pub const ADC_CHSELR_SQ2_3: u32 = 0x8 << ADC_CHSELR_SQ2_Pos;
pub const ADC_CHSELR_SQ1_Pos: u32 = 0;
pub const ADC_CHSELR_SQ1_Msk: u32 = 0xF << ADC_CHSELR_SQ1_Pos;
pub const ADC_CHSELR_SQ1: u32 = ADC_CHSELR_SQ1_Msk;
pub const ADC_CHSELR_SQ1_0: u32 = 0x1 << ADC_CHSELR_SQ1_Pos;
pub const ADC_CHSELR_SQ1_1: u32 = 0x2 << ADC_CHSELR_SQ1_Pos;
pub const ADC_CHSELR_SQ1_2: u32 = 0x4 << ADC_CHSELR_SQ1_Pos;
pub const ADC_CHSELR_SQ1_3: u32 = 0x8 << ADC_CHSELR_SQ1_Pos;
pub const ADC_AWD3TR_LT3_Pos: u32 = 0;
pub const ADC_AWD3TR_LT3_Msk: u32 = 0xFFF << ADC_AWD3TR_LT3_Pos;
pub const ADC_AWD3TR_LT3: u32 = ADC_AWD3TR_LT3_Msk;
pub const ADC_AWD3TR_LT3_0: u32 = 0x001 << ADC_AWD3TR_LT3_Pos;
pub const ADC_AWD3TR_LT3_1: u32 = 0x002 << ADC_AWD3TR_LT3_Pos;
pub const ADC_AWD3TR_LT3_2: u32 = 0x004 << ADC_AWD3TR_LT3_Pos;
pub const ADC_AWD3TR_LT3_3: u32 = 0x008 << ADC_AWD3TR_LT3_Pos;
pub const ADC_AWD3TR_LT3_4: u32 = 0x010 << ADC_AWD3TR_LT3_Pos;
pub const ADC_AWD3TR_LT3_5: u32 = 0x020 << ADC_AWD3TR_LT3_Pos;
pub const ADC_AWD3TR_LT3_6: u32 = 0x040 << ADC_AWD3TR_LT3_Pos;
pub const ADC_AWD3TR_LT3_7: u32 = 0x080 << ADC_AWD3TR_LT3_Pos;
pub const ADC_AWD3TR_LT3_8: u32 = 0x100 << ADC_AWD3TR_LT3_Pos;
pub const ADC_AWD3TR_LT3_9: u32 = 0x200 << ADC_AWD3TR_LT3_Pos;
pub const ADC_AWD3TR_LT3_10: u32 = 0x400 << ADC_AWD3TR_LT3_Pos;
pub const ADC_AWD3TR_LT3_11: u32 = 0x800 << ADC_AWD3TR_LT3_Pos;
pub const ADC_AWD3TR_HT3_Pos: u32 = 16;
pub const ADC_AWD3TR_HT3_Msk: u32 = 0xFFF << ADC_AWD3TR_HT3_Pos;
pub const ADC_AWD3TR_HT3: u32 = ADC_AWD3TR_HT3_Msk;
pub const ADC_AWD3TR_HT3_0: u32 = 0x001 << ADC_AWD3TR_HT3_Pos;
pub const ADC_AWD3TR_HT3_1: u32 = 0x002 << ADC_AWD3TR_HT3_Pos;
pub const ADC_AWD3TR_HT3_2: u32 = 0x004 << ADC_AWD3TR_HT3_Pos;
pub const ADC_AWD3TR_HT3_3: u32 = 0x008 << ADC_AWD3TR_HT3_Pos;
pub const ADC_AWD3TR_HT3_4: u32 = 0x010 << ADC_AWD3TR_HT3_Pos;
pub const ADC_AWD3TR_HT3_5: u32 = 0x020 << ADC_AWD3TR_HT3_Pos;
pub const ADC_AWD3TR_HT3_6: u32 = 0x040 << ADC_AWD3TR_HT3_Pos;
pub const ADC_AWD3TR_HT3_7: u32 = 0x080 << ADC_AWD3TR_HT3_Pos;
pub const ADC_AWD3TR_HT3_8: u32 = 0x100 << ADC_AWD3TR_HT3_Pos;
pub const ADC_AWD3TR_HT3_9: u32 = 0x200 << ADC_AWD3TR_HT3_Pos;
pub const ADC_AWD3TR_HT3_10: u32 = 0x400 << ADC_AWD3TR_HT3_Pos;
pub const ADC_AWD3TR_HT3_11: u32 = 0x800 << ADC_AWD3TR_HT3_Pos;
pub const ADC_TR3_LT3: u32 = ADC_AWD3TR_LT3;
pub const ADC_TR3_LT3_0: u32 = ADC_AWD3TR_LT3_0;
pub const ADC_TR3_LT3_1: u32 = ADC_AWD3TR_LT3_1;
pub const ADC_TR3_LT3_2: u32 = ADC_AWD3TR_LT3_2;
pub const ADC_TR3_LT3_3: u32 = ADC_AWD3TR_LT3_3;
pub const ADC_TR3_LT3_4: u32 = ADC_AWD3TR_LT3_4;
pub const ADC_TR3_LT3_5: u32 = ADC_AWD3TR_LT3_5;
pub const ADC_TR3_LT3_6: u32 = ADC_AWD3TR_LT3_6;
pub const ADC_TR3_LT3_7: u32 = ADC_AWD3TR_LT3_7;
pub const ADC_TR3_LT3_8: u32 = ADC_AWD3TR_LT3_8;
pub const ADC_TR3_LT3_9: u32 = ADC_AWD3TR_LT3_9;
pub const ADC_TR3_LT3_10: u32 = ADC_AWD3TR_LT3_10;
pub const ADC_TR3_LT3_11: u32 = ADC_AWD3TR_LT3_11;
pub const ADC_TR3_HT3: u32 = ADC_AWD3TR_HT3;
pub const ADC_TR3_HT3_0: u32 = ADC_AWD3TR_HT3_0;
pub const ADC_TR3_HT3_1: u32 = ADC_AWD3TR_HT3_1;
pub const ADC_TR3_HT3_2: u32 = ADC_AWD3TR_HT3_2;
pub const ADC_TR3_HT3_3: u32 = ADC_AWD3TR_HT3_3;
pub const ADC_TR3_HT3_4: u32 = ADC_AWD3TR_HT3_4;
pub const ADC_TR3_HT3_5: u32 = ADC_AWD3TR_HT3_5;
pub const ADC_TR3_HT3_6: u32 = ADC_AWD3TR_HT3_6;
pub const ADC_TR3_HT3_7: u32 = ADC_AWD3TR_HT3_7;
pub const ADC_TR3_HT3_8: u32 = ADC_AWD3TR_HT3_8;
pub const ADC_TR3_HT3_9: u32 = ADC_AWD3TR_HT3_9;
pub const ADC_TR3_HT3_10: u32 = ADC_AWD3TR_HT3_10;
pub const ADC_TR3_HT3_11: u32 = ADC_AWD3TR_HT3_11;
pub const ADC_DR_DATA_Pos: u32 = 0;
pub const ADC_DR_DATA_Msk: u32 = 0xFFFF << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA: u32 = ADC_DR_DATA_Msk;
pub const ADC_DR_DATA_0: u32 = 0x0001 << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA_1: u32 = 0x0002 << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA_2: u32 = 0x0004 << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA_3: u32 = 0x0008 << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA_4: u32 = 0x0010 << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA_5: u32 = 0x0020 << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA_6: u32 = 0x0040 << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA_7: u32 = 0x0080 << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA_8: u32 = 0x0100 << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA_9: u32 = 0x0200 << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA_10: u32 = 0x0400 << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA_11: u32 = 0x0800 << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA_12: u32 = 0x1000 << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA_13: u32 = 0x2000 << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA_14: u32 = 0x4000 << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA_15: u32 = 0x8000 << ADC_DR_DATA_Pos;
pub const ADC_AWD2CR_AWD2CH_Pos: u32 = 0;
pub const ADC_AWD2CR_AWD2CH_Msk: u32 = 0x3FFFF << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH: u32 = ADC_AWD2CR_AWD2CH_Msk;
pub const ADC_AWD2CR_AWD2CH_0: u32 = 0x00001 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_1: u32 = 0x00002 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_2: u32 = 0x00004 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_3: u32 = 0x00008 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_4: u32 = 0x00010 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_5: u32 = 0x00020 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_6: u32 = 0x00040 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_7: u32 = 0x00080 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_8: u32 = 0x00100 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_9: u32 = 0x00200 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_10: u32 = 0x00400 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_11: u32 = 0x00800 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_12: u32 = 0x01000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_13: u32 = 0x02000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_14: u32 = 0x04000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_15: u32 = 0x08000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_16: u32 = 0x10000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_17: u32 = 0x20000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD3CR_AWD3CH_Pos: u32 = 0;
pub const ADC_AWD3CR_AWD3CH_Msk: u32 = 0x3FFFF << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH: u32 = ADC_AWD3CR_AWD3CH_Msk;
pub const ADC_AWD3CR_AWD3CH_0: u32 = 0x00001 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_1: u32 = 0x00002 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_2: u32 = 0x00004 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_3: u32 = 0x00008 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_4: u32 = 0x00010 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_5: u32 = 0x00020 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_6: u32 = 0x00040 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_7: u32 = 0x00080 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_8: u32 = 0x00100 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_9: u32 = 0x00200 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_10: u32 = 0x00400 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_11: u32 = 0x00800 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_12: u32 = 0x01000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_13: u32 = 0x02000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_14: u32 = 0x04000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_15: u32 = 0x08000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_16: u32 = 0x10000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_17: u32 = 0x20000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_CALFACT_CALFACT_Pos: u32 = 0;
pub const ADC_CALFACT_CALFACT_Msk: u32 = 0x7F << ADC_CALFACT_CALFACT_Pos;
pub const ADC_CALFACT_CALFACT: u32 = ADC_CALFACT_CALFACT_Msk;
pub const ADC_CALFACT_CALFACT_0: u32 = 0x01 << ADC_CALFACT_CALFACT_Pos;
pub const ADC_CALFACT_CALFACT_1: u32 = 0x02 << ADC_CALFACT_CALFACT_Pos;
pub const ADC_CALFACT_CALFACT_2: u32 = 0x04 << ADC_CALFACT_CALFACT_Pos;
pub const ADC_CALFACT_CALFACT_3: u32 = 0x08 << ADC_CALFACT_CALFACT_Pos;
pub const ADC_CALFACT_CALFACT_4: u32 = 0x10 << ADC_CALFACT_CALFACT_Pos;
pub const ADC_CALFACT_CALFACT_5: u32 = 0x20 << ADC_CALFACT_CALFACT_Pos;
pub const ADC_CALFACT_CALFACT_6: u32 = 0x40 << ADC_CALFACT_CALFACT_Pos;
pub const ADC_CCR_PRESC_Pos: u32 = 18;
pub const ADC_CCR_PRESC_Msk: u32 = 0xF << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_PRESC: u32 = ADC_CCR_PRESC_Msk;
pub const ADC_CCR_PRESC_0: u32 = 0x1 << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_PRESC_1: u32 = 0x2 << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_PRESC_2: u32 = 0x4 << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_PRESC_3: u32 = 0x8 << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_VREFEN_Pos: u32 = 22;
pub const ADC_CCR_VREFEN_Msk: u32 = 0x1 << ADC_CCR_VREFEN_Pos;
pub const ADC_CCR_VREFEN: u32 = ADC_CCR_VREFEN_Msk;
pub const ADC_CCR_TSEN_Pos: u32 = 23;
pub const ADC_CCR_TSEN_Msk: u32 = 0x1 << ADC_CCR_TSEN_Pos;
pub const ADC_CCR_TSEN: u32 = ADC_CCR_TSEN_Msk;
pub const ADC_CCR_VBATEN_Pos: u32 = 24;
pub const ADC_CCR_VBATEN_Msk: u32 = 0x1 << ADC_CCR_VBATEN_Pos;
pub const ADC_CCR_VBATEN: u32 = ADC_CCR_VBATEN_Msk;
pub const COMP_CSR_EN_Pos: u32 = 0;
pub const COMP_CSR_EN_Msk: u32 = 0x1 << COMP_CSR_EN_Pos;
pub const COMP_CSR_EN: u32 = COMP_CSR_EN_Msk;
pub const COMP_CSR_PWRMODE_Pos: u32 = 2;
pub const COMP_CSR_PWRMODE_Msk: u32 = 0x3 << COMP_CSR_PWRMODE_Pos;
pub const COMP_CSR_PWRMODE: u32 = COMP_CSR_PWRMODE_Msk;
pub const COMP_CSR_PWRMODE_0: u32 = 0x1 << COMP_CSR_PWRMODE_Pos;
pub const COMP_CSR_PWRMODE_1: u32 = 0x2 << COMP_CSR_PWRMODE_Pos;
pub const COMP_CSR_INMSEL_Pos: u32 = 4;
pub const COMP_CSR_INMSEL_Msk: u32 = 0x7 << COMP_CSR_INMSEL_Pos;
pub const COMP_CSR_INMSEL: u32 = COMP_CSR_INMSEL_Msk;
pub const COMP_CSR_INMSEL_0: u32 = 0x1 << COMP_CSR_INMSEL_Pos;
pub const COMP_CSR_INMSEL_1: u32 = 0x2 << COMP_CSR_INMSEL_Pos;
pub const COMP_CSR_INMSEL_2: u32 = 0x4 << COMP_CSR_INMSEL_Pos;
pub const COMP_CSR_INPSEL_Pos: u32 = 7;
pub const COMP_CSR_INPSEL_Msk: u32 = 0x3 << COMP_CSR_INPSEL_Pos;
pub const COMP_CSR_INPSEL: u32 = COMP_CSR_INPSEL_Msk;
pub const COMP_CSR_INPSEL_0: u32 = 0x1 << COMP_CSR_INPSEL_Pos;
pub const COMP_CSR_INPSEL_1: u32 = 0x2 << COMP_CSR_INPSEL_Pos;
pub const COMP_CSR_WINMODE_Pos: u32 = 9;
pub const COMP_CSR_WINMODE_Msk: u32 = 0x1 << COMP_CSR_WINMODE_Pos;
pub const COMP_CSR_WINMODE: u32 = COMP_CSR_WINMODE_Msk;
pub const COMP_CSR_POLARITY_Pos: u32 = 15;
pub const COMP_CSR_POLARITY_Msk: u32 = 0x1 << COMP_CSR_POLARITY_Pos;
pub const COMP_CSR_POLARITY: u32 = COMP_CSR_POLARITY_Msk;
pub const COMP_CSR_HYST_Pos: u32 = 16;
pub const COMP_CSR_HYST_Msk: u32 = 0x3 << COMP_CSR_HYST_Pos;
pub const COMP_CSR_HYST: u32 = COMP_CSR_HYST_Msk;
pub const COMP_CSR_HYST_0: u32 = 0x1 << COMP_CSR_HYST_Pos;
pub const COMP_CSR_HYST_1: u32 = 0x2 << COMP_CSR_HYST_Pos;
pub const COMP_CSR_BLANKING_Pos: u32 = 18;
pub const COMP_CSR_BLANKING_Msk: u32 = 0x7 << COMP_CSR_BLANKING_Pos;
pub const COMP_CSR_BLANKING: u32 = COMP_CSR_BLANKING_Msk;
pub const COMP_CSR_BLANKING_0: u32 = 0x1 << COMP_CSR_BLANKING_Pos;
pub const COMP_CSR_BLANKING_1: u32 = 0x2 << COMP_CSR_BLANKING_Pos;
pub const COMP_CSR_BLANKING_2: u32 = 0x4 << COMP_CSR_BLANKING_Pos;
pub const COMP_CSR_BRGEN_Pos: u32 = 22;
pub const COMP_CSR_BRGEN_Msk: u32 = 0x1 << COMP_CSR_BRGEN_Pos;
pub const COMP_CSR_BRGEN: u32 = COMP_CSR_BRGEN_Msk;
pub const COMP_CSR_SCALEN_Pos: u32 = 23;
pub const COMP_CSR_SCALEN_Msk: u32 = 0x1 << COMP_CSR_SCALEN_Pos;
pub const COMP_CSR_SCALEN: u32 = COMP_CSR_SCALEN_Msk;
pub const COMP_CSR_INMESEL_Pos: u32 = 25;
pub const COMP_CSR_INMESEL_Msk: u32 = 0x3 << COMP_CSR_INMESEL_Pos;
pub const COMP_CSR_INMESEL: u32 = COMP_CSR_INMESEL_Msk;
pub const COMP_CSR_INMESEL_0: u32 = 0x1 << COMP_CSR_INMESEL_Pos;
pub const COMP_CSR_INMESEL_1: u32 = 0x2 << COMP_CSR_INMESEL_Pos;
pub const COMP_CSR_VALUE_Pos: u32 = 30;
pub const COMP_CSR_VALUE_Msk: u32 = 0x1 << COMP_CSR_VALUE_Pos;
pub const COMP_CSR_VALUE: u32 = COMP_CSR_VALUE_Msk;
pub const COMP_CSR_LOCK_Pos: u32 = 31;
pub const COMP_CSR_LOCK_Msk: u32 = 0x1 << COMP_CSR_LOCK_Pos;
pub const COMP_CSR_LOCK: u32 = COMP_CSR_LOCK_Msk;
pub const DAC_CR_EN1_Pos: u32 = 0;
pub const DAC_CR_EN1_Msk: u32 = 0x1 << DAC_CR_EN1_Pos;
pub const DAC_CR_EN1: u32 = DAC_CR_EN1_Msk;
pub const DAC_CR_TEN1_Pos: u32 = 1;
pub const DAC_CR_TEN1_Msk: u32 = 0x1 << DAC_CR_TEN1_Pos;
pub const DAC_CR_TEN1: u32 = DAC_CR_TEN1_Msk;
pub const DAC_CR_TSEL1_Pos: u32 = 2;
pub const DAC_CR_TSEL1_Msk: u32 = 0xF << DAC_CR_TSEL1_Pos;
pub const DAC_CR_TSEL1: u32 = DAC_CR_TSEL1_Msk;
pub const DAC_CR_TSEL1_0: u32 = 0x1 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_TSEL1_1: u32 = 0x2 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_TSEL1_2: u32 = 0x4 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_TSEL1_3: u32 = 0x8 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_WAVE1_Pos: u32 = 6;
pub const DAC_CR_WAVE1_Msk: u32 = 0x3 << DAC_CR_WAVE1_Pos;
pub const DAC_CR_WAVE1: u32 = DAC_CR_WAVE1_Msk;
pub const DAC_CR_WAVE1_0: u32 = 0x1 << DAC_CR_WAVE1_Pos;
pub const DAC_CR_WAVE1_1: u32 = 0x2 << DAC_CR_WAVE1_Pos;
pub const DAC_CR_MAMP1_Pos: u32 = 8;
pub const DAC_CR_MAMP1_Msk: u32 = 0xF << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1: u32 = DAC_CR_MAMP1_Msk;
pub const DAC_CR_MAMP1_0: u32 = 0x1 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1_1: u32 = 0x2 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1_2: u32 = 0x4 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1_3: u32 = 0x8 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_DMAEN1_Pos: u32 = 12;
pub const DAC_CR_DMAEN1_Msk: u32 = 0x1 << DAC_CR_DMAEN1_Pos;
pub const DAC_CR_DMAEN1: u32 = DAC_CR_DMAEN1_Msk;
pub const DAC_CR_DMAUDRIE1_Pos: u32 = 13;
pub const DAC_CR_DMAUDRIE1_Msk: u32 = 0x1 << DAC_CR_DMAUDRIE1_Pos;
pub const DAC_CR_DMAUDRIE1: u32 = DAC_CR_DMAUDRIE1_Msk;
pub const DAC_CR_CEN1_Pos: u32 = 14;
pub const DAC_CR_CEN1_Msk: u32 = 0x1 << DAC_CR_CEN1_Pos;
pub const DAC_CR_CEN1: u32 = DAC_CR_CEN1_Msk;
pub const DAC_SWTRIGR_SWTRIG1_Pos: u32 = 0;
pub const DAC_SWTRIGR_SWTRIG1_Msk: u32 = 0x1 << DAC_SWTRIGR_SWTRIG1_Pos;
pub const DAC_SWTRIGR_SWTRIG1: u32 = DAC_SWTRIGR_SWTRIG1_Msk;
pub const DAC_DHR12R1_DACC1DHR_Pos: u32 = 0;
pub const DAC_DHR12R1_DACC1DHR_Msk: u32 = 0xFFF << DAC_DHR12R1_DACC1DHR_Pos;
pub const DAC_DHR12R1_DACC1DHR: u32 = DAC_DHR12R1_DACC1DHR_Msk;
pub const DAC_DHR12L1_DACC1DHR_Pos: u32 = 4;
pub const DAC_DHR12L1_DACC1DHR_Msk: u32 = 0xFFF << DAC_DHR12L1_DACC1DHR_Pos;
pub const DAC_DHR12L1_DACC1DHR: u32 = DAC_DHR12L1_DACC1DHR_Msk;
pub const DAC_DHR8R1_DACC1DHR_Pos: u32 = 0;
pub const DAC_DHR8R1_DACC1DHR_Msk: u32 = 0xFF << DAC_DHR8R1_DACC1DHR_Pos;
pub const DAC_DHR8R1_DACC1DHR: u32 = DAC_DHR8R1_DACC1DHR_Msk;
pub const DAC_DHR12RD_DACC1DHR_Pos: u32 = 0;
pub const DAC_DHR12RD_DACC1DHR_Msk: u32 = 0xFFF << DAC_DHR12RD_DACC1DHR_Pos;
pub const DAC_DHR12RD_DACC1DHR: u32 = DAC_DHR12RD_DACC1DHR_Msk;
pub const DAC_DHR12LD_DACC1DHR_Pos: u32 = 4;
pub const DAC_DHR12LD_DACC1DHR_Msk: u32 = 0xFFF << DAC_DHR12LD_DACC1DHR_Pos;
pub const DAC_DHR12LD_DACC1DHR: u32 = DAC_DHR12LD_DACC1DHR_Msk;
pub const DAC_DHR8RD_DACC1DHR_Pos: u32 = 0;
pub const DAC_DHR8RD_DACC1DHR_Msk: u32 = 0xFF << DAC_DHR8RD_DACC1DHR_Pos;
pub const DAC_DHR8RD_DACC1DHR: u32 = DAC_DHR8RD_DACC1DHR_Msk;
pub const DAC_DOR1_DACC1DOR_Pos: u32 = 0;
pub const DAC_DOR1_DACC1DOR_Msk: u32 = 0xFFF << DAC_DOR1_DACC1DOR_Pos;
pub const DAC_DOR1_DACC1DOR: u32 = DAC_DOR1_DACC1DOR_Msk;
pub const DAC_SR_DMAUDR1_Pos: u32 = 13;
pub const DAC_SR_DMAUDR1_Msk: u32 = 0x1 << DAC_SR_DMAUDR1_Pos;
pub const DAC_SR_DMAUDR1: u32 = DAC_SR_DMAUDR1_Msk;
pub const DAC_SR_CAL_FLAG1_Pos: u32 = 14;
pub const DAC_SR_CAL_FLAG1_Msk: u32 = 0x1 << DAC_SR_CAL_FLAG1_Pos;
pub const DAC_SR_CAL_FLAG1: u32 = DAC_SR_CAL_FLAG1_Msk;
pub const DAC_SR_BWST1_Pos: u32 = 15;
pub const DAC_SR_BWST1_Msk: u32 = 0x1 << DAC_SR_BWST1_Pos;
pub const DAC_SR_BWST1: u32 = DAC_SR_BWST1_Msk;
pub const DAC_CCR_OTRIM1_Pos: u32 = 0;
pub const DAC_CCR_OTRIM1_Msk: u32 = 0x1F << DAC_CCR_OTRIM1_Pos;
pub const DAC_CCR_OTRIM1: u32 = DAC_CCR_OTRIM1_Msk;
pub const DAC_MCR_MODE1_Pos: u32 = 0;
pub const DAC_MCR_MODE1_Msk: u32 = 0x7 << DAC_MCR_MODE1_Pos;
pub const DAC_MCR_MODE1: u32 = DAC_MCR_MODE1_Msk;
pub const DAC_MCR_MODE1_0: u32 = 0x1 << DAC_MCR_MODE1_Pos;
pub const DAC_MCR_MODE1_1: u32 = 0x2 << DAC_MCR_MODE1_Pos;
pub const DAC_MCR_MODE1_2: u32 = 0x4 << DAC_MCR_MODE1_Pos;
pub const DAC_SHSR1_TSAMPLE1_Pos: u32 = 0;
pub const DAC_SHSR1_TSAMPLE1_Msk: u32 = 0x3FF << DAC_SHSR1_TSAMPLE1_Pos;
pub const DAC_SHSR1_TSAMPLE1: u32 = DAC_SHSR1_TSAMPLE1_Msk;
pub const DAC_SHHR_THOLD1_Pos: u32 = 0;
pub const DAC_SHHR_THOLD1_Msk: u32 = 0x3FF << DAC_SHHR_THOLD1_Pos;
pub const DAC_SHHR_THOLD1: u32 = DAC_SHHR_THOLD1_Msk;
pub const DAC_SHRR_TREFRESH1_Pos: u32 = 0;
pub const DAC_SHRR_TREFRESH1_Msk: u32 = 0xFF << DAC_SHRR_TREFRESH1_Pos;
pub const DAC_SHRR_TREFRESH1: u32 = DAC_SHRR_TREFRESH1_Msk;
pub const LPTIM_ISR_CMPM_Pos: u32 = 0;
pub const LPTIM_ISR_CMPM_Msk: u32 = 0x1 << LPTIM_ISR_CMPM_Pos;
pub const LPTIM_ISR_CMPM: u32 = LPTIM_ISR_CMPM_Msk;
pub const LPTIM_ISR_ARRM_Pos: u32 = 1;
pub const LPTIM_ISR_ARRM_Msk: u32 = 0x1 << LPTIM_ISR_ARRM_Pos;
pub const LPTIM_ISR_ARRM: u32 = LPTIM_ISR_ARRM_Msk;
pub const LPTIM_ISR_EXTTRIG_Pos: u32 = 2;
pub const LPTIM_ISR_EXTTRIG_Msk: u32 = 0x1 << LPTIM_ISR_EXTTRIG_Pos;
pub const LPTIM_ISR_EXTTRIG: u32 = LPTIM_ISR_EXTTRIG_Msk;
pub const LPTIM_ISR_CMPOK_Pos: u32 = 3;
pub const LPTIM_ISR_CMPOK_Msk: u32 = 0x1 << LPTIM_ISR_CMPOK_Pos;
pub const LPTIM_ISR_CMPOK: u32 = LPTIM_ISR_CMPOK_Msk;
pub const LPTIM_ISR_ARROK_Pos: u32 = 4;
pub const LPTIM_ISR_ARROK_Msk: u32 = 0x1 << LPTIM_ISR_ARROK_Pos;
pub const LPTIM_ISR_ARROK: u32 = LPTIM_ISR_ARROK_Msk;
pub const LPTIM_ISR_UP_Pos: u32 = 5;
pub const LPTIM_ISR_UP_Msk: u32 = 0x1 << LPTIM_ISR_UP_Pos;
pub const LPTIM_ISR_UP: u32 = LPTIM_ISR_UP_Msk;
pub const LPTIM_ISR_DOWN_Pos: u32 = 6;
pub const LPTIM_ISR_DOWN_Msk: u32 = 0x1 << LPTIM_ISR_DOWN_Pos;
pub const LPTIM_ISR_DOWN: u32 = LPTIM_ISR_DOWN_Msk;
pub const LPTIM_ISR_UE_Pos: u32 = 7;
pub const LPTIM_ISR_UE_Msk: u32 = 0x1 << LPTIM_ISR_UE_Pos;
pub const LPTIM_ISR_UE: u32 = LPTIM_ISR_UE_Msk;
pub const LPTIM_ISR_REPOK_Pos: u32 = 8;
pub const LPTIM_ISR_REPOK_Msk: u32 = 0x1 << LPTIM_ISR_REPOK_Pos;
pub const LPTIM_ISR_REPOK: u32 = LPTIM_ISR_REPOK_Msk;
pub const LPTIM_ICR_CMPMCF_Pos: u32 = 0;
pub const LPTIM_ICR_CMPMCF_Msk: u32 = 0x1 << LPTIM_ICR_CMPMCF_Pos;
pub const LPTIM_ICR_CMPMCF: u32 = LPTIM_ICR_CMPMCF_Msk;
pub const LPTIM_ICR_ARRMCF_Pos: u32 = 1;
pub const LPTIM_ICR_ARRMCF_Msk: u32 = 0x1 << LPTIM_ICR_ARRMCF_Pos;
pub const LPTIM_ICR_ARRMCF: u32 = LPTIM_ICR_ARRMCF_Msk;
pub const LPTIM_ICR_EXTTRIGCF_Pos: u32 = 2;
pub const LPTIM_ICR_EXTTRIGCF_Msk: u32 = 0x1 << LPTIM_ICR_EXTTRIGCF_Pos;
pub const LPTIM_ICR_EXTTRIGCF: u32 = LPTIM_ICR_EXTTRIGCF_Msk;
pub const LPTIM_ICR_CMPOKCF_Pos: u32 = 3;
pub const LPTIM_ICR_CMPOKCF_Msk: u32 = 0x1 << LPTIM_ICR_CMPOKCF_Pos;
pub const LPTIM_ICR_CMPOKCF: u32 = LPTIM_ICR_CMPOKCF_Msk;
pub const LPTIM_ICR_ARROKCF_Pos: u32 = 4;
pub const LPTIM_ICR_ARROKCF_Msk: u32 = 0x1 << LPTIM_ICR_ARROKCF_Pos;
pub const LPTIM_ICR_ARROKCF: u32 = LPTIM_ICR_ARROKCF_Msk;
pub const LPTIM_ICR_UPCF_Pos: u32 = 5;
pub const LPTIM_ICR_UPCF_Msk: u32 = 0x1 << LPTIM_ICR_UPCF_Pos;
pub const LPTIM_ICR_UPCF: u32 = LPTIM_ICR_UPCF_Msk;
pub const LPTIM_ICR_DOWNCF_Pos: u32 = 6;
pub const LPTIM_ICR_DOWNCF_Msk: u32 = 0x1 << LPTIM_ICR_DOWNCF_Pos;
pub const LPTIM_ICR_DOWNCF: u32 = LPTIM_ICR_DOWNCF_Msk;
pub const LPTIM_ICR_UECF_Pos: u32 = 7;
pub const LPTIM_ICR_UECF_Msk: u32 = 0x1 << LPTIM_ICR_UECF_Pos;
pub const LPTIM_ICR_UECF: u32 = LPTIM_ICR_UECF_Msk;
pub const LPTIM_ICR_REPOKCF_Pos: u32 = 8;
pub const LPTIM_ICR_REPOKCF_Msk: u32 = 0x1 << LPTIM_ICR_REPOKCF_Pos;
pub const LPTIM_ICR_REPOKCF: u32 = LPTIM_ICR_REPOKCF_Msk;
pub const LPTIM_IER_CMPMIE_Pos: u32 = 0;
pub const LPTIM_IER_CMPMIE_Msk: u32 = 0x1 << LPTIM_IER_CMPMIE_Pos;
pub const LPTIM_IER_CMPMIE: u32 = LPTIM_IER_CMPMIE_Msk;
pub const LPTIM_IER_ARRMIE_Pos: u32 = 1;
pub const LPTIM_IER_ARRMIE_Msk: u32 = 0x1 << LPTIM_IER_ARRMIE_Pos;
pub const LPTIM_IER_ARRMIE: u32 = LPTIM_IER_ARRMIE_Msk;
pub const LPTIM_IER_EXTTRIGIE_Pos: u32 = 2;
pub const LPTIM_IER_EXTTRIGIE_Msk: u32 = 0x1 << LPTIM_IER_EXTTRIGIE_Pos;
pub const LPTIM_IER_EXTTRIGIE: u32 = LPTIM_IER_EXTTRIGIE_Msk;
pub const LPTIM_IER_CMPOKIE_Pos: u32 = 3;
pub const LPTIM_IER_CMPOKIE_Msk: u32 = 0x1 << LPTIM_IER_CMPOKIE_Pos;
pub const LPTIM_IER_CMPOKIE: u32 = LPTIM_IER_CMPOKIE_Msk;
pub const LPTIM_IER_ARROKIE_Pos: u32 = 4;
pub const LPTIM_IER_ARROKIE_Msk: u32 = 0x1 << LPTIM_IER_ARROKIE_Pos;
pub const LPTIM_IER_ARROKIE: u32 = LPTIM_IER_ARROKIE_Msk;
pub const LPTIM_IER_UPIE_Pos: u32 = 5;
pub const LPTIM_IER_UPIE_Msk: u32 = 0x1 << LPTIM_IER_UPIE_Pos;
pub const LPTIM_IER_UPIE: u32 = LPTIM_IER_UPIE_Msk;
pub const LPTIM_IER_DOWNIE_Pos: u32 = 6;
pub const LPTIM_IER_DOWNIE_Msk: u32 = 0x1 << LPTIM_IER_DOWNIE_Pos;
pub const LPTIM_IER_DOWNIE: u32 = LPTIM_IER_DOWNIE_Msk;
pub const LPTIM_IER_UEIE_Pos: u32 = 7;
pub const LPTIM_IER_UEIE_Msk: u32 = 0x1 << LPTIM_IER_UEIE_Pos;
pub const LPTIM_IER_UEIE: u32 = LPTIM_IER_UEIE_Msk;
pub const LPTIM_IER_REPOKIE_Pos: u32 = 8;
pub const LPTIM_IER_REPOKIE_Msk: u32 = 0x1 << LPTIM_IER_REPOKIE_Pos;
pub const LPTIM_IER_REPOKIE: u32 = LPTIM_IER_REPOKIE_Msk;
pub const LPTIM_CFGR_CKSEL_Pos: u32 = 0;
pub const LPTIM_CFGR_CKSEL_Msk: u32 = 0x1 << LPTIM_CFGR_CKSEL_Pos;
pub const LPTIM_CFGR_CKSEL: u32 = LPTIM_CFGR_CKSEL_Msk;
pub const LPTIM_CFGR_CKPOL_Pos: u32 = 1;
pub const LPTIM_CFGR_CKPOL_Msk: u32 = 0x3 << LPTIM_CFGR_CKPOL_Pos;
pub const LPTIM_CFGR_CKPOL: u32 = LPTIM_CFGR_CKPOL_Msk;
pub const LPTIM_CFGR_CKPOL_0: u32 = 0x1 << LPTIM_CFGR_CKPOL_Pos;
pub const LPTIM_CFGR_CKPOL_1: u32 = 0x2 << LPTIM_CFGR_CKPOL_Pos;
pub const LPTIM_CFGR_CKFLT_Pos: u32 = 3;
pub const LPTIM_CFGR_CKFLT_Msk: u32 = 0x3 << LPTIM_CFGR_CKFLT_Pos;
pub const LPTIM_CFGR_CKFLT: u32 = LPTIM_CFGR_CKFLT_Msk;
pub const LPTIM_CFGR_CKFLT_0: u32 = 0x1 << LPTIM_CFGR_CKFLT_Pos;
pub const LPTIM_CFGR_CKFLT_1: u32 = 0x2 << LPTIM_CFGR_CKFLT_Pos;
pub const LPTIM_CFGR_TRGFLT_Pos: u32 = 6;
pub const LPTIM_CFGR_TRGFLT_Msk: u32 = 0x3 << LPTIM_CFGR_TRGFLT_Pos;
pub const LPTIM_CFGR_TRGFLT: u32 = LPTIM_CFGR_TRGFLT_Msk;
pub const LPTIM_CFGR_TRGFLT_0: u32 = 0x1 << LPTIM_CFGR_TRGFLT_Pos;
pub const LPTIM_CFGR_TRGFLT_1: u32 = 0x2 << LPTIM_CFGR_TRGFLT_Pos;
pub const LPTIM_CFGR_PRESC_Pos: u32 = 9;
pub const LPTIM_CFGR_PRESC_Msk: u32 = 0x7 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_PRESC: u32 = LPTIM_CFGR_PRESC_Msk;
pub const LPTIM_CFGR_PRESC_0: u32 = 0x1 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_PRESC_1: u32 = 0x2 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_PRESC_2: u32 = 0x4 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_TRIGSEL_Pos: u32 = 13;
pub const LPTIM_CFGR_TRIGSEL_Msk: u32 = 0x7 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGSEL: u32 = LPTIM_CFGR_TRIGSEL_Msk;
pub const LPTIM_CFGR_TRIGSEL_0: u32 = 0x1 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGSEL_1: u32 = 0x2 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGSEL_2: u32 = 0x4 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGEN_Pos: u32 = 17;
pub const LPTIM_CFGR_TRIGEN_Msk: u32 = 0x3 << LPTIM_CFGR_TRIGEN_Pos;
pub const LPTIM_CFGR_TRIGEN: u32 = LPTIM_CFGR_TRIGEN_Msk;
pub const LPTIM_CFGR_TRIGEN_0: u32 = 0x1 << LPTIM_CFGR_TRIGEN_Pos;
pub const LPTIM_CFGR_TRIGEN_1: u32 = 0x2 << LPTIM_CFGR_TRIGEN_Pos;
pub const LPTIM_CFGR_TIMOUT_Pos: u32 = 19;
pub const LPTIM_CFGR_TIMOUT_Msk: u32 = 0x1 << LPTIM_CFGR_TIMOUT_Pos;
pub const LPTIM_CFGR_TIMOUT: u32 = LPTIM_CFGR_TIMOUT_Msk;
pub const LPTIM_CFGR_WAVE_Pos: u32 = 20;
pub const LPTIM_CFGR_WAVE_Msk: u32 = 0x1 << LPTIM_CFGR_WAVE_Pos;
pub const LPTIM_CFGR_WAVE: u32 = LPTIM_CFGR_WAVE_Msk;
pub const LPTIM_CFGR_WAVPOL_Pos: u32 = 21;
pub const LPTIM_CFGR_WAVPOL_Msk: u32 = 0x1 << LPTIM_CFGR_WAVPOL_Pos;
pub const LPTIM_CFGR_WAVPOL: u32 = LPTIM_CFGR_WAVPOL_Msk;
pub const LPTIM_CFGR_PRELOAD_Pos: u32 = 22;
pub const LPTIM_CFGR_PRELOAD_Msk: u32 = 0x1 << LPTIM_CFGR_PRELOAD_Pos;
pub const LPTIM_CFGR_PRELOAD: u32 = LPTIM_CFGR_PRELOAD_Msk;
pub const LPTIM_CFGR_COUNTMODE_Pos: u32 = 23;
pub const LPTIM_CFGR_COUNTMODE_Msk: u32 = 0x1 << LPTIM_CFGR_COUNTMODE_Pos;
pub const LPTIM_CFGR_COUNTMODE: u32 = LPTIM_CFGR_COUNTMODE_Msk;
pub const LPTIM_CFGR_ENC_Pos: u32 = 24;
pub const LPTIM_CFGR_ENC_Msk: u32 = 0x1 << LPTIM_CFGR_ENC_Pos;
pub const LPTIM_CFGR_ENC: u32 = LPTIM_CFGR_ENC_Msk;
pub const LPTIM_CR_ENABLE_Pos: u32 = 0;
pub const LPTIM_CR_ENABLE_Msk: u32 = 0x1 << LPTIM_CR_ENABLE_Pos;
pub const LPTIM_CR_ENABLE: u32 = LPTIM_CR_ENABLE_Msk;
pub const LPTIM_CR_SNGSTRT_Pos: u32 = 1;
pub const LPTIM_CR_SNGSTRT_Msk: u32 = 0x1 << LPTIM_CR_SNGSTRT_Pos;
pub const LPTIM_CR_SNGSTRT: u32 = LPTIM_CR_SNGSTRT_Msk;
pub const LPTIM_CR_CNTSTRT_Pos: u32 = 2;
pub const LPTIM_CR_CNTSTRT_Msk: u32 = 0x1 << LPTIM_CR_CNTSTRT_Pos;
pub const LPTIM_CR_CNTSTRT: u32 = LPTIM_CR_CNTSTRT_Msk;
pub const LPTIM_CR_COUNTRST_Pos: u32 = 3;
pub const LPTIM_CR_COUNTRST_Msk: u32 = 0x1 << LPTIM_CR_COUNTRST_Pos;
pub const LPTIM_CR_COUNTRST: u32 = LPTIM_CR_COUNTRST_Msk;
pub const LPTIM_CR_RSTARE_Pos: u32 = 4;
pub const LPTIM_CR_RSTARE_Msk: u32 = 0x1 << LPTIM_CR_RSTARE_Pos;
pub const LPTIM_CR_RSTARE: u32 = LPTIM_CR_RSTARE_Msk;
pub const LPTIM_CMP_CMP_Pos: u32 = 0;
pub const LPTIM_CMP_CMP_Msk: u32 = 0xFFFF << LPTIM_CMP_CMP_Pos;
pub const LPTIM_CMP_CMP: u32 = LPTIM_CMP_CMP_Msk;
pub const LPTIM_ARR_ARR_Pos: u32 = 0;
pub const LPTIM_ARR_ARR_Msk: u32 = 0xFFFF << LPTIM_ARR_ARR_Pos;
pub const LPTIM_ARR_ARR: u32 = LPTIM_ARR_ARR_Msk;
pub const LPTIM_CNT_CNT_Pos: u32 = 0;
pub const LPTIM_CNT_CNT_Msk: u32 = 0xFFFF << LPTIM_CNT_CNT_Pos;
pub const LPTIM_CNT_CNT: u32 = LPTIM_CNT_CNT_Msk;
pub const LPTIM_OR_OR_Pos: u32 = 0;
pub const LPTIM_OR_OR_Msk: u32 = 0x3 << LPTIM_OR_OR_Pos;
pub const LPTIM_OR_OR: u32 = LPTIM_OR_OR_Msk;
pub const LPTIM_OR_OR_0: u32 = 0x1 << LPTIM_OR_OR_Pos;
pub const LPTIM_OR_OR_1: u32 = 0x2 << LPTIM_OR_OR_Pos;
pub const LPTIM_RCR_REP_Pos: u32 = 0;
pub const LPTIM_RCR_REP_Msk: u32 = 0xFF << LPTIM_RCR_REP_Pos;
pub const LPTIM_RCR_REP: u32 = LPTIM_RCR_REP_Msk;
pub const USART_CR1_UE_Pos: u32 = 0;
pub const USART_CR1_UE_Msk: u32 = 0x1 << USART_CR1_UE_Pos;
pub const USART_CR1_UE: u32 = USART_CR1_UE_Msk;
pub const USART_CR1_UESM_Pos: u32 = 1;
pub const USART_CR1_UESM_Msk: u32 = 0x1 << USART_CR1_UESM_Pos;
pub const USART_CR1_UESM: u32 = USART_CR1_UESM_Msk;
pub const USART_CR1_RE_Pos: u32 = 2;
pub const USART_CR1_RE_Msk: u32 = 0x1 << USART_CR1_RE_Pos;
pub const USART_CR1_RE: u32 = USART_CR1_RE_Msk;
pub const USART_CR1_TE_Pos: u32 = 3;
pub const USART_CR1_TE_Msk: u32 = 0x1 << USART_CR1_TE_Pos;
pub const USART_CR1_TE: u32 = USART_CR1_TE_Msk;
pub const USART_CR1_IDLEIE_Pos: u32 = 4;
pub const USART_CR1_IDLEIE_Msk: u32 = 0x1 << USART_CR1_IDLEIE_Pos;
pub const USART_CR1_IDLEIE: u32 = USART_CR1_IDLEIE_Msk;
pub const USART_CR1_RXNEIE_RXFNEIE_Pos: u32 = 5;
pub const USART_CR1_RXNEIE_RXFNEIE_Msk: u32 = 0x1 << USART_CR1_RXNEIE_RXFNEIE_Pos;
pub const USART_CR1_RXNEIE_RXFNEIE: u32 = USART_CR1_RXNEIE_RXFNEIE_Msk;
pub const USART_CR1_TCIE_Pos: u32 = 6;
pub const USART_CR1_TCIE_Msk: u32 = 0x1 << USART_CR1_TCIE_Pos;
pub const USART_CR1_TCIE: u32 = USART_CR1_TCIE_Msk;
pub const USART_CR1_TXEIE_TXFNFIE_Pos: u32 = 7;
pub const USART_CR1_TXEIE_TXFNFIE_Msk: u32 = 0x1 << USART_CR1_TXEIE_TXFNFIE_Pos;
pub const USART_CR1_TXEIE_TXFNFIE: u32 = USART_CR1_TXEIE_TXFNFIE_Msk;
pub const USART_CR1_PEIE_Pos: u32 = 8;
pub const USART_CR1_PEIE_Msk: u32 = 0x1 << USART_CR1_PEIE_Pos;
pub const USART_CR1_PEIE: u32 = USART_CR1_PEIE_Msk;
pub const USART_CR1_PS_Pos: u32 = 9;
pub const USART_CR1_PS_Msk: u32 = 0x1 << USART_CR1_PS_Pos;
pub const USART_CR1_PS: u32 = USART_CR1_PS_Msk;
pub const USART_CR1_PCE_Pos: u32 = 10;
pub const USART_CR1_PCE_Msk: u32 = 0x1 << USART_CR1_PCE_Pos;
pub const USART_CR1_PCE: u32 = USART_CR1_PCE_Msk;
pub const USART_CR1_WAKE_Pos: u32 = 11;
pub const USART_CR1_WAKE_Msk: u32 = 0x1 << USART_CR1_WAKE_Pos;
pub const USART_CR1_WAKE: u32 = USART_CR1_WAKE_Msk;
pub const USART_CR1_M_Pos: u32 = 12;
pub const USART_CR1_M_Msk: u32 = 0x10001 << USART_CR1_M_Pos;
pub const USART_CR1_M: u32 = USART_CR1_M_Msk;
pub const USART_CR1_M0_Pos: u32 = 12;
pub const USART_CR1_M0_Msk: u32 = 0x1 << USART_CR1_M0_Pos;
pub const USART_CR1_M0: u32 = USART_CR1_M0_Msk;
pub const USART_CR1_MME_Pos: u32 = 13;
pub const USART_CR1_MME_Msk: u32 = 0x1 << USART_CR1_MME_Pos;
pub const USART_CR1_MME: u32 = USART_CR1_MME_Msk;
pub const USART_CR1_CMIE_Pos: u32 = 14;
pub const USART_CR1_CMIE_Msk: u32 = 0x1 << USART_CR1_CMIE_Pos;
pub const USART_CR1_CMIE: u32 = USART_CR1_CMIE_Msk;
pub const USART_CR1_OVER8_Pos: u32 = 15;
pub const USART_CR1_OVER8_Msk: u32 = 0x1 << USART_CR1_OVER8_Pos;
pub const USART_CR1_OVER8: u32 = USART_CR1_OVER8_Msk;
pub const USART_CR1_DEDT_Pos: u32 = 16;
pub const USART_CR1_DEDT_Msk: u32 = 0x1F << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT: u32 = USART_CR1_DEDT_Msk;
pub const USART_CR1_DEDT_0: u32 = 0x01 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_1: u32 = 0x02 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_2: u32 = 0x04 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_3: u32 = 0x08 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_4: u32 = 0x10 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEAT_Pos: u32 = 21;
pub const USART_CR1_DEAT_Msk: u32 = 0x1F << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT: u32 = USART_CR1_DEAT_Msk;
pub const USART_CR1_DEAT_0: u32 = 0x01 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_1: u32 = 0x02 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_2: u32 = 0x04 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_3: u32 = 0x08 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_4: u32 = 0x10 << USART_CR1_DEAT_Pos;
pub const USART_CR1_RTOIE_Pos: u32 = 26;
pub const USART_CR1_RTOIE_Msk: u32 = 0x1 << USART_CR1_RTOIE_Pos;
pub const USART_CR1_RTOIE: u32 = USART_CR1_RTOIE_Msk;
pub const USART_CR1_EOBIE_Pos: u32 = 27;
pub const USART_CR1_EOBIE_Msk: u32 = 0x1 << USART_CR1_EOBIE_Pos;
pub const USART_CR1_EOBIE: u32 = USART_CR1_EOBIE_Msk;
pub const USART_CR1_M1_Pos: u32 = 28;
pub const USART_CR1_M1_Msk: u32 = 0x1 << USART_CR1_M1_Pos;
pub const USART_CR1_M1: u32 = USART_CR1_M1_Msk;
pub const USART_CR1_FIFOEN_Pos: u32 = 29;
pub const USART_CR1_FIFOEN_Msk: u32 = 0x1 << USART_CR1_FIFOEN_Pos;
pub const USART_CR1_FIFOEN: u32 = USART_CR1_FIFOEN_Msk;
pub const USART_CR1_TXFEIE_Pos: u32 = 30;
pub const USART_CR1_TXFEIE_Msk: u32 = 0x1 << USART_CR1_TXFEIE_Pos;
pub const USART_CR1_TXFEIE: u32 = USART_CR1_TXFEIE_Msk;
pub const USART_CR1_RXFFIE_Pos: u32 = 31;
pub const USART_CR1_RXFFIE_Msk: u32 = 0x1 << USART_CR1_RXFFIE_Pos;
pub const USART_CR1_RXFFIE: u32 = USART_CR1_RXFFIE_Msk;
pub const USART_CR2_SLVEN_Pos: u32 = 0;
pub const USART_CR2_SLVEN_Msk: u32 = 0x1 << USART_CR2_SLVEN_Pos;
pub const USART_CR2_SLVEN: u32 = USART_CR2_SLVEN_Msk;
pub const USART_CR2_DIS_NSS_Pos: u32 = 3;
pub const USART_CR2_DIS_NSS_Msk: u32 = 0x1 << USART_CR2_DIS_NSS_Pos;
pub const USART_CR2_DIS_NSS: u32 = USART_CR2_DIS_NSS_Msk;
pub const USART_CR2_ADDM7_Pos: u32 = 4;
pub const USART_CR2_ADDM7_Msk: u32 = 0x1 << USART_CR2_ADDM7_Pos;
pub const USART_CR2_ADDM7: u32 = USART_CR2_ADDM7_Msk;
pub const USART_CR2_LBDL_Pos: u32 = 5;
pub const USART_CR2_LBDL_Msk: u32 = 0x1 << USART_CR2_LBDL_Pos;
pub const USART_CR2_LBDL: u32 = USART_CR2_LBDL_Msk;
pub const USART_CR2_LBDIE_Pos: u32 = 6;
pub const USART_CR2_LBDIE_Msk: u32 = 0x1 << USART_CR2_LBDIE_Pos;
pub const USART_CR2_LBDIE: u32 = USART_CR2_LBDIE_Msk;
pub const USART_CR2_LBCL_Pos: u32 = 8;
pub const USART_CR2_LBCL_Msk: u32 = 0x1 << USART_CR2_LBCL_Pos;
pub const USART_CR2_LBCL: u32 = USART_CR2_LBCL_Msk;
pub const USART_CR2_CPHA_Pos: u32 = 9;
pub const USART_CR2_CPHA_Msk: u32 = 0x1 << USART_CR2_CPHA_Pos;
pub const USART_CR2_CPHA: u32 = USART_CR2_CPHA_Msk;
pub const USART_CR2_CPOL_Pos: u32 = 10;
pub const USART_CR2_CPOL_Msk: u32 = 0x1 << USART_CR2_CPOL_Pos;
pub const USART_CR2_CPOL: u32 = USART_CR2_CPOL_Msk;
pub const USART_CR2_CLKEN_Pos: u32 = 11;
pub const USART_CR2_CLKEN_Msk: u32 = 0x1 << USART_CR2_CLKEN_Pos;
pub const USART_CR2_CLKEN: u32 = USART_CR2_CLKEN_Msk;
pub const USART_CR2_STOP_Pos: u32 = 12;
pub const USART_CR2_STOP_Msk: u32 = 0x3 << USART_CR2_STOP_Pos;
pub const USART_CR2_STOP: u32 = USART_CR2_STOP_Msk;
pub const USART_CR2_STOP_0: u32 = 0x1 << USART_CR2_STOP_Pos;
pub const USART_CR2_STOP_1: u32 = 0x2 << USART_CR2_STOP_Pos;
pub const USART_CR2_LINEN_Pos: u32 = 14;
pub const USART_CR2_LINEN_Msk: u32 = 0x1 << USART_CR2_LINEN_Pos;
pub const USART_CR2_LINEN: u32 = USART_CR2_LINEN_Msk;
pub const USART_CR2_SWAP_Pos: u32 = 15;
pub const USART_CR2_SWAP_Msk: u32 = 0x1 << USART_CR2_SWAP_Pos;
pub const USART_CR2_SWAP: u32 = USART_CR2_SWAP_Msk;
pub const USART_CR2_RXINV_Pos: u32 = 16;
pub const USART_CR2_RXINV_Msk: u32 = 0x1 << USART_CR2_RXINV_Pos;
pub const USART_CR2_RXINV: u32 = USART_CR2_RXINV_Msk;
pub const USART_CR2_TXINV_Pos: u32 = 17;
pub const USART_CR2_TXINV_Msk: u32 = 0x1 << USART_CR2_TXINV_Pos;
pub const USART_CR2_TXINV: u32 = USART_CR2_TXINV_Msk;
pub const USART_CR2_DATAINV_Pos: u32 = 18;
pub const USART_CR2_DATAINV_Msk: u32 = 0x1 << USART_CR2_DATAINV_Pos;
pub const USART_CR2_DATAINV: u32 = USART_CR2_DATAINV_Msk;
pub const USART_CR2_MSBFIRST_Pos: u32 = 19;
pub const USART_CR2_MSBFIRST_Msk: u32 = 0x1 << USART_CR2_MSBFIRST_Pos;
pub const USART_CR2_MSBFIRST: u32 = USART_CR2_MSBFIRST_Msk;
pub const USART_CR2_ABREN_Pos: u32 = 20;
pub const USART_CR2_ABREN_Msk: u32 = 0x1 << USART_CR2_ABREN_Pos;
pub const USART_CR2_ABREN: u32 = USART_CR2_ABREN_Msk;
pub const USART_CR2_ABRMODE_Pos: u32 = 21;
pub const USART_CR2_ABRMODE_Msk: u32 = 0x3 << USART_CR2_ABRMODE_Pos;
pub const USART_CR2_ABRMODE: u32 = USART_CR2_ABRMODE_Msk;
pub const USART_CR2_ABRMODE_0: u32 = 0x1 << USART_CR2_ABRMODE_Pos;
pub const USART_CR2_ABRMODE_1: u32 = 0x2 << USART_CR2_ABRMODE_Pos;
pub const USART_CR2_RTOEN_Pos: u32 = 23;
pub const USART_CR2_RTOEN_Msk: u32 = 0x1 << USART_CR2_RTOEN_Pos;
pub const USART_CR2_RTOEN: u32 = USART_CR2_RTOEN_Msk;
pub const USART_CR2_ADD_Pos: u32 = 24;
pub const USART_CR2_ADD_Msk: u32 = 0xFF << USART_CR2_ADD_Pos;
pub const USART_CR2_ADD: u32 = USART_CR2_ADD_Msk;
pub const USART_CR3_EIE_Pos: u32 = 0;
pub const USART_CR3_EIE_Msk: u32 = 0x1 << USART_CR3_EIE_Pos;
pub const USART_CR3_EIE: u32 = USART_CR3_EIE_Msk;
pub const USART_CR3_IREN_Pos: u32 = 1;
pub const USART_CR3_IREN_Msk: u32 = 0x1 << USART_CR3_IREN_Pos;
pub const USART_CR3_IREN: u32 = USART_CR3_IREN_Msk;
pub const USART_CR3_IRLP_Pos: u32 = 2;
pub const USART_CR3_IRLP_Msk: u32 = 0x1 << USART_CR3_IRLP_Pos;
pub const USART_CR3_IRLP: u32 = USART_CR3_IRLP_Msk;
pub const USART_CR3_HDSEL_Pos: u32 = 3;
pub const USART_CR3_HDSEL_Msk: u32 = 0x1 << USART_CR3_HDSEL_Pos;
pub const USART_CR3_HDSEL: u32 = USART_CR3_HDSEL_Msk;
pub const USART_CR3_NACK_Pos: u32 = 4;
pub const USART_CR3_NACK_Msk: u32 = 0x1 << USART_CR3_NACK_Pos;
pub const USART_CR3_NACK: u32 = USART_CR3_NACK_Msk;
pub const USART_CR3_SCEN_Pos: u32 = 5;
pub const USART_CR3_SCEN_Msk: u32 = 0x1 << USART_CR3_SCEN_Pos;
pub const USART_CR3_SCEN: u32 = USART_CR3_SCEN_Msk;
pub const USART_CR3_DMAR_Pos: u32 = 6;
pub const USART_CR3_DMAR_Msk: u32 = 0x1 << USART_CR3_DMAR_Pos;
pub const USART_CR3_DMAR: u32 = USART_CR3_DMAR_Msk;
pub const USART_CR3_DMAT_Pos: u32 = 7;
pub const USART_CR3_DMAT_Msk: u32 = 0x1 << USART_CR3_DMAT_Pos;
pub const USART_CR3_DMAT: u32 = USART_CR3_DMAT_Msk;
pub const USART_CR3_RTSE_Pos: u32 = 8;
pub const USART_CR3_RTSE_Msk: u32 = 0x1 << USART_CR3_RTSE_Pos;
pub const USART_CR3_RTSE: u32 = USART_CR3_RTSE_Msk;
pub const USART_CR3_CTSE_Pos: u32 = 9;
pub const USART_CR3_CTSE_Msk: u32 = 0x1 << USART_CR3_CTSE_Pos;
pub const USART_CR3_CTSE: u32 = USART_CR3_CTSE_Msk;
pub const USART_CR3_CTSIE_Pos: u32 = 10;
pub const USART_CR3_CTSIE_Msk: u32 = 0x1 << USART_CR3_CTSIE_Pos;
pub const USART_CR3_CTSIE: u32 = USART_CR3_CTSIE_Msk;
pub const USART_CR3_ONEBIT_Pos: u32 = 11;
pub const USART_CR3_ONEBIT_Msk: u32 = 0x1 << USART_CR3_ONEBIT_Pos;
pub const USART_CR3_ONEBIT: u32 = USART_CR3_ONEBIT_Msk;
pub const USART_CR3_OVRDIS_Pos: u32 = 12;
pub const USART_CR3_OVRDIS_Msk: u32 = 0x1 << USART_CR3_OVRDIS_Pos;
pub const USART_CR3_OVRDIS: u32 = USART_CR3_OVRDIS_Msk;
pub const USART_CR3_DDRE_Pos: u32 = 13;
pub const USART_CR3_DDRE_Msk: u32 = 0x1 << USART_CR3_DDRE_Pos;
pub const USART_CR3_DDRE: u32 = USART_CR3_DDRE_Msk;
pub const USART_CR3_DEM_Pos: u32 = 14;
pub const USART_CR3_DEM_Msk: u32 = 0x1 << USART_CR3_DEM_Pos;
pub const USART_CR3_DEM: u32 = USART_CR3_DEM_Msk;
pub const USART_CR3_DEP_Pos: u32 = 15;
pub const USART_CR3_DEP_Msk: u32 = 0x1 << USART_CR3_DEP_Pos;
pub const USART_CR3_DEP: u32 = USART_CR3_DEP_Msk;
pub const USART_CR3_SCARCNT_Pos: u32 = 17;
pub const USART_CR3_SCARCNT_Msk: u32 = 0x7 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_SCARCNT: u32 = USART_CR3_SCARCNT_Msk;
pub const USART_CR3_SCARCNT_0: u32 = 0x1 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_SCARCNT_1: u32 = 0x2 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_SCARCNT_2: u32 = 0x4 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_WUS_Pos: u32 = 20;
pub const USART_CR3_WUS_Msk: u32 = 0x3 << USART_CR3_WUS_Pos;
pub const USART_CR3_WUS: u32 = USART_CR3_WUS_Msk;
pub const USART_CR3_WUS_0: u32 = 0x1 << USART_CR3_WUS_Pos;
pub const USART_CR3_WUS_1: u32 = 0x2 << USART_CR3_WUS_Pos;
pub const USART_CR3_WUFIE_Pos: u32 = 22;
pub const USART_CR3_WUFIE_Msk: u32 = 0x1 << USART_CR3_WUFIE_Pos;
pub const USART_CR3_WUFIE: u32 = USART_CR3_WUFIE_Msk;
pub const USART_CR3_TXFTIE_Pos: u32 = 23;
pub const USART_CR3_TXFTIE_Msk: u32 = 0x1 << USART_CR3_TXFTIE_Pos;
pub const USART_CR3_TXFTIE: u32 = USART_CR3_TXFTIE_Msk;
pub const USART_CR3_TCBGTIE_Pos: u32 = 24;
pub const USART_CR3_TCBGTIE_Msk: u32 = 0x1 << USART_CR3_TCBGTIE_Pos;
pub const USART_CR3_TCBGTIE: u32 = USART_CR3_TCBGTIE_Msk;
pub const USART_CR3_RXFTCFG_Pos: u32 = 25;
pub const USART_CR3_RXFTCFG_Msk: u32 = 0x7 << USART_CR3_RXFTCFG_Pos;
pub const USART_CR3_RXFTCFG: u32 = USART_CR3_RXFTCFG_Msk;
pub const USART_CR3_RXFTCFG_0: u32 = 0x1 << USART_CR3_RXFTCFG_Pos;
pub const USART_CR3_RXFTCFG_1: u32 = 0x2 << USART_CR3_RXFTCFG_Pos;
pub const USART_CR3_RXFTCFG_2: u32 = 0x4 << USART_CR3_RXFTCFG_Pos;
pub const USART_CR3_RXFTIE_Pos: u32 = 28;
pub const USART_CR3_RXFTIE_Msk: u32 = 0x1 << USART_CR3_RXFTIE_Pos;
pub const USART_CR3_RXFTIE: u32 = USART_CR3_RXFTIE_Msk;
pub const USART_CR3_TXFTCFG_Pos: u32 = 29;
pub const USART_CR3_TXFTCFG_Msk: u32 = 0x7 << USART_CR3_TXFTCFG_Pos;
pub const USART_CR3_TXFTCFG: u32 = USART_CR3_TXFTCFG_Msk;
pub const USART_CR3_TXFTCFG_0: u32 = 0x1 << USART_CR3_TXFTCFG_Pos;
pub const USART_CR3_TXFTCFG_1: u32 = 0x2 << USART_CR3_TXFTCFG_Pos;
pub const USART_CR3_TXFTCFG_2: u32 = 0x4 << USART_CR3_TXFTCFG_Pos;
pub const USART_BRR_BRR: u32 = 0xFFFF;
pub const USART_GTPR_PSC_Pos: u32 = 0;
pub const USART_GTPR_PSC_Msk: u32 = 0xFF << USART_GTPR_PSC_Pos;
pub const USART_GTPR_PSC: u32 = USART_GTPR_PSC_Msk;
pub const USART_GTPR_GT_Pos: u32 = 8;
pub const USART_GTPR_GT_Msk: u32 = 0xFF << USART_GTPR_GT_Pos;
pub const USART_GTPR_GT: u32 = USART_GTPR_GT_Msk;
pub const USART_RTOR_RTO_Pos: u32 = 0;
pub const USART_RTOR_RTO_Msk: u32 = 0xFFFFFF << USART_RTOR_RTO_Pos;
pub const USART_RTOR_RTO: u32 = USART_RTOR_RTO_Msk;
pub const USART_RTOR_BLEN_Pos: u32 = 24;
pub const USART_RTOR_BLEN_Msk: u32 = 0xFF << USART_RTOR_BLEN_Pos;
pub const USART_RTOR_BLEN: u32 = USART_RTOR_BLEN_Msk;
pub const USART_RQR_ABRRQ: u32 = 0x0001;
pub const USART_RQR_SBKRQ: u32 = 0x0002;
pub const USART_RQR_MMRQ: u32 = 0x0004;
pub const USART_RQR_RXFRQ: u32 = 0x0008;
pub const USART_RQR_TXFRQ: u32 = 0x0010;
pub const USART_ISR_PE_Pos: u32 = 0;
pub const USART_ISR_PE_Msk: u32 = 0x1 << USART_ISR_PE_Pos;
pub const USART_ISR_PE: u32 = USART_ISR_PE_Msk;
pub const USART_ISR_FE_Pos: u32 = 1;
pub const USART_ISR_FE_Msk: u32 = 0x1 << USART_ISR_FE_Pos;
pub const USART_ISR_FE: u32 = USART_ISR_FE_Msk;
pub const USART_ISR_NE_Pos: u32 = 2;
pub const USART_ISR_NE_Msk: u32 = 0x1 << USART_ISR_NE_Pos;
pub const USART_ISR_NE: u32 = USART_ISR_NE_Msk;
pub const USART_ISR_ORE_Pos: u32 = 3;
pub const USART_ISR_ORE_Msk: u32 = 0x1 << USART_ISR_ORE_Pos;
pub const USART_ISR_ORE: u32 = USART_ISR_ORE_Msk;
pub const USART_ISR_IDLE_Pos: u32 = 4;
pub const USART_ISR_IDLE_Msk: u32 = 0x1 << USART_ISR_IDLE_Pos;
pub const USART_ISR_IDLE: u32 = USART_ISR_IDLE_Msk;
pub const USART_ISR_RXNE_RXFNE_Pos: u32 = 5;
pub const USART_ISR_RXNE_RXFNE_Msk: u32 = 0x1 << USART_ISR_RXNE_RXFNE_Pos;
pub const USART_ISR_RXNE_RXFNE: u32 = USART_ISR_RXNE_RXFNE_Msk;
pub const USART_ISR_TC_Pos: u32 = 6;
pub const USART_ISR_TC_Msk: u32 = 0x1 << USART_ISR_TC_Pos;
pub const USART_ISR_TC: u32 = USART_ISR_TC_Msk;
pub const USART_ISR_TXE_TXFNF_Pos: u32 = 7;
pub const USART_ISR_TXE_TXFNF_Msk: u32 = 0x1 << USART_ISR_TXE_TXFNF_Pos;
pub const USART_ISR_TXE_TXFNF: u32 = USART_ISR_TXE_TXFNF_Msk;
pub const USART_ISR_LBDF_Pos: u32 = 8;
pub const USART_ISR_LBDF_Msk: u32 = 0x1 << USART_ISR_LBDF_Pos;
pub const USART_ISR_LBDF: u32 = USART_ISR_LBDF_Msk;
pub const USART_ISR_CTSIF_Pos: u32 = 9;
pub const USART_ISR_CTSIF_Msk: u32 = 0x1 << USART_ISR_CTSIF_Pos;
pub const USART_ISR_CTSIF: u32 = USART_ISR_CTSIF_Msk;
pub const USART_ISR_CTS_Pos: u32 = 10;
pub const USART_ISR_CTS_Msk: u32 = 0x1 << USART_ISR_CTS_Pos;
pub const USART_ISR_CTS: u32 = USART_ISR_CTS_Msk;
pub const USART_ISR_RTOF_Pos: u32 = 11;
pub const USART_ISR_RTOF_Msk: u32 = 0x1 << USART_ISR_RTOF_Pos;
pub const USART_ISR_RTOF: u32 = USART_ISR_RTOF_Msk;
pub const USART_ISR_EOBF_Pos: u32 = 12;
pub const USART_ISR_EOBF_Msk: u32 = 0x1 << USART_ISR_EOBF_Pos;
pub const USART_ISR_EOBF: u32 = USART_ISR_EOBF_Msk;
pub const USART_ISR_UDR_Pos: u32 = 13;
pub const USART_ISR_UDR_Msk: u32 = 0x1 << USART_ISR_UDR_Pos;
pub const USART_ISR_UDR: u32 = USART_ISR_UDR_Msk;
pub const USART_ISR_ABRE_Pos: u32 = 14;
pub const USART_ISR_ABRE_Msk: u32 = 0x1 << USART_ISR_ABRE_Pos;
pub const USART_ISR_ABRE: u32 = USART_ISR_ABRE_Msk;
pub const USART_ISR_ABRF_Pos: u32 = 15;
pub const USART_ISR_ABRF_Msk: u32 = 0x1 << USART_ISR_ABRF_Pos;
pub const USART_ISR_ABRF: u32 = USART_ISR_ABRF_Msk;
pub const USART_ISR_BUSY_Pos: u32 = 16;
pub const USART_ISR_BUSY_Msk: u32 = 0x1 << USART_ISR_BUSY_Pos;
pub const USART_ISR_BUSY: u32 = USART_ISR_BUSY_Msk;
pub const USART_ISR_CMF_Pos: u32 = 17;
pub const USART_ISR_CMF_Msk: u32 = 0x1 << USART_ISR_CMF_Pos;
pub const USART_ISR_CMF: u32 = USART_ISR_CMF_Msk;
pub const USART_ISR_SBKF_Pos: u32 = 18;
pub const USART_ISR_SBKF_Msk: u32 = 0x1 << USART_ISR_SBKF_Pos;
pub const USART_ISR_SBKF: u32 = USART_ISR_SBKF_Msk;
pub const USART_ISR_RWU_Pos: u32 = 19;
pub const USART_ISR_RWU_Msk: u32 = 0x1 << USART_ISR_RWU_Pos;
pub const USART_ISR_RWU: u32 = USART_ISR_RWU_Msk;
pub const USART_ISR_WUF_Pos: u32 = 20;
pub const USART_ISR_WUF_Msk: u32 = 0x1 << USART_ISR_WUF_Pos;
pub const USART_ISR_WUF: u32 = USART_ISR_WUF_Msk;
pub const USART_ISR_TEACK_Pos: u32 = 21;
pub const USART_ISR_TEACK_Msk: u32 = 0x1 << USART_ISR_TEACK_Pos;
pub const USART_ISR_TEACK: u32 = USART_ISR_TEACK_Msk;
pub const USART_ISR_REACK_Pos: u32 = 22;
pub const USART_ISR_REACK_Msk: u32 = 0x1 << USART_ISR_REACK_Pos;
pub const USART_ISR_REACK: u32 = USART_ISR_REACK_Msk;
pub const USART_ISR_TXFE_Pos: u32 = 23;
pub const USART_ISR_TXFE_Msk: u32 = 0x1 << USART_ISR_TXFE_Pos;
pub const USART_ISR_TXFE: u32 = USART_ISR_TXFE_Msk;
pub const USART_ISR_RXFF_Pos: u32 = 24;
pub const USART_ISR_RXFF_Msk: u32 = 0x1 << USART_ISR_RXFF_Pos;
pub const USART_ISR_RXFF: u32 = USART_ISR_RXFF_Msk;
pub const USART_ISR_TCBGT_Pos: u32 = 25;
pub const USART_ISR_TCBGT_Msk: u32 = 0x1 << USART_ISR_TCBGT_Pos;
pub const USART_ISR_TCBGT: u32 = USART_ISR_TCBGT_Msk;
pub const USART_ISR_RXFT_Pos: u32 = 26;
pub const USART_ISR_RXFT_Msk: u32 = 0x1 << USART_ISR_RXFT_Pos;
pub const USART_ISR_RXFT: u32 = USART_ISR_RXFT_Msk;
pub const USART_ISR_TXFT_Pos: u32 = 27;
pub const USART_ISR_TXFT_Msk: u32 = 0x1 << USART_ISR_TXFT_Pos;
pub const USART_ISR_TXFT: u32 = USART_ISR_TXFT_Msk;
pub const USART_ICR_PECF_Pos: u32 = 0;
pub const USART_ICR_PECF_Msk: u32 = 0x1 << USART_ICR_PECF_Pos;
pub const USART_ICR_PECF: u32 = USART_ICR_PECF_Msk;
pub const USART_ICR_FECF_Pos: u32 = 1;
pub const USART_ICR_FECF_Msk: u32 = 0x1 << USART_ICR_FECF_Pos;
pub const USART_ICR_FECF: u32 = USART_ICR_FECF_Msk;
pub const USART_ICR_NECF_Pos: u32 = 2;
pub const USART_ICR_NECF_Msk: u32 = 0x1 << USART_ICR_NECF_Pos;
pub const USART_ICR_NECF: u32 = USART_ICR_NECF_Msk;
pub const USART_ICR_ORECF_Pos: u32 = 3;
pub const USART_ICR_ORECF_Msk: u32 = 0x1 << USART_ICR_ORECF_Pos;
pub const USART_ICR_ORECF: u32 = USART_ICR_ORECF_Msk;
pub const USART_ICR_IDLECF_Pos: u32 = 4;
pub const USART_ICR_IDLECF_Msk: u32 = 0x1 << USART_ICR_IDLECF_Pos;
pub const USART_ICR_IDLECF: u32 = USART_ICR_IDLECF_Msk;
pub const USART_ICR_TXFECF_Pos: u32 = 5;
pub const USART_ICR_TXFECF_Msk: u32 = 0x1 << USART_ICR_TXFECF_Pos;
pub const USART_ICR_TXFECF: u32 = USART_ICR_TXFECF_Msk;
pub const USART_ICR_TCCF_Pos: u32 = 6;
pub const USART_ICR_TCCF_Msk: u32 = 0x1 << USART_ICR_TCCF_Pos;
pub const USART_ICR_TCCF: u32 = USART_ICR_TCCF_Msk;
pub const USART_ICR_TCBGTCF_Pos: u32 = 7;
pub const USART_ICR_TCBGTCF_Msk: u32 = 0x1 << USART_ICR_TCBGTCF_Pos;
pub const USART_ICR_TCBGTCF: u32 = USART_ICR_TCBGTCF_Msk;
pub const USART_ICR_LBDCF_Pos: u32 = 8;
pub const USART_ICR_LBDCF_Msk: u32 = 0x1 << USART_ICR_LBDCF_Pos;
pub const USART_ICR_LBDCF: u32 = USART_ICR_LBDCF_Msk;
pub const USART_ICR_CTSCF_Pos: u32 = 9;
pub const USART_ICR_CTSCF_Msk: u32 = 0x1 << USART_ICR_CTSCF_Pos;
pub const USART_ICR_CTSCF: u32 = USART_ICR_CTSCF_Msk;
pub const USART_ICR_RTOCF_Pos: u32 = 11;
pub const USART_ICR_RTOCF_Msk: u32 = 0x1 << USART_ICR_RTOCF_Pos;
pub const USART_ICR_RTOCF: u32 = USART_ICR_RTOCF_Msk;
pub const USART_ICR_EOBCF_Pos: u32 = 12;
pub const USART_ICR_EOBCF_Msk: u32 = 0x1 << USART_ICR_EOBCF_Pos;
pub const USART_ICR_EOBCF: u32 = USART_ICR_EOBCF_Msk;
pub const USART_ICR_UDRCF_Pos: u32 = 13;
pub const USART_ICR_UDRCF_Msk: u32 = 0x1 << USART_ICR_UDRCF_Pos;
pub const USART_ICR_UDRCF: u32 = USART_ICR_UDRCF_Msk;
pub const USART_ICR_CMCF_Pos: u32 = 17;
pub const USART_ICR_CMCF_Msk: u32 = 0x1 << USART_ICR_CMCF_Pos;
pub const USART_ICR_CMCF: u32 = USART_ICR_CMCF_Msk;
pub const USART_ICR_WUCF_Pos: u32 = 20;
pub const USART_ICR_WUCF_Msk: u32 = 0x1 << USART_ICR_WUCF_Pos;
pub const USART_ICR_WUCF: u32 = USART_ICR_WUCF_Msk;
pub const USART_RDR_RDR_Pos: u32 = 0;
pub const USART_RDR_RDR_Msk: u32 = 0x1FF << USART_RDR_RDR_Pos;
pub const USART_RDR_RDR: u32 = USART_RDR_RDR_Msk;
pub const USART_TDR_TDR_Pos: u32 = 0;
pub const USART_TDR_TDR_Msk: u32 = 0x1FF << USART_TDR_TDR_Pos;
pub const USART_TDR_TDR: u32 = USART_TDR_TDR_Msk;
pub const USART_PRESC_PRESCALER_Pos: u32 = 0;
pub const USART_PRESC_PRESCALER_Msk: u32 = 0xF << USART_PRESC_PRESCALER_Pos;
pub const USART_PRESC_PRESCALER: u32 = USART_PRESC_PRESCALER_Msk;
pub const USART_PRESC_PRESCALER_0: u32 = 0x1 << USART_PRESC_PRESCALER_Pos;
pub const USART_PRESC_PRESCALER_1: u32 = 0x2 << USART_PRESC_PRESCALER_Pos;
pub const USART_PRESC_PRESCALER_2: u32 = 0x4 << USART_PRESC_PRESCALER_Pos;
pub const USART_PRESC_PRESCALER_3: u32 = 0x8 << USART_PRESC_PRESCALER_Pos;
pub const CRC_DR_DR_Pos: u32 = 0;
pub const CRC_DR_DR_Msk: u32 = 0xFFFFFFFF << CRC_DR_DR_Pos;
pub const CRC_DR_DR: u32 = CRC_DR_DR_Msk;
pub const CRC_IDR_IDR_Pos: u32 = 0;
pub const CRC_IDR_IDR_Msk: u32 = 0xFFFFFFFF << CRC_IDR_IDR_Pos;
pub const CRC_IDR_IDR: u32 = CRC_IDR_IDR_Msk;
pub const CRC_CR_RESET_Pos: u32 = 0;
pub const CRC_CR_RESET_Msk: u32 = 0x1 << CRC_CR_RESET_Pos;
pub const CRC_CR_RESET: u32 = CRC_CR_RESET_Msk;
pub const CRC_CR_POLYSIZE_Pos: u32 = 3;
pub const CRC_CR_POLYSIZE_Msk: u32 = 0x3 << CRC_CR_POLYSIZE_Pos;
pub const CRC_CR_POLYSIZE: u32 = CRC_CR_POLYSIZE_Msk;
pub const CRC_CR_POLYSIZE_0: u32 = 0x1 << CRC_CR_POLYSIZE_Pos;
pub const CRC_CR_POLYSIZE_1: u32 = 0x2 << CRC_CR_POLYSIZE_Pos;
pub const CRC_CR_REV_IN_Pos: u32 = 5;
pub const CRC_CR_REV_IN_Msk: u32 = 0x3 << CRC_CR_REV_IN_Pos;
pub const CRC_CR_REV_IN: u32 = CRC_CR_REV_IN_Msk;
pub const CRC_CR_REV_IN_0: u32 = 0x1 << CRC_CR_REV_IN_Pos;
pub const CRC_CR_REV_IN_1: u32 = 0x2 << CRC_CR_REV_IN_Pos;
pub const CRC_CR_REV_OUT_Pos: u32 = 7;
pub const CRC_CR_REV_OUT_Msk: u32 = 0x1 << CRC_CR_REV_OUT_Pos;
pub const CRC_CR_REV_OUT: u32 = CRC_CR_REV_OUT_Msk;
pub const CRC_INIT_INIT_Pos: u32 = 0;
pub const CRC_INIT_INIT_Msk: u32 = 0xFFFFFFFF << CRC_INIT_INIT_Pos;
pub const CRC_INIT_INIT: u32 = CRC_INIT_INIT_Msk;
pub const CRC_POL_POL_Pos: u32 = 0;
pub const CRC_POL_POL_Msk: u32 = 0xFFFFFFFF << CRC_POL_POL_Pos;
pub const CRC_POL_POL: u32 = CRC_POL_POL_Msk;
pub const AES_CR_EN_Pos: u32 = 0;
pub const AES_CR_EN_Msk: u32 = 0x1 << AES_CR_EN_Pos;
pub const AES_CR_EN: u32 = AES_CR_EN_Msk;
pub const AES_CR_DATATYPE_Pos: u32 = 1;
pub const AES_CR_DATATYPE_Msk: u32 = 0x3 << AES_CR_DATATYPE_Pos;
pub const AES_CR_DATATYPE: u32 = AES_CR_DATATYPE_Msk;
pub const AES_CR_DATATYPE_0: u32 = 0x1 << AES_CR_DATATYPE_Pos;
pub const AES_CR_DATATYPE_1: u32 = 0x2 << AES_CR_DATATYPE_Pos;
pub const AES_CR_MODE_Pos: u32 = 3;
pub const AES_CR_MODE_Msk: u32 = 0x3 << AES_CR_MODE_Pos;
pub const AES_CR_MODE: u32 = AES_CR_MODE_Msk;
pub const AES_CR_MODE_0: u32 = 0x1 << AES_CR_MODE_Pos;
pub const AES_CR_MODE_1: u32 = 0x2 << AES_CR_MODE_Pos;
pub const AES_CR_CHMOD_Pos: u32 = 5;
pub const AES_CR_CHMOD_Msk: u32 = 0x803 << AES_CR_CHMOD_Pos;
pub const AES_CR_CHMOD: u32 = AES_CR_CHMOD_Msk;
pub const AES_CR_CHMOD_0: u32 = 0x001 << AES_CR_CHMOD_Pos;
pub const AES_CR_CHMOD_1: u32 = 0x002 << AES_CR_CHMOD_Pos;
pub const AES_CR_CHMOD_2: u32 = 0x800 << AES_CR_CHMOD_Pos;
pub const AES_CR_CCFC_Pos: u32 = 7;
pub const AES_CR_CCFC_Msk: u32 = 0x1 << AES_CR_CCFC_Pos;
pub const AES_CR_CCFC: u32 = AES_CR_CCFC_Msk;
pub const AES_CR_ERRC_Pos: u32 = 8;
pub const AES_CR_ERRC_Msk: u32 = 0x1 << AES_CR_ERRC_Pos;
pub const AES_CR_ERRC: u32 = AES_CR_ERRC_Msk;
pub const AES_CR_CCFIE_Pos: u32 = 9;
pub const AES_CR_CCFIE_Msk: u32 = 0x1 << AES_CR_CCFIE_Pos;
pub const AES_CR_CCFIE: u32 = AES_CR_CCFIE_Msk;
pub const AES_CR_ERRIE_Pos: u32 = 10;
pub const AES_CR_ERRIE_Msk: u32 = 0x1 << AES_CR_ERRIE_Pos;
pub const AES_CR_ERRIE: u32 = AES_CR_ERRIE_Msk;
pub const AES_CR_DMAINEN_Pos: u32 = 11;
pub const AES_CR_DMAINEN_Msk: u32 = 0x1 << AES_CR_DMAINEN_Pos;
pub const AES_CR_DMAINEN: u32 = AES_CR_DMAINEN_Msk;
pub const AES_CR_DMAOUTEN_Pos: u32 = 12;
pub const AES_CR_DMAOUTEN_Msk: u32 = 0x1 << AES_CR_DMAOUTEN_Pos;
pub const AES_CR_DMAOUTEN: u32 = AES_CR_DMAOUTEN_Msk;
pub const AES_CR_GCMPH_Pos: u32 = 13;
pub const AES_CR_GCMPH_Msk: u32 = 0x3 << AES_CR_GCMPH_Pos;
pub const AES_CR_GCMPH: u32 = AES_CR_GCMPH_Msk;
pub const AES_CR_GCMPH_0: u32 = 0x1 << AES_CR_GCMPH_Pos;
pub const AES_CR_GCMPH_1: u32 = 0x2 << AES_CR_GCMPH_Pos;
pub const AES_CR_KEYSIZE_Pos: u32 = 18;
pub const AES_CR_KEYSIZE_Msk: u32 = 0x1 << AES_CR_KEYSIZE_Pos;
pub const AES_CR_KEYSIZE: u32 = AES_CR_KEYSIZE_Msk;
pub const AES_CR_NPBLB_Pos: u32 = 20;
pub const AES_CR_NPBLB_Msk: u32 = 0xF << AES_CR_NPBLB_Pos;
pub const AES_CR_NPBLB: u32 = AES_CR_NPBLB_Msk;
pub const AES_CR_NPBLB_0: u32 = 0x1 << AES_CR_NPBLB_Pos;
pub const AES_CR_NPBLB_1: u32 = 0x2 << AES_CR_NPBLB_Pos;
pub const AES_CR_NPBLB_2: u32 = 0x4 << AES_CR_NPBLB_Pos;
pub const AES_CR_NPBLB_3: u32 = 0x8 << AES_CR_NPBLB_Pos;
pub const AES_SR_CCF_Pos: u32 = 0;
pub const AES_SR_CCF_Msk: u32 = 0x1 << AES_SR_CCF_Pos;
pub const AES_SR_CCF: u32 = AES_SR_CCF_Msk;
pub const AES_SR_RDERR_Pos: u32 = 1;
pub const AES_SR_RDERR_Msk: u32 = 0x1 << AES_SR_RDERR_Pos;
pub const AES_SR_RDERR: u32 = AES_SR_RDERR_Msk;
pub const AES_SR_WRERR_Pos: u32 = 2;
pub const AES_SR_WRERR_Msk: u32 = 0x1 << AES_SR_WRERR_Pos;
pub const AES_SR_WRERR: u32 = AES_SR_WRERR_Msk;
pub const AES_SR_BUSY_Pos: u32 = 3;
pub const AES_SR_BUSY_Msk: u32 = 0x1 << AES_SR_BUSY_Pos;
pub const AES_SR_BUSY: u32 = AES_SR_BUSY_Msk;
pub const AES_DINR_Pos: u32 = 0;
pub const AES_DINR_Msk: u32 = 0xFFFFFFFF << AES_DINR_Pos;
pub const AES_DINR: u32 = AES_DINR_Msk;
pub const AES_DOUTR_Pos: u32 = 0;
pub const AES_DOUTR_Msk: u32 = 0xFFFFFFFF << AES_DOUTR_Pos;
pub const AES_DOUTR: u32 = AES_DOUTR_Msk;
pub const AES_KEYR0_Pos: u32 = 0;
pub const AES_KEYR0_Msk: u32 = 0xFFFFFFFF << AES_KEYR0_Pos;
pub const AES_KEYR0: u32 = AES_KEYR0_Msk;
pub const AES_KEYR1_Pos: u32 = 0;
pub const AES_KEYR1_Msk: u32 = 0xFFFFFFFF << AES_KEYR1_Pos;
pub const AES_KEYR1: u32 = AES_KEYR1_Msk;
pub const AES_KEYR2_Pos: u32 = 0;
pub const AES_KEYR2_Msk: u32 = 0xFFFFFFFF << AES_KEYR2_Pos;
pub const AES_KEYR2: u32 = AES_KEYR2_Msk;
pub const AES_KEYR3_Pos: u32 = 0;
pub const AES_KEYR3_Msk: u32 = 0xFFFFFFFF << AES_KEYR3_Pos;
pub const AES_KEYR3: u32 = AES_KEYR3_Msk;
pub const AES_KEYR4_Pos: u32 = 0;
pub const AES_KEYR4_Msk: u32 = 0xFFFFFFFF << AES_KEYR4_Pos;
pub const AES_KEYR4: u32 = AES_KEYR4_Msk;
pub const AES_KEYR5_Pos: u32 = 0;
pub const AES_KEYR5_Msk: u32 = 0xFFFFFFFF << AES_KEYR5_Pos;
pub const AES_KEYR5: u32 = AES_KEYR5_Msk;
pub const AES_KEYR6_Pos: u32 = 0;
pub const AES_KEYR6_Msk: u32 = 0xFFFFFFFF << AES_KEYR6_Pos;
pub const AES_KEYR6: u32 = AES_KEYR6_Msk;
pub const AES_KEYR7_Pos: u32 = 0;
pub const AES_KEYR7_Msk: u32 = 0xFFFFFFFF << AES_KEYR7_Pos;
pub const AES_KEYR7: u32 = AES_KEYR7_Msk;
pub const AES_IVR0_Pos: u32 = 0;
pub const AES_IVR0_Msk: u32 = 0xFFFFFFFF << AES_IVR0_Pos;
pub const AES_IVR0: u32 = AES_IVR0_Msk;
pub const AES_IVR1_Pos: u32 = 0;
pub const AES_IVR1_Msk: u32 = 0xFFFFFFFF << AES_IVR1_Pos;
pub const AES_IVR1: u32 = AES_IVR1_Msk;
pub const AES_IVR2_Pos: u32 = 0;
pub const AES_IVR2_Msk: u32 = 0xFFFFFFFF << AES_IVR2_Pos;
pub const AES_IVR2: u32 = AES_IVR2_Msk;
pub const AES_IVR3_Pos: u32 = 0;
pub const AES_IVR3_Msk: u32 = 0xFFFFFFFF << AES_IVR3_Pos;
pub const AES_IVR3: u32 = AES_IVR3_Msk;
pub const AES_SUSP0R_Pos: u32 = 0;
pub const AES_SUSP0R_Msk: u32 = 0xFFFFFFFF << AES_SUSP0R_Pos;
pub const AES_SUSP0R: u32 = AES_SUSP0R_Msk;
pub const AES_SUSP1R_Pos: u32 = 0;
pub const AES_SUSP1R_Msk: u32 = 0xFFFFFFFF << AES_SUSP1R_Pos;
pub const AES_SUSP1R: u32 = AES_SUSP1R_Msk;
pub const AES_SUSP2R_Pos: u32 = 0;
pub const AES_SUSP2R_Msk: u32 = 0xFFFFFFFF << AES_SUSP2R_Pos;
pub const AES_SUSP2R: u32 = AES_SUSP2R_Msk;
pub const AES_SUSP3R_Pos: u32 = 0;
pub const AES_SUSP3R_Msk: u32 = 0xFFFFFFFF << AES_SUSP3R_Pos;
pub const AES_SUSP3R: u32 = AES_SUSP3R_Msk;
pub const AES_SUSP4R_Pos: u32 = 0;
pub const AES_SUSP4R_Msk: u32 = 0xFFFFFFFF << AES_SUSP4R_Pos;
pub const AES_SUSP4R: u32 = AES_SUSP4R_Msk;
pub const AES_SUSP5R_Pos: u32 = 0;
pub const AES_SUSP5R_Msk: u32 = 0xFFFFFFFF << AES_SUSP5R_Pos;
pub const AES_SUSP5R: u32 = AES_SUSP5R_Msk;
pub const AES_SUSP6R_Pos: u32 = 0;
pub const AES_SUSP6R_Msk: u32 = 0xFFFFFFFF << AES_SUSP6R_Pos;
pub const AES_SUSP6R: u32 = AES_SUSP6R_Msk;
pub const AES_SUSP7R_Pos: u32 = 0;
pub const AES_SUSP7R_Msk: u32 = 0xFFFFFFFF << AES_SUSP7R_Pos;
pub const AES_SUSP7R: u32 = AES_SUSP7R_Msk;
pub const DMA_ISR_GIF1_Pos: u32 = 0;
pub const DMA_ISR_GIF1_Msk: u32 = 0x1 << DMA_ISR_GIF1_Pos;
pub const DMA_ISR_GIF1: u32 = DMA_ISR_GIF1_Msk;
pub const DMA_ISR_TCIF1_Pos: u32 = 1;
pub const DMA_ISR_TCIF1_Msk: u32 = 0x1 << DMA_ISR_TCIF1_Pos;
pub const DMA_ISR_TCIF1: u32 = DMA_ISR_TCIF1_Msk;
pub const DMA_ISR_HTIF1_Pos: u32 = 2;
pub const DMA_ISR_HTIF1_Msk: u32 = 0x1 << DMA_ISR_HTIF1_Pos;
pub const DMA_ISR_HTIF1: u32 = DMA_ISR_HTIF1_Msk;
pub const DMA_ISR_TEIF1_Pos: u32 = 3;
pub const DMA_ISR_TEIF1_Msk: u32 = 0x1 << DMA_ISR_TEIF1_Pos;
pub const DMA_ISR_TEIF1: u32 = DMA_ISR_TEIF1_Msk;
pub const DMA_ISR_GIF2_Pos: u32 = 4;
pub const DMA_ISR_GIF2_Msk: u32 = 0x1 << DMA_ISR_GIF2_Pos;
pub const DMA_ISR_GIF2: u32 = DMA_ISR_GIF2_Msk;
pub const DMA_ISR_TCIF2_Pos: u32 = 5;
pub const DMA_ISR_TCIF2_Msk: u32 = 0x1 << DMA_ISR_TCIF2_Pos;
pub const DMA_ISR_TCIF2: u32 = DMA_ISR_TCIF2_Msk;
pub const DMA_ISR_HTIF2_Pos: u32 = 6;
pub const DMA_ISR_HTIF2_Msk: u32 = 0x1 << DMA_ISR_HTIF2_Pos;
pub const DMA_ISR_HTIF2: u32 = DMA_ISR_HTIF2_Msk;
pub const DMA_ISR_TEIF2_Pos: u32 = 7;
pub const DMA_ISR_TEIF2_Msk: u32 = 0x1 << DMA_ISR_TEIF2_Pos;
pub const DMA_ISR_TEIF2: u32 = DMA_ISR_TEIF2_Msk;
pub const DMA_ISR_GIF3_Pos: u32 = 8;
pub const DMA_ISR_GIF3_Msk: u32 = 0x1 << DMA_ISR_GIF3_Pos;
pub const DMA_ISR_GIF3: u32 = DMA_ISR_GIF3_Msk;
pub const DMA_ISR_TCIF3_Pos: u32 = 9;
pub const DMA_ISR_TCIF3_Msk: u32 = 0x1 << DMA_ISR_TCIF3_Pos;
pub const DMA_ISR_TCIF3: u32 = DMA_ISR_TCIF3_Msk;
pub const DMA_ISR_HTIF3_Pos: u32 = 10;
pub const DMA_ISR_HTIF3_Msk: u32 = 0x1 << DMA_ISR_HTIF3_Pos;
pub const DMA_ISR_HTIF3: u32 = DMA_ISR_HTIF3_Msk;
pub const DMA_ISR_TEIF3_Pos: u32 = 11;
pub const DMA_ISR_TEIF3_Msk: u32 = 0x1 << DMA_ISR_TEIF3_Pos;
pub const DMA_ISR_TEIF3: u32 = DMA_ISR_TEIF3_Msk;
pub const DMA_ISR_GIF4_Pos: u32 = 12;
pub const DMA_ISR_GIF4_Msk: u32 = 0x1 << DMA_ISR_GIF4_Pos;
pub const DMA_ISR_GIF4: u32 = DMA_ISR_GIF4_Msk;
pub const DMA_ISR_TCIF4_Pos: u32 = 13;
pub const DMA_ISR_TCIF4_Msk: u32 = 0x1 << DMA_ISR_TCIF4_Pos;
pub const DMA_ISR_TCIF4: u32 = DMA_ISR_TCIF4_Msk;
pub const DMA_ISR_HTIF4_Pos: u32 = 14;
pub const DMA_ISR_HTIF4_Msk: u32 = 0x1 << DMA_ISR_HTIF4_Pos;
pub const DMA_ISR_HTIF4: u32 = DMA_ISR_HTIF4_Msk;
pub const DMA_ISR_TEIF4_Pos: u32 = 15;
pub const DMA_ISR_TEIF4_Msk: u32 = 0x1 << DMA_ISR_TEIF4_Pos;
pub const DMA_ISR_TEIF4: u32 = DMA_ISR_TEIF4_Msk;
pub const DMA_ISR_GIF5_Pos: u32 = 16;
pub const DMA_ISR_GIF5_Msk: u32 = 0x1 << DMA_ISR_GIF5_Pos;
pub const DMA_ISR_GIF5: u32 = DMA_ISR_GIF5_Msk;
pub const DMA_ISR_TCIF5_Pos: u32 = 17;
pub const DMA_ISR_TCIF5_Msk: u32 = 0x1 << DMA_ISR_TCIF5_Pos;
pub const DMA_ISR_TCIF5: u32 = DMA_ISR_TCIF5_Msk;
pub const DMA_ISR_HTIF5_Pos: u32 = 18;
pub const DMA_ISR_HTIF5_Msk: u32 = 0x1 << DMA_ISR_HTIF5_Pos;
pub const DMA_ISR_HTIF5: u32 = DMA_ISR_HTIF5_Msk;
pub const DMA_ISR_TEIF5_Pos: u32 = 19;
pub const DMA_ISR_TEIF5_Msk: u32 = 0x1 << DMA_ISR_TEIF5_Pos;
pub const DMA_ISR_TEIF5: u32 = DMA_ISR_TEIF5_Msk;
pub const DMA_ISR_GIF6_Pos: u32 = 20;
pub const DMA_ISR_GIF6_Msk: u32 = 0x1 << DMA_ISR_GIF6_Pos;
pub const DMA_ISR_GIF6: u32 = DMA_ISR_GIF6_Msk;
pub const DMA_ISR_TCIF6_Pos: u32 = 21;
pub const DMA_ISR_TCIF6_Msk: u32 = 0x1 << DMA_ISR_TCIF6_Pos;
pub const DMA_ISR_TCIF6: u32 = DMA_ISR_TCIF6_Msk;
pub const DMA_ISR_HTIF6_Pos: u32 = 22;
pub const DMA_ISR_HTIF6_Msk: u32 = 0x1 << DMA_ISR_HTIF6_Pos;
pub const DMA_ISR_HTIF6: u32 = DMA_ISR_HTIF6_Msk;
pub const DMA_ISR_TEIF6_Pos: u32 = 23;
pub const DMA_ISR_TEIF6_Msk: u32 = 0x1 << DMA_ISR_TEIF6_Pos;
pub const DMA_ISR_TEIF6: u32 = DMA_ISR_TEIF6_Msk;
pub const DMA_ISR_GIF7_Pos: u32 = 24;
pub const DMA_ISR_GIF7_Msk: u32 = 0x1 << DMA_ISR_GIF7_Pos;
pub const DMA_ISR_GIF7: u32 = DMA_ISR_GIF7_Msk;
pub const DMA_ISR_TCIF7_Pos: u32 = 25;
pub const DMA_ISR_TCIF7_Msk: u32 = 0x1 << DMA_ISR_TCIF7_Pos;
pub const DMA_ISR_TCIF7: u32 = DMA_ISR_TCIF7_Msk;
pub const DMA_ISR_HTIF7_Pos: u32 = 26;
pub const DMA_ISR_HTIF7_Msk: u32 = 0x1 << DMA_ISR_HTIF7_Pos;
pub const DMA_ISR_HTIF7: u32 = DMA_ISR_HTIF7_Msk;
pub const DMA_ISR_TEIF7_Pos: u32 = 27;
pub const DMA_ISR_TEIF7_Msk: u32 = 0x1 << DMA_ISR_TEIF7_Pos;
pub const DMA_ISR_TEIF7: u32 = DMA_ISR_TEIF7_Msk;
pub const DMA_IFCR_CGIF1_Pos: u32 = 0;
pub const DMA_IFCR_CGIF1_Msk: u32 = 0x1 << DMA_IFCR_CGIF1_Pos;
pub const DMA_IFCR_CGIF1: u32 = DMA_IFCR_CGIF1_Msk;
pub const DMA_IFCR_CTCIF1_Pos: u32 = 1;
pub const DMA_IFCR_CTCIF1_Msk: u32 = 0x1 << DMA_IFCR_CTCIF1_Pos;
pub const DMA_IFCR_CTCIF1: u32 = DMA_IFCR_CTCIF1_Msk;
pub const DMA_IFCR_CHTIF1_Pos: u32 = 2;
pub const DMA_IFCR_CHTIF1_Msk: u32 = 0x1 << DMA_IFCR_CHTIF1_Pos;
pub const DMA_IFCR_CHTIF1: u32 = DMA_IFCR_CHTIF1_Msk;
pub const DMA_IFCR_CTEIF1_Pos: u32 = 3;
pub const DMA_IFCR_CTEIF1_Msk: u32 = 0x1 << DMA_IFCR_CTEIF1_Pos;
pub const DMA_IFCR_CTEIF1: u32 = DMA_IFCR_CTEIF1_Msk;
pub const DMA_IFCR_CGIF2_Pos: u32 = 4;
pub const DMA_IFCR_CGIF2_Msk: u32 = 0x1 << DMA_IFCR_CGIF2_Pos;
pub const DMA_IFCR_CGIF2: u32 = DMA_IFCR_CGIF2_Msk;
pub const DMA_IFCR_CTCIF2_Pos: u32 = 5;
pub const DMA_IFCR_CTCIF2_Msk: u32 = 0x1 << DMA_IFCR_CTCIF2_Pos;
pub const DMA_IFCR_CTCIF2: u32 = DMA_IFCR_CTCIF2_Msk;
pub const DMA_IFCR_CHTIF2_Pos: u32 = 6;
pub const DMA_IFCR_CHTIF2_Msk: u32 = 0x1 << DMA_IFCR_CHTIF2_Pos;
pub const DMA_IFCR_CHTIF2: u32 = DMA_IFCR_CHTIF2_Msk;
pub const DMA_IFCR_CTEIF2_Pos: u32 = 7;
pub const DMA_IFCR_CTEIF2_Msk: u32 = 0x1 << DMA_IFCR_CTEIF2_Pos;
pub const DMA_IFCR_CTEIF2: u32 = DMA_IFCR_CTEIF2_Msk;
pub const DMA_IFCR_CGIF3_Pos: u32 = 8;
pub const DMA_IFCR_CGIF3_Msk: u32 = 0x1 << DMA_IFCR_CGIF3_Pos;
pub const DMA_IFCR_CGIF3: u32 = DMA_IFCR_CGIF3_Msk;
pub const DMA_IFCR_CTCIF3_Pos: u32 = 9;
pub const DMA_IFCR_CTCIF3_Msk: u32 = 0x1 << DMA_IFCR_CTCIF3_Pos;
pub const DMA_IFCR_CTCIF3: u32 = DMA_IFCR_CTCIF3_Msk;
pub const DMA_IFCR_CHTIF3_Pos: u32 = 10;
pub const DMA_IFCR_CHTIF3_Msk: u32 = 0x1 << DMA_IFCR_CHTIF3_Pos;
pub const DMA_IFCR_CHTIF3: u32 = DMA_IFCR_CHTIF3_Msk;
pub const DMA_IFCR_CTEIF3_Pos: u32 = 11;
pub const DMA_IFCR_CTEIF3_Msk: u32 = 0x1 << DMA_IFCR_CTEIF3_Pos;
pub const DMA_IFCR_CTEIF3: u32 = DMA_IFCR_CTEIF3_Msk;
pub const DMA_IFCR_CGIF4_Pos: u32 = 12;
pub const DMA_IFCR_CGIF4_Msk: u32 = 0x1 << DMA_IFCR_CGIF4_Pos;
pub const DMA_IFCR_CGIF4: u32 = DMA_IFCR_CGIF4_Msk;
pub const DMA_IFCR_CTCIF4_Pos: u32 = 13;
pub const DMA_IFCR_CTCIF4_Msk: u32 = 0x1 << DMA_IFCR_CTCIF4_Pos;
pub const DMA_IFCR_CTCIF4: u32 = DMA_IFCR_CTCIF4_Msk;
pub const DMA_IFCR_CHTIF4_Pos: u32 = 14;
pub const DMA_IFCR_CHTIF4_Msk: u32 = 0x1 << DMA_IFCR_CHTIF4_Pos;
pub const DMA_IFCR_CHTIF4: u32 = DMA_IFCR_CHTIF4_Msk;
pub const DMA_IFCR_CTEIF4_Pos: u32 = 15;
pub const DMA_IFCR_CTEIF4_Msk: u32 = 0x1 << DMA_IFCR_CTEIF4_Pos;
pub const DMA_IFCR_CTEIF4: u32 = DMA_IFCR_CTEIF4_Msk;
pub const DMA_IFCR_CGIF5_Pos: u32 = 16;
pub const DMA_IFCR_CGIF5_Msk: u32 = 0x1 << DMA_IFCR_CGIF5_Pos;
pub const DMA_IFCR_CGIF5: u32 = DMA_IFCR_CGIF5_Msk;
pub const DMA_IFCR_CTCIF5_Pos: u32 = 17;
pub const DMA_IFCR_CTCIF5_Msk: u32 = 0x1 << DMA_IFCR_CTCIF5_Pos;
pub const DMA_IFCR_CTCIF5: u32 = DMA_IFCR_CTCIF5_Msk;
pub const DMA_IFCR_CHTIF5_Pos: u32 = 18;
pub const DMA_IFCR_CHTIF5_Msk: u32 = 0x1 << DMA_IFCR_CHTIF5_Pos;
pub const DMA_IFCR_CHTIF5: u32 = DMA_IFCR_CHTIF5_Msk;
pub const DMA_IFCR_CTEIF5_Pos: u32 = 19;
pub const DMA_IFCR_CTEIF5_Msk: u32 = 0x1 << DMA_IFCR_CTEIF5_Pos;
pub const DMA_IFCR_CTEIF5: u32 = DMA_IFCR_CTEIF5_Msk;
pub const DMA_IFCR_CGIF6_Pos: u32 = 20;
pub const DMA_IFCR_CGIF6_Msk: u32 = 0x1 << DMA_IFCR_CGIF6_Pos;
pub const DMA_IFCR_CGIF6: u32 = DMA_IFCR_CGIF6_Msk;
pub const DMA_IFCR_CTCIF6_Pos: u32 = 21;
pub const DMA_IFCR_CTCIF6_Msk: u32 = 0x1 << DMA_IFCR_CTCIF6_Pos;
pub const DMA_IFCR_CTCIF6: u32 = DMA_IFCR_CTCIF6_Msk;
pub const DMA_IFCR_CHTIF6_Pos: u32 = 22;
pub const DMA_IFCR_CHTIF6_Msk: u32 = 0x1 << DMA_IFCR_CHTIF6_Pos;
pub const DMA_IFCR_CHTIF6: u32 = DMA_IFCR_CHTIF6_Msk;
pub const DMA_IFCR_CTEIF6_Pos: u32 = 23;
pub const DMA_IFCR_CTEIF6_Msk: u32 = 0x1 << DMA_IFCR_CTEIF6_Pos;
pub const DMA_IFCR_CTEIF6: u32 = DMA_IFCR_CTEIF6_Msk;
pub const DMA_IFCR_CGIF7_Pos: u32 = 24;
pub const DMA_IFCR_CGIF7_Msk: u32 = 0x1 << DMA_IFCR_CGIF7_Pos;
pub const DMA_IFCR_CGIF7: u32 = DMA_IFCR_CGIF7_Msk;
pub const DMA_IFCR_CTCIF7_Pos: u32 = 25;
pub const DMA_IFCR_CTCIF7_Msk: u32 = 0x1 << DMA_IFCR_CTCIF7_Pos;
pub const DMA_IFCR_CTCIF7: u32 = DMA_IFCR_CTCIF7_Msk;
pub const DMA_IFCR_CHTIF7_Pos: u32 = 26;
pub const DMA_IFCR_CHTIF7_Msk: u32 = 0x1 << DMA_IFCR_CHTIF7_Pos;
pub const DMA_IFCR_CHTIF7: u32 = DMA_IFCR_CHTIF7_Msk;
pub const DMA_IFCR_CTEIF7_Pos: u32 = 27;
pub const DMA_IFCR_CTEIF7_Msk: u32 = 0x1 << DMA_IFCR_CTEIF7_Pos;
pub const DMA_IFCR_CTEIF7: u32 = DMA_IFCR_CTEIF7_Msk;
pub const DMA_CCR_EN_Pos: u32 = 0;
pub const DMA_CCR_EN_Msk: u32 = 0x1 << DMA_CCR_EN_Pos;
pub const DMA_CCR_EN: u32 = DMA_CCR_EN_Msk;
pub const DMA_CCR_TCIE_Pos: u32 = 1;
pub const DMA_CCR_TCIE_Msk: u32 = 0x1 << DMA_CCR_TCIE_Pos;
pub const DMA_CCR_TCIE: u32 = DMA_CCR_TCIE_Msk;
pub const DMA_CCR_HTIE_Pos: u32 = 2;
pub const DMA_CCR_HTIE_Msk: u32 = 0x1 << DMA_CCR_HTIE_Pos;
pub const DMA_CCR_HTIE: u32 = DMA_CCR_HTIE_Msk;
pub const DMA_CCR_TEIE_Pos: u32 = 3;
pub const DMA_CCR_TEIE_Msk: u32 = 0x1 << DMA_CCR_TEIE_Pos;
pub const DMA_CCR_TEIE: u32 = DMA_CCR_TEIE_Msk;
pub const DMA_CCR_DIR_Pos: u32 = 4;
pub const DMA_CCR_DIR_Msk: u32 = 0x1 << DMA_CCR_DIR_Pos;
pub const DMA_CCR_DIR: u32 = DMA_CCR_DIR_Msk;
pub const DMA_CCR_CIRC_Pos: u32 = 5;
pub const DMA_CCR_CIRC_Msk: u32 = 0x1 << DMA_CCR_CIRC_Pos;
pub const DMA_CCR_CIRC: u32 = DMA_CCR_CIRC_Msk;
pub const DMA_CCR_PINC_Pos: u32 = 6;
pub const DMA_CCR_PINC_Msk: u32 = 0x1 << DMA_CCR_PINC_Pos;
pub const DMA_CCR_PINC: u32 = DMA_CCR_PINC_Msk;
pub const DMA_CCR_MINC_Pos: u32 = 7;
pub const DMA_CCR_MINC_Msk: u32 = 0x1 << DMA_CCR_MINC_Pos;
pub const DMA_CCR_MINC: u32 = DMA_CCR_MINC_Msk;
pub const DMA_CCR_PSIZE_Pos: u32 = 8;
pub const DMA_CCR_PSIZE_Msk: u32 = 0x3 << DMA_CCR_PSIZE_Pos;
pub const DMA_CCR_PSIZE: u32 = DMA_CCR_PSIZE_Msk;
pub const DMA_CCR_PSIZE_0: u32 = 0x1 << DMA_CCR_PSIZE_Pos;
pub const DMA_CCR_PSIZE_1: u32 = 0x2 << DMA_CCR_PSIZE_Pos;
pub const DMA_CCR_MSIZE_Pos: u32 = 10;
pub const DMA_CCR_MSIZE_Msk: u32 = 0x3 << DMA_CCR_MSIZE_Pos;
pub const DMA_CCR_MSIZE: u32 = DMA_CCR_MSIZE_Msk;
pub const DMA_CCR_MSIZE_0: u32 = 0x1 << DMA_CCR_MSIZE_Pos;
pub const DMA_CCR_MSIZE_1: u32 = 0x2 << DMA_CCR_MSIZE_Pos;
pub const DMA_CCR_PL_Pos: u32 = 12;
pub const DMA_CCR_PL_Msk: u32 = 0x3 << DMA_CCR_PL_Pos;
pub const DMA_CCR_PL: u32 = DMA_CCR_PL_Msk;
pub const DMA_CCR_PL_0: u32 = 0x1 << DMA_CCR_PL_Pos;
pub const DMA_CCR_PL_1: u32 = 0x2 << DMA_CCR_PL_Pos;
pub const DMA_CCR_MEM2MEM_Pos: u32 = 14;
pub const DMA_CCR_MEM2MEM_Msk: u32 = 0x1 << DMA_CCR_MEM2MEM_Pos;
pub const DMA_CCR_MEM2MEM: u32 = DMA_CCR_MEM2MEM_Msk;
pub const DMA_CNDTR_NDT_Pos: u32 = 0;
pub const DMA_CNDTR_NDT_Msk: u32 = 0x3FFFF << DMA_CNDTR_NDT_Pos;
pub const DMA_CNDTR_NDT: u32 = DMA_CNDTR_NDT_Msk;
pub const DMA_CPAR_PA_Pos: u32 = 0;
pub const DMA_CPAR_PA_Msk: u32 = 0xFFFFFFFF << DMA_CPAR_PA_Pos;
pub const DMA_CPAR_PA: u32 = DMA_CPAR_PA_Msk;
pub const DMA_CMAR_MA_Pos: u32 = 0;
pub const DMA_CMAR_MA_Msk: u32 = 0xFFFFFFFF << DMA_CMAR_MA_Pos;
pub const DMA_CMAR_MA: u32 = DMA_CMAR_MA_Msk;
pub const DMAMUX_CxCR_DMAREQ_ID_Pos: u32 = 0;
pub const DMAMUX_CxCR_DMAREQ_ID_Msk: u32 = 0x7F << DMAMUX_CxCR_DMAREQ_ID_Pos;
pub const DMAMUX_CxCR_DMAREQ_ID: u32 = DMAMUX_CxCR_DMAREQ_ID_Msk;
pub const DMAMUX_CxCR_DMAREQ_ID_0: u32 = 0x01 << DMAMUX_CxCR_DMAREQ_ID_Pos;
pub const DMAMUX_CxCR_DMAREQ_ID_1: u32 = 0x02 << DMAMUX_CxCR_DMAREQ_ID_Pos;
pub const DMAMUX_CxCR_DMAREQ_ID_2: u32 = 0x04 << DMAMUX_CxCR_DMAREQ_ID_Pos;
pub const DMAMUX_CxCR_DMAREQ_ID_3: u32 = 0x08 << DMAMUX_CxCR_DMAREQ_ID_Pos;
pub const DMAMUX_CxCR_DMAREQ_ID_4: u32 = 0x10 << DMAMUX_CxCR_DMAREQ_ID_Pos;
pub const DMAMUX_CxCR_DMAREQ_ID_5: u32 = 0x20 << DMAMUX_CxCR_DMAREQ_ID_Pos;
pub const DMAMUX_CxCR_DMAREQ_ID_6: u32 = 0x40 << DMAMUX_CxCR_DMAREQ_ID_Pos;
pub const DMAMUX_CxCR_SOIE_Pos: u32 = 8;
pub const DMAMUX_CxCR_SOIE_Msk: u32 = 0x1 << DMAMUX_CxCR_SOIE_Pos;
pub const DMAMUX_CxCR_SOIE: u32 = DMAMUX_CxCR_SOIE_Msk;
pub const DMAMUX_CxCR_EGE_Pos: u32 = 9;
pub const DMAMUX_CxCR_EGE_Msk: u32 = 0x1 << DMAMUX_CxCR_EGE_Pos;
pub const DMAMUX_CxCR_EGE: u32 = DMAMUX_CxCR_EGE_Msk;
pub const DMAMUX_CxCR_SE_Pos: u32 = 16;
pub const DMAMUX_CxCR_SE_Msk: u32 = 0x1 << DMAMUX_CxCR_SE_Pos;
pub const DMAMUX_CxCR_SE: u32 = DMAMUX_CxCR_SE_Msk;
pub const DMAMUX_CxCR_SPOL_Pos: u32 = 17;
pub const DMAMUX_CxCR_SPOL_Msk: u32 = 0x3 << DMAMUX_CxCR_SPOL_Pos;
pub const DMAMUX_CxCR_SPOL: u32 = DMAMUX_CxCR_SPOL_Msk;
pub const DMAMUX_CxCR_SPOL_0: u32 = 0x1 << DMAMUX_CxCR_SPOL_Pos;
pub const DMAMUX_CxCR_SPOL_1: u32 = 0x2 << DMAMUX_CxCR_SPOL_Pos;
pub const DMAMUX_CxCR_NBREQ_Pos: u32 = 19;
pub const DMAMUX_CxCR_NBREQ_Msk: u32 = 0x1F << DMAMUX_CxCR_NBREQ_Pos;
pub const DMAMUX_CxCR_NBREQ: u32 = DMAMUX_CxCR_NBREQ_Msk;
pub const DMAMUX_CxCR_NBREQ_0: u32 = 0x01 << DMAMUX_CxCR_NBREQ_Pos;
pub const DMAMUX_CxCR_NBREQ_1: u32 = 0x02 << DMAMUX_CxCR_NBREQ_Pos;
pub const DMAMUX_CxCR_NBREQ_2: u32 = 0x04 << DMAMUX_CxCR_NBREQ_Pos;
pub const DMAMUX_CxCR_NBREQ_3: u32 = 0x08 << DMAMUX_CxCR_NBREQ_Pos;
pub const DMAMUX_CxCR_NBREQ_4: u32 = 0x10 << DMAMUX_CxCR_NBREQ_Pos;
pub const DMAMUX_CxCR_SYNC_ID_Pos: u32 = 24;
pub const DMAMUX_CxCR_SYNC_ID_Msk: u32 = 0x1F << DMAMUX_CxCR_SYNC_ID_Pos;
pub const DMAMUX_CxCR_SYNC_ID: u32 = DMAMUX_CxCR_SYNC_ID_Msk;
pub const DMAMUX_CxCR_SYNC_ID_0: u32 = 0x01 << DMAMUX_CxCR_SYNC_ID_Pos;
pub const DMAMUX_CxCR_SYNC_ID_1: u32 = 0x02 << DMAMUX_CxCR_SYNC_ID_Pos;
pub const DMAMUX_CxCR_SYNC_ID_2: u32 = 0x04 << DMAMUX_CxCR_SYNC_ID_Pos;
pub const DMAMUX_CxCR_SYNC_ID_3: u32 = 0x08 << DMAMUX_CxCR_SYNC_ID_Pos;
pub const DMAMUX_CxCR_SYNC_ID_4: u32 = 0x10 << DMAMUX_CxCR_SYNC_ID_Pos;
pub const DMAMUX_CSR_SOF0_Pos: u32 = 0;
pub const DMAMUX_CSR_SOF0_Msk: u32 = 0x1 << DMAMUX_CSR_SOF0_Pos;
pub const DMAMUX_CSR_SOF0: u32 = DMAMUX_CSR_SOF0_Msk;
pub const DMAMUX_CSR_SOF1_Pos: u32 = 1;
pub const DMAMUX_CSR_SOF1_Msk: u32 = 0x1 << DMAMUX_CSR_SOF1_Pos;
pub const DMAMUX_CSR_SOF1: u32 = DMAMUX_CSR_SOF1_Msk;
pub const DMAMUX_CSR_SOF2_Pos: u32 = 2;
pub const DMAMUX_CSR_SOF2_Msk: u32 = 0x1 << DMAMUX_CSR_SOF2_Pos;
pub const DMAMUX_CSR_SOF2: u32 = DMAMUX_CSR_SOF2_Msk;
pub const DMAMUX_CSR_SOF3_Pos: u32 = 3;
pub const DMAMUX_CSR_SOF3_Msk: u32 = 0x1 << DMAMUX_CSR_SOF3_Pos;
pub const DMAMUX_CSR_SOF3: u32 = DMAMUX_CSR_SOF3_Msk;
pub const DMAMUX_CSR_SOF4_Pos: u32 = 4;
pub const DMAMUX_CSR_SOF4_Msk: u32 = 0x1 << DMAMUX_CSR_SOF4_Pos;
pub const DMAMUX_CSR_SOF4: u32 = DMAMUX_CSR_SOF4_Msk;
pub const DMAMUX_CSR_SOF5_Pos: u32 = 5;
pub const DMAMUX_CSR_SOF5_Msk: u32 = 0x1 << DMAMUX_CSR_SOF5_Pos;
pub const DMAMUX_CSR_SOF5: u32 = DMAMUX_CSR_SOF5_Msk;
pub const DMAMUX_CSR_SOF6_Pos: u32 = 6;
pub const DMAMUX_CSR_SOF6_Msk: u32 = 0x1 << DMAMUX_CSR_SOF6_Pos;
pub const DMAMUX_CSR_SOF6: u32 = DMAMUX_CSR_SOF6_Msk;
pub const DMAMUX_CSR_SOF7_Pos: u32 = 7;
pub const DMAMUX_CSR_SOF7_Msk: u32 = 0x1 << DMAMUX_CSR_SOF7_Pos;
pub const DMAMUX_CSR_SOF7: u32 = DMAMUX_CSR_SOF7_Msk;
pub const DMAMUX_CSR_SOF8_Pos: u32 = 8;
pub const DMAMUX_CSR_SOF8_Msk: u32 = 0x1 << DMAMUX_CSR_SOF8_Pos;
pub const DMAMUX_CSR_SOF8: u32 = DMAMUX_CSR_SOF8_Msk;
pub const DMAMUX_CSR_SOF9_Pos: u32 = 9;
pub const DMAMUX_CSR_SOF9_Msk: u32 = 0x1 << DMAMUX_CSR_SOF9_Pos;
pub const DMAMUX_CSR_SOF9: u32 = DMAMUX_CSR_SOF9_Msk;
pub const DMAMUX_CSR_SOF10_Pos: u32 = 10;
pub const DMAMUX_CSR_SOF10_Msk: u32 = 0x1 << DMAMUX_CSR_SOF10_Pos;
pub const DMAMUX_CSR_SOF10: u32 = DMAMUX_CSR_SOF10_Msk;
pub const DMAMUX_CSR_SOF11_Pos: u32 = 11;
pub const DMAMUX_CSR_SOF11_Msk: u32 = 0x1 << DMAMUX_CSR_SOF11_Pos;
pub const DMAMUX_CSR_SOF11: u32 = DMAMUX_CSR_SOF11_Msk;
pub const DMAMUX_CSR_SOF12_Pos: u32 = 12;
pub const DMAMUX_CSR_SOF12_Msk: u32 = 0x1 << DMAMUX_CSR_SOF12_Pos;
pub const DMAMUX_CSR_SOF12: u32 = DMAMUX_CSR_SOF12_Msk;
pub const DMAMUX_CSR_SOF13_Pos: u32 = 13;
pub const DMAMUX_CSR_SOF13_Msk: u32 = 0x1 << DMAMUX_CSR_SOF13_Pos;
pub const DMAMUX_CSR_SOF13: u32 = DMAMUX_CSR_SOF13_Msk;
pub const DMAMUX_CFR_CSOF0_Pos: u32 = 0;
pub const DMAMUX_CFR_CSOF0_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF0_Pos;
pub const DMAMUX_CFR_CSOF0: u32 = DMAMUX_CFR_CSOF0_Msk;
pub const DMAMUX_CFR_CSOF1_Pos: u32 = 1;
pub const DMAMUX_CFR_CSOF1_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF1_Pos;
pub const DMAMUX_CFR_CSOF1: u32 = DMAMUX_CFR_CSOF1_Msk;
pub const DMAMUX_CFR_CSOF2_Pos: u32 = 2;
pub const DMAMUX_CFR_CSOF2_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF2_Pos;
pub const DMAMUX_CFR_CSOF2: u32 = DMAMUX_CFR_CSOF2_Msk;
pub const DMAMUX_CFR_CSOF3_Pos: u32 = 3;
pub const DMAMUX_CFR_CSOF3_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF3_Pos;
pub const DMAMUX_CFR_CSOF3: u32 = DMAMUX_CFR_CSOF3_Msk;
pub const DMAMUX_CFR_CSOF4_Pos: u32 = 4;
pub const DMAMUX_CFR_CSOF4_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF4_Pos;
pub const DMAMUX_CFR_CSOF4: u32 = DMAMUX_CFR_CSOF4_Msk;
pub const DMAMUX_CFR_CSOF5_Pos: u32 = 5;
pub const DMAMUX_CFR_CSOF5_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF5_Pos;
pub const DMAMUX_CFR_CSOF5: u32 = DMAMUX_CFR_CSOF5_Msk;
pub const DMAMUX_CFR_CSOF6_Pos: u32 = 6;
pub const DMAMUX_CFR_CSOF6_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF6_Pos;
pub const DMAMUX_CFR_CSOF6: u32 = DMAMUX_CFR_CSOF6_Msk;
pub const DMAMUX_CFR_CSOF7_Pos: u32 = 7;
pub const DMAMUX_CFR_CSOF7_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF7_Pos;
pub const DMAMUX_CFR_CSOF7: u32 = DMAMUX_CFR_CSOF7_Msk;
pub const DMAMUX_CFR_CSOF8_Pos: u32 = 8;
pub const DMAMUX_CFR_CSOF8_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF8_Pos;
pub const DMAMUX_CFR_CSOF8: u32 = DMAMUX_CFR_CSOF8_Msk;
pub const DMAMUX_CFR_CSOF9_Pos: u32 = 9;
pub const DMAMUX_CFR_CSOF9_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF9_Pos;
pub const DMAMUX_CFR_CSOF9: u32 = DMAMUX_CFR_CSOF9_Msk;
pub const DMAMUX_CFR_CSOF10_Pos: u32 = 10;
pub const DMAMUX_CFR_CSOF10_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF10_Pos;
pub const DMAMUX_CFR_CSOF10: u32 = DMAMUX_CFR_CSOF10_Msk;
pub const DMAMUX_CFR_CSOF11_Pos: u32 = 11;
pub const DMAMUX_CFR_CSOF11_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF11_Pos;
pub const DMAMUX_CFR_CSOF11: u32 = DMAMUX_CFR_CSOF11_Msk;
pub const DMAMUX_CFR_CSOF12_Pos: u32 = 12;
pub const DMAMUX_CFR_CSOF12_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF12_Pos;
pub const DMAMUX_CFR_CSOF12: u32 = DMAMUX_CFR_CSOF12_Msk;
pub const DMAMUX_CFR_CSOF13_Pos: u32 = 13;
pub const DMAMUX_CFR_CSOF13_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF13_Pos;
pub const DMAMUX_CFR_CSOF13: u32 = DMAMUX_CFR_CSOF13_Msk;
pub const DMAMUX_RGxCR_SIG_ID_Pos: u32 = 0;
pub const DMAMUX_RGxCR_SIG_ID_Msk: u32 = 0x1F << DMAMUX_RGxCR_SIG_ID_Pos;
pub const DMAMUX_RGxCR_SIG_ID: u32 = DMAMUX_RGxCR_SIG_ID_Msk;
pub const DMAMUX_RGxCR_SIG_ID_0: u32 = 0x01 << DMAMUX_RGxCR_SIG_ID_Pos;
pub const DMAMUX_RGxCR_SIG_ID_1: u32 = 0x02 << DMAMUX_RGxCR_SIG_ID_Pos;
pub const DMAMUX_RGxCR_SIG_ID_2: u32 = 0x04 << DMAMUX_RGxCR_SIG_ID_Pos;
pub const DMAMUX_RGxCR_SIG_ID_3: u32 = 0x08 << DMAMUX_RGxCR_SIG_ID_Pos;
pub const DMAMUX_RGxCR_SIG_ID_4: u32 = 0x10 << DMAMUX_RGxCR_SIG_ID_Pos;
pub const DMAMUX_RGxCR_OIE_Pos: u32 = 8;
pub const DMAMUX_RGxCR_OIE_Msk: u32 = 0x1 << DMAMUX_RGxCR_OIE_Pos;
pub const DMAMUX_RGxCR_OIE: u32 = DMAMUX_RGxCR_OIE_Msk;
pub const DMAMUX_RGxCR_GE_Pos: u32 = 16;
pub const DMAMUX_RGxCR_GE_Msk: u32 = 0x1 << DMAMUX_RGxCR_GE_Pos;
pub const DMAMUX_RGxCR_GE: u32 = DMAMUX_RGxCR_GE_Msk;
pub const DMAMUX_RGxCR_GPOL_Pos: u32 = 17;
pub const DMAMUX_RGxCR_GPOL_Msk: u32 = 0x3 << DMAMUX_RGxCR_GPOL_Pos;
pub const DMAMUX_RGxCR_GPOL: u32 = DMAMUX_RGxCR_GPOL_Msk;
pub const DMAMUX_RGxCR_GPOL_0: u32 = 0x1 << DMAMUX_RGxCR_GPOL_Pos;
pub const DMAMUX_RGxCR_GPOL_1: u32 = 0x2 << DMAMUX_RGxCR_GPOL_Pos;
pub const DMAMUX_RGxCR_GNBREQ_Pos: u32 = 19;
pub const DMAMUX_RGxCR_GNBREQ_Msk: u32 = 0x1F << DMAMUX_RGxCR_GNBREQ_Pos;
pub const DMAMUX_RGxCR_GNBREQ: u32 = DMAMUX_RGxCR_GNBREQ_Msk;
pub const DMAMUX_RGxCR_GNBREQ_0: u32 = 0x01 << DMAMUX_RGxCR_GNBREQ_Pos;
pub const DMAMUX_RGxCR_GNBREQ_1: u32 = 0x02 << DMAMUX_RGxCR_GNBREQ_Pos;
pub const DMAMUX_RGxCR_GNBREQ_2: u32 = 0x04 << DMAMUX_RGxCR_GNBREQ_Pos;
pub const DMAMUX_RGxCR_GNBREQ_3: u32 = 0x08 << DMAMUX_RGxCR_GNBREQ_Pos;
pub const DMAMUX_RGxCR_GNBREQ_4: u32 = 0x10 << DMAMUX_RGxCR_GNBREQ_Pos;
pub const DMAMUX_RGSR_OF0_Pos: u32 = 0;
pub const DMAMUX_RGSR_OF0_Msk: u32 = 0x1 << DMAMUX_RGSR_OF0_Pos;
pub const DMAMUX_RGSR_OF0: u32 = DMAMUX_RGSR_OF0_Msk;
pub const DMAMUX_RGSR_OF1_Pos: u32 = 1;
pub const DMAMUX_RGSR_OF1_Msk: u32 = 0x1 << DMAMUX_RGSR_OF1_Pos;
pub const DMAMUX_RGSR_OF1: u32 = DMAMUX_RGSR_OF1_Msk;
pub const DMAMUX_RGSR_OF2_Pos: u32 = 2;
pub const DMAMUX_RGSR_OF2_Msk: u32 = 0x1 << DMAMUX_RGSR_OF2_Pos;
pub const DMAMUX_RGSR_OF2: u32 = DMAMUX_RGSR_OF2_Msk;
pub const DMAMUX_RGSR_OF3_Pos: u32 = 3;
pub const DMAMUX_RGSR_OF3_Msk: u32 = 0x1 << DMAMUX_RGSR_OF3_Pos;
pub const DMAMUX_RGSR_OF3: u32 = DMAMUX_RGSR_OF3_Msk;
pub const DMAMUX_RGCFR_COF0_Pos: u32 = 0;
pub const DMAMUX_RGCFR_COF0_Msk: u32 = 0x1 << DMAMUX_RGCFR_COF0_Pos;
pub const DMAMUX_RGCFR_COF0: u32 = DMAMUX_RGCFR_COF0_Msk;
pub const DMAMUX_RGCFR_COF1_Pos: u32 = 1;
pub const DMAMUX_RGCFR_COF1_Msk: u32 = 0x1 << DMAMUX_RGCFR_COF1_Pos;
pub const DMAMUX_RGCFR_COF1: u32 = DMAMUX_RGCFR_COF1_Msk;
pub const DMAMUX_RGCFR_COF2_Pos: u32 = 2;
pub const DMAMUX_RGCFR_COF2_Msk: u32 = 0x1 << DMAMUX_RGCFR_COF2_Pos;
pub const DMAMUX_RGCFR_COF2: u32 = DMAMUX_RGCFR_COF2_Msk;
pub const DMAMUX_RGCFR_COF3_Pos: u32 = 3;
pub const DMAMUX_RGCFR_COF3_Msk: u32 = 0x1 << DMAMUX_RGCFR_COF3_Pos;
pub const DMAMUX_RGCFR_COF3: u32 = DMAMUX_RGCFR_COF3_Msk;
pub const EXTI_RTSR1_RT0_Pos: u32 = 0;
pub const EXTI_RTSR1_RT0_Msk: u32 = 0x1 << EXTI_RTSR1_RT0_Pos;
pub const EXTI_RTSR1_RT0: u32 = EXTI_RTSR1_RT0_Msk;
pub const EXTI_RTSR1_RT1_Pos: u32 = 1;
pub const EXTI_RTSR1_RT1_Msk: u32 = 0x1 << EXTI_RTSR1_RT1_Pos;
pub const EXTI_RTSR1_RT1: u32 = EXTI_RTSR1_RT1_Msk;
pub const EXTI_RTSR1_RT2_Pos: u32 = 2;
pub const EXTI_RTSR1_RT2_Msk: u32 = 0x1 << EXTI_RTSR1_RT2_Pos;
pub const EXTI_RTSR1_RT2: u32 = EXTI_RTSR1_RT2_Msk;
pub const EXTI_RTSR1_RT3_Pos: u32 = 3;
pub const EXTI_RTSR1_RT3_Msk: u32 = 0x1 << EXTI_RTSR1_RT3_Pos;
pub const EXTI_RTSR1_RT3: u32 = EXTI_RTSR1_RT3_Msk;
pub const EXTI_RTSR1_RT4_Pos: u32 = 4;
pub const EXTI_RTSR1_RT4_Msk: u32 = 0x1 << EXTI_RTSR1_RT4_Pos;
pub const EXTI_RTSR1_RT4: u32 = EXTI_RTSR1_RT4_Msk;
pub const EXTI_RTSR1_RT5_Pos: u32 = 5;
pub const EXTI_RTSR1_RT5_Msk: u32 = 0x1 << EXTI_RTSR1_RT5_Pos;
pub const EXTI_RTSR1_RT5: u32 = EXTI_RTSR1_RT5_Msk;
pub const EXTI_RTSR1_RT6_Pos: u32 = 6;
pub const EXTI_RTSR1_RT6_Msk: u32 = 0x1 << EXTI_RTSR1_RT6_Pos;
pub const EXTI_RTSR1_RT6: u32 = EXTI_RTSR1_RT6_Msk;
pub const EXTI_RTSR1_RT7_Pos: u32 = 7;
pub const EXTI_RTSR1_RT7_Msk: u32 = 0x1 << EXTI_RTSR1_RT7_Pos;
pub const EXTI_RTSR1_RT7: u32 = EXTI_RTSR1_RT7_Msk;
pub const EXTI_RTSR1_RT8_Pos: u32 = 8;
pub const EXTI_RTSR1_RT8_Msk: u32 = 0x1 << EXTI_RTSR1_RT8_Pos;
pub const EXTI_RTSR1_RT8: u32 = EXTI_RTSR1_RT8_Msk;
pub const EXTI_RTSR1_RT9_Pos: u32 = 9;
pub const EXTI_RTSR1_RT9_Msk: u32 = 0x1 << EXTI_RTSR1_RT9_Pos;
pub const EXTI_RTSR1_RT9: u32 = EXTI_RTSR1_RT9_Msk;
pub const EXTI_RTSR1_RT10_Pos: u32 = 10;
pub const EXTI_RTSR1_RT10_Msk: u32 = 0x1 << EXTI_RTSR1_RT10_Pos;
pub const EXTI_RTSR1_RT10: u32 = EXTI_RTSR1_RT10_Msk;
pub const EXTI_RTSR1_RT11_Pos: u32 = 11;
pub const EXTI_RTSR1_RT11_Msk: u32 = 0x1 << EXTI_RTSR1_RT11_Pos;
pub const EXTI_RTSR1_RT11: u32 = EXTI_RTSR1_RT11_Msk;
pub const EXTI_RTSR1_RT12_Pos: u32 = 12;
pub const EXTI_RTSR1_RT12_Msk: u32 = 0x1 << EXTI_RTSR1_RT12_Pos;
pub const EXTI_RTSR1_RT12: u32 = EXTI_RTSR1_RT12_Msk;
pub const EXTI_RTSR1_RT13_Pos: u32 = 13;
pub const EXTI_RTSR1_RT13_Msk: u32 = 0x1 << EXTI_RTSR1_RT13_Pos;
pub const EXTI_RTSR1_RT13: u32 = EXTI_RTSR1_RT13_Msk;
pub const EXTI_RTSR1_RT14_Pos: u32 = 14;
pub const EXTI_RTSR1_RT14_Msk: u32 = 0x1 << EXTI_RTSR1_RT14_Pos;
pub const EXTI_RTSR1_RT14: u32 = EXTI_RTSR1_RT14_Msk;
pub const EXTI_RTSR1_RT15_Pos: u32 = 15;
pub const EXTI_RTSR1_RT15_Msk: u32 = 0x1 << EXTI_RTSR1_RT15_Pos;
pub const EXTI_RTSR1_RT15: u32 = EXTI_RTSR1_RT15_Msk;
pub const EXTI_RTSR1_RT16_Pos: u32 = 16;
pub const EXTI_RTSR1_RT16_Msk: u32 = 0x1 << EXTI_RTSR1_RT16_Pos;
pub const EXTI_RTSR1_RT16: u32 = EXTI_RTSR1_RT16_Msk;
pub const EXTI_RTSR1_RT21_Pos: u32 = 21;
pub const EXTI_RTSR1_RT21_Msk: u32 = 0x1 << EXTI_RTSR1_RT21_Pos;
pub const EXTI_RTSR1_RT21: u32 = EXTI_RTSR1_RT21_Msk;
pub const EXTI_RTSR1_RT22_Pos: u32 = 22;
pub const EXTI_RTSR1_RT22_Msk: u32 = 0x1 << EXTI_RTSR1_RT22_Pos;
pub const EXTI_RTSR1_RT22: u32 = EXTI_RTSR1_RT22_Msk;
pub const EXTI_FTSR1_FT0_Pos: u32 = 0;
pub const EXTI_FTSR1_FT0_Msk: u32 = 0x1 << EXTI_FTSR1_FT0_Pos;
pub const EXTI_FTSR1_FT0: u32 = EXTI_FTSR1_FT0_Msk;
pub const EXTI_FTSR1_FT1_Pos: u32 = 1;
pub const EXTI_FTSR1_FT1_Msk: u32 = 0x1 << EXTI_FTSR1_FT1_Pos;
pub const EXTI_FTSR1_FT1: u32 = EXTI_FTSR1_FT1_Msk;
pub const EXTI_FTSR1_FT2_Pos: u32 = 2;
pub const EXTI_FTSR1_FT2_Msk: u32 = 0x1 << EXTI_FTSR1_FT2_Pos;
pub const EXTI_FTSR1_FT2: u32 = EXTI_FTSR1_FT2_Msk;
pub const EXTI_FTSR1_FT3_Pos: u32 = 3;
pub const EXTI_FTSR1_FT3_Msk: u32 = 0x1 << EXTI_FTSR1_FT3_Pos;
pub const EXTI_FTSR1_FT3: u32 = EXTI_FTSR1_FT3_Msk;
pub const EXTI_FTSR1_FT4_Pos: u32 = 4;
pub const EXTI_FTSR1_FT4_Msk: u32 = 0x1 << EXTI_FTSR1_FT4_Pos;
pub const EXTI_FTSR1_FT4: u32 = EXTI_FTSR1_FT4_Msk;
pub const EXTI_FTSR1_FT5_Pos: u32 = 5;
pub const EXTI_FTSR1_FT5_Msk: u32 = 0x1 << EXTI_FTSR1_FT5_Pos;
pub const EXTI_FTSR1_FT5: u32 = EXTI_FTSR1_FT5_Msk;
pub const EXTI_FTSR1_FT6_Pos: u32 = 6;
pub const EXTI_FTSR1_FT6_Msk: u32 = 0x1 << EXTI_FTSR1_FT6_Pos;
pub const EXTI_FTSR1_FT6: u32 = EXTI_FTSR1_FT6_Msk;
pub const EXTI_FTSR1_FT7_Pos: u32 = 7;
pub const EXTI_FTSR1_FT7_Msk: u32 = 0x1 << EXTI_FTSR1_FT7_Pos;
pub const EXTI_FTSR1_FT7: u32 = EXTI_FTSR1_FT7_Msk;
pub const EXTI_FTSR1_FT8_Pos: u32 = 8;
pub const EXTI_FTSR1_FT8_Msk: u32 = 0x1 << EXTI_FTSR1_FT8_Pos;
pub const EXTI_FTSR1_FT8: u32 = EXTI_FTSR1_FT8_Msk;
pub const EXTI_FTSR1_FT9_Pos: u32 = 9;
pub const EXTI_FTSR1_FT9_Msk: u32 = 0x1 << EXTI_FTSR1_FT9_Pos;
pub const EXTI_FTSR1_FT9: u32 = EXTI_FTSR1_FT9_Msk;
pub const EXTI_FTSR1_FT10_Pos: u32 = 10;
pub const EXTI_FTSR1_FT10_Msk: u32 = 0x1 << EXTI_FTSR1_FT10_Pos;
pub const EXTI_FTSR1_FT10: u32 = EXTI_FTSR1_FT10_Msk;
pub const EXTI_FTSR1_FT11_Pos: u32 = 11;
pub const EXTI_FTSR1_FT11_Msk: u32 = 0x1 << EXTI_FTSR1_FT11_Pos;
pub const EXTI_FTSR1_FT11: u32 = EXTI_FTSR1_FT11_Msk;
pub const EXTI_FTSR1_FT12_Pos: u32 = 12;
pub const EXTI_FTSR1_FT12_Msk: u32 = 0x1 << EXTI_FTSR1_FT12_Pos;
pub const EXTI_FTSR1_FT12: u32 = EXTI_FTSR1_FT12_Msk;
pub const EXTI_FTSR1_FT13_Pos: u32 = 13;
pub const EXTI_FTSR1_FT13_Msk: u32 = 0x1 << EXTI_FTSR1_FT13_Pos;
pub const EXTI_FTSR1_FT13: u32 = EXTI_FTSR1_FT13_Msk;
pub const EXTI_FTSR1_FT14_Pos: u32 = 14;
pub const EXTI_FTSR1_FT14_Msk: u32 = 0x1 << EXTI_FTSR1_FT14_Pos;
pub const EXTI_FTSR1_FT14: u32 = EXTI_FTSR1_FT14_Msk;
pub const EXTI_FTSR1_FT15_Pos: u32 = 15;
pub const EXTI_FTSR1_FT15_Msk: u32 = 0x1 << EXTI_FTSR1_FT15_Pos;
pub const EXTI_FTSR1_FT15: u32 = EXTI_FTSR1_FT15_Msk;
pub const EXTI_FTSR1_FT16_Pos: u32 = 16;
pub const EXTI_FTSR1_FT16_Msk: u32 = 0x1 << EXTI_FTSR1_FT16_Pos;
pub const EXTI_FTSR1_FT16: u32 = EXTI_FTSR1_FT16_Msk;
pub const EXTI_FTSR1_FT21_Pos: u32 = 21;
pub const EXTI_FTSR1_FT21_Msk: u32 = 0x1 << EXTI_FTSR1_FT21_Pos;
pub const EXTI_FTSR1_FT21: u32 = EXTI_FTSR1_FT21_Msk;
pub const EXTI_FTSR1_FT22_Pos: u32 = 22;
pub const EXTI_FTSR1_FT22_Msk: u32 = 0x1 << EXTI_FTSR1_FT22_Pos;
pub const EXTI_FTSR1_FT22: u32 = EXTI_FTSR1_FT22_Msk;
pub const EXTI_SWIER1_SWI0_Pos: u32 = 0;
pub const EXTI_SWIER1_SWI0_Msk: u32 = 0x1 << EXTI_SWIER1_SWI0_Pos;
pub const EXTI_SWIER1_SWI0: u32 = EXTI_SWIER1_SWI0_Msk;
pub const EXTI_SWIER1_SWI1_Pos: u32 = 1;
pub const EXTI_SWIER1_SWI1_Msk: u32 = 0x1 << EXTI_SWIER1_SWI1_Pos;
pub const EXTI_SWIER1_SWI1: u32 = EXTI_SWIER1_SWI1_Msk;
pub const EXTI_SWIER1_SWI2_Pos: u32 = 2;
pub const EXTI_SWIER1_SWI2_Msk: u32 = 0x1 << EXTI_SWIER1_SWI2_Pos;
pub const EXTI_SWIER1_SWI2: u32 = EXTI_SWIER1_SWI2_Msk;
pub const EXTI_SWIER1_SWI3_Pos: u32 = 3;
pub const EXTI_SWIER1_SWI3_Msk: u32 = 0x1 << EXTI_SWIER1_SWI3_Pos;
pub const EXTI_SWIER1_SWI3: u32 = EXTI_SWIER1_SWI3_Msk;
pub const EXTI_SWIER1_SWI4_Pos: u32 = 4;
pub const EXTI_SWIER1_SWI4_Msk: u32 = 0x1 << EXTI_SWIER1_SWI4_Pos;
pub const EXTI_SWIER1_SWI4: u32 = EXTI_SWIER1_SWI4_Msk;
pub const EXTI_SWIER1_SWI5_Pos: u32 = 5;
pub const EXTI_SWIER1_SWI5_Msk: u32 = 0x1 << EXTI_SWIER1_SWI5_Pos;
pub const EXTI_SWIER1_SWI5: u32 = EXTI_SWIER1_SWI5_Msk;
pub const EXTI_SWIER1_SWI6_Pos: u32 = 6;
pub const EXTI_SWIER1_SWI6_Msk: u32 = 0x1 << EXTI_SWIER1_SWI6_Pos;
pub const EXTI_SWIER1_SWI6: u32 = EXTI_SWIER1_SWI6_Msk;
pub const EXTI_SWIER1_SWI7_Pos: u32 = 7;
pub const EXTI_SWIER1_SWI7_Msk: u32 = 0x1 << EXTI_SWIER1_SWI7_Pos;
pub const EXTI_SWIER1_SWI7: u32 = EXTI_SWIER1_SWI7_Msk;
pub const EXTI_SWIER1_SWI8_Pos: u32 = 8;
pub const EXTI_SWIER1_SWI8_Msk: u32 = 0x1 << EXTI_SWIER1_SWI8_Pos;
pub const EXTI_SWIER1_SWI8: u32 = EXTI_SWIER1_SWI8_Msk;
pub const EXTI_SWIER1_SWI9_Pos: u32 = 9;
pub const EXTI_SWIER1_SWI9_Msk: u32 = 0x1 << EXTI_SWIER1_SWI9_Pos;
pub const EXTI_SWIER1_SWI9: u32 = EXTI_SWIER1_SWI9_Msk;
pub const EXTI_SWIER1_SWI10_Pos: u32 = 10;
pub const EXTI_SWIER1_SWI10_Msk: u32 = 0x1 << EXTI_SWIER1_SWI10_Pos;
pub const EXTI_SWIER1_SWI10: u32 = EXTI_SWIER1_SWI10_Msk;
pub const EXTI_SWIER1_SWI11_Pos: u32 = 11;
pub const EXTI_SWIER1_SWI11_Msk: u32 = 0x1 << EXTI_SWIER1_SWI11_Pos;
pub const EXTI_SWIER1_SWI11: u32 = EXTI_SWIER1_SWI11_Msk;
pub const EXTI_SWIER1_SWI12_Pos: u32 = 12;
pub const EXTI_SWIER1_SWI12_Msk: u32 = 0x1 << EXTI_SWIER1_SWI12_Pos;
pub const EXTI_SWIER1_SWI12: u32 = EXTI_SWIER1_SWI12_Msk;
pub const EXTI_SWIER1_SWI13_Pos: u32 = 13;
pub const EXTI_SWIER1_SWI13_Msk: u32 = 0x1 << EXTI_SWIER1_SWI13_Pos;
pub const EXTI_SWIER1_SWI13: u32 = EXTI_SWIER1_SWI13_Msk;
pub const EXTI_SWIER1_SWI14_Pos: u32 = 14;
pub const EXTI_SWIER1_SWI14_Msk: u32 = 0x1 << EXTI_SWIER1_SWI14_Pos;
pub const EXTI_SWIER1_SWI14: u32 = EXTI_SWIER1_SWI14_Msk;
pub const EXTI_SWIER1_SWI15_Pos: u32 = 15;
pub const EXTI_SWIER1_SWI15_Msk: u32 = 0x1 << EXTI_SWIER1_SWI15_Pos;
pub const EXTI_SWIER1_SWI15: u32 = EXTI_SWIER1_SWI15_Msk;
pub const EXTI_SWIER1_SWI16_Pos: u32 = 16;
pub const EXTI_SWIER1_SWI16_Msk: u32 = 0x1 << EXTI_SWIER1_SWI16_Pos;
pub const EXTI_SWIER1_SWI16: u32 = EXTI_SWIER1_SWI16_Msk;
pub const EXTI_SWIER1_SWI21_Pos: u32 = 21;
pub const EXTI_SWIER1_SWI21_Msk: u32 = 0x1 << EXTI_SWIER1_SWI21_Pos;
pub const EXTI_SWIER1_SWI21: u32 = EXTI_SWIER1_SWI21_Msk;
pub const EXTI_SWIER1_SWI22_Pos: u32 = 22;
pub const EXTI_SWIER1_SWI22_Msk: u32 = 0x1 << EXTI_SWIER1_SWI22_Pos;
pub const EXTI_SWIER1_SWI22: u32 = EXTI_SWIER1_SWI22_Msk;
pub const EXTI_PR1_PIF0_Pos: u32 = 0;
pub const EXTI_PR1_PIF0_Msk: u32 = 0x1 << EXTI_PR1_PIF0_Pos;
pub const EXTI_PR1_PIF0: u32 = EXTI_PR1_PIF0_Msk;
pub const EXTI_PR1_PIF1_Pos: u32 = 1;
pub const EXTI_PR1_PIF1_Msk: u32 = 0x1 << EXTI_PR1_PIF1_Pos;
pub const EXTI_PR1_PIF1: u32 = EXTI_PR1_PIF1_Msk;
pub const EXTI_PR1_PIF2_Pos: u32 = 2;
pub const EXTI_PR1_PIF2_Msk: u32 = 0x1 << EXTI_PR1_PIF2_Pos;
pub const EXTI_PR1_PIF2: u32 = EXTI_PR1_PIF2_Msk;
pub const EXTI_PR1_PIF3_Pos: u32 = 3;
pub const EXTI_PR1_PIF3_Msk: u32 = 0x1 << EXTI_PR1_PIF3_Pos;
pub const EXTI_PR1_PIF3: u32 = EXTI_PR1_PIF3_Msk;
pub const EXTI_PR1_PIF4_Pos: u32 = 4;
pub const EXTI_PR1_PIF4_Msk: u32 = 0x1 << EXTI_PR1_PIF4_Pos;
pub const EXTI_PR1_PIF4: u32 = EXTI_PR1_PIF4_Msk;
pub const EXTI_PR1_PIF5_Pos: u32 = 5;
pub const EXTI_PR1_PIF5_Msk: u32 = 0x1 << EXTI_PR1_PIF5_Pos;
pub const EXTI_PR1_PIF5: u32 = EXTI_PR1_PIF5_Msk;
pub const EXTI_PR1_PIF6_Pos: u32 = 6;
pub const EXTI_PR1_PIF6_Msk: u32 = 0x1 << EXTI_PR1_PIF6_Pos;
pub const EXTI_PR1_PIF6: u32 = EXTI_PR1_PIF6_Msk;
pub const EXTI_PR1_PIF7_Pos: u32 = 7;
pub const EXTI_PR1_PIF7_Msk: u32 = 0x1 << EXTI_PR1_PIF7_Pos;
pub const EXTI_PR1_PIF7: u32 = EXTI_PR1_PIF7_Msk;
pub const EXTI_PR1_PIF8_Pos: u32 = 8;
pub const EXTI_PR1_PIF8_Msk: u32 = 0x1 << EXTI_PR1_PIF8_Pos;
pub const EXTI_PR1_PIF8: u32 = EXTI_PR1_PIF8_Msk;
pub const EXTI_PR1_PIF9_Pos: u32 = 9;
pub const EXTI_PR1_PIF9_Msk: u32 = 0x1 << EXTI_PR1_PIF9_Pos;
pub const EXTI_PR1_PIF9: u32 = EXTI_PR1_PIF9_Msk;
pub const EXTI_PR1_PIF10_Pos: u32 = 10;
pub const EXTI_PR1_PIF10_Msk: u32 = 0x1 << EXTI_PR1_PIF10_Pos;
pub const EXTI_PR1_PIF10: u32 = EXTI_PR1_PIF10_Msk;
pub const EXTI_PR1_PIF11_Pos: u32 = 11;
pub const EXTI_PR1_PIF11_Msk: u32 = 0x1 << EXTI_PR1_PIF11_Pos;
pub const EXTI_PR1_PIF11: u32 = EXTI_PR1_PIF11_Msk;
pub const EXTI_PR1_PIF12_Pos: u32 = 12;
pub const EXTI_PR1_PIF12_Msk: u32 = 0x1 << EXTI_PR1_PIF12_Pos;
pub const EXTI_PR1_PIF12: u32 = EXTI_PR1_PIF12_Msk;
pub const EXTI_PR1_PIF13_Pos: u32 = 13;
pub const EXTI_PR1_PIF13_Msk: u32 = 0x1 << EXTI_PR1_PIF13_Pos;
pub const EXTI_PR1_PIF13: u32 = EXTI_PR1_PIF13_Msk;
pub const EXTI_PR1_PIF14_Pos: u32 = 14;
pub const EXTI_PR1_PIF14_Msk: u32 = 0x1 << EXTI_PR1_PIF14_Pos;
pub const EXTI_PR1_PIF14: u32 = EXTI_PR1_PIF14_Msk;
pub const EXTI_PR1_PIF15_Pos: u32 = 15;
pub const EXTI_PR1_PIF15_Msk: u32 = 0x1 << EXTI_PR1_PIF15_Pos;
pub const EXTI_PR1_PIF15: u32 = EXTI_PR1_PIF15_Msk;
pub const EXTI_PR1_PIF16_Pos: u32 = 16;
pub const EXTI_PR1_PIF16_Msk: u32 = 0x1 << EXTI_PR1_PIF16_Pos;
pub const EXTI_PR1_PIF16: u32 = EXTI_PR1_PIF16_Msk;
pub const EXTI_PR1_PIF21_Pos: u32 = 21;
pub const EXTI_PR1_PIF21_Msk: u32 = 0x1 << EXTI_PR1_PIF21_Pos;
pub const EXTI_PR1_PIF21: u32 = EXTI_PR1_PIF21_Msk;
pub const EXTI_PR1_PIF22_Pos: u32 = 22;
pub const EXTI_PR1_PIF22_Msk: u32 = 0x1 << EXTI_PR1_PIF22_Pos;
pub const EXTI_PR1_PIF22: u32 = EXTI_PR1_PIF22_Msk;
pub const EXTI_RTSR2_RT34_Pos: u32 = 2;
pub const EXTI_RTSR2_RT34_Msk: u32 = 0x1 << EXTI_RTSR2_RT34_Pos;
pub const EXTI_RTSR2_RT34: u32 = EXTI_RTSR2_RT34_Msk;
pub const EXTI_RTSR2_RT45_Pos: u32 = 13;
pub const EXTI_RTSR2_RT45_Msk: u32 = 0x1 << EXTI_RTSR2_RT45_Pos;
pub const EXTI_RTSR2_RT45: u32 = EXTI_RTSR2_RT45_Msk;
pub const EXTI_FTSR2_FT34_Pos: u32 = 2;
pub const EXTI_FTSR2_FT34_Msk: u32 = 0x1 << EXTI_FTSR2_FT34_Pos;
pub const EXTI_FTSR2_FT34: u32 = EXTI_FTSR2_FT34_Msk;
pub const EXTI_FTSR2_FT45_Pos: u32 = 13;
pub const EXTI_FTSR2_FT45_Msk: u32 = 0x1 << EXTI_FTSR2_FT45_Pos;
pub const EXTI_FTSR2_FT45: u32 = EXTI_FTSR2_FT45_Msk;
pub const EXTI_SWIER2_SWI34_Pos: u32 = 2;
pub const EXTI_SWIER2_SWI34_Msk: u32 = 0x1 << EXTI_SWIER2_SWI34_Pos;
pub const EXTI_SWIER2_SWI34: u32 = EXTI_SWIER2_SWI34_Msk;
pub const EXTI_SWIER2_SWI45_Pos: u32 = 13;
pub const EXTI_SWIER2_SWI45_Msk: u32 = 0x1 << EXTI_SWIER2_SWI45_Pos;
pub const EXTI_SWIER2_SWI45: u32 = EXTI_SWIER2_SWI45_Msk;
pub const EXTI_PR2_PIF34_Pos: u32 = 2;
pub const EXTI_PR2_PIF34_Msk: u32 = 0x1 << EXTI_PR2_PIF34_Pos;
pub const EXTI_PR2_PIF34: u32 = EXTI_PR2_PIF34_Msk;
pub const EXTI_PR2_PIF45_Pos: u32 = 13;
pub const EXTI_PR2_PIF45_Msk: u32 = 0x1 << EXTI_PR2_PIF45_Pos;
pub const EXTI_PR2_PIF45: u32 = EXTI_PR2_PIF45_Msk;
pub const EXTI_IMR1_IM0_Pos: u32 = 0;
pub const EXTI_IMR1_IM0_Msk: u32 = 0x1 << EXTI_IMR1_IM0_Pos;
pub const EXTI_IMR1_IM0: u32 = EXTI_IMR1_IM0_Msk;
pub const EXTI_IMR1_IM1_Pos: u32 = 1;
pub const EXTI_IMR1_IM1_Msk: u32 = 0x1 << EXTI_IMR1_IM1_Pos;
pub const EXTI_IMR1_IM1: u32 = EXTI_IMR1_IM1_Msk;
pub const EXTI_IMR1_IM2_Pos: u32 = 2;
pub const EXTI_IMR1_IM2_Msk: u32 = 0x1 << EXTI_IMR1_IM2_Pos;
pub const EXTI_IMR1_IM2: u32 = EXTI_IMR1_IM2_Msk;
pub const EXTI_IMR1_IM3_Pos: u32 = 3;
pub const EXTI_IMR1_IM3_Msk: u32 = 0x1 << EXTI_IMR1_IM3_Pos;
pub const EXTI_IMR1_IM3: u32 = EXTI_IMR1_IM3_Msk;
pub const EXTI_IMR1_IM4_Pos: u32 = 4;
pub const EXTI_IMR1_IM4_Msk: u32 = 0x1 << EXTI_IMR1_IM4_Pos;
pub const EXTI_IMR1_IM4: u32 = EXTI_IMR1_IM4_Msk;
pub const EXTI_IMR1_IM5_Pos: u32 = 5;
pub const EXTI_IMR1_IM5_Msk: u32 = 0x1 << EXTI_IMR1_IM5_Pos;
pub const EXTI_IMR1_IM5: u32 = EXTI_IMR1_IM5_Msk;
pub const EXTI_IMR1_IM6_Pos: u32 = 6;
pub const EXTI_IMR1_IM6_Msk: u32 = 0x1 << EXTI_IMR1_IM6_Pos;
pub const EXTI_IMR1_IM6: u32 = EXTI_IMR1_IM6_Msk;
pub const EXTI_IMR1_IM7_Pos: u32 = 7;
pub const EXTI_IMR1_IM7_Msk: u32 = 0x1 << EXTI_IMR1_IM7_Pos;
pub const EXTI_IMR1_IM7: u32 = EXTI_IMR1_IM7_Msk;
pub const EXTI_IMR1_IM8_Pos: u32 = 8;
pub const EXTI_IMR1_IM8_Msk: u32 = 0x1 << EXTI_IMR1_IM8_Pos;
pub const EXTI_IMR1_IM8: u32 = EXTI_IMR1_IM8_Msk;
pub const EXTI_IMR1_IM9_Pos: u32 = 9;
pub const EXTI_IMR1_IM9_Msk: u32 = 0x1 << EXTI_IMR1_IM9_Pos;
pub const EXTI_IMR1_IM9: u32 = EXTI_IMR1_IM9_Msk;
pub const EXTI_IMR1_IM10_Pos: u32 = 10;
pub const EXTI_IMR1_IM10_Msk: u32 = 0x1 << EXTI_IMR1_IM10_Pos;
pub const EXTI_IMR1_IM10: u32 = EXTI_IMR1_IM10_Msk;
pub const EXTI_IMR1_IM11_Pos: u32 = 11;
pub const EXTI_IMR1_IM11_Msk: u32 = 0x1 << EXTI_IMR1_IM11_Pos;
pub const EXTI_IMR1_IM11: u32 = EXTI_IMR1_IM11_Msk;
pub const EXTI_IMR1_IM12_Pos: u32 = 12;
pub const EXTI_IMR1_IM12_Msk: u32 = 0x1 << EXTI_IMR1_IM12_Pos;
pub const EXTI_IMR1_IM12: u32 = EXTI_IMR1_IM12_Msk;
pub const EXTI_IMR1_IM13_Pos: u32 = 13;
pub const EXTI_IMR1_IM13_Msk: u32 = 0x1 << EXTI_IMR1_IM13_Pos;
pub const EXTI_IMR1_IM13: u32 = EXTI_IMR1_IM13_Msk;
pub const EXTI_IMR1_IM14_Pos: u32 = 14;
pub const EXTI_IMR1_IM14_Msk: u32 = 0x1 << EXTI_IMR1_IM14_Pos;
pub const EXTI_IMR1_IM14: u32 = EXTI_IMR1_IM14_Msk;
pub const EXTI_IMR1_IM15_Pos: u32 = 15;
pub const EXTI_IMR1_IM15_Msk: u32 = 0x1 << EXTI_IMR1_IM15_Pos;
pub const EXTI_IMR1_IM15: u32 = EXTI_IMR1_IM15_Msk;
pub const EXTI_IMR1_IM16_Pos: u32 = 16;
pub const EXTI_IMR1_IM16_Msk: u32 = 0x1 << EXTI_IMR1_IM16_Pos;
pub const EXTI_IMR1_IM16: u32 = EXTI_IMR1_IM16_Msk;
pub const EXTI_IMR1_IM17_Pos: u32 = 17;
pub const EXTI_IMR1_IM17_Msk: u32 = 0x1 << EXTI_IMR1_IM17_Pos;
pub const EXTI_IMR1_IM17: u32 = EXTI_IMR1_IM17_Msk;
pub const EXTI_IMR1_IM18_Pos: u32 = 18;
pub const EXTI_IMR1_IM18_Msk: u32 = 0x1 << EXTI_IMR1_IM18_Pos;
pub const EXTI_IMR1_IM18: u32 = EXTI_IMR1_IM18_Msk;
pub const EXTI_IMR1_IM19_Pos: u32 = 19;
pub const EXTI_IMR1_IM19_Msk: u32 = 0x1 << EXTI_IMR1_IM19_Pos;
pub const EXTI_IMR1_IM19: u32 = EXTI_IMR1_IM19_Msk;
pub const EXTI_IMR1_IM20_Pos: u32 = 20;
pub const EXTI_IMR1_IM20_Msk: u32 = 0x1 << EXTI_IMR1_IM20_Pos;
pub const EXTI_IMR1_IM20: u32 = EXTI_IMR1_IM20_Msk;
pub const EXTI_IMR1_IM21_Pos: u32 = 21;
pub const EXTI_IMR1_IM21_Msk: u32 = 0x1 << EXTI_IMR1_IM21_Pos;
pub const EXTI_IMR1_IM21: u32 = EXTI_IMR1_IM21_Msk;
pub const EXTI_IMR1_IM22_Pos: u32 = 22;
pub const EXTI_IMR1_IM22_Msk: u32 = 0x1 << EXTI_IMR1_IM22_Pos;
pub const EXTI_IMR1_IM22: u32 = EXTI_IMR1_IM22_Msk;
pub const EXTI_IMR1_IM23_Pos: u32 = 23;
pub const EXTI_IMR1_IM23_Msk: u32 = 0x1 << EXTI_IMR1_IM23_Pos;
pub const EXTI_IMR1_IM23: u32 = EXTI_IMR1_IM23_Msk;
pub const EXTI_IMR1_IM24_Pos: u32 = 24;
pub const EXTI_IMR1_IM24_Msk: u32 = 0x1 << EXTI_IMR1_IM24_Pos;
pub const EXTI_IMR1_IM24: u32 = EXTI_IMR1_IM24_Msk;
pub const EXTI_IMR1_IM25_Pos: u32 = 25;
pub const EXTI_IMR1_IM25_Msk: u32 = 0x1 << EXTI_IMR1_IM25_Pos;
pub const EXTI_IMR1_IM25: u32 = EXTI_IMR1_IM25_Msk;
pub const EXTI_IMR1_IM26_Pos: u32 = 26;
pub const EXTI_IMR1_IM26_Msk: u32 = 0x1 << EXTI_IMR1_IM26_Pos;
pub const EXTI_IMR1_IM26: u32 = EXTI_IMR1_IM26_Msk;
pub const EXTI_IMR1_IM27_Pos: u32 = 27;
pub const EXTI_IMR1_IM27_Msk: u32 = 0x1 << EXTI_IMR1_IM27_Pos;
pub const EXTI_IMR1_IM27: u32 = EXTI_IMR1_IM27_Msk;
pub const EXTI_IMR1_IM28_Pos: u32 = 28;
pub const EXTI_IMR1_IM28_Msk: u32 = 0x1 << EXTI_IMR1_IM28_Pos;
pub const EXTI_IMR1_IM28: u32 = EXTI_IMR1_IM28_Msk;
pub const EXTI_IMR1_IM29_Pos: u32 = 29;
pub const EXTI_IMR1_IM29_Msk: u32 = 0x1 << EXTI_IMR1_IM29_Pos;
pub const EXTI_IMR1_IM29: u32 = EXTI_IMR1_IM29_Msk;
pub const EXTI_IMR1_IM30_Pos: u32 = 30;
pub const EXTI_IMR1_IM30_Msk: u32 = 0x1 << EXTI_IMR1_IM30_Pos;
pub const EXTI_IMR1_IM30: u32 = EXTI_IMR1_IM30_Msk;
pub const EXTI_IMR1_IM31_Pos: u32 = 31;
pub const EXTI_IMR1_IM31_Msk: u32 = 0x1 << EXTI_IMR1_IM31_Pos;
pub const EXTI_IMR1_IM31: u32 = EXTI_IMR1_IM31_Msk;
pub const EXTI_EMR1_EM0_Pos: u32 = 0;
pub const EXTI_EMR1_EM0_Msk: u32 = 0x1 << EXTI_EMR1_EM0_Pos;
pub const EXTI_EMR1_EM0: u32 = EXTI_EMR1_EM0_Msk;
pub const EXTI_EMR1_EM1_Pos: u32 = 1;
pub const EXTI_EMR1_EM1_Msk: u32 = 0x1 << EXTI_EMR1_EM1_Pos;
pub const EXTI_EMR1_EM1: u32 = EXTI_EMR1_EM1_Msk;
pub const EXTI_EMR1_EM2_Pos: u32 = 2;
pub const EXTI_EMR1_EM2_Msk: u32 = 0x1 << EXTI_EMR1_EM2_Pos;
pub const EXTI_EMR1_EM2: u32 = EXTI_EMR1_EM2_Msk;
pub const EXTI_EMR1_EM3_Pos: u32 = 3;
pub const EXTI_EMR1_EM3_Msk: u32 = 0x1 << EXTI_EMR1_EM3_Pos;
pub const EXTI_EMR1_EM3: u32 = EXTI_EMR1_EM3_Msk;
pub const EXTI_EMR1_EM4_Pos: u32 = 4;
pub const EXTI_EMR1_EM4_Msk: u32 = 0x1 << EXTI_EMR1_EM4_Pos;
pub const EXTI_EMR1_EM4: u32 = EXTI_EMR1_EM4_Msk;
pub const EXTI_EMR1_EM5_Pos: u32 = 5;
pub const EXTI_EMR1_EM5_Msk: u32 = 0x1 << EXTI_EMR1_EM5_Pos;
pub const EXTI_EMR1_EM5: u32 = EXTI_EMR1_EM5_Msk;
pub const EXTI_EMR1_EM6_Pos: u32 = 6;
pub const EXTI_EMR1_EM6_Msk: u32 = 0x1 << EXTI_EMR1_EM6_Pos;
pub const EXTI_EMR1_EM6: u32 = EXTI_EMR1_EM6_Msk;
pub const EXTI_EMR1_EM7_Pos: u32 = 7;
pub const EXTI_EMR1_EM7_Msk: u32 = 0x1 << EXTI_EMR1_EM7_Pos;
pub const EXTI_EMR1_EM7: u32 = EXTI_EMR1_EM7_Msk;
pub const EXTI_EMR1_EM8_Pos: u32 = 8;
pub const EXTI_EMR1_EM8_Msk: u32 = 0x1 << EXTI_EMR1_EM8_Pos;
pub const EXTI_EMR1_EM8: u32 = EXTI_EMR1_EM8_Msk;
pub const EXTI_EMR1_EM9_Pos: u32 = 9;
pub const EXTI_EMR1_EM9_Msk: u32 = 0x1 << EXTI_EMR1_EM9_Pos;
pub const EXTI_EMR1_EM9: u32 = EXTI_EMR1_EM9_Msk;
pub const EXTI_EMR1_EM10_Pos: u32 = 10;
pub const EXTI_EMR1_EM10_Msk: u32 = 0x1 << EXTI_EMR1_EM10_Pos;
pub const EXTI_EMR1_EM10: u32 = EXTI_EMR1_EM10_Msk;
pub const EXTI_EMR1_EM11_Pos: u32 = 11;
pub const EXTI_EMR1_EM11_Msk: u32 = 0x1 << EXTI_EMR1_EM11_Pos;
pub const EXTI_EMR1_EM11: u32 = EXTI_EMR1_EM11_Msk;
pub const EXTI_EMR1_EM12_Pos: u32 = 12;
pub const EXTI_EMR1_EM12_Msk: u32 = 0x1 << EXTI_EMR1_EM12_Pos;
pub const EXTI_EMR1_EM12: u32 = EXTI_EMR1_EM12_Msk;
pub const EXTI_EMR1_EM13_Pos: u32 = 13;
pub const EXTI_EMR1_EM13_Msk: u32 = 0x1 << EXTI_EMR1_EM13_Pos;
pub const EXTI_EMR1_EM13: u32 = EXTI_EMR1_EM13_Msk;
pub const EXTI_EMR1_EM14_Pos: u32 = 14;
pub const EXTI_EMR1_EM14_Msk: u32 = 0x1 << EXTI_EMR1_EM14_Pos;
pub const EXTI_EMR1_EM14: u32 = EXTI_EMR1_EM14_Msk;
pub const EXTI_EMR1_EM15_Pos: u32 = 15;
pub const EXTI_EMR1_EM15_Msk: u32 = 0x1 << EXTI_EMR1_EM15_Pos;
pub const EXTI_EMR1_EM15: u32 = EXTI_EMR1_EM15_Msk;
pub const EXTI_EMR1_EM17_Pos: u32 = 17;
pub const EXTI_EMR1_EM17_Msk: u32 = 0x1 << EXTI_EMR1_EM17_Pos;
pub const EXTI_EMR1_EM17: u32 = EXTI_EMR1_EM17_Msk;
pub const EXTI_EMR1_EM19_Pos: u32 = 19;
pub const EXTI_EMR1_EM19_Msk: u32 = 0x1 << EXTI_EMR1_EM19_Pos;
pub const EXTI_EMR1_EM19: u32 = EXTI_EMR1_EM19_Msk;
pub const EXTI_EMR1_EM20_Pos: u32 = 20;
pub const EXTI_EMR1_EM20_Msk: u32 = 0x1 << EXTI_EMR1_EM20_Pos;
pub const EXTI_EMR1_EM20: u32 = EXTI_EMR1_EM20_Msk;
pub const EXTI_EMR1_EM21_Pos: u32 = 21;
pub const EXTI_EMR1_EM21_Msk: u32 = 0x1 << EXTI_EMR1_EM21_Pos;
pub const EXTI_EMR1_EM21: u32 = EXTI_EMR1_EM21_Msk;
pub const EXTI_EMR1_EM22_Pos: u32 = 22;
pub const EXTI_EMR1_EM22_Msk: u32 = 0x1 << EXTI_EMR1_EM22_Pos;
pub const EXTI_EMR1_EM22: u32 = EXTI_EMR1_EM22_Msk;
pub const EXTI_IMR2_IM34_Pos: u32 = 2;
pub const EXTI_IMR2_IM34_Msk: u32 = 0x1 << EXTI_IMR2_IM34_Pos;
pub const EXTI_IMR2_IM34: u32 = EXTI_IMR2_IM34_Msk;
pub const EXTI_IMR2_IM38_Pos: u32 = 6;
pub const EXTI_IMR2_IM38_Msk: u32 = 0x1 << EXTI_IMR2_IM38_Pos;
pub const EXTI_IMR2_IM38: u32 = EXTI_IMR2_IM38_Msk;
pub const EXTI_IMR2_IM42_Pos: u32 = 10;
pub const EXTI_IMR2_IM42_Msk: u32 = 0x1 << EXTI_IMR2_IM42_Pos;
pub const EXTI_IMR2_IM42: u32 = EXTI_IMR2_IM42_Msk;
pub const EXTI_IMR2_IM43_Pos: u32 = 11;
pub const EXTI_IMR2_IM43_Msk: u32 = 0x1 << EXTI_IMR2_IM43_Pos;
pub const EXTI_IMR2_IM43: u32 = EXTI_IMR2_IM43_Msk;
pub const EXTI_IMR2_IM44_Pos: u32 = 12;
pub const EXTI_IMR2_IM44_Msk: u32 = 0x1 << EXTI_IMR2_IM44_Pos;
pub const EXTI_IMR2_IM44: u32 = EXTI_IMR2_IM44_Msk;
pub const EXTI_IMR2_IM45_Pos: u32 = 13;
pub const EXTI_IMR2_IM45_Msk: u32 = 0x1 << EXTI_IMR2_IM45_Pos;
pub const EXTI_IMR2_IM45: u32 = EXTI_IMR2_IM45_Msk;
pub const EXTI_IMR2_IM46_Pos: u32 = 14;
pub const EXTI_IMR2_IM46_Msk: u32 = 0x1 << EXTI_IMR2_IM46_Pos;
pub const EXTI_IMR2_IM46: u32 = EXTI_IMR2_IM46_Msk;
pub const FLASH_ACR_LATENCY_Pos: u32 = 0;
pub const FLASH_ACR_LATENCY_Msk: u32 = 0x7 << FLASH_ACR_LATENCY_Pos;
pub const FLASH_ACR_LATENCY: u32 = FLASH_ACR_LATENCY_Msk;
pub const FLASH_ACR_LATENCY_0: u32 = 0x1 << FLASH_ACR_LATENCY_Pos;
pub const FLASH_ACR_LATENCY_1: u32 = 0x2 << FLASH_ACR_LATENCY_Pos;
pub const FLASH_ACR_PRFTEN_Pos: u32 = 8;
pub const FLASH_ACR_PRFTEN_Msk: u32 = 0x1 << FLASH_ACR_PRFTEN_Pos;
pub const FLASH_ACR_PRFTEN: u32 = FLASH_ACR_PRFTEN_Msk;
pub const FLASH_ACR_ICEN_Pos: u32 = 9;
pub const FLASH_ACR_ICEN_Msk: u32 = 0x1 << FLASH_ACR_ICEN_Pos;
pub const FLASH_ACR_ICEN: u32 = FLASH_ACR_ICEN_Msk;
pub const FLASH_ACR_DCEN_Pos: u32 = 10;
pub const FLASH_ACR_DCEN_Msk: u32 = 0x1 << FLASH_ACR_DCEN_Pos;
pub const FLASH_ACR_DCEN: u32 = FLASH_ACR_DCEN_Msk;
pub const FLASH_ACR_ICRST_Pos: u32 = 11;
pub const FLASH_ACR_ICRST_Msk: u32 = 0x1 << FLASH_ACR_ICRST_Pos;
pub const FLASH_ACR_ICRST: u32 = FLASH_ACR_ICRST_Msk;
pub const FLASH_ACR_DCRST_Pos: u32 = 12;
pub const FLASH_ACR_DCRST_Msk: u32 = 0x1 << FLASH_ACR_DCRST_Pos;
pub const FLASH_ACR_DCRST: u32 = FLASH_ACR_DCRST_Msk;
pub const FLASH_ACR_PES_Pos: u32 = 15;
pub const FLASH_ACR_PES_Msk: u32 = 0x1 << FLASH_ACR_PES_Pos;
pub const FLASH_ACR_PES: u32 = FLASH_ACR_PES_Msk;
pub const FLASH_ACR_EMPTY_Pos: u32 = 16;
pub const FLASH_ACR_EMPTY_Msk: u32 = 0x1 << FLASH_ACR_EMPTY_Pos;
pub const FLASH_ACR_EMPTY: u32 = FLASH_ACR_EMPTY_Msk;
pub const FLASH_SR_EOP_Pos: u32 = 0;
pub const FLASH_SR_EOP_Msk: u32 = 0x1 << FLASH_SR_EOP_Pos;
pub const FLASH_SR_EOP: u32 = FLASH_SR_EOP_Msk;
pub const FLASH_SR_OPERR_Pos: u32 = 1;
pub const FLASH_SR_OPERR_Msk: u32 = 0x1 << FLASH_SR_OPERR_Pos;
pub const FLASH_SR_OPERR: u32 = FLASH_SR_OPERR_Msk;
pub const FLASH_SR_PROGERR_Pos: u32 = 3;
pub const FLASH_SR_PROGERR_Msk: u32 = 0x1 << FLASH_SR_PROGERR_Pos;
pub const FLASH_SR_PROGERR: u32 = FLASH_SR_PROGERR_Msk;
pub const FLASH_SR_WRPERR_Pos: u32 = 4;
pub const FLASH_SR_WRPERR_Msk: u32 = 0x1 << FLASH_SR_WRPERR_Pos;
pub const FLASH_SR_WRPERR: u32 = FLASH_SR_WRPERR_Msk;
pub const FLASH_SR_PGAERR_Pos: u32 = 5;
pub const FLASH_SR_PGAERR_Msk: u32 = 0x1 << FLASH_SR_PGAERR_Pos;
pub const FLASH_SR_PGAERR: u32 = FLASH_SR_PGAERR_Msk;
pub const FLASH_SR_SIZERR_Pos: u32 = 6;
pub const FLASH_SR_SIZERR_Msk: u32 = 0x1 << FLASH_SR_SIZERR_Pos;
pub const FLASH_SR_SIZERR: u32 = FLASH_SR_SIZERR_Msk;
pub const FLASH_SR_PGSERR_Pos: u32 = 7;
pub const FLASH_SR_PGSERR_Msk: u32 = 0x1 << FLASH_SR_PGSERR_Pos;
pub const FLASH_SR_PGSERR: u32 = FLASH_SR_PGSERR_Msk;
pub const FLASH_SR_MISERR_Pos: u32 = 8;
pub const FLASH_SR_MISERR_Msk: u32 = 0x1 << FLASH_SR_MISERR_Pos;
pub const FLASH_SR_MISERR: u32 = FLASH_SR_MISERR_Msk;
pub const FLASH_SR_FASTERR_Pos: u32 = 9;
pub const FLASH_SR_FASTERR_Msk: u32 = 0x1 << FLASH_SR_FASTERR_Pos;
pub const FLASH_SR_FASTERR: u32 = FLASH_SR_FASTERR_Msk;
pub const FLASH_SR_OPTNV_Pos: u32 = 13;
pub const FLASH_SR_OPTNV_Msk: u32 = 0x1 << FLASH_SR_OPTNV_Pos;
pub const FLASH_SR_OPTNV: u32 = FLASH_SR_OPTNV_Msk;
pub const FLASH_SR_RDERR_Pos: u32 = 14;
pub const FLASH_SR_RDERR_Msk: u32 = 0x1 << FLASH_SR_RDERR_Pos;
pub const FLASH_SR_RDERR: u32 = FLASH_SR_RDERR_Msk;
pub const FLASH_SR_OPTVERR_Pos: u32 = 15;
pub const FLASH_SR_OPTVERR_Msk: u32 = 0x1 << FLASH_SR_OPTVERR_Pos;
pub const FLASH_SR_OPTVERR: u32 = FLASH_SR_OPTVERR_Msk;
pub const FLASH_SR_BSY_Pos: u32 = 16;
pub const FLASH_SR_BSY_Msk: u32 = 0x1 << FLASH_SR_BSY_Pos;
pub const FLASH_SR_BSY: u32 = FLASH_SR_BSY_Msk;
pub const FLASH_SR_CFGBSY_Pos: u32 = 18;
pub const FLASH_SR_CFGBSY_Msk: u32 = 0x1 << FLASH_SR_CFGBSY_Pos;
pub const FLASH_SR_CFGBSY: u32 = FLASH_SR_CFGBSY_Msk;
pub const FLASH_SR_PESD_Pos: u32 = 19;
pub const FLASH_SR_PESD_Msk: u32 = 0x1 << FLASH_SR_PESD_Pos;
pub const FLASH_SR_PESD: u32 = FLASH_SR_PESD_Msk;
pub const FLASH_CR_PG_Pos: u32 = 0;
pub const FLASH_CR_PG_Msk: u32 = 0x1 << FLASH_CR_PG_Pos;
pub const FLASH_CR_PG: u32 = FLASH_CR_PG_Msk;
pub const FLASH_CR_PER_Pos: u32 = 1;
pub const FLASH_CR_PER_Msk: u32 = 0x1 << FLASH_CR_PER_Pos;
pub const FLASH_CR_PER: u32 = FLASH_CR_PER_Msk;
pub const FLASH_CR_MER_Pos: u32 = 2;
pub const FLASH_CR_MER_Msk: u32 = 0x1 << FLASH_CR_MER_Pos;
pub const FLASH_CR_MER: u32 = FLASH_CR_MER_Msk;
pub const FLASH_CR_PNB_Pos: u32 = 3;
pub const FLASH_CR_PNB_Msk: u32 = 0x7F << FLASH_CR_PNB_Pos;
pub const FLASH_CR_PNB: u32 = FLASH_CR_PNB_Msk;
pub const FLASH_CR_STRT_Pos: u32 = 16;
pub const FLASH_CR_STRT_Msk: u32 = 0x1 << FLASH_CR_STRT_Pos;
pub const FLASH_CR_STRT: u32 = FLASH_CR_STRT_Msk;
pub const FLASH_CR_OPTSTRT_Pos: u32 = 17;
pub const FLASH_CR_OPTSTRT_Msk: u32 = 0x1 << FLASH_CR_OPTSTRT_Pos;
pub const FLASH_CR_OPTSTRT: u32 = FLASH_CR_OPTSTRT_Msk;
pub const FLASH_CR_FSTPG_Pos: u32 = 18;
pub const FLASH_CR_FSTPG_Msk: u32 = 0x1 << FLASH_CR_FSTPG_Pos;
pub const FLASH_CR_FSTPG: u32 = FLASH_CR_FSTPG_Msk;
pub const FLASH_CR_EOPIE_Pos: u32 = 24;
pub const FLASH_CR_EOPIE_Msk: u32 = 0x1 << FLASH_CR_EOPIE_Pos;
pub const FLASH_CR_EOPIE: u32 = FLASH_CR_EOPIE_Msk;
pub const FLASH_CR_ERRIE_Pos: u32 = 25;
pub const FLASH_CR_ERRIE_Msk: u32 = 0x1 << FLASH_CR_ERRIE_Pos;
pub const FLASH_CR_ERRIE: u32 = FLASH_CR_ERRIE_Msk;
pub const FLASH_CR_RDERRIE_Pos: u32 = 26;
pub const FLASH_CR_RDERRIE_Msk: u32 = 0x1 << FLASH_CR_RDERRIE_Pos;
pub const FLASH_CR_RDERRIE: u32 = FLASH_CR_RDERRIE_Msk;
pub const FLASH_CR_OBL_LAUNCH_Pos: u32 = 27;
pub const FLASH_CR_OBL_LAUNCH_Msk: u32 = 0x1 << FLASH_CR_OBL_LAUNCH_Pos;
pub const FLASH_CR_OBL_LAUNCH: u32 = FLASH_CR_OBL_LAUNCH_Msk;
pub const FLASH_CR_OPTLOCK_Pos: u32 = 30;
pub const FLASH_CR_OPTLOCK_Msk: u32 = 0x1 << FLASH_CR_OPTLOCK_Pos;
pub const FLASH_CR_OPTLOCK: u32 = FLASH_CR_OPTLOCK_Msk;
pub const FLASH_CR_LOCK_Pos: u32 = 31;
pub const FLASH_CR_LOCK_Msk: u32 = 0x1 << FLASH_CR_LOCK_Pos;
pub const FLASH_CR_LOCK: u32 = FLASH_CR_LOCK_Msk;
pub const FLASH_ECCR_ADDR_ECC_Pos: u32 = 0;
pub const FLASH_ECCR_ADDR_ECC_Msk: u32 = 0x1FFFF << FLASH_ECCR_ADDR_ECC_Pos;
pub const FLASH_ECCR_ADDR_ECC: u32 = FLASH_ECCR_ADDR_ECC_Msk;
pub const FLASH_ECCR_SYSF_ECC_Pos: u32 = 20;
pub const FLASH_ECCR_SYSF_ECC_Msk: u32 = 0x1 << FLASH_ECCR_SYSF_ECC_Pos;
pub const FLASH_ECCR_SYSF_ECC: u32 = FLASH_ECCR_SYSF_ECC_Msk;
pub const FLASH_ECCR_ECCCIE_Pos: u32 = 24;
pub const FLASH_ECCR_ECCCIE_Msk: u32 = 0x1 << FLASH_ECCR_ECCCIE_Pos;
pub const FLASH_ECCR_ECCCIE: u32 = FLASH_ECCR_ECCCIE_Msk;
pub const FLASH_ECCR_CPUID_Pos: u32 = 26;
pub const FLASH_ECCR_CPUID_Msk: u32 = 0x7 << FLASH_ECCR_CPUID_Pos;
pub const FLASH_ECCR_CPUID: u32 = FLASH_ECCR_CPUID_Msk;
pub const FLASH_ECCR_ECCC_Pos: u32 = 30;
pub const FLASH_ECCR_ECCC_Msk: u32 = 0x1 << FLASH_ECCR_ECCC_Pos;
pub const FLASH_ECCR_ECCC: u32 = FLASH_ECCR_ECCC_Msk;
pub const FLASH_ECCR_ECCD_Pos: u32 = 31;
pub const FLASH_ECCR_ECCD_Msk: u32 = 0x1 << FLASH_ECCR_ECCD_Pos;
pub const FLASH_ECCR_ECCD: u32 = FLASH_ECCR_ECCD_Msk;
pub const FLASH_OPTR_RDP_Pos: u32 = 0;
pub const FLASH_OPTR_RDP_Msk: u32 = 0xFF << FLASH_OPTR_RDP_Pos;
pub const FLASH_OPTR_RDP: u32 = FLASH_OPTR_RDP_Msk;
pub const FLASH_OPTR_ESE_Pos: u32 = 8;
pub const FLASH_OPTR_ESE_Msk: u32 = 0x1 << FLASH_OPTR_ESE_Pos;
pub const FLASH_OPTR_ESE: u32 = FLASH_OPTR_ESE_Msk;
pub const FLASH_OPTR_BOR_LEV_Pos: u32 = 9;
pub const FLASH_OPTR_BOR_LEV_Msk: u32 = 0x7 << FLASH_OPTR_BOR_LEV_Pos;
pub const FLASH_OPTR_BOR_LEV: u32 = FLASH_OPTR_BOR_LEV_Msk;
pub const FLASH_OPTR_BOR_LEV_0: u32 = 0x1 << FLASH_OPTR_BOR_LEV_Pos;
pub const FLASH_OPTR_BOR_LEV_1: u32 = 0x2 << FLASH_OPTR_BOR_LEV_Pos;
pub const FLASH_OPTR_BOR_LEV_2: u32 = 0x4 << FLASH_OPTR_BOR_LEV_Pos;
pub const FLASH_OPTR_nRST_STOP_Pos: u32 = 12;
pub const FLASH_OPTR_nRST_STOP_Msk: u32 = 0x1 << FLASH_OPTR_nRST_STOP_Pos;
pub const FLASH_OPTR_nRST_STOP: u32 = FLASH_OPTR_nRST_STOP_Msk;
pub const FLASH_OPTR_nRST_STDBY_Pos: u32 = 13;
pub const FLASH_OPTR_nRST_STDBY_Msk: u32 = 0x1 << FLASH_OPTR_nRST_STDBY_Pos;
pub const FLASH_OPTR_nRST_STDBY: u32 = FLASH_OPTR_nRST_STDBY_Msk;
pub const FLASH_OPTR_nRST_SHDW_Pos: u32 = 14;
pub const FLASH_OPTR_nRST_SHDW_Msk: u32 = 0x1 << FLASH_OPTR_nRST_SHDW_Pos;
pub const FLASH_OPTR_nRST_SHDW: u32 = FLASH_OPTR_nRST_SHDW_Msk;
pub const FLASH_OPTR_IWDG_SW_Pos: u32 = 16;
pub const FLASH_OPTR_IWDG_SW_Msk: u32 = 0x1 << FLASH_OPTR_IWDG_SW_Pos;
pub const FLASH_OPTR_IWDG_SW: u32 = FLASH_OPTR_IWDG_SW_Msk;
pub const FLASH_OPTR_IWDG_STOP_Pos: u32 = 17;
pub const FLASH_OPTR_IWDG_STOP_Msk: u32 = 0x1 << FLASH_OPTR_IWDG_STOP_Pos;
pub const FLASH_OPTR_IWDG_STOP: u32 = FLASH_OPTR_IWDG_STOP_Msk;
pub const FLASH_OPTR_IWDG_STDBY_Pos: u32 = 18;
pub const FLASH_OPTR_IWDG_STDBY_Msk: u32 = 0x1 << FLASH_OPTR_IWDG_STDBY_Pos;
pub const FLASH_OPTR_IWDG_STDBY: u32 = FLASH_OPTR_IWDG_STDBY_Msk;
pub const FLASH_OPTR_WWDG_SW_Pos: u32 = 19;
pub const FLASH_OPTR_WWDG_SW_Msk: u32 = 0x1 << FLASH_OPTR_WWDG_SW_Pos;
pub const FLASH_OPTR_WWDG_SW: u32 = FLASH_OPTR_WWDG_SW_Msk;
pub const FLASH_OPTR_nBOOT1_Pos: u32 = 23;
pub const FLASH_OPTR_nBOOT1_Msk: u32 = 0x1 << FLASH_OPTR_nBOOT1_Pos;
pub const FLASH_OPTR_nBOOT1: u32 = FLASH_OPTR_nBOOT1_Msk;
pub const FLASH_OPTR_SRAM2_PE_Pos: u32 = 24;
pub const FLASH_OPTR_SRAM2_PE_Msk: u32 = 0x1 << FLASH_OPTR_SRAM2_PE_Pos;
pub const FLASH_OPTR_SRAM2_PE: u32 = FLASH_OPTR_SRAM2_PE_Msk;
pub const FLASH_OPTR_SRAM_RST_Pos: u32 = 25;
pub const FLASH_OPTR_SRAM_RST_Msk: u32 = 0x1 << FLASH_OPTR_SRAM_RST_Pos;
pub const FLASH_OPTR_SRAM_RST: u32 = FLASH_OPTR_SRAM_RST_Msk;
pub const FLASH_OPTR_nSWBOOT0_Pos: u32 = 26;
pub const FLASH_OPTR_nSWBOOT0_Msk: u32 = 0x1 << FLASH_OPTR_nSWBOOT0_Pos;
pub const FLASH_OPTR_nSWBOOT0: u32 = FLASH_OPTR_nSWBOOT0_Msk;
pub const FLASH_OPTR_nBOOT0_Pos: u32 = 27;
pub const FLASH_OPTR_nBOOT0_Msk: u32 = 0x1 << FLASH_OPTR_nBOOT0_Pos;
pub const FLASH_OPTR_nBOOT0: u32 = FLASH_OPTR_nBOOT0_Msk;
pub const FLASH_OPTR_BOOT_LOCK_Pos: u32 = 30;
pub const FLASH_OPTR_BOOT_LOCK_Msk: u32 = 0x1 << FLASH_OPTR_BOOT_LOCK_Pos;
pub const FLASH_OPTR_BOOT_LOCK: u32 = FLASH_OPTR_BOOT_LOCK_Msk;
pub const FLASH_PCROP1ASR_PCROP1A_STRT_Pos: u32 = 0;
pub const FLASH_PCROP1ASR_PCROP1A_STRT_Msk: u32 = 0xFF << FLASH_PCROP1ASR_PCROP1A_STRT_Pos;
pub const FLASH_PCROP1ASR_PCROP1A_STRT: u32 = FLASH_PCROP1ASR_PCROP1A_STRT_Msk;
pub const FLASH_PCROP1AER_PCROP1A_END_Pos: u32 = 0;
pub const FLASH_PCROP1AER_PCROP1A_END_Msk: u32 = 0xFF << FLASH_PCROP1AER_PCROP1A_END_Pos;
pub const FLASH_PCROP1AER_PCROP1A_END: u32 = FLASH_PCROP1AER_PCROP1A_END_Msk;
pub const FLASH_PCROP1AER_PCROP_RDP_Pos: u32 = 31;
pub const FLASH_PCROP1AER_PCROP_RDP_Msk: u32 = 0x1 << FLASH_PCROP1AER_PCROP_RDP_Pos;
pub const FLASH_PCROP1AER_PCROP_RDP: u32 = FLASH_PCROP1AER_PCROP_RDP_Msk;
pub const FLASH_WRP1AR_WRP1A_STRT_Pos: u32 = 0;
pub const FLASH_WRP1AR_WRP1A_STRT_Msk: u32 = 0x7F << FLASH_WRP1AR_WRP1A_STRT_Pos;
pub const FLASH_WRP1AR_WRP1A_STRT: u32 = FLASH_WRP1AR_WRP1A_STRT_Msk;
pub const FLASH_WRP1AR_WRP1A_END_Pos: u32 = 16;
pub const FLASH_WRP1AR_WRP1A_END_Msk: u32 = 0x7F << FLASH_WRP1AR_WRP1A_END_Pos;
pub const FLASH_WRP1AR_WRP1A_END: u32 = FLASH_WRP1AR_WRP1A_END_Msk;
pub const FLASH_WRP1BR_WRP1B_STRT_Pos: u32 = 0;
pub const FLASH_WRP1BR_WRP1B_STRT_Msk: u32 = 0x7F << FLASH_WRP1BR_WRP1B_STRT_Pos;
pub const FLASH_WRP1BR_WRP1B_STRT: u32 = FLASH_WRP1BR_WRP1B_STRT_Msk;
pub const FLASH_WRP1BR_WRP1B_END_Pos: u32 = 16;
pub const FLASH_WRP1BR_WRP1B_END_Msk: u32 = 0x7F << FLASH_WRP1BR_WRP1B_END_Pos;
pub const FLASH_WRP1BR_WRP1B_END: u32 = FLASH_WRP1BR_WRP1B_END_Msk;
pub const FLASH_PCROP1BSR_PCROP1B_STRT_Pos: u32 = 0;
pub const FLASH_PCROP1BSR_PCROP1B_STRT_Msk: u32 = 0xFF << FLASH_PCROP1BSR_PCROP1B_STRT_Pos;
pub const FLASH_PCROP1BSR_PCROP1B_STRT: u32 = FLASH_PCROP1BSR_PCROP1B_STRT_Msk;
pub const FLASH_PCROP1BER_PCROP1B_END_Pos: u32 = 0;
pub const FLASH_PCROP1BER_PCROP1B_END_Msk: u32 = 0xFF << FLASH_PCROP1BER_PCROP1B_END_Pos;
pub const FLASH_PCROP1BER_PCROP1B_END: u32 = FLASH_PCROP1BER_PCROP1B_END_Msk;
pub const GPIO_MODER_MODE0_Pos: u32 = 0;
pub const GPIO_MODER_MODE0_Msk: u32 = 0x3 << GPIO_MODER_MODE0_Pos;
pub const GPIO_MODER_MODE0: u32 = GPIO_MODER_MODE0_Msk;
pub const GPIO_MODER_MODE0_0: u32 = 0x1 << GPIO_MODER_MODE0_Pos;
pub const GPIO_MODER_MODE0_1: u32 = 0x2 << GPIO_MODER_MODE0_Pos;
pub const GPIO_MODER_MODE1_Pos: u32 = 2;
pub const GPIO_MODER_MODE1_Msk: u32 = 0x3 << GPIO_MODER_MODE1_Pos;
pub const GPIO_MODER_MODE1: u32 = GPIO_MODER_MODE1_Msk;
pub const GPIO_MODER_MODE1_0: u32 = 0x1 << GPIO_MODER_MODE1_Pos;
pub const GPIO_MODER_MODE1_1: u32 = 0x2 << GPIO_MODER_MODE1_Pos;
pub const GPIO_MODER_MODE2_Pos: u32 = 4;
pub const GPIO_MODER_MODE2_Msk: u32 = 0x3 << GPIO_MODER_MODE2_Pos;
pub const GPIO_MODER_MODE2: u32 = GPIO_MODER_MODE2_Msk;
pub const GPIO_MODER_MODE2_0: u32 = 0x1 << GPIO_MODER_MODE2_Pos;
pub const GPIO_MODER_MODE2_1: u32 = 0x2 << GPIO_MODER_MODE2_Pos;
pub const GPIO_MODER_MODE3_Pos: u32 = 6;
pub const GPIO_MODER_MODE3_Msk: u32 = 0x3 << GPIO_MODER_MODE3_Pos;
pub const GPIO_MODER_MODE3: u32 = GPIO_MODER_MODE3_Msk;
pub const GPIO_MODER_MODE3_0: u32 = 0x1 << GPIO_MODER_MODE3_Pos;
pub const GPIO_MODER_MODE3_1: u32 = 0x2 << GPIO_MODER_MODE3_Pos;
pub const GPIO_MODER_MODE4_Pos: u32 = 8;
pub const GPIO_MODER_MODE4_Msk: u32 = 0x3 << GPIO_MODER_MODE4_Pos;
pub const GPIO_MODER_MODE4: u32 = GPIO_MODER_MODE4_Msk;
pub const GPIO_MODER_MODE4_0: u32 = 0x1 << GPIO_MODER_MODE4_Pos;
pub const GPIO_MODER_MODE4_1: u32 = 0x2 << GPIO_MODER_MODE4_Pos;
pub const GPIO_MODER_MODE5_Pos: u32 = 10;
pub const GPIO_MODER_MODE5_Msk: u32 = 0x3 << GPIO_MODER_MODE5_Pos;
pub const GPIO_MODER_MODE5: u32 = GPIO_MODER_MODE5_Msk;
pub const GPIO_MODER_MODE5_0: u32 = 0x1 << GPIO_MODER_MODE5_Pos;
pub const GPIO_MODER_MODE5_1: u32 = 0x2 << GPIO_MODER_MODE5_Pos;
pub const GPIO_MODER_MODE6_Pos: u32 = 12;
pub const GPIO_MODER_MODE6_Msk: u32 = 0x3 << GPIO_MODER_MODE6_Pos;
pub const GPIO_MODER_MODE6: u32 = GPIO_MODER_MODE6_Msk;
pub const GPIO_MODER_MODE6_0: u32 = 0x1 << GPIO_MODER_MODE6_Pos;
pub const GPIO_MODER_MODE6_1: u32 = 0x2 << GPIO_MODER_MODE6_Pos;
pub const GPIO_MODER_MODE7_Pos: u32 = 14;
pub const GPIO_MODER_MODE7_Msk: u32 = 0x3 << GPIO_MODER_MODE7_Pos;
pub const GPIO_MODER_MODE7: u32 = GPIO_MODER_MODE7_Msk;
pub const GPIO_MODER_MODE7_0: u32 = 0x1 << GPIO_MODER_MODE7_Pos;
pub const GPIO_MODER_MODE7_1: u32 = 0x2 << GPIO_MODER_MODE7_Pos;
pub const GPIO_MODER_MODE8_Pos: u32 = 16;
pub const GPIO_MODER_MODE8_Msk: u32 = 0x3 << GPIO_MODER_MODE8_Pos;
pub const GPIO_MODER_MODE8: u32 = GPIO_MODER_MODE8_Msk;
pub const GPIO_MODER_MODE8_0: u32 = 0x1 << GPIO_MODER_MODE8_Pos;
pub const GPIO_MODER_MODE8_1: u32 = 0x2 << GPIO_MODER_MODE8_Pos;
pub const GPIO_MODER_MODE9_Pos: u32 = 18;
pub const GPIO_MODER_MODE9_Msk: u32 = 0x3 << GPIO_MODER_MODE9_Pos;
pub const GPIO_MODER_MODE9: u32 = GPIO_MODER_MODE9_Msk;
pub const GPIO_MODER_MODE9_0: u32 = 0x1 << GPIO_MODER_MODE9_Pos;
pub const GPIO_MODER_MODE9_1: u32 = 0x2 << GPIO_MODER_MODE9_Pos;
pub const GPIO_MODER_MODE10_Pos: u32 = 20;
pub const GPIO_MODER_MODE10_Msk: u32 = 0x3 << GPIO_MODER_MODE10_Pos;
pub const GPIO_MODER_MODE10: u32 = GPIO_MODER_MODE10_Msk;
pub const GPIO_MODER_MODE10_0: u32 = 0x1 << GPIO_MODER_MODE10_Pos;
pub const GPIO_MODER_MODE10_1: u32 = 0x2 << GPIO_MODER_MODE10_Pos;
pub const GPIO_MODER_MODE11_Pos: u32 = 22;
pub const GPIO_MODER_MODE11_Msk: u32 = 0x3 << GPIO_MODER_MODE11_Pos;
pub const GPIO_MODER_MODE11: u32 = GPIO_MODER_MODE11_Msk;
pub const GPIO_MODER_MODE11_0: u32 = 0x1 << GPIO_MODER_MODE11_Pos;
pub const GPIO_MODER_MODE11_1: u32 = 0x2 << GPIO_MODER_MODE11_Pos;
pub const GPIO_MODER_MODE12_Pos: u32 = 24;
pub const GPIO_MODER_MODE12_Msk: u32 = 0x3 << GPIO_MODER_MODE12_Pos;
pub const GPIO_MODER_MODE12: u32 = GPIO_MODER_MODE12_Msk;
pub const GPIO_MODER_MODE12_0: u32 = 0x1 << GPIO_MODER_MODE12_Pos;
pub const GPIO_MODER_MODE12_1: u32 = 0x2 << GPIO_MODER_MODE12_Pos;
pub const GPIO_MODER_MODE13_Pos: u32 = 26;
pub const GPIO_MODER_MODE13_Msk: u32 = 0x3 << GPIO_MODER_MODE13_Pos;
pub const GPIO_MODER_MODE13: u32 = GPIO_MODER_MODE13_Msk;
pub const GPIO_MODER_MODE13_0: u32 = 0x1 << GPIO_MODER_MODE13_Pos;
pub const GPIO_MODER_MODE13_1: u32 = 0x2 << GPIO_MODER_MODE13_Pos;
pub const GPIO_MODER_MODE14_Pos: u32 = 28;
pub const GPIO_MODER_MODE14_Msk: u32 = 0x3 << GPIO_MODER_MODE14_Pos;
pub const GPIO_MODER_MODE14: u32 = GPIO_MODER_MODE14_Msk;
pub const GPIO_MODER_MODE14_0: u32 = 0x1 << GPIO_MODER_MODE14_Pos;
pub const GPIO_MODER_MODE14_1: u32 = 0x2 << GPIO_MODER_MODE14_Pos;
pub const GPIO_MODER_MODE15_Pos: u32 = 30;
pub const GPIO_MODER_MODE15_Msk: u32 = 0x3 << GPIO_MODER_MODE15_Pos;
pub const GPIO_MODER_MODE15: u32 = GPIO_MODER_MODE15_Msk;
pub const GPIO_MODER_MODE15_0: u32 = 0x1 << GPIO_MODER_MODE15_Pos;
pub const GPIO_MODER_MODE15_1: u32 = 0x2 << GPIO_MODER_MODE15_Pos;
pub const GPIO_OTYPER_OT0_Pos: u32 = 0;
pub const GPIO_OTYPER_OT0_Msk: u32 = 0x1 << GPIO_OTYPER_OT0_Pos;
pub const GPIO_OTYPER_OT0: u32 = GPIO_OTYPER_OT0_Msk;
pub const GPIO_OTYPER_OT1_Pos: u32 = 1;
pub const GPIO_OTYPER_OT1_Msk: u32 = 0x1 << GPIO_OTYPER_OT1_Pos;
pub const GPIO_OTYPER_OT1: u32 = GPIO_OTYPER_OT1_Msk;
pub const GPIO_OTYPER_OT2_Pos: u32 = 2;
pub const GPIO_OTYPER_OT2_Msk: u32 = 0x1 << GPIO_OTYPER_OT2_Pos;
pub const GPIO_OTYPER_OT2: u32 = GPIO_OTYPER_OT2_Msk;
pub const GPIO_OTYPER_OT3_Pos: u32 = 3;
pub const GPIO_OTYPER_OT3_Msk: u32 = 0x1 << GPIO_OTYPER_OT3_Pos;
pub const GPIO_OTYPER_OT3: u32 = GPIO_OTYPER_OT3_Msk;
pub const GPIO_OTYPER_OT4_Pos: u32 = 4;
pub const GPIO_OTYPER_OT4_Msk: u32 = 0x1 << GPIO_OTYPER_OT4_Pos;
pub const GPIO_OTYPER_OT4: u32 = GPIO_OTYPER_OT4_Msk;
pub const GPIO_OTYPER_OT5_Pos: u32 = 5;
pub const GPIO_OTYPER_OT5_Msk: u32 = 0x1 << GPIO_OTYPER_OT5_Pos;
pub const GPIO_OTYPER_OT5: u32 = GPIO_OTYPER_OT5_Msk;
pub const GPIO_OTYPER_OT6_Pos: u32 = 6;
pub const GPIO_OTYPER_OT6_Msk: u32 = 0x1 << GPIO_OTYPER_OT6_Pos;
pub const GPIO_OTYPER_OT6: u32 = GPIO_OTYPER_OT6_Msk;
pub const GPIO_OTYPER_OT7_Pos: u32 = 7;
pub const GPIO_OTYPER_OT7_Msk: u32 = 0x1 << GPIO_OTYPER_OT7_Pos;
pub const GPIO_OTYPER_OT7: u32 = GPIO_OTYPER_OT7_Msk;
pub const GPIO_OTYPER_OT8_Pos: u32 = 8;
pub const GPIO_OTYPER_OT8_Msk: u32 = 0x1 << GPIO_OTYPER_OT8_Pos;
pub const GPIO_OTYPER_OT8: u32 = GPIO_OTYPER_OT8_Msk;
pub const GPIO_OTYPER_OT9_Pos: u32 = 9;
pub const GPIO_OTYPER_OT9_Msk: u32 = 0x1 << GPIO_OTYPER_OT9_Pos;
pub const GPIO_OTYPER_OT9: u32 = GPIO_OTYPER_OT9_Msk;
pub const GPIO_OTYPER_OT10_Pos: u32 = 10;
pub const GPIO_OTYPER_OT10_Msk: u32 = 0x1 << GPIO_OTYPER_OT10_Pos;
pub const GPIO_OTYPER_OT10: u32 = GPIO_OTYPER_OT10_Msk;
pub const GPIO_OTYPER_OT11_Pos: u32 = 11;
pub const GPIO_OTYPER_OT11_Msk: u32 = 0x1 << GPIO_OTYPER_OT11_Pos;
pub const GPIO_OTYPER_OT11: u32 = GPIO_OTYPER_OT11_Msk;
pub const GPIO_OTYPER_OT12_Pos: u32 = 12;
pub const GPIO_OTYPER_OT12_Msk: u32 = 0x1 << GPIO_OTYPER_OT12_Pos;
pub const GPIO_OTYPER_OT12: u32 = GPIO_OTYPER_OT12_Msk;
pub const GPIO_OTYPER_OT13_Pos: u32 = 13;
pub const GPIO_OTYPER_OT13_Msk: u32 = 0x1 << GPIO_OTYPER_OT13_Pos;
pub const GPIO_OTYPER_OT13: u32 = GPIO_OTYPER_OT13_Msk;
pub const GPIO_OTYPER_OT14_Pos: u32 = 14;
pub const GPIO_OTYPER_OT14_Msk: u32 = 0x1 << GPIO_OTYPER_OT14_Pos;
pub const GPIO_OTYPER_OT14: u32 = GPIO_OTYPER_OT14_Msk;
pub const GPIO_OTYPER_OT15_Pos: u32 = 15;
pub const GPIO_OTYPER_OT15_Msk: u32 = 0x1 << GPIO_OTYPER_OT15_Pos;
pub const GPIO_OTYPER_OT15: u32 = GPIO_OTYPER_OT15_Msk;
pub const GPIO_OSPEEDR_OSPEED0_Pos: u32 = 0;
pub const GPIO_OSPEEDR_OSPEED0_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED0_Pos;
pub const GPIO_OSPEEDR_OSPEED0: u32 = GPIO_OSPEEDR_OSPEED0_Msk;
pub const GPIO_OSPEEDR_OSPEED0_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED0_Pos;
pub const GPIO_OSPEEDR_OSPEED0_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED0_Pos;
pub const GPIO_OSPEEDR_OSPEED1_Pos: u32 = 2;
pub const GPIO_OSPEEDR_OSPEED1_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED1_Pos;
pub const GPIO_OSPEEDR_OSPEED1: u32 = GPIO_OSPEEDR_OSPEED1_Msk;
pub const GPIO_OSPEEDR_OSPEED1_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED1_Pos;
pub const GPIO_OSPEEDR_OSPEED1_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED1_Pos;
pub const GPIO_OSPEEDR_OSPEED2_Pos: u32 = 4;
pub const GPIO_OSPEEDR_OSPEED2_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED2_Pos;
pub const GPIO_OSPEEDR_OSPEED2: u32 = GPIO_OSPEEDR_OSPEED2_Msk;
pub const GPIO_OSPEEDR_OSPEED2_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED2_Pos;
pub const GPIO_OSPEEDR_OSPEED2_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED2_Pos;
pub const GPIO_OSPEEDR_OSPEED3_Pos: u32 = 6;
pub const GPIO_OSPEEDR_OSPEED3_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED3_Pos;
pub const GPIO_OSPEEDR_OSPEED3: u32 = GPIO_OSPEEDR_OSPEED3_Msk;
pub const GPIO_OSPEEDR_OSPEED3_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED3_Pos;
pub const GPIO_OSPEEDR_OSPEED3_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED3_Pos;
pub const GPIO_OSPEEDR_OSPEED4_Pos: u32 = 8;
pub const GPIO_OSPEEDR_OSPEED4_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED4_Pos;
pub const GPIO_OSPEEDR_OSPEED4: u32 = GPIO_OSPEEDR_OSPEED4_Msk;
pub const GPIO_OSPEEDR_OSPEED4_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED4_Pos;
pub const GPIO_OSPEEDR_OSPEED4_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED4_Pos;
pub const GPIO_OSPEEDR_OSPEED5_Pos: u32 = 10;
pub const GPIO_OSPEEDR_OSPEED5_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED5_Pos;
pub const GPIO_OSPEEDR_OSPEED5: u32 = GPIO_OSPEEDR_OSPEED5_Msk;
pub const GPIO_OSPEEDR_OSPEED5_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED5_Pos;
pub const GPIO_OSPEEDR_OSPEED5_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED5_Pos;
pub const GPIO_OSPEEDR_OSPEED6_Pos: u32 = 12;
pub const GPIO_OSPEEDR_OSPEED6_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED6_Pos;
pub const GPIO_OSPEEDR_OSPEED6: u32 = GPIO_OSPEEDR_OSPEED6_Msk;
pub const GPIO_OSPEEDR_OSPEED6_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED6_Pos;
pub const GPIO_OSPEEDR_OSPEED6_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED6_Pos;
pub const GPIO_OSPEEDR_OSPEED7_Pos: u32 = 14;
pub const GPIO_OSPEEDR_OSPEED7_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED7_Pos;
pub const GPIO_OSPEEDR_OSPEED7: u32 = GPIO_OSPEEDR_OSPEED7_Msk;
pub const GPIO_OSPEEDR_OSPEED7_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED7_Pos;
pub const GPIO_OSPEEDR_OSPEED7_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED7_Pos;
pub const GPIO_OSPEEDR_OSPEED8_Pos: u32 = 16;
pub const GPIO_OSPEEDR_OSPEED8_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED8_Pos;
pub const GPIO_OSPEEDR_OSPEED8: u32 = GPIO_OSPEEDR_OSPEED8_Msk;
pub const GPIO_OSPEEDR_OSPEED8_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED8_Pos;
pub const GPIO_OSPEEDR_OSPEED8_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED8_Pos;
pub const GPIO_OSPEEDR_OSPEED9_Pos: u32 = 18;
pub const GPIO_OSPEEDR_OSPEED9_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED9_Pos;
pub const GPIO_OSPEEDR_OSPEED9: u32 = GPIO_OSPEEDR_OSPEED9_Msk;
pub const GPIO_OSPEEDR_OSPEED9_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED9_Pos;
pub const GPIO_OSPEEDR_OSPEED9_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED9_Pos;
pub const GPIO_OSPEEDR_OSPEED10_Pos: u32 = 20;
pub const GPIO_OSPEEDR_OSPEED10_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED10_Pos;
pub const GPIO_OSPEEDR_OSPEED10: u32 = GPIO_OSPEEDR_OSPEED10_Msk;
pub const GPIO_OSPEEDR_OSPEED10_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED10_Pos;
pub const GPIO_OSPEEDR_OSPEED10_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED10_Pos;
pub const GPIO_OSPEEDR_OSPEED11_Pos: u32 = 22;
pub const GPIO_OSPEEDR_OSPEED11_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED11_Pos;
pub const GPIO_OSPEEDR_OSPEED11: u32 = GPIO_OSPEEDR_OSPEED11_Msk;
pub const GPIO_OSPEEDR_OSPEED11_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED11_Pos;
pub const GPIO_OSPEEDR_OSPEED11_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED11_Pos;
pub const GPIO_OSPEEDR_OSPEED12_Pos: u32 = 24;
pub const GPIO_OSPEEDR_OSPEED12_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED12_Pos;
pub const GPIO_OSPEEDR_OSPEED12: u32 = GPIO_OSPEEDR_OSPEED12_Msk;
pub const GPIO_OSPEEDR_OSPEED12_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED12_Pos;
pub const GPIO_OSPEEDR_OSPEED12_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED12_Pos;
pub const GPIO_OSPEEDR_OSPEED13_Pos: u32 = 26;
pub const GPIO_OSPEEDR_OSPEED13_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED13_Pos;
pub const GPIO_OSPEEDR_OSPEED13: u32 = GPIO_OSPEEDR_OSPEED13_Msk;
pub const GPIO_OSPEEDR_OSPEED13_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED13_Pos;
pub const GPIO_OSPEEDR_OSPEED13_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED13_Pos;
pub const GPIO_OSPEEDR_OSPEED14_Pos: u32 = 28;
pub const GPIO_OSPEEDR_OSPEED14_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED14_Pos;
pub const GPIO_OSPEEDR_OSPEED14: u32 = GPIO_OSPEEDR_OSPEED14_Msk;
pub const GPIO_OSPEEDR_OSPEED14_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED14_Pos;
pub const GPIO_OSPEEDR_OSPEED14_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED14_Pos;
pub const GPIO_OSPEEDR_OSPEED15_Pos: u32 = 30;
pub const GPIO_OSPEEDR_OSPEED15_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED15_Pos;
pub const GPIO_OSPEEDR_OSPEED15: u32 = GPIO_OSPEEDR_OSPEED15_Msk;
pub const GPIO_OSPEEDR_OSPEED15_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED15_Pos;
pub const GPIO_OSPEEDR_OSPEED15_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED15_Pos;
pub const GPIO_PUPDR_PUPD0_Pos: u32 = 0;
pub const GPIO_PUPDR_PUPD0_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD0_Pos;
pub const GPIO_PUPDR_PUPD0: u32 = GPIO_PUPDR_PUPD0_Msk;
pub const GPIO_PUPDR_PUPD0_0: u32 = 0x1 << GPIO_PUPDR_PUPD0_Pos;
pub const GPIO_PUPDR_PUPD0_1: u32 = 0x2 << GPIO_PUPDR_PUPD0_Pos;
pub const GPIO_PUPDR_PUPD1_Pos: u32 = 2;
pub const GPIO_PUPDR_PUPD1_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD1_Pos;
pub const GPIO_PUPDR_PUPD1: u32 = GPIO_PUPDR_PUPD1_Msk;
pub const GPIO_PUPDR_PUPD1_0: u32 = 0x1 << GPIO_PUPDR_PUPD1_Pos;
pub const GPIO_PUPDR_PUPD1_1: u32 = 0x2 << GPIO_PUPDR_PUPD1_Pos;
pub const GPIO_PUPDR_PUPD2_Pos: u32 = 4;
pub const GPIO_PUPDR_PUPD2_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD2_Pos;
pub const GPIO_PUPDR_PUPD2: u32 = GPIO_PUPDR_PUPD2_Msk;
pub const GPIO_PUPDR_PUPD2_0: u32 = 0x1 << GPIO_PUPDR_PUPD2_Pos;
pub const GPIO_PUPDR_PUPD2_1: u32 = 0x2 << GPIO_PUPDR_PUPD2_Pos;
pub const GPIO_PUPDR_PUPD3_Pos: u32 = 6;
pub const GPIO_PUPDR_PUPD3_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD3_Pos;
pub const GPIO_PUPDR_PUPD3: u32 = GPIO_PUPDR_PUPD3_Msk;
pub const GPIO_PUPDR_PUPD3_0: u32 = 0x1 << GPIO_PUPDR_PUPD3_Pos;
pub const GPIO_PUPDR_PUPD3_1: u32 = 0x2 << GPIO_PUPDR_PUPD3_Pos;
pub const GPIO_PUPDR_PUPD4_Pos: u32 = 8;
pub const GPIO_PUPDR_PUPD4_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD4_Pos;
pub const GPIO_PUPDR_PUPD4: u32 = GPIO_PUPDR_PUPD4_Msk;
pub const GPIO_PUPDR_PUPD4_0: u32 = 0x1 << GPIO_PUPDR_PUPD4_Pos;
pub const GPIO_PUPDR_PUPD4_1: u32 = 0x2 << GPIO_PUPDR_PUPD4_Pos;
pub const GPIO_PUPDR_PUPD5_Pos: u32 = 10;
pub const GPIO_PUPDR_PUPD5_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD5_Pos;
pub const GPIO_PUPDR_PUPD5: u32 = GPIO_PUPDR_PUPD5_Msk;
pub const GPIO_PUPDR_PUPD5_0: u32 = 0x1 << GPIO_PUPDR_PUPD5_Pos;
pub const GPIO_PUPDR_PUPD5_1: u32 = 0x2 << GPIO_PUPDR_PUPD5_Pos;
pub const GPIO_PUPDR_PUPD6_Pos: u32 = 12;
pub const GPIO_PUPDR_PUPD6_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD6_Pos;
pub const GPIO_PUPDR_PUPD6: u32 = GPIO_PUPDR_PUPD6_Msk;
pub const GPIO_PUPDR_PUPD6_0: u32 = 0x1 << GPIO_PUPDR_PUPD6_Pos;
pub const GPIO_PUPDR_PUPD6_1: u32 = 0x2 << GPIO_PUPDR_PUPD6_Pos;
pub const GPIO_PUPDR_PUPD7_Pos: u32 = 14;
pub const GPIO_PUPDR_PUPD7_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD7_Pos;
pub const GPIO_PUPDR_PUPD7: u32 = GPIO_PUPDR_PUPD7_Msk;
pub const GPIO_PUPDR_PUPD7_0: u32 = 0x1 << GPIO_PUPDR_PUPD7_Pos;
pub const GPIO_PUPDR_PUPD7_1: u32 = 0x2 << GPIO_PUPDR_PUPD7_Pos;
pub const GPIO_PUPDR_PUPD8_Pos: u32 = 16;
pub const GPIO_PUPDR_PUPD8_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD8_Pos;
pub const GPIO_PUPDR_PUPD8: u32 = GPIO_PUPDR_PUPD8_Msk;
pub const GPIO_PUPDR_PUPD8_0: u32 = 0x1 << GPIO_PUPDR_PUPD8_Pos;
pub const GPIO_PUPDR_PUPD8_1: u32 = 0x2 << GPIO_PUPDR_PUPD8_Pos;
pub const GPIO_PUPDR_PUPD9_Pos: u32 = 18;
pub const GPIO_PUPDR_PUPD9_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD9_Pos;
pub const GPIO_PUPDR_PUPD9: u32 = GPIO_PUPDR_PUPD9_Msk;
pub const GPIO_PUPDR_PUPD9_0: u32 = 0x1 << GPIO_PUPDR_PUPD9_Pos;
pub const GPIO_PUPDR_PUPD9_1: u32 = 0x2 << GPIO_PUPDR_PUPD9_Pos;
pub const GPIO_PUPDR_PUPD10_Pos: u32 = 20;
pub const GPIO_PUPDR_PUPD10_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD10_Pos;
pub const GPIO_PUPDR_PUPD10: u32 = GPIO_PUPDR_PUPD10_Msk;
pub const GPIO_PUPDR_PUPD10_0: u32 = 0x1 << GPIO_PUPDR_PUPD10_Pos;
pub const GPIO_PUPDR_PUPD10_1: u32 = 0x2 << GPIO_PUPDR_PUPD10_Pos;
pub const GPIO_PUPDR_PUPD11_Pos: u32 = 22;
pub const GPIO_PUPDR_PUPD11_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD11_Pos;
pub const GPIO_PUPDR_PUPD11: u32 = GPIO_PUPDR_PUPD11_Msk;
pub const GPIO_PUPDR_PUPD11_0: u32 = 0x1 << GPIO_PUPDR_PUPD11_Pos;
pub const GPIO_PUPDR_PUPD11_1: u32 = 0x2 << GPIO_PUPDR_PUPD11_Pos;
pub const GPIO_PUPDR_PUPD12_Pos: u32 = 24;
pub const GPIO_PUPDR_PUPD12_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD12_Pos;
pub const GPIO_PUPDR_PUPD12: u32 = GPIO_PUPDR_PUPD12_Msk;
pub const GPIO_PUPDR_PUPD12_0: u32 = 0x1 << GPIO_PUPDR_PUPD12_Pos;
pub const GPIO_PUPDR_PUPD12_1: u32 = 0x2 << GPIO_PUPDR_PUPD12_Pos;
pub const GPIO_PUPDR_PUPD13_Pos: u32 = 26;
pub const GPIO_PUPDR_PUPD13_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD13_Pos;
pub const GPIO_PUPDR_PUPD13: u32 = GPIO_PUPDR_PUPD13_Msk;
pub const GPIO_PUPDR_PUPD13_0: u32 = 0x1 << GPIO_PUPDR_PUPD13_Pos;
pub const GPIO_PUPDR_PUPD13_1: u32 = 0x2 << GPIO_PUPDR_PUPD13_Pos;
pub const GPIO_PUPDR_PUPD14_Pos: u32 = 28;
pub const GPIO_PUPDR_PUPD14_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD14_Pos;
pub const GPIO_PUPDR_PUPD14: u32 = GPIO_PUPDR_PUPD14_Msk;
pub const GPIO_PUPDR_PUPD14_0: u32 = 0x1 << GPIO_PUPDR_PUPD14_Pos;
pub const GPIO_PUPDR_PUPD14_1: u32 = 0x2 << GPIO_PUPDR_PUPD14_Pos;
pub const GPIO_PUPDR_PUPD15_Pos: u32 = 30;
pub const GPIO_PUPDR_PUPD15_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD15_Pos;
pub const GPIO_PUPDR_PUPD15: u32 = GPIO_PUPDR_PUPD15_Msk;
pub const GPIO_PUPDR_PUPD15_0: u32 = 0x1 << GPIO_PUPDR_PUPD15_Pos;
pub const GPIO_PUPDR_PUPD15_1: u32 = 0x2 << GPIO_PUPDR_PUPD15_Pos;
pub const GPIO_IDR_ID0_Pos: u32 = 0;
pub const GPIO_IDR_ID0_Msk: u32 = 0x1 << GPIO_IDR_ID0_Pos;
pub const GPIO_IDR_ID0: u32 = GPIO_IDR_ID0_Msk;
pub const GPIO_IDR_ID1_Pos: u32 = 1;
pub const GPIO_IDR_ID1_Msk: u32 = 0x1 << GPIO_IDR_ID1_Pos;
pub const GPIO_IDR_ID1: u32 = GPIO_IDR_ID1_Msk;
pub const GPIO_IDR_ID2_Pos: u32 = 2;
pub const GPIO_IDR_ID2_Msk: u32 = 0x1 << GPIO_IDR_ID2_Pos;
pub const GPIO_IDR_ID2: u32 = GPIO_IDR_ID2_Msk;
pub const GPIO_IDR_ID3_Pos: u32 = 3;
pub const GPIO_IDR_ID3_Msk: u32 = 0x1 << GPIO_IDR_ID3_Pos;
pub const GPIO_IDR_ID3: u32 = GPIO_IDR_ID3_Msk;
pub const GPIO_IDR_ID4_Pos: u32 = 4;
pub const GPIO_IDR_ID4_Msk: u32 = 0x1 << GPIO_IDR_ID4_Pos;
pub const GPIO_IDR_ID4: u32 = GPIO_IDR_ID4_Msk;
pub const GPIO_IDR_ID5_Pos: u32 = 5;
pub const GPIO_IDR_ID5_Msk: u32 = 0x1 << GPIO_IDR_ID5_Pos;
pub const GPIO_IDR_ID5: u32 = GPIO_IDR_ID5_Msk;
pub const GPIO_IDR_ID6_Pos: u32 = 6;
pub const GPIO_IDR_ID6_Msk: u32 = 0x1 << GPIO_IDR_ID6_Pos;
pub const GPIO_IDR_ID6: u32 = GPIO_IDR_ID6_Msk;
pub const GPIO_IDR_ID7_Pos: u32 = 7;
pub const GPIO_IDR_ID7_Msk: u32 = 0x1 << GPIO_IDR_ID7_Pos;
pub const GPIO_IDR_ID7: u32 = GPIO_IDR_ID7_Msk;
pub const GPIO_IDR_ID8_Pos: u32 = 8;
pub const GPIO_IDR_ID8_Msk: u32 = 0x1 << GPIO_IDR_ID8_Pos;
pub const GPIO_IDR_ID8: u32 = GPIO_IDR_ID8_Msk;
pub const GPIO_IDR_ID9_Pos: u32 = 9;
pub const GPIO_IDR_ID9_Msk: u32 = 0x1 << GPIO_IDR_ID9_Pos;
pub const GPIO_IDR_ID9: u32 = GPIO_IDR_ID9_Msk;
pub const GPIO_IDR_ID10_Pos: u32 = 10;
pub const GPIO_IDR_ID10_Msk: u32 = 0x1 << GPIO_IDR_ID10_Pos;
pub const GPIO_IDR_ID10: u32 = GPIO_IDR_ID10_Msk;
pub const GPIO_IDR_ID11_Pos: u32 = 11;
pub const GPIO_IDR_ID11_Msk: u32 = 0x1 << GPIO_IDR_ID11_Pos;
pub const GPIO_IDR_ID11: u32 = GPIO_IDR_ID11_Msk;
pub const GPIO_IDR_ID12_Pos: u32 = 12;
pub const GPIO_IDR_ID12_Msk: u32 = 0x1 << GPIO_IDR_ID12_Pos;
pub const GPIO_IDR_ID12: u32 = GPIO_IDR_ID12_Msk;
pub const GPIO_IDR_ID13_Pos: u32 = 13;
pub const GPIO_IDR_ID13_Msk: u32 = 0x1 << GPIO_IDR_ID13_Pos;
pub const GPIO_IDR_ID13: u32 = GPIO_IDR_ID13_Msk;
pub const GPIO_IDR_ID14_Pos: u32 = 14;
pub const GPIO_IDR_ID14_Msk: u32 = 0x1 << GPIO_IDR_ID14_Pos;
pub const GPIO_IDR_ID14: u32 = GPIO_IDR_ID14_Msk;
pub const GPIO_IDR_ID15_Pos: u32 = 15;
pub const GPIO_IDR_ID15_Msk: u32 = 0x1 << GPIO_IDR_ID15_Pos;
pub const GPIO_IDR_ID15: u32 = GPIO_IDR_ID15_Msk;
pub const GPIO_ODR_OD0_Pos: u32 = 0;
pub const GPIO_ODR_OD0_Msk: u32 = 0x1 << GPIO_ODR_OD0_Pos;
pub const GPIO_ODR_OD0: u32 = GPIO_ODR_OD0_Msk;
pub const GPIO_ODR_OD1_Pos: u32 = 1;
pub const GPIO_ODR_OD1_Msk: u32 = 0x1 << GPIO_ODR_OD1_Pos;
pub const GPIO_ODR_OD1: u32 = GPIO_ODR_OD1_Msk;
pub const GPIO_ODR_OD2_Pos: u32 = 2;
pub const GPIO_ODR_OD2_Msk: u32 = 0x1 << GPIO_ODR_OD2_Pos;
pub const GPIO_ODR_OD2: u32 = GPIO_ODR_OD2_Msk;
pub const GPIO_ODR_OD3_Pos: u32 = 3;
pub const GPIO_ODR_OD3_Msk: u32 = 0x1 << GPIO_ODR_OD3_Pos;
pub const GPIO_ODR_OD3: u32 = GPIO_ODR_OD3_Msk;
pub const GPIO_ODR_OD4_Pos: u32 = 4;
pub const GPIO_ODR_OD4_Msk: u32 = 0x1 << GPIO_ODR_OD4_Pos;
pub const GPIO_ODR_OD4: u32 = GPIO_ODR_OD4_Msk;
pub const GPIO_ODR_OD5_Pos: u32 = 5;
pub const GPIO_ODR_OD5_Msk: u32 = 0x1 << GPIO_ODR_OD5_Pos;
pub const GPIO_ODR_OD5: u32 = GPIO_ODR_OD5_Msk;
pub const GPIO_ODR_OD6_Pos: u32 = 6;
pub const GPIO_ODR_OD6_Msk: u32 = 0x1 << GPIO_ODR_OD6_Pos;
pub const GPIO_ODR_OD6: u32 = GPIO_ODR_OD6_Msk;
pub const GPIO_ODR_OD7_Pos: u32 = 7;
pub const GPIO_ODR_OD7_Msk: u32 = 0x1 << GPIO_ODR_OD7_Pos;
pub const GPIO_ODR_OD7: u32 = GPIO_ODR_OD7_Msk;
pub const GPIO_ODR_OD8_Pos: u32 = 8;
pub const GPIO_ODR_OD8_Msk: u32 = 0x1 << GPIO_ODR_OD8_Pos;
pub const GPIO_ODR_OD8: u32 = GPIO_ODR_OD8_Msk;
pub const GPIO_ODR_OD9_Pos: u32 = 9;
pub const GPIO_ODR_OD9_Msk: u32 = 0x1 << GPIO_ODR_OD9_Pos;
pub const GPIO_ODR_OD9: u32 = GPIO_ODR_OD9_Msk;
pub const GPIO_ODR_OD10_Pos: u32 = 10;
pub const GPIO_ODR_OD10_Msk: u32 = 0x1 << GPIO_ODR_OD10_Pos;
pub const GPIO_ODR_OD10: u32 = GPIO_ODR_OD10_Msk;
pub const GPIO_ODR_OD11_Pos: u32 = 11;
pub const GPIO_ODR_OD11_Msk: u32 = 0x1 << GPIO_ODR_OD11_Pos;
pub const GPIO_ODR_OD11: u32 = GPIO_ODR_OD11_Msk;
pub const GPIO_ODR_OD12_Pos: u32 = 12;
pub const GPIO_ODR_OD12_Msk: u32 = 0x1 << GPIO_ODR_OD12_Pos;
pub const GPIO_ODR_OD12: u32 = GPIO_ODR_OD12_Msk;
pub const GPIO_ODR_OD13_Pos: u32 = 13;
pub const GPIO_ODR_OD13_Msk: u32 = 0x1 << GPIO_ODR_OD13_Pos;
pub const GPIO_ODR_OD13: u32 = GPIO_ODR_OD13_Msk;
pub const GPIO_ODR_OD14_Pos: u32 = 14;
pub const GPIO_ODR_OD14_Msk: u32 = 0x1 << GPIO_ODR_OD14_Pos;
pub const GPIO_ODR_OD14: u32 = GPIO_ODR_OD14_Msk;
pub const GPIO_ODR_OD15_Pos: u32 = 15;
pub const GPIO_ODR_OD15_Msk: u32 = 0x1 << GPIO_ODR_OD15_Pos;
pub const GPIO_ODR_OD15: u32 = GPIO_ODR_OD15_Msk;
pub const GPIO_BSRR_BS0_Pos: u32 = 0;
pub const GPIO_BSRR_BS0_Msk: u32 = 0x1 << GPIO_BSRR_BS0_Pos;
pub const GPIO_BSRR_BS0: u32 = GPIO_BSRR_BS0_Msk;
pub const GPIO_BSRR_BS1_Pos: u32 = 1;
pub const GPIO_BSRR_BS1_Msk: u32 = 0x1 << GPIO_BSRR_BS1_Pos;
pub const GPIO_BSRR_BS1: u32 = GPIO_BSRR_BS1_Msk;
pub const GPIO_BSRR_BS2_Pos: u32 = 2;
pub const GPIO_BSRR_BS2_Msk: u32 = 0x1 << GPIO_BSRR_BS2_Pos;
pub const GPIO_BSRR_BS2: u32 = GPIO_BSRR_BS2_Msk;
pub const GPIO_BSRR_BS3_Pos: u32 = 3;
pub const GPIO_BSRR_BS3_Msk: u32 = 0x1 << GPIO_BSRR_BS3_Pos;
pub const GPIO_BSRR_BS3: u32 = GPIO_BSRR_BS3_Msk;
pub const GPIO_BSRR_BS4_Pos: u32 = 4;
pub const GPIO_BSRR_BS4_Msk: u32 = 0x1 << GPIO_BSRR_BS4_Pos;
pub const GPIO_BSRR_BS4: u32 = GPIO_BSRR_BS4_Msk;
pub const GPIO_BSRR_BS5_Pos: u32 = 5;
pub const GPIO_BSRR_BS5_Msk: u32 = 0x1 << GPIO_BSRR_BS5_Pos;
pub const GPIO_BSRR_BS5: u32 = GPIO_BSRR_BS5_Msk;
pub const GPIO_BSRR_BS6_Pos: u32 = 6;
pub const GPIO_BSRR_BS6_Msk: u32 = 0x1 << GPIO_BSRR_BS6_Pos;
pub const GPIO_BSRR_BS6: u32 = GPIO_BSRR_BS6_Msk;
pub const GPIO_BSRR_BS7_Pos: u32 = 7;
pub const GPIO_BSRR_BS7_Msk: u32 = 0x1 << GPIO_BSRR_BS7_Pos;
pub const GPIO_BSRR_BS7: u32 = GPIO_BSRR_BS7_Msk;
pub const GPIO_BSRR_BS8_Pos: u32 = 8;
pub const GPIO_BSRR_BS8_Msk: u32 = 0x1 << GPIO_BSRR_BS8_Pos;
pub const GPIO_BSRR_BS8: u32 = GPIO_BSRR_BS8_Msk;
pub const GPIO_BSRR_BS9_Pos: u32 = 9;
pub const GPIO_BSRR_BS9_Msk: u32 = 0x1 << GPIO_BSRR_BS9_Pos;
pub const GPIO_BSRR_BS9: u32 = GPIO_BSRR_BS9_Msk;
pub const GPIO_BSRR_BS10_Pos: u32 = 10;
pub const GPIO_BSRR_BS10_Msk: u32 = 0x1 << GPIO_BSRR_BS10_Pos;
pub const GPIO_BSRR_BS10: u32 = GPIO_BSRR_BS10_Msk;
pub const GPIO_BSRR_BS11_Pos: u32 = 11;
pub const GPIO_BSRR_BS11_Msk: u32 = 0x1 << GPIO_BSRR_BS11_Pos;
pub const GPIO_BSRR_BS11: u32 = GPIO_BSRR_BS11_Msk;
pub const GPIO_BSRR_BS12_Pos: u32 = 12;
pub const GPIO_BSRR_BS12_Msk: u32 = 0x1 << GPIO_BSRR_BS12_Pos;
pub const GPIO_BSRR_BS12: u32 = GPIO_BSRR_BS12_Msk;
pub const GPIO_BSRR_BS13_Pos: u32 = 13;
pub const GPIO_BSRR_BS13_Msk: u32 = 0x1 << GPIO_BSRR_BS13_Pos;
pub const GPIO_BSRR_BS13: u32 = GPIO_BSRR_BS13_Msk;
pub const GPIO_BSRR_BS14_Pos: u32 = 14;
pub const GPIO_BSRR_BS14_Msk: u32 = 0x1 << GPIO_BSRR_BS14_Pos;
pub const GPIO_BSRR_BS14: u32 = GPIO_BSRR_BS14_Msk;
pub const GPIO_BSRR_BS15_Pos: u32 = 15;
pub const GPIO_BSRR_BS15_Msk: u32 = 0x1 << GPIO_BSRR_BS15_Pos;
pub const GPIO_BSRR_BS15: u32 = GPIO_BSRR_BS15_Msk;
pub const GPIO_BSRR_BR0_Pos: u32 = 16;
pub const GPIO_BSRR_BR0_Msk: u32 = 0x1 << GPIO_BSRR_BR0_Pos;
pub const GPIO_BSRR_BR0: u32 = GPIO_BSRR_BR0_Msk;
pub const GPIO_BSRR_BR1_Pos: u32 = 17;
pub const GPIO_BSRR_BR1_Msk: u32 = 0x1 << GPIO_BSRR_BR1_Pos;
pub const GPIO_BSRR_BR1: u32 = GPIO_BSRR_BR1_Msk;
pub const GPIO_BSRR_BR2_Pos: u32 = 18;
pub const GPIO_BSRR_BR2_Msk: u32 = 0x1 << GPIO_BSRR_BR2_Pos;
pub const GPIO_BSRR_BR2: u32 = GPIO_BSRR_BR2_Msk;
pub const GPIO_BSRR_BR3_Pos: u32 = 19;
pub const GPIO_BSRR_BR3_Msk: u32 = 0x1 << GPIO_BSRR_BR3_Pos;
pub const GPIO_BSRR_BR3: u32 = GPIO_BSRR_BR3_Msk;
pub const GPIO_BSRR_BR4_Pos: u32 = 20;
pub const GPIO_BSRR_BR4_Msk: u32 = 0x1 << GPIO_BSRR_BR4_Pos;
pub const GPIO_BSRR_BR4: u32 = GPIO_BSRR_BR4_Msk;
pub const GPIO_BSRR_BR5_Pos: u32 = 21;
pub const GPIO_BSRR_BR5_Msk: u32 = 0x1 << GPIO_BSRR_BR5_Pos;
pub const GPIO_BSRR_BR5: u32 = GPIO_BSRR_BR5_Msk;
pub const GPIO_BSRR_BR6_Pos: u32 = 22;
pub const GPIO_BSRR_BR6_Msk: u32 = 0x1 << GPIO_BSRR_BR6_Pos;
pub const GPIO_BSRR_BR6: u32 = GPIO_BSRR_BR6_Msk;
pub const GPIO_BSRR_BR7_Pos: u32 = 23;
pub const GPIO_BSRR_BR7_Msk: u32 = 0x1 << GPIO_BSRR_BR7_Pos;
pub const GPIO_BSRR_BR7: u32 = GPIO_BSRR_BR7_Msk;
pub const GPIO_BSRR_BR8_Pos: u32 = 24;
pub const GPIO_BSRR_BR8_Msk: u32 = 0x1 << GPIO_BSRR_BR8_Pos;
pub const GPIO_BSRR_BR8: u32 = GPIO_BSRR_BR8_Msk;
pub const GPIO_BSRR_BR9_Pos: u32 = 25;
pub const GPIO_BSRR_BR9_Msk: u32 = 0x1 << GPIO_BSRR_BR9_Pos;
pub const GPIO_BSRR_BR9: u32 = GPIO_BSRR_BR9_Msk;
pub const GPIO_BSRR_BR10_Pos: u32 = 26;
pub const GPIO_BSRR_BR10_Msk: u32 = 0x1 << GPIO_BSRR_BR10_Pos;
pub const GPIO_BSRR_BR10: u32 = GPIO_BSRR_BR10_Msk;
pub const GPIO_BSRR_BR11_Pos: u32 = 27;
pub const GPIO_BSRR_BR11_Msk: u32 = 0x1 << GPIO_BSRR_BR11_Pos;
pub const GPIO_BSRR_BR11: u32 = GPIO_BSRR_BR11_Msk;
pub const GPIO_BSRR_BR12_Pos: u32 = 28;
pub const GPIO_BSRR_BR12_Msk: u32 = 0x1 << GPIO_BSRR_BR12_Pos;
pub const GPIO_BSRR_BR12: u32 = GPIO_BSRR_BR12_Msk;
pub const GPIO_BSRR_BR13_Pos: u32 = 29;
pub const GPIO_BSRR_BR13_Msk: u32 = 0x1 << GPIO_BSRR_BR13_Pos;
pub const GPIO_BSRR_BR13: u32 = GPIO_BSRR_BR13_Msk;
pub const GPIO_BSRR_BR14_Pos: u32 = 30;
pub const GPIO_BSRR_BR14_Msk: u32 = 0x1 << GPIO_BSRR_BR14_Pos;
pub const GPIO_BSRR_BR14: u32 = GPIO_BSRR_BR14_Msk;
pub const GPIO_BSRR_BR15_Pos: u32 = 31;
pub const GPIO_BSRR_BR15_Msk: u32 = 0x1 << GPIO_BSRR_BR15_Pos;
pub const GPIO_BSRR_BR15: u32 = GPIO_BSRR_BR15_Msk;
pub const GPIO_LCKR_LCK0_Pos: u32 = 0;
pub const GPIO_LCKR_LCK0_Msk: u32 = 0x1 << GPIO_LCKR_LCK0_Pos;
pub const GPIO_LCKR_LCK0: u32 = GPIO_LCKR_LCK0_Msk;
pub const GPIO_LCKR_LCK1_Pos: u32 = 1;
pub const GPIO_LCKR_LCK1_Msk: u32 = 0x1 << GPIO_LCKR_LCK1_Pos;
pub const GPIO_LCKR_LCK1: u32 = GPIO_LCKR_LCK1_Msk;
pub const GPIO_LCKR_LCK2_Pos: u32 = 2;
pub const GPIO_LCKR_LCK2_Msk: u32 = 0x1 << GPIO_LCKR_LCK2_Pos;
pub const GPIO_LCKR_LCK2: u32 = GPIO_LCKR_LCK2_Msk;
pub const GPIO_LCKR_LCK3_Pos: u32 = 3;
pub const GPIO_LCKR_LCK3_Msk: u32 = 0x1 << GPIO_LCKR_LCK3_Pos;
pub const GPIO_LCKR_LCK3: u32 = GPIO_LCKR_LCK3_Msk;
pub const GPIO_LCKR_LCK4_Pos: u32 = 4;
pub const GPIO_LCKR_LCK4_Msk: u32 = 0x1 << GPIO_LCKR_LCK4_Pos;
pub const GPIO_LCKR_LCK4: u32 = GPIO_LCKR_LCK4_Msk;
pub const GPIO_LCKR_LCK5_Pos: u32 = 5;
pub const GPIO_LCKR_LCK5_Msk: u32 = 0x1 << GPIO_LCKR_LCK5_Pos;
pub const GPIO_LCKR_LCK5: u32 = GPIO_LCKR_LCK5_Msk;
pub const GPIO_LCKR_LCK6_Pos: u32 = 6;
pub const GPIO_LCKR_LCK6_Msk: u32 = 0x1 << GPIO_LCKR_LCK6_Pos;
pub const GPIO_LCKR_LCK6: u32 = GPIO_LCKR_LCK6_Msk;
pub const GPIO_LCKR_LCK7_Pos: u32 = 7;
pub const GPIO_LCKR_LCK7_Msk: u32 = 0x1 << GPIO_LCKR_LCK7_Pos;
pub const GPIO_LCKR_LCK7: u32 = GPIO_LCKR_LCK7_Msk;
pub const GPIO_LCKR_LCK8_Pos: u32 = 8;
pub const GPIO_LCKR_LCK8_Msk: u32 = 0x1 << GPIO_LCKR_LCK8_Pos;
pub const GPIO_LCKR_LCK8: u32 = GPIO_LCKR_LCK8_Msk;
pub const GPIO_LCKR_LCK9_Pos: u32 = 9;
pub const GPIO_LCKR_LCK9_Msk: u32 = 0x1 << GPIO_LCKR_LCK9_Pos;
pub const GPIO_LCKR_LCK9: u32 = GPIO_LCKR_LCK9_Msk;
pub const GPIO_LCKR_LCK10_Pos: u32 = 10;
pub const GPIO_LCKR_LCK10_Msk: u32 = 0x1 << GPIO_LCKR_LCK10_Pos;
pub const GPIO_LCKR_LCK10: u32 = GPIO_LCKR_LCK10_Msk;
pub const GPIO_LCKR_LCK11_Pos: u32 = 11;
pub const GPIO_LCKR_LCK11_Msk: u32 = 0x1 << GPIO_LCKR_LCK11_Pos;
pub const GPIO_LCKR_LCK11: u32 = GPIO_LCKR_LCK11_Msk;
pub const GPIO_LCKR_LCK12_Pos: u32 = 12;
pub const GPIO_LCKR_LCK12_Msk: u32 = 0x1 << GPIO_LCKR_LCK12_Pos;
pub const GPIO_LCKR_LCK12: u32 = GPIO_LCKR_LCK12_Msk;
pub const GPIO_LCKR_LCK13_Pos: u32 = 13;
pub const GPIO_LCKR_LCK13_Msk: u32 = 0x1 << GPIO_LCKR_LCK13_Pos;
pub const GPIO_LCKR_LCK13: u32 = GPIO_LCKR_LCK13_Msk;
pub const GPIO_LCKR_LCK14_Pos: u32 = 14;
pub const GPIO_LCKR_LCK14_Msk: u32 = 0x1 << GPIO_LCKR_LCK14_Pos;
pub const GPIO_LCKR_LCK14: u32 = GPIO_LCKR_LCK14_Msk;
pub const GPIO_LCKR_LCK15_Pos: u32 = 15;
pub const GPIO_LCKR_LCK15_Msk: u32 = 0x1 << GPIO_LCKR_LCK15_Pos;
pub const GPIO_LCKR_LCK15: u32 = GPIO_LCKR_LCK15_Msk;
pub const GPIO_LCKR_LCKK_Pos: u32 = 16;
pub const GPIO_LCKR_LCKK_Msk: u32 = 0x1 << GPIO_LCKR_LCKK_Pos;
pub const GPIO_LCKR_LCKK: u32 = GPIO_LCKR_LCKK_Msk;
pub const GPIO_AFRL_AFSEL0_Pos: u32 = 0;
pub const GPIO_AFRL_AFSEL0_Msk: u32 = 0xF << GPIO_AFRL_AFSEL0_Pos;
pub const GPIO_AFRL_AFSEL0: u32 = GPIO_AFRL_AFSEL0_Msk;
pub const GPIO_AFRL_AFSEL0_0: u32 = 0x1 << GPIO_AFRL_AFSEL0_Pos;
pub const GPIO_AFRL_AFSEL0_1: u32 = 0x2 << GPIO_AFRL_AFSEL0_Pos;
pub const GPIO_AFRL_AFSEL0_2: u32 = 0x4 << GPIO_AFRL_AFSEL0_Pos;
pub const GPIO_AFRL_AFSEL0_3: u32 = 0x8 << GPIO_AFRL_AFSEL0_Pos;
pub const GPIO_AFRL_AFSEL1_Pos: u32 = 4;
pub const GPIO_AFRL_AFSEL1_Msk: u32 = 0xF << GPIO_AFRL_AFSEL1_Pos;
pub const GPIO_AFRL_AFSEL1: u32 = GPIO_AFRL_AFSEL1_Msk;
pub const GPIO_AFRL_AFSEL1_0: u32 = 0x1 << GPIO_AFRL_AFSEL1_Pos;
pub const GPIO_AFRL_AFSEL1_1: u32 = 0x2 << GPIO_AFRL_AFSEL1_Pos;
pub const GPIO_AFRL_AFSEL1_2: u32 = 0x4 << GPIO_AFRL_AFSEL1_Pos;
pub const GPIO_AFRL_AFSEL1_3: u32 = 0x8 << GPIO_AFRL_AFSEL1_Pos;
pub const GPIO_AFRL_AFSEL2_Pos: u32 = 8;
pub const GPIO_AFRL_AFSEL2_Msk: u32 = 0xF << GPIO_AFRL_AFSEL2_Pos;
pub const GPIO_AFRL_AFSEL2: u32 = GPIO_AFRL_AFSEL2_Msk;
pub const GPIO_AFRL_AFSEL2_0: u32 = 0x1 << GPIO_AFRL_AFSEL2_Pos;
pub const GPIO_AFRL_AFSEL2_1: u32 = 0x2 << GPIO_AFRL_AFSEL2_Pos;
pub const GPIO_AFRL_AFSEL2_2: u32 = 0x4 << GPIO_AFRL_AFSEL2_Pos;
pub const GPIO_AFRL_AFSEL2_3: u32 = 0x8 << GPIO_AFRL_AFSEL2_Pos;
pub const GPIO_AFRL_AFSEL3_Pos: u32 = 12;
pub const GPIO_AFRL_AFSEL3_Msk: u32 = 0xF << GPIO_AFRL_AFSEL3_Pos;
pub const GPIO_AFRL_AFSEL3: u32 = GPIO_AFRL_AFSEL3_Msk;
pub const GPIO_AFRL_AFSEL3_0: u32 = 0x1 << GPIO_AFRL_AFSEL3_Pos;
pub const GPIO_AFRL_AFSEL3_1: u32 = 0x2 << GPIO_AFRL_AFSEL3_Pos;
pub const GPIO_AFRL_AFSEL3_2: u32 = 0x4 << GPIO_AFRL_AFSEL3_Pos;
pub const GPIO_AFRL_AFSEL3_3: u32 = 0x8 << GPIO_AFRL_AFSEL3_Pos;
pub const GPIO_AFRL_AFSEL4_Pos: u32 = 16;
pub const GPIO_AFRL_AFSEL4_Msk: u32 = 0xF << GPIO_AFRL_AFSEL4_Pos;
pub const GPIO_AFRL_AFSEL4: u32 = GPIO_AFRL_AFSEL4_Msk;
pub const GPIO_AFRL_AFSEL4_0: u32 = 0x1 << GPIO_AFRL_AFSEL4_Pos;
pub const GPIO_AFRL_AFSEL4_1: u32 = 0x2 << GPIO_AFRL_AFSEL4_Pos;
pub const GPIO_AFRL_AFSEL4_2: u32 = 0x4 << GPIO_AFRL_AFSEL4_Pos;
pub const GPIO_AFRL_AFSEL4_3: u32 = 0x8 << GPIO_AFRL_AFSEL4_Pos;
pub const GPIO_AFRL_AFSEL5_Pos: u32 = 20;
pub const GPIO_AFRL_AFSEL5_Msk: u32 = 0xF << GPIO_AFRL_AFSEL5_Pos;
pub const GPIO_AFRL_AFSEL5: u32 = GPIO_AFRL_AFSEL5_Msk;
pub const GPIO_AFRL_AFSEL5_0: u32 = 0x1 << GPIO_AFRL_AFSEL5_Pos;
pub const GPIO_AFRL_AFSEL5_1: u32 = 0x2 << GPIO_AFRL_AFSEL5_Pos;
pub const GPIO_AFRL_AFSEL5_2: u32 = 0x4 << GPIO_AFRL_AFSEL5_Pos;
pub const GPIO_AFRL_AFSEL5_3: u32 = 0x8 << GPIO_AFRL_AFSEL5_Pos;
pub const GPIO_AFRL_AFSEL6_Pos: u32 = 24;
pub const GPIO_AFRL_AFSEL6_Msk: u32 = 0xF << GPIO_AFRL_AFSEL6_Pos;
pub const GPIO_AFRL_AFSEL6: u32 = GPIO_AFRL_AFSEL6_Msk;
pub const GPIO_AFRL_AFSEL6_0: u32 = 0x1 << GPIO_AFRL_AFSEL6_Pos;
pub const GPIO_AFRL_AFSEL6_1: u32 = 0x2 << GPIO_AFRL_AFSEL6_Pos;
pub const GPIO_AFRL_AFSEL6_2: u32 = 0x4 << GPIO_AFRL_AFSEL6_Pos;
pub const GPIO_AFRL_AFSEL6_3: u32 = 0x8 << GPIO_AFRL_AFSEL6_Pos;
pub const GPIO_AFRL_AFSEL7_Pos: u32 = 28;
pub const GPIO_AFRL_AFSEL7_Msk: u32 = 0xF << GPIO_AFRL_AFSEL7_Pos;
pub const GPIO_AFRL_AFSEL7: u32 = GPIO_AFRL_AFSEL7_Msk;
pub const GPIO_AFRL_AFSEL7_0: u32 = 0x1 << GPIO_AFRL_AFSEL7_Pos;
pub const GPIO_AFRL_AFSEL7_1: u32 = 0x2 << GPIO_AFRL_AFSEL7_Pos;
pub const GPIO_AFRL_AFSEL7_2: u32 = 0x4 << GPIO_AFRL_AFSEL7_Pos;
pub const GPIO_AFRL_AFSEL7_3: u32 = 0x8 << GPIO_AFRL_AFSEL7_Pos;
pub const GPIO_AFRH_AFSEL8_Pos: u32 = 0;
pub const GPIO_AFRH_AFSEL8_Msk: u32 = 0xF << GPIO_AFRH_AFSEL8_Pos;
pub const GPIO_AFRH_AFSEL8: u32 = GPIO_AFRH_AFSEL8_Msk;
pub const GPIO_AFRH_AFSEL8_0: u32 = 0x1 << GPIO_AFRH_AFSEL8_Pos;
pub const GPIO_AFRH_AFSEL8_1: u32 = 0x2 << GPIO_AFRH_AFSEL8_Pos;
pub const GPIO_AFRH_AFSEL8_2: u32 = 0x4 << GPIO_AFRH_AFSEL8_Pos;
pub const GPIO_AFRH_AFSEL8_3: u32 = 0x8 << GPIO_AFRH_AFSEL8_Pos;
pub const GPIO_AFRH_AFSEL9_Pos: u32 = 4;
pub const GPIO_AFRH_AFSEL9_Msk: u32 = 0xF << GPIO_AFRH_AFSEL9_Pos;
pub const GPIO_AFRH_AFSEL9: u32 = GPIO_AFRH_AFSEL9_Msk;
pub const GPIO_AFRH_AFSEL9_0: u32 = 0x1 << GPIO_AFRH_AFSEL9_Pos;
pub const GPIO_AFRH_AFSEL9_1: u32 = 0x2 << GPIO_AFRH_AFSEL9_Pos;
pub const GPIO_AFRH_AFSEL9_2: u32 = 0x4 << GPIO_AFRH_AFSEL9_Pos;
pub const GPIO_AFRH_AFSEL9_3: u32 = 0x8 << GPIO_AFRH_AFSEL9_Pos;
pub const GPIO_AFRH_AFSEL10_Pos: u32 = 8;
pub const GPIO_AFRH_AFSEL10_Msk: u32 = 0xF << GPIO_AFRH_AFSEL10_Pos;
pub const GPIO_AFRH_AFSEL10: u32 = GPIO_AFRH_AFSEL10_Msk;
pub const GPIO_AFRH_AFSEL10_0: u32 = 0x1 << GPIO_AFRH_AFSEL10_Pos;
pub const GPIO_AFRH_AFSEL10_1: u32 = 0x2 << GPIO_AFRH_AFSEL10_Pos;
pub const GPIO_AFRH_AFSEL10_2: u32 = 0x4 << GPIO_AFRH_AFSEL10_Pos;
pub const GPIO_AFRH_AFSEL10_3: u32 = 0x8 << GPIO_AFRH_AFSEL10_Pos;
pub const GPIO_AFRH_AFSEL11_Pos: u32 = 12;
pub const GPIO_AFRH_AFSEL11_Msk: u32 = 0xF << GPIO_AFRH_AFSEL11_Pos;
pub const GPIO_AFRH_AFSEL11: u32 = GPIO_AFRH_AFSEL11_Msk;
pub const GPIO_AFRH_AFSEL11_0: u32 = 0x1 << GPIO_AFRH_AFSEL11_Pos;
pub const GPIO_AFRH_AFSEL11_1: u32 = 0x2 << GPIO_AFRH_AFSEL11_Pos;
pub const GPIO_AFRH_AFSEL11_2: u32 = 0x4 << GPIO_AFRH_AFSEL11_Pos;
pub const GPIO_AFRH_AFSEL11_3: u32 = 0x8 << GPIO_AFRH_AFSEL11_Pos;
pub const GPIO_AFRH_AFSEL12_Pos: u32 = 16;
pub const GPIO_AFRH_AFSEL12_Msk: u32 = 0xF << GPIO_AFRH_AFSEL12_Pos;
pub const GPIO_AFRH_AFSEL12: u32 = GPIO_AFRH_AFSEL12_Msk;
pub const GPIO_AFRH_AFSEL12_0: u32 = 0x1 << GPIO_AFRH_AFSEL12_Pos;
pub const GPIO_AFRH_AFSEL12_1: u32 = 0x2 << GPIO_AFRH_AFSEL12_Pos;
pub const GPIO_AFRH_AFSEL12_2: u32 = 0x4 << GPIO_AFRH_AFSEL12_Pos;
pub const GPIO_AFRH_AFSEL12_3: u32 = 0x8 << GPIO_AFRH_AFSEL12_Pos;
pub const GPIO_AFRH_AFSEL13_Pos: u32 = 20;
pub const GPIO_AFRH_AFSEL13_Msk: u32 = 0xF << GPIO_AFRH_AFSEL13_Pos;
pub const GPIO_AFRH_AFSEL13: u32 = GPIO_AFRH_AFSEL13_Msk;
pub const GPIO_AFRH_AFSEL13_0: u32 = 0x1 << GPIO_AFRH_AFSEL13_Pos;
pub const GPIO_AFRH_AFSEL13_1: u32 = 0x2 << GPIO_AFRH_AFSEL13_Pos;
pub const GPIO_AFRH_AFSEL13_2: u32 = 0x4 << GPIO_AFRH_AFSEL13_Pos;
pub const GPIO_AFRH_AFSEL13_3: u32 = 0x8 << GPIO_AFRH_AFSEL13_Pos;
pub const GPIO_AFRH_AFSEL14_Pos: u32 = 24;
pub const GPIO_AFRH_AFSEL14_Msk: u32 = 0xF << GPIO_AFRH_AFSEL14_Pos;
pub const GPIO_AFRH_AFSEL14: u32 = GPIO_AFRH_AFSEL14_Msk;
pub const GPIO_AFRH_AFSEL14_0: u32 = 0x1 << GPIO_AFRH_AFSEL14_Pos;
pub const GPIO_AFRH_AFSEL14_1: u32 = 0x2 << GPIO_AFRH_AFSEL14_Pos;
pub const GPIO_AFRH_AFSEL14_2: u32 = 0x4 << GPIO_AFRH_AFSEL14_Pos;
pub const GPIO_AFRH_AFSEL14_3: u32 = 0x8 << GPIO_AFRH_AFSEL14_Pos;
pub const GPIO_AFRH_AFSEL15_Pos: u32 = 28;
pub const GPIO_AFRH_AFSEL15_Msk: u32 = 0xF << GPIO_AFRH_AFSEL15_Pos;
pub const GPIO_AFRH_AFSEL15: u32 = GPIO_AFRH_AFSEL15_Msk;
pub const GPIO_AFRH_AFSEL15_0: u32 = 0x1 << GPIO_AFRH_AFSEL15_Pos;
pub const GPIO_AFRH_AFSEL15_1: u32 = 0x2 << GPIO_AFRH_AFSEL15_Pos;
pub const GPIO_AFRH_AFSEL15_2: u32 = 0x4 << GPIO_AFRH_AFSEL15_Pos;
pub const GPIO_AFRH_AFSEL15_3: u32 = 0x8 << GPIO_AFRH_AFSEL15_Pos;
pub const GPIO_BRR_BR0_Pos: u32 = 0;
pub const GPIO_BRR_BR0_Msk: u32 = 0x1 << GPIO_BRR_BR0_Pos;
pub const GPIO_BRR_BR0: u32 = GPIO_BRR_BR0_Msk;
pub const GPIO_BRR_BR1_Pos: u32 = 1;
pub const GPIO_BRR_BR1_Msk: u32 = 0x1 << GPIO_BRR_BR1_Pos;
pub const GPIO_BRR_BR1: u32 = GPIO_BRR_BR1_Msk;
pub const GPIO_BRR_BR2_Pos: u32 = 2;
pub const GPIO_BRR_BR2_Msk: u32 = 0x1 << GPIO_BRR_BR2_Pos;
pub const GPIO_BRR_BR2: u32 = GPIO_BRR_BR2_Msk;
pub const GPIO_BRR_BR3_Pos: u32 = 3;
pub const GPIO_BRR_BR3_Msk: u32 = 0x1 << GPIO_BRR_BR3_Pos;
pub const GPIO_BRR_BR3: u32 = GPIO_BRR_BR3_Msk;
pub const GPIO_BRR_BR4_Pos: u32 = 4;
pub const GPIO_BRR_BR4_Msk: u32 = 0x1 << GPIO_BRR_BR4_Pos;
pub const GPIO_BRR_BR4: u32 = GPIO_BRR_BR4_Msk;
pub const GPIO_BRR_BR5_Pos: u32 = 5;
pub const GPIO_BRR_BR5_Msk: u32 = 0x1 << GPIO_BRR_BR5_Pos;
pub const GPIO_BRR_BR5: u32 = GPIO_BRR_BR5_Msk;
pub const GPIO_BRR_BR6_Pos: u32 = 6;
pub const GPIO_BRR_BR6_Msk: u32 = 0x1 << GPIO_BRR_BR6_Pos;
pub const GPIO_BRR_BR6: u32 = GPIO_BRR_BR6_Msk;
pub const GPIO_BRR_BR7_Pos: u32 = 7;
pub const GPIO_BRR_BR7_Msk: u32 = 0x1 << GPIO_BRR_BR7_Pos;
pub const GPIO_BRR_BR7: u32 = GPIO_BRR_BR7_Msk;
pub const GPIO_BRR_BR8_Pos: u32 = 8;
pub const GPIO_BRR_BR8_Msk: u32 = 0x1 << GPIO_BRR_BR8_Pos;
pub const GPIO_BRR_BR8: u32 = GPIO_BRR_BR8_Msk;
pub const GPIO_BRR_BR9_Pos: u32 = 9;
pub const GPIO_BRR_BR9_Msk: u32 = 0x1 << GPIO_BRR_BR9_Pos;
pub const GPIO_BRR_BR9: u32 = GPIO_BRR_BR9_Msk;
pub const GPIO_BRR_BR10_Pos: u32 = 10;
pub const GPIO_BRR_BR10_Msk: u32 = 0x1 << GPIO_BRR_BR10_Pos;
pub const GPIO_BRR_BR10: u32 = GPIO_BRR_BR10_Msk;
pub const GPIO_BRR_BR11_Pos: u32 = 11;
pub const GPIO_BRR_BR11_Msk: u32 = 0x1 << GPIO_BRR_BR11_Pos;
pub const GPIO_BRR_BR11: u32 = GPIO_BRR_BR11_Msk;
pub const GPIO_BRR_BR12_Pos: u32 = 12;
pub const GPIO_BRR_BR12_Msk: u32 = 0x1 << GPIO_BRR_BR12_Pos;
pub const GPIO_BRR_BR12: u32 = GPIO_BRR_BR12_Msk;
pub const GPIO_BRR_BR13_Pos: u32 = 13;
pub const GPIO_BRR_BR13_Msk: u32 = 0x1 << GPIO_BRR_BR13_Pos;
pub const GPIO_BRR_BR13: u32 = GPIO_BRR_BR13_Msk;
pub const GPIO_BRR_BR14_Pos: u32 = 14;
pub const GPIO_BRR_BR14_Msk: u32 = 0x1 << GPIO_BRR_BR14_Pos;
pub const GPIO_BRR_BR14: u32 = GPIO_BRR_BR14_Msk;
pub const GPIO_BRR_BR15_Pos: u32 = 15;
pub const GPIO_BRR_BR15_Msk: u32 = 0x1 << GPIO_BRR_BR15_Pos;
pub const GPIO_BRR_BR15: u32 = GPIO_BRR_BR15_Msk;
pub const HSEM_R_PROCID_Pos: u32 = 0;
pub const HSEM_R_PROCID_Msk: u32 = 0xFF << HSEM_R_PROCID_Pos;
pub const HSEM_R_PROCID: u32 = HSEM_R_PROCID_Msk;
pub const HSEM_R_COREID_Pos: u32 = 8;
pub const HSEM_R_COREID_Msk: u32 = 0xF << HSEM_R_COREID_Pos;
pub const HSEM_R_COREID: u32 = HSEM_R_COREID_Msk;
pub const HSEM_R_LOCK_Pos: u32 = 31;
pub const HSEM_R_LOCK_Msk: u32 = 0x1 << HSEM_R_LOCK_Pos;
pub const HSEM_R_LOCK: u32 = HSEM_R_LOCK_Msk;
pub const HSEM_RLR_PROCID_Pos: u32 = 0;
pub const HSEM_RLR_PROCID_Msk: u32 = 0xFF << HSEM_RLR_PROCID_Pos;
pub const HSEM_RLR_PROCID: u32 = HSEM_RLR_PROCID_Msk;
pub const HSEM_RLR_COREID_Pos: u32 = 8;
pub const HSEM_RLR_COREID_Msk: u32 = 0xF << HSEM_RLR_COREID_Pos;
pub const HSEM_RLR_COREID: u32 = HSEM_RLR_COREID_Msk;
pub const HSEM_RLR_LOCK_Pos: u32 = 31;
pub const HSEM_RLR_LOCK_Msk: u32 = 0x1 << HSEM_RLR_LOCK_Pos;
pub const HSEM_RLR_LOCK: u32 = HSEM_RLR_LOCK_Msk;
pub const HSEM_C1IER_ISE0_Pos: u32 = 0;
pub const HSEM_C1IER_ISE0_Msk: u32 = 0x1 << HSEM_C1IER_ISE0_Pos;
pub const HSEM_C1IER_ISE0: u32 = HSEM_C1IER_ISE0_Msk;
pub const HSEM_C1IER_ISE1_Pos: u32 = 1;
pub const HSEM_C1IER_ISE1_Msk: u32 = 0x1 << HSEM_C1IER_ISE1_Pos;
pub const HSEM_C1IER_ISE1: u32 = HSEM_C1IER_ISE1_Msk;
pub const HSEM_C1IER_ISE2_Pos: u32 = 2;
pub const HSEM_C1IER_ISE2_Msk: u32 = 0x1 << HSEM_C1IER_ISE2_Pos;
pub const HSEM_C1IER_ISE2: u32 = HSEM_C1IER_ISE2_Msk;
pub const HSEM_C1IER_ISE3_Pos: u32 = 3;
pub const HSEM_C1IER_ISE3_Msk: u32 = 0x1 << HSEM_C1IER_ISE3_Pos;
pub const HSEM_C1IER_ISE3: u32 = HSEM_C1IER_ISE3_Msk;
pub const HSEM_C1IER_ISE4_Pos: u32 = 4;
pub const HSEM_C1IER_ISE4_Msk: u32 = 0x1 << HSEM_C1IER_ISE4_Pos;
pub const HSEM_C1IER_ISE4: u32 = HSEM_C1IER_ISE4_Msk;
pub const HSEM_C1IER_ISE5_Pos: u32 = 5;
pub const HSEM_C1IER_ISE5_Msk: u32 = 0x1 << HSEM_C1IER_ISE5_Pos;
pub const HSEM_C1IER_ISE5: u32 = HSEM_C1IER_ISE5_Msk;
pub const HSEM_C1IER_ISE6_Pos: u32 = 6;
pub const HSEM_C1IER_ISE6_Msk: u32 = 0x1 << HSEM_C1IER_ISE6_Pos;
pub const HSEM_C1IER_ISE6: u32 = HSEM_C1IER_ISE6_Msk;
pub const HSEM_C1IER_ISE7_Pos: u32 = 7;
pub const HSEM_C1IER_ISE7_Msk: u32 = 0x1 << HSEM_C1IER_ISE7_Pos;
pub const HSEM_C1IER_ISE7: u32 = HSEM_C1IER_ISE7_Msk;
pub const HSEM_C1IER_ISE8_Pos: u32 = 8;
pub const HSEM_C1IER_ISE8_Msk: u32 = 0x1 << HSEM_C1IER_ISE8_Pos;
pub const HSEM_C1IER_ISE8: u32 = HSEM_C1IER_ISE8_Msk;
pub const HSEM_C1IER_ISE9_Pos: u32 = 9;
pub const HSEM_C1IER_ISE9_Msk: u32 = 0x1 << HSEM_C1IER_ISE9_Pos;
pub const HSEM_C1IER_ISE9: u32 = HSEM_C1IER_ISE9_Msk;
pub const HSEM_C1IER_ISE10_Pos: u32 = 10;
pub const HSEM_C1IER_ISE10_Msk: u32 = 0x1 << HSEM_C1IER_ISE10_Pos;
pub const HSEM_C1IER_ISE10: u32 = HSEM_C1IER_ISE10_Msk;
pub const HSEM_C1IER_ISE11_Pos: u32 = 11;
pub const HSEM_C1IER_ISE11_Msk: u32 = 0x1 << HSEM_C1IER_ISE11_Pos;
pub const HSEM_C1IER_ISE11: u32 = HSEM_C1IER_ISE11_Msk;
pub const HSEM_C1IER_ISE12_Pos: u32 = 12;
pub const HSEM_C1IER_ISE12_Msk: u32 = 0x1 << HSEM_C1IER_ISE12_Pos;
pub const HSEM_C1IER_ISE12: u32 = HSEM_C1IER_ISE12_Msk;
pub const HSEM_C1IER_ISE13_Pos: u32 = 13;
pub const HSEM_C1IER_ISE13_Msk: u32 = 0x1 << HSEM_C1IER_ISE13_Pos;
pub const HSEM_C1IER_ISE13: u32 = HSEM_C1IER_ISE13_Msk;
pub const HSEM_C1IER_ISE14_Pos: u32 = 14;
pub const HSEM_C1IER_ISE14_Msk: u32 = 0x1 << HSEM_C1IER_ISE14_Pos;
pub const HSEM_C1IER_ISE14: u32 = HSEM_C1IER_ISE14_Msk;
pub const HSEM_C1IER_ISE15_Pos: u32 = 15;
pub const HSEM_C1IER_ISE15_Msk: u32 = 0x1 << HSEM_C1IER_ISE15_Pos;
pub const HSEM_C1IER_ISE15: u32 = HSEM_C1IER_ISE15_Msk;
pub const HSEM_C1ICR_ISC0_Pos: u32 = 0;
pub const HSEM_C1ICR_ISC0_Msk: u32 = 0x1 << HSEM_C1ICR_ISC0_Pos;
pub const HSEM_C1ICR_ISC0: u32 = HSEM_C1ICR_ISC0_Msk;
pub const HSEM_C1ICR_ISC1_Pos: u32 = 1;
pub const HSEM_C1ICR_ISC1_Msk: u32 = 0x1 << HSEM_C1ICR_ISC1_Pos;
pub const HSEM_C1ICR_ISC1: u32 = HSEM_C1ICR_ISC1_Msk;
pub const HSEM_C1ICR_ISC2_Pos: u32 = 2;
pub const HSEM_C1ICR_ISC2_Msk: u32 = 0x1 << HSEM_C1ICR_ISC2_Pos;
pub const HSEM_C1ICR_ISC2: u32 = HSEM_C1ICR_ISC2_Msk;
pub const HSEM_C1ICR_ISC3_Pos: u32 = 3;
pub const HSEM_C1ICR_ISC3_Msk: u32 = 0x1 << HSEM_C1ICR_ISC3_Pos;
pub const HSEM_C1ICR_ISC3: u32 = HSEM_C1ICR_ISC3_Msk;
pub const HSEM_C1ICR_ISC4_Pos: u32 = 4;
pub const HSEM_C1ICR_ISC4_Msk: u32 = 0x1 << HSEM_C1ICR_ISC4_Pos;
pub const HSEM_C1ICR_ISC4: u32 = HSEM_C1ICR_ISC4_Msk;
pub const HSEM_C1ICR_ISC5_Pos: u32 = 5;
pub const HSEM_C1ICR_ISC5_Msk: u32 = 0x1 << HSEM_C1ICR_ISC5_Pos;
pub const HSEM_C1ICR_ISC5: u32 = HSEM_C1ICR_ISC5_Msk;
pub const HSEM_C1ICR_ISC6_Pos: u32 = 6;
pub const HSEM_C1ICR_ISC6_Msk: u32 = 0x1 << HSEM_C1ICR_ISC6_Pos;
pub const HSEM_C1ICR_ISC6: u32 = HSEM_C1ICR_ISC6_Msk;
pub const HSEM_C1ICR_ISC7_Pos: u32 = 7;
pub const HSEM_C1ICR_ISC7_Msk: u32 = 0x1 << HSEM_C1ICR_ISC7_Pos;
pub const HSEM_C1ICR_ISC7: u32 = HSEM_C1ICR_ISC7_Msk;
pub const HSEM_C1ICR_ISC8_Pos: u32 = 8;
pub const HSEM_C1ICR_ISC8_Msk: u32 = 0x1 << HSEM_C1ICR_ISC8_Pos;
pub const HSEM_C1ICR_ISC8: u32 = HSEM_C1ICR_ISC8_Msk;
pub const HSEM_C1ICR_ISC9_Pos: u32 = 9;
pub const HSEM_C1ICR_ISC9_Msk: u32 = 0x1 << HSEM_C1ICR_ISC9_Pos;
pub const HSEM_C1ICR_ISC9: u32 = HSEM_C1ICR_ISC9_Msk;
pub const HSEM_C1ICR_ISC10_Pos: u32 = 10;
pub const HSEM_C1ICR_ISC10_Msk: u32 = 0x1 << HSEM_C1ICR_ISC10_Pos;
pub const HSEM_C1ICR_ISC10: u32 = HSEM_C1ICR_ISC10_Msk;
pub const HSEM_C1ICR_ISC11_Pos: u32 = 11;
pub const HSEM_C1ICR_ISC11_Msk: u32 = 0x1 << HSEM_C1ICR_ISC11_Pos;
pub const HSEM_C1ICR_ISC11: u32 = HSEM_C1ICR_ISC11_Msk;
pub const HSEM_C1ICR_ISC12_Pos: u32 = 12;
pub const HSEM_C1ICR_ISC12_Msk: u32 = 0x1 << HSEM_C1ICR_ISC12_Pos;
pub const HSEM_C1ICR_ISC12: u32 = HSEM_C1ICR_ISC12_Msk;
pub const HSEM_C1ICR_ISC13_Pos: u32 = 13;
pub const HSEM_C1ICR_ISC13_Msk: u32 = 0x1 << HSEM_C1ICR_ISC13_Pos;
pub const HSEM_C1ICR_ISC13: u32 = HSEM_C1ICR_ISC13_Msk;
pub const HSEM_C1ICR_ISC14_Pos: u32 = 14;
pub const HSEM_C1ICR_ISC14_Msk: u32 = 0x1 << HSEM_C1ICR_ISC14_Pos;
pub const HSEM_C1ICR_ISC14: u32 = HSEM_C1ICR_ISC14_Msk;
pub const HSEM_C1ICR_ISC15_Pos: u32 = 15;
pub const HSEM_C1ICR_ISC15_Msk: u32 = 0x1 << HSEM_C1ICR_ISC15_Pos;
pub const HSEM_C1ICR_ISC15: u32 = HSEM_C1ICR_ISC15_Msk;
pub const HSEM_C1ISR_ISF0_Pos: u32 = 0;
pub const HSEM_C1ISR_ISF0_Msk: u32 = 0x1 << HSEM_C1ISR_ISF0_Pos;
pub const HSEM_C1ISR_ISF0: u32 = HSEM_C1ISR_ISF0_Msk;
pub const HSEM_C1ISR_ISF1_Pos: u32 = 1;
pub const HSEM_C1ISR_ISF1_Msk: u32 = 0x1 << HSEM_C1ISR_ISF1_Pos;
pub const HSEM_C1ISR_ISF1: u32 = HSEM_C1ISR_ISF1_Msk;
pub const HSEM_C1ISR_ISF2_Pos: u32 = 2;
pub const HSEM_C1ISR_ISF2_Msk: u32 = 0x1 << HSEM_C1ISR_ISF2_Pos;
pub const HSEM_C1ISR_ISF2: u32 = HSEM_C1ISR_ISF2_Msk;
pub const HSEM_C1ISR_ISF3_Pos: u32 = 3;
pub const HSEM_C1ISR_ISF3_Msk: u32 = 0x1 << HSEM_C1ISR_ISF3_Pos;
pub const HSEM_C1ISR_ISF3: u32 = HSEM_C1ISR_ISF3_Msk;
pub const HSEM_C1ISR_ISF4_Pos: u32 = 4;
pub const HSEM_C1ISR_ISF4_Msk: u32 = 0x1 << HSEM_C1ISR_ISF4_Pos;
pub const HSEM_C1ISR_ISF4: u32 = HSEM_C1ISR_ISF4_Msk;
pub const HSEM_C1ISR_ISF5_Pos: u32 = 5;
pub const HSEM_C1ISR_ISF5_Msk: u32 = 0x1 << HSEM_C1ISR_ISF5_Pos;
pub const HSEM_C1ISR_ISF5: u32 = HSEM_C1ISR_ISF5_Msk;
pub const HSEM_C1ISR_ISF6_Pos: u32 = 6;
pub const HSEM_C1ISR_ISF6_Msk: u32 = 0x1 << HSEM_C1ISR_ISF6_Pos;
pub const HSEM_C1ISR_ISF6: u32 = HSEM_C1ISR_ISF6_Msk;
pub const HSEM_C1ISR_ISF7_Pos: u32 = 7;
pub const HSEM_C1ISR_ISF7_Msk: u32 = 0x1 << HSEM_C1ISR_ISF7_Pos;
pub const HSEM_C1ISR_ISF7: u32 = HSEM_C1ISR_ISF7_Msk;
pub const HSEM_C1ISR_ISF8_Pos: u32 = 8;
pub const HSEM_C1ISR_ISF8_Msk: u32 = 0x1 << HSEM_C1ISR_ISF8_Pos;
pub const HSEM_C1ISR_ISF8: u32 = HSEM_C1ISR_ISF8_Msk;
pub const HSEM_C1ISR_ISF9_Pos: u32 = 9;
pub const HSEM_C1ISR_ISF9_Msk: u32 = 0x1 << HSEM_C1ISR_ISF9_Pos;
pub const HSEM_C1ISR_ISF9: u32 = HSEM_C1ISR_ISF9_Msk;
pub const HSEM_C1ISR_ISF10_Pos: u32 = 10;
pub const HSEM_C1ISR_ISF10_Msk: u32 = 0x1 << HSEM_C1ISR_ISF10_Pos;
pub const HSEM_C1ISR_ISF10: u32 = HSEM_C1ISR_ISF10_Msk;
pub const HSEM_C1ISR_ISF11_Pos: u32 = 11;
pub const HSEM_C1ISR_ISF11_Msk: u32 = 0x1 << HSEM_C1ISR_ISF11_Pos;
pub const HSEM_C1ISR_ISF11: u32 = HSEM_C1ISR_ISF11_Msk;
pub const HSEM_C1ISR_ISF12_Pos: u32 = 12;
pub const HSEM_C1ISR_ISF12_Msk: u32 = 0x1 << HSEM_C1ISR_ISF12_Pos;
pub const HSEM_C1ISR_ISF12: u32 = HSEM_C1ISR_ISF12_Msk;
pub const HSEM_C1ISR_ISF13_Pos: u32 = 13;
pub const HSEM_C1ISR_ISF13_Msk: u32 = 0x1 << HSEM_C1ISR_ISF13_Pos;
pub const HSEM_C1ISR_ISF13: u32 = HSEM_C1ISR_ISF13_Msk;
pub const HSEM_C1ISR_ISF14_Pos: u32 = 14;
pub const HSEM_C1ISR_ISF14_Msk: u32 = 0x1 << HSEM_C1ISR_ISF14_Pos;
pub const HSEM_C1ISR_ISF14: u32 = HSEM_C1ISR_ISF14_Msk;
pub const HSEM_C1ISR_ISF15_Pos: u32 = 15;
pub const HSEM_C1ISR_ISF15_Msk: u32 = 0x1 << HSEM_C1ISR_ISF15_Pos;
pub const HSEM_C1ISR_ISF15: u32 = HSEM_C1ISR_ISF15_Msk;
pub const HSEM_C1MISR_MISF0_Pos: u32 = 0;
pub const HSEM_C1MISR_MISF0_Msk: u32 = 0x1 << HSEM_C1MISR_MISF0_Pos;
pub const HSEM_C1MISR_MISF0: u32 = HSEM_C1MISR_MISF0_Msk;
pub const HSEM_C1MISR_MISF1_Pos: u32 = 1;
pub const HSEM_C1MISR_MISF1_Msk: u32 = 0x1 << HSEM_C1MISR_MISF1_Pos;
pub const HSEM_C1MISR_MISF1: u32 = HSEM_C1MISR_MISF1_Msk;
pub const HSEM_C1MISR_MISF2_Pos: u32 = 2;
pub const HSEM_C1MISR_MISF2_Msk: u32 = 0x1 << HSEM_C1MISR_MISF2_Pos;
pub const HSEM_C1MISR_MISF2: u32 = HSEM_C1MISR_MISF2_Msk;
pub const HSEM_C1MISR_MISF3_Pos: u32 = 3;
pub const HSEM_C1MISR_MISF3_Msk: u32 = 0x1 << HSEM_C1MISR_MISF3_Pos;
pub const HSEM_C1MISR_MISF3: u32 = HSEM_C1MISR_MISF3_Msk;
pub const HSEM_C1MISR_MISF4_Pos: u32 = 4;
pub const HSEM_C1MISR_MISF4_Msk: u32 = 0x1 << HSEM_C1MISR_MISF4_Pos;
pub const HSEM_C1MISR_MISF4: u32 = HSEM_C1MISR_MISF4_Msk;
pub const HSEM_C1MISR_MISF5_Pos: u32 = 5;
pub const HSEM_C1MISR_MISF5_Msk: u32 = 0x1 << HSEM_C1MISR_MISF5_Pos;
pub const HSEM_C1MISR_MISF5: u32 = HSEM_C1MISR_MISF5_Msk;
pub const HSEM_C1MISR_MISF6_Pos: u32 = 6;
pub const HSEM_C1MISR_MISF6_Msk: u32 = 0x1 << HSEM_C1MISR_MISF6_Pos;
pub const HSEM_C1MISR_MISF6: u32 = HSEM_C1MISR_MISF6_Msk;
pub const HSEM_C1MISR_MISF7_Pos: u32 = 7;
pub const HSEM_C1MISR_MISF7_Msk: u32 = 0x1 << HSEM_C1MISR_MISF7_Pos;
pub const HSEM_C1MISR_MISF7: u32 = HSEM_C1MISR_MISF7_Msk;
pub const HSEM_C1MISR_MISF8_Pos: u32 = 8;
pub const HSEM_C1MISR_MISF8_Msk: u32 = 0x1 << HSEM_C1MISR_MISF8_Pos;
pub const HSEM_C1MISR_MISF8: u32 = HSEM_C1MISR_MISF8_Msk;
pub const HSEM_C1MISR_MISF9_Pos: u32 = 9;
pub const HSEM_C1MISR_MISF9_Msk: u32 = 0x1 << HSEM_C1MISR_MISF9_Pos;
pub const HSEM_C1MISR_MISF9: u32 = HSEM_C1MISR_MISF9_Msk;
pub const HSEM_C1MISR_MISF10_Pos: u32 = 10;
pub const HSEM_C1MISR_MISF10_Msk: u32 = 0x1 << HSEM_C1MISR_MISF10_Pos;
pub const HSEM_C1MISR_MISF10: u32 = HSEM_C1MISR_MISF10_Msk;
pub const HSEM_C1MISR_MISF11_Pos: u32 = 11;
pub const HSEM_C1MISR_MISF11_Msk: u32 = 0x1 << HSEM_C1MISR_MISF11_Pos;
pub const HSEM_C1MISR_MISF11: u32 = HSEM_C1MISR_MISF11_Msk;
pub const HSEM_C1MISR_MISF12_Pos: u32 = 12;
pub const HSEM_C1MISR_MISF12_Msk: u32 = 0x1 << HSEM_C1MISR_MISF12_Pos;
pub const HSEM_C1MISR_MISF12: u32 = HSEM_C1MISR_MISF12_Msk;
pub const HSEM_C1MISR_MISF13_Pos: u32 = 13;
pub const HSEM_C1MISR_MISF13_Msk: u32 = 0x1 << HSEM_C1MISR_MISF13_Pos;
pub const HSEM_C1MISR_MISF13: u32 = HSEM_C1MISR_MISF13_Msk;
pub const HSEM_C1MISR_MISF14_Pos: u32 = 14;
pub const HSEM_C1MISR_MISF14_Msk: u32 = 0x1 << HSEM_C1MISR_MISF14_Pos;
pub const HSEM_C1MISR_MISF14: u32 = HSEM_C1MISR_MISF14_Msk;
pub const HSEM_C1MISR_MISF15_Pos: u32 = 15;
pub const HSEM_C1MISR_MISF15_Msk: u32 = 0x1 << HSEM_C1MISR_MISF15_Pos;
pub const HSEM_C1MISR_MISF15: u32 = HSEM_C1MISR_MISF15_Msk;
pub const HSEM_C2IER_ISE0_Pos: u32 = 0;
pub const HSEM_C2IER_ISE0_Msk: u32 = 0x1 << HSEM_C2IER_ISE0_Pos;
pub const HSEM_C2IER_ISE0: u32 = HSEM_C2IER_ISE0_Msk;
pub const HSEM_C2IER_ISE1_Pos: u32 = 1;
pub const HSEM_C2IER_ISE1_Msk: u32 = 0x1 << HSEM_C2IER_ISE1_Pos;
pub const HSEM_C2IER_ISE1: u32 = HSEM_C2IER_ISE1_Msk;
pub const HSEM_C2IER_ISE2_Pos: u32 = 2;
pub const HSEM_C2IER_ISE2_Msk: u32 = 0x1 << HSEM_C2IER_ISE2_Pos;
pub const HSEM_C2IER_ISE2: u32 = HSEM_C2IER_ISE2_Msk;
pub const HSEM_C2IER_ISE3_Pos: u32 = 3;
pub const HSEM_C2IER_ISE3_Msk: u32 = 0x1 << HSEM_C2IER_ISE3_Pos;
pub const HSEM_C2IER_ISE3: u32 = HSEM_C2IER_ISE3_Msk;
pub const HSEM_C2IER_ISE4_Pos: u32 = 4;
pub const HSEM_C2IER_ISE4_Msk: u32 = 0x1 << HSEM_C2IER_ISE4_Pos;
pub const HSEM_C2IER_ISE4: u32 = HSEM_C2IER_ISE4_Msk;
pub const HSEM_C2IER_ISE5_Pos: u32 = 5;
pub const HSEM_C2IER_ISE5_Msk: u32 = 0x1 << HSEM_C2IER_ISE5_Pos;
pub const HSEM_C2IER_ISE5: u32 = HSEM_C2IER_ISE5_Msk;
pub const HSEM_C2IER_ISE6_Pos: u32 = 6;
pub const HSEM_C2IER_ISE6_Msk: u32 = 0x1 << HSEM_C2IER_ISE6_Pos;
pub const HSEM_C2IER_ISE6: u32 = HSEM_C2IER_ISE6_Msk;
pub const HSEM_C2IER_ISE7_Pos: u32 = 7;
pub const HSEM_C2IER_ISE7_Msk: u32 = 0x1 << HSEM_C2IER_ISE7_Pos;
pub const HSEM_C2IER_ISE7: u32 = HSEM_C2IER_ISE7_Msk;
pub const HSEM_C2IER_ISE8_Pos: u32 = 8;
pub const HSEM_C2IER_ISE8_Msk: u32 = 0x1 << HSEM_C2IER_ISE8_Pos;
pub const HSEM_C2IER_ISE8: u32 = HSEM_C2IER_ISE8_Msk;
pub const HSEM_C2IER_ISE9_Pos: u32 = 9;
pub const HSEM_C2IER_ISE9_Msk: u32 = 0x1 << HSEM_C2IER_ISE9_Pos;
pub const HSEM_C2IER_ISE9: u32 = HSEM_C2IER_ISE9_Msk;
pub const HSEM_C2IER_ISE10_Pos: u32 = 10;
pub const HSEM_C2IER_ISE10_Msk: u32 = 0x1 << HSEM_C2IER_ISE10_Pos;
pub const HSEM_C2IER_ISE10: u32 = HSEM_C2IER_ISE10_Msk;
pub const HSEM_C2IER_ISE11_Pos: u32 = 11;
pub const HSEM_C2IER_ISE11_Msk: u32 = 0x1 << HSEM_C2IER_ISE11_Pos;
pub const HSEM_C2IER_ISE11: u32 = HSEM_C2IER_ISE11_Msk;
pub const HSEM_C2IER_ISE12_Pos: u32 = 12;
pub const HSEM_C2IER_ISE12_Msk: u32 = 0x1 << HSEM_C2IER_ISE12_Pos;
pub const HSEM_C2IER_ISE12: u32 = HSEM_C2IER_ISE12_Msk;
pub const HSEM_C2IER_ISE13_Pos: u32 = 13;
pub const HSEM_C2IER_ISE13_Msk: u32 = 0x1 << HSEM_C2IER_ISE13_Pos;
pub const HSEM_C2IER_ISE13: u32 = HSEM_C2IER_ISE13_Msk;
pub const HSEM_C2IER_ISE14_Pos: u32 = 14;
pub const HSEM_C2IER_ISE14_Msk: u32 = 0x1 << HSEM_C2IER_ISE14_Pos;
pub const HSEM_C2IER_ISE14: u32 = HSEM_C2IER_ISE14_Msk;
pub const HSEM_C2IER_ISE15_Pos: u32 = 15;
pub const HSEM_C2IER_ISE15_Msk: u32 = 0x1 << HSEM_C2IER_ISE15_Pos;
pub const HSEM_C2IER_ISE15: u32 = HSEM_C2IER_ISE15_Msk;
pub const HSEM_C2ICR_ISC0_Pos: u32 = 0;
pub const HSEM_C2ICR_ISC0_Msk: u32 = 0x1 << HSEM_C2ICR_ISC0_Pos;
pub const HSEM_C2ICR_ISC0: u32 = HSEM_C2ICR_ISC0_Msk;
pub const HSEM_C2ICR_ISC1_Pos: u32 = 1;
pub const HSEM_C2ICR_ISC1_Msk: u32 = 0x1 << HSEM_C2ICR_ISC1_Pos;
pub const HSEM_C2ICR_ISC1: u32 = HSEM_C2ICR_ISC1_Msk;
pub const HSEM_C2ICR_ISC2_Pos: u32 = 2;
pub const HSEM_C2ICR_ISC2_Msk: u32 = 0x1 << HSEM_C2ICR_ISC2_Pos;
pub const HSEM_C2ICR_ISC2: u32 = HSEM_C2ICR_ISC2_Msk;
pub const HSEM_C2ICR_ISC3_Pos: u32 = 3;
pub const HSEM_C2ICR_ISC3_Msk: u32 = 0x1 << HSEM_C2ICR_ISC3_Pos;
pub const HSEM_C2ICR_ISC3: u32 = HSEM_C2ICR_ISC3_Msk;
pub const HSEM_C2ICR_ISC4_Pos: u32 = 4;
pub const HSEM_C2ICR_ISC4_Msk: u32 = 0x1 << HSEM_C2ICR_ISC4_Pos;
pub const HSEM_C2ICR_ISC4: u32 = HSEM_C2ICR_ISC4_Msk;
pub const HSEM_C2ICR_ISC5_Pos: u32 = 5;
pub const HSEM_C2ICR_ISC5_Msk: u32 = 0x1 << HSEM_C2ICR_ISC5_Pos;
pub const HSEM_C2ICR_ISC5: u32 = HSEM_C2ICR_ISC5_Msk;
pub const HSEM_C2ICR_ISC6_Pos: u32 = 6;
pub const HSEM_C2ICR_ISC6_Msk: u32 = 0x1 << HSEM_C2ICR_ISC6_Pos;
pub const HSEM_C2ICR_ISC6: u32 = HSEM_C2ICR_ISC6_Msk;
pub const HSEM_C2ICR_ISC7_Pos: u32 = 7;
pub const HSEM_C2ICR_ISC7_Msk: u32 = 0x1 << HSEM_C2ICR_ISC7_Pos;
pub const HSEM_C2ICR_ISC7: u32 = HSEM_C2ICR_ISC7_Msk;
pub const HSEM_C2ICR_ISC8_Pos: u32 = 8;
pub const HSEM_C2ICR_ISC8_Msk: u32 = 0x1 << HSEM_C2ICR_ISC8_Pos;
pub const HSEM_C2ICR_ISC8: u32 = HSEM_C2ICR_ISC8_Msk;
pub const HSEM_C2ICR_ISC9_Pos: u32 = 9;
pub const HSEM_C2ICR_ISC9_Msk: u32 = 0x1 << HSEM_C2ICR_ISC9_Pos;
pub const HSEM_C2ICR_ISC9: u32 = HSEM_C2ICR_ISC9_Msk;
pub const HSEM_C2ICR_ISC10_Pos: u32 = 10;
pub const HSEM_C2ICR_ISC10_Msk: u32 = 0x1 << HSEM_C2ICR_ISC10_Pos;
pub const HSEM_C2ICR_ISC10: u32 = HSEM_C2ICR_ISC10_Msk;
pub const HSEM_C2ICR_ISC11_Pos: u32 = 11;
pub const HSEM_C2ICR_ISC11_Msk: u32 = 0x1 << HSEM_C2ICR_ISC11_Pos;
pub const HSEM_C2ICR_ISC11: u32 = HSEM_C2ICR_ISC11_Msk;
pub const HSEM_C2ICR_ISC12_Pos: u32 = 12;
pub const HSEM_C2ICR_ISC12_Msk: u32 = 0x1 << HSEM_C2ICR_ISC12_Pos;
pub const HSEM_C2ICR_ISC12: u32 = HSEM_C2ICR_ISC12_Msk;
pub const HSEM_C2ICR_ISC13_Pos: u32 = 13;
pub const HSEM_C2ICR_ISC13_Msk: u32 = 0x1 << HSEM_C2ICR_ISC13_Pos;
pub const HSEM_C2ICR_ISC13: u32 = HSEM_C2ICR_ISC13_Msk;
pub const HSEM_C2ICR_ISC14_Pos: u32 = 14;
pub const HSEM_C2ICR_ISC14_Msk: u32 = 0x1 << HSEM_C2ICR_ISC14_Pos;
pub const HSEM_C2ICR_ISC14: u32 = HSEM_C2ICR_ISC14_Msk;
pub const HSEM_C2ICR_ISC15_Pos: u32 = 15;
pub const HSEM_C2ICR_ISC15_Msk: u32 = 0x1 << HSEM_C2ICR_ISC15_Pos;
pub const HSEM_C2ICR_ISC15: u32 = HSEM_C2ICR_ISC15_Msk;
pub const HSEM_C2ISR_ISF0_Pos: u32 = 0;
pub const HSEM_C2ISR_ISF0_Msk: u32 = 0x1 << HSEM_C2ISR_ISF0_Pos;
pub const HSEM_C2ISR_ISF0: u32 = HSEM_C2ISR_ISF0_Msk;
pub const HSEM_C2ISR_ISF1_Pos: u32 = 1;
pub const HSEM_C2ISR_ISF1_Msk: u32 = 0x1 << HSEM_C2ISR_ISF1_Pos;
pub const HSEM_C2ISR_ISF1: u32 = HSEM_C2ISR_ISF1_Msk;
pub const HSEM_C2ISR_ISF2_Pos: u32 = 2;
pub const HSEM_C2ISR_ISF2_Msk: u32 = 0x1 << HSEM_C2ISR_ISF2_Pos;
pub const HSEM_C2ISR_ISF2: u32 = HSEM_C2ISR_ISF2_Msk;
pub const HSEM_C2ISR_ISF3_Pos: u32 = 3;
pub const HSEM_C2ISR_ISF3_Msk: u32 = 0x1 << HSEM_C2ISR_ISF3_Pos;
pub const HSEM_C2ISR_ISF3: u32 = HSEM_C2ISR_ISF3_Msk;
pub const HSEM_C2ISR_ISF4_Pos: u32 = 4;
pub const HSEM_C2ISR_ISF4_Msk: u32 = 0x1 << HSEM_C2ISR_ISF4_Pos;
pub const HSEM_C2ISR_ISF4: u32 = HSEM_C2ISR_ISF4_Msk;
pub const HSEM_C2ISR_ISF5_Pos: u32 = 5;
pub const HSEM_C2ISR_ISF5_Msk: u32 = 0x1 << HSEM_C2ISR_ISF5_Pos;
pub const HSEM_C2ISR_ISF5: u32 = HSEM_C2ISR_ISF5_Msk;
pub const HSEM_C2ISR_ISF6_Pos: u32 = 6;
pub const HSEM_C2ISR_ISF6_Msk: u32 = 0x1 << HSEM_C2ISR_ISF6_Pos;
pub const HSEM_C2ISR_ISF6: u32 = HSEM_C2ISR_ISF6_Msk;
pub const HSEM_C2ISR_ISF7_Pos: u32 = 7;
pub const HSEM_C2ISR_ISF7_Msk: u32 = 0x1 << HSEM_C2ISR_ISF7_Pos;
pub const HSEM_C2ISR_ISF7: u32 = HSEM_C2ISR_ISF7_Msk;
pub const HSEM_C2ISR_ISF8_Pos: u32 = 8;
pub const HSEM_C2ISR_ISF8_Msk: u32 = 0x1 << HSEM_C2ISR_ISF8_Pos;
pub const HSEM_C2ISR_ISF8: u32 = HSEM_C2ISR_ISF8_Msk;
pub const HSEM_C2ISR_ISF9_Pos: u32 = 9;
pub const HSEM_C2ISR_ISF9_Msk: u32 = 0x1 << HSEM_C2ISR_ISF9_Pos;
pub const HSEM_C2ISR_ISF9: u32 = HSEM_C2ISR_ISF9_Msk;
pub const HSEM_C2ISR_ISF10_Pos: u32 = 10;
pub const HSEM_C2ISR_ISF10_Msk: u32 = 0x1 << HSEM_C2ISR_ISF10_Pos;
pub const HSEM_C2ISR_ISF10: u32 = HSEM_C2ISR_ISF10_Msk;
pub const HSEM_C2ISR_ISF11_Pos: u32 = 11;
pub const HSEM_C2ISR_ISF11_Msk: u32 = 0x1 << HSEM_C2ISR_ISF11_Pos;
pub const HSEM_C2ISR_ISF11: u32 = HSEM_C2ISR_ISF11_Msk;
pub const HSEM_C2ISR_ISF12_Pos: u32 = 12;
pub const HSEM_C2ISR_ISF12_Msk: u32 = 0x1 << HSEM_C2ISR_ISF12_Pos;
pub const HSEM_C2ISR_ISF12: u32 = HSEM_C2ISR_ISF12_Msk;
pub const HSEM_C2ISR_ISF13_Pos: u32 = 13;
pub const HSEM_C2ISR_ISF13_Msk: u32 = 0x1 << HSEM_C2ISR_ISF13_Pos;
pub const HSEM_C2ISR_ISF13: u32 = HSEM_C2ISR_ISF13_Msk;
pub const HSEM_C2ISR_ISF14_Pos: u32 = 14;
pub const HSEM_C2ISR_ISF14_Msk: u32 = 0x1 << HSEM_C2ISR_ISF14_Pos;
pub const HSEM_C2ISR_ISF14: u32 = HSEM_C2ISR_ISF14_Msk;
pub const HSEM_C2ISR_ISF15_Pos: u32 = 15;
pub const HSEM_C2ISR_ISF15_Msk: u32 = 0x1 << HSEM_C2ISR_ISF15_Pos;
pub const HSEM_C2ISR_ISF15: u32 = HSEM_C2ISR_ISF15_Msk;
pub const HSEM_C2MISR_MISF0_Pos: u32 = 0;
pub const HSEM_C2MISR_MISF0_Msk: u32 = 0x1 << HSEM_C2MISR_MISF0_Pos;
pub const HSEM_C2MISR_MISF0: u32 = HSEM_C2MISR_MISF0_Msk;
pub const HSEM_C2MISR_MISF1_Pos: u32 = 1;
pub const HSEM_C2MISR_MISF1_Msk: u32 = 0x1 << HSEM_C2MISR_MISF1_Pos;
pub const HSEM_C2MISR_MISF1: u32 = HSEM_C2MISR_MISF1_Msk;
pub const HSEM_C2MISR_MISF2_Pos: u32 = 2;
pub const HSEM_C2MISR_MISF2_Msk: u32 = 0x1 << HSEM_C2MISR_MISF2_Pos;
pub const HSEM_C2MISR_MISF2: u32 = HSEM_C2MISR_MISF2_Msk;
pub const HSEM_C2MISR_MISF3_Pos: u32 = 3;
pub const HSEM_C2MISR_MISF3_Msk: u32 = 0x1 << HSEM_C2MISR_MISF3_Pos;
pub const HSEM_C2MISR_MISF3: u32 = HSEM_C2MISR_MISF3_Msk;
pub const HSEM_C2MISR_MISF4_Pos: u32 = 4;
pub const HSEM_C2MISR_MISF4_Msk: u32 = 0x1 << HSEM_C2MISR_MISF4_Pos;
pub const HSEM_C2MISR_MISF4: u32 = HSEM_C2MISR_MISF4_Msk;
pub const HSEM_C2MISR_MISF5_Pos: u32 = 5;
pub const HSEM_C2MISR_MISF5_Msk: u32 = 0x1 << HSEM_C2MISR_MISF5_Pos;
pub const HSEM_C2MISR_MISF5: u32 = HSEM_C2MISR_MISF5_Msk;
pub const HSEM_C2MISR_MISF6_Pos: u32 = 6;
pub const HSEM_C2MISR_MISF6_Msk: u32 = 0x1 << HSEM_C2MISR_MISF6_Pos;
pub const HSEM_C2MISR_MISF6: u32 = HSEM_C2MISR_MISF6_Msk;
pub const HSEM_C2MISR_MISF7_Pos: u32 = 7;
pub const HSEM_C2MISR_MISF7_Msk: u32 = 0x1 << HSEM_C2MISR_MISF7_Pos;
pub const HSEM_C2MISR_MISF7: u32 = HSEM_C2MISR_MISF7_Msk;
pub const HSEM_C2MISR_MISF8_Pos: u32 = 8;
pub const HSEM_C2MISR_MISF8_Msk: u32 = 0x1 << HSEM_C2MISR_MISF8_Pos;
pub const HSEM_C2MISR_MISF8: u32 = HSEM_C2MISR_MISF8_Msk;
pub const HSEM_C2MISR_MISF9_Pos: u32 = 9;
pub const HSEM_C2MISR_MISF9_Msk: u32 = 0x1 << HSEM_C2MISR_MISF9_Pos;
pub const HSEM_C2MISR_MISF9: u32 = HSEM_C2MISR_MISF9_Msk;
pub const HSEM_C2MISR_MISF10_Pos: u32 = 10;
pub const HSEM_C2MISR_MISF10_Msk: u32 = 0x1 << HSEM_C2MISR_MISF10_Pos;
pub const HSEM_C2MISR_MISF10: u32 = HSEM_C2MISR_MISF10_Msk;
pub const HSEM_C2MISR_MISF11_Pos: u32 = 11;
pub const HSEM_C2MISR_MISF11_Msk: u32 = 0x1 << HSEM_C2MISR_MISF11_Pos;
pub const HSEM_C2MISR_MISF11: u32 = HSEM_C2MISR_MISF11_Msk;
pub const HSEM_C2MISR_MISF12_Pos: u32 = 12;
pub const HSEM_C2MISR_MISF12_Msk: u32 = 0x1 << HSEM_C2MISR_MISF12_Pos;
pub const HSEM_C2MISR_MISF12: u32 = HSEM_C2MISR_MISF12_Msk;
pub const HSEM_C2MISR_MISF13_Pos: u32 = 13;
pub const HSEM_C2MISR_MISF13_Msk: u32 = 0x1 << HSEM_C2MISR_MISF13_Pos;
pub const HSEM_C2MISR_MISF13: u32 = HSEM_C2MISR_MISF13_Msk;
pub const HSEM_C2MISR_MISF14_Pos: u32 = 14;
pub const HSEM_C2MISR_MISF14_Msk: u32 = 0x1 << HSEM_C2MISR_MISF14_Pos;
pub const HSEM_C2MISR_MISF14: u32 = HSEM_C2MISR_MISF14_Msk;
pub const HSEM_C2MISR_MISF15_Pos: u32 = 15;
pub const HSEM_C2MISR_MISF15_Msk: u32 = 0x1 << HSEM_C2MISR_MISF15_Pos;
pub const HSEM_C2MISR_MISF15: u32 = HSEM_C2MISR_MISF15_Msk;
pub const HSEM_CR_COREID_Pos: u32 = 8;
pub const HSEM_CR_COREID_Msk: u32 = 0xF << HSEM_CR_COREID_Pos;
pub const HSEM_CR_COREID: u32 = HSEM_CR_COREID_Msk;
pub const HSEM_CR_COREID_CPU1: u32 = 0x4 << HSEM_CR_COREID_Pos;
pub const HSEM_CR_COREID_CPU2: u32 = 0x8 << HSEM_CR_COREID_Pos;
pub const HSEM_CR_COREID_CURRENT: u32 = HSEM_CR_COREID_CPU1;
pub const HSEM_CR_KEY_Pos: u32 = 16;
pub const HSEM_CR_KEY_Msk: u32 = 0xFFFF << HSEM_CR_KEY_Pos;
pub const HSEM_CR_KEY: u32 = HSEM_CR_KEY_Msk;
pub const HSEM_KEYR_KEY_Pos: u32 = 16;
pub const HSEM_KEYR_KEY_Msk: u32 = 0xFFFF << HSEM_KEYR_KEY_Pos;
pub const HSEM_KEYR_KEY: u32 = HSEM_KEYR_KEY_Msk;
pub const PKA_CR_EN_Pos: u32 = 0;
pub const PKA_CR_EN_Msk: u32 = 0x1 << PKA_CR_EN_Pos;
pub const PKA_CR_EN: u32 = PKA_CR_EN_Msk;
pub const PKA_CR_START_Pos: u32 = 1;
pub const PKA_CR_START_Msk: u32 = 0x1 << PKA_CR_START_Pos;
pub const PKA_CR_START: u32 = PKA_CR_START_Msk;
pub const PKA_CR_MODE_Pos: u32 = 8;
pub const PKA_CR_MODE_Msk: u32 = 0x3F << PKA_CR_MODE_Pos;
pub const PKA_CR_MODE: u32 = PKA_CR_MODE_Msk;
pub const PKA_CR_MODE_0: u32 = 0x01 << PKA_CR_MODE_Pos;
pub const PKA_CR_MODE_1: u32 = 0x02 << PKA_CR_MODE_Pos;
pub const PKA_CR_MODE_2: u32 = 0x04 << PKA_CR_MODE_Pos;
pub const PKA_CR_MODE_3: u32 = 0x08 << PKA_CR_MODE_Pos;
pub const PKA_CR_MODE_4: u32 = 0x10 << PKA_CR_MODE_Pos;
pub const PKA_CR_MODE_5: u32 = 0x20 << PKA_CR_MODE_Pos;
pub const PKA_CR_PROCENDIE_Pos: u32 = 17;
pub const PKA_CR_PROCENDIE_Msk: u32 = 0x1 << PKA_CR_PROCENDIE_Pos;
pub const PKA_CR_PROCENDIE: u32 = PKA_CR_PROCENDIE_Msk;
pub const PKA_CR_RAMERRIE_Pos: u32 = 19;
pub const PKA_CR_RAMERRIE_Msk: u32 = 0x1 << PKA_CR_RAMERRIE_Pos;
pub const PKA_CR_RAMERRIE: u32 = PKA_CR_RAMERRIE_Msk;
pub const PKA_CR_ADDRERRIE_Pos: u32 = 20;
pub const PKA_CR_ADDRERRIE_Msk: u32 = 0x1 << PKA_CR_ADDRERRIE_Pos;
pub const PKA_CR_ADDRERRIE: u32 = PKA_CR_ADDRERRIE_Msk;
pub const PKA_SR_BUSY_Pos: u32 = 16;
pub const PKA_SR_BUSY_Msk: u32 = 0x1 << PKA_SR_BUSY_Pos;
pub const PKA_SR_BUSY: u32 = PKA_SR_BUSY_Msk;
pub const PKA_SR_PROCENDF_Pos: u32 = 17;
pub const PKA_SR_PROCENDF_Msk: u32 = 0x1 << PKA_SR_PROCENDF_Pos;
pub const PKA_SR_PROCENDF: u32 = PKA_SR_PROCENDF_Msk;
pub const PKA_SR_RAMERRF_Pos: u32 = 19;
pub const PKA_SR_RAMERRF_Msk: u32 = 0x1 << PKA_SR_RAMERRF_Pos;
pub const PKA_SR_RAMERRF: u32 = PKA_SR_RAMERRF_Msk;
pub const PKA_SR_ADDRERRF_Pos: u32 = 20;
pub const PKA_SR_ADDRERRF_Msk: u32 = 0x1 << PKA_SR_ADDRERRF_Pos;
pub const PKA_SR_ADDRERRF: u32 = PKA_SR_ADDRERRF_Msk;
pub const PKA_CLRFR_PROCENDFC_Pos: u32 = 17;
pub const PKA_CLRFR_PROCENDFC_Msk: u32 = 0x1 << PKA_CLRFR_PROCENDFC_Pos;
pub const PKA_CLRFR_PROCENDFC: u32 = PKA_CLRFR_PROCENDFC_Msk;
pub const PKA_CLRFR_RAMERRFC_Pos: u32 = 19;
pub const PKA_CLRFR_RAMERRFC_Msk: u32 = 0x1 << PKA_CLRFR_RAMERRFC_Pos;
pub const PKA_CLRFR_RAMERRFC: u32 = PKA_CLRFR_RAMERRFC_Msk;
pub const PKA_CLRFR_ADDRERRFC_Pos: u32 = 20;
pub const PKA_CLRFR_ADDRERRFC_Msk: u32 = 0x1 << PKA_CLRFR_ADDRERRFC_Pos;
pub const PKA_CLRFR_ADDRERRFC: u32 = PKA_CLRFR_ADDRERRFC_Msk;
pub const PKA_RAM_OFFSET: u32 = 0x400;
pub const PKA_MONTGOMERY_PARAM_IN_MOD_NB_BITS: u32 = 0x404 - PKA_RAM_OFFSET >> 2;
pub const PKA_MONTGOMERY_PARAM_IN_MODULUS: u32 = 0xD5C - PKA_RAM_OFFSET >> 2;
pub const PKA_MONTGOMERY_PARAM_OUT_PARAMETER: u32 = 0x594 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_IN_EXP_NB_BITS: u32 = 0x400 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_IN_OP_NB_BITS: u32 = 0x404 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_IN_MONTGOMERY_PARAM: u32 = 0x594 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_IN_EXPONENT_BASE: u32 = 0xA44 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_IN_EXPONENT: u32 = 0xBD0 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_IN_MODULUS: u32 = 0xD5C - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_OUT_MONTGOMERY_PARAM: u32 = 0x594 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_OUT_SM_ALGO_ACC1: u32 = 0x724 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_OUT_SM_ALGO_ACC2: u32 = 0x8B4 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_OUT_EXPONENT_BASE: u32 = 0xA44 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_EXP_OUT_SM_ALGO_ACC3: u32 = 0xE3C - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_EXP_NB_BITS: u32 = 0x400 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_OP_NB_BITS: u32 = 0x404 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_A_COEFF_SIGN: u32 = 0x408 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_A_COEFF: u32 = 0x40C - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_MOD_GF: u32 = 0x460 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_MONTGOMERY_PARAM: u32 = 0x4B4 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_K: u32 = 0x508 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_INITIAL_POINT_X: u32 = 0x55C - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_IN_INITIAL_POINT_Y: u32 = 0x5B0 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_OUT_RESULT_X: u32 = 0x55C - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_OUT_RESULT_Y: u32 = 0x5B0 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_OUT_LAST_DOUBLE_X1: u32 = 0xDE8 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_OUT_LAST_DOUBLE_Y1: u32 = 0xE3C - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_OUT_LAST_DOUBLE_Z1: u32 = 0xE90 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_OUT_CHECK_POINT_X2: u32 = 0xEE4 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_OUT_CHECK_POINT_Y2: u32 = 0xF38 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECC_SCALAR_MUL_OUT_CHECK_POINT_Z2: u32 = 0xF8C - PKA_RAM_OFFSET >> 2;
pub const PKA_POINT_CHECK_IN_MOD_NB_BITS: u32 = 0x404 - PKA_RAM_OFFSET >> 2;
pub const PKA_POINT_CHECK_IN_A_COEFF_SIGN: u32 = 0x408 - PKA_RAM_OFFSET >> 2;
pub const PKA_POINT_CHECK_IN_A_COEFF: u32 = 0x40C - PKA_RAM_OFFSET >> 2;
pub const PKA_POINT_CHECK_IN_B_COEFF: u32 = 0x7FC - PKA_RAM_OFFSET >> 2;
pub const PKA_POINT_CHECK_IN_MOD_GF: u32 = 0x460 - PKA_RAM_OFFSET >> 2;
pub const PKA_POINT_CHECK_IN_INITIAL_POINT_X: u32 = 0x55C - PKA_RAM_OFFSET >> 2;
pub const PKA_POINT_CHECK_IN_INITIAL_POINT_Y: u32 = 0x5B0 - PKA_RAM_OFFSET >> 2;
pub const PKA_POINT_CHECK_OUT_ERROR: u32 = 0x400 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_ORDER_NB_BITS: u32 = 0x400 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_MOD_NB_BITS: u32 = 0x404 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_A_COEFF_SIGN: u32 = 0x408 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_A_COEFF: u32 = 0x40C - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_MOD_GF: u32 = 0x460 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_K: u32 = 0x508 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_INITIAL_POINT_X: u32 = 0x55C - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_INITIAL_POINT_Y: u32 = 0x5B0 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_HASH_E: u32 = 0xDE8 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_PRIVATE_KEY_D: u32 = 0xE3C - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_IN_ORDER_N: u32 = 0xE94 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_OUT_ERROR: u32 = 0xEE8 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_OUT_SIGNATURE_R: u32 = 0x700 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_OUT_SIGNATURE_S: u32 = 0x754 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_OUT_FINAL_POINT_X: u32 = 0x103C - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_SIGN_OUT_FINAL_POINT_Y: u32 = 0x1090 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_ORDER_NB_BITS: u32 = 0x404 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_MOD_NB_BITS: u32 = 0x4B4 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_A_COEFF_SIGN: u32 = 0x45C - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_A_COEFF: u32 = 0x460 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_MOD_GF: u32 = 0x4B8 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_INITIAL_POINT_X: u32 = 0x5E8 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_INITIAL_POINT_Y: u32 = 0x63C - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_PUBLIC_KEY_POINT_X: u32 = 0xF40 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_PUBLIC_KEY_POINT_Y: u32 = 0xF94 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_SIGNATURE_R: u32 = 0x1098 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_SIGNATURE_S: u32 = 0xA44 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_HASH_E: u32 = 0xFE8 - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_IN_ORDER_N: u32 = 0xD5C - PKA_RAM_OFFSET >> 2;
pub const PKA_ECDSA_VERIF_OUT_RESULT: u32 = 0x5B0 - PKA_RAM_OFFSET >> 2;
pub const PKA_RSA_CRT_EXP_IN_MOD_NB_BITS: u32 = 0x404 - PKA_RAM_OFFSET >> 2;
pub const PKA_RSA_CRT_EXP_IN_DP_CRT: u32 = 0x65C - PKA_RAM_OFFSET >> 2;
pub const PKA_RSA_CRT_EXP_IN_DQ_CRT: u32 = 0xBD0 - PKA_RAM_OFFSET >> 2;
pub const PKA_RSA_CRT_EXP_IN_QINV_CRT: u32 = 0x7EC - PKA_RAM_OFFSET >> 2;
pub const PKA_RSA_CRT_EXP_IN_PRIME_P: u32 = 0x97C - PKA_RAM_OFFSET >> 2;
pub const PKA_RSA_CRT_EXP_IN_PRIME_Q: u32 = 0xD5C - PKA_RAM_OFFSET >> 2;
pub const PKA_RSA_CRT_EXP_IN_EXPONENT_BASE: u32 = 0xEEC - PKA_RAM_OFFSET >> 2;
pub const PKA_RSA_CRT_EXP_OUT_RESULT: u32 = 0x724 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_REDUC_IN_OP_LENGTH: u32 = 0x400 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_REDUC_IN_OPERAND: u32 = 0x8B4 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_REDUC_IN_MOD_LENGTH: u32 = 0x404 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_REDUC_IN_MODULUS: u32 = 0xA44 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_REDUC_OUT_RESULT: u32 = 0xBD0 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_ADD_NB_BITS: u32 = 0x404 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_ADD_IN_OP1: u32 = 0x8B4 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_ADD_IN_OP2: u32 = 0xA44 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_ADD_OUT_RESULT: u32 = 0xBD0 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_SUB_NB_BITS: u32 = 0x404 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_SUB_IN_OP1: u32 = 0x8B4 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_SUB_IN_OP2: u32 = 0xA44 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_SUB_OUT_RESULT: u32 = 0xBD0 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_MUL_NB_BITS: u32 = 0x404 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_MUL_IN_OP1: u32 = 0x8B4 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_MUL_IN_OP2: u32 = 0xA44 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_MUL_OUT_RESULT: u32 = 0xBD0 - PKA_RAM_OFFSET >> 2;
pub const PKA_COMPARISON_NB_BITS: u32 = 0x404 - PKA_RAM_OFFSET >> 2;
pub const PKA_COMPARISON_IN_OP1: u32 = 0x8B4 - PKA_RAM_OFFSET >> 2;
pub const PKA_COMPARISON_IN_OP2: u32 = 0xA44 - PKA_RAM_OFFSET >> 2;
pub const PKA_COMPARISON_OUT_RESULT: u32 = 0xBD0 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_ADD_NB_BITS: u32 = 0x404 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_ADD_IN_OP1: u32 = 0x8B4 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_ADD_IN_OP2: u32 = 0xA44 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_ADD_IN_OP3_MOD: u32 = 0xD5C - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_ADD_OUT_RESULT: u32 = 0xBD0 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_INV_NB_BITS: u32 = 0x404 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_INV_IN_OP1: u32 = 0x8B4 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_INV_IN_OP2_MOD: u32 = 0xA44 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_INV_OUT_RESULT: u32 = 0xBD0 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_SUB_NB_BITS: u32 = 0x404 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_SUB_IN_OP1: u32 = 0x8B4 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_SUB_IN_OP2: u32 = 0xA44 - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_SUB_IN_OP3_MOD: u32 = 0xD5C - PKA_RAM_OFFSET >> 2;
pub const PKA_MODULAR_SUB_OUT_RESULT: u32 = 0xBD0 - PKA_RAM_OFFSET >> 2;
pub const PKA_MONTGOMERY_MUL_NB_BITS: u32 = 0x404 - PKA_RAM_OFFSET >> 2;
pub const PKA_MONTGOMERY_MUL_IN_OP1: u32 = 0x8B4 - PKA_RAM_OFFSET >> 2;
pub const PKA_MONTGOMERY_MUL_IN_OP2: u32 = 0xA44 - PKA_RAM_OFFSET >> 2;
pub const PKA_MONTGOMERY_MUL_IN_OP3_MOD: u32 = 0xD5C - PKA_RAM_OFFSET >> 2;
pub const PKA_MONTGOMERY_MUL_OUT_RESULT: u32 = 0xBD0 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_ALL_OPS_NB_BITS: u32 = 0x404 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_ALL_OPS_IN_OP1: u32 = 0x8B4 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_ALL_OPS_IN_OP2: u32 = 0xA44 - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_ALL_OPS_IN_OP3: u32 = 0xD5C - PKA_RAM_OFFSET >> 2;
pub const PKA_ARITHMETIC_ALL_OPS_OUT_RESULT: u32 = 0xBD0 - PKA_RAM_OFFSET >> 2;
pub const PWR_CR1_LPMS_Pos: u32 = 0;
pub const PWR_CR1_LPMS_Msk: u32 = 0x7 << PWR_CR1_LPMS_Pos;
pub const PWR_CR1_LPMS: u32 = PWR_CR1_LPMS_Msk;
pub const PWR_CR1_LPMS_0: u32 = 0x1 << PWR_CR1_LPMS_Pos;
pub const PWR_CR1_LPMS_1: u32 = 0x2 << PWR_CR1_LPMS_Pos;
pub const PWR_CR1_LPMS_2: u32 = 0x4 << PWR_CR1_LPMS_Pos;
pub const PWR_CR1_SUBGHZSPINSSSEL_Pos: u32 = 3;
pub const PWR_CR1_SUBGHZSPINSSSEL_Msk: u32 = 0x1 << PWR_CR1_SUBGHZSPINSSSEL_Pos;
pub const PWR_CR1_SUBGHZSPINSSSEL: u32 = PWR_CR1_SUBGHZSPINSSSEL_Msk;
pub const PWR_CR1_FPDR_Pos: u32 = 4;
pub const PWR_CR1_FPDR_Msk: u32 = 0x1 << PWR_CR1_FPDR_Pos;
pub const PWR_CR1_FPDR: u32 = PWR_CR1_FPDR_Msk;
pub const PWR_CR1_FPDS_Pos: u32 = 5;
pub const PWR_CR1_FPDS_Msk: u32 = 0x1 << PWR_CR1_FPDS_Pos;
pub const PWR_CR1_FPDS: u32 = PWR_CR1_FPDS_Msk;
pub const PWR_CR1_DBP_Pos: u32 = 8;
pub const PWR_CR1_DBP_Msk: u32 = 0x1 << PWR_CR1_DBP_Pos;
pub const PWR_CR1_DBP: u32 = PWR_CR1_DBP_Msk;
pub const PWR_CR1_VOS_Pos: u32 = 9;
pub const PWR_CR1_VOS_Msk: u32 = 0x3 << PWR_CR1_VOS_Pos;
pub const PWR_CR1_VOS: u32 = PWR_CR1_VOS_Msk;
pub const PWR_CR1_VOS_0: u32 = 0x1 << PWR_CR1_VOS_Pos;
pub const PWR_CR1_VOS_1: u32 = 0x2 << PWR_CR1_VOS_Pos;
pub const PWR_CR1_LPR_Pos: u32 = 14;
pub const PWR_CR1_LPR_Msk: u32 = 0x1 << PWR_CR1_LPR_Pos;
pub const PWR_CR1_LPR: u32 = PWR_CR1_LPR_Msk;
pub const PWR_CR2_PVDE_Pos: u32 = 0;
pub const PWR_CR2_PVDE_Msk: u32 = 0x1 << PWR_CR2_PVDE_Pos;
pub const PWR_CR2_PVDE: u32 = PWR_CR2_PVDE_Msk;
pub const PWR_CR2_PLS_Pos: u32 = 1;
pub const PWR_CR2_PLS_Msk: u32 = 0x7 << PWR_CR2_PLS_Pos;
pub const PWR_CR2_PLS: u32 = PWR_CR2_PLS_Msk;
pub const PWR_CR2_PLS_0: u32 = 0x1 << PWR_CR2_PLS_Pos;
pub const PWR_CR2_PLS_1: u32 = 0x2 << PWR_CR2_PLS_Pos;
pub const PWR_CR2_PLS_2: u32 = 0x4 << PWR_CR2_PLS_Pos;
pub const PWR_CR2_PVME3_Pos: u32 = 6;
pub const PWR_CR2_PVME3_Msk: u32 = 0x1 << PWR_CR2_PVME3_Pos;
pub const PWR_CR2_PVME3: u32 = PWR_CR2_PVME3_Msk;
pub const PWR_CR3_EWUP_Pos: u32 = 0;
pub const PWR_CR3_EWUP_Msk: u32 = 0x07 << PWR_CR3_EWUP_Pos;
pub const PWR_CR3_EWUP: u32 = PWR_CR3_EWUP_Msk;
pub const PWR_CR3_EWUP1_Pos: u32 = 0;
pub const PWR_CR3_EWUP1_Msk: u32 = 0x1 << PWR_CR3_EWUP1_Pos;
pub const PWR_CR3_EWUP1: u32 = PWR_CR3_EWUP1_Msk;
pub const PWR_CR3_EWUP2_Pos: u32 = 1;
pub const PWR_CR3_EWUP2_Msk: u32 = 0x1 << PWR_CR3_EWUP2_Pos;
pub const PWR_CR3_EWUP2: u32 = PWR_CR3_EWUP2_Msk;
pub const PWR_CR3_EWUP3_Pos: u32 = 2;
pub const PWR_CR3_EWUP3_Msk: u32 = 0x1 << PWR_CR3_EWUP3_Pos;
pub const PWR_CR3_EWUP3: u32 = PWR_CR3_EWUP3_Msk;
pub const PWR_CR3_ULPEN_Pos: u32 = 7;
pub const PWR_CR3_ULPEN_Msk: u32 = 0x1 << PWR_CR3_ULPEN_Pos;
pub const PWR_CR3_ULPEN: u32 = PWR_CR3_ULPEN_Msk;
pub const PWR_CR3_EWPVD_Pos: u32 = 8;
pub const PWR_CR3_EWPVD_Msk: u32 = 0x1 << PWR_CR3_EWPVD_Pos;
pub const PWR_CR3_EWPVD: u32 = PWR_CR3_EWPVD_Msk;
pub const PWR_CR3_RRS_Pos: u32 = 9;
pub const PWR_CR3_RRS_Msk: u32 = 0x1 << PWR_CR3_RRS_Pos;
pub const PWR_CR3_RRS: u32 = PWR_CR3_RRS_Msk;
pub const PWR_CR3_APC_Pos: u32 = 10;
pub const PWR_CR3_APC_Msk: u32 = 0x1 << PWR_CR3_APC_Pos;
pub const PWR_CR3_APC: u32 = PWR_CR3_APC_Msk;
pub const PWR_CR3_EWRFBUSY_Pos: u32 = 11;
pub const PWR_CR3_EWRFBUSY_Msk: u32 = 0x1 << PWR_CR3_EWRFBUSY_Pos;
pub const PWR_CR3_EWRFBUSY: u32 = PWR_CR3_EWRFBUSY_Msk;
pub const PWR_CR3_EWRFIRQ_Pos: u32 = 13;
pub const PWR_CR3_EWRFIRQ_Msk: u32 = 0x1 << PWR_CR3_EWRFIRQ_Pos;
pub const PWR_CR3_EWRFIRQ: u32 = PWR_CR3_EWRFIRQ_Msk;
pub const PWR_CR3_EIWUL_Pos: u32 = 15;
pub const PWR_CR3_EIWUL_Msk: u32 = 0x1 << PWR_CR3_EIWUL_Pos;
pub const PWR_CR3_EIWUL: u32 = PWR_CR3_EIWUL_Msk;
pub const PWR_CR4_WP1_Pos: u32 = 0;
pub const PWR_CR4_WP1_Msk: u32 = 0x1 << PWR_CR4_WP1_Pos;
pub const PWR_CR4_WP1: u32 = PWR_CR4_WP1_Msk;
pub const PWR_CR4_WP2_Pos: u32 = 1;
pub const PWR_CR4_WP2_Msk: u32 = 0x1 << PWR_CR4_WP2_Pos;
pub const PWR_CR4_WP2: u32 = PWR_CR4_WP2_Msk;
pub const PWR_CR4_WP3_Pos: u32 = 2;
pub const PWR_CR4_WP3_Msk: u32 = 0x1 << PWR_CR4_WP3_Pos;
pub const PWR_CR4_WP3: u32 = PWR_CR4_WP3_Msk;
pub const PWR_CR4_VBE_Pos: u32 = 8;
pub const PWR_CR4_VBE_Msk: u32 = 0x1 << PWR_CR4_VBE_Pos;
pub const PWR_CR4_VBE: u32 = PWR_CR4_VBE_Msk;
pub const PWR_CR4_VBRS_Pos: u32 = 9;
pub const PWR_CR4_VBRS_Msk: u32 = 0x1 << PWR_CR4_VBRS_Pos;
pub const PWR_CR4_VBRS: u32 = PWR_CR4_VBRS_Msk;
pub const PWR_CR4_WRFBUSYP_Pos: u32 = 11;
pub const PWR_CR4_WRFBUSYP_Msk: u32 = 0x1 << PWR_CR4_WRFBUSYP_Pos;
pub const PWR_CR4_WRFBUSYP: u32 = PWR_CR4_WRFBUSYP_Msk;
pub const PWR_SR1_WUF_Pos: u32 = 0;
pub const PWR_SR1_WUF_Msk: u32 = 0x1F << PWR_SR1_WUF_Pos;
pub const PWR_SR1_WUF: u32 = PWR_SR1_WUF_Msk;
pub const PWR_SR1_WUF1_Pos: u32 = 0;
pub const PWR_SR1_WUF1_Msk: u32 = 0x1 << PWR_SR1_WUF1_Pos;
pub const PWR_SR1_WUF1: u32 = PWR_SR1_WUF1_Msk;
pub const PWR_SR1_WUF2_Pos: u32 = 1;
pub const PWR_SR1_WUF2_Msk: u32 = 0x1 << PWR_SR1_WUF2_Pos;
pub const PWR_SR1_WUF2: u32 = PWR_SR1_WUF2_Msk;
pub const PWR_SR1_WUF3_Pos: u32 = 2;
pub const PWR_SR1_WUF3_Msk: u32 = 0x1 << PWR_SR1_WUF3_Pos;
pub const PWR_SR1_WUF3: u32 = PWR_SR1_WUF3_Msk;
pub const PWR_SR1_WPVDF_Pos: u32 = 8;
pub const PWR_SR1_WPVDF_Msk: u32 = 0x1 << PWR_SR1_WPVDF_Pos;
pub const PWR_SR1_WPVDF: u32 = PWR_SR1_WPVDF_Msk;
pub const PWR_SR1_WRFBUSYF_Pos: u32 = 11;
pub const PWR_SR1_WRFBUSYF_Msk: u32 = 0x1 << PWR_SR1_WRFBUSYF_Pos;
pub const PWR_SR1_WRFBUSYF: u32 = PWR_SR1_WRFBUSYF_Msk;
pub const PWR_SR1_WUFI_Pos: u32 = 15;
pub const PWR_SR1_WUFI_Msk: u32 = 0x1 << PWR_SR1_WUFI_Pos;
pub const PWR_SR1_WUFI: u32 = PWR_SR1_WUFI_Msk;
pub const PWR_SR2_RFBUSYS_Pos: u32 = 1;
pub const PWR_SR2_RFBUSYS_Msk: u32 = 0x1 << PWR_SR2_RFBUSYS_Pos;
pub const PWR_SR2_RFBUSYS: u32 = PWR_SR2_RFBUSYS_Msk;
pub const PWR_SR2_RFBUSYMS_Pos: u32 = 2;
pub const PWR_SR2_RFBUSYMS_Msk: u32 = 0x1 << PWR_SR2_RFBUSYMS_Pos;
pub const PWR_SR2_RFBUSYMS: u32 = PWR_SR2_RFBUSYMS_Msk;
pub const PWR_SR2_SMPSRDY_Pos: u32 = 3;
pub const PWR_SR2_SMPSRDY_Msk: u32 = 0x1 << PWR_SR2_SMPSRDY_Pos;
pub const PWR_SR2_SMPSRDY: u32 = PWR_SR2_SMPSRDY_Msk;
pub const PWR_SR2_LDORDY_Pos: u32 = 4;
pub const PWR_SR2_LDORDY_Msk: u32 = 0x1 << PWR_SR2_LDORDY_Pos;
pub const PWR_SR2_LDORDY: u32 = PWR_SR2_LDORDY_Msk;
pub const PWR_SR2_RFEOLF_Pos: u32 = 5;
pub const PWR_SR2_RFEOLF_Msk: u32 = 0x1 << PWR_SR2_RFEOLF_Pos;
pub const PWR_SR2_RFEOLF: u32 = PWR_SR2_RFEOLF_Msk;
pub const PWR_SR2_REGMRS_Pos: u32 = 6;
pub const PWR_SR2_REGMRS_Msk: u32 = 0x1 << PWR_SR2_REGMRS_Pos;
pub const PWR_SR2_REGMRS: u32 = PWR_SR2_REGMRS_Msk;
pub const PWR_SR2_FLASHRDY_Pos: u32 = 7;
pub const PWR_SR2_FLASHRDY_Msk: u32 = 0x1 << PWR_SR2_FLASHRDY_Pos;
pub const PWR_SR2_FLASHRDY: u32 = PWR_SR2_FLASHRDY_Msk;
pub const PWR_SR2_REGLPS_Pos: u32 = 8;
pub const PWR_SR2_REGLPS_Msk: u32 = 0x1 << PWR_SR2_REGLPS_Pos;
pub const PWR_SR2_REGLPS: u32 = PWR_SR2_REGLPS_Msk;
pub const PWR_SR2_REGLPF_Pos: u32 = 9;
pub const PWR_SR2_REGLPF_Msk: u32 = 0x1 << PWR_SR2_REGLPF_Pos;
pub const PWR_SR2_REGLPF: u32 = PWR_SR2_REGLPF_Msk;
pub const PWR_SR2_VOSF_Pos: u32 = 10;
pub const PWR_SR2_VOSF_Msk: u32 = 0x1 << PWR_SR2_VOSF_Pos;
pub const PWR_SR2_VOSF: u32 = PWR_SR2_VOSF_Msk;
pub const PWR_SR2_PVDO_Pos: u32 = 11;
pub const PWR_SR2_PVDO_Msk: u32 = 0x1 << PWR_SR2_PVDO_Pos;
pub const PWR_SR2_PVDO: u32 = PWR_SR2_PVDO_Msk;
pub const PWR_SR2_PVMO3_Pos: u32 = 14;
pub const PWR_SR2_PVMO3_Msk: u32 = 0x1 << PWR_SR2_PVMO3_Pos;
pub const PWR_SR2_PVMO3: u32 = PWR_SR2_PVMO3_Msk;
pub const PWR_SCR_CWUF_Pos: u32 = 0;
pub const PWR_SCR_CWUF_Msk: u32 = 0x7 << PWR_SCR_CWUF_Pos;
pub const PWR_SCR_CWUF: u32 = PWR_SCR_CWUF_Msk;
pub const PWR_SCR_CWUF1_Pos: u32 = 0;
pub const PWR_SCR_CWUF1_Msk: u32 = 0x1 << PWR_SCR_CWUF1_Pos;
pub const PWR_SCR_CWUF1: u32 = PWR_SCR_CWUF1_Msk;
pub const PWR_SCR_CWUF2_Pos: u32 = 1;
pub const PWR_SCR_CWUF2_Msk: u32 = 0x1 << PWR_SCR_CWUF2_Pos;
pub const PWR_SCR_CWUF2: u32 = PWR_SCR_CWUF2_Msk;
pub const PWR_SCR_CWUF3_Pos: u32 = 2;
pub const PWR_SCR_CWUF3_Msk: u32 = 0x1 << PWR_SCR_CWUF3_Pos;
pub const PWR_SCR_CWUF3: u32 = PWR_SCR_CWUF3_Msk;
pub const PWR_SCR_CWPVDF_Pos: u32 = 8;
pub const PWR_SCR_CWPVDF_Msk: u32 = 0x1 << PWR_SCR_CWPVDF_Pos;
pub const PWR_SCR_CWPVDF: u32 = PWR_SCR_CWPVDF_Msk;
pub const PWR_SCR_CWRFBUSYF_Pos: u32 = 11;
pub const PWR_SCR_CWRFBUSYF_Msk: u32 = 0x1 << PWR_SCR_CWRFBUSYF_Pos;
pub const PWR_SCR_CWRFBUSYF: u32 = PWR_SCR_CWRFBUSYF_Msk;
pub const PWR_CR5_RFEOLEN_Pos: u32 = 14;
pub const PWR_CR5_RFEOLEN_Msk: u32 = 0x1 << PWR_CR5_RFEOLEN_Pos;
pub const PWR_CR5_RFEOLEN: u32 = PWR_CR5_RFEOLEN_Msk;
pub const PWR_CR5_SMPSEN_Pos: u32 = 15;
pub const PWR_CR5_SMPSEN_Msk: u32 = 0x1 << PWR_CR5_SMPSEN_Pos;
pub const PWR_CR5_SMPSEN: u32 = PWR_CR5_SMPSEN_Msk;
pub const PWR_PUCRA_PA0_Pos: u32 = 0;
pub const PWR_PUCRA_PA0_Msk: u32 = 0x1 << PWR_PUCRA_PA0_Pos;
pub const PWR_PUCRA_PA0: u32 = PWR_PUCRA_PA0_Msk;
pub const PWR_PUCRA_PA1_Pos: u32 = 1;
pub const PWR_PUCRA_PA1_Msk: u32 = 0x1 << PWR_PUCRA_PA1_Pos;
pub const PWR_PUCRA_PA1: u32 = PWR_PUCRA_PA1_Msk;
pub const PWR_PUCRA_PA2_Pos: u32 = 2;
pub const PWR_PUCRA_PA2_Msk: u32 = 0x1 << PWR_PUCRA_PA2_Pos;
pub const PWR_PUCRA_PA2: u32 = PWR_PUCRA_PA2_Msk;
pub const PWR_PUCRA_PA3_Pos: u32 = 3;
pub const PWR_PUCRA_PA3_Msk: u32 = 0x1 << PWR_PUCRA_PA3_Pos;
pub const PWR_PUCRA_PA3: u32 = PWR_PUCRA_PA3_Msk;
pub const PWR_PUCRA_PA4_Pos: u32 = 4;
pub const PWR_PUCRA_PA4_Msk: u32 = 0x1 << PWR_PUCRA_PA4_Pos;
pub const PWR_PUCRA_PA4: u32 = PWR_PUCRA_PA4_Msk;
pub const PWR_PUCRA_PA5_Pos: u32 = 5;
pub const PWR_PUCRA_PA5_Msk: u32 = 0x1 << PWR_PUCRA_PA5_Pos;
pub const PWR_PUCRA_PA5: u32 = PWR_PUCRA_PA5_Msk;
pub const PWR_PUCRA_PA6_Pos: u32 = 6;
pub const PWR_PUCRA_PA6_Msk: u32 = 0x1 << PWR_PUCRA_PA6_Pos;
pub const PWR_PUCRA_PA6: u32 = PWR_PUCRA_PA6_Msk;
pub const PWR_PUCRA_PA7_Pos: u32 = 7;
pub const PWR_PUCRA_PA7_Msk: u32 = 0x1 << PWR_PUCRA_PA7_Pos;
pub const PWR_PUCRA_PA7: u32 = PWR_PUCRA_PA7_Msk;
pub const PWR_PUCRA_PA8_Pos: u32 = 8;
pub const PWR_PUCRA_PA8_Msk: u32 = 0x1 << PWR_PUCRA_PA8_Pos;
pub const PWR_PUCRA_PA8: u32 = PWR_PUCRA_PA8_Msk;
pub const PWR_PUCRA_PA9_Pos: u32 = 9;
pub const PWR_PUCRA_PA9_Msk: u32 = 0x1 << PWR_PUCRA_PA9_Pos;
pub const PWR_PUCRA_PA9: u32 = PWR_PUCRA_PA9_Msk;
pub const PWR_PUCRA_PA10_Pos: u32 = 10;
pub const PWR_PUCRA_PA10_Msk: u32 = 0x1 << PWR_PUCRA_PA10_Pos;
pub const PWR_PUCRA_PA10: u32 = PWR_PUCRA_PA10_Msk;
pub const PWR_PUCRA_PA11_Pos: u32 = 11;
pub const PWR_PUCRA_PA11_Msk: u32 = 0x1 << PWR_PUCRA_PA11_Pos;
pub const PWR_PUCRA_PA11: u32 = PWR_PUCRA_PA11_Msk;
pub const PWR_PUCRA_PA12_Pos: u32 = 12;
pub const PWR_PUCRA_PA12_Msk: u32 = 0x1 << PWR_PUCRA_PA12_Pos;
pub const PWR_PUCRA_PA12: u32 = PWR_PUCRA_PA12_Msk;
pub const PWR_PUCRA_PA13_Pos: u32 = 13;
pub const PWR_PUCRA_PA13_Msk: u32 = 0x1 << PWR_PUCRA_PA13_Pos;
pub const PWR_PUCRA_PA13: u32 = PWR_PUCRA_PA13_Msk;
pub const PWR_PUCRA_PA14_Pos: u32 = 14;
pub const PWR_PUCRA_PA14_Msk: u32 = 0x1 << PWR_PUCRA_PA14_Pos;
pub const PWR_PUCRA_PA14: u32 = PWR_PUCRA_PA14_Msk;
pub const PWR_PUCRA_PA15_Pos: u32 = 15;
pub const PWR_PUCRA_PA15_Msk: u32 = 0x1 << PWR_PUCRA_PA15_Pos;
pub const PWR_PUCRA_PA15: u32 = PWR_PUCRA_PA15_Msk;
pub const PWR_PDCRA_PA0_Pos: u32 = 0;
pub const PWR_PDCRA_PA0_Msk: u32 = 0x1 << PWR_PDCRA_PA0_Pos;
pub const PWR_PDCRA_PA0: u32 = PWR_PDCRA_PA0_Msk;
pub const PWR_PDCRA_PA1_Pos: u32 = 1;
pub const PWR_PDCRA_PA1_Msk: u32 = 0x1 << PWR_PDCRA_PA1_Pos;
pub const PWR_PDCRA_PA1: u32 = PWR_PDCRA_PA1_Msk;
pub const PWR_PDCRA_PA2_Pos: u32 = 2;
pub const PWR_PDCRA_PA2_Msk: u32 = 0x1 << PWR_PDCRA_PA2_Pos;
pub const PWR_PDCRA_PA2: u32 = PWR_PDCRA_PA2_Msk;
pub const PWR_PDCRA_PA3_Pos: u32 = 3;
pub const PWR_PDCRA_PA3_Msk: u32 = 0x1 << PWR_PDCRA_PA3_Pos;
pub const PWR_PDCRA_PA3: u32 = PWR_PDCRA_PA3_Msk;
pub const PWR_PDCRA_PA4_Pos: u32 = 4;
pub const PWR_PDCRA_PA4_Msk: u32 = 0x1 << PWR_PDCRA_PA4_Pos;
pub const PWR_PDCRA_PA4: u32 = PWR_PDCRA_PA4_Msk;
pub const PWR_PDCRA_PA5_Pos: u32 = 5;
pub const PWR_PDCRA_PA5_Msk: u32 = 0x1 << PWR_PDCRA_PA5_Pos;
pub const PWR_PDCRA_PA5: u32 = PWR_PDCRA_PA5_Msk;
pub const PWR_PDCRA_PA6_Pos: u32 = 6;
pub const PWR_PDCRA_PA6_Msk: u32 = 0x1 << PWR_PDCRA_PA6_Pos;
pub const PWR_PDCRA_PA6: u32 = PWR_PDCRA_PA6_Msk;
pub const PWR_PDCRA_PA7_Pos: u32 = 7;
pub const PWR_PDCRA_PA7_Msk: u32 = 0x1 << PWR_PDCRA_PA7_Pos;
pub const PWR_PDCRA_PA7: u32 = PWR_PDCRA_PA7_Msk;
pub const PWR_PDCRA_PA8_Pos: u32 = 8;
pub const PWR_PDCRA_PA8_Msk: u32 = 0x1 << PWR_PDCRA_PA8_Pos;
pub const PWR_PDCRA_PA8: u32 = PWR_PDCRA_PA8_Msk;
pub const PWR_PDCRA_PA9_Pos: u32 = 9;
pub const PWR_PDCRA_PA9_Msk: u32 = 0x1 << PWR_PDCRA_PA9_Pos;
pub const PWR_PDCRA_PA9: u32 = PWR_PDCRA_PA9_Msk;
pub const PWR_PDCRA_PA10_Pos: u32 = 10;
pub const PWR_PDCRA_PA10_Msk: u32 = 0x1 << PWR_PDCRA_PA10_Pos;
pub const PWR_PDCRA_PA10: u32 = PWR_PDCRA_PA10_Msk;
pub const PWR_PDCRA_PA11_Pos: u32 = 11;
pub const PWR_PDCRA_PA11_Msk: u32 = 0x1 << PWR_PDCRA_PA11_Pos;
pub const PWR_PDCRA_PA11: u32 = PWR_PDCRA_PA11_Msk;
pub const PWR_PDCRA_PA12_Pos: u32 = 12;
pub const PWR_PDCRA_PA12_Msk: u32 = 0x1 << PWR_PDCRA_PA12_Pos;
pub const PWR_PDCRA_PA12: u32 = PWR_PDCRA_PA12_Msk;
pub const PWR_PDCRA_PA13_Pos: u32 = 13;
pub const PWR_PDCRA_PA13_Msk: u32 = 0x1 << PWR_PDCRA_PA13_Pos;
pub const PWR_PDCRA_PA13: u32 = PWR_PDCRA_PA13_Msk;
pub const PWR_PDCRA_PA14_Pos: u32 = 14;
pub const PWR_PDCRA_PA14_Msk: u32 = 0x1 << PWR_PDCRA_PA14_Pos;
pub const PWR_PDCRA_PA14: u32 = PWR_PDCRA_PA14_Msk;
pub const PWR_PDCRA_PA15_Pos: u32 = 15;
pub const PWR_PDCRA_PA15_Msk: u32 = 0x1 << PWR_PDCRA_PA15_Pos;
pub const PWR_PDCRA_PA15: u32 = PWR_PDCRA_PA15_Msk;
pub const PWR_PUCRB_PB0_Pos: u32 = 0;
pub const PWR_PUCRB_PB0_Msk: u32 = 0x1 << PWR_PUCRB_PB0_Pos;
pub const PWR_PUCRB_PB0: u32 = PWR_PUCRB_PB0_Msk;
pub const PWR_PUCRB_PB1_Pos: u32 = 1;
pub const PWR_PUCRB_PB1_Msk: u32 = 0x1 << PWR_PUCRB_PB1_Pos;
pub const PWR_PUCRB_PB1: u32 = PWR_PUCRB_PB1_Msk;
pub const PWR_PUCRB_PB2_Pos: u32 = 2;
pub const PWR_PUCRB_PB2_Msk: u32 = 0x1 << PWR_PUCRB_PB2_Pos;
pub const PWR_PUCRB_PB2: u32 = PWR_PUCRB_PB2_Msk;
pub const PWR_PUCRB_PB3_Pos: u32 = 3;
pub const PWR_PUCRB_PB3_Msk: u32 = 0x1 << PWR_PUCRB_PB3_Pos;
pub const PWR_PUCRB_PB3: u32 = PWR_PUCRB_PB3_Msk;
pub const PWR_PUCRB_PB4_Pos: u32 = 4;
pub const PWR_PUCRB_PB4_Msk: u32 = 0x1 << PWR_PUCRB_PB4_Pos;
pub const PWR_PUCRB_PB4: u32 = PWR_PUCRB_PB4_Msk;
pub const PWR_PUCRB_PB5_Pos: u32 = 5;
pub const PWR_PUCRB_PB5_Msk: u32 = 0x1 << PWR_PUCRB_PB5_Pos;
pub const PWR_PUCRB_PB5: u32 = PWR_PUCRB_PB5_Msk;
pub const PWR_PUCRB_PB6_Pos: u32 = 6;
pub const PWR_PUCRB_PB6_Msk: u32 = 0x1 << PWR_PUCRB_PB6_Pos;
pub const PWR_PUCRB_PB6: u32 = PWR_PUCRB_PB6_Msk;
pub const PWR_PUCRB_PB7_Pos: u32 = 7;
pub const PWR_PUCRB_PB7_Msk: u32 = 0x1 << PWR_PUCRB_PB7_Pos;
pub const PWR_PUCRB_PB7: u32 = PWR_PUCRB_PB7_Msk;
pub const PWR_PUCRB_PB8_Pos: u32 = 8;
pub const PWR_PUCRB_PB8_Msk: u32 = 0x1 << PWR_PUCRB_PB8_Pos;
pub const PWR_PUCRB_PB8: u32 = PWR_PUCRB_PB8_Msk;
pub const PWR_PUCRB_PB9_Pos: u32 = 9;
pub const PWR_PUCRB_PB9_Msk: u32 = 0x1 << PWR_PUCRB_PB9_Pos;
pub const PWR_PUCRB_PB9: u32 = PWR_PUCRB_PB9_Msk;
pub const PWR_PUCRB_PB10_Pos: u32 = 10;
pub const PWR_PUCRB_PB10_Msk: u32 = 0x1 << PWR_PUCRB_PB10_Pos;
pub const PWR_PUCRB_PB10: u32 = PWR_PUCRB_PB10_Msk;
pub const PWR_PUCRB_PB11_Pos: u32 = 11;
pub const PWR_PUCRB_PB11_Msk: u32 = 0x1 << PWR_PUCRB_PB11_Pos;
pub const PWR_PUCRB_PB11: u32 = PWR_PUCRB_PB11_Msk;
pub const PWR_PUCRB_PB12_Pos: u32 = 12;
pub const PWR_PUCRB_PB12_Msk: u32 = 0x1 << PWR_PUCRB_PB12_Pos;
pub const PWR_PUCRB_PB12: u32 = PWR_PUCRB_PB12_Msk;
pub const PWR_PUCRB_PB13_Pos: u32 = 13;
pub const PWR_PUCRB_PB13_Msk: u32 = 0x1 << PWR_PUCRB_PB13_Pos;
pub const PWR_PUCRB_PB13: u32 = PWR_PUCRB_PB13_Msk;
pub const PWR_PUCRB_PB14_Pos: u32 = 14;
pub const PWR_PUCRB_PB14_Msk: u32 = 0x1 << PWR_PUCRB_PB14_Pos;
pub const PWR_PUCRB_PB14: u32 = PWR_PUCRB_PB14_Msk;
pub const PWR_PUCRB_PB15_Pos: u32 = 15;
pub const PWR_PUCRB_PB15_Msk: u32 = 0x1 << PWR_PUCRB_PB15_Pos;
pub const PWR_PUCRB_PB15: u32 = PWR_PUCRB_PB15_Msk;
pub const PWR_PDCRB_PB0_Pos: u32 = 0;
pub const PWR_PDCRB_PB0_Msk: u32 = 0x1 << PWR_PDCRB_PB0_Pos;
pub const PWR_PDCRB_PB0: u32 = PWR_PDCRB_PB0_Msk;
pub const PWR_PDCRB_PB1_Pos: u32 = 1;
pub const PWR_PDCRB_PB1_Msk: u32 = 0x1 << PWR_PDCRB_PB1_Pos;
pub const PWR_PDCRB_PB1: u32 = PWR_PDCRB_PB1_Msk;
pub const PWR_PDCRB_PB2_Pos: u32 = 2;
pub const PWR_PDCRB_PB2_Msk: u32 = 0x1 << PWR_PDCRB_PB2_Pos;
pub const PWR_PDCRB_PB2: u32 = PWR_PDCRB_PB2_Msk;
pub const PWR_PDCRB_PB3_Pos: u32 = 3;
pub const PWR_PDCRB_PB3_Msk: u32 = 0x1 << PWR_PDCRB_PB3_Pos;
pub const PWR_PDCRB_PB3: u32 = PWR_PDCRB_PB3_Msk;
pub const PWR_PDCRB_PB4_Pos: u32 = 4;
pub const PWR_PDCRB_PB4_Msk: u32 = 0x1 << PWR_PDCRB_PB4_Pos;
pub const PWR_PDCRB_PB4: u32 = PWR_PDCRB_PB4_Msk;
pub const PWR_PDCRB_PB5_Pos: u32 = 5;
pub const PWR_PDCRB_PB5_Msk: u32 = 0x1 << PWR_PDCRB_PB5_Pos;
pub const PWR_PDCRB_PB5: u32 = PWR_PDCRB_PB5_Msk;
pub const PWR_PDCRB_PB6_Pos: u32 = 6;
pub const PWR_PDCRB_PB6_Msk: u32 = 0x1 << PWR_PDCRB_PB6_Pos;
pub const PWR_PDCRB_PB6: u32 = PWR_PDCRB_PB6_Msk;
pub const PWR_PDCRB_PB7_Pos: u32 = 7;
pub const PWR_PDCRB_PB7_Msk: u32 = 0x1 << PWR_PDCRB_PB7_Pos;
pub const PWR_PDCRB_PB7: u32 = PWR_PDCRB_PB7_Msk;
pub const PWR_PDCRB_PB8_Pos: u32 = 8;
pub const PWR_PDCRB_PB8_Msk: u32 = 0x1 << PWR_PDCRB_PB8_Pos;
pub const PWR_PDCRB_PB8: u32 = PWR_PDCRB_PB8_Msk;
pub const PWR_PDCRB_PB9_Pos: u32 = 9;
pub const PWR_PDCRB_PB9_Msk: u32 = 0x1 << PWR_PDCRB_PB9_Pos;
pub const PWR_PDCRB_PB9: u32 = PWR_PDCRB_PB9_Msk;
pub const PWR_PDCRB_PB10_Pos: u32 = 10;
pub const PWR_PDCRB_PB10_Msk: u32 = 0x1 << PWR_PDCRB_PB10_Pos;
pub const PWR_PDCRB_PB10: u32 = PWR_PDCRB_PB10_Msk;
pub const PWR_PDCRB_PB11_Pos: u32 = 11;
pub const PWR_PDCRB_PB11_Msk: u32 = 0x1 << PWR_PDCRB_PB11_Pos;
pub const PWR_PDCRB_PB11: u32 = PWR_PDCRB_PB11_Msk;
pub const PWR_PDCRB_PB12_Pos: u32 = 12;
pub const PWR_PDCRB_PB12_Msk: u32 = 0x1 << PWR_PDCRB_PB12_Pos;
pub const PWR_PDCRB_PB12: u32 = PWR_PDCRB_PB12_Msk;
pub const PWR_PDCRB_PB13_Pos: u32 = 13;
pub const PWR_PDCRB_PB13_Msk: u32 = 0x1 << PWR_PDCRB_PB13_Pos;
pub const PWR_PDCRB_PB13: u32 = PWR_PDCRB_PB13_Msk;
pub const PWR_PDCRB_PB14_Pos: u32 = 14;
pub const PWR_PDCRB_PB14_Msk: u32 = 0x1 << PWR_PDCRB_PB14_Pos;
pub const PWR_PDCRB_PB14: u32 = PWR_PDCRB_PB14_Msk;
pub const PWR_PDCRB_PB15_Pos: u32 = 15;
pub const PWR_PDCRB_PB15_Msk: u32 = 0x1 << PWR_PDCRB_PB15_Pos;
pub const PWR_PDCRB_PB15: u32 = PWR_PDCRB_PB15_Msk;
pub const PWR_PUCRC_PC0_Pos: u32 = 0;
pub const PWR_PUCRC_PC0_Msk: u32 = 0x1 << PWR_PUCRC_PC0_Pos;
pub const PWR_PUCRC_PC0: u32 = PWR_PUCRC_PC0_Msk;
pub const PWR_PUCRC_PC1_Pos: u32 = 1;
pub const PWR_PUCRC_PC1_Msk: u32 = 0x1 << PWR_PUCRC_PC1_Pos;
pub const PWR_PUCRC_PC1: u32 = PWR_PUCRC_PC1_Msk;
pub const PWR_PUCRC_PC2_Pos: u32 = 2;
pub const PWR_PUCRC_PC2_Msk: u32 = 0x1 << PWR_PUCRC_PC2_Pos;
pub const PWR_PUCRC_PC2: u32 = PWR_PUCRC_PC2_Msk;
pub const PWR_PUCRC_PC3_Pos: u32 = 3;
pub const PWR_PUCRC_PC3_Msk: u32 = 0x1 << PWR_PUCRC_PC3_Pos;
pub const PWR_PUCRC_PC3: u32 = PWR_PUCRC_PC3_Msk;
pub const PWR_PUCRC_PC4_Pos: u32 = 4;
pub const PWR_PUCRC_PC4_Msk: u32 = 0x1 << PWR_PUCRC_PC4_Pos;
pub const PWR_PUCRC_PC4: u32 = PWR_PUCRC_PC4_Msk;
pub const PWR_PUCRC_PC5_Pos: u32 = 5;
pub const PWR_PUCRC_PC5_Msk: u32 = 0x1 << PWR_PUCRC_PC5_Pos;
pub const PWR_PUCRC_PC5: u32 = PWR_PUCRC_PC5_Msk;
pub const PWR_PUCRC_PC6_Pos: u32 = 6;
pub const PWR_PUCRC_PC6_Msk: u32 = 0x1 << PWR_PUCRC_PC6_Pos;
pub const PWR_PUCRC_PC6: u32 = PWR_PUCRC_PC6_Msk;
pub const PWR_PUCRC_PC13_Pos: u32 = 13;
pub const PWR_PUCRC_PC13_Msk: u32 = 0x1 << PWR_PUCRC_PC13_Pos;
pub const PWR_PUCRC_PC13: u32 = PWR_PUCRC_PC13_Msk;
pub const PWR_PUCRC_PC14_Pos: u32 = 14;
pub const PWR_PUCRC_PC14_Msk: u32 = 0x1 << PWR_PUCRC_PC14_Pos;
pub const PWR_PUCRC_PC14: u32 = PWR_PUCRC_PC14_Msk;
pub const PWR_PUCRC_PC15_Pos: u32 = 15;
pub const PWR_PUCRC_PC15_Msk: u32 = 0x1 << PWR_PUCRC_PC15_Pos;
pub const PWR_PUCRC_PC15: u32 = PWR_PUCRC_PC15_Msk;
pub const PWR_PDCRC_PC0_Pos: u32 = 0;
pub const PWR_PDCRC_PC0_Msk: u32 = 0x1 << PWR_PDCRC_PC0_Pos;
pub const PWR_PDCRC_PC0: u32 = PWR_PDCRC_PC0_Msk;
pub const PWR_PDCRC_PC1_Pos: u32 = 1;
pub const PWR_PDCRC_PC1_Msk: u32 = 0x1 << PWR_PDCRC_PC1_Pos;
pub const PWR_PDCRC_PC1: u32 = PWR_PDCRC_PC1_Msk;
pub const PWR_PDCRC_PC2_Pos: u32 = 2;
pub const PWR_PDCRC_PC2_Msk: u32 = 0x1 << PWR_PDCRC_PC2_Pos;
pub const PWR_PDCRC_PC2: u32 = PWR_PDCRC_PC2_Msk;
pub const PWR_PDCRC_PC3_Pos: u32 = 3;
pub const PWR_PDCRC_PC3_Msk: u32 = 0x1 << PWR_PDCRC_PC3_Pos;
pub const PWR_PDCRC_PC3: u32 = PWR_PDCRC_PC3_Msk;
pub const PWR_PDCRC_PC4_Pos: u32 = 4;
pub const PWR_PDCRC_PC4_Msk: u32 = 0x1 << PWR_PDCRC_PC4_Pos;
pub const PWR_PDCRC_PC4: u32 = PWR_PDCRC_PC4_Msk;
pub const PWR_PDCRC_PC5_Pos: u32 = 5;
pub const PWR_PDCRC_PC5_Msk: u32 = 0x1 << PWR_PDCRC_PC5_Pos;
pub const PWR_PDCRC_PC5: u32 = PWR_PDCRC_PC5_Msk;
pub const PWR_PDCRC_PC6_Pos: u32 = 6;
pub const PWR_PDCRC_PC6_Msk: u32 = 0x1 << PWR_PDCRC_PC6_Pos;
pub const PWR_PDCRC_PC6: u32 = PWR_PDCRC_PC6_Msk;
pub const PWR_PDCRC_PC13_Pos: u32 = 13;
pub const PWR_PDCRC_PC13_Msk: u32 = 0x1 << PWR_PDCRC_PC13_Pos;
pub const PWR_PDCRC_PC13: u32 = PWR_PDCRC_PC13_Msk;
pub const PWR_PDCRC_PC14_Pos: u32 = 14;
pub const PWR_PDCRC_PC14_Msk: u32 = 0x1 << PWR_PDCRC_PC14_Pos;
pub const PWR_PDCRC_PC14: u32 = PWR_PDCRC_PC14_Msk;
pub const PWR_PDCRC_PC15_Pos: u32 = 15;
pub const PWR_PDCRC_PC15_Msk: u32 = 0x1 << PWR_PDCRC_PC15_Pos;
pub const PWR_PDCRC_PC15: u32 = PWR_PDCRC_PC15_Msk;
pub const PWR_PUCRH_PH3_Pos: u32 = 3;
pub const PWR_PUCRH_PH3_Msk: u32 = 0x1 << PWR_PUCRH_PH3_Pos;
pub const PWR_PUCRH_PH3: u32 = PWR_PUCRH_PH3_Msk;
pub const PWR_PDCRH_PH3_Pos: u32 = 3;
pub const PWR_PDCRH_PH3_Msk: u32 = 0x1 << PWR_PDCRH_PH3_Pos;
pub const PWR_PDCRH_PH3: u32 = PWR_PDCRH_PH3_Msk;
pub const PWR_EXTSCR_C1CSSF_Pos: u32 = 0;
pub const PWR_EXTSCR_C1CSSF_Msk: u32 = 0x1 << PWR_EXTSCR_C1CSSF_Pos;
pub const PWR_EXTSCR_C1CSSF: u32 = PWR_EXTSCR_C1CSSF_Msk;
pub const PWR_EXTSCR_C1SBF_Pos: u32 = 8;
pub const PWR_EXTSCR_C1SBF_Msk: u32 = 0x1 << PWR_EXTSCR_C1SBF_Pos;
pub const PWR_EXTSCR_C1SBF: u32 = PWR_EXTSCR_C1SBF_Msk;
pub const PWR_EXTSCR_C1STOP2F_Pos: u32 = 9;
pub const PWR_EXTSCR_C1STOP2F_Msk: u32 = 0x1 << PWR_EXTSCR_C1STOP2F_Pos;
pub const PWR_EXTSCR_C1STOP2F: u32 = PWR_EXTSCR_C1STOP2F_Msk;
pub const PWR_EXTSCR_C1STOPF_Pos: u32 = 10;
pub const PWR_EXTSCR_C1STOPF_Msk: u32 = 0x1 << PWR_EXTSCR_C1STOPF_Pos;
pub const PWR_EXTSCR_C1STOPF: u32 = PWR_EXTSCR_C1STOPF_Msk;
pub const PWR_EXTSCR_C1DS_Pos: u32 = 14;
pub const PWR_EXTSCR_C1DS_Msk: u32 = 0x1 << PWR_EXTSCR_C1DS_Pos;
pub const PWR_EXTSCR_C1DS: u32 = PWR_EXTSCR_C1DS_Msk;
pub const PWR_SUBGHZSPICR_NSS_Pos: u32 = 15;
pub const PWR_SUBGHZSPICR_NSS_Msk: u32 = 0x1 << PWR_SUBGHZSPICR_NSS_Pos;
pub const PWR_SUBGHZSPICR_NSS: u32 = PWR_SUBGHZSPICR_NSS_Msk;
pub const RCC_CR_MSION_Pos: u32 = 0;
pub const RCC_CR_MSION_Msk: u32 = 0x1 << RCC_CR_MSION_Pos;
pub const RCC_CR_MSION: u32 = RCC_CR_MSION_Msk;
pub const RCC_CR_MSIRDY_Pos: u32 = 1;
pub const RCC_CR_MSIRDY_Msk: u32 = 0x1 << RCC_CR_MSIRDY_Pos;
pub const RCC_CR_MSIRDY: u32 = RCC_CR_MSIRDY_Msk;
pub const RCC_CR_MSIPLLEN_Pos: u32 = 2;
pub const RCC_CR_MSIPLLEN_Msk: u32 = 0x1 << RCC_CR_MSIPLLEN_Pos;
pub const RCC_CR_MSIPLLEN: u32 = RCC_CR_MSIPLLEN_Msk;
pub const RCC_CR_MSIRGSEL_Pos: u32 = 3;
pub const RCC_CR_MSIRGSEL_Msk: u32 = 0x1 << RCC_CR_MSIRGSEL_Pos;
pub const RCC_CR_MSIRGSEL: u32 = RCC_CR_MSIRGSEL_Msk;
pub const RCC_CR_MSIRANGE_Pos: u32 = 4;
pub const RCC_CR_MSIRANGE_Msk: u32 = 0xF << RCC_CR_MSIRANGE_Pos;
pub const RCC_CR_MSIRANGE: u32 = RCC_CR_MSIRANGE_Msk;
pub const RCC_CR_MSIRANGE_0: u32 = 0x0 << RCC_CR_MSIRANGE_Pos;
pub const RCC_CR_MSIRANGE_1: u32 = 0x1 << RCC_CR_MSIRANGE_Pos;
pub const RCC_CR_MSIRANGE_2: u32 = 0x2 << RCC_CR_MSIRANGE_Pos;
pub const RCC_CR_MSIRANGE_3: u32 = 0x3 << RCC_CR_MSIRANGE_Pos;
pub const RCC_CR_MSIRANGE_4: u32 = 0x4 << RCC_CR_MSIRANGE_Pos;
pub const RCC_CR_MSIRANGE_5: u32 = 0x5 << RCC_CR_MSIRANGE_Pos;
pub const RCC_CR_MSIRANGE_6: u32 = 0x6 << RCC_CR_MSIRANGE_Pos;
pub const RCC_CR_MSIRANGE_7: u32 = 0x7 << RCC_CR_MSIRANGE_Pos;
pub const RCC_CR_MSIRANGE_8: u32 = 0x8 << RCC_CR_MSIRANGE_Pos;
pub const RCC_CR_MSIRANGE_9: u32 = 0x9 << RCC_CR_MSIRANGE_Pos;
pub const RCC_CR_MSIRANGE_10: u32 = 0xA << RCC_CR_MSIRANGE_Pos;
pub const RCC_CR_MSIRANGE_11: u32 = 0xB << RCC_CR_MSIRANGE_Pos;
pub const RCC_CR_HSION_Pos: u32 = 8;
pub const RCC_CR_HSION_Msk: u32 = 0x1 << RCC_CR_HSION_Pos;
pub const RCC_CR_HSION: u32 = RCC_CR_HSION_Msk;
pub const RCC_CR_HSIKERON_Pos: u32 = 9;
pub const RCC_CR_HSIKERON_Msk: u32 = 0x1 << RCC_CR_HSIKERON_Pos;
pub const RCC_CR_HSIKERON: u32 = RCC_CR_HSIKERON_Msk;
pub const RCC_CR_HSIRDY_Pos: u32 = 10;
pub const RCC_CR_HSIRDY_Msk: u32 = 0x1 << RCC_CR_HSIRDY_Pos;
pub const RCC_CR_HSIRDY: u32 = RCC_CR_HSIRDY_Msk;
pub const RCC_CR_HSIASFS_Pos: u32 = 11;
pub const RCC_CR_HSIASFS_Msk: u32 = 0x1 << RCC_CR_HSIASFS_Pos;
pub const RCC_CR_HSIASFS: u32 = RCC_CR_HSIASFS_Msk;
pub const RCC_CR_HSIKERDY_Pos: u32 = 12;
pub const RCC_CR_HSIKERDY_Msk: u32 = 0x1 << RCC_CR_HSIKERDY_Pos;
pub const RCC_CR_HSIKERDY: u32 = RCC_CR_HSIKERDY_Msk;
pub const RCC_CR_HSEON_Pos: u32 = 16;
pub const RCC_CR_HSEON_Msk: u32 = 0x1 << RCC_CR_HSEON_Pos;
pub const RCC_CR_HSEON: u32 = RCC_CR_HSEON_Msk;
pub const RCC_CR_HSERDY_Pos: u32 = 17;
pub const RCC_CR_HSERDY_Msk: u32 = 0x1 << RCC_CR_HSERDY_Pos;
pub const RCC_CR_HSERDY: u32 = RCC_CR_HSERDY_Msk;
pub const RCC_CR_CSSON_Pos: u32 = 19;
pub const RCC_CR_CSSON_Msk: u32 = 0x1 << RCC_CR_CSSON_Pos;
pub const RCC_CR_CSSON: u32 = RCC_CR_CSSON_Msk;
pub const RCC_CR_HSEPRE_Pos: u32 = 20;
pub const RCC_CR_HSEPRE_Msk: u32 = 0x1 << RCC_CR_HSEPRE_Pos;
pub const RCC_CR_HSEPRE: u32 = RCC_CR_HSEPRE_Msk;
pub const RCC_CR_HSEBYPPWR_Pos: u32 = 21;
pub const RCC_CR_HSEBYPPWR_Msk: u32 = 0x1 << RCC_CR_HSEBYPPWR_Pos;
pub const RCC_CR_HSEBYPPWR: u32 = RCC_CR_HSEBYPPWR_Msk;
pub const RCC_CR_PLLON_Pos: u32 = 24;
pub const RCC_CR_PLLON_Msk: u32 = 0x1 << RCC_CR_PLLON_Pos;
pub const RCC_CR_PLLON: u32 = RCC_CR_PLLON_Msk;
pub const RCC_CR_PLLRDY_Pos: u32 = 25;
pub const RCC_CR_PLLRDY_Msk: u32 = 0x1 << RCC_CR_PLLRDY_Pos;
pub const RCC_CR_PLLRDY: u32 = RCC_CR_PLLRDY_Msk;
pub const RCC_ICSCR_MSICAL_Pos: u32 = 0;
pub const RCC_ICSCR_MSICAL_Msk: u32 = 0xFF << RCC_ICSCR_MSICAL_Pos;
pub const RCC_ICSCR_MSICAL: u32 = RCC_ICSCR_MSICAL_Msk;
pub const RCC_ICSCR_MSITRIM_Pos: u32 = 8;
pub const RCC_ICSCR_MSITRIM_Msk: u32 = 0xFF << RCC_ICSCR_MSITRIM_Pos;
pub const RCC_ICSCR_MSITRIM: u32 = RCC_ICSCR_MSITRIM_Msk;
pub const RCC_ICSCR_HSICAL_Pos: u32 = 16;
pub const RCC_ICSCR_HSICAL_Msk: u32 = 0xFF << RCC_ICSCR_HSICAL_Pos;
pub const RCC_ICSCR_HSICAL: u32 = RCC_ICSCR_HSICAL_Msk;
pub const RCC_ICSCR_HSITRIM_Pos: u32 = 24;
pub const RCC_ICSCR_HSITRIM_Msk: u32 = 0x7F << RCC_ICSCR_HSITRIM_Pos;
pub const RCC_ICSCR_HSITRIM: u32 = RCC_ICSCR_HSITRIM_Msk;
pub const RCC_CFGR_SW_Pos: u32 = 0;
pub const RCC_CFGR_SW_Msk: u32 = 0x3 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SW: u32 = RCC_CFGR_SW_Msk;
pub const RCC_CFGR_SW_0: u32 = 0x1 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SW_1: u32 = 0x2 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SWS_Pos: u32 = 2;
pub const RCC_CFGR_SWS_Msk: u32 = 0x3 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_SWS: u32 = RCC_CFGR_SWS_Msk;
pub const RCC_CFGR_SWS_0: u32 = 0x1 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_SWS_1: u32 = 0x2 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_HPRE_Pos: u32 = 4;
pub const RCC_CFGR_HPRE_Msk: u32 = 0xF << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE: u32 = RCC_CFGR_HPRE_Msk;
pub const RCC_CFGR_HPRE_0: u32 = 0x1 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_1: u32 = 0x2 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_2: u32 = 0x4 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_3: u32 = 0x8 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_PPRE1_Pos: u32 = 8;
pub const RCC_CFGR_PPRE1_Msk: u32 = 0x7 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1: u32 = RCC_CFGR_PPRE1_Msk;
pub const RCC_CFGR_PPRE1_0: u32 = 0x1 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1_1: u32 = 0x2 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1_2: u32 = 0x4 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE2_Pos: u32 = 11;
pub const RCC_CFGR_PPRE2_Msk: u32 = 0x7 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2: u32 = RCC_CFGR_PPRE2_Msk;
pub const RCC_CFGR_PPRE2_0: u32 = 0x1 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2_1: u32 = 0x2 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2_2: u32 = 0x4 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_STOPWUCK_Pos: u32 = 15;
pub const RCC_CFGR_STOPWUCK_Msk: u32 = 0x1 << RCC_CFGR_STOPWUCK_Pos;
pub const RCC_CFGR_STOPWUCK: u32 = RCC_CFGR_STOPWUCK_Msk;
pub const RCC_CFGR_HPREF_Pos: u32 = 16;
pub const RCC_CFGR_HPREF_Msk: u32 = 0x1 << RCC_CFGR_HPREF_Pos;
pub const RCC_CFGR_HPREF: u32 = RCC_CFGR_HPREF_Msk;
pub const RCC_CFGR_PPRE1F_Pos: u32 = 17;
pub const RCC_CFGR_PPRE1F_Msk: u32 = 0x1 << RCC_CFGR_PPRE1F_Pos;
pub const RCC_CFGR_PPRE1F: u32 = RCC_CFGR_PPRE1F_Msk;
pub const RCC_CFGR_PPRE2F_Pos: u32 = 18;
pub const RCC_CFGR_PPRE2F_Msk: u32 = 0x1 << RCC_CFGR_PPRE2F_Pos;
pub const RCC_CFGR_PPRE2F: u32 = RCC_CFGR_PPRE2F_Msk;
pub const RCC_CFGR_MCOSEL_Pos: u32 = 24;
pub const RCC_CFGR_MCOSEL_Msk: u32 = 0xF << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOSEL: u32 = RCC_CFGR_MCOSEL_Msk;
pub const RCC_CFGR_MCOSEL_0: u32 = 0x1 << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOSEL_1: u32 = 0x2 << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOSEL_2: u32 = 0x4 << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOSEL_3: u32 = 0x8 << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOPRE_Pos: u32 = 28;
pub const RCC_CFGR_MCOPRE_Msk: u32 = 0x7 << RCC_CFGR_MCOPRE_Pos;
pub const RCC_CFGR_MCOPRE: u32 = RCC_CFGR_MCOPRE_Msk;
pub const RCC_CFGR_MCOPRE_0: u32 = 0x1 << RCC_CFGR_MCOPRE_Pos;
pub const RCC_CFGR_MCOPRE_1: u32 = 0x2 << RCC_CFGR_MCOPRE_Pos;
pub const RCC_CFGR_MCOPRE_2: u32 = 0x4 << RCC_CFGR_MCOPRE_Pos;
pub const RCC_PLLCFGR_PLLSRC_Pos: u32 = 0;
pub const RCC_PLLCFGR_PLLSRC_Msk: u32 = 0x3 << RCC_PLLCFGR_PLLSRC_Pos;
pub const RCC_PLLCFGR_PLLSRC: u32 = RCC_PLLCFGR_PLLSRC_Msk;
pub const RCC_PLLCFGR_PLLSRC_0: u32 = 0x1 << RCC_PLLCFGR_PLLSRC_Pos;
pub const RCC_PLLCFGR_PLLSRC_1: u32 = 0x2 << RCC_PLLCFGR_PLLSRC_Pos;
pub const RCC_PLLCFGR_PLLM_Pos: u32 = 4;
pub const RCC_PLLCFGR_PLLM_Msk: u32 = 0x7 << RCC_PLLCFGR_PLLM_Pos;
pub const RCC_PLLCFGR_PLLM: u32 = RCC_PLLCFGR_PLLM_Msk;
pub const RCC_PLLCFGR_PLLM_0: u32 = 0x1 << RCC_PLLCFGR_PLLM_Pos;
pub const RCC_PLLCFGR_PLLM_1: u32 = 0x2 << RCC_PLLCFGR_PLLM_Pos;
pub const RCC_PLLCFGR_PLLM_2: u32 = 0x4 << RCC_PLLCFGR_PLLM_Pos;
pub const RCC_PLLCFGR_PLLN_Pos: u32 = 8;
pub const RCC_PLLCFGR_PLLN_Msk: u32 = 0x7F << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN: u32 = RCC_PLLCFGR_PLLN_Msk;
pub const RCC_PLLCFGR_PLLN_0: u32 = 0x01 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_1: u32 = 0x02 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_2: u32 = 0x04 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_3: u32 = 0x08 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_4: u32 = 0x10 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_5: u32 = 0x20 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_6: u32 = 0x40 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLPEN_Pos: u32 = 16;
pub const RCC_PLLCFGR_PLLPEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLLPEN_Pos;
pub const RCC_PLLCFGR_PLLPEN: u32 = RCC_PLLCFGR_PLLPEN_Msk;
pub const RCC_PLLCFGR_PLLP_Pos: u32 = 17;
pub const RCC_PLLCFGR_PLLP_Msk: u32 = 0x1F << RCC_PLLCFGR_PLLP_Pos;
pub const RCC_PLLCFGR_PLLP: u32 = RCC_PLLCFGR_PLLP_Msk;
pub const RCC_PLLCFGR_PLLP_0: u32 = 0x01 << RCC_PLLCFGR_PLLP_Pos;
pub const RCC_PLLCFGR_PLLP_1: u32 = 0x02 << RCC_PLLCFGR_PLLP_Pos;
pub const RCC_PLLCFGR_PLLP_2: u32 = 0x04 << RCC_PLLCFGR_PLLP_Pos;
pub const RCC_PLLCFGR_PLLP_3: u32 = 0x08 << RCC_PLLCFGR_PLLP_Pos;
pub const RCC_PLLCFGR_PLLP_4: u32 = 0x10 << RCC_PLLCFGR_PLLP_Pos;
pub const RCC_PLLCFGR_PLLQEN_Pos: u32 = 24;
pub const RCC_PLLCFGR_PLLQEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLLQEN_Pos;
pub const RCC_PLLCFGR_PLLQEN: u32 = RCC_PLLCFGR_PLLQEN_Msk;
pub const RCC_PLLCFGR_PLLQ_Pos: u32 = 25;
pub const RCC_PLLCFGR_PLLQ_Msk: u32 = 0x7 << RCC_PLLCFGR_PLLQ_Pos;
pub const RCC_PLLCFGR_PLLQ: u32 = RCC_PLLCFGR_PLLQ_Msk;
pub const RCC_PLLCFGR_PLLQ_0: u32 = 0x1 << RCC_PLLCFGR_PLLQ_Pos;
pub const RCC_PLLCFGR_PLLQ_1: u32 = 0x2 << RCC_PLLCFGR_PLLQ_Pos;
pub const RCC_PLLCFGR_PLLQ_2: u32 = 0x4 << RCC_PLLCFGR_PLLQ_Pos;
pub const RCC_PLLCFGR_PLLREN_Pos: u32 = 28;
pub const RCC_PLLCFGR_PLLREN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLLREN_Pos;
pub const RCC_PLLCFGR_PLLREN: u32 = RCC_PLLCFGR_PLLREN_Msk;
pub const RCC_PLLCFGR_PLLR_Pos: u32 = 29;
pub const RCC_PLLCFGR_PLLR_Msk: u32 = 0x7 << RCC_PLLCFGR_PLLR_Pos;
pub const RCC_PLLCFGR_PLLR: u32 = RCC_PLLCFGR_PLLR_Msk;
pub const RCC_PLLCFGR_PLLR_0: u32 = 0x1 << RCC_PLLCFGR_PLLR_Pos;
pub const RCC_PLLCFGR_PLLR_1: u32 = 0x2 << RCC_PLLCFGR_PLLR_Pos;
pub const RCC_PLLCFGR_PLLR_2: u32 = 0x4 << RCC_PLLCFGR_PLLR_Pos;
pub const RCC_CIER_LSIRDYIE_Pos: u32 = 0;
pub const RCC_CIER_LSIRDYIE_Msk: u32 = 0x1 << RCC_CIER_LSIRDYIE_Pos;
pub const RCC_CIER_LSIRDYIE: u32 = RCC_CIER_LSIRDYIE_Msk;
pub const RCC_CIER_LSERDYIE_Pos: u32 = 1;
pub const RCC_CIER_LSERDYIE_Msk: u32 = 0x1 << RCC_CIER_LSERDYIE_Pos;
pub const RCC_CIER_LSERDYIE: u32 = RCC_CIER_LSERDYIE_Msk;
pub const RCC_CIER_MSIRDYIE_Pos: u32 = 2;
pub const RCC_CIER_MSIRDYIE_Msk: u32 = 0x1 << RCC_CIER_MSIRDYIE_Pos;
pub const RCC_CIER_MSIRDYIE: u32 = RCC_CIER_MSIRDYIE_Msk;
pub const RCC_CIER_HSIRDYIE_Pos: u32 = 3;
pub const RCC_CIER_HSIRDYIE_Msk: u32 = 0x1 << RCC_CIER_HSIRDYIE_Pos;
pub const RCC_CIER_HSIRDYIE: u32 = RCC_CIER_HSIRDYIE_Msk;
pub const RCC_CIER_HSERDYIE_Pos: u32 = 4;
pub const RCC_CIER_HSERDYIE_Msk: u32 = 0x1 << RCC_CIER_HSERDYIE_Pos;
pub const RCC_CIER_HSERDYIE: u32 = RCC_CIER_HSERDYIE_Msk;
pub const RCC_CIER_PLLRDYIE_Pos: u32 = 5;
pub const RCC_CIER_PLLRDYIE_Msk: u32 = 0x1 << RCC_CIER_PLLRDYIE_Pos;
pub const RCC_CIER_PLLRDYIE: u32 = RCC_CIER_PLLRDYIE_Msk;
pub const RCC_CIER_LSECSSIE_Pos: u32 = 9;
pub const RCC_CIER_LSECSSIE_Msk: u32 = 0x1 << RCC_CIER_LSECSSIE_Pos;
pub const RCC_CIER_LSECSSIE: u32 = RCC_CIER_LSECSSIE_Msk;
pub const RCC_CIFR_LSIRDYF_Pos: u32 = 0;
pub const RCC_CIFR_LSIRDYF_Msk: u32 = 0x1 << RCC_CIFR_LSIRDYF_Pos;
pub const RCC_CIFR_LSIRDYF: u32 = RCC_CIFR_LSIRDYF_Msk;
pub const RCC_CIFR_LSERDYF_Pos: u32 = 1;
pub const RCC_CIFR_LSERDYF_Msk: u32 = 0x1 << RCC_CIFR_LSERDYF_Pos;
pub const RCC_CIFR_LSERDYF: u32 = RCC_CIFR_LSERDYF_Msk;
pub const RCC_CIFR_MSIRDYF_Pos: u32 = 2;
pub const RCC_CIFR_MSIRDYF_Msk: u32 = 0x1 << RCC_CIFR_MSIRDYF_Pos;
pub const RCC_CIFR_MSIRDYF: u32 = RCC_CIFR_MSIRDYF_Msk;
pub const RCC_CIFR_HSIRDYF_Pos: u32 = 3;
pub const RCC_CIFR_HSIRDYF_Msk: u32 = 0x1 << RCC_CIFR_HSIRDYF_Pos;
pub const RCC_CIFR_HSIRDYF: u32 = RCC_CIFR_HSIRDYF_Msk;
pub const RCC_CIFR_HSERDYF_Pos: u32 = 4;
pub const RCC_CIFR_HSERDYF_Msk: u32 = 0x1 << RCC_CIFR_HSERDYF_Pos;
pub const RCC_CIFR_HSERDYF: u32 = RCC_CIFR_HSERDYF_Msk;
pub const RCC_CIFR_PLLRDYF_Pos: u32 = 5;
pub const RCC_CIFR_PLLRDYF_Msk: u32 = 0x1 << RCC_CIFR_PLLRDYF_Pos;
pub const RCC_CIFR_PLLRDYF: u32 = RCC_CIFR_PLLRDYF_Msk;
pub const RCC_CIFR_CSSF_Pos: u32 = 8;
pub const RCC_CIFR_CSSF_Msk: u32 = 0x1 << RCC_CIFR_CSSF_Pos;
pub const RCC_CIFR_CSSF: u32 = RCC_CIFR_CSSF_Msk;
pub const RCC_CIFR_LSECSSF_Pos: u32 = 9;
pub const RCC_CIFR_LSECSSF_Msk: u32 = 0x1 << RCC_CIFR_LSECSSF_Pos;
pub const RCC_CIFR_LSECSSF: u32 = RCC_CIFR_LSECSSF_Msk;
pub const RCC_CICR_LSIRDYC_Pos: u32 = 0;
pub const RCC_CICR_LSIRDYC_Msk: u32 = 0x1 << RCC_CICR_LSIRDYC_Pos;
pub const RCC_CICR_LSIRDYC: u32 = RCC_CICR_LSIRDYC_Msk;
pub const RCC_CICR_LSERDYC_Pos: u32 = 1;
pub const RCC_CICR_LSERDYC_Msk: u32 = 0x1 << RCC_CICR_LSERDYC_Pos;
pub const RCC_CICR_LSERDYC: u32 = RCC_CICR_LSERDYC_Msk;
pub const RCC_CICR_MSIRDYC_Pos: u32 = 2;
pub const RCC_CICR_MSIRDYC_Msk: u32 = 0x1 << RCC_CICR_MSIRDYC_Pos;
pub const RCC_CICR_MSIRDYC: u32 = RCC_CICR_MSIRDYC_Msk;
pub const RCC_CICR_HSIRDYC_Pos: u32 = 3;
pub const RCC_CICR_HSIRDYC_Msk: u32 = 0x1 << RCC_CICR_HSIRDYC_Pos;
pub const RCC_CICR_HSIRDYC: u32 = RCC_CICR_HSIRDYC_Msk;
pub const RCC_CICR_HSERDYC_Pos: u32 = 4;
pub const RCC_CICR_HSERDYC_Msk: u32 = 0x1 << RCC_CICR_HSERDYC_Pos;
pub const RCC_CICR_HSERDYC: u32 = RCC_CICR_HSERDYC_Msk;
pub const RCC_CICR_PLLRDYC_Pos: u32 = 5;
pub const RCC_CICR_PLLRDYC_Msk: u32 = 0x1 << RCC_CICR_PLLRDYC_Pos;
pub const RCC_CICR_PLLRDYC: u32 = RCC_CICR_PLLRDYC_Msk;
pub const RCC_CICR_CSSC_Pos: u32 = 8;
pub const RCC_CICR_CSSC_Msk: u32 = 0x1 << RCC_CICR_CSSC_Pos;
pub const RCC_CICR_CSSC: u32 = RCC_CICR_CSSC_Msk;
pub const RCC_CICR_LSECSSC_Pos: u32 = 9;
pub const RCC_CICR_LSECSSC_Msk: u32 = 0x1 << RCC_CICR_LSECSSC_Pos;
pub const RCC_CICR_LSECSSC: u32 = RCC_CICR_LSECSSC_Msk;
pub const RCC_AHB1RSTR_DMA1RST_Pos: u32 = 0;
pub const RCC_AHB1RSTR_DMA1RST_Msk: u32 = 0x1 << RCC_AHB1RSTR_DMA1RST_Pos;
pub const RCC_AHB1RSTR_DMA1RST: u32 = RCC_AHB1RSTR_DMA1RST_Msk;
pub const RCC_AHB1RSTR_DMA2RST_Pos: u32 = 1;
pub const RCC_AHB1RSTR_DMA2RST_Msk: u32 = 0x1 << RCC_AHB1RSTR_DMA2RST_Pos;
pub const RCC_AHB1RSTR_DMA2RST: u32 = RCC_AHB1RSTR_DMA2RST_Msk;
pub const RCC_AHB1RSTR_DMAMUX1RST_Pos: u32 = 2;
pub const RCC_AHB1RSTR_DMAMUX1RST_Msk: u32 = 0x1 << RCC_AHB1RSTR_DMAMUX1RST_Pos;
pub const RCC_AHB1RSTR_DMAMUX1RST: u32 = RCC_AHB1RSTR_DMAMUX1RST_Msk;
pub const RCC_AHB1RSTR_CRCRST_Pos: u32 = 12;
pub const RCC_AHB1RSTR_CRCRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_CRCRST_Pos;
pub const RCC_AHB1RSTR_CRCRST: u32 = RCC_AHB1RSTR_CRCRST_Msk;
pub const RCC_AHB2RSTR_GPIOARST_Pos: u32 = 0;
pub const RCC_AHB2RSTR_GPIOARST_Msk: u32 = 0x1 << RCC_AHB2RSTR_GPIOARST_Pos;
pub const RCC_AHB2RSTR_GPIOARST: u32 = RCC_AHB2RSTR_GPIOARST_Msk;
pub const RCC_AHB2RSTR_GPIOBRST_Pos: u32 = 1;
pub const RCC_AHB2RSTR_GPIOBRST_Msk: u32 = 0x1 << RCC_AHB2RSTR_GPIOBRST_Pos;
pub const RCC_AHB2RSTR_GPIOBRST: u32 = RCC_AHB2RSTR_GPIOBRST_Msk;
pub const RCC_AHB2RSTR_GPIOCRST_Pos: u32 = 2;
pub const RCC_AHB2RSTR_GPIOCRST_Msk: u32 = 0x1 << RCC_AHB2RSTR_GPIOCRST_Pos;
pub const RCC_AHB2RSTR_GPIOCRST: u32 = RCC_AHB2RSTR_GPIOCRST_Msk;
pub const RCC_AHB2RSTR_GPIOHRST_Pos: u32 = 7;
pub const RCC_AHB2RSTR_GPIOHRST_Msk: u32 = 0x1 << RCC_AHB2RSTR_GPIOHRST_Pos;
pub const RCC_AHB2RSTR_GPIOHRST: u32 = RCC_AHB2RSTR_GPIOHRST_Msk;
pub const RCC_AHB3RSTR_PKARST_Pos: u32 = 16;
pub const RCC_AHB3RSTR_PKARST_Msk: u32 = 0x1 << RCC_AHB3RSTR_PKARST_Pos;
pub const RCC_AHB3RSTR_PKARST: u32 = RCC_AHB3RSTR_PKARST_Msk;
pub const RCC_AHB3RSTR_AESRST_Pos: u32 = 17;
pub const RCC_AHB3RSTR_AESRST_Msk: u32 = 0x1 << RCC_AHB3RSTR_AESRST_Pos;
pub const RCC_AHB3RSTR_AESRST: u32 = RCC_AHB3RSTR_AESRST_Msk;
pub const RCC_AHB3RSTR_RNGRST_Pos: u32 = 18;
pub const RCC_AHB3RSTR_RNGRST_Msk: u32 = 0x1 << RCC_AHB3RSTR_RNGRST_Pos;
pub const RCC_AHB3RSTR_RNGRST: u32 = RCC_AHB3RSTR_RNGRST_Msk;
pub const RCC_AHB3RSTR_HSEMRST_Pos: u32 = 19;
pub const RCC_AHB3RSTR_HSEMRST_Msk: u32 = 0x1 << RCC_AHB3RSTR_HSEMRST_Pos;
pub const RCC_AHB3RSTR_HSEMRST: u32 = RCC_AHB3RSTR_HSEMRST_Msk;
pub const RCC_AHB3RSTR_FLASHRST_Pos: u32 = 25;
pub const RCC_AHB3RSTR_FLASHRST_Msk: u32 = 0x1 << RCC_AHB3RSTR_FLASHRST_Pos;
pub const RCC_AHB3RSTR_FLASHRST: u32 = RCC_AHB3RSTR_FLASHRST_Msk;
pub const RCC_APB1RSTR1_TIM2RST_Pos: u32 = 0;
pub const RCC_APB1RSTR1_TIM2RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_TIM2RST_Pos;
pub const RCC_APB1RSTR1_TIM2RST: u32 = RCC_APB1RSTR1_TIM2RST_Msk;
pub const RCC_APB1RSTR1_SPI2RST_Pos: u32 = 14;
pub const RCC_APB1RSTR1_SPI2RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_SPI2RST_Pos;
pub const RCC_APB1RSTR1_SPI2RST: u32 = RCC_APB1RSTR1_SPI2RST_Msk;
pub const RCC_APB1RSTR1_USART2RST_Pos: u32 = 17;
pub const RCC_APB1RSTR1_USART2RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_USART2RST_Pos;
pub const RCC_APB1RSTR1_USART2RST: u32 = RCC_APB1RSTR1_USART2RST_Msk;
pub const RCC_APB1RSTR1_I2C1RST_Pos: u32 = 21;
pub const RCC_APB1RSTR1_I2C1RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_I2C1RST_Pos;
pub const RCC_APB1RSTR1_I2C1RST: u32 = RCC_APB1RSTR1_I2C1RST_Msk;
pub const RCC_APB1RSTR1_I2C2RST_Pos: u32 = 22;
pub const RCC_APB1RSTR1_I2C2RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_I2C2RST_Pos;
pub const RCC_APB1RSTR1_I2C2RST: u32 = RCC_APB1RSTR1_I2C2RST_Msk;
pub const RCC_APB1RSTR1_I2C3RST_Pos: u32 = 23;
pub const RCC_APB1RSTR1_I2C3RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_I2C3RST_Pos;
pub const RCC_APB1RSTR1_I2C3RST: u32 = RCC_APB1RSTR1_I2C3RST_Msk;
pub const RCC_APB1RSTR1_DACRST_Pos: u32 = 29;
pub const RCC_APB1RSTR1_DACRST_Msk: u32 = 0x1 << RCC_APB1RSTR1_DACRST_Pos;
pub const RCC_APB1RSTR1_DACRST: u32 = RCC_APB1RSTR1_DACRST_Msk;
pub const RCC_APB1RSTR1_LPTIM1RST_Pos: u32 = 31;
pub const RCC_APB1RSTR1_LPTIM1RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_LPTIM1RST_Pos;
pub const RCC_APB1RSTR1_LPTIM1RST: u32 = RCC_APB1RSTR1_LPTIM1RST_Msk;
pub const RCC_APB1RSTR2_LPUART1RST_Pos: u32 = 0;
pub const RCC_APB1RSTR2_LPUART1RST_Msk: u32 = 0x1 << RCC_APB1RSTR2_LPUART1RST_Pos;
pub const RCC_APB1RSTR2_LPUART1RST: u32 = RCC_APB1RSTR2_LPUART1RST_Msk;
pub const RCC_APB1RSTR2_LPTIM2RST_Pos: u32 = 5;
pub const RCC_APB1RSTR2_LPTIM2RST_Msk: u32 = 0x1 << RCC_APB1RSTR2_LPTIM2RST_Pos;
pub const RCC_APB1RSTR2_LPTIM2RST: u32 = RCC_APB1RSTR2_LPTIM2RST_Msk;
pub const RCC_APB1RSTR2_LPTIM3RST_Pos: u32 = 6;
pub const RCC_APB1RSTR2_LPTIM3RST_Msk: u32 = 0x1 << RCC_APB1RSTR2_LPTIM3RST_Pos;
pub const RCC_APB1RSTR2_LPTIM3RST: u32 = RCC_APB1RSTR2_LPTIM3RST_Msk;
pub const RCC_APB2RSTR_ADCRST_Pos: u32 = 9;
pub const RCC_APB2RSTR_ADCRST_Msk: u32 = 0x1 << RCC_APB2RSTR_ADCRST_Pos;
pub const RCC_APB2RSTR_ADCRST: u32 = RCC_APB2RSTR_ADCRST_Msk;
pub const RCC_APB2RSTR_TIM1RST_Pos: u32 = 11;
pub const RCC_APB2RSTR_TIM1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM1RST_Pos;
pub const RCC_APB2RSTR_TIM1RST: u32 = RCC_APB2RSTR_TIM1RST_Msk;
pub const RCC_APB2RSTR_SPI1RST_Pos: u32 = 12;
pub const RCC_APB2RSTR_SPI1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_SPI1RST_Pos;
pub const RCC_APB2RSTR_SPI1RST: u32 = RCC_APB2RSTR_SPI1RST_Msk;
pub const RCC_APB2RSTR_USART1RST_Pos: u32 = 14;
pub const RCC_APB2RSTR_USART1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_USART1RST_Pos;
pub const RCC_APB2RSTR_USART1RST: u32 = RCC_APB2RSTR_USART1RST_Msk;
pub const RCC_APB2RSTR_TIM16RST_Pos: u32 = 17;
pub const RCC_APB2RSTR_TIM16RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM16RST_Pos;
pub const RCC_APB2RSTR_TIM16RST: u32 = RCC_APB2RSTR_TIM16RST_Msk;
pub const RCC_APB2RSTR_TIM17RST_Pos: u32 = 18;
pub const RCC_APB2RSTR_TIM17RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM17RST_Pos;
pub const RCC_APB2RSTR_TIM17RST: u32 = RCC_APB2RSTR_TIM17RST_Msk;
pub const RCC_APB3RSTR_SUBGHZSPIRST_Pos: u32 = 0;
pub const RCC_APB3RSTR_SUBGHZSPIRST_Msk: u32 = 0x1 << RCC_APB3RSTR_SUBGHZSPIRST_Pos;
pub const RCC_APB3RSTR_SUBGHZSPIRST: u32 = RCC_APB3RSTR_SUBGHZSPIRST_Msk;
pub const RCC_AHB1ENR_DMA1EN_Pos: u32 = 0;
pub const RCC_AHB1ENR_DMA1EN_Msk: u32 = 0x1 << RCC_AHB1ENR_DMA1EN_Pos;
pub const RCC_AHB1ENR_DMA1EN: u32 = RCC_AHB1ENR_DMA1EN_Msk;
pub const RCC_AHB1ENR_DMA2EN_Pos: u32 = 1;
pub const RCC_AHB1ENR_DMA2EN_Msk: u32 = 0x1 << RCC_AHB1ENR_DMA2EN_Pos;
pub const RCC_AHB1ENR_DMA2EN: u32 = RCC_AHB1ENR_DMA2EN_Msk;
pub const RCC_AHB1ENR_DMAMUX1EN_Pos: u32 = 2;
pub const RCC_AHB1ENR_DMAMUX1EN_Msk: u32 = 0x1 << RCC_AHB1ENR_DMAMUX1EN_Pos;
pub const RCC_AHB1ENR_DMAMUX1EN: u32 = RCC_AHB1ENR_DMAMUX1EN_Msk;
pub const RCC_AHB1ENR_CRCEN_Pos: u32 = 12;
pub const RCC_AHB1ENR_CRCEN_Msk: u32 = 0x1 << RCC_AHB1ENR_CRCEN_Pos;
pub const RCC_AHB1ENR_CRCEN: u32 = RCC_AHB1ENR_CRCEN_Msk;
pub const RCC_AHB2ENR_GPIOAEN_Pos: u32 = 0;
pub const RCC_AHB2ENR_GPIOAEN_Msk: u32 = 0x1 << RCC_AHB2ENR_GPIOAEN_Pos;
pub const RCC_AHB2ENR_GPIOAEN: u32 = RCC_AHB2ENR_GPIOAEN_Msk;
pub const RCC_AHB2ENR_GPIOBEN_Pos: u32 = 1;
pub const RCC_AHB2ENR_GPIOBEN_Msk: u32 = 0x1 << RCC_AHB2ENR_GPIOBEN_Pos;
pub const RCC_AHB2ENR_GPIOBEN: u32 = RCC_AHB2ENR_GPIOBEN_Msk;
pub const RCC_AHB2ENR_GPIOCEN_Pos: u32 = 2;
pub const RCC_AHB2ENR_GPIOCEN_Msk: u32 = 0x1 << RCC_AHB2ENR_GPIOCEN_Pos;
pub const RCC_AHB2ENR_GPIOCEN: u32 = RCC_AHB2ENR_GPIOCEN_Msk;
pub const RCC_AHB2ENR_GPIOHEN_Pos: u32 = 7;
pub const RCC_AHB2ENR_GPIOHEN_Msk: u32 = 0x1 << RCC_AHB2ENR_GPIOHEN_Pos;
pub const RCC_AHB2ENR_GPIOHEN: u32 = RCC_AHB2ENR_GPIOHEN_Msk;
pub const RCC_AHB3ENR_PKAEN_Pos: u32 = 16;
pub const RCC_AHB3ENR_PKAEN_Msk: u32 = 0x1 << RCC_AHB3ENR_PKAEN_Pos;
pub const RCC_AHB3ENR_PKAEN: u32 = RCC_AHB3ENR_PKAEN_Msk;
pub const RCC_AHB3ENR_AESEN_Pos: u32 = 17;
pub const RCC_AHB3ENR_AESEN_Msk: u32 = 0x1 << RCC_AHB3ENR_AESEN_Pos;
pub const RCC_AHB3ENR_AESEN: u32 = RCC_AHB3ENR_AESEN_Msk;
pub const RCC_AHB3ENR_RNGEN_Pos: u32 = 18;
pub const RCC_AHB3ENR_RNGEN_Msk: u32 = 0x1 << RCC_AHB3ENR_RNGEN_Pos;
pub const RCC_AHB3ENR_RNGEN: u32 = RCC_AHB3ENR_RNGEN_Msk;
pub const RCC_AHB3ENR_HSEMEN_Pos: u32 = 19;
pub const RCC_AHB3ENR_HSEMEN_Msk: u32 = 0x1 << RCC_AHB3ENR_HSEMEN_Pos;
pub const RCC_AHB3ENR_HSEMEN: u32 = RCC_AHB3ENR_HSEMEN_Msk;
pub const RCC_AHB3ENR_FLASHEN_Pos: u32 = 25;
pub const RCC_AHB3ENR_FLASHEN_Msk: u32 = 0x1 << RCC_AHB3ENR_FLASHEN_Pos;
pub const RCC_AHB3ENR_FLASHEN: u32 = RCC_AHB3ENR_FLASHEN_Msk;
pub const RCC_APB1ENR1_TIM2EN_Pos: u32 = 0;
pub const RCC_APB1ENR1_TIM2EN_Msk: u32 = 0x1 << RCC_APB1ENR1_TIM2EN_Pos;
pub const RCC_APB1ENR1_TIM2EN: u32 = RCC_APB1ENR1_TIM2EN_Msk;
pub const RCC_APB1ENR1_RTCAPBEN_Pos: u32 = 10;
pub const RCC_APB1ENR1_RTCAPBEN_Msk: u32 = 0x1 << RCC_APB1ENR1_RTCAPBEN_Pos;
pub const RCC_APB1ENR1_RTCAPBEN: u32 = RCC_APB1ENR1_RTCAPBEN_Msk;
pub const RCC_APB1ENR1_WWDGEN_Pos: u32 = 11;
pub const RCC_APB1ENR1_WWDGEN_Msk: u32 = 0x1 << RCC_APB1ENR1_WWDGEN_Pos;
pub const RCC_APB1ENR1_WWDGEN: u32 = RCC_APB1ENR1_WWDGEN_Msk;
pub const RCC_APB1ENR1_SPI2EN_Pos: u32 = 14;
pub const RCC_APB1ENR1_SPI2EN_Msk: u32 = 0x1 << RCC_APB1ENR1_SPI2EN_Pos;
pub const RCC_APB1ENR1_SPI2EN: u32 = RCC_APB1ENR1_SPI2EN_Msk;
pub const RCC_APB1ENR1_USART2EN_Pos: u32 = 17;
pub const RCC_APB1ENR1_USART2EN_Msk: u32 = 0x1 << RCC_APB1ENR1_USART2EN_Pos;
pub const RCC_APB1ENR1_USART2EN: u32 = RCC_APB1ENR1_USART2EN_Msk;
pub const RCC_APB1ENR1_I2C1EN_Pos: u32 = 21;
pub const RCC_APB1ENR1_I2C1EN_Msk: u32 = 0x1 << RCC_APB1ENR1_I2C1EN_Pos;
pub const RCC_APB1ENR1_I2C1EN: u32 = RCC_APB1ENR1_I2C1EN_Msk;
pub const RCC_APB1ENR1_I2C2EN_Pos: u32 = 22;
pub const RCC_APB1ENR1_I2C2EN_Msk: u32 = 0x1 << RCC_APB1ENR1_I2C2EN_Pos;
pub const RCC_APB1ENR1_I2C2EN: u32 = RCC_APB1ENR1_I2C2EN_Msk;
pub const RCC_APB1ENR1_I2C3EN_Pos: u32 = 23;
pub const RCC_APB1ENR1_I2C3EN_Msk: u32 = 0x1 << RCC_APB1ENR1_I2C3EN_Pos;
pub const RCC_APB1ENR1_I2C3EN: u32 = RCC_APB1ENR1_I2C3EN_Msk;
pub const RCC_APB1ENR1_DACEN_Pos: u32 = 29;
pub const RCC_APB1ENR1_DACEN_Msk: u32 = 0x1 << RCC_APB1ENR1_DACEN_Pos;
pub const RCC_APB1ENR1_DACEN: u32 = RCC_APB1ENR1_DACEN_Msk;
pub const RCC_APB1ENR1_LPTIM1EN_Pos: u32 = 31;
pub const RCC_APB1ENR1_LPTIM1EN_Msk: u32 = 0x1 << RCC_APB1ENR1_LPTIM1EN_Pos;
pub const RCC_APB1ENR1_LPTIM1EN: u32 = RCC_APB1ENR1_LPTIM1EN_Msk;
pub const RCC_APB1ENR2_LPUART1EN_Pos: u32 = 0;
pub const RCC_APB1ENR2_LPUART1EN_Msk: u32 = 0x1 << RCC_APB1ENR2_LPUART1EN_Pos;
pub const RCC_APB1ENR2_LPUART1EN: u32 = RCC_APB1ENR2_LPUART1EN_Msk;
pub const RCC_APB1ENR2_LPTIM2EN_Pos: u32 = 5;
pub const RCC_APB1ENR2_LPTIM2EN_Msk: u32 = 0x1 << RCC_APB1ENR2_LPTIM2EN_Pos;
pub const RCC_APB1ENR2_LPTIM2EN: u32 = RCC_APB1ENR2_LPTIM2EN_Msk;
pub const RCC_APB1ENR2_LPTIM3EN_Pos: u32 = 6;
pub const RCC_APB1ENR2_LPTIM3EN_Msk: u32 = 0x1 << RCC_APB1ENR2_LPTIM3EN_Pos;
pub const RCC_APB1ENR2_LPTIM3EN: u32 = RCC_APB1ENR2_LPTIM3EN_Msk;
pub const RCC_APB2ENR_ADCEN_Pos: u32 = 9;
pub const RCC_APB2ENR_ADCEN_Msk: u32 = 0x1 << RCC_APB2ENR_ADCEN_Pos;
pub const RCC_APB2ENR_ADCEN: u32 = RCC_APB2ENR_ADCEN_Msk;
pub const RCC_APB2ENR_TIM1EN_Pos: u32 = 11;
pub const RCC_APB2ENR_TIM1EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM1EN_Pos;
pub const RCC_APB2ENR_TIM1EN: u32 = RCC_APB2ENR_TIM1EN_Msk;
pub const RCC_APB2ENR_SPI1EN_Pos: u32 = 12;
pub const RCC_APB2ENR_SPI1EN_Msk: u32 = 0x1 << RCC_APB2ENR_SPI1EN_Pos;
pub const RCC_APB2ENR_SPI1EN: u32 = RCC_APB2ENR_SPI1EN_Msk;
pub const RCC_APB2ENR_USART1EN_Pos: u32 = 14;
pub const RCC_APB2ENR_USART1EN_Msk: u32 = 0x1 << RCC_APB2ENR_USART1EN_Pos;
pub const RCC_APB2ENR_USART1EN: u32 = RCC_APB2ENR_USART1EN_Msk;
pub const RCC_APB2ENR_TIM16EN_Pos: u32 = 17;
pub const RCC_APB2ENR_TIM16EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM16EN_Pos;
pub const RCC_APB2ENR_TIM16EN: u32 = RCC_APB2ENR_TIM16EN_Msk;
pub const RCC_APB2ENR_TIM17EN_Pos: u32 = 18;
pub const RCC_APB2ENR_TIM17EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM17EN_Pos;
pub const RCC_APB2ENR_TIM17EN: u32 = RCC_APB2ENR_TIM17EN_Msk;
pub const RCC_APB3ENR_SUBGHZSPIEN_Pos: u32 = 0;
pub const RCC_APB3ENR_SUBGHZSPIEN_Msk: u32 = 0x1 << RCC_APB3ENR_SUBGHZSPIEN_Pos;
pub const RCC_APB3ENR_SUBGHZSPIEN: u32 = RCC_APB3ENR_SUBGHZSPIEN_Msk;
pub const RCC_AHB1SMENR_DMA1SMEN_Pos: u32 = 0;
pub const RCC_AHB1SMENR_DMA1SMEN_Msk: u32 = 0x1 << RCC_AHB1SMENR_DMA1SMEN_Pos;
pub const RCC_AHB1SMENR_DMA1SMEN: u32 = RCC_AHB1SMENR_DMA1SMEN_Msk;
pub const RCC_AHB1SMENR_DMA2SMEN_Pos: u32 = 1;
pub const RCC_AHB1SMENR_DMA2SMEN_Msk: u32 = 0x1 << RCC_AHB1SMENR_DMA2SMEN_Pos;
pub const RCC_AHB1SMENR_DMA2SMEN: u32 = RCC_AHB1SMENR_DMA2SMEN_Msk;
pub const RCC_AHB1SMENR_DMAMUX1SMEN_Pos: u32 = 2;
pub const RCC_AHB1SMENR_DMAMUX1SMEN_Msk: u32 = 0x1 << RCC_AHB1SMENR_DMAMUX1SMEN_Pos;
pub const RCC_AHB1SMENR_DMAMUX1SMEN: u32 = RCC_AHB1SMENR_DMAMUX1SMEN_Msk;
pub const RCC_AHB1SMENR_CRCSMEN_Pos: u32 = 12;
pub const RCC_AHB1SMENR_CRCSMEN_Msk: u32 = 0x1 << RCC_AHB1SMENR_CRCSMEN_Pos;
pub const RCC_AHB1SMENR_CRCSMEN: u32 = RCC_AHB1SMENR_CRCSMEN_Msk;
pub const RCC_AHB2SMENR_GPIOASMEN_Pos: u32 = 0;
pub const RCC_AHB2SMENR_GPIOASMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_GPIOASMEN_Pos;
pub const RCC_AHB2SMENR_GPIOASMEN: u32 = RCC_AHB2SMENR_GPIOASMEN_Msk;
pub const RCC_AHB2SMENR_GPIOBSMEN_Pos: u32 = 1;
pub const RCC_AHB2SMENR_GPIOBSMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_GPIOBSMEN_Pos;
pub const RCC_AHB2SMENR_GPIOBSMEN: u32 = RCC_AHB2SMENR_GPIOBSMEN_Msk;
pub const RCC_AHB2SMENR_GPIOCSMEN_Pos: u32 = 2;
pub const RCC_AHB2SMENR_GPIOCSMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_GPIOCSMEN_Pos;
pub const RCC_AHB2SMENR_GPIOCSMEN: u32 = RCC_AHB2SMENR_GPIOCSMEN_Msk;
pub const RCC_AHB2SMENR_GPIOHSMEN_Pos: u32 = 7;
pub const RCC_AHB2SMENR_GPIOHSMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_GPIOHSMEN_Pos;
pub const RCC_AHB2SMENR_GPIOHSMEN: u32 = RCC_AHB2SMENR_GPIOHSMEN_Msk;
pub const RCC_AHB3SMENR_PKASMEN_Pos: u32 = 16;
pub const RCC_AHB3SMENR_PKASMEN_Msk: u32 = 0x1 << RCC_AHB3SMENR_PKASMEN_Pos;
pub const RCC_AHB3SMENR_PKASMEN: u32 = RCC_AHB3SMENR_PKASMEN_Msk;
pub const RCC_AHB3SMENR_AESSMEN_Pos: u32 = 17;
pub const RCC_AHB3SMENR_AESSMEN_Msk: u32 = 0x1 << RCC_AHB3SMENR_AESSMEN_Pos;
pub const RCC_AHB3SMENR_AESSMEN: u32 = RCC_AHB3SMENR_AESSMEN_Msk;
pub const RCC_AHB3SMENR_RNGSMEN_Pos: u32 = 18;
pub const RCC_AHB3SMENR_RNGSMEN_Msk: u32 = 0x1 << RCC_AHB3SMENR_RNGSMEN_Pos;
pub const RCC_AHB3SMENR_RNGSMEN: u32 = RCC_AHB3SMENR_RNGSMEN_Msk;
pub const RCC_AHB3SMENR_SRAM1SMEN_Pos: u32 = 23;
pub const RCC_AHB3SMENR_SRAM1SMEN_Msk: u32 = 0x1 << RCC_AHB3SMENR_SRAM1SMEN_Pos;
pub const RCC_AHB3SMENR_SRAM1SMEN: u32 = RCC_AHB3SMENR_SRAM1SMEN_Msk;
pub const RCC_AHB3SMENR_SRAM2SMEN_Pos: u32 = 24;
pub const RCC_AHB3SMENR_SRAM2SMEN_Msk: u32 = 0x1 << RCC_AHB3SMENR_SRAM2SMEN_Pos;
pub const RCC_AHB3SMENR_SRAM2SMEN: u32 = RCC_AHB3SMENR_SRAM2SMEN_Msk;
pub const RCC_AHB3SMENR_FLASHSMEN_Pos: u32 = 25;
pub const RCC_AHB3SMENR_FLASHSMEN_Msk: u32 = 0x1 << RCC_AHB3SMENR_FLASHSMEN_Pos;
pub const RCC_AHB3SMENR_FLASHSMEN: u32 = RCC_AHB3SMENR_FLASHSMEN_Msk;
pub const RCC_APB1SMENR1_TIM2SMEN_Pos: u32 = 0;
pub const RCC_APB1SMENR1_TIM2SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_TIM2SMEN_Pos;
pub const RCC_APB1SMENR1_TIM2SMEN: u32 = RCC_APB1SMENR1_TIM2SMEN_Msk;
pub const RCC_APB1SMENR1_RTCAPBSMEN_Pos: u32 = 10;
pub const RCC_APB1SMENR1_RTCAPBSMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_RTCAPBSMEN_Pos;
pub const RCC_APB1SMENR1_RTCAPBSMEN: u32 = RCC_APB1SMENR1_RTCAPBSMEN_Msk;
pub const RCC_APB1SMENR1_WWDGSMEN_Pos: u32 = 11;
pub const RCC_APB1SMENR1_WWDGSMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_WWDGSMEN_Pos;
pub const RCC_APB1SMENR1_WWDGSMEN: u32 = RCC_APB1SMENR1_WWDGSMEN_Msk;
pub const RCC_APB1SMENR1_SPI2SMEN_Pos: u32 = 14;
pub const RCC_APB1SMENR1_SPI2SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_SPI2SMEN_Pos;
pub const RCC_APB1SMENR1_SPI2SMEN: u32 = RCC_APB1SMENR1_SPI2SMEN_Msk;
pub const RCC_APB1SMENR1_USART2SMEN_Pos: u32 = 17;
pub const RCC_APB1SMENR1_USART2SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_USART2SMEN_Pos;
pub const RCC_APB1SMENR1_USART2SMEN: u32 = RCC_APB1SMENR1_USART2SMEN_Msk;
pub const RCC_APB1SMENR1_I2C1SMEN_Pos: u32 = 21;
pub const RCC_APB1SMENR1_I2C1SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_I2C1SMEN_Pos;
pub const RCC_APB1SMENR1_I2C1SMEN: u32 = RCC_APB1SMENR1_I2C1SMEN_Msk;
pub const RCC_APB1SMENR1_I2C2SMEN_Pos: u32 = 22;
pub const RCC_APB1SMENR1_I2C2SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_I2C2SMEN_Pos;
pub const RCC_APB1SMENR1_I2C2SMEN: u32 = RCC_APB1SMENR1_I2C2SMEN_Msk;
pub const RCC_APB1SMENR1_I2C3SMEN_Pos: u32 = 23;
pub const RCC_APB1SMENR1_I2C3SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_I2C3SMEN_Pos;
pub const RCC_APB1SMENR1_I2C3SMEN: u32 = RCC_APB1SMENR1_I2C3SMEN_Msk;
pub const RCC_APB1SMENR1_DACSMEN_Pos: u32 = 29;
pub const RCC_APB1SMENR1_DACSMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_DACSMEN_Pos;
pub const RCC_APB1SMENR1_DACSMEN: u32 = RCC_APB1SMENR1_DACSMEN_Msk;
pub const RCC_APB1SMENR1_LPTIM1SMEN_Pos: u32 = 31;
pub const RCC_APB1SMENR1_LPTIM1SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_LPTIM1SMEN_Pos;
pub const RCC_APB1SMENR1_LPTIM1SMEN: u32 = RCC_APB1SMENR1_LPTIM1SMEN_Msk;
pub const RCC_APB1SMENR2_LPUART1SMEN_Pos: u32 = 0;
pub const RCC_APB1SMENR2_LPUART1SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR2_LPUART1SMEN_Pos;
pub const RCC_APB1SMENR2_LPUART1SMEN: u32 = RCC_APB1SMENR2_LPUART1SMEN_Msk;
pub const RCC_APB1SMENR2_LPTIM2SMEN_Pos: u32 = 5;
pub const RCC_APB1SMENR2_LPTIM2SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR2_LPTIM2SMEN_Pos;
pub const RCC_APB1SMENR2_LPTIM2SMEN: u32 = RCC_APB1SMENR2_LPTIM2SMEN_Msk;
pub const RCC_APB1SMENR2_LPTIM3SMEN_Pos: u32 = 6;
pub const RCC_APB1SMENR2_LPTIM3SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR2_LPTIM3SMEN_Pos;
pub const RCC_APB1SMENR2_LPTIM3SMEN: u32 = RCC_APB1SMENR2_LPTIM3SMEN_Msk;
pub const RCC_APB2SMENR_ADCSMEN_Pos: u32 = 9;
pub const RCC_APB2SMENR_ADCSMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_ADCSMEN_Pos;
pub const RCC_APB2SMENR_ADCSMEN: u32 = RCC_APB2SMENR_ADCSMEN_Msk;
pub const RCC_APB2SMENR_TIM1SMEN_Pos: u32 = 11;
pub const RCC_APB2SMENR_TIM1SMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_TIM1SMEN_Pos;
pub const RCC_APB2SMENR_TIM1SMEN: u32 = RCC_APB2SMENR_TIM1SMEN_Msk;
pub const RCC_APB2SMENR_SPI1SMEN_Pos: u32 = 12;
pub const RCC_APB2SMENR_SPI1SMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_SPI1SMEN_Pos;
pub const RCC_APB2SMENR_SPI1SMEN: u32 = RCC_APB2SMENR_SPI1SMEN_Msk;
pub const RCC_APB2SMENR_USART1SMEN_Pos: u32 = 14;
pub const RCC_APB2SMENR_USART1SMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_USART1SMEN_Pos;
pub const RCC_APB2SMENR_USART1SMEN: u32 = RCC_APB2SMENR_USART1SMEN_Msk;
pub const RCC_APB2SMENR_TIM16SMEN_Pos: u32 = 17;
pub const RCC_APB2SMENR_TIM16SMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_TIM16SMEN_Pos;
pub const RCC_APB2SMENR_TIM16SMEN: u32 = RCC_APB2SMENR_TIM16SMEN_Msk;
pub const RCC_APB2SMENR_TIM17SMEN_Pos: u32 = 18;
pub const RCC_APB2SMENR_TIM17SMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_TIM17SMEN_Pos;
pub const RCC_APB2SMENR_TIM17SMEN: u32 = RCC_APB2SMENR_TIM17SMEN_Msk;
pub const RCC_APB3SMENR_SUBGHZSPISMEN_Pos: u32 = 0;
pub const RCC_APB3SMENR_SUBGHZSPISMEN_Msk: u32 = 0x1 << RCC_APB3SMENR_SUBGHZSPISMEN_Pos;
pub const RCC_APB3SMENR_SUBGHZSPISMEN: u32 = RCC_APB3SMENR_SUBGHZSPISMEN_Msk;
pub const RCC_CCIPR_USART1SEL_Pos: u32 = 0;
pub const RCC_CCIPR_USART1SEL_Msk: u32 = 0x3 << RCC_CCIPR_USART1SEL_Pos;
pub const RCC_CCIPR_USART1SEL: u32 = RCC_CCIPR_USART1SEL_Msk;
pub const RCC_CCIPR_USART1SEL_0: u32 = 0x1 << RCC_CCIPR_USART1SEL_Pos;
pub const RCC_CCIPR_USART1SEL_1: u32 = 0x2 << RCC_CCIPR_USART1SEL_Pos;
pub const RCC_CCIPR_USART2SEL_Pos: u32 = 2;
pub const RCC_CCIPR_USART2SEL_Msk: u32 = 0x3 << RCC_CCIPR_USART2SEL_Pos;
pub const RCC_CCIPR_USART2SEL: u32 = RCC_CCIPR_USART2SEL_Msk;
pub const RCC_CCIPR_USART2SEL_0: u32 = 0x1 << RCC_CCIPR_USART2SEL_Pos;
pub const RCC_CCIPR_USART2SEL_1: u32 = 0x2 << RCC_CCIPR_USART2SEL_Pos;
pub const RCC_CCIPR_I2S2SEL_Pos: u32 = 8;
pub const RCC_CCIPR_I2S2SEL_Msk: u32 = 0x3 << RCC_CCIPR_I2S2SEL_Pos;
pub const RCC_CCIPR_I2S2SEL: u32 = RCC_CCIPR_I2S2SEL_Msk;
pub const RCC_CCIPR_I2S2SEL_0: u32 = 0x1 << RCC_CCIPR_I2S2SEL_Pos;
pub const RCC_CCIPR_I2S2SEL_1: u32 = 0x2 << RCC_CCIPR_I2S2SEL_Pos;
pub const RCC_CCIPR_LPUART1SEL_Pos: u32 = 10;
pub const RCC_CCIPR_LPUART1SEL_Msk: u32 = 0x3 << RCC_CCIPR_LPUART1SEL_Pos;
pub const RCC_CCIPR_LPUART1SEL: u32 = RCC_CCIPR_LPUART1SEL_Msk;
pub const RCC_CCIPR_LPUART1SEL_0: u32 = 0x1 << RCC_CCIPR_LPUART1SEL_Pos;
pub const RCC_CCIPR_LPUART1SEL_1: u32 = 0x2 << RCC_CCIPR_LPUART1SEL_Pos;
pub const RCC_CCIPR_I2C1SEL_Pos: u32 = 12;
pub const RCC_CCIPR_I2C1SEL_Msk: u32 = 0x3 << RCC_CCIPR_I2C1SEL_Pos;
pub const RCC_CCIPR_I2C1SEL: u32 = RCC_CCIPR_I2C1SEL_Msk;
pub const RCC_CCIPR_I2C1SEL_0: u32 = 0x1 << RCC_CCIPR_I2C1SEL_Pos;
pub const RCC_CCIPR_I2C1SEL_1: u32 = 0x2 << RCC_CCIPR_I2C1SEL_Pos;
pub const RCC_CCIPR_I2C2SEL_Pos: u32 = 14;
pub const RCC_CCIPR_I2C2SEL_Msk: u32 = 0x3 << RCC_CCIPR_I2C2SEL_Pos;
pub const RCC_CCIPR_I2C2SEL: u32 = RCC_CCIPR_I2C2SEL_Msk;
pub const RCC_CCIPR_I2C2SEL_0: u32 = 0x1 << RCC_CCIPR_I2C2SEL_Pos;
pub const RCC_CCIPR_I2C2SEL_1: u32 = 0x2 << RCC_CCIPR_I2C2SEL_Pos;
pub const RCC_CCIPR_I2C3SEL_Pos: u32 = 16;
pub const RCC_CCIPR_I2C3SEL_Msk: u32 = 0x3 << RCC_CCIPR_I2C3SEL_Pos;
pub const RCC_CCIPR_I2C3SEL: u32 = RCC_CCIPR_I2C3SEL_Msk;
pub const RCC_CCIPR_I2C3SEL_0: u32 = 0x1 << RCC_CCIPR_I2C3SEL_Pos;
pub const RCC_CCIPR_I2C3SEL_1: u32 = 0x2 << RCC_CCIPR_I2C3SEL_Pos;
pub const RCC_CCIPR_LPTIM1SEL_Pos: u32 = 18;
pub const RCC_CCIPR_LPTIM1SEL_Msk: u32 = 0x3 << RCC_CCIPR_LPTIM1SEL_Pos;
pub const RCC_CCIPR_LPTIM1SEL: u32 = RCC_CCIPR_LPTIM1SEL_Msk;
pub const RCC_CCIPR_LPTIM1SEL_0: u32 = 0x1 << RCC_CCIPR_LPTIM1SEL_Pos;
pub const RCC_CCIPR_LPTIM1SEL_1: u32 = 0x2 << RCC_CCIPR_LPTIM1SEL_Pos;
pub const RCC_CCIPR_LPTIM2SEL_Pos: u32 = 20;
pub const RCC_CCIPR_LPTIM2SEL_Msk: u32 = 0x3 << RCC_CCIPR_LPTIM2SEL_Pos;
pub const RCC_CCIPR_LPTIM2SEL: u32 = RCC_CCIPR_LPTIM2SEL_Msk;
pub const RCC_CCIPR_LPTIM2SEL_0: u32 = 0x1 << RCC_CCIPR_LPTIM2SEL_Pos;
pub const RCC_CCIPR_LPTIM2SEL_1: u32 = 0x2 << RCC_CCIPR_LPTIM2SEL_Pos;
pub const RCC_CCIPR_LPTIM3SEL_Pos: u32 = 22;
pub const RCC_CCIPR_LPTIM3SEL_Msk: u32 = 0x3 << RCC_CCIPR_LPTIM3SEL_Pos;
pub const RCC_CCIPR_LPTIM3SEL: u32 = RCC_CCIPR_LPTIM3SEL_Msk;
pub const RCC_CCIPR_LPTIM3SEL_0: u32 = 0x1 << RCC_CCIPR_LPTIM3SEL_Pos;
pub const RCC_CCIPR_LPTIM3SEL_1: u32 = 0x2 << RCC_CCIPR_LPTIM3SEL_Pos;
pub const RCC_CCIPR_ADCSEL_Pos: u32 = 28;
pub const RCC_CCIPR_ADCSEL_Msk: u32 = 0x3 << RCC_CCIPR_ADCSEL_Pos;
pub const RCC_CCIPR_ADCSEL: u32 = RCC_CCIPR_ADCSEL_Msk;
pub const RCC_CCIPR_ADCSEL_0: u32 = 0x1 << RCC_CCIPR_ADCSEL_Pos;
pub const RCC_CCIPR_ADCSEL_1: u32 = 0x2 << RCC_CCIPR_ADCSEL_Pos;
pub const RCC_CCIPR_RNGSEL_Pos: u32 = 30;
pub const RCC_CCIPR_RNGSEL_Msk: u32 = 0x3 << RCC_CCIPR_RNGSEL_Pos;
pub const RCC_CCIPR_RNGSEL: u32 = RCC_CCIPR_RNGSEL_Msk;
pub const RCC_CCIPR_RNGSEL_0: u32 = 0x1 << RCC_CCIPR_RNGSEL_Pos;
pub const RCC_CCIPR_RNGSEL_1: u32 = 0x2 << RCC_CCIPR_RNGSEL_Pos;
pub const RCC_BDCR_LSEON_Pos: u32 = 0;
pub const RCC_BDCR_LSEON_Msk: u32 = 0x1 << RCC_BDCR_LSEON_Pos;
pub const RCC_BDCR_LSEON: u32 = RCC_BDCR_LSEON_Msk;
pub const RCC_BDCR_LSERDY_Pos: u32 = 1;
pub const RCC_BDCR_LSERDY_Msk: u32 = 0x1 << RCC_BDCR_LSERDY_Pos;
pub const RCC_BDCR_LSERDY: u32 = RCC_BDCR_LSERDY_Msk;
pub const RCC_BDCR_LSEBYP_Pos: u32 = 2;
pub const RCC_BDCR_LSEBYP_Msk: u32 = 0x1 << RCC_BDCR_LSEBYP_Pos;
pub const RCC_BDCR_LSEBYP: u32 = RCC_BDCR_LSEBYP_Msk;
pub const RCC_BDCR_LSEDRV_Pos: u32 = 3;
pub const RCC_BDCR_LSEDRV_Msk: u32 = 0x3 << RCC_BDCR_LSEDRV_Pos;
pub const RCC_BDCR_LSEDRV: u32 = RCC_BDCR_LSEDRV_Msk;
pub const RCC_BDCR_LSEDRV_0: u32 = 0x1 << RCC_BDCR_LSEDRV_Pos;
pub const RCC_BDCR_LSEDRV_1: u32 = 0x2 << RCC_BDCR_LSEDRV_Pos;
pub const RCC_BDCR_LSECSSON_Pos: u32 = 5;
pub const RCC_BDCR_LSECSSON_Msk: u32 = 0x1 << RCC_BDCR_LSECSSON_Pos;
pub const RCC_BDCR_LSECSSON: u32 = RCC_BDCR_LSECSSON_Msk;
pub const RCC_BDCR_LSECSSD_Pos: u32 = 6;
pub const RCC_BDCR_LSECSSD_Msk: u32 = 0x1 << RCC_BDCR_LSECSSD_Pos;
pub const RCC_BDCR_LSECSSD: u32 = RCC_BDCR_LSECSSD_Msk;
pub const RCC_BDCR_LSESYSEN_Pos: u32 = 7;
pub const RCC_BDCR_LSESYSEN_Msk: u32 = 0x1 << RCC_BDCR_LSESYSEN_Pos;
pub const RCC_BDCR_LSESYSEN: u32 = RCC_BDCR_LSESYSEN_Msk;
pub const RCC_BDCR_RTCSEL_Pos: u32 = 8;
pub const RCC_BDCR_RTCSEL_Msk: u32 = 0x3 << RCC_BDCR_RTCSEL_Pos;
pub const RCC_BDCR_RTCSEL: u32 = RCC_BDCR_RTCSEL_Msk;
pub const RCC_BDCR_RTCSEL_0: u32 = 0x1 << RCC_BDCR_RTCSEL_Pos;
pub const RCC_BDCR_RTCSEL_1: u32 = 0x2 << RCC_BDCR_RTCSEL_Pos;
pub const RCC_BDCR_LSESYSRDY_Pos: u32 = 11;
pub const RCC_BDCR_LSESYSRDY_Msk: u32 = 0x1 << RCC_BDCR_LSESYSRDY_Pos;
pub const RCC_BDCR_LSESYSRDY: u32 = RCC_BDCR_LSESYSRDY_Msk;
pub const RCC_BDCR_RTCEN_Pos: u32 = 15;
pub const RCC_BDCR_RTCEN_Msk: u32 = 0x1 << RCC_BDCR_RTCEN_Pos;
pub const RCC_BDCR_RTCEN: u32 = RCC_BDCR_RTCEN_Msk;
pub const RCC_BDCR_BDRST_Pos: u32 = 16;
pub const RCC_BDCR_BDRST_Msk: u32 = 0x1 << RCC_BDCR_BDRST_Pos;
pub const RCC_BDCR_BDRST: u32 = RCC_BDCR_BDRST_Msk;
pub const RCC_BDCR_LSCOEN_Pos: u32 = 24;
pub const RCC_BDCR_LSCOEN_Msk: u32 = 0x1 << RCC_BDCR_LSCOEN_Pos;
pub const RCC_BDCR_LSCOEN: u32 = RCC_BDCR_LSCOEN_Msk;
pub const RCC_BDCR_LSCOSEL_Pos: u32 = 25;
pub const RCC_BDCR_LSCOSEL_Msk: u32 = 0x1 << RCC_BDCR_LSCOSEL_Pos;
pub const RCC_BDCR_LSCOSEL: u32 = RCC_BDCR_LSCOSEL_Msk;
pub const RCC_CSR_LSION_Pos: u32 = 0;
pub const RCC_CSR_LSION_Msk: u32 = 0x1 << RCC_CSR_LSION_Pos;
pub const RCC_CSR_LSION: u32 = RCC_CSR_LSION_Msk;
pub const RCC_CSR_LSIRDY_Pos: u32 = 1;
pub const RCC_CSR_LSIRDY_Msk: u32 = 0x1 << RCC_CSR_LSIRDY_Pos;
pub const RCC_CSR_LSIRDY: u32 = RCC_CSR_LSIRDY_Msk;
pub const RCC_CSR_LSIPRE_Pos: u32 = 4;
pub const RCC_CSR_LSIPRE_Msk: u32 = 0x1 << RCC_CSR_LSIPRE_Pos;
pub const RCC_CSR_LSIPRE: u32 = RCC_CSR_LSIPRE_Msk;
pub const RCC_CSR_MSISRANGE_Pos: u32 = 8;
pub const RCC_CSR_MSISRANGE_Msk: u32 = 0xF << RCC_CSR_MSISRANGE_Pos;
pub const RCC_CSR_MSISRANGE: u32 = RCC_CSR_MSISRANGE_Msk;
pub const RCC_CSR_MSISRANGE_1: u32 = 0x4 << RCC_CSR_MSISRANGE_Pos;
pub const RCC_CSR_MSISRANGE_2: u32 = 0x5 << RCC_CSR_MSISRANGE_Pos;
pub const RCC_CSR_MSISRANGE_4: u32 = 0x6 << RCC_CSR_MSISRANGE_Pos;
pub const RCC_CSR_MSISRANGE_8: u32 = 0x7 << RCC_CSR_MSISRANGE_Pos;
pub const RCC_CSR_RFRSTF_Pos: u32 = 14;
pub const RCC_CSR_RFRSTF_Msk: u32 = 0x1 << RCC_CSR_RFRSTF_Pos;
pub const RCC_CSR_RFRSTF: u32 = RCC_CSR_RFRSTF_Msk;
pub const RCC_CSR_RFRST_Pos: u32 = 15;
pub const RCC_CSR_RFRST_Msk: u32 = 0x1 << RCC_CSR_RFRST_Pos;
pub const RCC_CSR_RFRST: u32 = RCC_CSR_RFRST_Msk;
pub const RCC_CSR_RMVF_Pos: u32 = 23;
pub const RCC_CSR_RMVF_Msk: u32 = 0x1 << RCC_CSR_RMVF_Pos;
pub const RCC_CSR_RMVF: u32 = RCC_CSR_RMVF_Msk;
pub const RCC_CSR_RFILARSTF_Pos: u32 = 24;
pub const RCC_CSR_RFILARSTF_Msk: u32 = 0x1 << RCC_CSR_RFILARSTF_Pos;
pub const RCC_CSR_RFILARSTF: u32 = RCC_CSR_RFILARSTF_Msk;
pub const RCC_CSR_OBLRSTF_Pos: u32 = 25;
pub const RCC_CSR_OBLRSTF_Msk: u32 = 0x1 << RCC_CSR_OBLRSTF_Pos;
pub const RCC_CSR_OBLRSTF: u32 = RCC_CSR_OBLRSTF_Msk;
pub const RCC_CSR_PINRSTF_Pos: u32 = 26;
pub const RCC_CSR_PINRSTF_Msk: u32 = 0x1 << RCC_CSR_PINRSTF_Pos;
pub const RCC_CSR_PINRSTF: u32 = RCC_CSR_PINRSTF_Msk;
pub const RCC_CSR_BORRSTF_Pos: u32 = 27;
pub const RCC_CSR_BORRSTF_Msk: u32 = 0x1 << RCC_CSR_BORRSTF_Pos;
pub const RCC_CSR_BORRSTF: u32 = RCC_CSR_BORRSTF_Msk;
pub const RCC_CSR_SFTRSTF_Pos: u32 = 28;
pub const RCC_CSR_SFTRSTF_Msk: u32 = 0x1 << RCC_CSR_SFTRSTF_Pos;
pub const RCC_CSR_SFTRSTF: u32 = RCC_CSR_SFTRSTF_Msk;
pub const RCC_CSR_IWDGRSTF_Pos: u32 = 29;
pub const RCC_CSR_IWDGRSTF_Msk: u32 = 0x1 << RCC_CSR_IWDGRSTF_Pos;
pub const RCC_CSR_IWDGRSTF: u32 = RCC_CSR_IWDGRSTF_Msk;
pub const RCC_CSR_WWDGRSTF_Pos: u32 = 30;
pub const RCC_CSR_WWDGRSTF_Msk: u32 = 0x1 << RCC_CSR_WWDGRSTF_Pos;
pub const RCC_CSR_WWDGRSTF: u32 = RCC_CSR_WWDGRSTF_Msk;
pub const RCC_CSR_LPWRRSTF_Pos: u32 = 31;
pub const RCC_CSR_LPWRRSTF_Msk: u32 = 0x1 << RCC_CSR_LPWRRSTF_Pos;
pub const RCC_CSR_LPWRRSTF: u32 = RCC_CSR_LPWRRSTF_Msk;
pub const RCC_EXTCFGR_SHDHPRE_Pos: u32 = 0;
pub const RCC_EXTCFGR_SHDHPRE_Msk: u32 = 0xF << RCC_EXTCFGR_SHDHPRE_Pos;
pub const RCC_EXTCFGR_SHDHPRE: u32 = RCC_EXTCFGR_SHDHPRE_Msk;
pub const RCC_EXTCFGR_SHDHPRE_0: u32 = 0x1 << RCC_EXTCFGR_SHDHPRE_Pos;
pub const RCC_EXTCFGR_SHDHPRE_1: u32 = 0x2 << RCC_EXTCFGR_SHDHPRE_Pos;
pub const RCC_EXTCFGR_SHDHPRE_2: u32 = 0x4 << RCC_EXTCFGR_SHDHPRE_Pos;
pub const RCC_EXTCFGR_SHDHPRE_3: u32 = 0x8 << RCC_EXTCFGR_SHDHPRE_Pos;
pub const RCC_EXTCFGR_SHDHPREF_Pos: u32 = 16;
pub const RCC_EXTCFGR_SHDHPREF_Msk: u32 = 0x1 << RCC_EXTCFGR_SHDHPREF_Pos;
pub const RCC_EXTCFGR_SHDHPREF: u32 = RCC_EXTCFGR_SHDHPREF_Msk;
pub const RNG_CR_RNGEN_Pos: u32 = 2;
pub const RNG_CR_RNGEN_Msk: u32 = 0x1 << RNG_CR_RNGEN_Pos;
pub const RNG_CR_RNGEN: u32 = RNG_CR_RNGEN_Msk;
pub const RNG_CR_IE_Pos: u32 = 3;
pub const RNG_CR_IE_Msk: u32 = 0x1 << RNG_CR_IE_Pos;
pub const RNG_CR_IE: u32 = RNG_CR_IE_Msk;
pub const RNG_CR_CED_Pos: u32 = 5;
pub const RNG_CR_CED_Msk: u32 = 0x1 << RNG_CR_CED_Pos;
pub const RNG_CR_CED: u32 = RNG_CR_CED_Msk;
pub const RNG_CR_RNG_CONFIG3_Pos: u32 = 8;
pub const RNG_CR_RNG_CONFIG3_Msk: u32 = 0xF << RNG_CR_RNG_CONFIG3_Pos;
pub const RNG_CR_RNG_CONFIG3: u32 = RNG_CR_RNG_CONFIG3_Msk;
pub const RNG_CR_NISTC_Pos: u32 = 12;
pub const RNG_CR_NISTC_Msk: u32 = 0x1 << RNG_CR_NISTC_Pos;
pub const RNG_CR_NISTC: u32 = RNG_CR_NISTC_Msk;
pub const RNG_CR_RNG_CONFIG2_Pos: u32 = 13;
pub const RNG_CR_RNG_CONFIG2_Msk: u32 = 0x7 << RNG_CR_RNG_CONFIG2_Pos;
pub const RNG_CR_RNG_CONFIG2: u32 = RNG_CR_RNG_CONFIG2_Msk;
pub const RNG_CR_CLKDIV_Pos: u32 = 16;
pub const RNG_CR_CLKDIV_Msk: u32 = 0xF << RNG_CR_CLKDIV_Pos;
pub const RNG_CR_CLKDIV: u32 = RNG_CR_CLKDIV_Msk;
pub const RNG_CR_CLKDIV_0: u32 = 0x1 << RNG_CR_CLKDIV_Pos;
pub const RNG_CR_CLKDIV_1: u32 = 0x2 << RNG_CR_CLKDIV_Pos;
pub const RNG_CR_CLKDIV_2: u32 = 0x4 << RNG_CR_CLKDIV_Pos;
pub const RNG_CR_CLKDIV_3: u32 = 0x8 << RNG_CR_CLKDIV_Pos;
pub const RNG_CR_RNG_CONFIG1_Pos: u32 = 20;
pub const RNG_CR_RNG_CONFIG1_Msk: u32 = 0x3F << RNG_CR_RNG_CONFIG1_Pos;
pub const RNG_CR_RNG_CONFIG1: u32 = RNG_CR_RNG_CONFIG1_Msk;
pub const RNG_CR_CONDRST_Pos: u32 = 30;
pub const RNG_CR_CONDRST_Msk: u32 = 0x1 << RNG_CR_CONDRST_Pos;
pub const RNG_CR_CONDRST: u32 = RNG_CR_CONDRST_Msk;
pub const RNG_CR_CONFIGLOCK_Pos: u32 = 31;
pub const RNG_CR_CONFIGLOCK_Msk: u32 = 0x1 << RNG_CR_CONFIGLOCK_Pos;
pub const RNG_CR_CONFIGLOCK: u32 = RNG_CR_CONFIGLOCK_Msk;
pub const RNG_SR_DRDY_Pos: u32 = 0;
pub const RNG_SR_DRDY_Msk: u32 = 0x1 << RNG_SR_DRDY_Pos;
pub const RNG_SR_DRDY: u32 = RNG_SR_DRDY_Msk;
pub const RNG_SR_CECS_Pos: u32 = 1;
pub const RNG_SR_CECS_Msk: u32 = 0x1 << RNG_SR_CECS_Pos;
pub const RNG_SR_CECS: u32 = RNG_SR_CECS_Msk;
pub const RNG_SR_SECS_Pos: u32 = 2;
pub const RNG_SR_SECS_Msk: u32 = 0x1 << RNG_SR_SECS_Pos;
pub const RNG_SR_SECS: u32 = RNG_SR_SECS_Msk;
pub const RNG_SR_CEIS_Pos: u32 = 5;
pub const RNG_SR_CEIS_Msk: u32 = 0x1 << RNG_SR_CEIS_Pos;
pub const RNG_SR_CEIS: u32 = RNG_SR_CEIS_Msk;
pub const RNG_SR_SEIS_Pos: u32 = 6;
pub const RNG_SR_SEIS_Msk: u32 = 0x1 << RNG_SR_SEIS_Pos;
pub const RNG_SR_SEIS: u32 = RNG_SR_SEIS_Msk;
pub const RNG_DR_RNDATA_Pos: u32 = 0;
pub const RNG_DR_RNDATA_Msk: u32 = 0xFFFFFFFF << RNG_DR_RNDATA_Pos;
pub const RNG_DR_RNDATA: u32 = RNG_DR_RNDATA_Msk;
pub const RNG_HTCR_HTCFG_Pos: u32 = 0;
pub const RNG_HTCR_HTCFG_Msk: u32 = 0xFFFFFFFF << RNG_HTCR_HTCFG_Pos;
pub const RNG_HTCR_HTCFG: u32 = RNG_HTCR_HTCFG_Msk;
pub const RTC_TR_PM_Pos: u32 = 22;
pub const RTC_TR_PM_Msk: u32 = 0x1 << RTC_TR_PM_Pos;
pub const RTC_TR_PM: u32 = RTC_TR_PM_Msk;
pub const RTC_TR_HT_Pos: u32 = 20;
pub const RTC_TR_HT_Msk: u32 = 0x3 << RTC_TR_HT_Pos;
pub const RTC_TR_HT: u32 = RTC_TR_HT_Msk;
pub const RTC_TR_HT_0: u32 = 0x1 << RTC_TR_HT_Pos;
pub const RTC_TR_HT_1: u32 = 0x2 << RTC_TR_HT_Pos;
pub const RTC_TR_HU_Pos: u32 = 16;
pub const RTC_TR_HU_Msk: u32 = 0xF << RTC_TR_HU_Pos;
pub const RTC_TR_HU: u32 = RTC_TR_HU_Msk;
pub const RTC_TR_HU_0: u32 = 0x1 << RTC_TR_HU_Pos;
pub const RTC_TR_HU_1: u32 = 0x2 << RTC_TR_HU_Pos;
pub const RTC_TR_HU_2: u32 = 0x4 << RTC_TR_HU_Pos;
pub const RTC_TR_HU_3: u32 = 0x8 << RTC_TR_HU_Pos;
pub const RTC_TR_MNT_Pos: u32 = 12;
pub const RTC_TR_MNT_Msk: u32 = 0x7 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNT: u32 = RTC_TR_MNT_Msk;
pub const RTC_TR_MNT_0: u32 = 0x1 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNT_1: u32 = 0x2 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNT_2: u32 = 0x4 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNU_Pos: u32 = 8;
pub const RTC_TR_MNU_Msk: u32 = 0xF << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU: u32 = RTC_TR_MNU_Msk;
pub const RTC_TR_MNU_0: u32 = 0x1 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU_1: u32 = 0x2 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU_2: u32 = 0x4 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU_3: u32 = 0x8 << RTC_TR_MNU_Pos;
pub const RTC_TR_ST_Pos: u32 = 4;
pub const RTC_TR_ST_Msk: u32 = 0x7 << RTC_TR_ST_Pos;
pub const RTC_TR_ST: u32 = RTC_TR_ST_Msk;
pub const RTC_TR_ST_0: u32 = 0x1 << RTC_TR_ST_Pos;
pub const RTC_TR_ST_1: u32 = 0x2 << RTC_TR_ST_Pos;
pub const RTC_TR_ST_2: u32 = 0x4 << RTC_TR_ST_Pos;
pub const RTC_TR_SU_Pos: u32 = 0;
pub const RTC_TR_SU_Msk: u32 = 0xF << RTC_TR_SU_Pos;
pub const RTC_TR_SU: u32 = RTC_TR_SU_Msk;
pub const RTC_TR_SU_0: u32 = 0x1 << RTC_TR_SU_Pos;
pub const RTC_TR_SU_1: u32 = 0x2 << RTC_TR_SU_Pos;
pub const RTC_TR_SU_2: u32 = 0x4 << RTC_TR_SU_Pos;
pub const RTC_TR_SU_3: u32 = 0x8 << RTC_TR_SU_Pos;
pub const RTC_DR_YT_Pos: u32 = 20;
pub const RTC_DR_YT_Msk: u32 = 0xF << RTC_DR_YT_Pos;
pub const RTC_DR_YT: u32 = RTC_DR_YT_Msk;
pub const RTC_DR_YT_0: u32 = 0x1 << RTC_DR_YT_Pos;
pub const RTC_DR_YT_1: u32 = 0x2 << RTC_DR_YT_Pos;
pub const RTC_DR_YT_2: u32 = 0x4 << RTC_DR_YT_Pos;
pub const RTC_DR_YT_3: u32 = 0x8 << RTC_DR_YT_Pos;
pub const RTC_DR_YU_Pos: u32 = 16;
pub const RTC_DR_YU_Msk: u32 = 0xF << RTC_DR_YU_Pos;
pub const RTC_DR_YU: u32 = RTC_DR_YU_Msk;
pub const RTC_DR_YU_0: u32 = 0x1 << RTC_DR_YU_Pos;
pub const RTC_DR_YU_1: u32 = 0x2 << RTC_DR_YU_Pos;
pub const RTC_DR_YU_2: u32 = 0x4 << RTC_DR_YU_Pos;
pub const RTC_DR_YU_3: u32 = 0x8 << RTC_DR_YU_Pos;
pub const RTC_DR_WDU_Pos: u32 = 13;
pub const RTC_DR_WDU_Msk: u32 = 0x7 << RTC_DR_WDU_Pos;
pub const RTC_DR_WDU: u32 = RTC_DR_WDU_Msk;
pub const RTC_DR_WDU_0: u32 = 0x1 << RTC_DR_WDU_Pos;
pub const RTC_DR_WDU_1: u32 = 0x2 << RTC_DR_WDU_Pos;
pub const RTC_DR_WDU_2: u32 = 0x4 << RTC_DR_WDU_Pos;
pub const RTC_DR_MT_Pos: u32 = 12;
pub const RTC_DR_MT_Msk: u32 = 0x1 << RTC_DR_MT_Pos;
pub const RTC_DR_MT: u32 = RTC_DR_MT_Msk;
pub const RTC_DR_MU_Pos: u32 = 8;
pub const RTC_DR_MU_Msk: u32 = 0xF << RTC_DR_MU_Pos;
pub const RTC_DR_MU: u32 = RTC_DR_MU_Msk;
pub const RTC_DR_MU_0: u32 = 0x1 << RTC_DR_MU_Pos;
pub const RTC_DR_MU_1: u32 = 0x2 << RTC_DR_MU_Pos;
pub const RTC_DR_MU_2: u32 = 0x4 << RTC_DR_MU_Pos;
pub const RTC_DR_MU_3: u32 = 0x8 << RTC_DR_MU_Pos;
pub const RTC_DR_DT_Pos: u32 = 4;
pub const RTC_DR_DT_Msk: u32 = 0x3 << RTC_DR_DT_Pos;
pub const RTC_DR_DT: u32 = RTC_DR_DT_Msk;
pub const RTC_DR_DT_0: u32 = 0x1 << RTC_DR_DT_Pos;
pub const RTC_DR_DT_1: u32 = 0x2 << RTC_DR_DT_Pos;
pub const RTC_DR_DU_Pos: u32 = 0;
pub const RTC_DR_DU_Msk: u32 = 0xF << RTC_DR_DU_Pos;
pub const RTC_DR_DU: u32 = RTC_DR_DU_Msk;
pub const RTC_DR_DU_0: u32 = 0x1 << RTC_DR_DU_Pos;
pub const RTC_DR_DU_1: u32 = 0x2 << RTC_DR_DU_Pos;
pub const RTC_DR_DU_2: u32 = 0x4 << RTC_DR_DU_Pos;
pub const RTC_DR_DU_3: u32 = 0x8 << RTC_DR_DU_Pos;
pub const RTC_SSR_SS_Pos: u32 = 0;
pub const RTC_SSR_SS_Msk: u32 = 0xFFFFFFFF << RTC_SSR_SS_Pos;
pub const RTC_SSR_SS: u32 = RTC_SSR_SS_Msk;
pub const RTC_ICSR_RECALPF_Pos: u32 = 16;
pub const RTC_ICSR_RECALPF_Msk: u32 = 0x1 << RTC_ICSR_RECALPF_Pos;
pub const RTC_ICSR_RECALPF: u32 = RTC_ICSR_RECALPF_Msk;
pub const RTC_ICSR_BCDU_Pos: u32 = 10;
pub const RTC_ICSR_BCDU_Msk: u32 = 0x7 << RTC_ICSR_BCDU_Pos;
pub const RTC_ICSR_BCDU: u32 = RTC_ICSR_BCDU_Msk;
pub const RTC_ICSR_BCDU_0: u32 = 0x1 << RTC_ICSR_BCDU_Pos;
pub const RTC_ICSR_BCDU_1: u32 = 0x2 << RTC_ICSR_BCDU_Pos;
pub const RTC_ICSR_BCDU_2: u32 = 0x4 << RTC_ICSR_BCDU_Pos;
pub const RTC_ICSR_BIN_Pos: u32 = 8;
pub const RTC_ICSR_BIN_Msk: u32 = 0x3 << RTC_ICSR_BIN_Pos;
pub const RTC_ICSR_BIN: u32 = RTC_ICSR_BIN_Msk;
pub const RTC_ICSR_BIN_0: u32 = 0x1 << RTC_ICSR_BIN_Pos;
pub const RTC_ICSR_BIN_1: u32 = 0x2 << RTC_ICSR_BIN_Pos;
pub const RTC_ICSR_INIT_Pos: u32 = 7;
pub const RTC_ICSR_INIT_Msk: u32 = 0x1 << RTC_ICSR_INIT_Pos;
pub const RTC_ICSR_INIT: u32 = RTC_ICSR_INIT_Msk;
pub const RTC_ICSR_INITF_Pos: u32 = 6;
pub const RTC_ICSR_INITF_Msk: u32 = 0x1 << RTC_ICSR_INITF_Pos;
pub const RTC_ICSR_INITF: u32 = RTC_ICSR_INITF_Msk;
pub const RTC_ICSR_RSF_Pos: u32 = 5;
pub const RTC_ICSR_RSF_Msk: u32 = 0x1 << RTC_ICSR_RSF_Pos;
pub const RTC_ICSR_RSF: u32 = RTC_ICSR_RSF_Msk;
pub const RTC_ICSR_INITS_Pos: u32 = 4;
pub const RTC_ICSR_INITS_Msk: u32 = 0x1 << RTC_ICSR_INITS_Pos;
pub const RTC_ICSR_INITS: u32 = RTC_ICSR_INITS_Msk;
pub const RTC_ICSR_SHPF_Pos: u32 = 3;
pub const RTC_ICSR_SHPF_Msk: u32 = 0x1 << RTC_ICSR_SHPF_Pos;
pub const RTC_ICSR_SHPF: u32 = RTC_ICSR_SHPF_Msk;
pub const RTC_ICSR_WUTWF_Pos: u32 = 2;
pub const RTC_ICSR_WUTWF_Msk: u32 = 0x1 << RTC_ICSR_WUTWF_Pos;
pub const RTC_ICSR_WUTWF: u32 = RTC_ICSR_WUTWF_Msk;
pub const RTC_PRER_PREDIV_A_Pos: u32 = 16;
pub const RTC_PRER_PREDIV_A_Msk: u32 = 0x7F << RTC_PRER_PREDIV_A_Pos;
pub const RTC_PRER_PREDIV_A: u32 = RTC_PRER_PREDIV_A_Msk;
pub const RTC_PRER_PREDIV_S_Pos: u32 = 0;
pub const RTC_PRER_PREDIV_S_Msk: u32 = 0x7FFF << RTC_PRER_PREDIV_S_Pos;
pub const RTC_PRER_PREDIV_S: u32 = RTC_PRER_PREDIV_S_Msk;
pub const RTC_WUTR_WUTOCLR_Pos: u32 = 16;
pub const RTC_WUTR_WUTOCLR_Msk: u32 = 0xFFFF << RTC_WUTR_WUTOCLR_Pos;
pub const RTC_WUTR_WUTOCLR: u32 = RTC_WUTR_WUTOCLR_Msk;
pub const RTC_WUTR_WUT_Pos: u32 = 0;
pub const RTC_WUTR_WUT_Msk: u32 = 0xFFFF << RTC_WUTR_WUT_Pos;
pub const RTC_WUTR_WUT: u32 = RTC_WUTR_WUT_Msk;
pub const RTC_CR_OUT2EN_Pos: u32 = 31;
pub const RTC_CR_OUT2EN_Msk: u32 = 0x1 << RTC_CR_OUT2EN_Pos;
pub const RTC_CR_OUT2EN: u32 = RTC_CR_OUT2EN_Msk;
pub const RTC_CR_TAMPALRM_TYPE_Pos: u32 = 30;
pub const RTC_CR_TAMPALRM_TYPE_Msk: u32 = 0x1 << RTC_CR_TAMPALRM_TYPE_Pos;
pub const RTC_CR_TAMPALRM_TYPE: u32 = RTC_CR_TAMPALRM_TYPE_Msk;
pub const RTC_CR_TAMPALRM_PU_Pos: u32 = 29;
pub const RTC_CR_TAMPALRM_PU_Msk: u32 = 0x1 << RTC_CR_TAMPALRM_PU_Pos;
pub const RTC_CR_TAMPALRM_PU: u32 = RTC_CR_TAMPALRM_PU_Msk;
pub const RTC_CR_TAMPOE_Pos: u32 = 26;
pub const RTC_CR_TAMPOE_Msk: u32 = 0x1 << RTC_CR_TAMPOE_Pos;
pub const RTC_CR_TAMPOE: u32 = RTC_CR_TAMPOE_Msk;
pub const RTC_CR_TAMPTS_Pos: u32 = 25;
pub const RTC_CR_TAMPTS_Msk: u32 = 0x1 << RTC_CR_TAMPTS_Pos;
pub const RTC_CR_TAMPTS: u32 = RTC_CR_TAMPTS_Msk;
pub const RTC_CR_ITSE_Pos: u32 = 24;
pub const RTC_CR_ITSE_Msk: u32 = 0x1 << RTC_CR_ITSE_Pos;
pub const RTC_CR_ITSE: u32 = RTC_CR_ITSE_Msk;
pub const RTC_CR_COE_Pos: u32 = 23;
pub const RTC_CR_COE_Msk: u32 = 0x1 << RTC_CR_COE_Pos;
pub const RTC_CR_COE: u32 = RTC_CR_COE_Msk;
pub const RTC_CR_OSEL_Pos: u32 = 21;
pub const RTC_CR_OSEL_Msk: u32 = 0x3 << RTC_CR_OSEL_Pos;
pub const RTC_CR_OSEL: u32 = RTC_CR_OSEL_Msk;
pub const RTC_CR_OSEL_0: u32 = 0x1 << RTC_CR_OSEL_Pos;
pub const RTC_CR_OSEL_1: u32 = 0x2 << RTC_CR_OSEL_Pos;
pub const RTC_CR_POL_Pos: u32 = 20;
pub const RTC_CR_POL_Msk: u32 = 0x1 << RTC_CR_POL_Pos;
pub const RTC_CR_POL: u32 = RTC_CR_POL_Msk;
pub const RTC_CR_COSEL_Pos: u32 = 19;
pub const RTC_CR_COSEL_Msk: u32 = 0x1 << RTC_CR_COSEL_Pos;
pub const RTC_CR_COSEL: u32 = RTC_CR_COSEL_Msk;
pub const RTC_CR_BKP_Pos: u32 = 18;
pub const RTC_CR_BKP_Msk: u32 = 0x1 << RTC_CR_BKP_Pos;
pub const RTC_CR_BKP: u32 = RTC_CR_BKP_Msk;
pub const RTC_CR_SUB1H_Pos: u32 = 17;
pub const RTC_CR_SUB1H_Msk: u32 = 0x1 << RTC_CR_SUB1H_Pos;
pub const RTC_CR_SUB1H: u32 = RTC_CR_SUB1H_Msk;
pub const RTC_CR_ADD1H_Pos: u32 = 16;
pub const RTC_CR_ADD1H_Msk: u32 = 0x1 << RTC_CR_ADD1H_Pos;
pub const RTC_CR_ADD1H: u32 = RTC_CR_ADD1H_Msk;
pub const RTC_CR_TSIE_Pos: u32 = 15;
pub const RTC_CR_TSIE_Msk: u32 = 0x1 << RTC_CR_TSIE_Pos;
pub const RTC_CR_TSIE: u32 = RTC_CR_TSIE_Msk;
pub const RTC_CR_WUTIE_Pos: u32 = 14;
pub const RTC_CR_WUTIE_Msk: u32 = 0x1 << RTC_CR_WUTIE_Pos;
pub const RTC_CR_WUTIE: u32 = RTC_CR_WUTIE_Msk;
pub const RTC_CR_ALRBIE_Pos: u32 = 13;
pub const RTC_CR_ALRBIE_Msk: u32 = 0x1 << RTC_CR_ALRBIE_Pos;
pub const RTC_CR_ALRBIE: u32 = RTC_CR_ALRBIE_Msk;
pub const RTC_CR_ALRAIE_Pos: u32 = 12;
pub const RTC_CR_ALRAIE_Msk: u32 = 0x1 << RTC_CR_ALRAIE_Pos;
pub const RTC_CR_ALRAIE: u32 = RTC_CR_ALRAIE_Msk;
pub const RTC_CR_TSE_Pos: u32 = 11;
pub const RTC_CR_TSE_Msk: u32 = 0x1 << RTC_CR_TSE_Pos;
pub const RTC_CR_TSE: u32 = RTC_CR_TSE_Msk;
pub const RTC_CR_WUTE_Pos: u32 = 10;
pub const RTC_CR_WUTE_Msk: u32 = 0x1 << RTC_CR_WUTE_Pos;
pub const RTC_CR_WUTE: u32 = RTC_CR_WUTE_Msk;
pub const RTC_CR_ALRBE_Pos: u32 = 9;
pub const RTC_CR_ALRBE_Msk: u32 = 0x1 << RTC_CR_ALRBE_Pos;
pub const RTC_CR_ALRBE: u32 = RTC_CR_ALRBE_Msk;
pub const RTC_CR_ALRAE_Pos: u32 = 8;
pub const RTC_CR_ALRAE_Msk: u32 = 0x1 << RTC_CR_ALRAE_Pos;
pub const RTC_CR_ALRAE: u32 = RTC_CR_ALRAE_Msk;
pub const RTC_CR_SSRUIE_Pos: u32 = 7;
pub const RTC_CR_SSRUIE_Msk: u32 = 0x1 << RTC_CR_SSRUIE_Pos;
pub const RTC_CR_SSRUIE: u32 = RTC_CR_SSRUIE_Msk;
pub const RTC_CR_FMT_Pos: u32 = 6;
pub const RTC_CR_FMT_Msk: u32 = 0x1 << RTC_CR_FMT_Pos;
pub const RTC_CR_FMT: u32 = RTC_CR_FMT_Msk;
pub const RTC_CR_BYPSHAD_Pos: u32 = 5;
pub const RTC_CR_BYPSHAD_Msk: u32 = 0x1 << RTC_CR_BYPSHAD_Pos;
pub const RTC_CR_BYPSHAD: u32 = RTC_CR_BYPSHAD_Msk;
pub const RTC_CR_REFCKON_Pos: u32 = 4;
pub const RTC_CR_REFCKON_Msk: u32 = 0x1 << RTC_CR_REFCKON_Pos;
pub const RTC_CR_REFCKON: u32 = RTC_CR_REFCKON_Msk;
pub const RTC_CR_TSEDGE_Pos: u32 = 3;
pub const RTC_CR_TSEDGE_Msk: u32 = 0x1 << RTC_CR_TSEDGE_Pos;
pub const RTC_CR_TSEDGE: u32 = RTC_CR_TSEDGE_Msk;
pub const RTC_CR_WUCKSEL_Pos: u32 = 0;
pub const RTC_CR_WUCKSEL_Msk: u32 = 0x7 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_WUCKSEL: u32 = RTC_CR_WUCKSEL_Msk;
pub const RTC_CR_WUCKSEL_0: u32 = 0x1 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_WUCKSEL_1: u32 = 0x2 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_WUCKSEL_2: u32 = 0x4 << RTC_CR_WUCKSEL_Pos;
pub const RTC_WPR_KEY_Pos: u32 = 0;
pub const RTC_WPR_KEY_Msk: u32 = 0xFF << RTC_WPR_KEY_Pos;
pub const RTC_WPR_KEY: u32 = RTC_WPR_KEY_Msk;
pub const RTC_CALR_CALP_Pos: u32 = 15;
pub const RTC_CALR_CALP_Msk: u32 = 0x1 << RTC_CALR_CALP_Pos;
pub const RTC_CALR_CALP: u32 = RTC_CALR_CALP_Msk;
pub const RTC_CALR_CALW8_Pos: u32 = 14;
pub const RTC_CALR_CALW8_Msk: u32 = 0x1 << RTC_CALR_CALW8_Pos;
pub const RTC_CALR_CALW8: u32 = RTC_CALR_CALW8_Msk;
pub const RTC_CALR_CALW16_Pos: u32 = 13;
pub const RTC_CALR_CALW16_Msk: u32 = 0x1 << RTC_CALR_CALW16_Pos;
pub const RTC_CALR_LPCAL: u32 = RTC_CALR_LPCAL_Msk;
pub const RTC_CALR_LPCAL_Pos: u32 = 12;
pub const RTC_CALR_LPCAL_Msk: u32 = 0x1 << RTC_CALR_LPCAL_Pos;
pub const RTC_CALR_CALW16: u32 = RTC_CALR_CALW16_Msk;
pub const RTC_CALR_CALM_Pos: u32 = 0;
pub const RTC_CALR_CALM_Msk: u32 = 0x1FF << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM: u32 = RTC_CALR_CALM_Msk;
pub const RTC_CALR_CALM_0: u32 = 0x001 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_1: u32 = 0x002 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_2: u32 = 0x004 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_3: u32 = 0x008 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_4: u32 = 0x010 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_5: u32 = 0x020 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_6: u32 = 0x040 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_7: u32 = 0x080 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_8: u32 = 0x100 << RTC_CALR_CALM_Pos;
pub const RTC_SHIFTR_ADD1S_Pos: u32 = 31;
pub const RTC_SHIFTR_ADD1S_Msk: u32 = 0x1 << RTC_SHIFTR_ADD1S_Pos;
pub const RTC_SHIFTR_ADD1S: u32 = RTC_SHIFTR_ADD1S_Msk;
pub const RTC_SHIFTR_SUBFS_Pos: u32 = 0;
pub const RTC_SHIFTR_SUBFS_Msk: u32 = 0x7FFF << RTC_SHIFTR_SUBFS_Pos;
pub const RTC_SHIFTR_SUBFS: u32 = RTC_SHIFTR_SUBFS_Msk;
pub const RTC_TSTR_PM_Pos: u32 = 22;
pub const RTC_TSTR_PM_Msk: u32 = 0x1 << RTC_TSTR_PM_Pos;
pub const RTC_TSTR_PM: u32 = RTC_TSTR_PM_Msk;
pub const RTC_TSTR_HT_Pos: u32 = 20;
pub const RTC_TSTR_HT_Msk: u32 = 0x3 << RTC_TSTR_HT_Pos;
pub const RTC_TSTR_HT: u32 = RTC_TSTR_HT_Msk;
pub const RTC_TSTR_HT_0: u32 = 0x1 << RTC_TSTR_HT_Pos;
pub const RTC_TSTR_HT_1: u32 = 0x2 << RTC_TSTR_HT_Pos;
pub const RTC_TSTR_HU_Pos: u32 = 16;
pub const RTC_TSTR_HU_Msk: u32 = 0xF << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU: u32 = RTC_TSTR_HU_Msk;
pub const RTC_TSTR_HU_0: u32 = 0x1 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU_1: u32 = 0x2 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU_2: u32 = 0x4 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU_3: u32 = 0x8 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_MNT_Pos: u32 = 12;
pub const RTC_TSTR_MNT_Msk: u32 = 0x7 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNT: u32 = RTC_TSTR_MNT_Msk;
pub const RTC_TSTR_MNT_0: u32 = 0x1 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNT_1: u32 = 0x2 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNT_2: u32 = 0x4 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNU_Pos: u32 = 8;
pub const RTC_TSTR_MNU_Msk: u32 = 0xF << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU: u32 = RTC_TSTR_MNU_Msk;
pub const RTC_TSTR_MNU_0: u32 = 0x1 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU_1: u32 = 0x2 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU_2: u32 = 0x4 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU_3: u32 = 0x8 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_ST_Pos: u32 = 4;
pub const RTC_TSTR_ST_Msk: u32 = 0x7 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_ST: u32 = RTC_TSTR_ST_Msk;
pub const RTC_TSTR_ST_0: u32 = 0x1 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_ST_1: u32 = 0x2 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_ST_2: u32 = 0x4 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_SU_Pos: u32 = 0;
pub const RTC_TSTR_SU_Msk: u32 = 0xF << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU: u32 = RTC_TSTR_SU_Msk;
pub const RTC_TSTR_SU_0: u32 = 0x1 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU_1: u32 = 0x2 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU_2: u32 = 0x4 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU_3: u32 = 0x8 << RTC_TSTR_SU_Pos;
pub const RTC_TSDR_WDU_Pos: u32 = 13;
pub const RTC_TSDR_WDU_Msk: u32 = 0x7 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_WDU: u32 = RTC_TSDR_WDU_Msk;
pub const RTC_TSDR_WDU_0: u32 = 0x1 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_WDU_1: u32 = 0x2 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_WDU_2: u32 = 0x4 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_MT_Pos: u32 = 12;
pub const RTC_TSDR_MT_Msk: u32 = 0x1 << RTC_TSDR_MT_Pos;
pub const RTC_TSDR_MT: u32 = RTC_TSDR_MT_Msk;
pub const RTC_TSDR_MU_Pos: u32 = 8;
pub const RTC_TSDR_MU_Msk: u32 = 0xF << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU: u32 = RTC_TSDR_MU_Msk;
pub const RTC_TSDR_MU_0: u32 = 0x1 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU_1: u32 = 0x2 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU_2: u32 = 0x4 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU_3: u32 = 0x8 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_DT_Pos: u32 = 4;
pub const RTC_TSDR_DT_Msk: u32 = 0x3 << RTC_TSDR_DT_Pos;
pub const RTC_TSDR_DT: u32 = RTC_TSDR_DT_Msk;
pub const RTC_TSDR_DT_0: u32 = 0x1 << RTC_TSDR_DT_Pos;
pub const RTC_TSDR_DT_1: u32 = 0x2 << RTC_TSDR_DT_Pos;
pub const RTC_TSDR_DU_Pos: u32 = 0;
pub const RTC_TSDR_DU_Msk: u32 = 0xF << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU: u32 = RTC_TSDR_DU_Msk;
pub const RTC_TSDR_DU_0: u32 = 0x1 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU_1: u32 = 0x2 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU_2: u32 = 0x4 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU_3: u32 = 0x8 << RTC_TSDR_DU_Pos;
pub const RTC_TSSSR_SS_Pos: u32 = 0;
pub const RTC_TSSSR_SS_Msk: u32 = 0xFFFFFFFF << RTC_TSSSR_SS_Pos;
pub const RTC_TSSSR_SS: u32 = RTC_TSSSR_SS_Msk;
pub const RTC_ALRMAR_MSK4_Pos: u32 = 31;
pub const RTC_ALRMAR_MSK4_Msk: u32 = 0x1 << RTC_ALRMAR_MSK4_Pos;
pub const RTC_ALRMAR_MSK4: u32 = RTC_ALRMAR_MSK4_Msk;
pub const RTC_ALRMAR_WDSEL_Pos: u32 = 30;
pub const RTC_ALRMAR_WDSEL_Msk: u32 = 0x1 << RTC_ALRMAR_WDSEL_Pos;
pub const RTC_ALRMAR_WDSEL: u32 = RTC_ALRMAR_WDSEL_Msk;
pub const RTC_ALRMAR_DT_Pos: u32 = 28;
pub const RTC_ALRMAR_DT_Msk: u32 = 0x3 << RTC_ALRMAR_DT_Pos;
pub const RTC_ALRMAR_DT: u32 = RTC_ALRMAR_DT_Msk;
pub const RTC_ALRMAR_DT_0: u32 = 0x1 << RTC_ALRMAR_DT_Pos;
pub const RTC_ALRMAR_DT_1: u32 = 0x2 << RTC_ALRMAR_DT_Pos;
pub const RTC_ALRMAR_DU_Pos: u32 = 24;
pub const RTC_ALRMAR_DU_Msk: u32 = 0xF << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU: u32 = RTC_ALRMAR_DU_Msk;
pub const RTC_ALRMAR_DU_0: u32 = 0x1 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU_1: u32 = 0x2 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU_2: u32 = 0x4 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU_3: u32 = 0x8 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_MSK3_Pos: u32 = 23;
pub const RTC_ALRMAR_MSK3_Msk: u32 = 0x1 << RTC_ALRMAR_MSK3_Pos;
pub const RTC_ALRMAR_MSK3: u32 = RTC_ALRMAR_MSK3_Msk;
pub const RTC_ALRMAR_PM_Pos: u32 = 22;
pub const RTC_ALRMAR_PM_Msk: u32 = 0x1 << RTC_ALRMAR_PM_Pos;
pub const RTC_ALRMAR_PM: u32 = RTC_ALRMAR_PM_Msk;
pub const RTC_ALRMAR_HT_Pos: u32 = 20;
pub const RTC_ALRMAR_HT_Msk: u32 = 0x3 << RTC_ALRMAR_HT_Pos;
pub const RTC_ALRMAR_HT: u32 = RTC_ALRMAR_HT_Msk;
pub const RTC_ALRMAR_HT_0: u32 = 0x1 << RTC_ALRMAR_HT_Pos;
pub const RTC_ALRMAR_HT_1: u32 = 0x2 << RTC_ALRMAR_HT_Pos;
pub const RTC_ALRMAR_HU_Pos: u32 = 16;
pub const RTC_ALRMAR_HU_Msk: u32 = 0xF << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU: u32 = RTC_ALRMAR_HU_Msk;
pub const RTC_ALRMAR_HU_0: u32 = 0x1 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU_1: u32 = 0x2 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU_2: u32 = 0x4 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU_3: u32 = 0x8 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_MSK2_Pos: u32 = 15;
pub const RTC_ALRMAR_MSK2_Msk: u32 = 0x1 << RTC_ALRMAR_MSK2_Pos;
pub const RTC_ALRMAR_MSK2: u32 = RTC_ALRMAR_MSK2_Msk;
pub const RTC_ALRMAR_MNT_Pos: u32 = 12;
pub const RTC_ALRMAR_MNT_Msk: u32 = 0x7 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNT: u32 = RTC_ALRMAR_MNT_Msk;
pub const RTC_ALRMAR_MNT_0: u32 = 0x1 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNT_1: u32 = 0x2 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNT_2: u32 = 0x4 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNU_Pos: u32 = 8;
pub const RTC_ALRMAR_MNU_Msk: u32 = 0xF << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU: u32 = RTC_ALRMAR_MNU_Msk;
pub const RTC_ALRMAR_MNU_0: u32 = 0x1 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU_1: u32 = 0x2 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU_2: u32 = 0x4 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU_3: u32 = 0x8 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MSK1_Pos: u32 = 7;
pub const RTC_ALRMAR_MSK1_Msk: u32 = 0x1 << RTC_ALRMAR_MSK1_Pos;
pub const RTC_ALRMAR_MSK1: u32 = RTC_ALRMAR_MSK1_Msk;
pub const RTC_ALRMAR_ST_Pos: u32 = 4;
pub const RTC_ALRMAR_ST_Msk: u32 = 0x7 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_ST: u32 = RTC_ALRMAR_ST_Msk;
pub const RTC_ALRMAR_ST_0: u32 = 0x1 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_ST_1: u32 = 0x2 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_ST_2: u32 = 0x4 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_SU_Pos: u32 = 0;
pub const RTC_ALRMAR_SU_Msk: u32 = 0xF << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU: u32 = RTC_ALRMAR_SU_Msk;
pub const RTC_ALRMAR_SU_0: u32 = 0x1 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU_1: u32 = 0x2 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU_2: u32 = 0x4 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU_3: u32 = 0x8 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMASSR_SSCLR_Pos: u32 = 31;
pub const RTC_ALRMASSR_SSCLR_Msk: u32 = 0x1 << RTC_ALRMASSR_SSCLR_Pos;
pub const RTC_ALRMASSR_SSCLR: u32 = RTC_ALRMASSR_SSCLR_Msk;
pub const RTC_ALRMASSR_MASKSS_Pos: u32 = 24;
pub const RTC_ALRMASSR_MASKSS_Msk: u32 = 0x3F << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS: u32 = RTC_ALRMASSR_MASKSS_Msk;
pub const RTC_ALRMASSR_MASKSS_0: u32 = 0x1 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_1: u32 = 0x2 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_2: u32 = 0x4 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_3: u32 = 0x8 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_4: u32 = 0x10 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_5: u32 = 0x20 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_SS_Pos: u32 = 0;
pub const RTC_ALRMASSR_SS_Msk: u32 = 0x7FFF << RTC_ALRMASSR_SS_Pos;
pub const RTC_ALRMASSR_SS: u32 = RTC_ALRMASSR_SS_Msk;
pub const RTC_ALRMBR_MSK4_Pos: u32 = 31;
pub const RTC_ALRMBR_MSK4_Msk: u32 = 0x1 << RTC_ALRMBR_MSK4_Pos;
pub const RTC_ALRMBR_MSK4: u32 = RTC_ALRMBR_MSK4_Msk;
pub const RTC_ALRMBR_WDSEL_Pos: u32 = 30;
pub const RTC_ALRMBR_WDSEL_Msk: u32 = 0x1 << RTC_ALRMBR_WDSEL_Pos;
pub const RTC_ALRMBR_WDSEL: u32 = RTC_ALRMBR_WDSEL_Msk;
pub const RTC_ALRMBR_DT_Pos: u32 = 28;
pub const RTC_ALRMBR_DT_Msk: u32 = 0x3 << RTC_ALRMBR_DT_Pos;
pub const RTC_ALRMBR_DT: u32 = RTC_ALRMBR_DT_Msk;
pub const RTC_ALRMBR_DT_0: u32 = 0x1 << RTC_ALRMBR_DT_Pos;
pub const RTC_ALRMBR_DT_1: u32 = 0x2 << RTC_ALRMBR_DT_Pos;
pub const RTC_ALRMBR_DU_Pos: u32 = 24;
pub const RTC_ALRMBR_DU_Msk: u32 = 0xF << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU: u32 = RTC_ALRMBR_DU_Msk;
pub const RTC_ALRMBR_DU_0: u32 = 0x1 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU_1: u32 = 0x2 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU_2: u32 = 0x4 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU_3: u32 = 0x8 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_MSK3_Pos: u32 = 23;
pub const RTC_ALRMBR_MSK3_Msk: u32 = 0x1 << RTC_ALRMBR_MSK3_Pos;
pub const RTC_ALRMBR_MSK3: u32 = RTC_ALRMBR_MSK3_Msk;
pub const RTC_ALRMBR_PM_Pos: u32 = 22;
pub const RTC_ALRMBR_PM_Msk: u32 = 0x1 << RTC_ALRMBR_PM_Pos;
pub const RTC_ALRMBR_PM: u32 = RTC_ALRMBR_PM_Msk;
pub const RTC_ALRMBR_HT_Pos: u32 = 20;
pub const RTC_ALRMBR_HT_Msk: u32 = 0x3 << RTC_ALRMBR_HT_Pos;
pub const RTC_ALRMBR_HT: u32 = RTC_ALRMBR_HT_Msk;
pub const RTC_ALRMBR_HT_0: u32 = 0x1 << RTC_ALRMBR_HT_Pos;
pub const RTC_ALRMBR_HT_1: u32 = 0x2 << RTC_ALRMBR_HT_Pos;
pub const RTC_ALRMBR_HU_Pos: u32 = 16;
pub const RTC_ALRMBR_HU_Msk: u32 = 0xF << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU: u32 = RTC_ALRMBR_HU_Msk;
pub const RTC_ALRMBR_HU_0: u32 = 0x1 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU_1: u32 = 0x2 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU_2: u32 = 0x4 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU_3: u32 = 0x8 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_MSK2_Pos: u32 = 15;
pub const RTC_ALRMBR_MSK2_Msk: u32 = 0x1 << RTC_ALRMBR_MSK2_Pos;
pub const RTC_ALRMBR_MSK2: u32 = RTC_ALRMBR_MSK2_Msk;
pub const RTC_ALRMBR_MNT_Pos: u32 = 12;
pub const RTC_ALRMBR_MNT_Msk: u32 = 0x7 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNT: u32 = RTC_ALRMBR_MNT_Msk;
pub const RTC_ALRMBR_MNT_0: u32 = 0x1 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNT_1: u32 = 0x2 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNT_2: u32 = 0x4 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNU_Pos: u32 = 8;
pub const RTC_ALRMBR_MNU_Msk: u32 = 0xF << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU: u32 = RTC_ALRMBR_MNU_Msk;
pub const RTC_ALRMBR_MNU_0: u32 = 0x1 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU_1: u32 = 0x2 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU_2: u32 = 0x4 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU_3: u32 = 0x8 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MSK1_Pos: u32 = 7;
pub const RTC_ALRMBR_MSK1_Msk: u32 = 0x1 << RTC_ALRMBR_MSK1_Pos;
pub const RTC_ALRMBR_MSK1: u32 = RTC_ALRMBR_MSK1_Msk;
pub const RTC_ALRMBR_ST_Pos: u32 = 4;
pub const RTC_ALRMBR_ST_Msk: u32 = 0x7 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_ST: u32 = RTC_ALRMBR_ST_Msk;
pub const RTC_ALRMBR_ST_0: u32 = 0x1 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_ST_1: u32 = 0x2 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_ST_2: u32 = 0x4 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_SU_Pos: u32 = 0;
pub const RTC_ALRMBR_SU_Msk: u32 = 0xF << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU: u32 = RTC_ALRMBR_SU_Msk;
pub const RTC_ALRMBR_SU_0: u32 = 0x1 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU_1: u32 = 0x2 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU_2: u32 = 0x4 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU_3: u32 = 0x8 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBSSR_SSCLR_Pos: u32 = 31;
pub const RTC_ALRMBSSR_SSCLR_Msk: u32 = 0x1 << RTC_ALRMBSSR_SSCLR_Pos;
pub const RTC_ALRMBSSR_SSCLR: u32 = RTC_ALRMBSSR_SSCLR_Msk;
pub const RTC_ALRMBSSR_MASKSS_Pos: u32 = 24;
pub const RTC_ALRMBSSR_MASKSS_Msk: u32 = 0x3F << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS: u32 = RTC_ALRMBSSR_MASKSS_Msk;
pub const RTC_ALRMBSSR_MASKSS_0: u32 = 0x1 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_1: u32 = 0x2 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_2: u32 = 0x4 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_3: u32 = 0x8 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_4: u32 = 0x10 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_5: u32 = 0x20 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_SS_Pos: u32 = 0;
pub const RTC_ALRMBSSR_SS_Msk: u32 = 0x7FFF << RTC_ALRMBSSR_SS_Pos;
pub const RTC_ALRMBSSR_SS: u32 = RTC_ALRMBSSR_SS_Msk;
pub const RTC_SR_SSRUF_Pos: u32 = 6;
pub const RTC_SR_SSRUF_Msk: u32 = 0x1 << RTC_SR_SSRUF_Pos;
pub const RTC_SR_SSRUF: u32 = RTC_SR_SSRUF_Msk;
pub const RTC_SR_ITSF_Pos: u32 = 5;
pub const RTC_SR_ITSF_Msk: u32 = 0x1 << RTC_SR_ITSF_Pos;
pub const RTC_SR_ITSF: u32 = RTC_SR_ITSF_Msk;
pub const RTC_SR_TSOVF_Pos: u32 = 4;
pub const RTC_SR_TSOVF_Msk: u32 = 0x1 << RTC_SR_TSOVF_Pos;
pub const RTC_SR_TSOVF: u32 = RTC_SR_TSOVF_Msk;
pub const RTC_SR_TSF_Pos: u32 = 3;
pub const RTC_SR_TSF_Msk: u32 = 0x1 << RTC_SR_TSF_Pos;
pub const RTC_SR_TSF: u32 = RTC_SR_TSF_Msk;
pub const RTC_SR_WUTF_Pos: u32 = 2;
pub const RTC_SR_WUTF_Msk: u32 = 0x1 << RTC_SR_WUTF_Pos;
pub const RTC_SR_WUTF: u32 = RTC_SR_WUTF_Msk;
pub const RTC_SR_ALRBF_Pos: u32 = 1;
pub const RTC_SR_ALRBF_Msk: u32 = 0x1 << RTC_SR_ALRBF_Pos;
pub const RTC_SR_ALRBF: u32 = RTC_SR_ALRBF_Msk;
pub const RTC_SR_ALRAF_Pos: u32 = 0;
pub const RTC_SR_ALRAF_Msk: u32 = 0x1 << RTC_SR_ALRAF_Pos;
pub const RTC_SR_ALRAF: u32 = RTC_SR_ALRAF_Msk;
pub const RTC_MISR_SSRUMF_Pos: u32 = 6;
pub const RTC_MISR_SSRUMF_Msk: u32 = 0x1 << RTC_MISR_SSRUMF_Pos;
pub const RTC_MISR_SSRUMF: u32 = RTC_MISR_SSRUMF_Msk;
pub const RTC_MISR_ITSMF_Pos: u32 = 5;
pub const RTC_MISR_ITSMF_Msk: u32 = 0x1 << RTC_MISR_ITSMF_Pos;
pub const RTC_MISR_ITSMF: u32 = RTC_MISR_ITSMF_Msk;
pub const RTC_MISR_TSOVMF_Pos: u32 = 4;
pub const RTC_MISR_TSOVMF_Msk: u32 = 0x1 << RTC_MISR_TSOVMF_Pos;
pub const RTC_MISR_TSOVMF: u32 = RTC_MISR_TSOVMF_Msk;
pub const RTC_MISR_TSMF_Pos: u32 = 3;
pub const RTC_MISR_TSMF_Msk: u32 = 0x1 << RTC_MISR_TSMF_Pos;
pub const RTC_MISR_TSMF: u32 = RTC_MISR_TSMF_Msk;
pub const RTC_MISR_WUTMF_Pos: u32 = 2;
pub const RTC_MISR_WUTMF_Msk: u32 = 0x1 << RTC_MISR_WUTMF_Pos;
pub const RTC_MISR_WUTMF: u32 = RTC_MISR_WUTMF_Msk;
pub const RTC_MISR_ALRBMF_Pos: u32 = 1;
pub const RTC_MISR_ALRBMF_Msk: u32 = 0x1 << RTC_MISR_ALRBMF_Pos;
pub const RTC_MISR_ALRBMF: u32 = RTC_MISR_ALRBMF_Msk;
pub const RTC_MISR_ALRAMF_Pos: u32 = 0;
pub const RTC_MISR_ALRAMF_Msk: u32 = 0x1 << RTC_MISR_ALRAMF_Pos;
pub const RTC_MISR_ALRAMF: u32 = RTC_MISR_ALRAMF_Msk;
pub const RTC_SCR_CSSRUF_Pos: u32 = 6;
pub const RTC_SCR_CSSRUF_Msk: u32 = 0x1 << RTC_SCR_CSSRUF_Pos;
pub const RTC_SCR_CSSRUF: u32 = RTC_SCR_CSSRUF_Msk;
pub const RTC_SCR_CITSF_Pos: u32 = 5;
pub const RTC_SCR_CITSF_Msk: u32 = 0x1 << RTC_SCR_CITSF_Pos;
pub const RTC_SCR_CITSF: u32 = RTC_SCR_CITSF_Msk;
pub const RTC_SCR_CTSOVF_Pos: u32 = 4;
pub const RTC_SCR_CTSOVF_Msk: u32 = 0x1 << RTC_SCR_CTSOVF_Pos;
pub const RTC_SCR_CTSOVF: u32 = RTC_SCR_CTSOVF_Msk;
pub const RTC_SCR_CTSF_Pos: u32 = 3;
pub const RTC_SCR_CTSF_Msk: u32 = 0x1 << RTC_SCR_CTSF_Pos;
pub const RTC_SCR_CTSF: u32 = RTC_SCR_CTSF_Msk;
pub const RTC_SCR_CWUTF_Pos: u32 = 2;
pub const RTC_SCR_CWUTF_Msk: u32 = 0x1 << RTC_SCR_CWUTF_Pos;
pub const RTC_SCR_CWUTF: u32 = RTC_SCR_CWUTF_Msk;
pub const RTC_SCR_CALRBF_Pos: u32 = 1;
pub const RTC_SCR_CALRBF_Msk: u32 = 0x1 << RTC_SCR_CALRBF_Pos;
pub const RTC_SCR_CALRBF: u32 = RTC_SCR_CALRBF_Msk;
pub const RTC_SCR_CALRAF_Pos: u32 = 0;
pub const RTC_SCR_CALRAF_Msk: u32 = 0x1 << RTC_SCR_CALRAF_Pos;
pub const RTC_SCR_CALRAF: u32 = RTC_SCR_CALRAF_Msk;
pub const RTC_ALRABINR_SS_Pos: u32 = 0;
pub const RTC_ALRABINR_SS_Msk: u32 = 0xFFFFFFFF << RTC_ALRABINR_SS_Pos;
pub const RTC_ALRABINR_SS: u32 = RTC_ALRABINR_SS_Msk;
pub const RTC_ALRBBINR_SS_Pos: u32 = 0;
pub const RTC_ALRBBINR_SS_Msk: u32 = 0xFFFFFFFF << RTC_ALRBBINR_SS_Pos;
pub const RTC_ALRBBINR_SS: u32 = RTC_ALRBBINR_SS_Msk;
pub const SPI_CR1_CPHA_Pos: u32 = 0;
pub const SPI_CR1_CPHA_Msk: u32 = 0x1 << SPI_CR1_CPHA_Pos;
pub const SPI_CR1_CPHA: u32 = SPI_CR1_CPHA_Msk;
pub const SPI_CR1_CPOL_Pos: u32 = 1;
pub const SPI_CR1_CPOL_Msk: u32 = 0x1 << SPI_CR1_CPOL_Pos;
pub const SPI_CR1_CPOL: u32 = SPI_CR1_CPOL_Msk;
pub const SPI_CR1_MSTR_Pos: u32 = 2;
pub const SPI_CR1_MSTR_Msk: u32 = 0x1 << SPI_CR1_MSTR_Pos;
pub const SPI_CR1_MSTR: u32 = SPI_CR1_MSTR_Msk;
pub const SPI_CR1_BR_Pos: u32 = 3;
pub const SPI_CR1_BR_Msk: u32 = 0x7 << SPI_CR1_BR_Pos;
pub const SPI_CR1_BR: u32 = SPI_CR1_BR_Msk;
pub const SPI_CR1_BR_0: u32 = 0x1 << SPI_CR1_BR_Pos;
pub const SPI_CR1_BR_1: u32 = 0x2 << SPI_CR1_BR_Pos;
pub const SPI_CR1_BR_2: u32 = 0x4 << SPI_CR1_BR_Pos;
pub const SPI_CR1_SPE_Pos: u32 = 6;
pub const SPI_CR1_SPE_Msk: u32 = 0x1 << SPI_CR1_SPE_Pos;
pub const SPI_CR1_SPE: u32 = SPI_CR1_SPE_Msk;
pub const SPI_CR1_LSBFIRST_Pos: u32 = 7;
pub const SPI_CR1_LSBFIRST_Msk: u32 = 0x1 << SPI_CR1_LSBFIRST_Pos;
pub const SPI_CR1_LSBFIRST: u32 = SPI_CR1_LSBFIRST_Msk;
pub const SPI_CR1_SSI_Pos: u32 = 8;
pub const SPI_CR1_SSI_Msk: u32 = 0x1 << SPI_CR1_SSI_Pos;
pub const SPI_CR1_SSI: u32 = SPI_CR1_SSI_Msk;
pub const SPI_CR1_SSM_Pos: u32 = 9;
pub const SPI_CR1_SSM_Msk: u32 = 0x1 << SPI_CR1_SSM_Pos;
pub const SPI_CR1_SSM: u32 = SPI_CR1_SSM_Msk;
pub const SPI_CR1_RXONLY_Pos: u32 = 10;
pub const SPI_CR1_RXONLY_Msk: u32 = 0x1 << SPI_CR1_RXONLY_Pos;
pub const SPI_CR1_RXONLY: u32 = SPI_CR1_RXONLY_Msk;
pub const SPI_CR1_CRCL_Pos: u32 = 11;
pub const SPI_CR1_CRCL_Msk: u32 = 0x1 << SPI_CR1_CRCL_Pos;
pub const SPI_CR1_CRCL: u32 = SPI_CR1_CRCL_Msk;
pub const SPI_CR1_CRCNEXT_Pos: u32 = 12;
pub const SPI_CR1_CRCNEXT_Msk: u32 = 0x1 << SPI_CR1_CRCNEXT_Pos;
pub const SPI_CR1_CRCNEXT: u32 = SPI_CR1_CRCNEXT_Msk;
pub const SPI_CR1_CRCEN_Pos: u32 = 13;
pub const SPI_CR1_CRCEN_Msk: u32 = 0x1 << SPI_CR1_CRCEN_Pos;
pub const SPI_CR1_CRCEN: u32 = SPI_CR1_CRCEN_Msk;
pub const SPI_CR1_BIDIOE_Pos: u32 = 14;
pub const SPI_CR1_BIDIOE_Msk: u32 = 0x1 << SPI_CR1_BIDIOE_Pos;
pub const SPI_CR1_BIDIOE: u32 = SPI_CR1_BIDIOE_Msk;
pub const SPI_CR1_BIDIMODE_Pos: u32 = 15;
pub const SPI_CR1_BIDIMODE_Msk: u32 = 0x1 << SPI_CR1_BIDIMODE_Pos;
pub const SPI_CR1_BIDIMODE: u32 = SPI_CR1_BIDIMODE_Msk;
pub const SPI_CR2_RXDMAEN_Pos: u32 = 0;
pub const SPI_CR2_RXDMAEN_Msk: u32 = 0x1 << SPI_CR2_RXDMAEN_Pos;
pub const SPI_CR2_RXDMAEN: u32 = SPI_CR2_RXDMAEN_Msk;
pub const SPI_CR2_TXDMAEN_Pos: u32 = 1;
pub const SPI_CR2_TXDMAEN_Msk: u32 = 0x1 << SPI_CR2_TXDMAEN_Pos;
pub const SPI_CR2_TXDMAEN: u32 = SPI_CR2_TXDMAEN_Msk;
pub const SPI_CR2_SSOE_Pos: u32 = 2;
pub const SPI_CR2_SSOE_Msk: u32 = 0x1 << SPI_CR2_SSOE_Pos;
pub const SPI_CR2_SSOE: u32 = SPI_CR2_SSOE_Msk;
pub const SPI_CR2_NSSP_Pos: u32 = 3;
pub const SPI_CR2_NSSP_Msk: u32 = 0x1 << SPI_CR2_NSSP_Pos;
pub const SPI_CR2_NSSP: u32 = SPI_CR2_NSSP_Msk;
pub const SPI_CR2_FRF_Pos: u32 = 4;
pub const SPI_CR2_FRF_Msk: u32 = 0x1 << SPI_CR2_FRF_Pos;
pub const SPI_CR2_FRF: u32 = SPI_CR2_FRF_Msk;
pub const SPI_CR2_ERRIE_Pos: u32 = 5;
pub const SPI_CR2_ERRIE_Msk: u32 = 0x1 << SPI_CR2_ERRIE_Pos;
pub const SPI_CR2_ERRIE: u32 = SPI_CR2_ERRIE_Msk;
pub const SPI_CR2_RXNEIE_Pos: u32 = 6;
pub const SPI_CR2_RXNEIE_Msk: u32 = 0x1 << SPI_CR2_RXNEIE_Pos;
pub const SPI_CR2_RXNEIE: u32 = SPI_CR2_RXNEIE_Msk;
pub const SPI_CR2_TXEIE_Pos: u32 = 7;
pub const SPI_CR2_TXEIE_Msk: u32 = 0x1 << SPI_CR2_TXEIE_Pos;
pub const SPI_CR2_TXEIE: u32 = SPI_CR2_TXEIE_Msk;
pub const SPI_CR2_DS_Pos: u32 = 8;
pub const SPI_CR2_DS_Msk: u32 = 0xF << SPI_CR2_DS_Pos;
pub const SPI_CR2_DS: u32 = SPI_CR2_DS_Msk;
pub const SPI_CR2_DS_0: u32 = 0x1 << SPI_CR2_DS_Pos;
pub const SPI_CR2_DS_1: u32 = 0x2 << SPI_CR2_DS_Pos;
pub const SPI_CR2_DS_2: u32 = 0x4 << SPI_CR2_DS_Pos;
pub const SPI_CR2_DS_3: u32 = 0x8 << SPI_CR2_DS_Pos;
pub const SPI_CR2_FRXTH_Pos: u32 = 12;
pub const SPI_CR2_FRXTH_Msk: u32 = 0x1 << SPI_CR2_FRXTH_Pos;
pub const SPI_CR2_FRXTH: u32 = SPI_CR2_FRXTH_Msk;
pub const SPI_CR2_LDMARX_Pos: u32 = 13;
pub const SPI_CR2_LDMARX_Msk: u32 = 0x1 << SPI_CR2_LDMARX_Pos;
pub const SPI_CR2_LDMARX: u32 = SPI_CR2_LDMARX_Msk;
pub const SPI_CR2_LDMATX_Pos: u32 = 14;
pub const SPI_CR2_LDMATX_Msk: u32 = 0x1 << SPI_CR2_LDMATX_Pos;
pub const SPI_CR2_LDMATX: u32 = SPI_CR2_LDMATX_Msk;
pub const SPI_SR_RXNE_Pos: u32 = 0;
pub const SPI_SR_RXNE_Msk: u32 = 0x1 << SPI_SR_RXNE_Pos;
pub const SPI_SR_RXNE: u32 = SPI_SR_RXNE_Msk;
pub const SPI_SR_TXE_Pos: u32 = 1;
pub const SPI_SR_TXE_Msk: u32 = 0x1 << SPI_SR_TXE_Pos;
pub const SPI_SR_TXE: u32 = SPI_SR_TXE_Msk;
pub const SPI_SR_CHSIDE_Pos: u32 = 2;
pub const SPI_SR_CHSIDE_Msk: u32 = 0x1 << SPI_SR_CHSIDE_Pos;
pub const SPI_SR_CHSIDE: u32 = SPI_SR_CHSIDE_Msk;
pub const SPI_SR_UDR_Pos: u32 = 3;
pub const SPI_SR_UDR_Msk: u32 = 0x1 << SPI_SR_UDR_Pos;
pub const SPI_SR_UDR: u32 = SPI_SR_UDR_Msk;
pub const SPI_SR_CRCERR_Pos: u32 = 4;
pub const SPI_SR_CRCERR_Msk: u32 = 0x1 << SPI_SR_CRCERR_Pos;
pub const SPI_SR_CRCERR: u32 = SPI_SR_CRCERR_Msk;
pub const SPI_SR_MODF_Pos: u32 = 5;
pub const SPI_SR_MODF_Msk: u32 = 0x1 << SPI_SR_MODF_Pos;
pub const SPI_SR_MODF: u32 = SPI_SR_MODF_Msk;
pub const SPI_SR_OVR_Pos: u32 = 6;
pub const SPI_SR_OVR_Msk: u32 = 0x1 << SPI_SR_OVR_Pos;
pub const SPI_SR_OVR: u32 = SPI_SR_OVR_Msk;
pub const SPI_SR_BSY_Pos: u32 = 7;
pub const SPI_SR_BSY_Msk: u32 = 0x1 << SPI_SR_BSY_Pos;
pub const SPI_SR_BSY: u32 = SPI_SR_BSY_Msk;
pub const SPI_SR_FRE_Pos: u32 = 8;
pub const SPI_SR_FRE_Msk: u32 = 0x1 << SPI_SR_FRE_Pos;
pub const SPI_SR_FRE: u32 = SPI_SR_FRE_Msk;
pub const SPI_SR_FRLVL_Pos: u32 = 9;
pub const SPI_SR_FRLVL_Msk: u32 = 0x3 << SPI_SR_FRLVL_Pos;
pub const SPI_SR_FRLVL: u32 = SPI_SR_FRLVL_Msk;
pub const SPI_SR_FRLVL_0: u32 = 0x1 << SPI_SR_FRLVL_Pos;
pub const SPI_SR_FRLVL_1: u32 = 0x2 << SPI_SR_FRLVL_Pos;
pub const SPI_SR_FTLVL_Pos: u32 = 11;
pub const SPI_SR_FTLVL_Msk: u32 = 0x3 << SPI_SR_FTLVL_Pos;
pub const SPI_SR_FTLVL: u32 = SPI_SR_FTLVL_Msk;
pub const SPI_SR_FTLVL_0: u32 = 0x1 << SPI_SR_FTLVL_Pos;
pub const SPI_SR_FTLVL_1: u32 = 0x2 << SPI_SR_FTLVL_Pos;
pub const SPI_DR_DR_Pos: u32 = 0;
pub const SPI_DR_DR_Msk: u32 = 0xFFFF << SPI_DR_DR_Pos;
pub const SPI_DR_DR: u32 = SPI_DR_DR_Msk;
pub const SPI_CRCPR_CRCPOLY_Pos: u32 = 0;
pub const SPI_CRCPR_CRCPOLY_Msk: u32 = 0xFFFF << SPI_CRCPR_CRCPOLY_Pos;
pub const SPI_CRCPR_CRCPOLY: u32 = SPI_CRCPR_CRCPOLY_Msk;
pub const SPI_RXCRCR_RXCRC_Pos: u32 = 0;
pub const SPI_RXCRCR_RXCRC_Msk: u32 = 0xFFFF << SPI_RXCRCR_RXCRC_Pos;
pub const SPI_RXCRCR_RXCRC: u32 = SPI_RXCRCR_RXCRC_Msk;
pub const SPI_TXCRCR_TXCRC_Pos: u32 = 0;
pub const SPI_TXCRCR_TXCRC_Msk: u32 = 0xFFFF << SPI_TXCRCR_TXCRC_Pos;
pub const SPI_TXCRCR_TXCRC: u32 = SPI_TXCRCR_TXCRC_Msk;
pub const SPI_I2SCFGR_CHLEN_Pos: u32 = 0;
pub const SPI_I2SCFGR_CHLEN_Msk: u32 = 0x1 << SPI_I2SCFGR_CHLEN_Pos;
pub const SPI_I2SCFGR_CHLEN: u32 = SPI_I2SCFGR_CHLEN_Msk;
pub const SPI_I2SCFGR_DATLEN_Pos: u32 = 1;
pub const SPI_I2SCFGR_DATLEN_Msk: u32 = 0x3 << SPI_I2SCFGR_DATLEN_Pos;
pub const SPI_I2SCFGR_DATLEN: u32 = SPI_I2SCFGR_DATLEN_Msk;
pub const SPI_I2SCFGR_DATLEN_0: u32 = 0x1 << SPI_I2SCFGR_DATLEN_Pos;
pub const SPI_I2SCFGR_DATLEN_1: u32 = 0x2 << SPI_I2SCFGR_DATLEN_Pos;
pub const SPI_I2SCFGR_CKPOL_Pos: u32 = 3;
pub const SPI_I2SCFGR_CKPOL_Msk: u32 = 0x1 << SPI_I2SCFGR_CKPOL_Pos;
pub const SPI_I2SCFGR_CKPOL: u32 = SPI_I2SCFGR_CKPOL_Msk;
pub const SPI_I2SCFGR_I2SSTD_Pos: u32 = 4;
pub const SPI_I2SCFGR_I2SSTD_Msk: u32 = 0x3 << SPI_I2SCFGR_I2SSTD_Pos;
pub const SPI_I2SCFGR_I2SSTD: u32 = SPI_I2SCFGR_I2SSTD_Msk;
pub const SPI_I2SCFGR_I2SSTD_0: u32 = 0x1 << SPI_I2SCFGR_I2SSTD_Pos;
pub const SPI_I2SCFGR_I2SSTD_1: u32 = 0x2 << SPI_I2SCFGR_I2SSTD_Pos;
pub const SPI_I2SCFGR_PCMSYNC_Pos: u32 = 7;
pub const SPI_I2SCFGR_PCMSYNC_Msk: u32 = 0x1 << SPI_I2SCFGR_PCMSYNC_Pos;
pub const SPI_I2SCFGR_PCMSYNC: u32 = SPI_I2SCFGR_PCMSYNC_Msk;
pub const SPI_I2SCFGR_I2SCFG_Pos: u32 = 8;
pub const SPI_I2SCFGR_I2SCFG_Msk: u32 = 0x3 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SCFG: u32 = SPI_I2SCFGR_I2SCFG_Msk;
pub const SPI_I2SCFGR_I2SCFG_0: u32 = 0x1 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SCFG_1: u32 = 0x2 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SE_Pos: u32 = 10;
pub const SPI_I2SCFGR_I2SE_Msk: u32 = 0x1 << SPI_I2SCFGR_I2SE_Pos;
pub const SPI_I2SCFGR_I2SE: u32 = SPI_I2SCFGR_I2SE_Msk;
pub const SPI_I2SCFGR_I2SMOD_Pos: u32 = 11;
pub const SPI_I2SCFGR_I2SMOD_Msk: u32 = 0x1 << SPI_I2SCFGR_I2SMOD_Pos;
pub const SPI_I2SCFGR_I2SMOD: u32 = SPI_I2SCFGR_I2SMOD_Msk;
pub const SPI_I2SCFGR_ASTRTEN_Pos: u32 = 12;
pub const SPI_I2SCFGR_ASTRTEN_Msk: u32 = 0x1 << SPI_I2SCFGR_ASTRTEN_Pos;
pub const SPI_I2SCFGR_ASTRTEN: u32 = SPI_I2SCFGR_ASTRTEN_Msk;
pub const SPI_I2SPR_I2SDIV_Pos: u32 = 0;
pub const SPI_I2SPR_I2SDIV_Msk: u32 = 0xFF << SPI_I2SPR_I2SDIV_Pos;
pub const SPI_I2SPR_I2SDIV: u32 = SPI_I2SPR_I2SDIV_Msk;
pub const SPI_I2SPR_ODD_Pos: u32 = 8;
pub const SPI_I2SPR_ODD_Msk: u32 = 0x1 << SPI_I2SPR_ODD_Pos;
pub const SPI_I2SPR_ODD: u32 = SPI_I2SPR_ODD_Msk;
pub const SPI_I2SPR_MCKOE_Pos: u32 = 9;
pub const SPI_I2SPR_MCKOE_Msk: u32 = 0x1 << SPI_I2SPR_MCKOE_Pos;
pub const SPI_I2SPR_MCKOE: u32 = SPI_I2SPR_MCKOE_Msk;
pub const TAMP_CR1_TAMP1E_Pos: u32 = 0;
pub const TAMP_CR1_TAMP1E_Msk: u32 = 0x1 << TAMP_CR1_TAMP1E_Pos;
pub const TAMP_CR1_TAMP1E: u32 = TAMP_CR1_TAMP1E_Msk;
pub const TAMP_CR1_TAMP2E_Pos: u32 = 1;
pub const TAMP_CR1_TAMP2E_Msk: u32 = 0x1 << TAMP_CR1_TAMP2E_Pos;
pub const TAMP_CR1_TAMP2E: u32 = TAMP_CR1_TAMP2E_Msk;
pub const TAMP_CR1_TAMP3E_Pos: u32 = 2;
pub const TAMP_CR1_TAMP3E_Msk: u32 = 0x1 << TAMP_CR1_TAMP3E_Pos;
pub const TAMP_CR1_TAMP3E: u32 = TAMP_CR1_TAMP3E_Msk;
pub const TAMP_CR1_ITAMP3E_Pos: u32 = 18;
pub const TAMP_CR1_ITAMP3E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP3E_Pos;
pub const TAMP_CR1_ITAMP3E: u32 = TAMP_CR1_ITAMP3E_Msk;
pub const TAMP_CR1_ITAMP5E_Pos: u32 = 20;
pub const TAMP_CR1_ITAMP5E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP5E_Pos;
pub const TAMP_CR1_ITAMP5E: u32 = TAMP_CR1_ITAMP5E_Msk;
pub const TAMP_CR1_ITAMP6E_Pos: u32 = 21;
pub const TAMP_CR1_ITAMP6E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP6E_Pos;
pub const TAMP_CR1_ITAMP6E: u32 = TAMP_CR1_ITAMP6E_Msk;
pub const TAMP_CR1_ITAMP8E_Pos: u32 = 23;
pub const TAMP_CR1_ITAMP8E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP8E_Pos;
pub const TAMP_CR1_ITAMP8E: u32 = TAMP_CR1_ITAMP8E_Msk;
pub const TAMP_CR2_TAMP1NOERASE_Pos: u32 = 0;
pub const TAMP_CR2_TAMP1NOERASE_Msk: u32 = 0x1 << TAMP_CR2_TAMP1NOERASE_Pos;
pub const TAMP_CR2_TAMP1NOERASE: u32 = TAMP_CR2_TAMP1NOERASE_Msk;
pub const TAMP_CR2_TAMP2NOERASE_Pos: u32 = 1;
pub const TAMP_CR2_TAMP2NOERASE_Msk: u32 = 0x1 << TAMP_CR2_TAMP2NOERASE_Pos;
pub const TAMP_CR2_TAMP2NOERASE: u32 = TAMP_CR2_TAMP2NOERASE_Msk;
pub const TAMP_CR2_TAMP3NOERASE_Pos: u32 = 2;
pub const TAMP_CR2_TAMP3NOERASE_Msk: u32 = 0x1 << TAMP_CR2_TAMP3NOERASE_Pos;
pub const TAMP_CR2_TAMP3NOERASE: u32 = TAMP_CR2_TAMP3NOERASE_Msk;
pub const TAMP_CR2_TAMP1MSK_Pos: u32 = 16;
pub const TAMP_CR2_TAMP1MSK_Msk: u32 = 0x1 << TAMP_CR2_TAMP1MSK_Pos;
pub const TAMP_CR2_TAMP1MSK: u32 = TAMP_CR2_TAMP1MSK_Msk;
pub const TAMP_CR2_TAMP2MSK_Pos: u32 = 17;
pub const TAMP_CR2_TAMP2MSK_Msk: u32 = 0x1 << TAMP_CR2_TAMP2MSK_Pos;
pub const TAMP_CR2_TAMP2MSK: u32 = TAMP_CR2_TAMP2MSK_Msk;
pub const TAMP_CR2_TAMP3MSK_Pos: u32 = 18;
pub const TAMP_CR2_TAMP3MSK_Msk: u32 = 0x1 << TAMP_CR2_TAMP3MSK_Pos;
pub const TAMP_CR2_TAMP3MSK: u32 = TAMP_CR2_TAMP3MSK_Msk;
pub const TAMP_CR2_BKERASE_Pos: u32 = 23;
pub const TAMP_CR2_BKERASE_Msk: u32 = 0x1 << TAMP_CR2_BKERASE_Pos;
pub const TAMP_CR2_BKERASE: u32 = TAMP_CR2_BKERASE_Msk;
pub const TAMP_CR2_TAMP1TRG_Pos: u32 = 24;
pub const TAMP_CR2_TAMP1TRG_Msk: u32 = 0x1 << TAMP_CR2_TAMP1TRG_Pos;
pub const TAMP_CR2_TAMP1TRG: u32 = TAMP_CR2_TAMP1TRG_Msk;
pub const TAMP_CR2_TAMP2TRG_Pos: u32 = 25;
pub const TAMP_CR2_TAMP2TRG_Msk: u32 = 0x1 << TAMP_CR2_TAMP2TRG_Pos;
pub const TAMP_CR2_TAMP2TRG: u32 = TAMP_CR2_TAMP2TRG_Msk;
pub const TAMP_CR2_TAMP3TRG_Pos: u32 = 26;
pub const TAMP_CR2_TAMP3TRG_Msk: u32 = 0x1 << TAMP_CR2_TAMP3TRG_Pos;
pub const TAMP_CR2_TAMP3TRG: u32 = TAMP_CR2_TAMP3TRG_Msk;
pub const TAMP_CR3_ITAMP3NOER_Pos: u32 = 2;
pub const TAMP_CR3_ITAMP3NOER_Msk: u32 = 0x1 << TAMP_CR3_ITAMP3NOER_Pos;
pub const TAMP_CR3_ITAMP3NOER: u32 = TAMP_CR3_ITAMP3NOER_Msk;
pub const TAMP_CR3_ITAMP5NOER_Pos: u32 = 4;
pub const TAMP_CR3_ITAMP5NOER_Msk: u32 = 0x1 << TAMP_CR3_ITAMP5NOER_Pos;
pub const TAMP_CR3_ITAMP5NOER: u32 = TAMP_CR3_ITAMP5NOER_Msk;
pub const TAMP_CR3_ITAMP6NOER_Pos: u32 = 5;
pub const TAMP_CR3_ITAMP6NOER_Msk: u32 = 0x1 << TAMP_CR3_ITAMP6NOER_Pos;
pub const TAMP_CR3_ITAMP6NOER: u32 = TAMP_CR3_ITAMP6NOER_Msk;
pub const TAMP_CR3_ITAMP8NOER_Pos: u32 = 7;
pub const TAMP_CR3_ITAMP8NOER_Msk: u32 = 0x1 << TAMP_CR3_ITAMP8NOER_Pos;
pub const TAMP_CR3_ITAMP8NOER: u32 = TAMP_CR3_ITAMP8NOER_Msk;
pub const TAMP_FLTCR_TAMPFREQ_Pos: u32 = 0;
pub const TAMP_FLTCR_TAMPFREQ_Msk: u32 = 0x7 << TAMP_FLTCR_TAMPFREQ_Pos;
pub const TAMP_FLTCR_TAMPFREQ: u32 = TAMP_FLTCR_TAMPFREQ_Msk;
pub const TAMP_FLTCR_TAMPFREQ_0: u32 = 0x1 << TAMP_FLTCR_TAMPFREQ_Pos;
pub const TAMP_FLTCR_TAMPFREQ_1: u32 = 0x2 << TAMP_FLTCR_TAMPFREQ_Pos;
pub const TAMP_FLTCR_TAMPFREQ_2: u32 = 0x4 << TAMP_FLTCR_TAMPFREQ_Pos;
pub const TAMP_FLTCR_TAMPFLT_Pos: u32 = 3;
pub const TAMP_FLTCR_TAMPFLT_Msk: u32 = 0x3 << TAMP_FLTCR_TAMPFLT_Pos;
pub const TAMP_FLTCR_TAMPFLT: u32 = TAMP_FLTCR_TAMPFLT_Msk;
pub const TAMP_FLTCR_TAMPFLT_0: u32 = 0x1 << TAMP_FLTCR_TAMPFLT_Pos;
pub const TAMP_FLTCR_TAMPFLT_1: u32 = 0x2 << TAMP_FLTCR_TAMPFLT_Pos;
pub const TAMP_FLTCR_TAMPPRCH_Pos: u32 = 5;
pub const TAMP_FLTCR_TAMPPRCH_Msk: u32 = 0x3 << TAMP_FLTCR_TAMPPRCH_Pos;
pub const TAMP_FLTCR_TAMPPRCH: u32 = TAMP_FLTCR_TAMPPRCH_Msk;
pub const TAMP_FLTCR_TAMPPRCH_0: u32 = 0x1 << TAMP_FLTCR_TAMPPRCH_Pos;
pub const TAMP_FLTCR_TAMPPRCH_1: u32 = 0x2 << TAMP_FLTCR_TAMPPRCH_Pos;
pub const TAMP_FLTCR_TAMPPUDIS_Pos: u32 = 7;
pub const TAMP_FLTCR_TAMPPUDIS_Msk: u32 = 0x1 << TAMP_FLTCR_TAMPPUDIS_Pos;
pub const TAMP_FLTCR_TAMPPUDIS: u32 = TAMP_FLTCR_TAMPPUDIS_Msk;
pub const TAMP_IER_TAMP1IE_Pos: u32 = 0;
pub const TAMP_IER_TAMP1IE_Msk: u32 = 0x1 << TAMP_IER_TAMP1IE_Pos;
pub const TAMP_IER_TAMP1IE: u32 = TAMP_IER_TAMP1IE_Msk;
pub const TAMP_IER_TAMP2IE_Pos: u32 = 1;
pub const TAMP_IER_TAMP2IE_Msk: u32 = 0x1 << TAMP_IER_TAMP2IE_Pos;
pub const TAMP_IER_TAMP2IE: u32 = TAMP_IER_TAMP2IE_Msk;
pub const TAMP_IER_TAMP3IE_Pos: u32 = 2;
pub const TAMP_IER_TAMP3IE_Msk: u32 = 0x1 << TAMP_IER_TAMP3IE_Pos;
pub const TAMP_IER_TAMP3IE: u32 = TAMP_IER_TAMP3IE_Msk;
pub const TAMP_IER_ITAMP3IE_Pos: u32 = 18;
pub const TAMP_IER_ITAMP3IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP3IE_Pos;
pub const TAMP_IER_ITAMP3IE: u32 = TAMP_IER_ITAMP3IE_Msk;
pub const TAMP_IER_ITAMP5IE_Pos: u32 = 20;
pub const TAMP_IER_ITAMP5IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP5IE_Pos;
pub const TAMP_IER_ITAMP5IE: u32 = TAMP_IER_ITAMP5IE_Msk;
pub const TAMP_IER_ITAMP6IE_Pos: u32 = 21;
pub const TAMP_IER_ITAMP6IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP6IE_Pos;
pub const TAMP_IER_ITAMP6IE: u32 = TAMP_IER_ITAMP6IE_Msk;
pub const TAMP_IER_ITAMP8IE_Pos: u32 = 23;
pub const TAMP_IER_ITAMP8IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP8IE_Pos;
pub const TAMP_IER_ITAMP8IE: u32 = TAMP_IER_ITAMP8IE_Msk;
pub const TAMP_SR_TAMP1F_Pos: u32 = 0;
pub const TAMP_SR_TAMP1F_Msk: u32 = 0x1 << TAMP_SR_TAMP1F_Pos;
pub const TAMP_SR_TAMP1F: u32 = TAMP_SR_TAMP1F_Msk;
pub const TAMP_SR_TAMP2F_Pos: u32 = 1;
pub const TAMP_SR_TAMP2F_Msk: u32 = 0x1 << TAMP_SR_TAMP2F_Pos;
pub const TAMP_SR_TAMP2F: u32 = TAMP_SR_TAMP2F_Msk;
pub const TAMP_SR_TAMP3F_Pos: u32 = 2;
pub const TAMP_SR_TAMP3F_Msk: u32 = 0x1 << TAMP_SR_TAMP3F_Pos;
pub const TAMP_SR_TAMP3F: u32 = TAMP_SR_TAMP3F_Msk;
pub const TAMP_SR_ITAMP3F_Pos: u32 = 18;
pub const TAMP_SR_ITAMP3F_Msk: u32 = 0x1 << TAMP_SR_ITAMP3F_Pos;
pub const TAMP_SR_ITAMP3F: u32 = TAMP_SR_ITAMP3F_Msk;
pub const TAMP_SR_ITAMP5F_Pos: u32 = 20;
pub const TAMP_SR_ITAMP5F_Msk: u32 = 0x1 << TAMP_SR_ITAMP5F_Pos;
pub const TAMP_SR_ITAMP5F: u32 = TAMP_SR_ITAMP5F_Msk;
pub const TAMP_SR_ITAMP6F_Pos: u32 = 21;
pub const TAMP_SR_ITAMP6F_Msk: u32 = 0x1 << TAMP_SR_ITAMP6F_Pos;
pub const TAMP_SR_ITAMP6F: u32 = TAMP_SR_ITAMP6F_Msk;
pub const TAMP_SR_ITAMP8F_Pos: u32 = 23;
pub const TAMP_SR_ITAMP8F_Msk: u32 = 0x1 << TAMP_SR_ITAMP8F_Pos;
pub const TAMP_SR_ITAMP8F: u32 = TAMP_SR_ITAMP8F_Msk;
pub const TAMP_MISR_TAMP1MF_Pos: u32 = 0;
pub const TAMP_MISR_TAMP1MF_Msk: u32 = 0x1 << TAMP_MISR_TAMP1MF_Pos;
pub const TAMP_MISR_TAMP1MF: u32 = TAMP_MISR_TAMP1MF_Msk;
pub const TAMP_MISR_TAMP2MF_Pos: u32 = 1;
pub const TAMP_MISR_TAMP2MF_Msk: u32 = 0x1 << TAMP_MISR_TAMP2MF_Pos;
pub const TAMP_MISR_TAMP2MF: u32 = TAMP_MISR_TAMP2MF_Msk;
pub const TAMP_MISR_TAMP3MF_Pos: u32 = 2;
pub const TAMP_MISR_TAMP3MF_Msk: u32 = 0x1 << TAMP_MISR_TAMP3MF_Pos;
pub const TAMP_MISR_TAMP3MF: u32 = TAMP_MISR_TAMP3MF_Msk;
pub const TAMP_MISR_ITAMP3MF_Pos: u32 = 18;
pub const TAMP_MISR_ITAMP3MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP3MF_Pos;
pub const TAMP_MISR_ITAMP3MF: u32 = TAMP_MISR_ITAMP3MF_Msk;
pub const TAMP_MISR_ITAMP5MF_Pos: u32 = 20;
pub const TAMP_MISR_ITAMP5MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP5MF_Pos;
pub const TAMP_MISR_ITAMP5MF: u32 = TAMP_MISR_ITAMP5MF_Msk;
pub const TAMP_MISR_ITAMP6MF_Pos: u32 = 21;
pub const TAMP_MISR_ITAMP6MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP6MF_Pos;
pub const TAMP_MISR_ITAMP6MF: u32 = TAMP_MISR_ITAMP6MF_Msk;
pub const TAMP_MISR_ITAMP8MF_Pos: u32 = 23;
pub const TAMP_MISR_ITAMP8MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP8MF_Pos;
pub const TAMP_MISR_ITAMP8MF: u32 = TAMP_MISR_ITAMP8MF_Msk;
pub const TAMP_SMISR_TAMP1MF_Pos: u32 = 0;
pub const TAMP_SMISR_TAMP1MF_Msk: u32 = 0x1 << TAMP_SMISR_TAMP1MF_Pos;
pub const TAMP_SMISR_TAMP1MF: u32 = TAMP_SMISR_TAMP1MF_Msk;
pub const TAMP_SMISR_TAMP2MF_Pos: u32 = 1;
pub const TAMP_SMISR_TAMP2MF_Msk: u32 = 0x1 << TAMP_SMISR_TAMP2MF_Pos;
pub const TAMP_SMISR_TAMP2MF: u32 = TAMP_SMISR_TAMP2MF_Msk;
pub const TAMP_SMISR_TAMP3MF_Pos: u32 = 2;
pub const TAMP_SMISR_TAMP3MF_Msk: u32 = 0x1 << TAMP_SMISR_TAMP3MF_Pos;
pub const TAMP_SMISR_TAMP3MF: u32 = TAMP_SMISR_TAMP3MF_Msk;
pub const TAMP_SMISR_ITAMP3MF_Pos: u32 = 18;
pub const TAMP_SMISR_ITAMP3MF_Msk: u32 = 0x1 << TAMP_SMISR_ITAMP3MF_Pos;
pub const TAMP_SMISR_ITAMP3MF: u32 = TAMP_SMISR_ITAMP3MF_Msk;
pub const TAMP_SMISR_ITAMP5MF_Pos: u32 = 20;
pub const TAMP_SMISR_ITAMP5MF_Msk: u32 = 0x1 << TAMP_SMISR_ITAMP5MF_Pos;
pub const TAMP_SMISR_ITAMP5MF: u32 = TAMP_SMISR_ITAMP5MF_Msk;
pub const TAMP_SMISR_ITAMP6MF_Pos: u32 = 21;
pub const TAMP_SMISR_ITAMP6MF_Msk: u32 = 0x1 << TAMP_SMISR_ITAMP6MF_Pos;
pub const TAMP_SMISR_ITAMP6MF: u32 = TAMP_SMISR_ITAMP6MF_Msk;
pub const TAMP_SMISR_ITAMP8MF_Pos: u32 = 23;
pub const TAMP_SMISR_ITAMP8MF_Msk: u32 = 0x1 << TAMP_SMISR_ITAMP8MF_Pos;
pub const TAMP_SMISR_ITAMP8MF: u32 = TAMP_SMISR_ITAMP8MF_Msk;
pub const TAMP_SCR_CTAMP1F_Pos: u32 = 0;
pub const TAMP_SCR_CTAMP1F_Msk: u32 = 0x1 << TAMP_SCR_CTAMP1F_Pos;
pub const TAMP_SCR_CTAMP1F: u32 = TAMP_SCR_CTAMP1F_Msk;
pub const TAMP_SCR_CTAMP2F_Pos: u32 = 1;
pub const TAMP_SCR_CTAMP2F_Msk: u32 = 0x1 << TAMP_SCR_CTAMP2F_Pos;
pub const TAMP_SCR_CTAMP2F: u32 = TAMP_SCR_CTAMP2F_Msk;
pub const TAMP_SCR_CTAMP3F_Pos: u32 = 2;
pub const TAMP_SCR_CTAMP3F_Msk: u32 = 0x1 << TAMP_SCR_CTAMP3F_Pos;
pub const TAMP_SCR_CTAMP3F: u32 = TAMP_SCR_CTAMP3F_Msk;
pub const TAMP_SCR_CITAMP3F_Pos: u32 = 18;
pub const TAMP_SCR_CITAMP3F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP3F_Pos;
pub const TAMP_SCR_CITAMP3F: u32 = TAMP_SCR_CITAMP3F_Msk;
pub const TAMP_SCR_CITAMP5F_Pos: u32 = 20;
pub const TAMP_SCR_CITAMP5F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP5F_Pos;
pub const TAMP_SCR_CITAMP5F: u32 = TAMP_SCR_CITAMP5F_Msk;
pub const TAMP_SCR_CITAMP6F_Pos: u32 = 21;
pub const TAMP_SCR_CITAMP6F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP6F_Pos;
pub const TAMP_SCR_CITAMP6F: u32 = TAMP_SCR_CITAMP6F_Msk;
pub const TAMP_SCR_CITAMP8F_Pos: u32 = 23;
pub const TAMP_SCR_CITAMP8F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP8F_Pos;
pub const TAMP_SCR_CITAMP8F: u32 = TAMP_SCR_CITAMP8F_Msk;
pub const TAMP_COUNTR_Pos: u32 = 0;
pub const TAMP_COUNTR_Msk: u32 = 0xFFFFFFFF << TAMP_COUNTR_Pos;
pub const TAMP_COUNTR: u32 = TAMP_COUNTR_Msk;
pub const TAMP_BKP0R_Pos: u32 = 0;
pub const TAMP_BKP0R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP0R_Pos;
pub const TAMP_BKP0R: u32 = TAMP_BKP0R_Msk;
pub const TAMP_BKP1R_Pos: u32 = 0;
pub const TAMP_BKP1R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP1R_Pos;
pub const TAMP_BKP1R: u32 = TAMP_BKP1R_Msk;
pub const TAMP_BKP2R_Pos: u32 = 0;
pub const TAMP_BKP2R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP2R_Pos;
pub const TAMP_BKP2R: u32 = TAMP_BKP2R_Msk;
pub const TAMP_BKP3R_Pos: u32 = 0;
pub const TAMP_BKP3R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP3R_Pos;
pub const TAMP_BKP3R: u32 = TAMP_BKP3R_Msk;
pub const TAMP_BKP4R_Pos: u32 = 0;
pub const TAMP_BKP4R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP4R_Pos;
pub const TAMP_BKP4R: u32 = TAMP_BKP4R_Msk;
pub const TAMP_BKP5R_Pos: u32 = 0;
pub const TAMP_BKP5R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP5R_Pos;
pub const TAMP_BKP5R: u32 = TAMP_BKP5R_Msk;
pub const TAMP_BKP6R_Pos: u32 = 0;
pub const TAMP_BKP6R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP6R_Pos;
pub const TAMP_BKP6R: u32 = TAMP_BKP6R_Msk;
pub const TAMP_BKP7R_Pos: u32 = 0;
pub const TAMP_BKP7R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP7R_Pos;
pub const TAMP_BKP7R: u32 = TAMP_BKP7R_Msk;
pub const TAMP_BKP8R_Pos: u32 = 0;
pub const TAMP_BKP8R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP8R_Pos;
pub const TAMP_BKP8R: u32 = TAMP_BKP8R_Msk;
pub const TAMP_BKP9R_Pos: u32 = 0;
pub const TAMP_BKP9R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP9R_Pos;
pub const TAMP_BKP9R: u32 = TAMP_BKP9R_Msk;
pub const TAMP_BKP10R_Pos: u32 = 0;
pub const TAMP_BKP10R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP10R_Pos;
pub const TAMP_BKP10R: u32 = TAMP_BKP10R_Msk;
pub const TAMP_BKP11R_Pos: u32 = 0;
pub const TAMP_BKP11R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP11R_Pos;
pub const TAMP_BKP11R: u32 = TAMP_BKP11R_Msk;
pub const TAMP_BKP12R_Pos: u32 = 0;
pub const TAMP_BKP12R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP12R_Pos;
pub const TAMP_BKP12R: u32 = TAMP_BKP12R_Msk;
pub const TAMP_BKP13R_Pos: u32 = 0;
pub const TAMP_BKP13R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP13R_Pos;
pub const TAMP_BKP13R: u32 = TAMP_BKP13R_Msk;
pub const TAMP_BKP14R_Pos: u32 = 0;
pub const TAMP_BKP14R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP14R_Pos;
pub const TAMP_BKP14R: u32 = TAMP_BKP14R_Msk;
pub const TAMP_BKP15R_Pos: u32 = 0;
pub const TAMP_BKP15R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP15R_Pos;
pub const TAMP_BKP15R: u32 = TAMP_BKP15R_Msk;
pub const TAMP_BKP16R_Pos: u32 = 0;
pub const TAMP_BKP16R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP16R_Pos;
pub const TAMP_BKP16R: u32 = TAMP_BKP16R_Msk;
pub const TAMP_BKP17R_Pos: u32 = 0;
pub const TAMP_BKP17R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP17R_Pos;
pub const TAMP_BKP17R: u32 = TAMP_BKP17R_Msk;
pub const TAMP_BKP18R_Pos: u32 = 0;
pub const TAMP_BKP18R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP18R_Pos;
pub const TAMP_BKP18R: u32 = TAMP_BKP18R_Msk;
pub const TAMP_BKP19R_Pos: u32 = 0;
pub const TAMP_BKP19R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP19R_Pos;
pub const TAMP_BKP19R: u32 = TAMP_BKP19R_Msk;
pub const SYSCFG_MEMRMP_MEM_MODE_Pos: u32 = 0;
pub const SYSCFG_MEMRMP_MEM_MODE_Msk: u32 = 0x7 << SYSCFG_MEMRMP_MEM_MODE_Pos;
pub const SYSCFG_MEMRMP_MEM_MODE: u32 = SYSCFG_MEMRMP_MEM_MODE_Msk;
pub const SYSCFG_MEMRMP_MEM_MODE_0: u32 = 0x1 << SYSCFG_MEMRMP_MEM_MODE_Pos;
pub const SYSCFG_MEMRMP_MEM_MODE_1: u32 = 0x2 << SYSCFG_MEMRMP_MEM_MODE_Pos;
pub const SYSCFG_MEMRMP_MEM_MODE_2: u32 = 0x4 << SYSCFG_MEMRMP_MEM_MODE_Pos;
pub const SYSCFG_CFGR1_BOOSTEN_Pos: u32 = 8;
pub const SYSCFG_CFGR1_BOOSTEN_Msk: u32 = 0x1 << SYSCFG_CFGR1_BOOSTEN_Pos;
pub const SYSCFG_CFGR1_BOOSTEN: u32 = SYSCFG_CFGR1_BOOSTEN_Msk;
pub const SYSCFG_CFGR1_I2C_PB6_FMP_Pos: u32 = 16;
pub const SYSCFG_CFGR1_I2C_PB6_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR1_I2C_PB6_FMP_Pos;
pub const SYSCFG_CFGR1_I2C_PB6_FMP: u32 = SYSCFG_CFGR1_I2C_PB6_FMP_Msk;
pub const SYSCFG_CFGR1_I2C_PB7_FMP_Pos: u32 = 17;
pub const SYSCFG_CFGR1_I2C_PB7_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR1_I2C_PB7_FMP_Pos;
pub const SYSCFG_CFGR1_I2C_PB7_FMP: u32 = SYSCFG_CFGR1_I2C_PB7_FMP_Msk;
pub const SYSCFG_CFGR1_I2C_PB8_FMP_Pos: u32 = 18;
pub const SYSCFG_CFGR1_I2C_PB8_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR1_I2C_PB8_FMP_Pos;
pub const SYSCFG_CFGR1_I2C_PB8_FMP: u32 = SYSCFG_CFGR1_I2C_PB8_FMP_Msk;
pub const SYSCFG_CFGR1_I2C_PB9_FMP_Pos: u32 = 19;
pub const SYSCFG_CFGR1_I2C_PB9_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR1_I2C_PB9_FMP_Pos;
pub const SYSCFG_CFGR1_I2C_PB9_FMP: u32 = SYSCFG_CFGR1_I2C_PB9_FMP_Msk;
pub const SYSCFG_CFGR1_I2C1_FMP_Pos: u32 = 20;
pub const SYSCFG_CFGR1_I2C1_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR1_I2C1_FMP_Pos;
pub const SYSCFG_CFGR1_I2C1_FMP: u32 = SYSCFG_CFGR1_I2C1_FMP_Msk;
pub const SYSCFG_CFGR1_I2C2_FMP_Pos: u32 = 21;
pub const SYSCFG_CFGR1_I2C2_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR1_I2C2_FMP_Pos;
pub const SYSCFG_CFGR1_I2C2_FMP: u32 = SYSCFG_CFGR1_I2C2_FMP_Msk;
pub const SYSCFG_CFGR1_I2C3_FMP_Pos: u32 = 22;
pub const SYSCFG_CFGR1_I2C3_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR1_I2C3_FMP_Pos;
pub const SYSCFG_CFGR1_I2C3_FMP: u32 = SYSCFG_CFGR1_I2C3_FMP_Msk;
pub const SYSCFG_EXTICR1_EXTI0_Pos: u32 = 0;
pub const SYSCFG_EXTICR1_EXTI0_Msk: u32 = 0x7 << SYSCFG_EXTICR1_EXTI0_Pos;
pub const SYSCFG_EXTICR1_EXTI0: u32 = SYSCFG_EXTICR1_EXTI0_Msk;
pub const SYSCFG_EXTICR1_EXTI1_Pos: u32 = 4;
pub const SYSCFG_EXTICR1_EXTI1_Msk: u32 = 0x7 << SYSCFG_EXTICR1_EXTI1_Pos;
pub const SYSCFG_EXTICR1_EXTI1: u32 = SYSCFG_EXTICR1_EXTI1_Msk;
pub const SYSCFG_EXTICR1_EXTI2_Pos: u32 = 8;
pub const SYSCFG_EXTICR1_EXTI2_Msk: u32 = 0x7 << SYSCFG_EXTICR1_EXTI2_Pos;
pub const SYSCFG_EXTICR1_EXTI2: u32 = SYSCFG_EXTICR1_EXTI2_Msk;
pub const SYSCFG_EXTICR1_EXTI3_Pos: u32 = 12;
pub const SYSCFG_EXTICR1_EXTI3_Msk: u32 = 0x7 << SYSCFG_EXTICR1_EXTI3_Pos;
pub const SYSCFG_EXTICR1_EXTI3: u32 = SYSCFG_EXTICR1_EXTI3_Msk;
pub const SYSCFG_EXTICR1_EXTI0_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR1_EXTI0_PB: u32 = 0x00000001;
pub const SYSCFG_EXTICR1_EXTI0_PC: u32 = 0x00000002;
pub const SYSCFG_EXTICR1_EXTI1_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR1_EXTI1_PB: u32 = 0x00000010;
pub const SYSCFG_EXTICR1_EXTI1_PC: u32 = 0x00000020;
pub const SYSCFG_EXTICR1_EXTI2_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR1_EXTI2_PB: u32 = 0x00000100;
pub const SYSCFG_EXTICR1_EXTI2_PC: u32 = 0x00000200;
pub const SYSCFG_EXTICR1_EXTI3_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR1_EXTI3_PB: u32 = 0x00001000;
pub const SYSCFG_EXTICR1_EXTI3_PC: u32 = 0x00002000;
pub const SYSCFG_EXTICR2_EXTI4_Pos: u32 = 0;
pub const SYSCFG_EXTICR2_EXTI4_Msk: u32 = 0x7 << SYSCFG_EXTICR2_EXTI4_Pos;
pub const SYSCFG_EXTICR2_EXTI4: u32 = SYSCFG_EXTICR2_EXTI4_Msk;
pub const SYSCFG_EXTICR2_EXTI5_Pos: u32 = 4;
pub const SYSCFG_EXTICR2_EXTI5_Msk: u32 = 0x7 << SYSCFG_EXTICR2_EXTI5_Pos;
pub const SYSCFG_EXTICR2_EXTI5: u32 = SYSCFG_EXTICR2_EXTI5_Msk;
pub const SYSCFG_EXTICR2_EXTI6_Pos: u32 = 8;
pub const SYSCFG_EXTICR2_EXTI6_Msk: u32 = 0x7 << SYSCFG_EXTICR2_EXTI6_Pos;
pub const SYSCFG_EXTICR2_EXTI6: u32 = SYSCFG_EXTICR2_EXTI6_Msk;
pub const SYSCFG_EXTICR2_EXTI7_Pos: u32 = 12;
pub const SYSCFG_EXTICR2_EXTI7_Msk: u32 = 0x7 << SYSCFG_EXTICR2_EXTI7_Pos;
pub const SYSCFG_EXTICR2_EXTI7: u32 = SYSCFG_EXTICR2_EXTI7_Msk;
pub const SYSCFG_EXTICR2_EXTI4_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR2_EXTI4_PB: u32 = 0x00000001;
pub const SYSCFG_EXTICR2_EXTI4_PC: u32 = 0x00000002;
pub const SYSCFG_EXTICR2_EXTI5_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR2_EXTI5_PB: u32 = 0x00000010;
pub const SYSCFG_EXTICR2_EXTI5_PC: u32 = 0x00000020;
pub const SYSCFG_EXTICR2_EXTI6_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR2_EXTI6_PB: u32 = 0x00000100;
pub const SYSCFG_EXTICR2_EXTI6_PC: u32 = 0x00000200;
pub const SYSCFG_EXTICR2_EXTI7_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR2_EXTI7_PB: u32 = 0x00001000;
pub const SYSCFG_EXTICR3_EXTI8_Pos: u32 = 0;
pub const SYSCFG_EXTICR3_EXTI8_Msk: u32 = 0x7 << SYSCFG_EXTICR3_EXTI8_Pos;
pub const SYSCFG_EXTICR3_EXTI8: u32 = SYSCFG_EXTICR3_EXTI8_Msk;
pub const SYSCFG_EXTICR3_EXTI9_Pos: u32 = 4;
pub const SYSCFG_EXTICR3_EXTI9_Msk: u32 = 0x7 << SYSCFG_EXTICR3_EXTI9_Pos;
pub const SYSCFG_EXTICR3_EXTI9: u32 = SYSCFG_EXTICR3_EXTI9_Msk;
pub const SYSCFG_EXTICR3_EXTI10_Pos: u32 = 8;
pub const SYSCFG_EXTICR3_EXTI10_Msk: u32 = 0x7 << SYSCFG_EXTICR3_EXTI10_Pos;
pub const SYSCFG_EXTICR3_EXTI10: u32 = SYSCFG_EXTICR3_EXTI10_Msk;
pub const SYSCFG_EXTICR3_EXTI11_Pos: u32 = 12;
pub const SYSCFG_EXTICR3_EXTI11_Msk: u32 = 0xF << SYSCFG_EXTICR3_EXTI11_Pos;
pub const SYSCFG_EXTICR3_EXTI11: u32 = SYSCFG_EXTICR3_EXTI11_Msk;
pub const SYSCFG_EXTICR3_EXTI8_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR3_EXTI8_PB: u32 = 0x00000001;
pub const SYSCFG_EXTICR3_EXTI9_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR3_EXTI9_PB: u32 = 0x00000010;
pub const SYSCFG_EXTICR3_EXTI10_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR3_EXTI10_PB: u32 = 0x00000100;
pub const SYSCFG_EXTICR3_EXTI11_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR3_EXTI11_PB: u32 = 0x00001000;
pub const SYSCFG_EXTICR4_EXTI12_Pos: u32 = 0;
pub const SYSCFG_EXTICR4_EXTI12_Msk: u32 = 0x7 << SYSCFG_EXTICR4_EXTI12_Pos;
pub const SYSCFG_EXTICR4_EXTI12: u32 = SYSCFG_EXTICR4_EXTI12_Msk;
pub const SYSCFG_EXTICR4_EXTI13_Pos: u32 = 4;
pub const SYSCFG_EXTICR4_EXTI13_Msk: u32 = 0x7 << SYSCFG_EXTICR4_EXTI13_Pos;
pub const SYSCFG_EXTICR4_EXTI13: u32 = SYSCFG_EXTICR4_EXTI13_Msk;
pub const SYSCFG_EXTICR4_EXTI14_Pos: u32 = 8;
pub const SYSCFG_EXTICR4_EXTI14_Msk: u32 = 0x7 << SYSCFG_EXTICR4_EXTI14_Pos;
pub const SYSCFG_EXTICR4_EXTI14: u32 = SYSCFG_EXTICR4_EXTI14_Msk;
pub const SYSCFG_EXTICR4_EXTI15_Pos: u32 = 12;
pub const SYSCFG_EXTICR4_EXTI15_Msk: u32 = 0x7 << SYSCFG_EXTICR4_EXTI15_Pos;
pub const SYSCFG_EXTICR4_EXTI15: u32 = SYSCFG_EXTICR4_EXTI15_Msk;
pub const SYSCFG_EXTICR4_EXTI12_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR4_EXTI12_PB: u32 = 0x00000001;
pub const SYSCFG_EXTICR4_EXTI13_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR4_EXTI13_PB: u32 = 0x00000010;
pub const SYSCFG_EXTICR4_EXTI13_PC: u32 = 0x00000020;
pub const SYSCFG_EXTICR4_EXTI14_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR4_EXTI14_PB: u32 = 0x00000100;
pub const SYSCFG_EXTICR4_EXTI14_PC: u32 = 0x00000200;
pub const SYSCFG_EXTICR4_EXTI15_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR4_EXTI15_PB: u32 = 0x00001000;
pub const SYSCFG_EXTICR4_EXTI15_PC: u32 = 0x00002000;
pub const SYSCFG_SCSR_SRAM2ER_Pos: u32 = 0;
pub const SYSCFG_SCSR_SRAM2ER_Msk: u32 = 0x1 << SYSCFG_SCSR_SRAM2ER_Pos;
pub const SYSCFG_SCSR_SRAM2ER: u32 = SYSCFG_SCSR_SRAM2ER_Msk;
pub const SYSCFG_SCSR_SRAMBSY_Pos: u32 = 1;
pub const SYSCFG_SCSR_SRAMBSY_Msk: u32 = 0x1 << SYSCFG_SCSR_SRAMBSY_Pos;
pub const SYSCFG_SCSR_SRAMBSY: u32 = SYSCFG_SCSR_SRAMBSY_Msk;
pub const SYSCFG_SCSR_PKASRAMBSY_Pos: u32 = 8;
pub const SYSCFG_SCSR_PKASRAMBSY_Msk: u32 = 0x1 << SYSCFG_SCSR_PKASRAMBSY_Pos;
pub const SYSCFG_SCSR_PKASRAMBSY: u32 = SYSCFG_SCSR_PKASRAMBSY_Msk;
pub const SYSCFG_CFGR2_CLL_Pos: u32 = 0;
pub const SYSCFG_CFGR2_CLL_Msk: u32 = 0x1 << SYSCFG_CFGR2_CLL_Pos;
pub const SYSCFG_CFGR2_CLL: u32 = SYSCFG_CFGR2_CLL_Msk;
pub const SYSCFG_CFGR2_SPL_Pos: u32 = 1;
pub const SYSCFG_CFGR2_SPL_Msk: u32 = 0x1 << SYSCFG_CFGR2_SPL_Pos;
pub const SYSCFG_CFGR2_SPL: u32 = SYSCFG_CFGR2_SPL_Msk;
pub const SYSCFG_CFGR2_PVDL_Pos: u32 = 2;
pub const SYSCFG_CFGR2_PVDL_Msk: u32 = 0x1 << SYSCFG_CFGR2_PVDL_Pos;
pub const SYSCFG_CFGR2_PVDL: u32 = SYSCFG_CFGR2_PVDL_Msk;
pub const SYSCFG_CFGR2_ECCL_Pos: u32 = 3;
pub const SYSCFG_CFGR2_ECCL_Msk: u32 = 0x1 << SYSCFG_CFGR2_ECCL_Pos;
pub const SYSCFG_CFGR2_ECCL: u32 = SYSCFG_CFGR2_ECCL_Msk;
pub const SYSCFG_CFGR2_SPF_Pos: u32 = 8;
pub const SYSCFG_CFGR2_SPF_Msk: u32 = 0x1 << SYSCFG_CFGR2_SPF_Pos;
pub const SYSCFG_CFGR2_SPF: u32 = SYSCFG_CFGR2_SPF_Msk;
pub const SYSCFG_SWPR_PAGE0_Pos: u32 = 0;
pub const SYSCFG_SWPR_PAGE0_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE0_Pos;
pub const SYSCFG_SWPR_PAGE0: u32 = SYSCFG_SWPR_PAGE0_Msk;
pub const SYSCFG_SWPR_PAGE1_Pos: u32 = 1;
pub const SYSCFG_SWPR_PAGE1_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE1_Pos;
pub const SYSCFG_SWPR_PAGE1: u32 = SYSCFG_SWPR_PAGE1_Msk;
pub const SYSCFG_SWPR_PAGE2_Pos: u32 = 2;
pub const SYSCFG_SWPR_PAGE2_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE2_Pos;
pub const SYSCFG_SWPR_PAGE2: u32 = SYSCFG_SWPR_PAGE2_Msk;
pub const SYSCFG_SWPR_PAGE3_Pos: u32 = 3;
pub const SYSCFG_SWPR_PAGE3_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE3_Pos;
pub const SYSCFG_SWPR_PAGE3: u32 = SYSCFG_SWPR_PAGE3_Msk;
pub const SYSCFG_SWPR_PAGE4_Pos: u32 = 4;
pub const SYSCFG_SWPR_PAGE4_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE4_Pos;
pub const SYSCFG_SWPR_PAGE4: u32 = SYSCFG_SWPR_PAGE4_Msk;
pub const SYSCFG_SWPR_PAGE5_Pos: u32 = 5;
pub const SYSCFG_SWPR_PAGE5_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE5_Pos;
pub const SYSCFG_SWPR_PAGE5: u32 = SYSCFG_SWPR_PAGE5_Msk;
pub const SYSCFG_SWPR_PAGE6_Pos: u32 = 6;
pub const SYSCFG_SWPR_PAGE6_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE6_Pos;
pub const SYSCFG_SWPR_PAGE6: u32 = SYSCFG_SWPR_PAGE6_Msk;
pub const SYSCFG_SWPR_PAGE7_Pos: u32 = 7;
pub const SYSCFG_SWPR_PAGE7_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE7_Pos;
pub const SYSCFG_SWPR_PAGE7: u32 = SYSCFG_SWPR_PAGE7_Msk;
pub const SYSCFG_SWPR_PAGE8_Pos: u32 = 8;
pub const SYSCFG_SWPR_PAGE8_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE8_Pos;
pub const SYSCFG_SWPR_PAGE8: u32 = SYSCFG_SWPR_PAGE8_Msk;
pub const SYSCFG_SWPR_PAGE9_Pos: u32 = 9;
pub const SYSCFG_SWPR_PAGE9_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE9_Pos;
pub const SYSCFG_SWPR_PAGE9: u32 = SYSCFG_SWPR_PAGE9_Msk;
pub const SYSCFG_SWPR_PAGE10_Pos: u32 = 10;
pub const SYSCFG_SWPR_PAGE10_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE10_Pos;
pub const SYSCFG_SWPR_PAGE10: u32 = SYSCFG_SWPR_PAGE10_Msk;
pub const SYSCFG_SWPR_PAGE11_Pos: u32 = 11;
pub const SYSCFG_SWPR_PAGE11_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE11_Pos;
pub const SYSCFG_SWPR_PAGE11: u32 = SYSCFG_SWPR_PAGE11_Msk;
pub const SYSCFG_SWPR_PAGE12_Pos: u32 = 12;
pub const SYSCFG_SWPR_PAGE12_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE12_Pos;
pub const SYSCFG_SWPR_PAGE12: u32 = SYSCFG_SWPR_PAGE12_Msk;
pub const SYSCFG_SWPR_PAGE13_Pos: u32 = 13;
pub const SYSCFG_SWPR_PAGE13_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE13_Pos;
pub const SYSCFG_SWPR_PAGE13: u32 = SYSCFG_SWPR_PAGE13_Msk;
pub const SYSCFG_SWPR_PAGE14_Pos: u32 = 14;
pub const SYSCFG_SWPR_PAGE14_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE14_Pos;
pub const SYSCFG_SWPR_PAGE14: u32 = SYSCFG_SWPR_PAGE14_Msk;
pub const SYSCFG_SWPR_PAGE15_Pos: u32 = 15;
pub const SYSCFG_SWPR_PAGE15_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE15_Pos;
pub const SYSCFG_SWPR_PAGE15: u32 = SYSCFG_SWPR_PAGE15_Msk;
pub const SYSCFG_SWPR_PAGE16_Pos: u32 = 16;
pub const SYSCFG_SWPR_PAGE16_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE16_Pos;
pub const SYSCFG_SWPR_PAGE16: u32 = SYSCFG_SWPR_PAGE16_Msk;
pub const SYSCFG_SWPR_PAGE17_Pos: u32 = 17;
pub const SYSCFG_SWPR_PAGE17_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE17_Pos;
pub const SYSCFG_SWPR_PAGE17: u32 = SYSCFG_SWPR_PAGE17_Msk;
pub const SYSCFG_SWPR_PAGE18_Pos: u32 = 18;
pub const SYSCFG_SWPR_PAGE18_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE18_Pos;
pub const SYSCFG_SWPR_PAGE18: u32 = SYSCFG_SWPR_PAGE18_Msk;
pub const SYSCFG_SWPR_PAGE19_Pos: u32 = 19;
pub const SYSCFG_SWPR_PAGE19_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE19_Pos;
pub const SYSCFG_SWPR_PAGE19: u32 = SYSCFG_SWPR_PAGE19_Msk;
pub const SYSCFG_SWPR_PAGE20_Pos: u32 = 20;
pub const SYSCFG_SWPR_PAGE20_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE20_Pos;
pub const SYSCFG_SWPR_PAGE20: u32 = SYSCFG_SWPR_PAGE20_Msk;
pub const SYSCFG_SWPR_PAGE21_Pos: u32 = 21;
pub const SYSCFG_SWPR_PAGE21_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE21_Pos;
pub const SYSCFG_SWPR_PAGE21: u32 = SYSCFG_SWPR_PAGE21_Msk;
pub const SYSCFG_SWPR_PAGE22_Pos: u32 = 22;
pub const SYSCFG_SWPR_PAGE22_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE22_Pos;
pub const SYSCFG_SWPR_PAGE22: u32 = SYSCFG_SWPR_PAGE22_Msk;
pub const SYSCFG_SWPR_PAGE23_Pos: u32 = 23;
pub const SYSCFG_SWPR_PAGE23_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE23_Pos;
pub const SYSCFG_SWPR_PAGE23: u32 = SYSCFG_SWPR_PAGE23_Msk;
pub const SYSCFG_SWPR_PAGE24_Pos: u32 = 24;
pub const SYSCFG_SWPR_PAGE24_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE24_Pos;
pub const SYSCFG_SWPR_PAGE24: u32 = SYSCFG_SWPR_PAGE24_Msk;
pub const SYSCFG_SWPR_PAGE25_Pos: u32 = 25;
pub const SYSCFG_SWPR_PAGE25_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE25_Pos;
pub const SYSCFG_SWPR_PAGE25: u32 = SYSCFG_SWPR_PAGE25_Msk;
pub const SYSCFG_SWPR_PAGE26_Pos: u32 = 26;
pub const SYSCFG_SWPR_PAGE26_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE26_Pos;
pub const SYSCFG_SWPR_PAGE26: u32 = SYSCFG_SWPR_PAGE26_Msk;
pub const SYSCFG_SWPR_PAGE27_Pos: u32 = 27;
pub const SYSCFG_SWPR_PAGE27_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE27_Pos;
pub const SYSCFG_SWPR_PAGE27: u32 = SYSCFG_SWPR_PAGE27_Msk;
pub const SYSCFG_SWPR_PAGE28_Pos: u32 = 28;
pub const SYSCFG_SWPR_PAGE28_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE28_Pos;
pub const SYSCFG_SWPR_PAGE28: u32 = SYSCFG_SWPR_PAGE28_Msk;
pub const SYSCFG_SWPR_PAGE29_Pos: u32 = 29;
pub const SYSCFG_SWPR_PAGE29_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE29_Pos;
pub const SYSCFG_SWPR_PAGE29: u32 = SYSCFG_SWPR_PAGE29_Msk;
pub const SYSCFG_SWPR_PAGE30_Pos: u32 = 30;
pub const SYSCFG_SWPR_PAGE30_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE30_Pos;
pub const SYSCFG_SWPR_PAGE30: u32 = SYSCFG_SWPR_PAGE30_Msk;
pub const SYSCFG_SWPR_PAGE31_Pos: u32 = 31;
pub const SYSCFG_SWPR_PAGE31_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE31_Pos;
pub const SYSCFG_SWPR_PAGE31: u32 = SYSCFG_SWPR_PAGE31_Msk;
pub const SYSCFG_SKR_KEY_Pos: u32 = 0;
pub const SYSCFG_SKR_KEY_Msk: u32 = 0xFF << SYSCFG_SKR_KEY_Pos;
pub const SYSCFG_SKR_KEY: u32 = SYSCFG_SKR_KEY_Msk;
pub const SYSCFG_RFDCR_RFTBSEL_Pos: u32 = 0;
pub const SYSCFG_RFDCR_RFTBSEL_Msk: u32 = 0x1 << SYSCFG_RFDCR_RFTBSEL_Pos;
pub const SYSCFG_RFDCR_RFTBSEL: u32 = SYSCFG_RFDCR_RFTBSEL_Msk;
pub const I2C_CR1_PE_Pos: u32 = 0;
pub const I2C_CR1_PE_Msk: u32 = 0x1 << I2C_CR1_PE_Pos;
pub const I2C_CR1_PE: u32 = I2C_CR1_PE_Msk;
pub const I2C_CR1_TXIE_Pos: u32 = 1;
pub const I2C_CR1_TXIE_Msk: u32 = 0x1 << I2C_CR1_TXIE_Pos;
pub const I2C_CR1_TXIE: u32 = I2C_CR1_TXIE_Msk;
pub const I2C_CR1_RXIE_Pos: u32 = 2;
pub const I2C_CR1_RXIE_Msk: u32 = 0x1 << I2C_CR1_RXIE_Pos;
pub const I2C_CR1_RXIE: u32 = I2C_CR1_RXIE_Msk;
pub const I2C_CR1_ADDRIE_Pos: u32 = 3;
pub const I2C_CR1_ADDRIE_Msk: u32 = 0x1 << I2C_CR1_ADDRIE_Pos;
pub const I2C_CR1_ADDRIE: u32 = I2C_CR1_ADDRIE_Msk;
pub const I2C_CR1_NACKIE_Pos: u32 = 4;
pub const I2C_CR1_NACKIE_Msk: u32 = 0x1 << I2C_CR1_NACKIE_Pos;
pub const I2C_CR1_NACKIE: u32 = I2C_CR1_NACKIE_Msk;
pub const I2C_CR1_STOPIE_Pos: u32 = 5;
pub const I2C_CR1_STOPIE_Msk: u32 = 0x1 << I2C_CR1_STOPIE_Pos;
pub const I2C_CR1_STOPIE: u32 = I2C_CR1_STOPIE_Msk;
pub const I2C_CR1_TCIE_Pos: u32 = 6;
pub const I2C_CR1_TCIE_Msk: u32 = 0x1 << I2C_CR1_TCIE_Pos;
pub const I2C_CR1_TCIE: u32 = I2C_CR1_TCIE_Msk;
pub const I2C_CR1_ERRIE_Pos: u32 = 7;
pub const I2C_CR1_ERRIE_Msk: u32 = 0x1 << I2C_CR1_ERRIE_Pos;
pub const I2C_CR1_ERRIE: u32 = I2C_CR1_ERRIE_Msk;
pub const I2C_CR1_DNF_Pos: u32 = 8;
pub const I2C_CR1_DNF_Msk: u32 = 0xF << I2C_CR1_DNF_Pos;
pub const I2C_CR1_DNF: u32 = I2C_CR1_DNF_Msk;
pub const I2C_CR1_ANFOFF_Pos: u32 = 12;
pub const I2C_CR1_ANFOFF_Msk: u32 = 0x1 << I2C_CR1_ANFOFF_Pos;
pub const I2C_CR1_ANFOFF: u32 = I2C_CR1_ANFOFF_Msk;
pub const I2C_CR1_TXDMAEN_Pos: u32 = 14;
pub const I2C_CR1_TXDMAEN_Msk: u32 = 0x1 << I2C_CR1_TXDMAEN_Pos;
pub const I2C_CR1_TXDMAEN: u32 = I2C_CR1_TXDMAEN_Msk;
pub const I2C_CR1_RXDMAEN_Pos: u32 = 15;
pub const I2C_CR1_RXDMAEN_Msk: u32 = 0x1 << I2C_CR1_RXDMAEN_Pos;
pub const I2C_CR1_RXDMAEN: u32 = I2C_CR1_RXDMAEN_Msk;
pub const I2C_CR1_SBC_Pos: u32 = 16;
pub const I2C_CR1_SBC_Msk: u32 = 0x1 << I2C_CR1_SBC_Pos;
pub const I2C_CR1_SBC: u32 = I2C_CR1_SBC_Msk;
pub const I2C_CR1_NOSTRETCH_Pos: u32 = 17;
pub const I2C_CR1_NOSTRETCH_Msk: u32 = 0x1 << I2C_CR1_NOSTRETCH_Pos;
pub const I2C_CR1_NOSTRETCH: u32 = I2C_CR1_NOSTRETCH_Msk;
pub const I2C_CR1_WUPEN_Pos: u32 = 18;
pub const I2C_CR1_WUPEN_Msk: u32 = 0x1 << I2C_CR1_WUPEN_Pos;
pub const I2C_CR1_WUPEN: u32 = I2C_CR1_WUPEN_Msk;
pub const I2C_CR1_GCEN_Pos: u32 = 19;
pub const I2C_CR1_GCEN_Msk: u32 = 0x1 << I2C_CR1_GCEN_Pos;
pub const I2C_CR1_GCEN: u32 = I2C_CR1_GCEN_Msk;
pub const I2C_CR1_SMBHEN_Pos: u32 = 20;
pub const I2C_CR1_SMBHEN_Msk: u32 = 0x1 << I2C_CR1_SMBHEN_Pos;
pub const I2C_CR1_SMBHEN: u32 = I2C_CR1_SMBHEN_Msk;
pub const I2C_CR1_SMBDEN_Pos: u32 = 21;
pub const I2C_CR1_SMBDEN_Msk: u32 = 0x1 << I2C_CR1_SMBDEN_Pos;
pub const I2C_CR1_SMBDEN: u32 = I2C_CR1_SMBDEN_Msk;
pub const I2C_CR1_ALERTEN_Pos: u32 = 22;
pub const I2C_CR1_ALERTEN_Msk: u32 = 0x1 << I2C_CR1_ALERTEN_Pos;
pub const I2C_CR1_ALERTEN: u32 = I2C_CR1_ALERTEN_Msk;
pub const I2C_CR1_PECEN_Pos: u32 = 23;
pub const I2C_CR1_PECEN_Msk: u32 = 0x1 << I2C_CR1_PECEN_Pos;
pub const I2C_CR1_PECEN: u32 = I2C_CR1_PECEN_Msk;
pub const I2C_CR2_SADD_Pos: u32 = 0;
pub const I2C_CR2_SADD_Msk: u32 = 0x3FF << I2C_CR2_SADD_Pos;
pub const I2C_CR2_SADD: u32 = I2C_CR2_SADD_Msk;
pub const I2C_CR2_RD_WRN_Pos: u32 = 10;
pub const I2C_CR2_RD_WRN_Msk: u32 = 0x1 << I2C_CR2_RD_WRN_Pos;
pub const I2C_CR2_RD_WRN: u32 = I2C_CR2_RD_WRN_Msk;
pub const I2C_CR2_ADD10_Pos: u32 = 11;
pub const I2C_CR2_ADD10_Msk: u32 = 0x1 << I2C_CR2_ADD10_Pos;
pub const I2C_CR2_ADD10: u32 = I2C_CR2_ADD10_Msk;
pub const I2C_CR2_HEAD10R_Pos: u32 = 12;
pub const I2C_CR2_HEAD10R_Msk: u32 = 0x1 << I2C_CR2_HEAD10R_Pos;
pub const I2C_CR2_HEAD10R: u32 = I2C_CR2_HEAD10R_Msk;
pub const I2C_CR2_START_Pos: u32 = 13;
pub const I2C_CR2_START_Msk: u32 = 0x1 << I2C_CR2_START_Pos;
pub const I2C_CR2_START: u32 = I2C_CR2_START_Msk;
pub const I2C_CR2_STOP_Pos: u32 = 14;
pub const I2C_CR2_STOP_Msk: u32 = 0x1 << I2C_CR2_STOP_Pos;
pub const I2C_CR2_STOP: u32 = I2C_CR2_STOP_Msk;
pub const I2C_CR2_NACK_Pos: u32 = 15;
pub const I2C_CR2_NACK_Msk: u32 = 0x1 << I2C_CR2_NACK_Pos;
pub const I2C_CR2_NACK: u32 = I2C_CR2_NACK_Msk;
pub const I2C_CR2_NBYTES_Pos: u32 = 16;
pub const I2C_CR2_NBYTES_Msk: u32 = 0xFF << I2C_CR2_NBYTES_Pos;
pub const I2C_CR2_NBYTES: u32 = I2C_CR2_NBYTES_Msk;
pub const I2C_CR2_RELOAD_Pos: u32 = 24;
pub const I2C_CR2_RELOAD_Msk: u32 = 0x1 << I2C_CR2_RELOAD_Pos;
pub const I2C_CR2_RELOAD: u32 = I2C_CR2_RELOAD_Msk;
pub const I2C_CR2_AUTOEND_Pos: u32 = 25;
pub const I2C_CR2_AUTOEND_Msk: u32 = 0x1 << I2C_CR2_AUTOEND_Pos;
pub const I2C_CR2_AUTOEND: u32 = I2C_CR2_AUTOEND_Msk;
pub const I2C_CR2_PECBYTE_Pos: u32 = 26;
pub const I2C_CR2_PECBYTE_Msk: u32 = 0x1 << I2C_CR2_PECBYTE_Pos;
pub const I2C_CR2_PECBYTE: u32 = I2C_CR2_PECBYTE_Msk;
pub const I2C_OAR1_OA1_Pos: u32 = 0;
pub const I2C_OAR1_OA1_Msk: u32 = 0x3FF << I2C_OAR1_OA1_Pos;
pub const I2C_OAR1_OA1: u32 = I2C_OAR1_OA1_Msk;
pub const I2C_OAR1_OA1MODE_Pos: u32 = 10;
pub const I2C_OAR1_OA1MODE_Msk: u32 = 0x1 << I2C_OAR1_OA1MODE_Pos;
pub const I2C_OAR1_OA1MODE: u32 = I2C_OAR1_OA1MODE_Msk;
pub const I2C_OAR1_OA1EN_Pos: u32 = 15;
pub const I2C_OAR1_OA1EN_Msk: u32 = 0x1 << I2C_OAR1_OA1EN_Pos;
pub const I2C_OAR1_OA1EN: u32 = I2C_OAR1_OA1EN_Msk;
pub const I2C_OAR2_OA2_Pos: u32 = 1;
pub const I2C_OAR2_OA2_Msk: u32 = 0x7F << I2C_OAR2_OA2_Pos;
pub const I2C_OAR2_OA2: u32 = I2C_OAR2_OA2_Msk;
pub const I2C_OAR2_OA2MSK_Pos: u32 = 8;
pub const I2C_OAR2_OA2MSK_Msk: u32 = 0x7 << I2C_OAR2_OA2MSK_Pos;
pub const I2C_OAR2_OA2MSK: u32 = I2C_OAR2_OA2MSK_Msk;
pub const I2C_OAR2_OA2NOMASK: u32 = 0x00000000;
pub const I2C_OAR2_OA2MASK01_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK01_Msk: u32 = 0x1 << I2C_OAR2_OA2MASK01_Pos;
pub const I2C_OAR2_OA2MASK01: u32 = I2C_OAR2_OA2MASK01_Msk;
pub const I2C_OAR2_OA2MASK02_Pos: u32 = 9;
pub const I2C_OAR2_OA2MASK02_Msk: u32 = 0x1 << I2C_OAR2_OA2MASK02_Pos;
pub const I2C_OAR2_OA2MASK02: u32 = I2C_OAR2_OA2MASK02_Msk;
pub const I2C_OAR2_OA2MASK03_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK03_Msk: u32 = 0x3 << I2C_OAR2_OA2MASK03_Pos;
pub const I2C_OAR2_OA2MASK03: u32 = I2C_OAR2_OA2MASK03_Msk;
pub const I2C_OAR2_OA2MASK04_Pos: u32 = 10;
pub const I2C_OAR2_OA2MASK04_Msk: u32 = 0x1 << I2C_OAR2_OA2MASK04_Pos;
pub const I2C_OAR2_OA2MASK04: u32 = I2C_OAR2_OA2MASK04_Msk;
pub const I2C_OAR2_OA2MASK05_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK05_Msk: u32 = 0x5 << I2C_OAR2_OA2MASK05_Pos;
pub const I2C_OAR2_OA2MASK05: u32 = I2C_OAR2_OA2MASK05_Msk;
pub const I2C_OAR2_OA2MASK06_Pos: u32 = 9;
pub const I2C_OAR2_OA2MASK06_Msk: u32 = 0x3 << I2C_OAR2_OA2MASK06_Pos;
pub const I2C_OAR2_OA2MASK06: u32 = I2C_OAR2_OA2MASK06_Msk;
pub const I2C_OAR2_OA2MASK07_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK07_Msk: u32 = 0x7 << I2C_OAR2_OA2MASK07_Pos;
pub const I2C_OAR2_OA2MASK07: u32 = I2C_OAR2_OA2MASK07_Msk;
pub const I2C_OAR2_OA2EN_Pos: u32 = 15;
pub const I2C_OAR2_OA2EN_Msk: u32 = 0x1 << I2C_OAR2_OA2EN_Pos;
pub const I2C_OAR2_OA2EN: u32 = I2C_OAR2_OA2EN_Msk;
pub const I2C_TIMINGR_SCLL_Pos: u32 = 0;
pub const I2C_TIMINGR_SCLL_Msk: u32 = 0xFF << I2C_TIMINGR_SCLL_Pos;
pub const I2C_TIMINGR_SCLL: u32 = I2C_TIMINGR_SCLL_Msk;
pub const I2C_TIMINGR_SCLH_Pos: u32 = 8;
pub const I2C_TIMINGR_SCLH_Msk: u32 = 0xFF << I2C_TIMINGR_SCLH_Pos;
pub const I2C_TIMINGR_SCLH: u32 = I2C_TIMINGR_SCLH_Msk;
pub const I2C_TIMINGR_SDADEL_Pos: u32 = 16;
pub const I2C_TIMINGR_SDADEL_Msk: u32 = 0xF << I2C_TIMINGR_SDADEL_Pos;
pub const I2C_TIMINGR_SDADEL: u32 = I2C_TIMINGR_SDADEL_Msk;
pub const I2C_TIMINGR_SCLDEL_Pos: u32 = 20;
pub const I2C_TIMINGR_SCLDEL_Msk: u32 = 0xF << I2C_TIMINGR_SCLDEL_Pos;
pub const I2C_TIMINGR_SCLDEL: u32 = I2C_TIMINGR_SCLDEL_Msk;
pub const I2C_TIMINGR_PRESC_Pos: u32 = 28;
pub const I2C_TIMINGR_PRESC_Msk: u32 = 0xF << I2C_TIMINGR_PRESC_Pos;
pub const I2C_TIMINGR_PRESC: u32 = I2C_TIMINGR_PRESC_Msk;
pub const I2C_TIMEOUTR_TIMEOUTA_Pos: u32 = 0;
pub const I2C_TIMEOUTR_TIMEOUTA_Msk: u32 = 0xFFF << I2C_TIMEOUTR_TIMEOUTA_Pos;
pub const I2C_TIMEOUTR_TIMEOUTA: u32 = I2C_TIMEOUTR_TIMEOUTA_Msk;
pub const I2C_TIMEOUTR_TIDLE_Pos: u32 = 12;
pub const I2C_TIMEOUTR_TIDLE_Msk: u32 = 0x1 << I2C_TIMEOUTR_TIDLE_Pos;
pub const I2C_TIMEOUTR_TIDLE: u32 = I2C_TIMEOUTR_TIDLE_Msk;
pub const I2C_TIMEOUTR_TIMOUTEN_Pos: u32 = 15;
pub const I2C_TIMEOUTR_TIMOUTEN_Msk: u32 = 0x1 << I2C_TIMEOUTR_TIMOUTEN_Pos;
pub const I2C_TIMEOUTR_TIMOUTEN: u32 = I2C_TIMEOUTR_TIMOUTEN_Msk;
pub const I2C_TIMEOUTR_TIMEOUTB_Pos: u32 = 16;
pub const I2C_TIMEOUTR_TIMEOUTB_Msk: u32 = 0xFFF << I2C_TIMEOUTR_TIMEOUTB_Pos;
pub const I2C_TIMEOUTR_TIMEOUTB: u32 = I2C_TIMEOUTR_TIMEOUTB_Msk;
pub const I2C_TIMEOUTR_TEXTEN_Pos: u32 = 31;
pub const I2C_TIMEOUTR_TEXTEN_Msk: u32 = 0x1 << I2C_TIMEOUTR_TEXTEN_Pos;
pub const I2C_TIMEOUTR_TEXTEN: u32 = I2C_TIMEOUTR_TEXTEN_Msk;
pub const I2C_ISR_TXE_Pos: u32 = 0;
pub const I2C_ISR_TXE_Msk: u32 = 0x1 << I2C_ISR_TXE_Pos;
pub const I2C_ISR_TXE: u32 = I2C_ISR_TXE_Msk;
pub const I2C_ISR_TXIS_Pos: u32 = 1;
pub const I2C_ISR_TXIS_Msk: u32 = 0x1 << I2C_ISR_TXIS_Pos;
pub const I2C_ISR_TXIS: u32 = I2C_ISR_TXIS_Msk;
pub const I2C_ISR_RXNE_Pos: u32 = 2;
pub const I2C_ISR_RXNE_Msk: u32 = 0x1 << I2C_ISR_RXNE_Pos;
pub const I2C_ISR_RXNE: u32 = I2C_ISR_RXNE_Msk;
pub const I2C_ISR_ADDR_Pos: u32 = 3;
pub const I2C_ISR_ADDR_Msk: u32 = 0x1 << I2C_ISR_ADDR_Pos;
pub const I2C_ISR_ADDR: u32 = I2C_ISR_ADDR_Msk;
pub const I2C_ISR_NACKF_Pos: u32 = 4;
pub const I2C_ISR_NACKF_Msk: u32 = 0x1 << I2C_ISR_NACKF_Pos;
pub const I2C_ISR_NACKF: u32 = I2C_ISR_NACKF_Msk;
pub const I2C_ISR_STOPF_Pos: u32 = 5;
pub const I2C_ISR_STOPF_Msk: u32 = 0x1 << I2C_ISR_STOPF_Pos;
pub const I2C_ISR_STOPF: u32 = I2C_ISR_STOPF_Msk;
pub const I2C_ISR_TC_Pos: u32 = 6;
pub const I2C_ISR_TC_Msk: u32 = 0x1 << I2C_ISR_TC_Pos;
pub const I2C_ISR_TC: u32 = I2C_ISR_TC_Msk;
pub const I2C_ISR_TCR_Pos: u32 = 7;
pub const I2C_ISR_TCR_Msk: u32 = 0x1 << I2C_ISR_TCR_Pos;
pub const I2C_ISR_TCR: u32 = I2C_ISR_TCR_Msk;
pub const I2C_ISR_BERR_Pos: u32 = 8;
pub const I2C_ISR_BERR_Msk: u32 = 0x1 << I2C_ISR_BERR_Pos;
pub const I2C_ISR_BERR: u32 = I2C_ISR_BERR_Msk;
pub const I2C_ISR_ARLO_Pos: u32 = 9;
pub const I2C_ISR_ARLO_Msk: u32 = 0x1 << I2C_ISR_ARLO_Pos;
pub const I2C_ISR_ARLO: u32 = I2C_ISR_ARLO_Msk;
pub const I2C_ISR_OVR_Pos: u32 = 10;
pub const I2C_ISR_OVR_Msk: u32 = 0x1 << I2C_ISR_OVR_Pos;
pub const I2C_ISR_OVR: u32 = I2C_ISR_OVR_Msk;
pub const I2C_ISR_PECERR_Pos: u32 = 11;
pub const I2C_ISR_PECERR_Msk: u32 = 0x1 << I2C_ISR_PECERR_Pos;
pub const I2C_ISR_PECERR: u32 = I2C_ISR_PECERR_Msk;
pub const I2C_ISR_TIMEOUT_Pos: u32 = 12;
pub const I2C_ISR_TIMEOUT_Msk: u32 = 0x1 << I2C_ISR_TIMEOUT_Pos;
pub const I2C_ISR_TIMEOUT: u32 = I2C_ISR_TIMEOUT_Msk;
pub const I2C_ISR_ALERT_Pos: u32 = 13;
pub const I2C_ISR_ALERT_Msk: u32 = 0x1 << I2C_ISR_ALERT_Pos;
pub const I2C_ISR_ALERT: u32 = I2C_ISR_ALERT_Msk;
pub const I2C_ISR_BUSY_Pos: u32 = 15;
pub const I2C_ISR_BUSY_Msk: u32 = 0x1 << I2C_ISR_BUSY_Pos;
pub const I2C_ISR_BUSY: u32 = I2C_ISR_BUSY_Msk;
pub const I2C_ISR_DIR_Pos: u32 = 16;
pub const I2C_ISR_DIR_Msk: u32 = 0x1 << I2C_ISR_DIR_Pos;
pub const I2C_ISR_DIR: u32 = I2C_ISR_DIR_Msk;
pub const I2C_ISR_ADDCODE_Pos: u32 = 17;
pub const I2C_ISR_ADDCODE_Msk: u32 = 0x7F << I2C_ISR_ADDCODE_Pos;
pub const I2C_ISR_ADDCODE: u32 = I2C_ISR_ADDCODE_Msk;
pub const I2C_ICR_ADDRCF_Pos: u32 = 3;
pub const I2C_ICR_ADDRCF_Msk: u32 = 0x1 << I2C_ICR_ADDRCF_Pos;
pub const I2C_ICR_ADDRCF: u32 = I2C_ICR_ADDRCF_Msk;
pub const I2C_ICR_NACKCF_Pos: u32 = 4;
pub const I2C_ICR_NACKCF_Msk: u32 = 0x1 << I2C_ICR_NACKCF_Pos;
pub const I2C_ICR_NACKCF: u32 = I2C_ICR_NACKCF_Msk;
pub const I2C_ICR_STOPCF_Pos: u32 = 5;
pub const I2C_ICR_STOPCF_Msk: u32 = 0x1 << I2C_ICR_STOPCF_Pos;
pub const I2C_ICR_STOPCF: u32 = I2C_ICR_STOPCF_Msk;
pub const I2C_ICR_BERRCF_Pos: u32 = 8;
pub const I2C_ICR_BERRCF_Msk: u32 = 0x1 << I2C_ICR_BERRCF_Pos;
pub const I2C_ICR_BERRCF: u32 = I2C_ICR_BERRCF_Msk;
pub const I2C_ICR_ARLOCF_Pos: u32 = 9;
pub const I2C_ICR_ARLOCF_Msk: u32 = 0x1 << I2C_ICR_ARLOCF_Pos;
pub const I2C_ICR_ARLOCF: u32 = I2C_ICR_ARLOCF_Msk;
pub const I2C_ICR_OVRCF_Pos: u32 = 10;
pub const I2C_ICR_OVRCF_Msk: u32 = 0x1 << I2C_ICR_OVRCF_Pos;
pub const I2C_ICR_OVRCF: u32 = I2C_ICR_OVRCF_Msk;
pub const I2C_ICR_PECCF_Pos: u32 = 11;
pub const I2C_ICR_PECCF_Msk: u32 = 0x1 << I2C_ICR_PECCF_Pos;
pub const I2C_ICR_PECCF: u32 = I2C_ICR_PECCF_Msk;
pub const I2C_ICR_TIMOUTCF_Pos: u32 = 12;
pub const I2C_ICR_TIMOUTCF_Msk: u32 = 0x1 << I2C_ICR_TIMOUTCF_Pos;
pub const I2C_ICR_TIMOUTCF: u32 = I2C_ICR_TIMOUTCF_Msk;
pub const I2C_ICR_ALERTCF_Pos: u32 = 13;
pub const I2C_ICR_ALERTCF_Msk: u32 = 0x1 << I2C_ICR_ALERTCF_Pos;
pub const I2C_ICR_ALERTCF: u32 = I2C_ICR_ALERTCF_Msk;
pub const I2C_PECR_PEC_Pos: u32 = 0;
pub const I2C_PECR_PEC_Msk: u32 = 0xFF << I2C_PECR_PEC_Pos;
pub const I2C_PECR_PEC: u32 = I2C_PECR_PEC_Msk;
pub const I2C_RXDR_RXDATA_Pos: u32 = 0;
pub const I2C_RXDR_RXDATA_Msk: u32 = 0xFF << I2C_RXDR_RXDATA_Pos;
pub const I2C_RXDR_RXDATA: u32 = I2C_RXDR_RXDATA_Msk;
pub const I2C_TXDR_TXDATA_Pos: u32 = 0;
pub const I2C_TXDR_TXDATA_Msk: u32 = 0xFF << I2C_TXDR_TXDATA_Pos;
pub const I2C_TXDR_TXDATA: u32 = I2C_TXDR_TXDATA_Msk;
pub const IWDG_KR_KEY_Pos: u32 = 0;
pub const IWDG_KR_KEY_Msk: u32 = 0xFFFF << IWDG_KR_KEY_Pos;
pub const IWDG_KR_KEY: u32 = IWDG_KR_KEY_Msk;
pub const IWDG_PR_PR_Pos: u32 = 0;
pub const IWDG_PR_PR_Msk: u32 = 0x7 << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR: u32 = IWDG_PR_PR_Msk;
pub const IWDG_PR_PR_0: u32 = 0x1 << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR_1: u32 = 0x2 << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR_2: u32 = 0x4 << IWDG_PR_PR_Pos;
pub const IWDG_RLR_RL_Pos: u32 = 0;
pub const IWDG_RLR_RL_Msk: u32 = 0xFFF << IWDG_RLR_RL_Pos;
pub const IWDG_RLR_RL: u32 = IWDG_RLR_RL_Msk;
pub const IWDG_SR_PVU_Pos: u32 = 0;
pub const IWDG_SR_PVU_Msk: u32 = 0x1 << IWDG_SR_PVU_Pos;
pub const IWDG_SR_PVU: u32 = IWDG_SR_PVU_Msk;
pub const IWDG_SR_RVU_Pos: u32 = 1;
pub const IWDG_SR_RVU_Msk: u32 = 0x1 << IWDG_SR_RVU_Pos;
pub const IWDG_SR_RVU: u32 = IWDG_SR_RVU_Msk;
pub const IWDG_SR_WVU_Pos: u32 = 2;
pub const IWDG_SR_WVU_Msk: u32 = 0x1 << IWDG_SR_WVU_Pos;
pub const IWDG_SR_WVU: u32 = IWDG_SR_WVU_Msk;
pub const IWDG_WINR_WIN_Pos: u32 = 0;
pub const IWDG_WINR_WIN_Msk: u32 = 0xFFF << IWDG_WINR_WIN_Pos;
pub const IWDG_WINR_WIN: u32 = IWDG_WINR_WIN_Msk;
pub const VREFBUF_CSR_ENVR_Pos: u32 = 0;
pub const VREFBUF_CSR_ENVR_Msk: u32 = 0x1 << VREFBUF_CSR_ENVR_Pos;
pub const VREFBUF_CSR_ENVR: u32 = VREFBUF_CSR_ENVR_Msk;
pub const VREFBUF_CSR_HIZ_Pos: u32 = 1;
pub const VREFBUF_CSR_HIZ_Msk: u32 = 0x1 << VREFBUF_CSR_HIZ_Pos;
pub const VREFBUF_CSR_HIZ: u32 = VREFBUF_CSR_HIZ_Msk;
pub const VREFBUF_CSR_VRS_Pos: u32 = 2;
pub const VREFBUF_CSR_VRS_Msk: u32 = 0x1 << VREFBUF_CSR_VRS_Pos;
pub const VREFBUF_CSR_VRS: u32 = VREFBUF_CSR_VRS_Msk;
pub const VREFBUF_CSR_VRR_Pos: u32 = 3;
pub const VREFBUF_CSR_VRR_Msk: u32 = 0x1 << VREFBUF_CSR_VRR_Pos;
pub const VREFBUF_CSR_VRR: u32 = VREFBUF_CSR_VRR_Msk;
pub const VREFBUF_CCR_TRIM_Pos: u32 = 0;
pub const VREFBUF_CCR_TRIM_Msk: u32 = 0x3F << VREFBUF_CCR_TRIM_Pos;
pub const VREFBUF_CCR_TRIM: u32 = VREFBUF_CCR_TRIM_Msk;
pub const WWDG_CR_T_Pos: u32 = 0;
pub const WWDG_CR_T_Msk: u32 = 0x7F << WWDG_CR_T_Pos;
pub const WWDG_CR_T: u32 = WWDG_CR_T_Msk;
pub const WWDG_CR_T_0: u32 = 0x01 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_1: u32 = 0x02 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_2: u32 = 0x04 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_3: u32 = 0x08 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_4: u32 = 0x10 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_5: u32 = 0x20 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_6: u32 = 0x40 << WWDG_CR_T_Pos;
pub const WWDG_CR_WDGA_Pos: u32 = 7;
pub const WWDG_CR_WDGA_Msk: u32 = 0x1 << WWDG_CR_WDGA_Pos;
pub const WWDG_CR_WDGA: u32 = WWDG_CR_WDGA_Msk;
pub const WWDG_CFR_W_Pos: u32 = 0;
pub const WWDG_CFR_W_Msk: u32 = 0x7F << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W: u32 = WWDG_CFR_W_Msk;
pub const WWDG_CFR_W_0: u32 = 0x01 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_1: u32 = 0x02 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_2: u32 = 0x04 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_3: u32 = 0x08 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_4: u32 = 0x10 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_5: u32 = 0x20 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_6: u32 = 0x40 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_EWI_Pos: u32 = 9;
pub const WWDG_CFR_EWI_Msk: u32 = 0x1 << WWDG_CFR_EWI_Pos;
pub const WWDG_CFR_EWI: u32 = WWDG_CFR_EWI_Msk;
pub const WWDG_CFR_WDGTB_Pos: u32 = 11;
pub const WWDG_CFR_WDGTB_Msk: u32 = 0x7 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_WDGTB: u32 = WWDG_CFR_WDGTB_Msk;
pub const WWDG_CFR_WDGTB_0: u32 = 0x1 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_WDGTB_1: u32 = 0x2 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_WDGTB_2: u32 = 0x4 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_SR_EWIF_Pos: u32 = 0;
pub const WWDG_SR_EWIF_Msk: u32 = 0x1 << WWDG_SR_EWIF_Pos;
pub const WWDG_SR_EWIF: u32 = WWDG_SR_EWIF_Msk;
pub const DBGMCU_IDCODE_DEV_ID_Pos: u32 = 0;
pub const DBGMCU_IDCODE_DEV_ID_Msk: u32 = 0xFFF << DBGMCU_IDCODE_DEV_ID_Pos;
pub const DBGMCU_IDCODE_DEV_ID: u32 = DBGMCU_IDCODE_DEV_ID_Msk;
pub const DBGMCU_IDCODE_REV_ID_Pos: u32 = 16;
pub const DBGMCU_IDCODE_REV_ID_Msk: u32 = 0xFFFF << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID: u32 = DBGMCU_IDCODE_REV_ID_Msk;
pub const DBGMCU_CR_DBG_SLEEP_Pos: u32 = 0;
pub const DBGMCU_CR_DBG_SLEEP_Msk: u32 = 0x1 << DBGMCU_CR_DBG_SLEEP_Pos;
pub const DBGMCU_CR_DBG_SLEEP: u32 = DBGMCU_CR_DBG_SLEEP_Msk;
pub const DBGMCU_CR_DBG_STOP_Pos: u32 = 1;
pub const DBGMCU_CR_DBG_STOP_Msk: u32 = 0x1 << DBGMCU_CR_DBG_STOP_Pos;
pub const DBGMCU_CR_DBG_STOP: u32 = DBGMCU_CR_DBG_STOP_Msk;
pub const DBGMCU_CR_DBG_STANDBY_Pos: u32 = 2;
pub const DBGMCU_CR_DBG_STANDBY_Msk: u32 = 0x1 << DBGMCU_CR_DBG_STANDBY_Pos;
pub const DBGMCU_CR_DBG_STANDBY: u32 = DBGMCU_CR_DBG_STANDBY_Msk;
pub const DBGMCU_APB1FZR1_DBG_TIM2_STOP_Pos: u32 = 0;
pub const DBGMCU_APB1FZR1_DBG_TIM2_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_TIM2_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_TIM2_STOP: u32 = DBGMCU_APB1FZR1_DBG_TIM2_STOP_Msk;
pub const DBGMCU_APB1FZR1_DBG_RTC_STOP_Pos: u32 = 10;
pub const DBGMCU_APB1FZR1_DBG_RTC_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_RTC_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_RTC_STOP: u32 = DBGMCU_APB1FZR1_DBG_RTC_STOP_Msk;
pub const DBGMCU_APB1FZR1_DBG_WWDG_STOP_Pos: u32 = 11;
pub const DBGMCU_APB1FZR1_DBG_WWDG_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_WWDG_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_WWDG_STOP: u32 = DBGMCU_APB1FZR1_DBG_WWDG_STOP_Msk;
pub const DBGMCU_APB1FZR1_DBG_IWDG_STOP_Pos: u32 = 12;
pub const DBGMCU_APB1FZR1_DBG_IWDG_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_IWDG_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_IWDG_STOP: u32 = DBGMCU_APB1FZR1_DBG_IWDG_STOP_Msk;
pub const DBGMCU_APB1FZR1_DBG_I2C1_STOP_Pos: u32 = 21;
pub const DBGMCU_APB1FZR1_DBG_I2C1_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_I2C1_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_I2C1_STOP: u32 = DBGMCU_APB1FZR1_DBG_I2C1_STOP_Msk;
pub const DBGMCU_APB1FZR1_DBG_I2C2_STOP_Pos: u32 = 22;
pub const DBGMCU_APB1FZR1_DBG_I2C2_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_I2C2_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_I2C2_STOP: u32 = DBGMCU_APB1FZR1_DBG_I2C2_STOP_Msk;
pub const DBGMCU_APB1FZR1_DBG_I2C3_STOP_Pos: u32 = 23;
pub const DBGMCU_APB1FZR1_DBG_I2C3_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_I2C3_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_I2C3_STOP: u32 = DBGMCU_APB1FZR1_DBG_I2C3_STOP_Msk;
pub const DBGMCU_APB1FZR1_DBG_LPTIM1_STOP_Pos: u32 = 31;
pub const DBGMCU_APB1FZR1_DBG_LPTIM1_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_LPTIM1_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_LPTIM1_STOP: u32 = DBGMCU_APB1FZR1_DBG_LPTIM1_STOP_Msk;
pub const DBGMCU_APB1FZR2_DBG_LPTIM2_STOP_Pos: u32 = 5;
pub const DBGMCU_APB1FZR2_DBG_LPTIM2_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR2_DBG_LPTIM2_STOP_Pos;
pub const DBGMCU_APB1FZR2_DBG_LPTIM2_STOP: u32 = DBGMCU_APB1FZR2_DBG_LPTIM2_STOP_Msk;
pub const DBGMCU_APB1FZR2_DBG_LPTIM3_STOP_Pos: u32 = 6;
pub const DBGMCU_APB1FZR2_DBG_LPTIM3_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR2_DBG_LPTIM3_STOP_Pos;
pub const DBGMCU_APB1FZR2_DBG_LPTIM3_STOP: u32 = DBGMCU_APB1FZR2_DBG_LPTIM3_STOP_Msk;
pub const DBGMCU_APB2FZR_DBG_TIM1_STOP_Pos: u32 = 11;
pub const DBGMCU_APB2FZR_DBG_TIM1_STOP_Msk: u32 = 0x1 << DBGMCU_APB2FZR_DBG_TIM1_STOP_Pos;
pub const DBGMCU_APB2FZR_DBG_TIM1_STOP: u32 = DBGMCU_APB2FZR_DBG_TIM1_STOP_Msk;
pub const DBGMCU_APB2FZR_DBG_TIM16_STOP_Pos: u32 = 17;
pub const DBGMCU_APB2FZR_DBG_TIM16_STOP_Msk: u32 = 0x1 << DBGMCU_APB2FZR_DBG_TIM16_STOP_Pos;
pub const DBGMCU_APB2FZR_DBG_TIM16_STOP: u32 = DBGMCU_APB2FZR_DBG_TIM16_STOP_Msk;
pub const DBGMCU_APB2FZR_DBG_TIM17_STOP_Pos: u32 = 18;
pub const DBGMCU_APB2FZR_DBG_TIM17_STOP_Msk: u32 = 0x1 << DBGMCU_APB2FZR_DBG_TIM17_STOP_Pos;
pub const DBGMCU_APB2FZR_DBG_TIM17_STOP: u32 = DBGMCU_APB2FZR_DBG_TIM17_STOP_Msk;
pub const TIM_CR1_CEN_Pos: u32 = 0;
pub const TIM_CR1_CEN_Msk: u32 = 0x1 << TIM_CR1_CEN_Pos;
pub const TIM_CR1_CEN: u32 = TIM_CR1_CEN_Msk;
pub const TIM_CR1_UDIS_Pos: u32 = 1;
pub const TIM_CR1_UDIS_Msk: u32 = 0x1 << TIM_CR1_UDIS_Pos;
pub const TIM_CR1_UDIS: u32 = TIM_CR1_UDIS_Msk;
pub const TIM_CR1_URS_Pos: u32 = 2;
pub const TIM_CR1_URS_Msk: u32 = 0x1 << TIM_CR1_URS_Pos;
pub const TIM_CR1_URS: u32 = TIM_CR1_URS_Msk;
pub const TIM_CR1_OPM_Pos: u32 = 3;
pub const TIM_CR1_OPM_Msk: u32 = 0x1 << TIM_CR1_OPM_Pos;
pub const TIM_CR1_OPM: u32 = TIM_CR1_OPM_Msk;
pub const TIM_CR1_DIR_Pos: u32 = 4;
pub const TIM_CR1_DIR_Msk: u32 = 0x1 << TIM_CR1_DIR_Pos;
pub const TIM_CR1_DIR: u32 = TIM_CR1_DIR_Msk;
pub const TIM_CR1_CMS_Pos: u32 = 5;
pub const TIM_CR1_CMS_Msk: u32 = 0x3 << TIM_CR1_CMS_Pos;
pub const TIM_CR1_CMS: u32 = TIM_CR1_CMS_Msk;
pub const TIM_CR1_CMS_0: u32 = 0x1 << TIM_CR1_CMS_Pos;
pub const TIM_CR1_CMS_1: u32 = 0x2 << TIM_CR1_CMS_Pos;
pub const TIM_CR1_ARPE_Pos: u32 = 7;
pub const TIM_CR1_ARPE_Msk: u32 = 0x1 << TIM_CR1_ARPE_Pos;
pub const TIM_CR1_ARPE: u32 = TIM_CR1_ARPE_Msk;
pub const TIM_CR1_CKD_Pos: u32 = 8;
pub const TIM_CR1_CKD_Msk: u32 = 0x3 << TIM_CR1_CKD_Pos;
pub const TIM_CR1_CKD: u32 = TIM_CR1_CKD_Msk;
pub const TIM_CR1_CKD_0: u32 = 0x1 << TIM_CR1_CKD_Pos;
pub const TIM_CR1_CKD_1: u32 = 0x2 << TIM_CR1_CKD_Pos;
pub const TIM_CR1_UIFREMAP_Pos: u32 = 11;
pub const TIM_CR1_UIFREMAP_Msk: u32 = 0x1 << TIM_CR1_UIFREMAP_Pos;
pub const TIM_CR1_UIFREMAP: u32 = TIM_CR1_UIFREMAP_Msk;
pub const TIM_CR2_CCPC_Pos: u32 = 0;
pub const TIM_CR2_CCPC_Msk: u32 = 0x1 << TIM_CR2_CCPC_Pos;
pub const TIM_CR2_CCPC: u32 = TIM_CR2_CCPC_Msk;
pub const TIM_CR2_CCUS_Pos: u32 = 2;
pub const TIM_CR2_CCUS_Msk: u32 = 0x1 << TIM_CR2_CCUS_Pos;
pub const TIM_CR2_CCUS: u32 = TIM_CR2_CCUS_Msk;
pub const TIM_CR2_CCDS_Pos: u32 = 3;
pub const TIM_CR2_CCDS_Msk: u32 = 0x1 << TIM_CR2_CCDS_Pos;
pub const TIM_CR2_CCDS: u32 = TIM_CR2_CCDS_Msk;
pub const TIM_CR2_MMS_Pos: u32 = 4;
pub const TIM_CR2_MMS_Msk: u32 = 0x7 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS: u32 = TIM_CR2_MMS_Msk;
pub const TIM_CR2_MMS_0: u32 = 0x1 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS_1: u32 = 0x2 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS_2: u32 = 0x4 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_TI1S_Pos: u32 = 7;
pub const TIM_CR2_TI1S_Msk: u32 = 0x1 << TIM_CR2_TI1S_Pos;
pub const TIM_CR2_TI1S: u32 = TIM_CR2_TI1S_Msk;
pub const TIM_CR2_OIS1_Pos: u32 = 8;
pub const TIM_CR2_OIS1_Msk: u32 = 0x1 << TIM_CR2_OIS1_Pos;
pub const TIM_CR2_OIS1: u32 = TIM_CR2_OIS1_Msk;
pub const TIM_CR2_OIS1N_Pos: u32 = 9;
pub const TIM_CR2_OIS1N_Msk: u32 = 0x1 << TIM_CR2_OIS1N_Pos;
pub const TIM_CR2_OIS1N: u32 = TIM_CR2_OIS1N_Msk;
pub const TIM_CR2_OIS2_Pos: u32 = 10;
pub const TIM_CR2_OIS2_Msk: u32 = 0x1 << TIM_CR2_OIS2_Pos;
pub const TIM_CR2_OIS2: u32 = TIM_CR2_OIS2_Msk;
pub const TIM_CR2_OIS2N_Pos: u32 = 11;
pub const TIM_CR2_OIS2N_Msk: u32 = 0x1 << TIM_CR2_OIS2N_Pos;
pub const TIM_CR2_OIS2N: u32 = TIM_CR2_OIS2N_Msk;
pub const TIM_CR2_OIS3_Pos: u32 = 12;
pub const TIM_CR2_OIS3_Msk: u32 = 0x1 << TIM_CR2_OIS3_Pos;
pub const TIM_CR2_OIS3: u32 = TIM_CR2_OIS3_Msk;
pub const TIM_CR2_OIS3N_Pos: u32 = 13;
pub const TIM_CR2_OIS3N_Msk: u32 = 0x1 << TIM_CR2_OIS3N_Pos;
pub const TIM_CR2_OIS3N: u32 = TIM_CR2_OIS3N_Msk;
pub const TIM_CR2_OIS4_Pos: u32 = 14;
pub const TIM_CR2_OIS4_Msk: u32 = 0x1 << TIM_CR2_OIS4_Pos;
pub const TIM_CR2_OIS4: u32 = TIM_CR2_OIS4_Msk;
pub const TIM_CR2_OIS5_Pos: u32 = 16;
pub const TIM_CR2_OIS5_Msk: u32 = 0x1 << TIM_CR2_OIS5_Pos;
pub const TIM_CR2_OIS5: u32 = TIM_CR2_OIS5_Msk;
pub const TIM_CR2_OIS6_Pos: u32 = 18;
pub const TIM_CR2_OIS6_Msk: u32 = 0x1 << TIM_CR2_OIS6_Pos;
pub const TIM_CR2_OIS6: u32 = TIM_CR2_OIS6_Msk;
pub const TIM_CR2_MMS2_Pos: u32 = 20;
pub const TIM_CR2_MMS2_Msk: u32 = 0xF << TIM_CR2_MMS2_Pos;
pub const TIM_CR2_MMS2: u32 = TIM_CR2_MMS2_Msk;
pub const TIM_CR2_MMS2_0: u32 = 0x1 << TIM_CR2_MMS2_Pos;
pub const TIM_CR2_MMS2_1: u32 = 0x2 << TIM_CR2_MMS2_Pos;
pub const TIM_CR2_MMS2_2: u32 = 0x4 << TIM_CR2_MMS2_Pos;
pub const TIM_CR2_MMS2_3: u32 = 0x8 << TIM_CR2_MMS2_Pos;
pub const TIM_SMCR_SMS_Pos: u32 = 0;
pub const TIM_SMCR_SMS_Msk: u32 = 0x10007 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS: u32 = TIM_SMCR_SMS_Msk;
pub const TIM_SMCR_SMS_0: u32 = 0x00001 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS_1: u32 = 0x00002 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS_2: u32 = 0x00004 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS_3: u32 = 0x10000 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_OCCS_Pos: u32 = 3;
pub const TIM_SMCR_OCCS_Msk: u32 = 0x1 << TIM_SMCR_OCCS_Pos;
pub const TIM_SMCR_OCCS: u32 = TIM_SMCR_OCCS_Msk;
pub const TIM_SMCR_TS_Pos: u32 = 4;
pub const TIM_SMCR_TS_Msk: u32 = 0x30007 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS: u32 = TIM_SMCR_TS_Msk;
pub const TIM_SMCR_TS_0: u32 = 0x00001 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS_1: u32 = 0x00002 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS_2: u32 = 0x00004 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS_3: u32 = 0x10000 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS_4: u32 = 0x20000 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_MSM_Pos: u32 = 7;
pub const TIM_SMCR_MSM_Msk: u32 = 0x1 << TIM_SMCR_MSM_Pos;
pub const TIM_SMCR_MSM: u32 = TIM_SMCR_MSM_Msk;
pub const TIM_SMCR_ETF_Pos: u32 = 8;
pub const TIM_SMCR_ETF_Msk: u32 = 0xF << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF: u32 = TIM_SMCR_ETF_Msk;
pub const TIM_SMCR_ETF_0: u32 = 0x1 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF_1: u32 = 0x2 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF_2: u32 = 0x4 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF_3: u32 = 0x8 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETPS_Pos: u32 = 12;
pub const TIM_SMCR_ETPS_Msk: u32 = 0x3 << TIM_SMCR_ETPS_Pos;
pub const TIM_SMCR_ETPS: u32 = TIM_SMCR_ETPS_Msk;
pub const TIM_SMCR_ETPS_0: u32 = 0x1 << TIM_SMCR_ETPS_Pos;
pub const TIM_SMCR_ETPS_1: u32 = 0x2 << TIM_SMCR_ETPS_Pos;
pub const TIM_SMCR_ECE_Pos: u32 = 14;
pub const TIM_SMCR_ECE_Msk: u32 = 0x1 << TIM_SMCR_ECE_Pos;
pub const TIM_SMCR_ECE: u32 = TIM_SMCR_ECE_Msk;
pub const TIM_SMCR_ETP_Pos: u32 = 15;
pub const TIM_SMCR_ETP_Msk: u32 = 0x1 << TIM_SMCR_ETP_Pos;
pub const TIM_SMCR_ETP: u32 = TIM_SMCR_ETP_Msk;
pub const TIM_DIER_UIE_Pos: u32 = 0;
pub const TIM_DIER_UIE_Msk: u32 = 0x1 << TIM_DIER_UIE_Pos;
pub const TIM_DIER_UIE: u32 = TIM_DIER_UIE_Msk;
pub const TIM_DIER_CC1IE_Pos: u32 = 1;
pub const TIM_DIER_CC1IE_Msk: u32 = 0x1 << TIM_DIER_CC1IE_Pos;
pub const TIM_DIER_CC1IE: u32 = TIM_DIER_CC1IE_Msk;
pub const TIM_DIER_CC2IE_Pos: u32 = 2;
pub const TIM_DIER_CC2IE_Msk: u32 = 0x1 << TIM_DIER_CC2IE_Pos;
pub const TIM_DIER_CC2IE: u32 = TIM_DIER_CC2IE_Msk;
pub const TIM_DIER_CC3IE_Pos: u32 = 3;
pub const TIM_DIER_CC3IE_Msk: u32 = 0x1 << TIM_DIER_CC3IE_Pos;
pub const TIM_DIER_CC3IE: u32 = TIM_DIER_CC3IE_Msk;
pub const TIM_DIER_CC4IE_Pos: u32 = 4;
pub const TIM_DIER_CC4IE_Msk: u32 = 0x1 << TIM_DIER_CC4IE_Pos;
pub const TIM_DIER_CC4IE: u32 = TIM_DIER_CC4IE_Msk;
pub const TIM_DIER_COMIE_Pos: u32 = 5;
pub const TIM_DIER_COMIE_Msk: u32 = 0x1 << TIM_DIER_COMIE_Pos;
pub const TIM_DIER_COMIE: u32 = TIM_DIER_COMIE_Msk;
pub const TIM_DIER_TIE_Pos: u32 = 6;
pub const TIM_DIER_TIE_Msk: u32 = 0x1 << TIM_DIER_TIE_Pos;
pub const TIM_DIER_TIE: u32 = TIM_DIER_TIE_Msk;
pub const TIM_DIER_BIE_Pos: u32 = 7;
pub const TIM_DIER_BIE_Msk: u32 = 0x1 << TIM_DIER_BIE_Pos;
pub const TIM_DIER_BIE: u32 = TIM_DIER_BIE_Msk;
pub const TIM_DIER_UDE_Pos: u32 = 8;
pub const TIM_DIER_UDE_Msk: u32 = 0x1 << TIM_DIER_UDE_Pos;
pub const TIM_DIER_UDE: u32 = TIM_DIER_UDE_Msk;
pub const TIM_DIER_CC1DE_Pos: u32 = 9;
pub const TIM_DIER_CC1DE_Msk: u32 = 0x1 << TIM_DIER_CC1DE_Pos;
pub const TIM_DIER_CC1DE: u32 = TIM_DIER_CC1DE_Msk;
pub const TIM_DIER_CC2DE_Pos: u32 = 10;
pub const TIM_DIER_CC2DE_Msk: u32 = 0x1 << TIM_DIER_CC2DE_Pos;
pub const TIM_DIER_CC2DE: u32 = TIM_DIER_CC2DE_Msk;
pub const TIM_DIER_CC3DE_Pos: u32 = 11;
pub const TIM_DIER_CC3DE_Msk: u32 = 0x1 << TIM_DIER_CC3DE_Pos;
pub const TIM_DIER_CC3DE: u32 = TIM_DIER_CC3DE_Msk;
pub const TIM_DIER_CC4DE_Pos: u32 = 12;
pub const TIM_DIER_CC4DE_Msk: u32 = 0x1 << TIM_DIER_CC4DE_Pos;
pub const TIM_DIER_CC4DE: u32 = TIM_DIER_CC4DE_Msk;
pub const TIM_DIER_COMDE_Pos: u32 = 13;
pub const TIM_DIER_COMDE_Msk: u32 = 0x1 << TIM_DIER_COMDE_Pos;
pub const TIM_DIER_COMDE: u32 = TIM_DIER_COMDE_Msk;
pub const TIM_DIER_TDE_Pos: u32 = 14;
pub const TIM_DIER_TDE_Msk: u32 = 0x1 << TIM_DIER_TDE_Pos;
pub const TIM_DIER_TDE: u32 = TIM_DIER_TDE_Msk;
pub const TIM_SR_UIF_Pos: u32 = 0;
pub const TIM_SR_UIF_Msk: u32 = 0x1 << TIM_SR_UIF_Pos;
pub const TIM_SR_UIF: u32 = TIM_SR_UIF_Msk;
pub const TIM_SR_CC1IF_Pos: u32 = 1;
pub const TIM_SR_CC1IF_Msk: u32 = 0x1 << TIM_SR_CC1IF_Pos;
pub const TIM_SR_CC1IF: u32 = TIM_SR_CC1IF_Msk;
pub const TIM_SR_CC2IF_Pos: u32 = 2;
pub const TIM_SR_CC2IF_Msk: u32 = 0x1 << TIM_SR_CC2IF_Pos;
pub const TIM_SR_CC2IF: u32 = TIM_SR_CC2IF_Msk;
pub const TIM_SR_CC3IF_Pos: u32 = 3;
pub const TIM_SR_CC3IF_Msk: u32 = 0x1 << TIM_SR_CC3IF_Pos;
pub const TIM_SR_CC3IF: u32 = TIM_SR_CC3IF_Msk;
pub const TIM_SR_CC4IF_Pos: u32 = 4;
pub const TIM_SR_CC4IF_Msk: u32 = 0x1 << TIM_SR_CC4IF_Pos;
pub const TIM_SR_CC4IF: u32 = TIM_SR_CC4IF_Msk;
pub const TIM_SR_COMIF_Pos: u32 = 5;
pub const TIM_SR_COMIF_Msk: u32 = 0x1 << TIM_SR_COMIF_Pos;
pub const TIM_SR_COMIF: u32 = TIM_SR_COMIF_Msk;
pub const TIM_SR_TIF_Pos: u32 = 6;
pub const TIM_SR_TIF_Msk: u32 = 0x1 << TIM_SR_TIF_Pos;
pub const TIM_SR_TIF: u32 = TIM_SR_TIF_Msk;
pub const TIM_SR_BIF_Pos: u32 = 7;
pub const TIM_SR_BIF_Msk: u32 = 0x1 << TIM_SR_BIF_Pos;
pub const TIM_SR_BIF: u32 = TIM_SR_BIF_Msk;
pub const TIM_SR_B2IF_Pos: u32 = 8;
pub const TIM_SR_B2IF_Msk: u32 = 0x1 << TIM_SR_B2IF_Pos;
pub const TIM_SR_B2IF: u32 = TIM_SR_B2IF_Msk;
pub const TIM_SR_CC1OF_Pos: u32 = 9;
pub const TIM_SR_CC1OF_Msk: u32 = 0x1 << TIM_SR_CC1OF_Pos;
pub const TIM_SR_CC1OF: u32 = TIM_SR_CC1OF_Msk;
pub const TIM_SR_CC2OF_Pos: u32 = 10;
pub const TIM_SR_CC2OF_Msk: u32 = 0x1 << TIM_SR_CC2OF_Pos;
pub const TIM_SR_CC2OF: u32 = TIM_SR_CC2OF_Msk;
pub const TIM_SR_CC3OF_Pos: u32 = 11;
pub const TIM_SR_CC3OF_Msk: u32 = 0x1 << TIM_SR_CC3OF_Pos;
pub const TIM_SR_CC3OF: u32 = TIM_SR_CC3OF_Msk;
pub const TIM_SR_CC4OF_Pos: u32 = 12;
pub const TIM_SR_CC4OF_Msk: u32 = 0x1 << TIM_SR_CC4OF_Pos;
pub const TIM_SR_CC4OF: u32 = TIM_SR_CC4OF_Msk;
pub const TIM_SR_SBIF_Pos: u32 = 13;
pub const TIM_SR_SBIF_Msk: u32 = 0x1 << TIM_SR_SBIF_Pos;
pub const TIM_SR_SBIF: u32 = TIM_SR_SBIF_Msk;
pub const TIM_SR_CC5IF_Pos: u32 = 16;
pub const TIM_SR_CC5IF_Msk: u32 = 0x1 << TIM_SR_CC5IF_Pos;
pub const TIM_SR_CC5IF: u32 = TIM_SR_CC5IF_Msk;
pub const TIM_SR_CC6IF_Pos: u32 = 17;
pub const TIM_SR_CC6IF_Msk: u32 = 0x1 << TIM_SR_CC6IF_Pos;
pub const TIM_SR_CC6IF: u32 = TIM_SR_CC6IF_Msk;
pub const TIM_EGR_UG_Pos: u32 = 0;
pub const TIM_EGR_UG_Msk: u32 = 0x1 << TIM_EGR_UG_Pos;
pub const TIM_EGR_UG: u32 = TIM_EGR_UG_Msk;
pub const TIM_EGR_CC1G_Pos: u32 = 1;
pub const TIM_EGR_CC1G_Msk: u32 = 0x1 << TIM_EGR_CC1G_Pos;
pub const TIM_EGR_CC1G: u32 = TIM_EGR_CC1G_Msk;
pub const TIM_EGR_CC2G_Pos: u32 = 2;
pub const TIM_EGR_CC2G_Msk: u32 = 0x1 << TIM_EGR_CC2G_Pos;
pub const TIM_EGR_CC2G: u32 = TIM_EGR_CC2G_Msk;
pub const TIM_EGR_CC3G_Pos: u32 = 3;
pub const TIM_EGR_CC3G_Msk: u32 = 0x1 << TIM_EGR_CC3G_Pos;
pub const TIM_EGR_CC3G: u32 = TIM_EGR_CC3G_Msk;
pub const TIM_EGR_CC4G_Pos: u32 = 4;
pub const TIM_EGR_CC4G_Msk: u32 = 0x1 << TIM_EGR_CC4G_Pos;
pub const TIM_EGR_CC4G: u32 = TIM_EGR_CC4G_Msk;
pub const TIM_EGR_COMG_Pos: u32 = 5;
pub const TIM_EGR_COMG_Msk: u32 = 0x1 << TIM_EGR_COMG_Pos;
pub const TIM_EGR_COMG: u32 = TIM_EGR_COMG_Msk;
pub const TIM_EGR_TG_Pos: u32 = 6;
pub const TIM_EGR_TG_Msk: u32 = 0x1 << TIM_EGR_TG_Pos;
pub const TIM_EGR_TG: u32 = TIM_EGR_TG_Msk;
pub const TIM_EGR_BG_Pos: u32 = 7;
pub const TIM_EGR_BG_Msk: u32 = 0x1 << TIM_EGR_BG_Pos;
pub const TIM_EGR_BG: u32 = TIM_EGR_BG_Msk;
pub const TIM_EGR_B2G_Pos: u32 = 8;
pub const TIM_EGR_B2G_Msk: u32 = 0x1 << TIM_EGR_B2G_Pos;
pub const TIM_EGR_B2G: u32 = TIM_EGR_B2G_Msk;
pub const TIM_CCMR1_CC1S_Pos: u32 = 0;
pub const TIM_CCMR1_CC1S_Msk: u32 = 0x3 << TIM_CCMR1_CC1S_Pos;
pub const TIM_CCMR1_CC1S: u32 = TIM_CCMR1_CC1S_Msk;
pub const TIM_CCMR1_CC1S_0: u32 = 0x1 << TIM_CCMR1_CC1S_Pos;
pub const TIM_CCMR1_CC1S_1: u32 = 0x2 << TIM_CCMR1_CC1S_Pos;
pub const TIM_CCMR1_OC1FE_Pos: u32 = 2;
pub const TIM_CCMR1_OC1FE_Msk: u32 = 0x1 << TIM_CCMR1_OC1FE_Pos;
pub const TIM_CCMR1_OC1FE: u32 = TIM_CCMR1_OC1FE_Msk;
pub const TIM_CCMR1_OC1PE_Pos: u32 = 3;
pub const TIM_CCMR1_OC1PE_Msk: u32 = 0x1 << TIM_CCMR1_OC1PE_Pos;
pub const TIM_CCMR1_OC1PE: u32 = TIM_CCMR1_OC1PE_Msk;
pub const TIM_CCMR1_OC1M_Pos: u32 = 4;
pub const TIM_CCMR1_OC1M_Msk: u32 = 0x1007 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M: u32 = TIM_CCMR1_OC1M_Msk;
pub const TIM_CCMR1_OC1M_0: u32 = 0x0001 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M_1: u32 = 0x0002 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M_2: u32 = 0x0004 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M_3: u32 = 0x1000 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1CE_Pos: u32 = 7;
pub const TIM_CCMR1_OC1CE_Msk: u32 = 0x1 << TIM_CCMR1_OC1CE_Pos;
pub const TIM_CCMR1_OC1CE: u32 = TIM_CCMR1_OC1CE_Msk;
pub const TIM_CCMR1_CC2S_Pos: u32 = 8;
pub const TIM_CCMR1_CC2S_Msk: u32 = 0x3 << TIM_CCMR1_CC2S_Pos;
pub const TIM_CCMR1_CC2S: u32 = TIM_CCMR1_CC2S_Msk;
pub const TIM_CCMR1_CC2S_0: u32 = 0x1 << TIM_CCMR1_CC2S_Pos;
pub const TIM_CCMR1_CC2S_1: u32 = 0x2 << TIM_CCMR1_CC2S_Pos;
pub const TIM_CCMR1_OC2FE_Pos: u32 = 10;
pub const TIM_CCMR1_OC2FE_Msk: u32 = 0x1 << TIM_CCMR1_OC2FE_Pos;
pub const TIM_CCMR1_OC2FE: u32 = TIM_CCMR1_OC2FE_Msk;
pub const TIM_CCMR1_OC2PE_Pos: u32 = 11;
pub const TIM_CCMR1_OC2PE_Msk: u32 = 0x1 << TIM_CCMR1_OC2PE_Pos;
pub const TIM_CCMR1_OC2PE: u32 = TIM_CCMR1_OC2PE_Msk;
pub const TIM_CCMR1_OC2M_Pos: u32 = 12;
pub const TIM_CCMR1_OC2M_Msk: u32 = 0x1007 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M: u32 = TIM_CCMR1_OC2M_Msk;
pub const TIM_CCMR1_OC2M_0: u32 = 0x0001 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M_1: u32 = 0x0002 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M_2: u32 = 0x0004 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M_3: u32 = 0x1000 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2CE_Pos: u32 = 15;
pub const TIM_CCMR1_OC2CE_Msk: u32 = 0x1 << TIM_CCMR1_OC2CE_Pos;
pub const TIM_CCMR1_OC2CE: u32 = TIM_CCMR1_OC2CE_Msk;
pub const TIM_CCMR1_IC1PSC_Pos: u32 = 2;
pub const TIM_CCMR1_IC1PSC_Msk: u32 = 0x3 << TIM_CCMR1_IC1PSC_Pos;
pub const TIM_CCMR1_IC1PSC: u32 = TIM_CCMR1_IC1PSC_Msk;
pub const TIM_CCMR1_IC1PSC_0: u32 = 0x1 << TIM_CCMR1_IC1PSC_Pos;
pub const TIM_CCMR1_IC1PSC_1: u32 = 0x2 << TIM_CCMR1_IC1PSC_Pos;
pub const TIM_CCMR1_IC1F_Pos: u32 = 4;
pub const TIM_CCMR1_IC1F_Msk: u32 = 0xF << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F: u32 = TIM_CCMR1_IC1F_Msk;
pub const TIM_CCMR1_IC1F_0: u32 = 0x1 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F_1: u32 = 0x2 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F_2: u32 = 0x4 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F_3: u32 = 0x8 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC2PSC_Pos: u32 = 10;
pub const TIM_CCMR1_IC2PSC_Msk: u32 = 0x3 << TIM_CCMR1_IC2PSC_Pos;
pub const TIM_CCMR1_IC2PSC: u32 = TIM_CCMR1_IC2PSC_Msk;
pub const TIM_CCMR1_IC2PSC_0: u32 = 0x1 << TIM_CCMR1_IC2PSC_Pos;
pub const TIM_CCMR1_IC2PSC_1: u32 = 0x2 << TIM_CCMR1_IC2PSC_Pos;
pub const TIM_CCMR1_IC2F_Pos: u32 = 12;
pub const TIM_CCMR1_IC2F_Msk: u32 = 0xF << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F: u32 = TIM_CCMR1_IC2F_Msk;
pub const TIM_CCMR1_IC2F_0: u32 = 0x1 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F_1: u32 = 0x2 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F_2: u32 = 0x4 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F_3: u32 = 0x8 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR2_CC3S_Pos: u32 = 0;
pub const TIM_CCMR2_CC3S_Msk: u32 = 0x3 << TIM_CCMR2_CC3S_Pos;
pub const TIM_CCMR2_CC3S: u32 = TIM_CCMR2_CC3S_Msk;
pub const TIM_CCMR2_CC3S_0: u32 = 0x1 << TIM_CCMR2_CC3S_Pos;
pub const TIM_CCMR2_CC3S_1: u32 = 0x2 << TIM_CCMR2_CC3S_Pos;
pub const TIM_CCMR2_OC3FE_Pos: u32 = 2;
pub const TIM_CCMR2_OC3FE_Msk: u32 = 0x1 << TIM_CCMR2_OC3FE_Pos;
pub const TIM_CCMR2_OC3FE: u32 = TIM_CCMR2_OC3FE_Msk;
pub const TIM_CCMR2_OC3PE_Pos: u32 = 3;
pub const TIM_CCMR2_OC3PE_Msk: u32 = 0x1 << TIM_CCMR2_OC3PE_Pos;
pub const TIM_CCMR2_OC3PE: u32 = TIM_CCMR2_OC3PE_Msk;
pub const TIM_CCMR2_OC3M_Pos: u32 = 4;
pub const TIM_CCMR2_OC3M_Msk: u32 = 0x1007 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M: u32 = TIM_CCMR2_OC3M_Msk;
pub const TIM_CCMR2_OC3M_0: u32 = 0x0001 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M_1: u32 = 0x0002 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M_2: u32 = 0x0004 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M_3: u32 = 0x1000 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3CE_Pos: u32 = 7;
pub const TIM_CCMR2_OC3CE_Msk: u32 = 0x1 << TIM_CCMR2_OC3CE_Pos;
pub const TIM_CCMR2_OC3CE: u32 = TIM_CCMR2_OC3CE_Msk;
pub const TIM_CCMR2_CC4S_Pos: u32 = 8;
pub const TIM_CCMR2_CC4S_Msk: u32 = 0x3 << TIM_CCMR2_CC4S_Pos;
pub const TIM_CCMR2_CC4S: u32 = TIM_CCMR2_CC4S_Msk;
pub const TIM_CCMR2_CC4S_0: u32 = 0x1 << TIM_CCMR2_CC4S_Pos;
pub const TIM_CCMR2_CC4S_1: u32 = 0x2 << TIM_CCMR2_CC4S_Pos;
pub const TIM_CCMR2_OC4FE_Pos: u32 = 10;
pub const TIM_CCMR2_OC4FE_Msk: u32 = 0x1 << TIM_CCMR2_OC4FE_Pos;
pub const TIM_CCMR2_OC4FE: u32 = TIM_CCMR2_OC4FE_Msk;
pub const TIM_CCMR2_OC4PE_Pos: u32 = 11;
pub const TIM_CCMR2_OC4PE_Msk: u32 = 0x1 << TIM_CCMR2_OC4PE_Pos;
pub const TIM_CCMR2_OC4PE: u32 = TIM_CCMR2_OC4PE_Msk;
pub const TIM_CCMR2_OC4M_Pos: u32 = 12;
pub const TIM_CCMR2_OC4M_Msk: u32 = 0x1007 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M: u32 = TIM_CCMR2_OC4M_Msk;
pub const TIM_CCMR2_OC4M_0: u32 = 0x0001 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M_1: u32 = 0x0002 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M_2: u32 = 0x0004 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M_3: u32 = 0x1000 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4CE_Pos: u32 = 15;
pub const TIM_CCMR2_OC4CE_Msk: u32 = 0x1 << TIM_CCMR2_OC4CE_Pos;
pub const TIM_CCMR2_OC4CE: u32 = TIM_CCMR2_OC4CE_Msk;
pub const TIM_CCMR2_IC3PSC_Pos: u32 = 2;
pub const TIM_CCMR2_IC3PSC_Msk: u32 = 0x3 << TIM_CCMR2_IC3PSC_Pos;
pub const TIM_CCMR2_IC3PSC: u32 = TIM_CCMR2_IC3PSC_Msk;
pub const TIM_CCMR2_IC3PSC_0: u32 = 0x1 << TIM_CCMR2_IC3PSC_Pos;
pub const TIM_CCMR2_IC3PSC_1: u32 = 0x2 << TIM_CCMR2_IC3PSC_Pos;
pub const TIM_CCMR2_IC3F_Pos: u32 = 4;
pub const TIM_CCMR2_IC3F_Msk: u32 = 0xF << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F: u32 = TIM_CCMR2_IC3F_Msk;
pub const TIM_CCMR2_IC3F_0: u32 = 0x1 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F_1: u32 = 0x2 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F_2: u32 = 0x4 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F_3: u32 = 0x8 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC4PSC_Pos: u32 = 10;
pub const TIM_CCMR2_IC4PSC_Msk: u32 = 0x3 << TIM_CCMR2_IC4PSC_Pos;
pub const TIM_CCMR2_IC4PSC: u32 = TIM_CCMR2_IC4PSC_Msk;
pub const TIM_CCMR2_IC4PSC_0: u32 = 0x1 << TIM_CCMR2_IC4PSC_Pos;
pub const TIM_CCMR2_IC4PSC_1: u32 = 0x2 << TIM_CCMR2_IC4PSC_Pos;
pub const TIM_CCMR2_IC4F_Pos: u32 = 12;
pub const TIM_CCMR2_IC4F_Msk: u32 = 0xF << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F: u32 = TIM_CCMR2_IC4F_Msk;
pub const TIM_CCMR2_IC4F_0: u32 = 0x1 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F_1: u32 = 0x2 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F_2: u32 = 0x4 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F_3: u32 = 0x8 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR3_OC5FE_Pos: u32 = 2;
pub const TIM_CCMR3_OC5FE_Msk: u32 = 0x1 << TIM_CCMR3_OC5FE_Pos;
pub const TIM_CCMR3_OC5FE: u32 = TIM_CCMR3_OC5FE_Msk;
pub const TIM_CCMR3_OC5PE_Pos: u32 = 3;
pub const TIM_CCMR3_OC5PE_Msk: u32 = 0x1 << TIM_CCMR3_OC5PE_Pos;
pub const TIM_CCMR3_OC5PE: u32 = TIM_CCMR3_OC5PE_Msk;
pub const TIM_CCMR3_OC5M_Pos: u32 = 4;
pub const TIM_CCMR3_OC5M_Msk: u32 = 0x1007 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5M: u32 = TIM_CCMR3_OC5M_Msk;
pub const TIM_CCMR3_OC5M_0: u32 = 0x0001 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5M_1: u32 = 0x0002 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5M_2: u32 = 0x0004 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5M_3: u32 = 0x1000 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5CE_Pos: u32 = 7;
pub const TIM_CCMR3_OC5CE_Msk: u32 = 0x1 << TIM_CCMR3_OC5CE_Pos;
pub const TIM_CCMR3_OC5CE: u32 = TIM_CCMR3_OC5CE_Msk;
pub const TIM_CCMR3_OC6FE_Pos: u32 = 10;
pub const TIM_CCMR3_OC6FE_Msk: u32 = 0x1 << TIM_CCMR3_OC6FE_Pos;
pub const TIM_CCMR3_OC6FE: u32 = TIM_CCMR3_OC6FE_Msk;
pub const TIM_CCMR3_OC6PE_Pos: u32 = 11;
pub const TIM_CCMR3_OC6PE_Msk: u32 = 0x1 << TIM_CCMR3_OC6PE_Pos;
pub const TIM_CCMR3_OC6PE: u32 = TIM_CCMR3_OC6PE_Msk;
pub const TIM_CCMR3_OC6M_Pos: u32 = 12;
pub const TIM_CCMR3_OC6M_Msk: u32 = 0x1007 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6M: u32 = TIM_CCMR3_OC6M_Msk;
pub const TIM_CCMR3_OC6M_0: u32 = 0x0001 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6M_1: u32 = 0x0002 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6M_2: u32 = 0x0004 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6M_3: u32 = 0x1000 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6CE_Pos: u32 = 15;
pub const TIM_CCMR3_OC6CE_Msk: u32 = 0x1 << TIM_CCMR3_OC6CE_Pos;
pub const TIM_CCMR3_OC6CE: u32 = TIM_CCMR3_OC6CE_Msk;
pub const TIM_CCER_CC1E_Pos: u32 = 0;
pub const TIM_CCER_CC1E_Msk: u32 = 0x1 << TIM_CCER_CC1E_Pos;
pub const TIM_CCER_CC1E: u32 = TIM_CCER_CC1E_Msk;
pub const TIM_CCER_CC1P_Pos: u32 = 1;
pub const TIM_CCER_CC1P_Msk: u32 = 0x1 << TIM_CCER_CC1P_Pos;
pub const TIM_CCER_CC1P: u32 = TIM_CCER_CC1P_Msk;
pub const TIM_CCER_CC1NE_Pos: u32 = 2;
pub const TIM_CCER_CC1NE_Msk: u32 = 0x1 << TIM_CCER_CC1NE_Pos;
pub const TIM_CCER_CC1NE: u32 = TIM_CCER_CC1NE_Msk;
pub const TIM_CCER_CC1NP_Pos: u32 = 3;
pub const TIM_CCER_CC1NP_Msk: u32 = 0x1 << TIM_CCER_CC1NP_Pos;
pub const TIM_CCER_CC1NP: u32 = TIM_CCER_CC1NP_Msk;
pub const TIM_CCER_CC2E_Pos: u32 = 4;
pub const TIM_CCER_CC2E_Msk: u32 = 0x1 << TIM_CCER_CC2E_Pos;
pub const TIM_CCER_CC2E: u32 = TIM_CCER_CC2E_Msk;
pub const TIM_CCER_CC2P_Pos: u32 = 5;
pub const TIM_CCER_CC2P_Msk: u32 = 0x1 << TIM_CCER_CC2P_Pos;
pub const TIM_CCER_CC2P: u32 = TIM_CCER_CC2P_Msk;
pub const TIM_CCER_CC2NE_Pos: u32 = 6;
pub const TIM_CCER_CC2NE_Msk: u32 = 0x1 << TIM_CCER_CC2NE_Pos;
pub const TIM_CCER_CC2NE: u32 = TIM_CCER_CC2NE_Msk;
pub const TIM_CCER_CC2NP_Pos: u32 = 7;
pub const TIM_CCER_CC2NP_Msk: u32 = 0x1 << TIM_CCER_CC2NP_Pos;
pub const TIM_CCER_CC2NP: u32 = TIM_CCER_CC2NP_Msk;
pub const TIM_CCER_CC3E_Pos: u32 = 8;
pub const TIM_CCER_CC3E_Msk: u32 = 0x1 << TIM_CCER_CC3E_Pos;
pub const TIM_CCER_CC3E: u32 = TIM_CCER_CC3E_Msk;
pub const TIM_CCER_CC3P_Pos: u32 = 9;
pub const TIM_CCER_CC3P_Msk: u32 = 0x1 << TIM_CCER_CC3P_Pos;
pub const TIM_CCER_CC3P: u32 = TIM_CCER_CC3P_Msk;
pub const TIM_CCER_CC3NE_Pos: u32 = 10;
pub const TIM_CCER_CC3NE_Msk: u32 = 0x1 << TIM_CCER_CC3NE_Pos;
pub const TIM_CCER_CC3NE: u32 = TIM_CCER_CC3NE_Msk;
pub const TIM_CCER_CC3NP_Pos: u32 = 11;
pub const TIM_CCER_CC3NP_Msk: u32 = 0x1 << TIM_CCER_CC3NP_Pos;
pub const TIM_CCER_CC3NP: u32 = TIM_CCER_CC3NP_Msk;
pub const TIM_CCER_CC4E_Pos: u32 = 12;
pub const TIM_CCER_CC4E_Msk: u32 = 0x1 << TIM_CCER_CC4E_Pos;
pub const TIM_CCER_CC4E: u32 = TIM_CCER_CC4E_Msk;
pub const TIM_CCER_CC4P_Pos: u32 = 13;
pub const TIM_CCER_CC4P_Msk: u32 = 0x1 << TIM_CCER_CC4P_Pos;
pub const TIM_CCER_CC4P: u32 = TIM_CCER_CC4P_Msk;
pub const TIM_CCER_CC4NP_Pos: u32 = 15;
pub const TIM_CCER_CC4NP_Msk: u32 = 0x1 << TIM_CCER_CC4NP_Pos;
pub const TIM_CCER_CC4NP: u32 = TIM_CCER_CC4NP_Msk;
pub const TIM_CCER_CC5E_Pos: u32 = 16;
pub const TIM_CCER_CC5E_Msk: u32 = 0x1 << TIM_CCER_CC5E_Pos;
pub const TIM_CCER_CC5E: u32 = TIM_CCER_CC5E_Msk;
pub const TIM_CCER_CC5P_Pos: u32 = 17;
pub const TIM_CCER_CC5P_Msk: u32 = 0x1 << TIM_CCER_CC5P_Pos;
pub const TIM_CCER_CC5P: u32 = TIM_CCER_CC5P_Msk;
pub const TIM_CCER_CC6E_Pos: u32 = 20;
pub const TIM_CCER_CC6E_Msk: u32 = 0x1 << TIM_CCER_CC6E_Pos;
pub const TIM_CCER_CC6E: u32 = TIM_CCER_CC6E_Msk;
pub const TIM_CCER_CC6P_Pos: u32 = 21;
pub const TIM_CCER_CC6P_Msk: u32 = 0x1 << TIM_CCER_CC6P_Pos;
pub const TIM_CCER_CC6P: u32 = TIM_CCER_CC6P_Msk;
pub const TIM_CNT_CNT_Pos: u32 = 0;
pub const TIM_CNT_CNT_Msk: u32 = 0xFFFFFFFF << TIM_CNT_CNT_Pos;
pub const TIM_CNT_CNT: u32 = TIM_CNT_CNT_Msk;
pub const TIM_CNT_UIFCPY_Pos: u32 = 31;
pub const TIM_CNT_UIFCPY_Msk: u32 = 0x1 << TIM_CNT_UIFCPY_Pos;
pub const TIM_CNT_UIFCPY: u32 = TIM_CNT_UIFCPY_Msk;
pub const TIM_PSC_PSC_Pos: u32 = 0;
pub const TIM_PSC_PSC_Msk: u32 = 0xFFFF << TIM_PSC_PSC_Pos;
pub const TIM_PSC_PSC: u32 = TIM_PSC_PSC_Msk;
pub const TIM_ARR_ARR_Pos: u32 = 0;
pub const TIM_ARR_ARR_Msk: u32 = 0xFFFFFFFF << TIM_ARR_ARR_Pos;
pub const TIM_ARR_ARR: u32 = TIM_ARR_ARR_Msk;
pub const TIM_RCR_REP_Pos: u32 = 0;
pub const TIM_RCR_REP_Msk: u32 = 0xFFFF << TIM_RCR_REP_Pos;
pub const TIM_RCR_REP: u32 = TIM_RCR_REP_Msk;
pub const TIM_CCR1_CCR1_Pos: u32 = 0;
pub const TIM_CCR1_CCR1_Msk: u32 = 0xFFFFFFFF << TIM_CCR1_CCR1_Pos;
pub const TIM_CCR1_CCR1: u32 = TIM_CCR1_CCR1_Msk;
pub const TIM_CCR2_CCR2_Pos: u32 = 0;
pub const TIM_CCR2_CCR2_Msk: u32 = 0xFFFFFFFF << TIM_CCR2_CCR2_Pos;
pub const TIM_CCR2_CCR2: u32 = TIM_CCR2_CCR2_Msk;
pub const TIM_CCR3_CCR3_Pos: u32 = 0;
pub const TIM_CCR3_CCR3_Msk: u32 = 0xFFFFFFFF << TIM_CCR3_CCR3_Pos;
pub const TIM_CCR3_CCR3: u32 = TIM_CCR3_CCR3_Msk;
pub const TIM_CCR4_CCR4_Pos: u32 = 0;
pub const TIM_CCR4_CCR4_Msk: u32 = 0xFFFFFFFF << TIM_CCR4_CCR4_Pos;
pub const TIM_CCR4_CCR4: u32 = TIM_CCR4_CCR4_Msk;
pub const TIM_CCR5_CCR5_Pos: u32 = 0;
pub const TIM_CCR5_CCR5_Msk: u32 = 0xFFFF << TIM_CCR5_CCR5_Pos;
pub const TIM_CCR5_CCR5: u32 = TIM_CCR5_CCR5_Msk;
pub const TIM_CCR5_GC5C1_Pos: u32 = 29;
pub const TIM_CCR5_GC5C1_Msk: u32 = 0x1 << TIM_CCR5_GC5C1_Pos;
pub const TIM_CCR5_GC5C1: u32 = TIM_CCR5_GC5C1_Msk;
pub const TIM_CCR5_GC5C2_Pos: u32 = 30;
pub const TIM_CCR5_GC5C2_Msk: u32 = 0x1 << TIM_CCR5_GC5C2_Pos;
pub const TIM_CCR5_GC5C2: u32 = TIM_CCR5_GC5C2_Msk;
pub const TIM_CCR5_GC5C3_Pos: u32 = 31;
pub const TIM_CCR5_GC5C3_Msk: u32 = 0x1 << TIM_CCR5_GC5C3_Pos;
pub const TIM_CCR5_GC5C3: u32 = TIM_CCR5_GC5C3_Msk;
pub const TIM_CCR6_CCR6_Pos: u32 = 0;
pub const TIM_CCR6_CCR6_Msk: u32 = 0xFFFF << TIM_CCR6_CCR6_Pos;
pub const TIM_CCR6_CCR6: u32 = TIM_CCR6_CCR6_Msk;
pub const TIM_BDTR_DTG_Pos: u32 = 0;
pub const TIM_BDTR_DTG_Msk: u32 = 0xFF << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG: u32 = TIM_BDTR_DTG_Msk;
pub const TIM_BDTR_DTG_0: u32 = 0x01 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_1: u32 = 0x02 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_2: u32 = 0x04 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_3: u32 = 0x08 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_4: u32 = 0x10 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_5: u32 = 0x20 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_6: u32 = 0x40 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_7: u32 = 0x80 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_LOCK_Pos: u32 = 8;
pub const TIM_BDTR_LOCK_Msk: u32 = 0x3 << TIM_BDTR_LOCK_Pos;
pub const TIM_BDTR_LOCK: u32 = TIM_BDTR_LOCK_Msk;
pub const TIM_BDTR_LOCK_0: u32 = 0x1 << TIM_BDTR_LOCK_Pos;
pub const TIM_BDTR_LOCK_1: u32 = 0x2 << TIM_BDTR_LOCK_Pos;
pub const TIM_BDTR_OSSI_Pos: u32 = 10;
pub const TIM_BDTR_OSSI_Msk: u32 = 0x1 << TIM_BDTR_OSSI_Pos;
pub const TIM_BDTR_OSSI: u32 = TIM_BDTR_OSSI_Msk;
pub const TIM_BDTR_OSSR_Pos: u32 = 11;
pub const TIM_BDTR_OSSR_Msk: u32 = 0x1 << TIM_BDTR_OSSR_Pos;
pub const TIM_BDTR_OSSR: u32 = TIM_BDTR_OSSR_Msk;
pub const TIM_BDTR_BKE_Pos: u32 = 12;
pub const TIM_BDTR_BKE_Msk: u32 = 0x1 << TIM_BDTR_BKE_Pos;
pub const TIM_BDTR_BKE: u32 = TIM_BDTR_BKE_Msk;
pub const TIM_BDTR_BKP_Pos: u32 = 13;
pub const TIM_BDTR_BKP_Msk: u32 = 0x1 << TIM_BDTR_BKP_Pos;
pub const TIM_BDTR_BKP: u32 = TIM_BDTR_BKP_Msk;
pub const TIM_BDTR_AOE_Pos: u32 = 14;
pub const TIM_BDTR_AOE_Msk: u32 = 0x1 << TIM_BDTR_AOE_Pos;
pub const TIM_BDTR_AOE: u32 = TIM_BDTR_AOE_Msk;
pub const TIM_BDTR_MOE_Pos: u32 = 15;
pub const TIM_BDTR_MOE_Msk: u32 = 0x1 << TIM_BDTR_MOE_Pos;
pub const TIM_BDTR_MOE: u32 = TIM_BDTR_MOE_Msk;
pub const TIM_BDTR_BKF_Pos: u32 = 16;
pub const TIM_BDTR_BKF_Msk: u32 = 0xF << TIM_BDTR_BKF_Pos;
pub const TIM_BDTR_BKF: u32 = TIM_BDTR_BKF_Msk;
pub const TIM_BDTR_BK2F_Pos: u32 = 20;
pub const TIM_BDTR_BK2F_Msk: u32 = 0xF << TIM_BDTR_BK2F_Pos;
pub const TIM_BDTR_BK2F: u32 = TIM_BDTR_BK2F_Msk;
pub const TIM_BDTR_BK2E_Pos: u32 = 24;
pub const TIM_BDTR_BK2E_Msk: u32 = 0x1 << TIM_BDTR_BK2E_Pos;
pub const TIM_BDTR_BK2E: u32 = TIM_BDTR_BK2E_Msk;
pub const TIM_BDTR_BK2P_Pos: u32 = 25;
pub const TIM_BDTR_BK2P_Msk: u32 = 0x1 << TIM_BDTR_BK2P_Pos;
pub const TIM_BDTR_BK2P: u32 = TIM_BDTR_BK2P_Msk;
pub const TIM_BDTR_BKDSRM_Pos: u32 = 26;
pub const TIM_BDTR_BKDSRM_Msk: u32 = 0x1 << TIM_BDTR_BKDSRM_Pos;
pub const TIM_BDTR_BKDSRM: u32 = TIM_BDTR_BKDSRM_Msk;
pub const TIM_BDTR_BK2DSRM_Pos: u32 = 27;
pub const TIM_BDTR_BK2DSRM_Msk: u32 = 0x1 << TIM_BDTR_BK2DSRM_Pos;
pub const TIM_BDTR_BK2DSRM: u32 = TIM_BDTR_BK2DSRM_Msk;
pub const TIM_BDTR_BKBID_Pos: u32 = 28;
pub const TIM_BDTR_BKBID_Msk: u32 = 0x1 << TIM_BDTR_BKBID_Pos;
pub const TIM_BDTR_BKBID: u32 = TIM_BDTR_BKBID_Msk;
pub const TIM_BDTR_BK2BID_Pos: u32 = 29;
pub const TIM_BDTR_BK2BID_Msk: u32 = 0x1 << TIM_BDTR_BK2BID_Pos;
pub const TIM_BDTR_BK2BID: u32 = TIM_BDTR_BK2BID_Msk;
pub const TIM_DCR_DBA_Pos: u32 = 0;
pub const TIM_DCR_DBA_Msk: u32 = 0x1F << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA: u32 = TIM_DCR_DBA_Msk;
pub const TIM_DCR_DBA_0: u32 = 0x01 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_1: u32 = 0x02 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_2: u32 = 0x04 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_3: u32 = 0x08 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_4: u32 = 0x10 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBL_Pos: u32 = 8;
pub const TIM_DCR_DBL_Msk: u32 = 0x1F << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL: u32 = TIM_DCR_DBL_Msk;
pub const TIM_DCR_DBL_0: u32 = 0x01 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_1: u32 = 0x02 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_2: u32 = 0x04 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_3: u32 = 0x08 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_4: u32 = 0x10 << TIM_DCR_DBL_Pos;
pub const TIM_DMAR_DMAB_Pos: u32 = 0;
pub const TIM_DMAR_DMAB_Msk: u32 = 0xFFFF << TIM_DMAR_DMAB_Pos;
pub const TIM_DMAR_DMAB: u32 = TIM_DMAR_DMAB_Msk;
pub const TIM1_OR1_ETR_ADC_RMP_Pos: u32 = 0;
pub const TIM1_OR1_ETR_ADC_RMP_Msk: u32 = 0x3 << TIM1_OR1_ETR_ADC_RMP_Pos;
pub const TIM1_OR1_ETR_ADC_RMP: u32 = TIM1_OR1_ETR_ADC_RMP_Msk;
pub const TIM1_OR1_ETR_ADC_RMP_0: u32 = 0x1 << TIM1_OR1_ETR_ADC_RMP_Pos;
pub const TIM1_OR1_ETR_ADC_RMP_1: u32 = 0x2 << TIM1_OR1_ETR_ADC_RMP_Pos;
pub const TIM1_OR1_TI1_RMP_Pos: u32 = 4;
pub const TIM1_OR1_TI1_RMP_Msk: u32 = 0x1 << TIM1_OR1_TI1_RMP_Pos;
pub const TIM1_OR1_TI1_RMP: u32 = TIM1_OR1_TI1_RMP_Msk;
pub const TIM2_OR1_TI4_RMP_Pos: u32 = 2;
pub const TIM2_OR1_TI4_RMP_Msk: u32 = 0x3 << TIM2_OR1_TI4_RMP_Pos;
pub const TIM2_OR1_TI4_RMP: u32 = TIM2_OR1_TI4_RMP_Msk;
pub const TIM2_OR1_TI4_RMP_0: u32 = 0x1 << TIM2_OR1_TI4_RMP_Pos;
pub const TIM2_OR1_TI4_RMP_1: u32 = 0x2 << TIM2_OR1_TI4_RMP_Pos;
pub const TIM2_OR1_ETR_RMP_Pos: u32 = 1;
pub const TIM2_OR1_ETR_RMP_Msk: u32 = 0x1 << TIM2_OR1_ETR_RMP_Pos;
pub const TIM2_OR1_ETR_RMP: u32 = TIM2_OR1_ETR_RMP_Msk;
pub const TIM16_OR1_TI1_RMP_Pos: u32 = 0;
pub const TIM16_OR1_TI1_RMP_Msk: u32 = 0x3 << TIM16_OR1_TI1_RMP_Pos;
pub const TIM16_OR1_TI1_RMP: u32 = TIM16_OR1_TI1_RMP_Msk;
pub const TIM16_OR1_TI1_RMP_0: u32 = 0x1 << TIM16_OR1_TI1_RMP_Pos;
pub const TIM16_OR1_TI1_RMP_1: u32 = 0x2 << TIM16_OR1_TI1_RMP_Pos;
pub const TIM17_OR1_TI1_RMP_Pos: u32 = 0;
pub const TIM17_OR1_TI1_RMP_Msk: u32 = 0x3 << TIM17_OR1_TI1_RMP_Pos;
pub const TIM17_OR1_TI1_RMP: u32 = TIM17_OR1_TI1_RMP_Msk;
pub const TIM17_OR1_TI1_RMP_0: u32 = 0x1 << TIM17_OR1_TI1_RMP_Pos;
pub const TIM17_OR1_TI1_RMP_1: u32 = 0x2 << TIM17_OR1_TI1_RMP_Pos;
pub const TIM1_AF1_BKINE_Pos: u32 = 0;
pub const TIM1_AF1_BKINE_Msk: u32 = 0x1 << TIM1_AF1_BKINE_Pos;
pub const TIM1_AF1_BKINE: u32 = TIM1_AF1_BKINE_Msk;
pub const TIM1_AF1_BKCMP1E_Pos: u32 = 1;
pub const TIM1_AF1_BKCMP1E_Msk: u32 = 0x1 << TIM1_AF1_BKCMP1E_Pos;
pub const TIM1_AF1_BKCMP1E: u32 = TIM1_AF1_BKCMP1E_Msk;
pub const TIM1_AF1_BKCMP2E_Pos: u32 = 2;
pub const TIM1_AF1_BKCMP2E_Msk: u32 = 0x1 << TIM1_AF1_BKCMP2E_Pos;
pub const TIM1_AF1_BKCMP2E: u32 = TIM1_AF1_BKCMP2E_Msk;
pub const TIM1_AF1_BKINP_Pos: u32 = 9;
pub const TIM1_AF1_BKINP_Msk: u32 = 0x1 << TIM1_AF1_BKINP_Pos;
pub const TIM1_AF1_BKINP: u32 = TIM1_AF1_BKINP_Msk;
pub const TIM1_AF1_BKCMP1P_Pos: u32 = 10;
pub const TIM1_AF1_BKCMP1P_Msk: u32 = 0x1 << TIM1_AF1_BKCMP1P_Pos;
pub const TIM1_AF1_BKCMP1P: u32 = TIM1_AF1_BKCMP1P_Msk;
pub const TIM1_AF1_BKCMP2P_Pos: u32 = 11;
pub const TIM1_AF1_BKCMP2P_Msk: u32 = 0x1 << TIM1_AF1_BKCMP2P_Pos;
pub const TIM1_AF1_BKCMP2P: u32 = TIM1_AF1_BKCMP2P_Msk;
pub const TIM1_AF1_ETRSEL_Pos: u32 = 14;
pub const TIM1_AF1_ETRSEL_Msk: u32 = 0xF << TIM1_AF1_ETRSEL_Pos;
pub const TIM1_AF1_ETRSEL: u32 = TIM1_AF1_ETRSEL_Msk;
pub const TIM1_AF1_ETRSEL_0: u32 = 0x1 << TIM1_AF1_ETRSEL_Pos;
pub const TIM1_AF1_ETRSEL_1: u32 = 0x2 << TIM1_AF1_ETRSEL_Pos;
pub const TIM1_AF1_ETRSEL_2: u32 = 0x4 << TIM1_AF1_ETRSEL_Pos;
pub const TIM1_AF1_ETRSEL_3: u32 = 0x8 << TIM1_AF1_ETRSEL_Pos;
pub const TIM2_AF1_ETRSEL_Pos: u32 = 14;
pub const TIM2_AF1_ETRSEL_Msk: u32 = 0xF << TIM2_AF1_ETRSEL_Pos;
pub const TIM2_AF1_ETRSEL: u32 = 0x00003C000;
pub const TIM2_AF1_ETRSEL_0: u32 = 0x000004000;
pub const TIM2_AF1_ETRSEL_1: u32 = 0x000008000;
pub const TIM2_AF1_ETRSEL_2: u32 = 0x000010000;
pub const TIM2_AF1_ETRSEL_3: u32 = 0x000020000;
pub const TIM16_AF1_BKINE_Pos: u32 = 0;
pub const TIM16_AF1_BKINE_Msk: u32 = 0x1 << TIM16_AF1_BKINE_Pos;
pub const TIM16_AF1_BKINE: u32 = TIM16_AF1_BKINE_Msk;
pub const TIM16_AF1_BKCMP1E_Pos: u32 = 1;
pub const TIM16_AF1_BKCMP1E_Msk: u32 = 0x1 << TIM16_AF1_BKCMP1E_Pos;
pub const TIM16_AF1_BKCMP1E: u32 = TIM16_AF1_BKCMP1E_Msk;
pub const TIM16_AF1_BKCMP2E_Pos: u32 = 2;
pub const TIM16_AF1_BKCMP2E_Msk: u32 = 0x1 << TIM16_AF1_BKCMP2E_Pos;
pub const TIM16_AF1_BKCMP2E: u32 = TIM16_AF1_BKCMP2E_Msk;
pub const TIM16_AF1_BKINP_Pos: u32 = 9;
pub const TIM16_AF1_BKINP_Msk: u32 = 0x1 << TIM16_AF1_BKINP_Pos;
pub const TIM16_AF1_BKINP: u32 = TIM16_AF1_BKINP_Msk;
pub const TIM16_AF1_BKCMP1P_Pos: u32 = 10;
pub const TIM16_AF1_BKCMP1P_Msk: u32 = 0x1 << TIM16_AF1_BKCMP1P_Pos;
pub const TIM16_AF1_BKCMP1P: u32 = TIM16_AF1_BKCMP1P_Msk;
pub const TIM16_AF1_BKCMP2P_Pos: u32 = 11;
pub const TIM16_AF1_BKCMP2P_Msk: u32 = 0x1 << TIM16_AF1_BKCMP2P_Pos;
pub const TIM16_AF1_BKCMP2P: u32 = TIM16_AF1_BKCMP2P_Msk;
pub const TIM17_AF1_BKINE_Pos: u32 = 0;
pub const TIM17_AF1_BKINE_Msk: u32 = 0x1 << TIM17_AF1_BKINE_Pos;
pub const TIM17_AF1_BKINE: u32 = TIM17_AF1_BKINE_Msk;
pub const TIM17_AF1_BKCMP1E_Pos: u32 = 1;
pub const TIM17_AF1_BKCMP1E_Msk: u32 = 0x1 << TIM17_AF1_BKCMP1E_Pos;
pub const TIM17_AF1_BKCMP1E: u32 = TIM17_AF1_BKCMP1E_Msk;
pub const TIM17_AF1_BKCMP2E_Pos: u32 = 2;
pub const TIM17_AF1_BKCMP2E_Msk: u32 = 0x1 << TIM17_AF1_BKCMP2E_Pos;
pub const TIM17_AF1_BKCMP2E: u32 = TIM17_AF1_BKCMP2E_Msk;
pub const TIM17_AF1_BKINP_Pos: u32 = 9;
pub const TIM17_AF1_BKINP_Msk: u32 = 0x1 << TIM17_AF1_BKINP_Pos;
pub const TIM17_AF1_BKINP: u32 = TIM17_AF1_BKINP_Msk;
pub const TIM17_AF1_BKCMP1P_Pos: u32 = 10;
pub const TIM17_AF1_BKCMP1P_Msk: u32 = 0x1 << TIM17_AF1_BKCMP1P_Pos;
pub const TIM17_AF1_BKCMP1P: u32 = TIM17_AF1_BKCMP1P_Msk;
pub const TIM17_AF1_BKCMP2P_Pos: u32 = 11;
pub const TIM17_AF1_BKCMP2P_Msk: u32 = 0x1 << TIM17_AF1_BKCMP2P_Pos;
pub const TIM17_AF1_BKCMP2P: u32 = TIM17_AF1_BKCMP2P_Msk;
pub const TIM1_AF2_BK2INE_Pos: u32 = 0;
pub const TIM1_AF2_BK2INE_Msk: u32 = 0x1 << TIM1_AF2_BK2INE_Pos;
pub const TIM1_AF2_BK2INE: u32 = TIM1_AF2_BK2INE_Msk;
pub const TIM1_AF2_BK2CMP1E_Pos: u32 = 1;
pub const TIM1_AF2_BK2CMP1E_Msk: u32 = 0x1 << TIM1_AF2_BK2CMP1E_Pos;
pub const TIM1_AF2_BK2CMP1E: u32 = TIM1_AF2_BK2CMP1E_Msk;
pub const TIM1_AF2_BK2CMP2E_Pos: u32 = 2;
pub const TIM1_AF2_BK2CMP2E_Msk: u32 = 0x1 << TIM1_AF2_BK2CMP2E_Pos;
pub const TIM1_AF2_BK2CMP2E: u32 = TIM1_AF2_BK2CMP2E_Msk;
pub const TIM1_AF2_BK2INP_Pos: u32 = 9;
pub const TIM1_AF2_BK2INP_Msk: u32 = 0x1 << TIM1_AF2_BK2INP_Pos;
pub const TIM1_AF2_BK2INP: u32 = TIM1_AF2_BK2INP_Msk;
pub const TIM1_AF2_BK2CMP1P_Pos: u32 = 10;
pub const TIM1_AF2_BK2CMP1P_Msk: u32 = 0x1 << TIM1_AF2_BK2CMP1P_Pos;
pub const TIM1_AF2_BK2CMP1P: u32 = TIM1_AF2_BK2CMP1P_Msk;
pub const TIM1_AF2_BK2CMP2P_Pos: u32 = 11;
pub const TIM1_AF2_BK2CMP2P_Msk: u32 = 0x1 << TIM1_AF2_BK2CMP2P_Pos;
pub const TIM1_AF2_BK2CMP2P: u32 = TIM1_AF2_BK2CMP2P_Msk;
