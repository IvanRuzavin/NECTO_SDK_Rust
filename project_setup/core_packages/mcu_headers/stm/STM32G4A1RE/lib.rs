#![no_std]
#![allow(non_camel_case_types, non_snake_case, non_upper_case_globals)]
#[repr(i32)]
pub enum IRQn_Type {
    NonMaskableInt_IRQn = -14,
    HardFault_IRQn = -13,
    MemoryManagement_IRQn = -12,
    BusFault_IRQn = -11,
    UsageFault_IRQn = -10,
    SVCall_IRQn = -5,
    DebugMonitor_IRQn = -4,
    PendSV_IRQn = -2,
    SysTick_IRQn = -1,
    WWDG_IRQn = 0,
    PVD_PVM_IRQn = 1,
    RTC_TAMP_LSECSS_IRQn = 2,
    RTC_WKUP_IRQn = 3,
    FLASH_IRQn = 4,
    RCC_IRQn = 5,
    EXTI0_IRQn = 6,
    EXTI1_IRQn = 7,
    EXTI2_IRQn = 8,
    EXTI3_IRQn = 9,
    EXTI4_IRQn = 10,
    DMA1_Channel1_IRQn = 11,
    DMA1_Channel2_IRQn = 12,
    DMA1_Channel3_IRQn = 13,
    DMA1_Channel4_IRQn = 14,
    DMA1_Channel5_IRQn = 15,
    DMA1_Channel6_IRQn = 16,
    DMA1_Channel7_IRQn = 17,
    ADC1_2_IRQn = 18,
    USB_HP_IRQn = 19,
    USB_LP_IRQn = 20,
    FDCAN1_IT0_IRQn = 21,
    FDCAN1_IT1_IRQn = 22,
    EXTI9_5_IRQn = 23,
    TIM1_BRK_TIM15_IRQn = 24,
    TIM1_UP_TIM16_IRQn = 25,
    TIM1_TRG_COM_TIM17_IRQn = 26,
    TIM1_CC_IRQn = 27,
    TIM2_IRQn = 28,
    TIM3_IRQn = 29,
    TIM4_IRQn = 30,
    I2C1_EV_IRQn = 31,
    I2C1_ER_IRQn = 32,
    I2C2_EV_IRQn = 33,
    I2C2_ER_IRQn = 34,
    SPI1_IRQn = 35,
    SPI2_IRQn = 36,
    USART1_IRQn = 37,
    USART2_IRQn = 38,
    USART3_IRQn = 39,
    EXTI15_10_IRQn = 40,
    RTC_Alarm_IRQn = 41,
    USBWakeUp_IRQn = 42,
    TIM8_BRK_IRQn = 43,
    TIM8_UP_IRQn = 44,
    TIM8_TRG_COM_IRQn = 45,
    TIM8_CC_IRQn = 46,
    ADC3_IRQn = 47,
    LPTIM1_IRQn = 49,
    SPI3_IRQn = 51,
    UART4_IRQn = 52,
    UART5_IRQn = 53,
    TIM6_DAC_IRQn = 54,
    TIM7_IRQn = 55,
    DMA2_Channel1_IRQn = 56,
    DMA2_Channel2_IRQn = 57,
    DMA2_Channel3_IRQn = 58,
    DMA2_Channel4_IRQn = 59,
    DMA2_Channel5_IRQn = 60,
    UCPD1_IRQn = 63,
    COMP1_2_3_IRQn = 64,
    COMP4_IRQn = 65,
    CRS_IRQn = 75,
    SAI1_IRQn = 76,
    TIM20_BRK_IRQn = 77,
    TIM20_UP_IRQn = 78,
    TIM20_TRG_COM_IRQn = 79,
    TIM20_CC_IRQn = 80,
    FPU_IRQn = 81,
    AES_IRQn = 85,
    FDCAN2_IT0_IRQn = 86,
    FDCAN2_IT1_IRQn = 87,
    RNG_IRQn = 90,
    LPUART1_IRQn = 91,
    I2C3_EV_IRQn = 92,
    I2C3_ER_IRQn = 93,
    DMAMUX_OVR_IRQn = 94,
    QUADSPI_IRQn = 95,
    DMA1_Channel8_IRQn = 96,
    DMA2_Channel6_IRQn = 97,
    DMA2_Channel7_IRQn = 98,
    DMA2_Channel8_IRQn = 99,
    CORDIC_IRQn = 100,
    FMAC_IRQn = 101,
}
#[repr(C)]
pub struct ADC_TypeDef {
    pub ISR: u32,
    pub IER: u32,
    pub CR: u32,
    pub CFGR: u32,
    pub CFGR2: u32,
    pub SMPR1: u32,
    pub SMPR2: u32,
    pub RESERVED1: u32,
    pub TR1: u32,
    pub TR2: u32,
    pub TR3: u32,
    pub RESERVED2: u32,
    pub SQR1: u32,
    pub SQR2: u32,
    pub SQR3: u32,
    pub SQR4: u32,
    pub DR: u32,
    pub RESERVED3: u32,
    pub RESERVED4: u32,
    pub JSQR: u32,
    pub RESERVED5: [u32; 4],
    pub OFR1: u32,
    pub OFR2: u32,
    pub OFR3: u32,
    pub OFR4: u32,
    pub RESERVED6: [u32; 4],
    pub JDR1: u32,
    pub JDR2: u32,
    pub JDR3: u32,
    pub JDR4: u32,
    pub RESERVED7: [u32; 4],
    pub AWD2CR: u32,
    pub AWD3CR: u32,
    pub RESERVED8: u32,
    pub RESERVED9: u32,
    pub DIFSEL: u32,
    pub CALFACT: u32,
    pub RESERVED10: [u32; 2],
    pub GCOMP: u32,
}
#[repr(C)]
pub struct ADC_Common_TypeDef {
    pub CSR: u32,
    pub RESERVED1: u32,
    pub CCR: u32,
    pub CDR: u32,
}
#[repr(C)]
pub struct FDCAN_GlobalTypeDef {
    pub CREL: u32,
    pub ENDN: u32,
    pub RESERVED1: u32,
    pub DBTP: u32,
    pub TEST: u32,
    pub RWD: u32,
    pub CCCR: u32,
    pub NBTP: u32,
    pub TSCC: u32,
    pub TSCV: u32,
    pub TOCC: u32,
    pub TOCV: u32,
    pub RESERVED2: [u32; 4],
    pub ECR: u32,
    pub PSR: u32,
    pub TDCR: u32,
    pub RESERVED3: u32,
    pub IR: u32,
    pub IE: u32,
    pub ILS: u32,
    pub ILE: u32,
    pub RESERVED4: [u32; 8],
    pub RXGFC: u32,
    pub XIDAM: u32,
    pub HPMS: u32,
    pub RESERVED5: u32,
    pub RXF0S: u32,
    pub RXF0A: u32,
    pub RXF1S: u32,
    pub RXF1A: u32,
    pub RESERVED6: [u32; 8],
    pub TXBC: u32,
    pub TXFQS: u32,
    pub TXBRP: u32,
    pub TXBAR: u32,
    pub TXBCR: u32,
    pub TXBTO: u32,
    pub TXBCF: u32,
    pub TXBTIE: u32,
    pub TXBCIE: u32,
    pub TXEFS: u32,
    pub TXEFA: u32,
}
#[repr(C)]
pub struct FDCAN_Config_TypeDef {
    pub CKDIV: u32,
}
#[repr(C)]
pub struct COMP_TypeDef {
    pub CSR: u32,
}
#[repr(C)]
pub struct CRC_TypeDef {
    pub DR: u32,
    pub IDR: u32,
    pub CR: u32,
    pub RESERVED0: u32,
    pub INIT: u32,
    pub POL: u32,
}
#[repr(C)]
pub struct CRS_TypeDef {
    pub CR: u32,
    pub CFGR: u32,
    pub ISR: u32,
    pub ICR: u32,
}
#[repr(C)]
pub struct DAC_TypeDef {
    pub CR: u32,
    pub SWTRIGR: u32,
    pub DHR12R1: u32,
    pub DHR12L1: u32,
    pub DHR8R1: u32,
    pub DHR12R2: u32,
    pub DHR12L2: u32,
    pub DHR8R2: u32,
    pub DHR12RD: u32,
    pub DHR12LD: u32,
    pub DHR8RD: u32,
    pub DOR1: u32,
    pub DOR2: u32,
    pub SR: u32,
    pub CCR: u32,
    pub MCR: u32,
    pub SHSR1: u32,
    pub SHSR2: u32,
    pub SHHR: u32,
    pub SHRR: u32,
    pub RESERVED: [u32; 2],
    pub STR1: u32,
    pub STR2: u32,
    pub STMODR: u32,
}
#[repr(C)]
pub struct DBGMCU_TypeDef {
    pub IDCODE: u32,
    pub CR: u32,
    pub APB1FZR1: u32,
    pub APB1FZR2: u32,
    pub APB2FZ: u32,
}
#[repr(C)]
pub struct DMA_Channel_TypeDef {
    pub CCR: u32,
    pub CNDTR: u32,
    pub CPAR: u32,
    pub CMAR: u32,
}
#[repr(C)]
pub struct DMA_TypeDef {
    pub ISR: u32,
    pub IFCR: u32,
}
#[repr(C)]
pub struct DMAMUX_Channel_TypeDef {
    pub CCR: u32,
}
#[repr(C)]
pub struct DMAMUX_ChannelStatus_TypeDef {
    pub CSR: u32,
    pub CFR: u32,
}
#[repr(C)]
pub struct DMAMUX_RequestGen_TypeDef {
    pub RGCR: u32,
}
#[repr(C)]
pub struct DMAMUX_RequestGenStatus_TypeDef {
    pub RGSR: u32,
    pub RGCFR: u32,
}
#[repr(C)]
pub struct EXTI_TypeDef {
    pub IMR1: u32,
    pub EMR1: u32,
    pub RTSR1: u32,
    pub FTSR1: u32,
    pub SWIER1: u32,
    pub PR1: u32,
    pub RESERVED1: u32,
    pub RESERVED2: u32,
    pub IMR2: u32,
    pub EMR2: u32,
    pub RTSR2: u32,
    pub FTSR2: u32,
    pub SWIER2: u32,
    pub PR2: u32,
}
#[repr(C)]
pub struct FLASH_TypeDef {
    pub ACR: u32,
    pub PDKEYR: u32,
    pub KEYR: u32,
    pub OPTKEYR: u32,
    pub SR: u32,
    pub CR: u32,
    pub ECCR: u32,
    pub RESERVED1: u32,
    pub OPTR: u32,
    pub PCROP1SR: u32,
    pub PCROP1ER: u32,
    pub WRP1AR: u32,
    pub WRP1BR: u32,
    pub RESERVED2: [u32; 15],
    pub SEC1R: u32,
}
#[repr(C)]
pub struct FMAC_TypeDef {
    pub X1BUFCFG: u32,
    pub X2BUFCFG: u32,
    pub YBUFCFG: u32,
    pub PARAM: u32,
    pub CR: u32,
    pub SR: u32,
    pub WDATA: u32,
    pub RDATA: u32,
}
#[repr(C)]
pub struct GPIO_TypeDef {
    pub MODER: u32,
    pub OTYPER: u32,
    pub OSPEEDR: u32,
    pub PUPDR: u32,
    pub IDR: u32,
    pub ODR: u32,
    pub BSRR: u32,
    pub LCKR: u32,
    pub AFR: [u32; 2],
    pub BRR: u32,
}
#[repr(C)]
pub struct I2C_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub OAR1: u32,
    pub OAR2: u32,
    pub TIMINGR: u32,
    pub TIMEOUTR: u32,
    pub ISR: u32,
    pub ICR: u32,
    pub PECR: u32,
    pub RXDR: u32,
    pub TXDR: u32,
}
#[repr(C)]
pub struct IWDG_TypeDef {
    pub KR: u32,
    pub PR: u32,
    pub RLR: u32,
    pub SR: u32,
    pub WINR: u32,
}
#[repr(C)]
pub struct LPTIM_TypeDef {
    pub ISR: u32,
    pub ICR: u32,
    pub IER: u32,
    pub CFGR: u32,
    pub CR: u32,
    pub CMP: u32,
    pub ARR: u32,
    pub CNT: u32,
    pub OR: u32,
}
#[repr(C)]
pub struct OPAMP_TypeDef {
    pub CSR: u32,
    pub RESERVED: [u32; 5],
    pub TCMR: u32,
}
#[repr(C)]
pub struct PWR_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub CR3: u32,
    pub CR4: u32,
    pub SR1: u32,
    pub SR2: u32,
    pub SCR: u32,
    pub RESERVED: u32,
    pub PUCRA: u32,
    pub PDCRA: u32,
    pub PUCRB: u32,
    pub PDCRB: u32,
    pub PUCRC: u32,
    pub PDCRC: u32,
    pub PUCRD: u32,
    pub PDCRD: u32,
    pub PUCRE: u32,
    pub PDCRE: u32,
    pub PUCRF: u32,
    pub PDCRF: u32,
    pub PUCRG: u32,
    pub PDCRG: u32,
    pub RESERVED1: [u32; 10],
    pub CR5: u32,
}
#[repr(C)]
pub struct QUADSPI_TypeDef {
    pub CR: u32,
    pub DCR: u32,
    pub SR: u32,
    pub FCR: u32,
    pub DLR: u32,
    pub CCR: u32,
    pub AR: u32,
    pub ABR: u32,
    pub DR: u32,
    pub PSMKR: u32,
    pub PSMAR: u32,
    pub PIR: u32,
    pub LPTR: u32,
}
#[repr(C)]
pub struct RCC_TypeDef {
    pub CR: u32,
    pub ICSCR: u32,
    pub CFGR: u32,
    pub PLLCFGR: u32,
    pub RESERVED0: u32,
    pub RESERVED1: u32,
    pub CIER: u32,
    pub CIFR: u32,
    pub CICR: u32,
    pub RESERVED2: u32,
    pub AHB1RSTR: u32,
    pub AHB2RSTR: u32,
    pub AHB3RSTR: u32,
    pub RESERVED3: u32,
    pub APB1RSTR1: u32,
    pub APB1RSTR2: u32,
    pub APB2RSTR: u32,
    pub RESERVED4: u32,
    pub AHB1ENR: u32,
    pub AHB2ENR: u32,
    pub AHB3ENR: u32,
    pub RESERVED5: u32,
    pub APB1ENR1: u32,
    pub APB1ENR2: u32,
    pub APB2ENR: u32,
    pub RESERVED6: u32,
    pub AHB1SMENR: u32,
    pub AHB2SMENR: u32,
    pub AHB3SMENR: u32,
    pub RESERVED7: u32,
    pub APB1SMENR1: u32,
    pub APB1SMENR2: u32,
    pub APB2SMENR: u32,
    pub RESERVED8: u32,
    pub CCIPR: u32,
    pub RESERVED9: u32,
    pub BDCR: u32,
    pub CSR: u32,
    pub CRRCR: u32,
    pub CCIPR2: u32,
}
#[repr(C)]
pub struct RTC_TypeDef {
    pub TR: u32,
    pub DR: u32,
    pub SSR: u32,
    pub ICSR: u32,
    pub PRER: u32,
    pub WUTR: u32,
    pub CR: u32,
    pub RESERVED0: u32,
    pub RESERVED1: u32,
    pub WPR: u32,
    pub CALR: u32,
    pub SHIFTR: u32,
    pub TSTR: u32,
    pub TSDR: u32,
    pub TSSSR: u32,
    pub RESERVED2: u32,
    pub ALRMAR: u32,
    pub ALRMASSR: u32,
    pub ALRMBR: u32,
    pub ALRMBSSR: u32,
    pub SR: u32,
    pub MISR: u32,
    pub RESERVED3: u32,
    pub SCR: u32,
}
#[repr(C)]
pub struct TAMP_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub RESERVED0: u32,
    pub FLTCR: u32,
    pub RESERVED1: [u32; 6],
    pub RESERVED2: u32,
    pub IER: u32,
    pub SR: u32,
    pub MISR: u32,
    pub RESERVED3: u32,
    pub SCR: u32,
    pub RESERVED4: [u32; 48],
    pub BKP0R: u32,
    pub BKP1R: u32,
    pub BKP2R: u32,
    pub BKP3R: u32,
    pub BKP4R: u32,
    pub BKP5R: u32,
    pub BKP6R: u32,
    pub BKP7R: u32,
    pub BKP8R: u32,
    pub BKP9R: u32,
    pub BKP10R: u32,
    pub BKP11R: u32,
    pub BKP12R: u32,
    pub BKP13R: u32,
    pub BKP14R: u32,
    pub BKP15R: u32,
    pub BKP16R: u32,
    pub BKP17R: u32,
    pub BKP18R: u32,
    pub BKP19R: u32,
    pub BKP20R: u32,
    pub BKP21R: u32,
    pub BKP22R: u32,
    pub BKP23R: u32,
    pub BKP24R: u32,
    pub BKP25R: u32,
    pub BKP26R: u32,
    pub BKP27R: u32,
    pub BKP28R: u32,
    pub BKP29R: u32,
    pub BKP30R: u32,
    pub BKP31R: u32,
}
#[repr(C)]
pub struct SAI_TypeDef {
    pub RESERVED: [u32; 17],
    pub PDMCR: u32,
    pub PDMDLY: u32,
}
#[repr(C)]
pub struct SAI_Block_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub FRCR: u32,
    pub SLOTR: u32,
    pub IMR: u32,
    pub SR: u32,
    pub CLRFR: u32,
    pub DR: u32,
}
#[repr(C)]
pub struct SPI_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub SR: u32,
    pub DR: u32,
    pub CRCPR: u32,
    pub RXCRCR: u32,
    pub TXCRCR: u32,
    pub I2SCFGR: u32,
    pub I2SPR: u32,
}
#[repr(C)]
pub struct SYSCFG_TypeDef {
    pub MEMRMP: u32,
    pub CFGR1: u32,
    pub EXTICR: [u32; 4],
    pub SCSR: u32,
    pub CFGR2: u32,
    pub SWPR: u32,
    pub SKR: u32,
}
#[repr(C)]
pub struct TIM_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub SMCR: u32,
    pub DIER: u32,
    pub SR: u32,
    pub EGR: u32,
    pub CCMR1: u32,
    pub CCMR2: u32,
    pub CCER: u32,
    pub CNT: u32,
    pub PSC: u32,
    pub ARR: u32,
    pub RCR: u32,
    pub CCR1: u32,
    pub CCR2: u32,
    pub CCR3: u32,
    pub CCR4: u32,
    pub BDTR: u32,
    pub CCR5: u32,
    pub CCR6: u32,
    pub CCMR3: u32,
    pub DTR2: u32,
    pub ECR: u32,
    pub TISEL: u32,
    pub AF1: u32,
    pub AF2: u32,
    pub OR: u32,
    pub RESERVED0: [u32; 220],
    pub DCR: u32,
    pub DMAR: u32,
}
#[repr(C)]
pub struct USART_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub CR3: u32,
    pub BRR: u32,
    pub GTPR: u32,
    pub RTOR: u32,
    pub RQR: u32,
    pub ISR: u32,
    pub ICR: u32,
    pub RDR: u32,
    pub TDR: u32,
    pub PRESC: u32,
}
#[repr(C)]
pub struct USB_TypeDef {
    pub EP0R: u32,
    pub RESERVED0: u32,
    pub EP1R: u32,
    pub RESERVED1: u32,
    pub EP2R: u32,
    pub RESERVED2: u32,
    pub EP3R: u32,
    pub RESERVED3: u32,
    pub EP4R: u32,
    pub RESERVED4: u32,
    pub EP5R: u32,
    pub RESERVED5: u32,
    pub EP6R: u32,
    pub RESERVED6: u32,
    pub EP7R: u32,
    pub RESERVED7: [u32; 17],
    pub CNTR: u32,
    pub RESERVED8: u32,
    pub ISTR: u32,
    pub RESERVED9: u32,
    pub FNR: u32,
    pub RESERVEDA: u32,
    pub DADDR: u32,
    pub RESERVEDB: u32,
    pub BTABLE: u32,
    pub RESERVEDC: u32,
    pub LPMCSR: u32,
    pub RESERVEDD: u32,
    pub BCDR: u32,
    pub RESERVEDE: u32,
}
#[repr(C)]
pub struct VREFBUF_TypeDef {
    pub CSR: u32,
    pub CCR: u32,
}
#[repr(C)]
pub struct WWDG_TypeDef {
    pub CR: u32,
    pub CFR: u32,
    pub SR: u32,
}
#[repr(C)]
pub struct AES_TypeDef {
    pub CR: u32,
    pub SR: u32,
    pub DINR: u32,
    pub DOUTR: u32,
    pub KEYR0: u32,
    pub KEYR1: u32,
    pub KEYR2: u32,
    pub KEYR3: u32,
    pub IVR0: u32,
    pub IVR1: u32,
    pub IVR2: u32,
    pub IVR3: u32,
    pub KEYR4: u32,
    pub KEYR5: u32,
    pub KEYR6: u32,
    pub KEYR7: u32,
    pub SUSP0R: u32,
    pub SUSP1R: u32,
    pub SUSP2R: u32,
    pub SUSP3R: u32,
    pub SUSP4R: u32,
    pub SUSP5R: u32,
    pub SUSP6R: u32,
    pub SUSP7R: u32,
}
#[repr(C)]
pub struct RNG_TypeDef {
    pub CR: u32,
    pub SR: u32,
    pub DR: u32,
}
#[repr(C)]
pub struct CORDIC_TypeDef {
    pub CSR: u32,
    pub WDATA: u32,
    pub RDATA: u32,
}
#[repr(C)]
pub struct UCPD_TypeDef {
    pub CFG1: u32,
    pub CFG2: u32,
    pub RESERVED0: u32,
    pub CR: u32,
    pub IMR: u32,
    pub SR: u32,
    pub ICR: u32,
    pub TX_ORDSET: u32,
    pub TX_PAYSZ: u32,
    pub TXDR: u32,
    pub RX_ORDSET: u32,
    pub RX_PAYSZ: u32,
    pub RXDR: u32,
    pub RX_ORDEXT1: u32,
    pub RX_ORDEXT2: u32,
}
pub const __CM4_REV: u32 = 0x0001;
pub const __MPU_PRESENT: u32 = 1;
pub const __NVIC_PRIO_BITS: u32 = 4;
pub const __Vendor_SysTickConfig: u32 = 0;
pub const __FPU_PRESENT: u32 = 1;
pub const RTC_TAMP_INT_NB: u32 = 4u;
pub const RTC_TAMP_NB: u32 = 3u;
pub const RTC_BACKUP_NB: u32 = 32u;
pub const FLASH_BASE: u32 = 0x08000000;
pub const SRAM1_BASE: u32 = 0x20000000;
pub const SRAM2_BASE: u32 = 0x20014000;
pub const CCMSRAM_BASE: u32 = 0x10000000;
pub const PERIPH_BASE: u32 = 0x40000000;
pub const QSPI_BASE: u32 = 0x90000000;
pub const QSPI_R_BASE: u32 = 0xA0001000;
pub const SRAM1_BB_BASE: u32 = 0x22000000;
pub const SRAM2_BB_BASE: u32 = 0x22280000;
pub const CCMSRAM_BB_BASE: u32 = 0x22300000;
pub const PERIPH_BB_BASE: u32 = 0x42000000;
pub const SRAM_BASE: u32 = SRAM1_BASE;
pub const SRAM_BB_BASE: u32 = SRAM1_BB_BASE;
pub const SRAM1_SIZE_MAX: u32 = 0x00014000;
pub const SRAM2_SIZE: u32 = 0x00004000;
pub const CCMSRAM_SIZE: u32 = 0x00004000;
pub const APB1PERIPH_BASE: u32 = PERIPH_BASE;
pub const APB2PERIPH_BASE: u32 = PERIPH_BASE + 0x00010000;
pub const AHB1PERIPH_BASE: u32 = PERIPH_BASE + 0x00020000;
pub const AHB2PERIPH_BASE: u32 = PERIPH_BASE + 0x08000000;
pub const TIM2_BASE: u32 = APB1PERIPH_BASE + 0x0000;
pub const TIM3_BASE: u32 = APB1PERIPH_BASE + 0x0400;
pub const TIM4_BASE: u32 = APB1PERIPH_BASE + 0x0800;
pub const TIM6_BASE: u32 = APB1PERIPH_BASE + 0x1000;
pub const TIM7_BASE: u32 = APB1PERIPH_BASE + 0x1400;
pub const CRS_BASE: u32 = APB1PERIPH_BASE + 0x2000;
pub const TAMP_BASE: u32 = APB1PERIPH_BASE + 0x2400;
pub const RTC_BASE: u32 = APB1PERIPH_BASE + 0x2800;
pub const WWDG_BASE: u32 = APB1PERIPH_BASE + 0x2C00;
pub const IWDG_BASE: u32 = APB1PERIPH_BASE + 0x3000;
pub const SPI2_BASE: u32 = APB1PERIPH_BASE + 0x3800;
pub const SPI3_BASE: u32 = APB1PERIPH_BASE + 0x3C00;
pub const USART2_BASE: u32 = APB1PERIPH_BASE + 0x4400;
pub const USART3_BASE: u32 = APB1PERIPH_BASE + 0x4800;
pub const UART4_BASE: u32 = APB1PERIPH_BASE + 0x4C00;
pub const UART5_BASE: u32 = APB1PERIPH_BASE + 0x5000;
pub const I2C1_BASE: u32 = APB1PERIPH_BASE + 0x5400;
pub const I2C2_BASE: u32 = APB1PERIPH_BASE + 0x5800;
pub const USB_BASE: u32 = APB1PERIPH_BASE + 0x5C00;
pub const USB_PMAADDR: u32 = APB1PERIPH_BASE + 0x6000;
pub const FDCAN1_BASE: u32 = APB1PERIPH_BASE + 0x6400;
pub const FDCAN_CONFIG_BASE: u32 = APB1PERIPH_BASE + 0x6500;
pub const FDCAN2_BASE: u32 = APB1PERIPH_BASE + 0x6800;
pub const PWR_BASE: u32 = APB1PERIPH_BASE + 0x7000;
pub const I2C3_BASE: u32 = APB1PERIPH_BASE + 0x7800;
pub const LPTIM1_BASE: u32 = APB1PERIPH_BASE + 0x7C00;
pub const LPUART1_BASE: u32 = APB1PERIPH_BASE + 0x8000;
pub const UCPD1_BASE: u32 = APB1PERIPH_BASE + 0xA000;
pub const SRAMCAN_BASE: u32 = APB1PERIPH_BASE + 0xA400;
pub const SYSCFG_BASE: u32 = APB2PERIPH_BASE + 0x0000;
pub const VREFBUF_BASE: u32 = APB2PERIPH_BASE + 0x0030;
pub const COMP1_BASE: u32 = APB2PERIPH_BASE + 0x0200;
pub const COMP2_BASE: u32 = APB2PERIPH_BASE + 0x0204;
pub const COMP3_BASE: u32 = APB2PERIPH_BASE + 0x0208;
pub const COMP4_BASE: u32 = APB2PERIPH_BASE + 0x020C;
pub const OPAMP_BASE: u32 = APB2PERIPH_BASE + 0x0300;
pub const OPAMP1_BASE: u32 = APB2PERIPH_BASE + 0x0300;
pub const OPAMP2_BASE: u32 = APB2PERIPH_BASE + 0x0304;
pub const OPAMP3_BASE: u32 = APB2PERIPH_BASE + 0x0308;
pub const OPAMP6_BASE: u32 = APB2PERIPH_BASE + 0x0314;
pub const EXTI_BASE: u32 = APB2PERIPH_BASE + 0x0400;
pub const TIM1_BASE: u32 = APB2PERIPH_BASE + 0x2C00;
pub const SPI1_BASE: u32 = APB2PERIPH_BASE + 0x3000;
pub const TIM8_BASE: u32 = APB2PERIPH_BASE + 0x3400;
pub const USART1_BASE: u32 = APB2PERIPH_BASE + 0x3800;
pub const TIM15_BASE: u32 = APB2PERIPH_BASE + 0x4000;
pub const TIM16_BASE: u32 = APB2PERIPH_BASE + 0x4400;
pub const TIM17_BASE: u32 = APB2PERIPH_BASE + 0x4800;
pub const TIM20_BASE: u32 = APB2PERIPH_BASE + 0x5000;
pub const SAI1_BASE: u32 = APB2PERIPH_BASE + 0x5400;
pub const SAI1_Block_A_BASE: u32 = SAI1_BASE + 0x0004;
pub const SAI1_Block_B_BASE: u32 = SAI1_BASE + 0x0024;
pub const DMA1_BASE: u32 = AHB1PERIPH_BASE;
pub const DMA2_BASE: u32 = AHB1PERIPH_BASE + 0x0400;
pub const DMAMUX1_BASE: u32 = AHB1PERIPH_BASE + 0x0800;
pub const CORDIC_BASE: u32 = AHB1PERIPH_BASE + 0x0C00;
pub const RCC_BASE: u32 = AHB1PERIPH_BASE + 0x1000;
pub const FMAC_BASE: u32 = AHB1PERIPH_BASE + 0x1400;
pub const FLASH_R_BASE: u32 = AHB1PERIPH_BASE + 0x2000;
pub const CRC_BASE: u32 = AHB1PERIPH_BASE + 0x3000;
pub const DMA1_Channel1_BASE: u32 = DMA1_BASE + 0x0008;
pub const DMA1_Channel2_BASE: u32 = DMA1_BASE + 0x001C;
pub const DMA1_Channel3_BASE: u32 = DMA1_BASE + 0x0030;
pub const DMA1_Channel4_BASE: u32 = DMA1_BASE + 0x0044;
pub const DMA1_Channel5_BASE: u32 = DMA1_BASE + 0x0058;
pub const DMA1_Channel6_BASE: u32 = DMA1_BASE + 0x006C;
pub const DMA1_Channel7_BASE: u32 = DMA1_BASE + 0x0080;
pub const DMA1_Channel8_BASE: u32 = DMA1_BASE + 0x0094;
pub const DMA2_Channel1_BASE: u32 = DMA2_BASE + 0x0008;
pub const DMA2_Channel2_BASE: u32 = DMA2_BASE + 0x001C;
pub const DMA2_Channel3_BASE: u32 = DMA2_BASE + 0x0030;
pub const DMA2_Channel4_BASE: u32 = DMA2_BASE + 0x0044;
pub const DMA2_Channel5_BASE: u32 = DMA2_BASE + 0x0058;
pub const DMA2_Channel6_BASE: u32 = DMA2_BASE + 0x006C;
pub const DMA2_Channel7_BASE: u32 = DMA2_BASE + 0x0080;
pub const DMA2_Channel8_BASE: u32 = DMA2_BASE + 0x0094;
pub const DMAMUX1_Channel0_BASE: u32 = DMAMUX1_BASE;
pub const DMAMUX1_Channel1_BASE: u32 = DMAMUX1_BASE + 0x0004;
pub const DMAMUX1_Channel2_BASE: u32 = DMAMUX1_BASE + 0x0008;
pub const DMAMUX1_Channel3_BASE: u32 = DMAMUX1_BASE + 0x000C;
pub const DMAMUX1_Channel4_BASE: u32 = DMAMUX1_BASE + 0x0010;
pub const DMAMUX1_Channel5_BASE: u32 = DMAMUX1_BASE + 0x0014;
pub const DMAMUX1_Channel6_BASE: u32 = DMAMUX1_BASE + 0x0018;
pub const DMAMUX1_Channel7_BASE: u32 = DMAMUX1_BASE + 0x001C;
pub const DMAMUX1_Channel8_BASE: u32 = DMAMUX1_BASE + 0x0020;
pub const DMAMUX1_Channel9_BASE: u32 = DMAMUX1_BASE + 0x0024;
pub const DMAMUX1_Channel10_BASE: u32 = DMAMUX1_BASE + 0x0028;
pub const DMAMUX1_Channel11_BASE: u32 = DMAMUX1_BASE + 0x002C;
pub const DMAMUX1_Channel12_BASE: u32 = DMAMUX1_BASE + 0x0030;
pub const DMAMUX1_Channel13_BASE: u32 = DMAMUX1_BASE + 0x0034;
pub const DMAMUX1_Channel14_BASE: u32 = DMAMUX1_BASE + 0x0038;
pub const DMAMUX1_Channel15_BASE: u32 = DMAMUX1_BASE + 0x003C;
pub const DMAMUX1_RequestGenerator0_BASE: u32 = DMAMUX1_BASE + 0x0100;
pub const DMAMUX1_RequestGenerator1_BASE: u32 = DMAMUX1_BASE + 0x0104;
pub const DMAMUX1_RequestGenerator2_BASE: u32 = DMAMUX1_BASE + 0x0108;
pub const DMAMUX1_RequestGenerator3_BASE: u32 = DMAMUX1_BASE + 0x010C;
pub const DMAMUX1_ChannelStatus_BASE: u32 = DMAMUX1_BASE + 0x0080;
pub const DMAMUX1_RequestGenStatus_BASE: u32 = DMAMUX1_BASE + 0x0140;
pub const GPIOA_BASE: u32 = AHB2PERIPH_BASE + 0x0000;
pub const GPIOB_BASE: u32 = AHB2PERIPH_BASE + 0x0400;
pub const GPIOC_BASE: u32 = AHB2PERIPH_BASE + 0x0800;
pub const GPIOD_BASE: u32 = AHB2PERIPH_BASE + 0x0C00;
pub const GPIOE_BASE: u32 = AHB2PERIPH_BASE + 0x1000;
pub const GPIOF_BASE: u32 = AHB2PERIPH_BASE + 0x1400;
pub const GPIOG_BASE: u32 = AHB2PERIPH_BASE + 0x1800;
pub const ADC1_BASE: u32 = AHB2PERIPH_BASE + 0x08000000;
pub const ADC2_BASE: u32 = AHB2PERIPH_BASE + 0x08000100;
pub const ADC12_COMMON_BASE: u32 = AHB2PERIPH_BASE + 0x08000300;
pub const ADC3_BASE: u32 = AHB2PERIPH_BASE + 0x08000400;
pub const ADC345_COMMON_BASE: u32 = AHB2PERIPH_BASE + 0x08000700;
pub const DAC_BASE: u32 = AHB2PERIPH_BASE + 0x08000800;
pub const DAC1_BASE: u32 = AHB2PERIPH_BASE + 0x08000800;
pub const DAC3_BASE: u32 = AHB2PERIPH_BASE + 0x08001000;
pub const AES_BASE: u32 = AHB2PERIPH_BASE + 0x08060000;
pub const RNG_BASE: u32 = AHB2PERIPH_BASE + 0x08060800;
pub const DBGMCU_BASE: u32 = 0xE0042000;
pub const PACKAGE_BASE: u32 = 0x1FFF7500;
pub const UID_BASE: u32 = 0x1FFF7590;
pub const FLASHSIZE_BASE: u32 = 0x1FFF75E0;
pub const LSI_STARTUP_TIME: u32 = 130;
pub const ADC_ISR_ADRDY_Pos: u32 = 0;
pub const ADC_ISR_ADRDY_Msk: u32 = 0x1 << ADC_ISR_ADRDY_Pos;
pub const ADC_ISR_ADRDY: u32 = ADC_ISR_ADRDY_Msk;
pub const ADC_ISR_EOSMP_Pos: u32 = 1;
pub const ADC_ISR_EOSMP_Msk: u32 = 0x1 << ADC_ISR_EOSMP_Pos;
pub const ADC_ISR_EOSMP: u32 = ADC_ISR_EOSMP_Msk;
pub const ADC_ISR_EOC_Pos: u32 = 2;
pub const ADC_ISR_EOC_Msk: u32 = 0x1 << ADC_ISR_EOC_Pos;
pub const ADC_ISR_EOC: u32 = ADC_ISR_EOC_Msk;
pub const ADC_ISR_EOS_Pos: u32 = 3;
pub const ADC_ISR_EOS_Msk: u32 = 0x1 << ADC_ISR_EOS_Pos;
pub const ADC_ISR_EOS: u32 = ADC_ISR_EOS_Msk;
pub const ADC_ISR_OVR_Pos: u32 = 4;
pub const ADC_ISR_OVR_Msk: u32 = 0x1 << ADC_ISR_OVR_Pos;
pub const ADC_ISR_OVR: u32 = ADC_ISR_OVR_Msk;
pub const ADC_ISR_JEOC_Pos: u32 = 5;
pub const ADC_ISR_JEOC_Msk: u32 = 0x1 << ADC_ISR_JEOC_Pos;
pub const ADC_ISR_JEOC: u32 = ADC_ISR_JEOC_Msk;
pub const ADC_ISR_JEOS_Pos: u32 = 6;
pub const ADC_ISR_JEOS_Msk: u32 = 0x1 << ADC_ISR_JEOS_Pos;
pub const ADC_ISR_JEOS: u32 = ADC_ISR_JEOS_Msk;
pub const ADC_ISR_AWD1_Pos: u32 = 7;
pub const ADC_ISR_AWD1_Msk: u32 = 0x1 << ADC_ISR_AWD1_Pos;
pub const ADC_ISR_AWD1: u32 = ADC_ISR_AWD1_Msk;
pub const ADC_ISR_AWD2_Pos: u32 = 8;
pub const ADC_ISR_AWD2_Msk: u32 = 0x1 << ADC_ISR_AWD2_Pos;
pub const ADC_ISR_AWD2: u32 = ADC_ISR_AWD2_Msk;
pub const ADC_ISR_AWD3_Pos: u32 = 9;
pub const ADC_ISR_AWD3_Msk: u32 = 0x1 << ADC_ISR_AWD3_Pos;
pub const ADC_ISR_AWD3: u32 = ADC_ISR_AWD3_Msk;
pub const ADC_ISR_JQOVF_Pos: u32 = 10;
pub const ADC_ISR_JQOVF_Msk: u32 = 0x1 << ADC_ISR_JQOVF_Pos;
pub const ADC_ISR_JQOVF: u32 = ADC_ISR_JQOVF_Msk;
pub const ADC_IER_ADRDYIE_Pos: u32 = 0;
pub const ADC_IER_ADRDYIE_Msk: u32 = 0x1 << ADC_IER_ADRDYIE_Pos;
pub const ADC_IER_ADRDYIE: u32 = ADC_IER_ADRDYIE_Msk;
pub const ADC_IER_EOSMPIE_Pos: u32 = 1;
pub const ADC_IER_EOSMPIE_Msk: u32 = 0x1 << ADC_IER_EOSMPIE_Pos;
pub const ADC_IER_EOSMPIE: u32 = ADC_IER_EOSMPIE_Msk;
pub const ADC_IER_EOCIE_Pos: u32 = 2;
pub const ADC_IER_EOCIE_Msk: u32 = 0x1 << ADC_IER_EOCIE_Pos;
pub const ADC_IER_EOCIE: u32 = ADC_IER_EOCIE_Msk;
pub const ADC_IER_EOSIE_Pos: u32 = 3;
pub const ADC_IER_EOSIE_Msk: u32 = 0x1 << ADC_IER_EOSIE_Pos;
pub const ADC_IER_EOSIE: u32 = ADC_IER_EOSIE_Msk;
pub const ADC_IER_OVRIE_Pos: u32 = 4;
pub const ADC_IER_OVRIE_Msk: u32 = 0x1 << ADC_IER_OVRIE_Pos;
pub const ADC_IER_OVRIE: u32 = ADC_IER_OVRIE_Msk;
pub const ADC_IER_JEOCIE_Pos: u32 = 5;
pub const ADC_IER_JEOCIE_Msk: u32 = 0x1 << ADC_IER_JEOCIE_Pos;
pub const ADC_IER_JEOCIE: u32 = ADC_IER_JEOCIE_Msk;
pub const ADC_IER_JEOSIE_Pos: u32 = 6;
pub const ADC_IER_JEOSIE_Msk: u32 = 0x1 << ADC_IER_JEOSIE_Pos;
pub const ADC_IER_JEOSIE: u32 = ADC_IER_JEOSIE_Msk;
pub const ADC_IER_AWD1IE_Pos: u32 = 7;
pub const ADC_IER_AWD1IE_Msk: u32 = 0x1 << ADC_IER_AWD1IE_Pos;
pub const ADC_IER_AWD1IE: u32 = ADC_IER_AWD1IE_Msk;
pub const ADC_IER_AWD2IE_Pos: u32 = 8;
pub const ADC_IER_AWD2IE_Msk: u32 = 0x1 << ADC_IER_AWD2IE_Pos;
pub const ADC_IER_AWD2IE: u32 = ADC_IER_AWD2IE_Msk;
pub const ADC_IER_AWD3IE_Pos: u32 = 9;
pub const ADC_IER_AWD3IE_Msk: u32 = 0x1 << ADC_IER_AWD3IE_Pos;
pub const ADC_IER_AWD3IE: u32 = ADC_IER_AWD3IE_Msk;
pub const ADC_IER_JQOVFIE_Pos: u32 = 10;
pub const ADC_IER_JQOVFIE_Msk: u32 = 0x1 << ADC_IER_JQOVFIE_Pos;
pub const ADC_IER_JQOVFIE: u32 = ADC_IER_JQOVFIE_Msk;
pub const ADC_CR_ADEN_Pos: u32 = 0;
pub const ADC_CR_ADEN_Msk: u32 = 0x1 << ADC_CR_ADEN_Pos;
pub const ADC_CR_ADEN: u32 = ADC_CR_ADEN_Msk;
pub const ADC_CR_ADDIS_Pos: u32 = 1;
pub const ADC_CR_ADDIS_Msk: u32 = 0x1 << ADC_CR_ADDIS_Pos;
pub const ADC_CR_ADDIS: u32 = ADC_CR_ADDIS_Msk;
pub const ADC_CR_ADSTART_Pos: u32 = 2;
pub const ADC_CR_ADSTART_Msk: u32 = 0x1 << ADC_CR_ADSTART_Pos;
pub const ADC_CR_ADSTART: u32 = ADC_CR_ADSTART_Msk;
pub const ADC_CR_JADSTART_Pos: u32 = 3;
pub const ADC_CR_JADSTART_Msk: u32 = 0x1 << ADC_CR_JADSTART_Pos;
pub const ADC_CR_JADSTART: u32 = ADC_CR_JADSTART_Msk;
pub const ADC_CR_ADSTP_Pos: u32 = 4;
pub const ADC_CR_ADSTP_Msk: u32 = 0x1 << ADC_CR_ADSTP_Pos;
pub const ADC_CR_ADSTP: u32 = ADC_CR_ADSTP_Msk;
pub const ADC_CR_JADSTP_Pos: u32 = 5;
pub const ADC_CR_JADSTP_Msk: u32 = 0x1 << ADC_CR_JADSTP_Pos;
pub const ADC_CR_JADSTP: u32 = ADC_CR_JADSTP_Msk;
pub const ADC_CR_ADVREGEN_Pos: u32 = 28;
pub const ADC_CR_ADVREGEN_Msk: u32 = 0x1 << ADC_CR_ADVREGEN_Pos;
pub const ADC_CR_ADVREGEN: u32 = ADC_CR_ADVREGEN_Msk;
pub const ADC_CR_DEEPPWD_Pos: u32 = 29;
pub const ADC_CR_DEEPPWD_Msk: u32 = 0x1 << ADC_CR_DEEPPWD_Pos;
pub const ADC_CR_DEEPPWD: u32 = ADC_CR_DEEPPWD_Msk;
pub const ADC_CR_ADCALDIF_Pos: u32 = 30;
pub const ADC_CR_ADCALDIF_Msk: u32 = 0x1 << ADC_CR_ADCALDIF_Pos;
pub const ADC_CR_ADCALDIF: u32 = ADC_CR_ADCALDIF_Msk;
pub const ADC_CR_ADCAL_Pos: u32 = 31;
pub const ADC_CR_ADCAL_Msk: u32 = 0x1 << ADC_CR_ADCAL_Pos;
pub const ADC_CR_ADCAL: u32 = ADC_CR_ADCAL_Msk;
pub const ADC_CFGR_DMAEN_Pos: u32 = 0;
pub const ADC_CFGR_DMAEN_Msk: u32 = 0x1 << ADC_CFGR_DMAEN_Pos;
pub const ADC_CFGR_DMAEN: u32 = ADC_CFGR_DMAEN_Msk;
pub const ADC_CFGR_DMACFG_Pos: u32 = 1;
pub const ADC_CFGR_DMACFG_Msk: u32 = 0x1 << ADC_CFGR_DMACFG_Pos;
pub const ADC_CFGR_DMACFG: u32 = ADC_CFGR_DMACFG_Msk;
pub const ADC_CFGR_RES_Pos: u32 = 3;
pub const ADC_CFGR_RES_Msk: u32 = 0x3 << ADC_CFGR_RES_Pos;
pub const ADC_CFGR_RES: u32 = ADC_CFGR_RES_Msk;
pub const ADC_CFGR_RES_0: u32 = 0x1 << ADC_CFGR_RES_Pos;
pub const ADC_CFGR_RES_1: u32 = 0x2 << ADC_CFGR_RES_Pos;
pub const ADC_CFGR_EXTSEL_Pos: u32 = 5;
pub const ADC_CFGR_EXTSEL_Msk: u32 = 0x1F << ADC_CFGR_EXTSEL_Pos;
pub const ADC_CFGR_EXTSEL: u32 = ADC_CFGR_EXTSEL_Msk;
pub const ADC_CFGR_EXTSEL_0: u32 = 0x1 << ADC_CFGR_EXTSEL_Pos;
pub const ADC_CFGR_EXTSEL_1: u32 = 0x2 << ADC_CFGR_EXTSEL_Pos;
pub const ADC_CFGR_EXTSEL_2: u32 = 0x4 << ADC_CFGR_EXTSEL_Pos;
pub const ADC_CFGR_EXTSEL_3: u32 = 0x8 << ADC_CFGR_EXTSEL_Pos;
pub const ADC_CFGR_EXTSEL_4: u32 = 0x10 << ADC_CFGR_EXTSEL_Pos;
pub const ADC_CFGR_EXTEN_Pos: u32 = 10;
pub const ADC_CFGR_EXTEN_Msk: u32 = 0x3 << ADC_CFGR_EXTEN_Pos;
pub const ADC_CFGR_EXTEN: u32 = ADC_CFGR_EXTEN_Msk;
pub const ADC_CFGR_EXTEN_0: u32 = 0x1 << ADC_CFGR_EXTEN_Pos;
pub const ADC_CFGR_EXTEN_1: u32 = 0x2 << ADC_CFGR_EXTEN_Pos;
pub const ADC_CFGR_OVRMOD_Pos: u32 = 12;
pub const ADC_CFGR_OVRMOD_Msk: u32 = 0x1 << ADC_CFGR_OVRMOD_Pos;
pub const ADC_CFGR_OVRMOD: u32 = ADC_CFGR_OVRMOD_Msk;
pub const ADC_CFGR_CONT_Pos: u32 = 13;
pub const ADC_CFGR_CONT_Msk: u32 = 0x1 << ADC_CFGR_CONT_Pos;
pub const ADC_CFGR_CONT: u32 = ADC_CFGR_CONT_Msk;
pub const ADC_CFGR_AUTDLY_Pos: u32 = 14;
pub const ADC_CFGR_AUTDLY_Msk: u32 = 0x1 << ADC_CFGR_AUTDLY_Pos;
pub const ADC_CFGR_AUTDLY: u32 = ADC_CFGR_AUTDLY_Msk;
pub const ADC_CFGR_ALIGN_Pos: u32 = 15;
pub const ADC_CFGR_ALIGN_Msk: u32 = 0x1 << ADC_CFGR_ALIGN_Pos;
pub const ADC_CFGR_ALIGN: u32 = ADC_CFGR_ALIGN_Msk;
pub const ADC_CFGR_DISCEN_Pos: u32 = 16;
pub const ADC_CFGR_DISCEN_Msk: u32 = 0x1 << ADC_CFGR_DISCEN_Pos;
pub const ADC_CFGR_DISCEN: u32 = ADC_CFGR_DISCEN_Msk;
pub const ADC_CFGR_DISCNUM_Pos: u32 = 17;
pub const ADC_CFGR_DISCNUM_Msk: u32 = 0x7 << ADC_CFGR_DISCNUM_Pos;
pub const ADC_CFGR_DISCNUM: u32 = ADC_CFGR_DISCNUM_Msk;
pub const ADC_CFGR_DISCNUM_0: u32 = 0x1 << ADC_CFGR_DISCNUM_Pos;
pub const ADC_CFGR_DISCNUM_1: u32 = 0x2 << ADC_CFGR_DISCNUM_Pos;
pub const ADC_CFGR_DISCNUM_2: u32 = 0x4 << ADC_CFGR_DISCNUM_Pos;
pub const ADC_CFGR_JDISCEN_Pos: u32 = 20;
pub const ADC_CFGR_JDISCEN_Msk: u32 = 0x1 << ADC_CFGR_JDISCEN_Pos;
pub const ADC_CFGR_JDISCEN: u32 = ADC_CFGR_JDISCEN_Msk;
pub const ADC_CFGR_JQM_Pos: u32 = 21;
pub const ADC_CFGR_JQM_Msk: u32 = 0x1 << ADC_CFGR_JQM_Pos;
pub const ADC_CFGR_JQM: u32 = ADC_CFGR_JQM_Msk;
pub const ADC_CFGR_AWD1SGL_Pos: u32 = 22;
pub const ADC_CFGR_AWD1SGL_Msk: u32 = 0x1 << ADC_CFGR_AWD1SGL_Pos;
pub const ADC_CFGR_AWD1SGL: u32 = ADC_CFGR_AWD1SGL_Msk;
pub const ADC_CFGR_AWD1EN_Pos: u32 = 23;
pub const ADC_CFGR_AWD1EN_Msk: u32 = 0x1 << ADC_CFGR_AWD1EN_Pos;
pub const ADC_CFGR_AWD1EN: u32 = ADC_CFGR_AWD1EN_Msk;
pub const ADC_CFGR_JAWD1EN_Pos: u32 = 24;
pub const ADC_CFGR_JAWD1EN_Msk: u32 = 0x1 << ADC_CFGR_JAWD1EN_Pos;
pub const ADC_CFGR_JAWD1EN: u32 = ADC_CFGR_JAWD1EN_Msk;
pub const ADC_CFGR_JAUTO_Pos: u32 = 25;
pub const ADC_CFGR_JAUTO_Msk: u32 = 0x1 << ADC_CFGR_JAUTO_Pos;
pub const ADC_CFGR_JAUTO: u32 = ADC_CFGR_JAUTO_Msk;
pub const ADC_CFGR_AWD1CH_Pos: u32 = 26;
pub const ADC_CFGR_AWD1CH_Msk: u32 = 0x1F << ADC_CFGR_AWD1CH_Pos;
pub const ADC_CFGR_AWD1CH: u32 = ADC_CFGR_AWD1CH_Msk;
pub const ADC_CFGR_AWD1CH_0: u32 = 0x01 << ADC_CFGR_AWD1CH_Pos;
pub const ADC_CFGR_AWD1CH_1: u32 = 0x02 << ADC_CFGR_AWD1CH_Pos;
pub const ADC_CFGR_AWD1CH_2: u32 = 0x04 << ADC_CFGR_AWD1CH_Pos;
pub const ADC_CFGR_AWD1CH_3: u32 = 0x08 << ADC_CFGR_AWD1CH_Pos;
pub const ADC_CFGR_AWD1CH_4: u32 = 0x10 << ADC_CFGR_AWD1CH_Pos;
pub const ADC_CFGR_JQDIS_Pos: u32 = 31;
pub const ADC_CFGR_JQDIS_Msk: u32 = 0x1 << ADC_CFGR_JQDIS_Pos;
pub const ADC_CFGR_JQDIS: u32 = ADC_CFGR_JQDIS_Msk;
pub const ADC_CFGR2_ROVSE_Pos: u32 = 0;
pub const ADC_CFGR2_ROVSE_Msk: u32 = 0x1 << ADC_CFGR2_ROVSE_Pos;
pub const ADC_CFGR2_ROVSE: u32 = ADC_CFGR2_ROVSE_Msk;
pub const ADC_CFGR2_JOVSE_Pos: u32 = 1;
pub const ADC_CFGR2_JOVSE_Msk: u32 = 0x1 << ADC_CFGR2_JOVSE_Pos;
pub const ADC_CFGR2_JOVSE: u32 = ADC_CFGR2_JOVSE_Msk;
pub const ADC_CFGR2_OVSR_Pos: u32 = 2;
pub const ADC_CFGR2_OVSR_Msk: u32 = 0x7 << ADC_CFGR2_OVSR_Pos;
pub const ADC_CFGR2_OVSR: u32 = ADC_CFGR2_OVSR_Msk;
pub const ADC_CFGR2_OVSR_0: u32 = 0x1 << ADC_CFGR2_OVSR_Pos;
pub const ADC_CFGR2_OVSR_1: u32 = 0x2 << ADC_CFGR2_OVSR_Pos;
pub const ADC_CFGR2_OVSR_2: u32 = 0x4 << ADC_CFGR2_OVSR_Pos;
pub const ADC_CFGR2_OVSS_Pos: u32 = 5;
pub const ADC_CFGR2_OVSS_Msk: u32 = 0xF << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_OVSS: u32 = ADC_CFGR2_OVSS_Msk;
pub const ADC_CFGR2_OVSS_0: u32 = 0x1 << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_OVSS_1: u32 = 0x2 << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_OVSS_2: u32 = 0x4 << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_OVSS_3: u32 = 0x8 << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_TROVS_Pos: u32 = 9;
pub const ADC_CFGR2_TROVS_Msk: u32 = 0x1 << ADC_CFGR2_TROVS_Pos;
pub const ADC_CFGR2_TROVS: u32 = ADC_CFGR2_TROVS_Msk;
pub const ADC_CFGR2_ROVSM_Pos: u32 = 10;
pub const ADC_CFGR2_ROVSM_Msk: u32 = 0x1 << ADC_CFGR2_ROVSM_Pos;
pub const ADC_CFGR2_ROVSM: u32 = ADC_CFGR2_ROVSM_Msk;
pub const ADC_CFGR2_GCOMP_Pos: u32 = 16;
pub const ADC_CFGR2_GCOMP_Msk: u32 = 0x1 << ADC_CFGR2_GCOMP_Pos;
pub const ADC_CFGR2_GCOMP: u32 = ADC_CFGR2_GCOMP_Msk;
pub const ADC_CFGR2_SWTRIG_Pos: u32 = 25;
pub const ADC_CFGR2_SWTRIG_Msk: u32 = 0x1 << ADC_CFGR2_SWTRIG_Pos;
pub const ADC_CFGR2_SWTRIG: u32 = ADC_CFGR2_SWTRIG_Msk;
pub const ADC_CFGR2_BULB_Pos: u32 = 26;
pub const ADC_CFGR2_BULB_Msk: u32 = 0x1 << ADC_CFGR2_BULB_Pos;
pub const ADC_CFGR2_BULB: u32 = ADC_CFGR2_BULB_Msk;
pub const ADC_CFGR2_SMPTRIG_Pos: u32 = 27;
pub const ADC_CFGR2_SMPTRIG_Msk: u32 = 0x1 << ADC_CFGR2_SMPTRIG_Pos;
pub const ADC_CFGR2_SMPTRIG: u32 = ADC_CFGR2_SMPTRIG_Msk;
pub const ADC_SMPR1_SMP0_Pos: u32 = 0;
pub const ADC_SMPR1_SMP0_Msk: u32 = 0x7 << ADC_SMPR1_SMP0_Pos;
pub const ADC_SMPR1_SMP0: u32 = ADC_SMPR1_SMP0_Msk;
pub const ADC_SMPR1_SMP0_0: u32 = 0x1 << ADC_SMPR1_SMP0_Pos;
pub const ADC_SMPR1_SMP0_1: u32 = 0x2 << ADC_SMPR1_SMP0_Pos;
pub const ADC_SMPR1_SMP0_2: u32 = 0x4 << ADC_SMPR1_SMP0_Pos;
pub const ADC_SMPR1_SMP1_Pos: u32 = 3;
pub const ADC_SMPR1_SMP1_Msk: u32 = 0x7 << ADC_SMPR1_SMP1_Pos;
pub const ADC_SMPR1_SMP1: u32 = ADC_SMPR1_SMP1_Msk;
pub const ADC_SMPR1_SMP1_0: u32 = 0x1 << ADC_SMPR1_SMP1_Pos;
pub const ADC_SMPR1_SMP1_1: u32 = 0x2 << ADC_SMPR1_SMP1_Pos;
pub const ADC_SMPR1_SMP1_2: u32 = 0x4 << ADC_SMPR1_SMP1_Pos;
pub const ADC_SMPR1_SMP2_Pos: u32 = 6;
pub const ADC_SMPR1_SMP2_Msk: u32 = 0x7 << ADC_SMPR1_SMP2_Pos;
pub const ADC_SMPR1_SMP2: u32 = ADC_SMPR1_SMP2_Msk;
pub const ADC_SMPR1_SMP2_0: u32 = 0x1 << ADC_SMPR1_SMP2_Pos;
pub const ADC_SMPR1_SMP2_1: u32 = 0x2 << ADC_SMPR1_SMP2_Pos;
pub const ADC_SMPR1_SMP2_2: u32 = 0x4 << ADC_SMPR1_SMP2_Pos;
pub const ADC_SMPR1_SMP3_Pos: u32 = 9;
pub const ADC_SMPR1_SMP3_Msk: u32 = 0x7 << ADC_SMPR1_SMP3_Pos;
pub const ADC_SMPR1_SMP3: u32 = ADC_SMPR1_SMP3_Msk;
pub const ADC_SMPR1_SMP3_0: u32 = 0x1 << ADC_SMPR1_SMP3_Pos;
pub const ADC_SMPR1_SMP3_1: u32 = 0x2 << ADC_SMPR1_SMP3_Pos;
pub const ADC_SMPR1_SMP3_2: u32 = 0x4 << ADC_SMPR1_SMP3_Pos;
pub const ADC_SMPR1_SMP4_Pos: u32 = 12;
pub const ADC_SMPR1_SMP4_Msk: u32 = 0x7 << ADC_SMPR1_SMP4_Pos;
pub const ADC_SMPR1_SMP4: u32 = ADC_SMPR1_SMP4_Msk;
pub const ADC_SMPR1_SMP4_0: u32 = 0x1 << ADC_SMPR1_SMP4_Pos;
pub const ADC_SMPR1_SMP4_1: u32 = 0x2 << ADC_SMPR1_SMP4_Pos;
pub const ADC_SMPR1_SMP4_2: u32 = 0x4 << ADC_SMPR1_SMP4_Pos;
pub const ADC_SMPR1_SMP5_Pos: u32 = 15;
pub const ADC_SMPR1_SMP5_Msk: u32 = 0x7 << ADC_SMPR1_SMP5_Pos;
pub const ADC_SMPR1_SMP5: u32 = ADC_SMPR1_SMP5_Msk;
pub const ADC_SMPR1_SMP5_0: u32 = 0x1 << ADC_SMPR1_SMP5_Pos;
pub const ADC_SMPR1_SMP5_1: u32 = 0x2 << ADC_SMPR1_SMP5_Pos;
pub const ADC_SMPR1_SMP5_2: u32 = 0x4 << ADC_SMPR1_SMP5_Pos;
pub const ADC_SMPR1_SMP6_Pos: u32 = 18;
pub const ADC_SMPR1_SMP6_Msk: u32 = 0x7 << ADC_SMPR1_SMP6_Pos;
pub const ADC_SMPR1_SMP6: u32 = ADC_SMPR1_SMP6_Msk;
pub const ADC_SMPR1_SMP6_0: u32 = 0x1 << ADC_SMPR1_SMP6_Pos;
pub const ADC_SMPR1_SMP6_1: u32 = 0x2 << ADC_SMPR1_SMP6_Pos;
pub const ADC_SMPR1_SMP6_2: u32 = 0x4 << ADC_SMPR1_SMP6_Pos;
pub const ADC_SMPR1_SMP7_Pos: u32 = 21;
pub const ADC_SMPR1_SMP7_Msk: u32 = 0x7 << ADC_SMPR1_SMP7_Pos;
pub const ADC_SMPR1_SMP7: u32 = ADC_SMPR1_SMP7_Msk;
pub const ADC_SMPR1_SMP7_0: u32 = 0x1 << ADC_SMPR1_SMP7_Pos;
pub const ADC_SMPR1_SMP7_1: u32 = 0x2 << ADC_SMPR1_SMP7_Pos;
pub const ADC_SMPR1_SMP7_2: u32 = 0x4 << ADC_SMPR1_SMP7_Pos;
pub const ADC_SMPR1_SMP8_Pos: u32 = 24;
pub const ADC_SMPR1_SMP8_Msk: u32 = 0x7 << ADC_SMPR1_SMP8_Pos;
pub const ADC_SMPR1_SMP8: u32 = ADC_SMPR1_SMP8_Msk;
pub const ADC_SMPR1_SMP8_0: u32 = 0x1 << ADC_SMPR1_SMP8_Pos;
pub const ADC_SMPR1_SMP8_1: u32 = 0x2 << ADC_SMPR1_SMP8_Pos;
pub const ADC_SMPR1_SMP8_2: u32 = 0x4 << ADC_SMPR1_SMP8_Pos;
pub const ADC_SMPR1_SMP9_Pos: u32 = 27;
pub const ADC_SMPR1_SMP9_Msk: u32 = 0x7 << ADC_SMPR1_SMP9_Pos;
pub const ADC_SMPR1_SMP9: u32 = ADC_SMPR1_SMP9_Msk;
pub const ADC_SMPR1_SMP9_0: u32 = 0x1 << ADC_SMPR1_SMP9_Pos;
pub const ADC_SMPR1_SMP9_1: u32 = 0x2 << ADC_SMPR1_SMP9_Pos;
pub const ADC_SMPR1_SMP9_2: u32 = 0x4 << ADC_SMPR1_SMP9_Pos;
pub const ADC_SMPR1_SMPPLUS_Pos: u32 = 31;
pub const ADC_SMPR1_SMPPLUS_Msk: u32 = 0x1 << ADC_SMPR1_SMPPLUS_Pos;
pub const ADC_SMPR1_SMPPLUS: u32 = ADC_SMPR1_SMPPLUS_Msk;
pub const ADC_SMPR2_SMP10_Pos: u32 = 0;
pub const ADC_SMPR2_SMP10_Msk: u32 = 0x7 << ADC_SMPR2_SMP10_Pos;
pub const ADC_SMPR2_SMP10: u32 = ADC_SMPR2_SMP10_Msk;
pub const ADC_SMPR2_SMP10_0: u32 = 0x1 << ADC_SMPR2_SMP10_Pos;
pub const ADC_SMPR2_SMP10_1: u32 = 0x2 << ADC_SMPR2_SMP10_Pos;
pub const ADC_SMPR2_SMP10_2: u32 = 0x4 << ADC_SMPR2_SMP10_Pos;
pub const ADC_SMPR2_SMP11_Pos: u32 = 3;
pub const ADC_SMPR2_SMP11_Msk: u32 = 0x7 << ADC_SMPR2_SMP11_Pos;
pub const ADC_SMPR2_SMP11: u32 = ADC_SMPR2_SMP11_Msk;
pub const ADC_SMPR2_SMP11_0: u32 = 0x1 << ADC_SMPR2_SMP11_Pos;
pub const ADC_SMPR2_SMP11_1: u32 = 0x2 << ADC_SMPR2_SMP11_Pos;
pub const ADC_SMPR2_SMP11_2: u32 = 0x4 << ADC_SMPR2_SMP11_Pos;
pub const ADC_SMPR2_SMP12_Pos: u32 = 6;
pub const ADC_SMPR2_SMP12_Msk: u32 = 0x7 << ADC_SMPR2_SMP12_Pos;
pub const ADC_SMPR2_SMP12: u32 = ADC_SMPR2_SMP12_Msk;
pub const ADC_SMPR2_SMP12_0: u32 = 0x1 << ADC_SMPR2_SMP12_Pos;
pub const ADC_SMPR2_SMP12_1: u32 = 0x2 << ADC_SMPR2_SMP12_Pos;
pub const ADC_SMPR2_SMP12_2: u32 = 0x4 << ADC_SMPR2_SMP12_Pos;
pub const ADC_SMPR2_SMP13_Pos: u32 = 9;
pub const ADC_SMPR2_SMP13_Msk: u32 = 0x7 << ADC_SMPR2_SMP13_Pos;
pub const ADC_SMPR2_SMP13: u32 = ADC_SMPR2_SMP13_Msk;
pub const ADC_SMPR2_SMP13_0: u32 = 0x1 << ADC_SMPR2_SMP13_Pos;
pub const ADC_SMPR2_SMP13_1: u32 = 0x2 << ADC_SMPR2_SMP13_Pos;
pub const ADC_SMPR2_SMP13_2: u32 = 0x4 << ADC_SMPR2_SMP13_Pos;
pub const ADC_SMPR2_SMP14_Pos: u32 = 12;
pub const ADC_SMPR2_SMP14_Msk: u32 = 0x7 << ADC_SMPR2_SMP14_Pos;
pub const ADC_SMPR2_SMP14: u32 = ADC_SMPR2_SMP14_Msk;
pub const ADC_SMPR2_SMP14_0: u32 = 0x1 << ADC_SMPR2_SMP14_Pos;
pub const ADC_SMPR2_SMP14_1: u32 = 0x2 << ADC_SMPR2_SMP14_Pos;
pub const ADC_SMPR2_SMP14_2: u32 = 0x4 << ADC_SMPR2_SMP14_Pos;
pub const ADC_SMPR2_SMP15_Pos: u32 = 15;
pub const ADC_SMPR2_SMP15_Msk: u32 = 0x7 << ADC_SMPR2_SMP15_Pos;
pub const ADC_SMPR2_SMP15: u32 = ADC_SMPR2_SMP15_Msk;
pub const ADC_SMPR2_SMP15_0: u32 = 0x1 << ADC_SMPR2_SMP15_Pos;
pub const ADC_SMPR2_SMP15_1: u32 = 0x2 << ADC_SMPR2_SMP15_Pos;
pub const ADC_SMPR2_SMP15_2: u32 = 0x4 << ADC_SMPR2_SMP15_Pos;
pub const ADC_SMPR2_SMP16_Pos: u32 = 18;
pub const ADC_SMPR2_SMP16_Msk: u32 = 0x7 << ADC_SMPR2_SMP16_Pos;
pub const ADC_SMPR2_SMP16: u32 = ADC_SMPR2_SMP16_Msk;
pub const ADC_SMPR2_SMP16_0: u32 = 0x1 << ADC_SMPR2_SMP16_Pos;
pub const ADC_SMPR2_SMP16_1: u32 = 0x2 << ADC_SMPR2_SMP16_Pos;
pub const ADC_SMPR2_SMP16_2: u32 = 0x4 << ADC_SMPR2_SMP16_Pos;
pub const ADC_SMPR2_SMP17_Pos: u32 = 21;
pub const ADC_SMPR2_SMP17_Msk: u32 = 0x7 << ADC_SMPR2_SMP17_Pos;
pub const ADC_SMPR2_SMP17: u32 = ADC_SMPR2_SMP17_Msk;
pub const ADC_SMPR2_SMP17_0: u32 = 0x1 << ADC_SMPR2_SMP17_Pos;
pub const ADC_SMPR2_SMP17_1: u32 = 0x2 << ADC_SMPR2_SMP17_Pos;
pub const ADC_SMPR2_SMP17_2: u32 = 0x4 << ADC_SMPR2_SMP17_Pos;
pub const ADC_SMPR2_SMP18_Pos: u32 = 24;
pub const ADC_SMPR2_SMP18_Msk: u32 = 0x7 << ADC_SMPR2_SMP18_Pos;
pub const ADC_SMPR2_SMP18: u32 = ADC_SMPR2_SMP18_Msk;
pub const ADC_SMPR2_SMP18_0: u32 = 0x1 << ADC_SMPR2_SMP18_Pos;
pub const ADC_SMPR2_SMP18_1: u32 = 0x2 << ADC_SMPR2_SMP18_Pos;
pub const ADC_SMPR2_SMP18_2: u32 = 0x4 << ADC_SMPR2_SMP18_Pos;
pub const ADC_TR1_LT1_Pos: u32 = 0;
pub const ADC_TR1_LT1_Msk: u32 = 0xFFF << ADC_TR1_LT1_Pos;
pub const ADC_TR1_LT1: u32 = ADC_TR1_LT1_Msk;
pub const ADC_TR1_AWDFILT_Pos: u32 = 12;
pub const ADC_TR1_AWDFILT_Msk: u32 = 0x7 << ADC_TR1_AWDFILT_Pos;
pub const ADC_TR1_AWDFILT: u32 = ADC_TR1_AWDFILT_Msk;
pub const ADC_TR1_AWDFILT_0: u32 = 0x1 << ADC_TR1_AWDFILT_Pos;
pub const ADC_TR1_AWDFILT_1: u32 = 0x2 << ADC_TR1_AWDFILT_Pos;
pub const ADC_TR1_AWDFILT_2: u32 = 0x4 << ADC_TR1_AWDFILT_Pos;
pub const ADC_TR1_HT1_Pos: u32 = 16;
pub const ADC_TR1_HT1_Msk: u32 = 0xFFF << ADC_TR1_HT1_Pos;
pub const ADC_TR1_HT1: u32 = ADC_TR1_HT1_Msk;
pub const ADC_TR2_LT2_Pos: u32 = 0;
pub const ADC_TR2_LT2_Msk: u32 = 0xFF << ADC_TR2_LT2_Pos;
pub const ADC_TR2_LT2: u32 = ADC_TR2_LT2_Msk;
pub const ADC_TR2_HT2_Pos: u32 = 16;
pub const ADC_TR2_HT2_Msk: u32 = 0xFF << ADC_TR2_HT2_Pos;
pub const ADC_TR2_HT2: u32 = ADC_TR2_HT2_Msk;
pub const ADC_TR3_LT3_Pos: u32 = 0;
pub const ADC_TR3_LT3_Msk: u32 = 0xFF << ADC_TR3_LT3_Pos;
pub const ADC_TR3_LT3: u32 = ADC_TR3_LT3_Msk;
pub const ADC_TR3_HT3_Pos: u32 = 16;
pub const ADC_TR3_HT3_Msk: u32 = 0xFF << ADC_TR3_HT3_Pos;
pub const ADC_TR3_HT3: u32 = ADC_TR3_HT3_Msk;
pub const ADC_SQR1_L_Pos: u32 = 0;
pub const ADC_SQR1_L_Msk: u32 = 0xF << ADC_SQR1_L_Pos;
pub const ADC_SQR1_L: u32 = ADC_SQR1_L_Msk;
pub const ADC_SQR1_L_0: u32 = 0x1 << ADC_SQR1_L_Pos;
pub const ADC_SQR1_L_1: u32 = 0x2 << ADC_SQR1_L_Pos;
pub const ADC_SQR1_L_2: u32 = 0x4 << ADC_SQR1_L_Pos;
pub const ADC_SQR1_L_3: u32 = 0x8 << ADC_SQR1_L_Pos;
pub const ADC_SQR1_SQ1_Pos: u32 = 6;
pub const ADC_SQR1_SQ1_Msk: u32 = 0x1F << ADC_SQR1_SQ1_Pos;
pub const ADC_SQR1_SQ1: u32 = ADC_SQR1_SQ1_Msk;
pub const ADC_SQR1_SQ1_0: u32 = 0x01 << ADC_SQR1_SQ1_Pos;
pub const ADC_SQR1_SQ1_1: u32 = 0x02 << ADC_SQR1_SQ1_Pos;
pub const ADC_SQR1_SQ1_2: u32 = 0x04 << ADC_SQR1_SQ1_Pos;
pub const ADC_SQR1_SQ1_3: u32 = 0x08 << ADC_SQR1_SQ1_Pos;
pub const ADC_SQR1_SQ1_4: u32 = 0x10 << ADC_SQR1_SQ1_Pos;
pub const ADC_SQR1_SQ2_Pos: u32 = 12;
pub const ADC_SQR1_SQ2_Msk: u32 = 0x1F << ADC_SQR1_SQ2_Pos;
pub const ADC_SQR1_SQ2: u32 = ADC_SQR1_SQ2_Msk;
pub const ADC_SQR1_SQ2_0: u32 = 0x01 << ADC_SQR1_SQ2_Pos;
pub const ADC_SQR1_SQ2_1: u32 = 0x02 << ADC_SQR1_SQ2_Pos;
pub const ADC_SQR1_SQ2_2: u32 = 0x04 << ADC_SQR1_SQ2_Pos;
pub const ADC_SQR1_SQ2_3: u32 = 0x08 << ADC_SQR1_SQ2_Pos;
pub const ADC_SQR1_SQ2_4: u32 = 0x10 << ADC_SQR1_SQ2_Pos;
pub const ADC_SQR1_SQ3_Pos: u32 = 18;
pub const ADC_SQR1_SQ3_Msk: u32 = 0x1F << ADC_SQR1_SQ3_Pos;
pub const ADC_SQR1_SQ3: u32 = ADC_SQR1_SQ3_Msk;
pub const ADC_SQR1_SQ3_0: u32 = 0x01 << ADC_SQR1_SQ3_Pos;
pub const ADC_SQR1_SQ3_1: u32 = 0x02 << ADC_SQR1_SQ3_Pos;
pub const ADC_SQR1_SQ3_2: u32 = 0x04 << ADC_SQR1_SQ3_Pos;
pub const ADC_SQR1_SQ3_3: u32 = 0x08 << ADC_SQR1_SQ3_Pos;
pub const ADC_SQR1_SQ3_4: u32 = 0x10 << ADC_SQR1_SQ3_Pos;
pub const ADC_SQR1_SQ4_Pos: u32 = 24;
pub const ADC_SQR1_SQ4_Msk: u32 = 0x1F << ADC_SQR1_SQ4_Pos;
pub const ADC_SQR1_SQ4: u32 = ADC_SQR1_SQ4_Msk;
pub const ADC_SQR1_SQ4_0: u32 = 0x01 << ADC_SQR1_SQ4_Pos;
pub const ADC_SQR1_SQ4_1: u32 = 0x02 << ADC_SQR1_SQ4_Pos;
pub const ADC_SQR1_SQ4_2: u32 = 0x04 << ADC_SQR1_SQ4_Pos;
pub const ADC_SQR1_SQ4_3: u32 = 0x08 << ADC_SQR1_SQ4_Pos;
pub const ADC_SQR1_SQ4_4: u32 = 0x10 << ADC_SQR1_SQ4_Pos;
pub const ADC_SQR2_SQ5_Pos: u32 = 0;
pub const ADC_SQR2_SQ5_Msk: u32 = 0x1F << ADC_SQR2_SQ5_Pos;
pub const ADC_SQR2_SQ5: u32 = ADC_SQR2_SQ5_Msk;
pub const ADC_SQR2_SQ5_0: u32 = 0x01 << ADC_SQR2_SQ5_Pos;
pub const ADC_SQR2_SQ5_1: u32 = 0x02 << ADC_SQR2_SQ5_Pos;
pub const ADC_SQR2_SQ5_2: u32 = 0x04 << ADC_SQR2_SQ5_Pos;
pub const ADC_SQR2_SQ5_3: u32 = 0x08 << ADC_SQR2_SQ5_Pos;
pub const ADC_SQR2_SQ5_4: u32 = 0x10 << ADC_SQR2_SQ5_Pos;
pub const ADC_SQR2_SQ6_Pos: u32 = 6;
pub const ADC_SQR2_SQ6_Msk: u32 = 0x1F << ADC_SQR2_SQ6_Pos;
pub const ADC_SQR2_SQ6: u32 = ADC_SQR2_SQ6_Msk;
pub const ADC_SQR2_SQ6_0: u32 = 0x01 << ADC_SQR2_SQ6_Pos;
pub const ADC_SQR2_SQ6_1: u32 = 0x02 << ADC_SQR2_SQ6_Pos;
pub const ADC_SQR2_SQ6_2: u32 = 0x04 << ADC_SQR2_SQ6_Pos;
pub const ADC_SQR2_SQ6_3: u32 = 0x08 << ADC_SQR2_SQ6_Pos;
pub const ADC_SQR2_SQ6_4: u32 = 0x10 << ADC_SQR2_SQ6_Pos;
pub const ADC_SQR2_SQ7_Pos: u32 = 12;
pub const ADC_SQR2_SQ7_Msk: u32 = 0x1F << ADC_SQR2_SQ7_Pos;
pub const ADC_SQR2_SQ7: u32 = ADC_SQR2_SQ7_Msk;
pub const ADC_SQR2_SQ7_0: u32 = 0x01 << ADC_SQR2_SQ7_Pos;
pub const ADC_SQR2_SQ7_1: u32 = 0x02 << ADC_SQR2_SQ7_Pos;
pub const ADC_SQR2_SQ7_2: u32 = 0x04 << ADC_SQR2_SQ7_Pos;
pub const ADC_SQR2_SQ7_3: u32 = 0x08 << ADC_SQR2_SQ7_Pos;
pub const ADC_SQR2_SQ7_4: u32 = 0x10 << ADC_SQR2_SQ7_Pos;
pub const ADC_SQR2_SQ8_Pos: u32 = 18;
pub const ADC_SQR2_SQ8_Msk: u32 = 0x1F << ADC_SQR2_SQ8_Pos;
pub const ADC_SQR2_SQ8: u32 = ADC_SQR2_SQ8_Msk;
pub const ADC_SQR2_SQ8_0: u32 = 0x01 << ADC_SQR2_SQ8_Pos;
pub const ADC_SQR2_SQ8_1: u32 = 0x02 << ADC_SQR2_SQ8_Pos;
pub const ADC_SQR2_SQ8_2: u32 = 0x04 << ADC_SQR2_SQ8_Pos;
pub const ADC_SQR2_SQ8_3: u32 = 0x08 << ADC_SQR2_SQ8_Pos;
pub const ADC_SQR2_SQ8_4: u32 = 0x10 << ADC_SQR2_SQ8_Pos;
pub const ADC_SQR2_SQ9_Pos: u32 = 24;
pub const ADC_SQR2_SQ9_Msk: u32 = 0x1F << ADC_SQR2_SQ9_Pos;
pub const ADC_SQR2_SQ9: u32 = ADC_SQR2_SQ9_Msk;
pub const ADC_SQR2_SQ9_0: u32 = 0x01 << ADC_SQR2_SQ9_Pos;
pub const ADC_SQR2_SQ9_1: u32 = 0x02 << ADC_SQR2_SQ9_Pos;
pub const ADC_SQR2_SQ9_2: u32 = 0x04 << ADC_SQR2_SQ9_Pos;
pub const ADC_SQR2_SQ9_3: u32 = 0x08 << ADC_SQR2_SQ9_Pos;
pub const ADC_SQR2_SQ9_4: u32 = 0x10 << ADC_SQR2_SQ9_Pos;
pub const ADC_SQR3_SQ10_Pos: u32 = 0;
pub const ADC_SQR3_SQ10_Msk: u32 = 0x1F << ADC_SQR3_SQ10_Pos;
pub const ADC_SQR3_SQ10: u32 = ADC_SQR3_SQ10_Msk;
pub const ADC_SQR3_SQ10_0: u32 = 0x01 << ADC_SQR3_SQ10_Pos;
pub const ADC_SQR3_SQ10_1: u32 = 0x02 << ADC_SQR3_SQ10_Pos;
pub const ADC_SQR3_SQ10_2: u32 = 0x04 << ADC_SQR3_SQ10_Pos;
pub const ADC_SQR3_SQ10_3: u32 = 0x08 << ADC_SQR3_SQ10_Pos;
pub const ADC_SQR3_SQ10_4: u32 = 0x10 << ADC_SQR3_SQ10_Pos;
pub const ADC_SQR3_SQ11_Pos: u32 = 6;
pub const ADC_SQR3_SQ11_Msk: u32 = 0x1F << ADC_SQR3_SQ11_Pos;
pub const ADC_SQR3_SQ11: u32 = ADC_SQR3_SQ11_Msk;
pub const ADC_SQR3_SQ11_0: u32 = 0x01 << ADC_SQR3_SQ11_Pos;
pub const ADC_SQR3_SQ11_1: u32 = 0x02 << ADC_SQR3_SQ11_Pos;
pub const ADC_SQR3_SQ11_2: u32 = 0x04 << ADC_SQR3_SQ11_Pos;
pub const ADC_SQR3_SQ11_3: u32 = 0x08 << ADC_SQR3_SQ11_Pos;
pub const ADC_SQR3_SQ11_4: u32 = 0x10 << ADC_SQR3_SQ11_Pos;
pub const ADC_SQR3_SQ12_Pos: u32 = 12;
pub const ADC_SQR3_SQ12_Msk: u32 = 0x1F << ADC_SQR3_SQ12_Pos;
pub const ADC_SQR3_SQ12: u32 = ADC_SQR3_SQ12_Msk;
pub const ADC_SQR3_SQ12_0: u32 = 0x01 << ADC_SQR3_SQ12_Pos;
pub const ADC_SQR3_SQ12_1: u32 = 0x02 << ADC_SQR3_SQ12_Pos;
pub const ADC_SQR3_SQ12_2: u32 = 0x04 << ADC_SQR3_SQ12_Pos;
pub const ADC_SQR3_SQ12_3: u32 = 0x08 << ADC_SQR3_SQ12_Pos;
pub const ADC_SQR3_SQ12_4: u32 = 0x10 << ADC_SQR3_SQ12_Pos;
pub const ADC_SQR3_SQ13_Pos: u32 = 18;
pub const ADC_SQR3_SQ13_Msk: u32 = 0x1F << ADC_SQR3_SQ13_Pos;
pub const ADC_SQR3_SQ13: u32 = ADC_SQR3_SQ13_Msk;
pub const ADC_SQR3_SQ13_0: u32 = 0x01 << ADC_SQR3_SQ13_Pos;
pub const ADC_SQR3_SQ13_1: u32 = 0x02 << ADC_SQR3_SQ13_Pos;
pub const ADC_SQR3_SQ13_2: u32 = 0x04 << ADC_SQR3_SQ13_Pos;
pub const ADC_SQR3_SQ13_3: u32 = 0x08 << ADC_SQR3_SQ13_Pos;
pub const ADC_SQR3_SQ13_4: u32 = 0x10 << ADC_SQR3_SQ13_Pos;
pub const ADC_SQR3_SQ14_Pos: u32 = 24;
pub const ADC_SQR3_SQ14_Msk: u32 = 0x1F << ADC_SQR3_SQ14_Pos;
pub const ADC_SQR3_SQ14: u32 = ADC_SQR3_SQ14_Msk;
pub const ADC_SQR3_SQ14_0: u32 = 0x01 << ADC_SQR3_SQ14_Pos;
pub const ADC_SQR3_SQ14_1: u32 = 0x02 << ADC_SQR3_SQ14_Pos;
pub const ADC_SQR3_SQ14_2: u32 = 0x04 << ADC_SQR3_SQ14_Pos;
pub const ADC_SQR3_SQ14_3: u32 = 0x08 << ADC_SQR3_SQ14_Pos;
pub const ADC_SQR3_SQ14_4: u32 = 0x10 << ADC_SQR3_SQ14_Pos;
pub const ADC_SQR4_SQ15_Pos: u32 = 0;
pub const ADC_SQR4_SQ15_Msk: u32 = 0x1F << ADC_SQR4_SQ15_Pos;
pub const ADC_SQR4_SQ15: u32 = ADC_SQR4_SQ15_Msk;
pub const ADC_SQR4_SQ15_0: u32 = 0x01 << ADC_SQR4_SQ15_Pos;
pub const ADC_SQR4_SQ15_1: u32 = 0x02 << ADC_SQR4_SQ15_Pos;
pub const ADC_SQR4_SQ15_2: u32 = 0x04 << ADC_SQR4_SQ15_Pos;
pub const ADC_SQR4_SQ15_3: u32 = 0x08 << ADC_SQR4_SQ15_Pos;
pub const ADC_SQR4_SQ15_4: u32 = 0x10 << ADC_SQR4_SQ15_Pos;
pub const ADC_SQR4_SQ16_Pos: u32 = 6;
pub const ADC_SQR4_SQ16_Msk: u32 = 0x1F << ADC_SQR4_SQ16_Pos;
pub const ADC_SQR4_SQ16: u32 = ADC_SQR4_SQ16_Msk;
pub const ADC_SQR4_SQ16_0: u32 = 0x01 << ADC_SQR4_SQ16_Pos;
pub const ADC_SQR4_SQ16_1: u32 = 0x02 << ADC_SQR4_SQ16_Pos;
pub const ADC_SQR4_SQ16_2: u32 = 0x04 << ADC_SQR4_SQ16_Pos;
pub const ADC_SQR4_SQ16_3: u32 = 0x08 << ADC_SQR4_SQ16_Pos;
pub const ADC_SQR4_SQ16_4: u32 = 0x10 << ADC_SQR4_SQ16_Pos;
pub const ADC_DR_RDATA_Pos: u32 = 0;
pub const ADC_DR_RDATA_Msk: u32 = 0xFFFF << ADC_DR_RDATA_Pos;
pub const ADC_DR_RDATA: u32 = ADC_DR_RDATA_Msk;
pub const ADC_JSQR_JL_Pos: u32 = 0;
pub const ADC_JSQR_JL_Msk: u32 = 0x3 << ADC_JSQR_JL_Pos;
pub const ADC_JSQR_JL: u32 = ADC_JSQR_JL_Msk;
pub const ADC_JSQR_JL_0: u32 = 0x1 << ADC_JSQR_JL_Pos;
pub const ADC_JSQR_JL_1: u32 = 0x2 << ADC_JSQR_JL_Pos;
pub const ADC_JSQR_JEXTSEL_Pos: u32 = 2;
pub const ADC_JSQR_JEXTSEL_Msk: u32 = 0x1F << ADC_JSQR_JEXTSEL_Pos;
pub const ADC_JSQR_JEXTSEL: u32 = ADC_JSQR_JEXTSEL_Msk;
pub const ADC_JSQR_JEXTSEL_0: u32 = 0x1 << ADC_JSQR_JEXTSEL_Pos;
pub const ADC_JSQR_JEXTSEL_1: u32 = 0x2 << ADC_JSQR_JEXTSEL_Pos;
pub const ADC_JSQR_JEXTSEL_2: u32 = 0x4 << ADC_JSQR_JEXTSEL_Pos;
pub const ADC_JSQR_JEXTSEL_3: u32 = 0x8 << ADC_JSQR_JEXTSEL_Pos;
pub const ADC_JSQR_JEXTSEL_4: u32 = 0x10 << ADC_JSQR_JEXTSEL_Pos;
pub const ADC_JSQR_JEXTEN_Pos: u32 = 7;
pub const ADC_JSQR_JEXTEN_Msk: u32 = 0x3 << ADC_JSQR_JEXTEN_Pos;
pub const ADC_JSQR_JEXTEN: u32 = ADC_JSQR_JEXTEN_Msk;
pub const ADC_JSQR_JEXTEN_0: u32 = 0x1 << ADC_JSQR_JEXTEN_Pos;
pub const ADC_JSQR_JEXTEN_1: u32 = 0x2 << ADC_JSQR_JEXTEN_Pos;
pub const ADC_JSQR_JSQ1_Pos: u32 = 9;
pub const ADC_JSQR_JSQ1_Msk: u32 = 0x1F << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1: u32 = ADC_JSQR_JSQ1_Msk;
pub const ADC_JSQR_JSQ1_0: u32 = 0x01 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1_1: u32 = 0x02 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1_2: u32 = 0x04 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1_3: u32 = 0x08 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ1_4: u32 = 0x10 << ADC_JSQR_JSQ1_Pos;
pub const ADC_JSQR_JSQ2_Pos: u32 = 15;
pub const ADC_JSQR_JSQ2_Msk: u32 = 0x1F << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2: u32 = ADC_JSQR_JSQ2_Msk;
pub const ADC_JSQR_JSQ2_0: u32 = 0x01 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2_1: u32 = 0x02 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2_2: u32 = 0x04 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2_3: u32 = 0x08 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ2_4: u32 = 0x10 << ADC_JSQR_JSQ2_Pos;
pub const ADC_JSQR_JSQ3_Pos: u32 = 21;
pub const ADC_JSQR_JSQ3_Msk: u32 = 0x1F << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3: u32 = ADC_JSQR_JSQ3_Msk;
pub const ADC_JSQR_JSQ3_0: u32 = 0x01 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3_1: u32 = 0x02 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3_2: u32 = 0x04 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3_3: u32 = 0x08 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ3_4: u32 = 0x10 << ADC_JSQR_JSQ3_Pos;
pub const ADC_JSQR_JSQ4_Pos: u32 = 27;
pub const ADC_JSQR_JSQ4_Msk: u32 = 0x1F << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4: u32 = ADC_JSQR_JSQ4_Msk;
pub const ADC_JSQR_JSQ4_0: u32 = 0x01 << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4_1: u32 = 0x02 << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4_2: u32 = 0x04 << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4_3: u32 = 0x08 << ADC_JSQR_JSQ4_Pos;
pub const ADC_JSQR_JSQ4_4: u32 = 0x10 << ADC_JSQR_JSQ4_Pos;
pub const ADC_OFR1_OFFSET1_Pos: u32 = 0;
pub const ADC_OFR1_OFFSET1_Msk: u32 = 0xFFF << ADC_OFR1_OFFSET1_Pos;
pub const ADC_OFR1_OFFSET1: u32 = ADC_OFR1_OFFSET1_Msk;
pub const ADC_OFR1_OFFSETPOS_Pos: u32 = 24;
pub const ADC_OFR1_OFFSETPOS_Msk: u32 = 0x1 << ADC_OFR1_OFFSETPOS_Pos;
pub const ADC_OFR1_OFFSETPOS: u32 = ADC_OFR1_OFFSETPOS_Msk;
pub const ADC_OFR1_SATEN_Pos: u32 = 25;
pub const ADC_OFR1_SATEN_Msk: u32 = 0x1 << ADC_OFR1_SATEN_Pos;
pub const ADC_OFR1_SATEN: u32 = ADC_OFR1_SATEN_Msk;
pub const ADC_OFR1_OFFSET1_CH_Pos: u32 = 26;
pub const ADC_OFR1_OFFSET1_CH_Msk: u32 = 0x1F << ADC_OFR1_OFFSET1_CH_Pos;
pub const ADC_OFR1_OFFSET1_CH: u32 = ADC_OFR1_OFFSET1_CH_Msk;
pub const ADC_OFR1_OFFSET1_CH_0: u32 = 0x01 << ADC_OFR1_OFFSET1_CH_Pos;
pub const ADC_OFR1_OFFSET1_CH_1: u32 = 0x02 << ADC_OFR1_OFFSET1_CH_Pos;
pub const ADC_OFR1_OFFSET1_CH_2: u32 = 0x04 << ADC_OFR1_OFFSET1_CH_Pos;
pub const ADC_OFR1_OFFSET1_CH_3: u32 = 0x08 << ADC_OFR1_OFFSET1_CH_Pos;
pub const ADC_OFR1_OFFSET1_CH_4: u32 = 0x10 << ADC_OFR1_OFFSET1_CH_Pos;
pub const ADC_OFR1_OFFSET1_EN_Pos: u32 = 31;
pub const ADC_OFR1_OFFSET1_EN_Msk: u32 = 0x1 << ADC_OFR1_OFFSET1_EN_Pos;
pub const ADC_OFR1_OFFSET1_EN: u32 = ADC_OFR1_OFFSET1_EN_Msk;
pub const ADC_OFR2_OFFSET2_Pos: u32 = 0;
pub const ADC_OFR2_OFFSET2_Msk: u32 = 0xFFF << ADC_OFR2_OFFSET2_Pos;
pub const ADC_OFR2_OFFSET2: u32 = ADC_OFR2_OFFSET2_Msk;
pub const ADC_OFR2_OFFSETPOS_Pos: u32 = 24;
pub const ADC_OFR2_OFFSETPOS_Msk: u32 = 0x1 << ADC_OFR2_OFFSETPOS_Pos;
pub const ADC_OFR2_OFFSETPOS: u32 = ADC_OFR2_OFFSETPOS_Msk;
pub const ADC_OFR2_SATEN_Pos: u32 = 25;
pub const ADC_OFR2_SATEN_Msk: u32 = 0x1 << ADC_OFR2_SATEN_Pos;
pub const ADC_OFR2_SATEN: u32 = ADC_OFR2_SATEN_Msk;
pub const ADC_OFR2_OFFSET2_CH_Pos: u32 = 26;
pub const ADC_OFR2_OFFSET2_CH_Msk: u32 = 0x1F << ADC_OFR2_OFFSET2_CH_Pos;
pub const ADC_OFR2_OFFSET2_CH: u32 = ADC_OFR2_OFFSET2_CH_Msk;
pub const ADC_OFR2_OFFSET2_CH_0: u32 = 0x01 << ADC_OFR2_OFFSET2_CH_Pos;
pub const ADC_OFR2_OFFSET2_CH_1: u32 = 0x02 << ADC_OFR2_OFFSET2_CH_Pos;
pub const ADC_OFR2_OFFSET2_CH_2: u32 = 0x04 << ADC_OFR2_OFFSET2_CH_Pos;
pub const ADC_OFR2_OFFSET2_CH_3: u32 = 0x08 << ADC_OFR2_OFFSET2_CH_Pos;
pub const ADC_OFR2_OFFSET2_CH_4: u32 = 0x10 << ADC_OFR2_OFFSET2_CH_Pos;
pub const ADC_OFR2_OFFSET2_EN_Pos: u32 = 31;
pub const ADC_OFR2_OFFSET2_EN_Msk: u32 = 0x1 << ADC_OFR2_OFFSET2_EN_Pos;
pub const ADC_OFR2_OFFSET2_EN: u32 = ADC_OFR2_OFFSET2_EN_Msk;
pub const ADC_OFR3_OFFSET3_Pos: u32 = 0;
pub const ADC_OFR3_OFFSET3_Msk: u32 = 0xFFF << ADC_OFR3_OFFSET3_Pos;
pub const ADC_OFR3_OFFSET3: u32 = ADC_OFR3_OFFSET3_Msk;
pub const ADC_OFR3_OFFSETPOS_Pos: u32 = 24;
pub const ADC_OFR3_OFFSETPOS_Msk: u32 = 0x1 << ADC_OFR3_OFFSETPOS_Pos;
pub const ADC_OFR3_OFFSETPOS: u32 = ADC_OFR3_OFFSETPOS_Msk;
pub const ADC_OFR3_SATEN_Pos: u32 = 25;
pub const ADC_OFR3_SATEN_Msk: u32 = 0x1 << ADC_OFR3_SATEN_Pos;
pub const ADC_OFR3_SATEN: u32 = ADC_OFR3_SATEN_Msk;
pub const ADC_OFR3_OFFSET3_CH_Pos: u32 = 26;
pub const ADC_OFR3_OFFSET3_CH_Msk: u32 = 0x1F << ADC_OFR3_OFFSET3_CH_Pos;
pub const ADC_OFR3_OFFSET3_CH: u32 = ADC_OFR3_OFFSET3_CH_Msk;
pub const ADC_OFR3_OFFSET3_CH_0: u32 = 0x01 << ADC_OFR3_OFFSET3_CH_Pos;
pub const ADC_OFR3_OFFSET3_CH_1: u32 = 0x02 << ADC_OFR3_OFFSET3_CH_Pos;
pub const ADC_OFR3_OFFSET3_CH_2: u32 = 0x04 << ADC_OFR3_OFFSET3_CH_Pos;
pub const ADC_OFR3_OFFSET3_CH_3: u32 = 0x08 << ADC_OFR3_OFFSET3_CH_Pos;
pub const ADC_OFR3_OFFSET3_CH_4: u32 = 0x10 << ADC_OFR3_OFFSET3_CH_Pos;
pub const ADC_OFR3_OFFSET3_EN_Pos: u32 = 31;
pub const ADC_OFR3_OFFSET3_EN_Msk: u32 = 0x1 << ADC_OFR3_OFFSET3_EN_Pos;
pub const ADC_OFR3_OFFSET3_EN: u32 = ADC_OFR3_OFFSET3_EN_Msk;
pub const ADC_OFR4_OFFSET4_Pos: u32 = 0;
pub const ADC_OFR4_OFFSET4_Msk: u32 = 0xFFF << ADC_OFR4_OFFSET4_Pos;
pub const ADC_OFR4_OFFSET4: u32 = ADC_OFR4_OFFSET4_Msk;
pub const ADC_OFR4_OFFSETPOS_Pos: u32 = 24;
pub const ADC_OFR4_OFFSETPOS_Msk: u32 = 0x1 << ADC_OFR4_OFFSETPOS_Pos;
pub const ADC_OFR4_OFFSETPOS: u32 = ADC_OFR4_OFFSETPOS_Msk;
pub const ADC_OFR4_SATEN_Pos: u32 = 25;
pub const ADC_OFR4_SATEN_Msk: u32 = 0x1 << ADC_OFR4_SATEN_Pos;
pub const ADC_OFR4_SATEN: u32 = ADC_OFR4_SATEN_Msk;
pub const ADC_OFR4_OFFSET4_CH_Pos: u32 = 26;
pub const ADC_OFR4_OFFSET4_CH_Msk: u32 = 0x1F << ADC_OFR4_OFFSET4_CH_Pos;
pub const ADC_OFR4_OFFSET4_CH: u32 = ADC_OFR4_OFFSET4_CH_Msk;
pub const ADC_OFR4_OFFSET4_CH_0: u32 = 0x01 << ADC_OFR4_OFFSET4_CH_Pos;
pub const ADC_OFR4_OFFSET4_CH_1: u32 = 0x02 << ADC_OFR4_OFFSET4_CH_Pos;
pub const ADC_OFR4_OFFSET4_CH_2: u32 = 0x04 << ADC_OFR4_OFFSET4_CH_Pos;
pub const ADC_OFR4_OFFSET4_CH_3: u32 = 0x08 << ADC_OFR4_OFFSET4_CH_Pos;
pub const ADC_OFR4_OFFSET4_CH_4: u32 = 0x10 << ADC_OFR4_OFFSET4_CH_Pos;
pub const ADC_OFR4_OFFSET4_EN_Pos: u32 = 31;
pub const ADC_OFR4_OFFSET4_EN_Msk: u32 = 0x1 << ADC_OFR4_OFFSET4_EN_Pos;
pub const ADC_OFR4_OFFSET4_EN: u32 = ADC_OFR4_OFFSET4_EN_Msk;
pub const ADC_JDR1_JDATA_Pos: u32 = 0;
pub const ADC_JDR1_JDATA_Msk: u32 = 0xFFFF << ADC_JDR1_JDATA_Pos;
pub const ADC_JDR1_JDATA: u32 = ADC_JDR1_JDATA_Msk;
pub const ADC_JDR2_JDATA_Pos: u32 = 0;
pub const ADC_JDR2_JDATA_Msk: u32 = 0xFFFF << ADC_JDR2_JDATA_Pos;
pub const ADC_JDR2_JDATA: u32 = ADC_JDR2_JDATA_Msk;
pub const ADC_JDR3_JDATA_Pos: u32 = 0;
pub const ADC_JDR3_JDATA_Msk: u32 = 0xFFFF << ADC_JDR3_JDATA_Pos;
pub const ADC_JDR3_JDATA: u32 = ADC_JDR3_JDATA_Msk;
pub const ADC_JDR4_JDATA_Pos: u32 = 0;
pub const ADC_JDR4_JDATA_Msk: u32 = 0xFFFF << ADC_JDR4_JDATA_Pos;
pub const ADC_JDR4_JDATA: u32 = ADC_JDR4_JDATA_Msk;
pub const ADC_AWD2CR_AWD2CH_Pos: u32 = 0;
pub const ADC_AWD2CR_AWD2CH_Msk: u32 = 0x7FFFF << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH: u32 = ADC_AWD2CR_AWD2CH_Msk;
pub const ADC_AWD2CR_AWD2CH_0: u32 = 0x00001 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_1: u32 = 0x00002 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_2: u32 = 0x00004 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_3: u32 = 0x00008 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_4: u32 = 0x00010 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_5: u32 = 0x00020 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_6: u32 = 0x00040 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_7: u32 = 0x00080 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_8: u32 = 0x00100 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_9: u32 = 0x00200 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_10: u32 = 0x00400 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_11: u32 = 0x00800 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_12: u32 = 0x01000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_13: u32 = 0x02000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_14: u32 = 0x04000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_15: u32 = 0x08000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_16: u32 = 0x10000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_17: u32 = 0x20000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD2CR_AWD2CH_18: u32 = 0x40000 << ADC_AWD2CR_AWD2CH_Pos;
pub const ADC_AWD3CR_AWD3CH_Pos: u32 = 0;
pub const ADC_AWD3CR_AWD3CH_Msk: u32 = 0x7FFFF << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH: u32 = ADC_AWD3CR_AWD3CH_Msk;
pub const ADC_AWD3CR_AWD3CH_0: u32 = 0x00001 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_1: u32 = 0x00002 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_2: u32 = 0x00004 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_3: u32 = 0x00008 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_4: u32 = 0x00010 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_5: u32 = 0x00020 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_6: u32 = 0x00040 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_7: u32 = 0x00080 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_8: u32 = 0x00100 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_9: u32 = 0x00200 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_10: u32 = 0x00400 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_11: u32 = 0x00800 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_12: u32 = 0x01000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_13: u32 = 0x02000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_14: u32 = 0x04000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_15: u32 = 0x08000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_16: u32 = 0x10000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_17: u32 = 0x20000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_AWD3CR_AWD3CH_18: u32 = 0x40000 << ADC_AWD3CR_AWD3CH_Pos;
pub const ADC_DIFSEL_DIFSEL_Pos: u32 = 0;
pub const ADC_DIFSEL_DIFSEL_Msk: u32 = 0x7FFFF << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL: u32 = ADC_DIFSEL_DIFSEL_Msk;
pub const ADC_DIFSEL_DIFSEL_0: u32 = 0x00001 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_1: u32 = 0x00002 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_2: u32 = 0x00004 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_3: u32 = 0x00008 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_4: u32 = 0x00010 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_5: u32 = 0x00020 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_6: u32 = 0x00040 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_7: u32 = 0x00080 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_8: u32 = 0x00100 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_9: u32 = 0x00200 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_10: u32 = 0x00400 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_11: u32 = 0x00800 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_12: u32 = 0x01000 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_13: u32 = 0x02000 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_14: u32 = 0x04000 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_15: u32 = 0x08000 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_16: u32 = 0x10000 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_17: u32 = 0x20000 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_DIFSEL_DIFSEL_18: u32 = 0x40000 << ADC_DIFSEL_DIFSEL_Pos;
pub const ADC_CALFACT_CALFACT_S_Pos: u32 = 0;
pub const ADC_CALFACT_CALFACT_S_Msk: u32 = 0x7F << ADC_CALFACT_CALFACT_S_Pos;
pub const ADC_CALFACT_CALFACT_S: u32 = ADC_CALFACT_CALFACT_S_Msk;
pub const ADC_CALFACT_CALFACT_S_0: u32 = 0x01 << ADC_CALFACT_CALFACT_S_Pos;
pub const ADC_CALFACT_CALFACT_S_1: u32 = 0x02 << ADC_CALFACT_CALFACT_S_Pos;
pub const ADC_CALFACT_CALFACT_S_2: u32 = 0x04 << ADC_CALFACT_CALFACT_S_Pos;
pub const ADC_CALFACT_CALFACT_S_3: u32 = 0x08 << ADC_CALFACT_CALFACT_S_Pos;
pub const ADC_CALFACT_CALFACT_S_4: u32 = 0x10 << ADC_CALFACT_CALFACT_S_Pos;
pub const ADC_CALFACT_CALFACT_S_5: u32 = 0x20 << ADC_CALFACT_CALFACT_S_Pos;
pub const ADC_CALFACT_CALFACT_S_6: u32 = 0x40 << ADC_CALFACT_CALFACT_S_Pos;
pub const ADC_CALFACT_CALFACT_D_Pos: u32 = 16;
pub const ADC_CALFACT_CALFACT_D_Msk: u32 = 0x7F << ADC_CALFACT_CALFACT_D_Pos;
pub const ADC_CALFACT_CALFACT_D: u32 = ADC_CALFACT_CALFACT_D_Msk;
pub const ADC_CALFACT_CALFACT_D_0: u32 = 0x01 << ADC_CALFACT_CALFACT_D_Pos;
pub const ADC_CALFACT_CALFACT_D_1: u32 = 0x02 << ADC_CALFACT_CALFACT_D_Pos;
pub const ADC_CALFACT_CALFACT_D_2: u32 = 0x04 << ADC_CALFACT_CALFACT_D_Pos;
pub const ADC_CALFACT_CALFACT_D_3: u32 = 0x08 << ADC_CALFACT_CALFACT_D_Pos;
pub const ADC_CALFACT_CALFACT_D_4: u32 = 0x10 << ADC_CALFACT_CALFACT_D_Pos;
pub const ADC_CALFACT_CALFACT_D_5: u32 = 0x20 << ADC_CALFACT_CALFACT_D_Pos;
pub const ADC_CALFACT_CALFACT_D_6: u32 = 0x40 << ADC_CALFACT_CALFACT_D_Pos;
pub const ADC_GCOMP_GCOMPCOEFF_Pos: u32 = 0;
pub const ADC_GCOMP_GCOMPCOEFF_Msk: u32 = 0x3FFF << ADC_GCOMP_GCOMPCOEFF_Pos;
pub const ADC_GCOMP_GCOMPCOEFF: u32 = ADC_GCOMP_GCOMPCOEFF_Msk;
pub const ADC_CSR_ADRDY_MST_Pos: u32 = 0;
pub const ADC_CSR_ADRDY_MST_Msk: u32 = 0x1 << ADC_CSR_ADRDY_MST_Pos;
pub const ADC_CSR_ADRDY_MST: u32 = ADC_CSR_ADRDY_MST_Msk;
pub const ADC_CSR_EOSMP_MST_Pos: u32 = 1;
pub const ADC_CSR_EOSMP_MST_Msk: u32 = 0x1 << ADC_CSR_EOSMP_MST_Pos;
pub const ADC_CSR_EOSMP_MST: u32 = ADC_CSR_EOSMP_MST_Msk;
pub const ADC_CSR_EOC_MST_Pos: u32 = 2;
pub const ADC_CSR_EOC_MST_Msk: u32 = 0x1 << ADC_CSR_EOC_MST_Pos;
pub const ADC_CSR_EOC_MST: u32 = ADC_CSR_EOC_MST_Msk;
pub const ADC_CSR_EOS_MST_Pos: u32 = 3;
pub const ADC_CSR_EOS_MST_Msk: u32 = 0x1 << ADC_CSR_EOS_MST_Pos;
pub const ADC_CSR_EOS_MST: u32 = ADC_CSR_EOS_MST_Msk;
pub const ADC_CSR_OVR_MST_Pos: u32 = 4;
pub const ADC_CSR_OVR_MST_Msk: u32 = 0x1 << ADC_CSR_OVR_MST_Pos;
pub const ADC_CSR_OVR_MST: u32 = ADC_CSR_OVR_MST_Msk;
pub const ADC_CSR_JEOC_MST_Pos: u32 = 5;
pub const ADC_CSR_JEOC_MST_Msk: u32 = 0x1 << ADC_CSR_JEOC_MST_Pos;
pub const ADC_CSR_JEOC_MST: u32 = ADC_CSR_JEOC_MST_Msk;
pub const ADC_CSR_JEOS_MST_Pos: u32 = 6;
pub const ADC_CSR_JEOS_MST_Msk: u32 = 0x1 << ADC_CSR_JEOS_MST_Pos;
pub const ADC_CSR_JEOS_MST: u32 = ADC_CSR_JEOS_MST_Msk;
pub const ADC_CSR_AWD1_MST_Pos: u32 = 7;
pub const ADC_CSR_AWD1_MST_Msk: u32 = 0x1 << ADC_CSR_AWD1_MST_Pos;
pub const ADC_CSR_AWD1_MST: u32 = ADC_CSR_AWD1_MST_Msk;
pub const ADC_CSR_AWD2_MST_Pos: u32 = 8;
pub const ADC_CSR_AWD2_MST_Msk: u32 = 0x1 << ADC_CSR_AWD2_MST_Pos;
pub const ADC_CSR_AWD2_MST: u32 = ADC_CSR_AWD2_MST_Msk;
pub const ADC_CSR_AWD3_MST_Pos: u32 = 9;
pub const ADC_CSR_AWD3_MST_Msk: u32 = 0x1 << ADC_CSR_AWD3_MST_Pos;
pub const ADC_CSR_AWD3_MST: u32 = ADC_CSR_AWD3_MST_Msk;
pub const ADC_CSR_JQOVF_MST_Pos: u32 = 10;
pub const ADC_CSR_JQOVF_MST_Msk: u32 = 0x1 << ADC_CSR_JQOVF_MST_Pos;
pub const ADC_CSR_JQOVF_MST: u32 = ADC_CSR_JQOVF_MST_Msk;
pub const ADC_CSR_ADRDY_SLV_Pos: u32 = 16;
pub const ADC_CSR_ADRDY_SLV_Msk: u32 = 0x1 << ADC_CSR_ADRDY_SLV_Pos;
pub const ADC_CSR_ADRDY_SLV: u32 = ADC_CSR_ADRDY_SLV_Msk;
pub const ADC_CSR_EOSMP_SLV_Pos: u32 = 17;
pub const ADC_CSR_EOSMP_SLV_Msk: u32 = 0x1 << ADC_CSR_EOSMP_SLV_Pos;
pub const ADC_CSR_EOSMP_SLV: u32 = ADC_CSR_EOSMP_SLV_Msk;
pub const ADC_CSR_EOC_SLV_Pos: u32 = 18;
pub const ADC_CSR_EOC_SLV_Msk: u32 = 0x1 << ADC_CSR_EOC_SLV_Pos;
pub const ADC_CSR_EOC_SLV: u32 = ADC_CSR_EOC_SLV_Msk;
pub const ADC_CSR_EOS_SLV_Pos: u32 = 19;
pub const ADC_CSR_EOS_SLV_Msk: u32 = 0x1 << ADC_CSR_EOS_SLV_Pos;
pub const ADC_CSR_EOS_SLV: u32 = ADC_CSR_EOS_SLV_Msk;
pub const ADC_CSR_OVR_SLV_Pos: u32 = 20;
pub const ADC_CSR_OVR_SLV_Msk: u32 = 0x1 << ADC_CSR_OVR_SLV_Pos;
pub const ADC_CSR_OVR_SLV: u32 = ADC_CSR_OVR_SLV_Msk;
pub const ADC_CSR_JEOC_SLV_Pos: u32 = 21;
pub const ADC_CSR_JEOC_SLV_Msk: u32 = 0x1 << ADC_CSR_JEOC_SLV_Pos;
pub const ADC_CSR_JEOC_SLV: u32 = ADC_CSR_JEOC_SLV_Msk;
pub const ADC_CSR_JEOS_SLV_Pos: u32 = 22;
pub const ADC_CSR_JEOS_SLV_Msk: u32 = 0x1 << ADC_CSR_JEOS_SLV_Pos;
pub const ADC_CSR_JEOS_SLV: u32 = ADC_CSR_JEOS_SLV_Msk;
pub const ADC_CSR_AWD1_SLV_Pos: u32 = 23;
pub const ADC_CSR_AWD1_SLV_Msk: u32 = 0x1 << ADC_CSR_AWD1_SLV_Pos;
pub const ADC_CSR_AWD1_SLV: u32 = ADC_CSR_AWD1_SLV_Msk;
pub const ADC_CSR_AWD2_SLV_Pos: u32 = 24;
pub const ADC_CSR_AWD2_SLV_Msk: u32 = 0x1 << ADC_CSR_AWD2_SLV_Pos;
pub const ADC_CSR_AWD2_SLV: u32 = ADC_CSR_AWD2_SLV_Msk;
pub const ADC_CSR_AWD3_SLV_Pos: u32 = 25;
pub const ADC_CSR_AWD3_SLV_Msk: u32 = 0x1 << ADC_CSR_AWD3_SLV_Pos;
pub const ADC_CSR_AWD3_SLV: u32 = ADC_CSR_AWD3_SLV_Msk;
pub const ADC_CSR_JQOVF_SLV_Pos: u32 = 26;
pub const ADC_CSR_JQOVF_SLV_Msk: u32 = 0x1 << ADC_CSR_JQOVF_SLV_Pos;
pub const ADC_CSR_JQOVF_SLV: u32 = ADC_CSR_JQOVF_SLV_Msk;
pub const ADC_CCR_DUAL_Pos: u32 = 0;
pub const ADC_CCR_DUAL_Msk: u32 = 0x1F << ADC_CCR_DUAL_Pos;
pub const ADC_CCR_DUAL: u32 = ADC_CCR_DUAL_Msk;
pub const ADC_CCR_DUAL_0: u32 = 0x01 << ADC_CCR_DUAL_Pos;
pub const ADC_CCR_DUAL_1: u32 = 0x02 << ADC_CCR_DUAL_Pos;
pub const ADC_CCR_DUAL_2: u32 = 0x04 << ADC_CCR_DUAL_Pos;
pub const ADC_CCR_DUAL_3: u32 = 0x08 << ADC_CCR_DUAL_Pos;
pub const ADC_CCR_DUAL_4: u32 = 0x10 << ADC_CCR_DUAL_Pos;
pub const ADC_CCR_DELAY_Pos: u32 = 8;
pub const ADC_CCR_DELAY_Msk: u32 = 0xF << ADC_CCR_DELAY_Pos;
pub const ADC_CCR_DELAY: u32 = ADC_CCR_DELAY_Msk;
pub const ADC_CCR_DELAY_0: u32 = 0x1 << ADC_CCR_DELAY_Pos;
pub const ADC_CCR_DELAY_1: u32 = 0x2 << ADC_CCR_DELAY_Pos;
pub const ADC_CCR_DELAY_2: u32 = 0x4 << ADC_CCR_DELAY_Pos;
pub const ADC_CCR_DELAY_3: u32 = 0x8 << ADC_CCR_DELAY_Pos;
pub const ADC_CCR_DMACFG_Pos: u32 = 13;
pub const ADC_CCR_DMACFG_Msk: u32 = 0x1 << ADC_CCR_DMACFG_Pos;
pub const ADC_CCR_DMACFG: u32 = ADC_CCR_DMACFG_Msk;
pub const ADC_CCR_MDMA_Pos: u32 = 14;
pub const ADC_CCR_MDMA_Msk: u32 = 0x3 << ADC_CCR_MDMA_Pos;
pub const ADC_CCR_MDMA: u32 = ADC_CCR_MDMA_Msk;
pub const ADC_CCR_MDMA_0: u32 = 0x1 << ADC_CCR_MDMA_Pos;
pub const ADC_CCR_MDMA_1: u32 = 0x2 << ADC_CCR_MDMA_Pos;
pub const ADC_CCR_CKMODE_Pos: u32 = 16;
pub const ADC_CCR_CKMODE_Msk: u32 = 0x3 << ADC_CCR_CKMODE_Pos;
pub const ADC_CCR_CKMODE: u32 = ADC_CCR_CKMODE_Msk;
pub const ADC_CCR_CKMODE_0: u32 = 0x1 << ADC_CCR_CKMODE_Pos;
pub const ADC_CCR_CKMODE_1: u32 = 0x2 << ADC_CCR_CKMODE_Pos;
pub const ADC_CCR_PRESC_Pos: u32 = 18;
pub const ADC_CCR_PRESC_Msk: u32 = 0xF << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_PRESC: u32 = ADC_CCR_PRESC_Msk;
pub const ADC_CCR_PRESC_0: u32 = 0x1 << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_PRESC_1: u32 = 0x2 << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_PRESC_2: u32 = 0x4 << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_PRESC_3: u32 = 0x8 << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_VREFEN_Pos: u32 = 22;
pub const ADC_CCR_VREFEN_Msk: u32 = 0x1 << ADC_CCR_VREFEN_Pos;
pub const ADC_CCR_VREFEN: u32 = ADC_CCR_VREFEN_Msk;
pub const ADC_CCR_VSENSESEL_Pos: u32 = 23;
pub const ADC_CCR_VSENSESEL_Msk: u32 = 0x1 << ADC_CCR_VSENSESEL_Pos;
pub const ADC_CCR_VSENSESEL: u32 = ADC_CCR_VSENSESEL_Msk;
pub const ADC_CCR_VBATSEL_Pos: u32 = 24;
pub const ADC_CCR_VBATSEL_Msk: u32 = 0x1 << ADC_CCR_VBATSEL_Pos;
pub const ADC_CCR_VBATSEL: u32 = ADC_CCR_VBATSEL_Msk;
pub const ADC_CDR_RDATA_MST_Pos: u32 = 0;
pub const ADC_CDR_RDATA_MST_Msk: u32 = 0xFFFF << ADC_CDR_RDATA_MST_Pos;
pub const ADC_CDR_RDATA_MST: u32 = ADC_CDR_RDATA_MST_Msk;
pub const ADC_CDR_RDATA_SLV_Pos: u32 = 16;
pub const ADC_CDR_RDATA_SLV_Msk: u32 = 0xFFFF << ADC_CDR_RDATA_SLV_Pos;
pub const ADC_CDR_RDATA_SLV: u32 = ADC_CDR_RDATA_SLV_Msk;
pub const AES_CR_EN_Pos: u32 = 0;
pub const AES_CR_EN_Msk: u32 = 0x1 << AES_CR_EN_Pos;
pub const AES_CR_EN: u32 = AES_CR_EN_Msk;
pub const AES_CR_DATATYPE_Pos: u32 = 1;
pub const AES_CR_DATATYPE_Msk: u32 = 0x3 << AES_CR_DATATYPE_Pos;
pub const AES_CR_DATATYPE: u32 = AES_CR_DATATYPE_Msk;
pub const AES_CR_DATATYPE_0: u32 = 0x1 << AES_CR_DATATYPE_Pos;
pub const AES_CR_DATATYPE_1: u32 = 0x2 << AES_CR_DATATYPE_Pos;
pub const AES_CR_MODE_Pos: u32 = 3;
pub const AES_CR_MODE_Msk: u32 = 0x3 << AES_CR_MODE_Pos;
pub const AES_CR_MODE: u32 = AES_CR_MODE_Msk;
pub const AES_CR_MODE_0: u32 = 0x1 << AES_CR_MODE_Pos;
pub const AES_CR_MODE_1: u32 = 0x2 << AES_CR_MODE_Pos;
pub const AES_CR_CHMOD_Pos: u32 = 5;
pub const AES_CR_CHMOD_Msk: u32 = 0x803 << AES_CR_CHMOD_Pos;
pub const AES_CR_CHMOD: u32 = AES_CR_CHMOD_Msk;
pub const AES_CR_CHMOD_0: u32 = 0x001 << AES_CR_CHMOD_Pos;
pub const AES_CR_CHMOD_1: u32 = 0x002 << AES_CR_CHMOD_Pos;
pub const AES_CR_CHMOD_2: u32 = 0x800 << AES_CR_CHMOD_Pos;
pub const AES_CR_CCFC_Pos: u32 = 7;
pub const AES_CR_CCFC_Msk: u32 = 0x1 << AES_CR_CCFC_Pos;
pub const AES_CR_CCFC: u32 = AES_CR_CCFC_Msk;
pub const AES_CR_ERRC_Pos: u32 = 8;
pub const AES_CR_ERRC_Msk: u32 = 0x1 << AES_CR_ERRC_Pos;
pub const AES_CR_ERRC: u32 = AES_CR_ERRC_Msk;
pub const AES_CR_CCFIE_Pos: u32 = 9;
pub const AES_CR_CCFIE_Msk: u32 = 0x1 << AES_CR_CCFIE_Pos;
pub const AES_CR_CCFIE: u32 = AES_CR_CCFIE_Msk;
pub const AES_CR_ERRIE_Pos: u32 = 10;
pub const AES_CR_ERRIE_Msk: u32 = 0x1 << AES_CR_ERRIE_Pos;
pub const AES_CR_ERRIE: u32 = AES_CR_ERRIE_Msk;
pub const AES_CR_DMAINEN_Pos: u32 = 11;
pub const AES_CR_DMAINEN_Msk: u32 = 0x1 << AES_CR_DMAINEN_Pos;
pub const AES_CR_DMAINEN: u32 = AES_CR_DMAINEN_Msk;
pub const AES_CR_DMAOUTEN_Pos: u32 = 12;
pub const AES_CR_DMAOUTEN_Msk: u32 = 0x1 << AES_CR_DMAOUTEN_Pos;
pub const AES_CR_DMAOUTEN: u32 = AES_CR_DMAOUTEN_Msk;
pub const AES_CR_GCMPH_Pos: u32 = 13;
pub const AES_CR_GCMPH_Msk: u32 = 0x3 << AES_CR_GCMPH_Pos;
pub const AES_CR_GCMPH: u32 = AES_CR_GCMPH_Msk;
pub const AES_CR_GCMPH_0: u32 = 0x1 << AES_CR_GCMPH_Pos;
pub const AES_CR_GCMPH_1: u32 = 0x2 << AES_CR_GCMPH_Pos;
pub const AES_CR_KEYSIZE_Pos: u32 = 18;
pub const AES_CR_KEYSIZE_Msk: u32 = 0x1 << AES_CR_KEYSIZE_Pos;
pub const AES_CR_KEYSIZE: u32 = AES_CR_KEYSIZE_Msk;
pub const AES_CR_NPBLB_Pos: u32 = 20;
pub const AES_CR_NPBLB_Msk: u32 = 0xF << AES_CR_NPBLB_Pos;
pub const AES_CR_NPBLB: u32 = AES_CR_NPBLB_Msk;
pub const AES_CR_NPBLB_0: u32 = 0x1 << AES_CR_NPBLB_Pos;
pub const AES_CR_NPBLB_1: u32 = 0x2 << AES_CR_NPBLB_Pos;
pub const AES_CR_NPBLB_2: u32 = 0x4 << AES_CR_NPBLB_Pos;
pub const AES_CR_NPBLB_3: u32 = 0x8 << AES_CR_NPBLB_Pos;
pub const AES_SR_CCF_Pos: u32 = 0;
pub const AES_SR_CCF_Msk: u32 = 0x1 << AES_SR_CCF_Pos;
pub const AES_SR_CCF: u32 = AES_SR_CCF_Msk;
pub const AES_SR_RDERR_Pos: u32 = 1;
pub const AES_SR_RDERR_Msk: u32 = 0x1 << AES_SR_RDERR_Pos;
pub const AES_SR_RDERR: u32 = AES_SR_RDERR_Msk;
pub const AES_SR_WRERR_Pos: u32 = 2;
pub const AES_SR_WRERR_Msk: u32 = 0x1 << AES_SR_WRERR_Pos;
pub const AES_SR_WRERR: u32 = AES_SR_WRERR_Msk;
pub const AES_SR_BUSY_Pos: u32 = 3;
pub const AES_SR_BUSY_Msk: u32 = 0x1 << AES_SR_BUSY_Pos;
pub const AES_SR_BUSY: u32 = AES_SR_BUSY_Msk;
pub const AES_DINR_Pos: u32 = 0;
pub const AES_DINR_Msk: u32 = 0xFFFFFFFF << AES_DINR_Pos;
pub const AES_DINR: u32 = AES_DINR_Msk;
pub const AES_DOUTR_Pos: u32 = 0;
pub const AES_DOUTR_Msk: u32 = 0xFFFFFFFF << AES_DOUTR_Pos;
pub const AES_DOUTR: u32 = AES_DOUTR_Msk;
pub const AES_KEYR0_Pos: u32 = 0;
pub const AES_KEYR0_Msk: u32 = 0xFFFFFFFF << AES_KEYR0_Pos;
pub const AES_KEYR0: u32 = AES_KEYR0_Msk;
pub const AES_KEYR1_Pos: u32 = 0;
pub const AES_KEYR1_Msk: u32 = 0xFFFFFFFF << AES_KEYR1_Pos;
pub const AES_KEYR1: u32 = AES_KEYR1_Msk;
pub const AES_KEYR2_Pos: u32 = 0;
pub const AES_KEYR2_Msk: u32 = 0xFFFFFFFF << AES_KEYR2_Pos;
pub const AES_KEYR2: u32 = AES_KEYR2_Msk;
pub const AES_KEYR3_Pos: u32 = 0;
pub const AES_KEYR3_Msk: u32 = 0xFFFFFFFF << AES_KEYR3_Pos;
pub const AES_KEYR3: u32 = AES_KEYR3_Msk;
pub const AES_KEYR4_Pos: u32 = 0;
pub const AES_KEYR4_Msk: u32 = 0xFFFFFFFF << AES_KEYR4_Pos;
pub const AES_KEYR4: u32 = AES_KEYR4_Msk;
pub const AES_KEYR5_Pos: u32 = 0;
pub const AES_KEYR5_Msk: u32 = 0xFFFFFFFF << AES_KEYR5_Pos;
pub const AES_KEYR5: u32 = AES_KEYR5_Msk;
pub const AES_KEYR6_Pos: u32 = 0;
pub const AES_KEYR6_Msk: u32 = 0xFFFFFFFF << AES_KEYR6_Pos;
pub const AES_KEYR6: u32 = AES_KEYR6_Msk;
pub const AES_KEYR7_Pos: u32 = 0;
pub const AES_KEYR7_Msk: u32 = 0xFFFFFFFF << AES_KEYR7_Pos;
pub const AES_KEYR7: u32 = AES_KEYR7_Msk;
pub const AES_IVR0_Pos: u32 = 0;
pub const AES_IVR0_Msk: u32 = 0xFFFFFFFF << AES_IVR0_Pos;
pub const AES_IVR0: u32 = AES_IVR0_Msk;
pub const AES_IVR1_Pos: u32 = 0;
pub const AES_IVR1_Msk: u32 = 0xFFFFFFFF << AES_IVR1_Pos;
pub const AES_IVR1: u32 = AES_IVR1_Msk;
pub const AES_IVR2_Pos: u32 = 0;
pub const AES_IVR2_Msk: u32 = 0xFFFFFFFF << AES_IVR2_Pos;
pub const AES_IVR2: u32 = AES_IVR2_Msk;
pub const AES_IVR3_Pos: u32 = 0;
pub const AES_IVR3_Msk: u32 = 0xFFFFFFFF << AES_IVR3_Pos;
pub const AES_IVR3: u32 = AES_IVR3_Msk;
pub const AES_SUSP0R_Pos: u32 = 0;
pub const AES_SUSP0R_Msk: u32 = 0xFFFFFFFF << AES_SUSP0R_Pos;
pub const AES_SUSP0R: u32 = AES_SUSP0R_Msk;
pub const AES_SUSP1R_Pos: u32 = 0;
pub const AES_SUSP1R_Msk: u32 = 0xFFFFFFFF << AES_SUSP1R_Pos;
pub const AES_SUSP1R: u32 = AES_SUSP1R_Msk;
pub const AES_SUSP2R_Pos: u32 = 0;
pub const AES_SUSP2R_Msk: u32 = 0xFFFFFFFF << AES_SUSP2R_Pos;
pub const AES_SUSP2R: u32 = AES_SUSP2R_Msk;
pub const AES_SUSP3R_Pos: u32 = 0;
pub const AES_SUSP3R_Msk: u32 = 0xFFFFFFFF << AES_SUSP3R_Pos;
pub const AES_SUSP3R: u32 = AES_SUSP3R_Msk;
pub const AES_SUSP4R_Pos: u32 = 0;
pub const AES_SUSP4R_Msk: u32 = 0xFFFFFFFF << AES_SUSP4R_Pos;
pub const AES_SUSP4R: u32 = AES_SUSP4R_Msk;
pub const AES_SUSP5R_Pos: u32 = 0;
pub const AES_SUSP5R_Msk: u32 = 0xFFFFFFFF << AES_SUSP5R_Pos;
pub const AES_SUSP5R: u32 = AES_SUSP5R_Msk;
pub const AES_SUSP6R_Pos: u32 = 0;
pub const AES_SUSP6R_Msk: u32 = 0xFFFFFFFF << AES_SUSP6R_Pos;
pub const AES_SUSP6R: u32 = AES_SUSP6R_Msk;
pub const AES_SUSP7R_Pos: u32 = 0;
pub const AES_SUSP7R_Msk: u32 = 0xFFFFFFFF << AES_SUSP7R_Pos;
pub const AES_SUSP7R: u32 = AES_SUSP7R_Msk;
pub const COMP_CSR_EN_Pos: u32 = 0;
pub const COMP_CSR_EN_Msk: u32 = 0x1 << COMP_CSR_EN_Pos;
pub const COMP_CSR_EN: u32 = COMP_CSR_EN_Msk;
pub const COMP_CSR_INMSEL_Pos: u32 = 4;
pub const COMP_CSR_INMSEL_Msk: u32 = 0xF << COMP_CSR_INMSEL_Pos;
pub const COMP_CSR_INMSEL: u32 = COMP_CSR_INMSEL_Msk;
pub const COMP_CSR_INMSEL_0: u32 = 0x1 << COMP_CSR_INMSEL_Pos;
pub const COMP_CSR_INMSEL_1: u32 = 0x2 << COMP_CSR_INMSEL_Pos;
pub const COMP_CSR_INMSEL_2: u32 = 0x4 << COMP_CSR_INMSEL_Pos;
pub const COMP_CSR_INMSEL_3: u32 = 0x8 << COMP_CSR_INMSEL_Pos;
pub const COMP_CSR_INPSEL_Pos: u32 = 8;
pub const COMP_CSR_INPSEL_Msk: u32 = 0x1 << COMP_CSR_INPSEL_Pos;
pub const COMP_CSR_INPSEL: u32 = COMP_CSR_INPSEL_Msk;
pub const COMP_CSR_POLARITY_Pos: u32 = 15;
pub const COMP_CSR_POLARITY_Msk: u32 = 0x1 << COMP_CSR_POLARITY_Pos;
pub const COMP_CSR_POLARITY: u32 = COMP_CSR_POLARITY_Msk;
pub const COMP_CSR_HYST_Pos: u32 = 16;
pub const COMP_CSR_HYST_Msk: u32 = 0x7 << COMP_CSR_HYST_Pos;
pub const COMP_CSR_HYST: u32 = COMP_CSR_HYST_Msk;
pub const COMP_CSR_HYST_0: u32 = 0x1 << COMP_CSR_HYST_Pos;
pub const COMP_CSR_HYST_1: u32 = 0x2 << COMP_CSR_HYST_Pos;
pub const COMP_CSR_HYST_2: u32 = 0x4 << COMP_CSR_HYST_Pos;
pub const COMP_CSR_BLANKING_Pos: u32 = 19;
pub const COMP_CSR_BLANKING_Msk: u32 = 0x7 << COMP_CSR_BLANKING_Pos;
pub const COMP_CSR_BLANKING: u32 = COMP_CSR_BLANKING_Msk;
pub const COMP_CSR_BLANKING_0: u32 = 0x1 << COMP_CSR_BLANKING_Pos;
pub const COMP_CSR_BLANKING_1: u32 = 0x2 << COMP_CSR_BLANKING_Pos;
pub const COMP_CSR_BLANKING_2: u32 = 0x4 << COMP_CSR_BLANKING_Pos;
pub const COMP_CSR_BRGEN_Pos: u32 = 22;
pub const COMP_CSR_BRGEN_Msk: u32 = 0x1 << COMP_CSR_BRGEN_Pos;
pub const COMP_CSR_BRGEN: u32 = COMP_CSR_BRGEN_Msk;
pub const COMP_CSR_SCALEN_Pos: u32 = 23;
pub const COMP_CSR_SCALEN_Msk: u32 = 0x1 << COMP_CSR_SCALEN_Pos;
pub const COMP_CSR_SCALEN: u32 = COMP_CSR_SCALEN_Msk;
pub const COMP_CSR_VALUE_Pos: u32 = 30;
pub const COMP_CSR_VALUE_Msk: u32 = 0x1 << COMP_CSR_VALUE_Pos;
pub const COMP_CSR_VALUE: u32 = COMP_CSR_VALUE_Msk;
pub const COMP_CSR_LOCK_Pos: u32 = 31;
pub const COMP_CSR_LOCK_Msk: u32 = 0x1 << COMP_CSR_LOCK_Pos;
pub const COMP_CSR_LOCK: u32 = COMP_CSR_LOCK_Msk;
pub const CORDIC_CSR_FUNC_Pos: u32 = 0;
pub const CORDIC_CSR_FUNC_Msk: u32 = 0xF << CORDIC_CSR_FUNC_Pos;
pub const CORDIC_CSR_FUNC: u32 = CORDIC_CSR_FUNC_Msk;
pub const CORDIC_CSR_FUNC_0: u32 = 0x1 << CORDIC_CSR_FUNC_Pos;
pub const CORDIC_CSR_FUNC_1: u32 = 0x2 << CORDIC_CSR_FUNC_Pos;
pub const CORDIC_CSR_FUNC_2: u32 = 0x4 << CORDIC_CSR_FUNC_Pos;
pub const CORDIC_CSR_FUNC_3: u32 = 0x8 << CORDIC_CSR_FUNC_Pos;
pub const CORDIC_CSR_PRECISION_Pos: u32 = 4;
pub const CORDIC_CSR_PRECISION_Msk: u32 = 0xF << CORDIC_CSR_PRECISION_Pos;
pub const CORDIC_CSR_PRECISION: u32 = CORDIC_CSR_PRECISION_Msk;
pub const CORDIC_CSR_PRECISION_0: u32 = 0x1 << CORDIC_CSR_PRECISION_Pos;
pub const CORDIC_CSR_PRECISION_1: u32 = 0x2 << CORDIC_CSR_PRECISION_Pos;
pub const CORDIC_CSR_PRECISION_2: u32 = 0x4 << CORDIC_CSR_PRECISION_Pos;
pub const CORDIC_CSR_PRECISION_3: u32 = 0x8 << CORDIC_CSR_PRECISION_Pos;
pub const CORDIC_CSR_SCALE_Pos: u32 = 8;
pub const CORDIC_CSR_SCALE_Msk: u32 = 0x7 << CORDIC_CSR_SCALE_Pos;
pub const CORDIC_CSR_SCALE: u32 = CORDIC_CSR_SCALE_Msk;
pub const CORDIC_CSR_SCALE_0: u32 = 0x1 << CORDIC_CSR_SCALE_Pos;
pub const CORDIC_CSR_SCALE_1: u32 = 0x2 << CORDIC_CSR_SCALE_Pos;
pub const CORDIC_CSR_SCALE_2: u32 = 0x4 << CORDIC_CSR_SCALE_Pos;
pub const CORDIC_CSR_IEN_Pos: u32 = 16;
pub const CORDIC_CSR_IEN_Msk: u32 = 0x1 << CORDIC_CSR_IEN_Pos;
pub const CORDIC_CSR_IEN: u32 = CORDIC_CSR_IEN_Msk;
pub const CORDIC_CSR_DMAREN_Pos: u32 = 17;
pub const CORDIC_CSR_DMAREN_Msk: u32 = 0x1 << CORDIC_CSR_DMAREN_Pos;
pub const CORDIC_CSR_DMAREN: u32 = CORDIC_CSR_DMAREN_Msk;
pub const CORDIC_CSR_DMAWEN_Pos: u32 = 18;
pub const CORDIC_CSR_DMAWEN_Msk: u32 = 0x1 << CORDIC_CSR_DMAWEN_Pos;
pub const CORDIC_CSR_DMAWEN: u32 = CORDIC_CSR_DMAWEN_Msk;
pub const CORDIC_CSR_NRES_Pos: u32 = 19;
pub const CORDIC_CSR_NRES_Msk: u32 = 0x1 << CORDIC_CSR_NRES_Pos;
pub const CORDIC_CSR_NRES: u32 = CORDIC_CSR_NRES_Msk;
pub const CORDIC_CSR_NARGS_Pos: u32 = 20;
pub const CORDIC_CSR_NARGS_Msk: u32 = 0x1 << CORDIC_CSR_NARGS_Pos;
pub const CORDIC_CSR_NARGS: u32 = CORDIC_CSR_NARGS_Msk;
pub const CORDIC_CSR_RESSIZE_Pos: u32 = 21;
pub const CORDIC_CSR_RESSIZE_Msk: u32 = 0x1 << CORDIC_CSR_RESSIZE_Pos;
pub const CORDIC_CSR_RESSIZE: u32 = CORDIC_CSR_RESSIZE_Msk;
pub const CORDIC_CSR_ARGSIZE_Pos: u32 = 22;
pub const CORDIC_CSR_ARGSIZE_Msk: u32 = 0x1 << CORDIC_CSR_ARGSIZE_Pos;
pub const CORDIC_CSR_ARGSIZE: u32 = CORDIC_CSR_ARGSIZE_Msk;
pub const CORDIC_CSR_RRDY_Pos: u32 = 31;
pub const CORDIC_CSR_RRDY_Msk: u32 = 0x1 << CORDIC_CSR_RRDY_Pos;
pub const CORDIC_CSR_RRDY: u32 = CORDIC_CSR_RRDY_Msk;
pub const CORDIC_WDATA_ARG_Pos: u32 = 0;
pub const CORDIC_WDATA_ARG_Msk: u32 = 0xFFFFFFFF << CORDIC_WDATA_ARG_Pos;
pub const CORDIC_WDATA_ARG: u32 = CORDIC_WDATA_ARG_Msk;
pub const CORDIC_RDATA_RES_Pos: u32 = 0;
pub const CORDIC_RDATA_RES_Msk: u32 = 0xFFFFFFFF << CORDIC_RDATA_RES_Pos;
pub const CORDIC_RDATA_RES: u32 = CORDIC_RDATA_RES_Msk;
pub const CRC_DR_DR_Pos: u32 = 0;
pub const CRC_DR_DR_Msk: u32 = 0xFFFFFFFF << CRC_DR_DR_Pos;
pub const CRC_DR_DR: u32 = CRC_DR_DR_Msk;
pub const CRC_IDR_IDR_Pos: u32 = 0;
pub const CRC_IDR_IDR_Msk: u32 = 0xFFFFFFFF << CRC_IDR_IDR_Pos;
pub const CRC_IDR_IDR: u32 = CRC_IDR_IDR_Msk;
pub const CRC_CR_RESET_Pos: u32 = 0;
pub const CRC_CR_RESET_Msk: u32 = 0x1 << CRC_CR_RESET_Pos;
pub const CRC_CR_RESET: u32 = CRC_CR_RESET_Msk;
pub const CRC_CR_POLYSIZE_Pos: u32 = 3;
pub const CRC_CR_POLYSIZE_Msk: u32 = 0x3 << CRC_CR_POLYSIZE_Pos;
pub const CRC_CR_POLYSIZE: u32 = CRC_CR_POLYSIZE_Msk;
pub const CRC_CR_POLYSIZE_0: u32 = 0x1 << CRC_CR_POLYSIZE_Pos;
pub const CRC_CR_POLYSIZE_1: u32 = 0x2 << CRC_CR_POLYSIZE_Pos;
pub const CRC_CR_REV_IN_Pos: u32 = 5;
pub const CRC_CR_REV_IN_Msk: u32 = 0x3 << CRC_CR_REV_IN_Pos;
pub const CRC_CR_REV_IN: u32 = CRC_CR_REV_IN_Msk;
pub const CRC_CR_REV_IN_0: u32 = 0x1 << CRC_CR_REV_IN_Pos;
pub const CRC_CR_REV_IN_1: u32 = 0x2 << CRC_CR_REV_IN_Pos;
pub const CRC_CR_REV_OUT_Pos: u32 = 7;
pub const CRC_CR_REV_OUT_Msk: u32 = 0x1 << CRC_CR_REV_OUT_Pos;
pub const CRC_CR_REV_OUT: u32 = CRC_CR_REV_OUT_Msk;
pub const CRC_INIT_INIT_Pos: u32 = 0;
pub const CRC_INIT_INIT_Msk: u32 = 0xFFFFFFFF << CRC_INIT_INIT_Pos;
pub const CRC_INIT_INIT: u32 = CRC_INIT_INIT_Msk;
pub const CRC_POL_POL_Pos: u32 = 0;
pub const CRC_POL_POL_Msk: u32 = 0xFFFFFFFF << CRC_POL_POL_Pos;
pub const CRC_POL_POL: u32 = CRC_POL_POL_Msk;
pub const CRS_CR_SYNCOKIE_Pos: u32 = 0;
pub const CRS_CR_SYNCOKIE_Msk: u32 = 0x1 << CRS_CR_SYNCOKIE_Pos;
pub const CRS_CR_SYNCOKIE: u32 = CRS_CR_SYNCOKIE_Msk;
pub const CRS_CR_SYNCWARNIE_Pos: u32 = 1;
pub const CRS_CR_SYNCWARNIE_Msk: u32 = 0x1 << CRS_CR_SYNCWARNIE_Pos;
pub const CRS_CR_SYNCWARNIE: u32 = CRS_CR_SYNCWARNIE_Msk;
pub const CRS_CR_ERRIE_Pos: u32 = 2;
pub const CRS_CR_ERRIE_Msk: u32 = 0x1 << CRS_CR_ERRIE_Pos;
pub const CRS_CR_ERRIE: u32 = CRS_CR_ERRIE_Msk;
pub const CRS_CR_ESYNCIE_Pos: u32 = 3;
pub const CRS_CR_ESYNCIE_Msk: u32 = 0x1 << CRS_CR_ESYNCIE_Pos;
pub const CRS_CR_ESYNCIE: u32 = CRS_CR_ESYNCIE_Msk;
pub const CRS_CR_CEN_Pos: u32 = 5;
pub const CRS_CR_CEN_Msk: u32 = 0x1 << CRS_CR_CEN_Pos;
pub const CRS_CR_CEN: u32 = CRS_CR_CEN_Msk;
pub const CRS_CR_AUTOTRIMEN_Pos: u32 = 6;
pub const CRS_CR_AUTOTRIMEN_Msk: u32 = 0x1 << CRS_CR_AUTOTRIMEN_Pos;
pub const CRS_CR_AUTOTRIMEN: u32 = CRS_CR_AUTOTRIMEN_Msk;
pub const CRS_CR_SWSYNC_Pos: u32 = 7;
pub const CRS_CR_SWSYNC_Msk: u32 = 0x1 << CRS_CR_SWSYNC_Pos;
pub const CRS_CR_SWSYNC: u32 = CRS_CR_SWSYNC_Msk;
pub const CRS_CR_TRIM_Pos: u32 = 8;
pub const CRS_CR_TRIM_Msk: u32 = 0x7F << CRS_CR_TRIM_Pos;
pub const CRS_CR_TRIM: u32 = CRS_CR_TRIM_Msk;
pub const CRS_CFGR_RELOAD_Pos: u32 = 0;
pub const CRS_CFGR_RELOAD_Msk: u32 = 0xFFFF << CRS_CFGR_RELOAD_Pos;
pub const CRS_CFGR_RELOAD: u32 = CRS_CFGR_RELOAD_Msk;
pub const CRS_CFGR_FELIM_Pos: u32 = 16;
pub const CRS_CFGR_FELIM_Msk: u32 = 0xFF << CRS_CFGR_FELIM_Pos;
pub const CRS_CFGR_FELIM: u32 = CRS_CFGR_FELIM_Msk;
pub const CRS_CFGR_SYNCDIV_Pos: u32 = 24;
pub const CRS_CFGR_SYNCDIV_Msk: u32 = 0x7 << CRS_CFGR_SYNCDIV_Pos;
pub const CRS_CFGR_SYNCDIV: u32 = CRS_CFGR_SYNCDIV_Msk;
pub const CRS_CFGR_SYNCDIV_0: u32 = 0x1 << CRS_CFGR_SYNCDIV_Pos;
pub const CRS_CFGR_SYNCDIV_1: u32 = 0x2 << CRS_CFGR_SYNCDIV_Pos;
pub const CRS_CFGR_SYNCDIV_2: u32 = 0x4 << CRS_CFGR_SYNCDIV_Pos;
pub const CRS_CFGR_SYNCSRC_Pos: u32 = 28;
pub const CRS_CFGR_SYNCSRC_Msk: u32 = 0x3 << CRS_CFGR_SYNCSRC_Pos;
pub const CRS_CFGR_SYNCSRC: u32 = CRS_CFGR_SYNCSRC_Msk;
pub const CRS_CFGR_SYNCSRC_0: u32 = 0x1 << CRS_CFGR_SYNCSRC_Pos;
pub const CRS_CFGR_SYNCSRC_1: u32 = 0x2 << CRS_CFGR_SYNCSRC_Pos;
pub const CRS_CFGR_SYNCPOL_Pos: u32 = 31;
pub const CRS_CFGR_SYNCPOL_Msk: u32 = 0x1 << CRS_CFGR_SYNCPOL_Pos;
pub const CRS_CFGR_SYNCPOL: u32 = CRS_CFGR_SYNCPOL_Msk;
pub const CRS_ISR_SYNCOKF_Pos: u32 = 0;
pub const CRS_ISR_SYNCOKF_Msk: u32 = 0x1 << CRS_ISR_SYNCOKF_Pos;
pub const CRS_ISR_SYNCOKF: u32 = CRS_ISR_SYNCOKF_Msk;
pub const CRS_ISR_SYNCWARNF_Pos: u32 = 1;
pub const CRS_ISR_SYNCWARNF_Msk: u32 = 0x1 << CRS_ISR_SYNCWARNF_Pos;
pub const CRS_ISR_SYNCWARNF: u32 = CRS_ISR_SYNCWARNF_Msk;
pub const CRS_ISR_ERRF_Pos: u32 = 2;
pub const CRS_ISR_ERRF_Msk: u32 = 0x1 << CRS_ISR_ERRF_Pos;
pub const CRS_ISR_ERRF: u32 = CRS_ISR_ERRF_Msk;
pub const CRS_ISR_ESYNCF_Pos: u32 = 3;
pub const CRS_ISR_ESYNCF_Msk: u32 = 0x1 << CRS_ISR_ESYNCF_Pos;
pub const CRS_ISR_ESYNCF: u32 = CRS_ISR_ESYNCF_Msk;
pub const CRS_ISR_SYNCERR_Pos: u32 = 8;
pub const CRS_ISR_SYNCERR_Msk: u32 = 0x1 << CRS_ISR_SYNCERR_Pos;
pub const CRS_ISR_SYNCERR: u32 = CRS_ISR_SYNCERR_Msk;
pub const CRS_ISR_SYNCMISS_Pos: u32 = 9;
pub const CRS_ISR_SYNCMISS_Msk: u32 = 0x1 << CRS_ISR_SYNCMISS_Pos;
pub const CRS_ISR_SYNCMISS: u32 = CRS_ISR_SYNCMISS_Msk;
pub const CRS_ISR_TRIMOVF_Pos: u32 = 10;
pub const CRS_ISR_TRIMOVF_Msk: u32 = 0x1 << CRS_ISR_TRIMOVF_Pos;
pub const CRS_ISR_TRIMOVF: u32 = CRS_ISR_TRIMOVF_Msk;
pub const CRS_ISR_FEDIR_Pos: u32 = 15;
pub const CRS_ISR_FEDIR_Msk: u32 = 0x1 << CRS_ISR_FEDIR_Pos;
pub const CRS_ISR_FEDIR: u32 = CRS_ISR_FEDIR_Msk;
pub const CRS_ISR_FECAP_Pos: u32 = 16;
pub const CRS_ISR_FECAP_Msk: u32 = 0xFFFF << CRS_ISR_FECAP_Pos;
pub const CRS_ISR_FECAP: u32 = CRS_ISR_FECAP_Msk;
pub const CRS_ICR_SYNCOKC_Pos: u32 = 0;
pub const CRS_ICR_SYNCOKC_Msk: u32 = 0x1 << CRS_ICR_SYNCOKC_Pos;
pub const CRS_ICR_SYNCOKC: u32 = CRS_ICR_SYNCOKC_Msk;
pub const CRS_ICR_SYNCWARNC_Pos: u32 = 1;
pub const CRS_ICR_SYNCWARNC_Msk: u32 = 0x1 << CRS_ICR_SYNCWARNC_Pos;
pub const CRS_ICR_SYNCWARNC: u32 = CRS_ICR_SYNCWARNC_Msk;
pub const CRS_ICR_ERRC_Pos: u32 = 2;
pub const CRS_ICR_ERRC_Msk: u32 = 0x1 << CRS_ICR_ERRC_Pos;
pub const CRS_ICR_ERRC: u32 = CRS_ICR_ERRC_Msk;
pub const CRS_ICR_ESYNCC_Pos: u32 = 3;
pub const CRS_ICR_ESYNCC_Msk: u32 = 0x1 << CRS_ICR_ESYNCC_Pos;
pub const CRS_ICR_ESYNCC: u32 = CRS_ICR_ESYNCC_Msk;
pub const DAC_CR_EN1_Pos: u32 = 0;
pub const DAC_CR_EN1_Msk: u32 = 0x1 << DAC_CR_EN1_Pos;
pub const DAC_CR_EN1: u32 = DAC_CR_EN1_Msk;
pub const DAC_CR_TEN1_Pos: u32 = 1;
pub const DAC_CR_TEN1_Msk: u32 = 0x1 << DAC_CR_TEN1_Pos;
pub const DAC_CR_TEN1: u32 = DAC_CR_TEN1_Msk;
pub const DAC_CR_TSEL1_Pos: u32 = 2;
pub const DAC_CR_TSEL1_Msk: u32 = 0xF << DAC_CR_TSEL1_Pos;
pub const DAC_CR_TSEL1: u32 = DAC_CR_TSEL1_Msk;
pub const DAC_CR_TSEL1_0: u32 = 0x1 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_TSEL1_1: u32 = 0x2 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_TSEL1_2: u32 = 0x4 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_TSEL1_3: u32 = 0x8 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_WAVE1_Pos: u32 = 6;
pub const DAC_CR_WAVE1_Msk: u32 = 0x3 << DAC_CR_WAVE1_Pos;
pub const DAC_CR_WAVE1: u32 = DAC_CR_WAVE1_Msk;
pub const DAC_CR_WAVE1_0: u32 = 0x1 << DAC_CR_WAVE1_Pos;
pub const DAC_CR_WAVE1_1: u32 = 0x2 << DAC_CR_WAVE1_Pos;
pub const DAC_CR_MAMP1_Pos: u32 = 8;
pub const DAC_CR_MAMP1_Msk: u32 = 0xF << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1: u32 = DAC_CR_MAMP1_Msk;
pub const DAC_CR_MAMP1_0: u32 = 0x1 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1_1: u32 = 0x2 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1_2: u32 = 0x4 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1_3: u32 = 0x8 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_DMAEN1_Pos: u32 = 12;
pub const DAC_CR_DMAEN1_Msk: u32 = 0x1 << DAC_CR_DMAEN1_Pos;
pub const DAC_CR_DMAEN1: u32 = DAC_CR_DMAEN1_Msk;
pub const DAC_CR_DMAUDRIE1_Pos: u32 = 13;
pub const DAC_CR_DMAUDRIE1_Msk: u32 = 0x1 << DAC_CR_DMAUDRIE1_Pos;
pub const DAC_CR_DMAUDRIE1: u32 = DAC_CR_DMAUDRIE1_Msk;
pub const DAC_CR_CEN1_Pos: u32 = 14;
pub const DAC_CR_CEN1_Msk: u32 = 0x1 << DAC_CR_CEN1_Pos;
pub const DAC_CR_CEN1: u32 = DAC_CR_CEN1_Msk;
pub const DAC_CR_HFSEL_Pos: u32 = 15;
pub const DAC_CR_HFSEL_Msk: u32 = 0x1 << DAC_CR_HFSEL_Pos;
pub const DAC_CR_HFSEL: u32 = DAC_CR_HFSEL_Msk;
pub const DAC_CR_EN2_Pos: u32 = 16;
pub const DAC_CR_EN2_Msk: u32 = 0x1 << DAC_CR_EN2_Pos;
pub const DAC_CR_EN2: u32 = DAC_CR_EN2_Msk;
pub const DAC_CR_TEN2_Pos: u32 = 17;
pub const DAC_CR_TEN2_Msk: u32 = 0x1 << DAC_CR_TEN2_Pos;
pub const DAC_CR_TEN2: u32 = DAC_CR_TEN2_Msk;
pub const DAC_CR_TSEL2_Pos: u32 = 18;
pub const DAC_CR_TSEL2_Msk: u32 = 0xF << DAC_CR_TSEL2_Pos;
pub const DAC_CR_TSEL2: u32 = DAC_CR_TSEL2_Msk;
pub const DAC_CR_TSEL2_0: u32 = 0x1 << DAC_CR_TSEL2_Pos;
pub const DAC_CR_TSEL2_1: u32 = 0x2 << DAC_CR_TSEL2_Pos;
pub const DAC_CR_TSEL2_2: u32 = 0x4 << DAC_CR_TSEL2_Pos;
pub const DAC_CR_TSEL2_3: u32 = 0x8 << DAC_CR_TSEL2_Pos;
pub const DAC_CR_WAVE2_Pos: u32 = 22;
pub const DAC_CR_WAVE2_Msk: u32 = 0x3 << DAC_CR_WAVE2_Pos;
pub const DAC_CR_WAVE2: u32 = DAC_CR_WAVE2_Msk;
pub const DAC_CR_WAVE2_0: u32 = 0x1 << DAC_CR_WAVE2_Pos;
pub const DAC_CR_WAVE2_1: u32 = 0x2 << DAC_CR_WAVE2_Pos;
pub const DAC_CR_MAMP2_Pos: u32 = 24;
pub const DAC_CR_MAMP2_Msk: u32 = 0xF << DAC_CR_MAMP2_Pos;
pub const DAC_CR_MAMP2: u32 = DAC_CR_MAMP2_Msk;
pub const DAC_CR_MAMP2_0: u32 = 0x1 << DAC_CR_MAMP2_Pos;
pub const DAC_CR_MAMP2_1: u32 = 0x2 << DAC_CR_MAMP2_Pos;
pub const DAC_CR_MAMP2_2: u32 = 0x4 << DAC_CR_MAMP2_Pos;
pub const DAC_CR_MAMP2_3: u32 = 0x8 << DAC_CR_MAMP2_Pos;
pub const DAC_CR_DMAEN2_Pos: u32 = 28;
pub const DAC_CR_DMAEN2_Msk: u32 = 0x1 << DAC_CR_DMAEN2_Pos;
pub const DAC_CR_DMAEN2: u32 = DAC_CR_DMAEN2_Msk;
pub const DAC_CR_DMAUDRIE2_Pos: u32 = 29;
pub const DAC_CR_DMAUDRIE2_Msk: u32 = 0x1 << DAC_CR_DMAUDRIE2_Pos;
pub const DAC_CR_DMAUDRIE2: u32 = DAC_CR_DMAUDRIE2_Msk;
pub const DAC_CR_CEN2_Pos: u32 = 30;
pub const DAC_CR_CEN2_Msk: u32 = 0x1 << DAC_CR_CEN2_Pos;
pub const DAC_CR_CEN2: u32 = DAC_CR_CEN2_Msk;
pub const DAC_SWTRIGR_SWTRIG1_Pos: u32 = 0;
pub const DAC_SWTRIGR_SWTRIG1_Msk: u32 = 0x1 << DAC_SWTRIGR_SWTRIG1_Pos;
pub const DAC_SWTRIGR_SWTRIG1: u32 = DAC_SWTRIGR_SWTRIG1_Msk;
pub const DAC_SWTRIGR_SWTRIG2_Pos: u32 = 1;
pub const DAC_SWTRIGR_SWTRIG2_Msk: u32 = 0x1 << DAC_SWTRIGR_SWTRIG2_Pos;
pub const DAC_SWTRIGR_SWTRIG2: u32 = DAC_SWTRIGR_SWTRIG2_Msk;
pub const DAC_SWTRIGR_SWTRIGB1_Pos: u32 = 16;
pub const DAC_SWTRIGR_SWTRIGB1_Msk: u32 = 0x1 << DAC_SWTRIGR_SWTRIGB1_Pos;
pub const DAC_SWTRIGR_SWTRIGB1: u32 = DAC_SWTRIGR_SWTRIGB1_Msk;
pub const DAC_SWTRIGR_SWTRIGB2_Pos: u32 = 17;
pub const DAC_SWTRIGR_SWTRIGB2_Msk: u32 = 0x1 << DAC_SWTRIGR_SWTRIGB2_Pos;
pub const DAC_SWTRIGR_SWTRIGB2: u32 = DAC_SWTRIGR_SWTRIGB2_Msk;
pub const DAC_DHR12R1_DACC1DHR_Pos: u32 = 0;
pub const DAC_DHR12R1_DACC1DHR_Msk: u32 = 0xFFF << DAC_DHR12R1_DACC1DHR_Pos;
pub const DAC_DHR12R1_DACC1DHR: u32 = DAC_DHR12R1_DACC1DHR_Msk;
pub const DAC_DHR12R1_DACC1DHRB_Pos: u32 = 16;
pub const DAC_DHR12R1_DACC1DHRB_Msk: u32 = 0xFFF << DAC_DHR12R1_DACC1DHRB_Pos;
pub const DAC_DHR12R1_DACC1DHRB: u32 = DAC_DHR12R1_DACC1DHRB_Msk;
pub const DAC_DHR12L1_DACC1DHR_Pos: u32 = 4;
pub const DAC_DHR12L1_DACC1DHR_Msk: u32 = 0xFFF << DAC_DHR12L1_DACC1DHR_Pos;
pub const DAC_DHR12L1_DACC1DHR: u32 = DAC_DHR12L1_DACC1DHR_Msk;
pub const DAC_DHR12L1_DACC1DHRB_Pos: u32 = 20;
pub const DAC_DHR12L1_DACC1DHRB_Msk: u32 = 0xFFF << DAC_DHR12L1_DACC1DHRB_Pos;
pub const DAC_DHR12L1_DACC1DHRB: u32 = DAC_DHR12L1_DACC1DHRB_Msk;
pub const DAC_DHR8R1_DACC1DHR_Pos: u32 = 0;
pub const DAC_DHR8R1_DACC1DHR_Msk: u32 = 0xFF << DAC_DHR8R1_DACC1DHR_Pos;
pub const DAC_DHR8R1_DACC1DHR: u32 = DAC_DHR8R1_DACC1DHR_Msk;
pub const DAC_DHR8R1_DACC1DHRB_Pos: u32 = 8;
pub const DAC_DHR8R1_DACC1DHRB_Msk: u32 = 0xFF << DAC_DHR8R1_DACC1DHRB_Pos;
pub const DAC_DHR8R1_DACC1DHRB: u32 = DAC_DHR8R1_DACC1DHRB_Msk;
pub const DAC_DHR12R2_DACC2DHR_Pos: u32 = 0;
pub const DAC_DHR12R2_DACC2DHR_Msk: u32 = 0xFFF << DAC_DHR12R2_DACC2DHR_Pos;
pub const DAC_DHR12R2_DACC2DHR: u32 = DAC_DHR12R2_DACC2DHR_Msk;
pub const DAC_DHR12R2_DACC2DHRB_Pos: u32 = 16;
pub const DAC_DHR12R2_DACC2DHRB_Msk: u32 = 0xFFF << DAC_DHR12R2_DACC2DHRB_Pos;
pub const DAC_DHR12R2_DACC2DHRB: u32 = DAC_DHR12R2_DACC2DHRB_Msk;
pub const DAC_DHR12L2_DACC2DHR_Pos: u32 = 4;
pub const DAC_DHR12L2_DACC2DHR_Msk: u32 = 0xFFF << DAC_DHR12L2_DACC2DHR_Pos;
pub const DAC_DHR12L2_DACC2DHR: u32 = DAC_DHR12L2_DACC2DHR_Msk;
pub const DAC_DHR12L2_DACC2DHRB_Pos: u32 = 20;
pub const DAC_DHR12L2_DACC2DHRB_Msk: u32 = 0xFFF << DAC_DHR12L2_DACC2DHRB_Pos;
pub const DAC_DHR12L2_DACC2DHRB: u32 = DAC_DHR12L2_DACC2DHRB_Msk;
pub const DAC_DHR8R2_DACC2DHR_Pos: u32 = 0;
pub const DAC_DHR8R2_DACC2DHR_Msk: u32 = 0xFF << DAC_DHR8R2_DACC2DHR_Pos;
pub const DAC_DHR8R2_DACC2DHR: u32 = DAC_DHR8R2_DACC2DHR_Msk;
pub const DAC_DHR8R2_DACC2DHRB_Pos: u32 = 8;
pub const DAC_DHR8R2_DACC2DHRB_Msk: u32 = 0xFF << DAC_DHR8R2_DACC2DHRB_Pos;
pub const DAC_DHR8R2_DACC2DHRB: u32 = DAC_DHR8R2_DACC2DHRB_Msk;
pub const DAC_DHR12RD_DACC1DHR_Pos: u32 = 0;
pub const DAC_DHR12RD_DACC1DHR_Msk: u32 = 0xFFF << DAC_DHR12RD_DACC1DHR_Pos;
pub const DAC_DHR12RD_DACC1DHR: u32 = DAC_DHR12RD_DACC1DHR_Msk;
pub const DAC_DHR12RD_DACC2DHR_Pos: u32 = 16;
pub const DAC_DHR12RD_DACC2DHR_Msk: u32 = 0xFFF << DAC_DHR12RD_DACC2DHR_Pos;
pub const DAC_DHR12RD_DACC2DHR: u32 = DAC_DHR12RD_DACC2DHR_Msk;
pub const DAC_DHR12LD_DACC1DHR_Pos: u32 = 4;
pub const DAC_DHR12LD_DACC1DHR_Msk: u32 = 0xFFF << DAC_DHR12LD_DACC1DHR_Pos;
pub const DAC_DHR12LD_DACC1DHR: u32 = DAC_DHR12LD_DACC1DHR_Msk;
pub const DAC_DHR12LD_DACC2DHR_Pos: u32 = 20;
pub const DAC_DHR12LD_DACC2DHR_Msk: u32 = 0xFFF << DAC_DHR12LD_DACC2DHR_Pos;
pub const DAC_DHR12LD_DACC2DHR: u32 = DAC_DHR12LD_DACC2DHR_Msk;
pub const DAC_DHR8RD_DACC1DHR_Pos: u32 = 0;
pub const DAC_DHR8RD_DACC1DHR_Msk: u32 = 0xFF << DAC_DHR8RD_DACC1DHR_Pos;
pub const DAC_DHR8RD_DACC1DHR: u32 = DAC_DHR8RD_DACC1DHR_Msk;
pub const DAC_DHR8RD_DACC2DHR_Pos: u32 = 8;
pub const DAC_DHR8RD_DACC2DHR_Msk: u32 = 0xFF << DAC_DHR8RD_DACC2DHR_Pos;
pub const DAC_DHR8RD_DACC2DHR: u32 = DAC_DHR8RD_DACC2DHR_Msk;
pub const DAC_DOR1_DACC1DOR_Pos: u32 = 0;
pub const DAC_DOR1_DACC1DOR_Msk: u32 = 0xFFF << DAC_DOR1_DACC1DOR_Pos;
pub const DAC_DOR1_DACC1DOR: u32 = DAC_DOR1_DACC1DOR_Msk;
pub const DAC_DOR1_DACC1DORB_Pos: u32 = 16;
pub const DAC_DOR1_DACC1DORB_Msk: u32 = 0xFFF << DAC_DOR1_DACC1DORB_Pos;
pub const DAC_DOR1_DACC1DORB: u32 = DAC_DOR1_DACC1DORB_Msk;
pub const DAC_DOR2_DACC2DOR_Pos: u32 = 0;
pub const DAC_DOR2_DACC2DOR_Msk: u32 = 0xFFF << DAC_DOR2_DACC2DOR_Pos;
pub const DAC_DOR2_DACC2DOR: u32 = DAC_DOR2_DACC2DOR_Msk;
pub const DAC_DOR2_DACC2DORB_Pos: u32 = 16;
pub const DAC_DOR2_DACC2DORB_Msk: u32 = 0xFFF << DAC_DOR2_DACC2DORB_Pos;
pub const DAC_DOR2_DACC2DORB: u32 = DAC_DOR2_DACC2DORB_Msk;
pub const DAC_SR_DAC1RDY_Pos: u32 = 11;
pub const DAC_SR_DAC1RDY_Msk: u32 = 0x1 << DAC_SR_DAC1RDY_Pos;
pub const DAC_SR_DAC1RDY: u32 = DAC_SR_DAC1RDY_Msk;
pub const DAC_SR_DORSTAT1_Pos: u32 = 12;
pub const DAC_SR_DORSTAT1_Msk: u32 = 0x1 << DAC_SR_DORSTAT1_Pos;
pub const DAC_SR_DORSTAT1: u32 = DAC_SR_DORSTAT1_Msk;
pub const DAC_SR_DMAUDR1_Pos: u32 = 13;
pub const DAC_SR_DMAUDR1_Msk: u32 = 0x1 << DAC_SR_DMAUDR1_Pos;
pub const DAC_SR_DMAUDR1: u32 = DAC_SR_DMAUDR1_Msk;
pub const DAC_SR_CAL_FLAG1_Pos: u32 = 14;
pub const DAC_SR_CAL_FLAG1_Msk: u32 = 0x1 << DAC_SR_CAL_FLAG1_Pos;
pub const DAC_SR_CAL_FLAG1: u32 = DAC_SR_CAL_FLAG1_Msk;
pub const DAC_SR_BWST1_Pos: u32 = 15;
pub const DAC_SR_BWST1_Msk: u32 = 0x1 << DAC_SR_BWST1_Pos;
pub const DAC_SR_BWST1: u32 = DAC_SR_BWST1_Msk;
pub const DAC_SR_DAC2RDY_Pos: u32 = 27;
pub const DAC_SR_DAC2RDY_Msk: u32 = 0x1 << DAC_SR_DAC2RDY_Pos;
pub const DAC_SR_DAC2RDY: u32 = DAC_SR_DAC2RDY_Msk;
pub const DAC_SR_DORSTAT2_Pos: u32 = 28;
pub const DAC_SR_DORSTAT2_Msk: u32 = 0x1 << DAC_SR_DORSTAT2_Pos;
pub const DAC_SR_DORSTAT2: u32 = DAC_SR_DORSTAT2_Msk;
pub const DAC_SR_DMAUDR2_Pos: u32 = 29;
pub const DAC_SR_DMAUDR2_Msk: u32 = 0x1 << DAC_SR_DMAUDR2_Pos;
pub const DAC_SR_DMAUDR2: u32 = DAC_SR_DMAUDR2_Msk;
pub const DAC_SR_CAL_FLAG2_Pos: u32 = 30;
pub const DAC_SR_CAL_FLAG2_Msk: u32 = 0x1 << DAC_SR_CAL_FLAG2_Pos;
pub const DAC_SR_CAL_FLAG2: u32 = DAC_SR_CAL_FLAG2_Msk;
pub const DAC_SR_BWST2_Pos: u32 = 31;
pub const DAC_SR_BWST2_Msk: u32 = 0x1 << DAC_SR_BWST2_Pos;
pub const DAC_SR_BWST2: u32 = DAC_SR_BWST2_Msk;
pub const DAC_CCR_OTRIM1_Pos: u32 = 0;
pub const DAC_CCR_OTRIM1_Msk: u32 = 0x1F << DAC_CCR_OTRIM1_Pos;
pub const DAC_CCR_OTRIM1: u32 = DAC_CCR_OTRIM1_Msk;
pub const DAC_CCR_OTRIM2_Pos: u32 = 16;
pub const DAC_CCR_OTRIM2_Msk: u32 = 0x1F << DAC_CCR_OTRIM2_Pos;
pub const DAC_CCR_OTRIM2: u32 = DAC_CCR_OTRIM2_Msk;
pub const DAC_MCR_MODE1_Pos: u32 = 0;
pub const DAC_MCR_MODE1_Msk: u32 = 0x7 << DAC_MCR_MODE1_Pos;
pub const DAC_MCR_MODE1: u32 = DAC_MCR_MODE1_Msk;
pub const DAC_MCR_MODE1_0: u32 = 0x1 << DAC_MCR_MODE1_Pos;
pub const DAC_MCR_MODE1_1: u32 = 0x2 << DAC_MCR_MODE1_Pos;
pub const DAC_MCR_MODE1_2: u32 = 0x4 << DAC_MCR_MODE1_Pos;
pub const DAC_MCR_DMADOUBLE1_Pos: u32 = 8;
pub const DAC_MCR_DMADOUBLE1_Msk: u32 = 0x1 << DAC_MCR_DMADOUBLE1_Pos;
pub const DAC_MCR_DMADOUBLE1: u32 = DAC_MCR_DMADOUBLE1_Msk;
pub const DAC_MCR_SINFORMAT1_Pos: u32 = 9;
pub const DAC_MCR_SINFORMAT1_Msk: u32 = 0x1 << DAC_MCR_SINFORMAT1_Pos;
pub const DAC_MCR_SINFORMAT1: u32 = DAC_MCR_SINFORMAT1_Msk;
pub const DAC_MCR_HFSEL_Pos: u32 = 14;
pub const DAC_MCR_HFSEL_Msk: u32 = 0x3 << DAC_MCR_HFSEL_Pos;
pub const DAC_MCR_HFSEL: u32 = DAC_MCR_HFSEL_Msk;
pub const DAC_MCR_HFSEL_0: u32 = 0x1 << DAC_MCR_HFSEL_Pos;
pub const DAC_MCR_HFSEL_1: u32 = 0x2 << DAC_MCR_HFSEL_Pos;
pub const DAC_MCR_MODE2_Pos: u32 = 16;
pub const DAC_MCR_MODE2_Msk: u32 = 0x7 << DAC_MCR_MODE2_Pos;
pub const DAC_MCR_MODE2: u32 = DAC_MCR_MODE2_Msk;
pub const DAC_MCR_MODE2_0: u32 = 0x1 << DAC_MCR_MODE2_Pos;
pub const DAC_MCR_MODE2_1: u32 = 0x2 << DAC_MCR_MODE2_Pos;
pub const DAC_MCR_MODE2_2: u32 = 0x4 << DAC_MCR_MODE2_Pos;
pub const DAC_MCR_DMADOUBLE2_Pos: u32 = 24;
pub const DAC_MCR_DMADOUBLE2_Msk: u32 = 0x1 << DAC_MCR_DMADOUBLE2_Pos;
pub const DAC_MCR_DMADOUBLE2: u32 = DAC_MCR_DMADOUBLE2_Msk;
pub const DAC_MCR_SINFORMAT2_Pos: u32 = 25;
pub const DAC_MCR_SINFORMAT2_Msk: u32 = 0x1 << DAC_MCR_SINFORMAT2_Pos;
pub const DAC_MCR_SINFORMAT2: u32 = DAC_MCR_SINFORMAT2_Msk;
pub const DAC_SHSR1_TSAMPLE1_Pos: u32 = 0;
pub const DAC_SHSR1_TSAMPLE1_Msk: u32 = 0x3FF << DAC_SHSR1_TSAMPLE1_Pos;
pub const DAC_SHSR1_TSAMPLE1: u32 = DAC_SHSR1_TSAMPLE1_Msk;
pub const DAC_SHSR2_TSAMPLE2_Pos: u32 = 0;
pub const DAC_SHSR2_TSAMPLE2_Msk: u32 = 0x3FF << DAC_SHSR2_TSAMPLE2_Pos;
pub const DAC_SHSR2_TSAMPLE2: u32 = DAC_SHSR2_TSAMPLE2_Msk;
pub const DAC_SHHR_THOLD1_Pos: u32 = 0;
pub const DAC_SHHR_THOLD1_Msk: u32 = 0x3FF << DAC_SHHR_THOLD1_Pos;
pub const DAC_SHHR_THOLD1: u32 = DAC_SHHR_THOLD1_Msk;
pub const DAC_SHHR_THOLD2_Pos: u32 = 16;
pub const DAC_SHHR_THOLD2_Msk: u32 = 0x3FF << DAC_SHHR_THOLD2_Pos;
pub const DAC_SHHR_THOLD2: u32 = DAC_SHHR_THOLD2_Msk;
pub const DAC_SHRR_TREFRESH1_Pos: u32 = 0;
pub const DAC_SHRR_TREFRESH1_Msk: u32 = 0xFF << DAC_SHRR_TREFRESH1_Pos;
pub const DAC_SHRR_TREFRESH1: u32 = DAC_SHRR_TREFRESH1_Msk;
pub const DAC_SHRR_TREFRESH2_Pos: u32 = 16;
pub const DAC_SHRR_TREFRESH2_Msk: u32 = 0xFF << DAC_SHRR_TREFRESH2_Pos;
pub const DAC_SHRR_TREFRESH2: u32 = DAC_SHRR_TREFRESH2_Msk;
pub const DAC_STR1_STRSTDATA1_Pos: u32 = 0;
pub const DAC_STR1_STRSTDATA1_Msk: u32 = 0xFFF << DAC_STR1_STRSTDATA1_Pos;
pub const DAC_STR1_STRSTDATA1: u32 = DAC_STR1_STRSTDATA1_Msk;
pub const DAC_STR1_STDIR1_Pos: u32 = 12;
pub const DAC_STR1_STDIR1_Msk: u32 = 0x1 << DAC_STR1_STDIR1_Pos;
pub const DAC_STR1_STDIR1: u32 = DAC_STR1_STDIR1_Msk;
pub const DAC_STR1_STINCDATA1_Pos: u32 = 16;
pub const DAC_STR1_STINCDATA1_Msk: u32 = 0xFFFF << DAC_STR1_STINCDATA1_Pos;
pub const DAC_STR1_STINCDATA1: u32 = DAC_STR1_STINCDATA1_Msk;
pub const DAC_STR2_STRSTDATA2_Pos: u32 = 0;
pub const DAC_STR2_STRSTDATA2_Msk: u32 = 0xFFF << DAC_STR2_STRSTDATA2_Pos;
pub const DAC_STR2_STRSTDATA2: u32 = DAC_STR2_STRSTDATA2_Msk;
pub const DAC_STR2_STDIR2_Pos: u32 = 12;
pub const DAC_STR2_STDIR2_Msk: u32 = 0x1 << DAC_STR2_STDIR2_Pos;
pub const DAC_STR2_STDIR2: u32 = DAC_STR2_STDIR2_Msk;
pub const DAC_STR2_STINCDATA2_Pos: u32 = 16;
pub const DAC_STR2_STINCDATA2_Msk: u32 = 0xFFFF << DAC_STR2_STINCDATA2_Pos;
pub const DAC_STR2_STINCDATA2: u32 = DAC_STR2_STINCDATA2_Msk;
pub const DAC_STMODR_STRSTTRIGSEL1_Pos: u32 = 0;
pub const DAC_STMODR_STRSTTRIGSEL1_Msk: u32 = 0xF << DAC_STMODR_STRSTTRIGSEL1_Pos;
pub const DAC_STMODR_STRSTTRIGSEL1: u32 = DAC_STMODR_STRSTTRIGSEL1_Msk;
pub const DAC_STMODR_STRSTTRIGSEL1_0: u32 = 0x1 << DAC_STMODR_STRSTTRIGSEL1_Pos;
pub const DAC_STMODR_STRSTTRIGSEL1_1: u32 = 0x2 << DAC_STMODR_STRSTTRIGSEL1_Pos;
pub const DAC_STMODR_STRSTTRIGSEL1_2: u32 = 0x4 << DAC_STMODR_STRSTTRIGSEL1_Pos;
pub const DAC_STMODR_STRSTTRIGSEL1_3: u32 = 0x8 << DAC_STMODR_STRSTTRIGSEL1_Pos;
pub const DAC_STMODR_STINCTRIGSEL1_Pos: u32 = 8;
pub const DAC_STMODR_STINCTRIGSEL1_Msk: u32 = 0xF << DAC_STMODR_STINCTRIGSEL1_Pos;
pub const DAC_STMODR_STINCTRIGSEL1: u32 = DAC_STMODR_STINCTRIGSEL1_Msk;
pub const DAC_STMODR_STINCTRIGSEL1_0: u32 = 0x1 << DAC_STMODR_STINCTRIGSEL1_Pos;
pub const DAC_STMODR_STINCTRIGSEL1_1: u32 = 0x2 << DAC_STMODR_STINCTRIGSEL1_Pos;
pub const DAC_STMODR_STINCTRIGSEL1_2: u32 = 0x4 << DAC_STMODR_STINCTRIGSEL1_Pos;
pub const DAC_STMODR_STINCTRIGSEL1_3: u32 = 0x8 << DAC_STMODR_STINCTRIGSEL1_Pos;
pub const DAC_STMODR_STRSTTRIGSEL2_Pos: u32 = 16;
pub const DAC_STMODR_STRSTTRIGSEL2_Msk: u32 = 0xF << DAC_STMODR_STRSTTRIGSEL2_Pos;
pub const DAC_STMODR_STRSTTRIGSEL2: u32 = DAC_STMODR_STRSTTRIGSEL2_Msk;
pub const DAC_STMODR_STRSTTRIGSEL2_0: u32 = 0x1 << DAC_STMODR_STRSTTRIGSEL2_Pos;
pub const DAC_STMODR_STRSTTRIGSEL2_1: u32 = 0x2 << DAC_STMODR_STRSTTRIGSEL2_Pos;
pub const DAC_STMODR_STRSTTRIGSEL2_2: u32 = 0x4 << DAC_STMODR_STRSTTRIGSEL2_Pos;
pub const DAC_STMODR_STRSTTRIGSEL2_3: u32 = 0x8 << DAC_STMODR_STRSTTRIGSEL2_Pos;
pub const DAC_STMODR_STINCTRIGSEL2_Pos: u32 = 24;
pub const DAC_STMODR_STINCTRIGSEL2_Msk: u32 = 0xF << DAC_STMODR_STINCTRIGSEL2_Pos;
pub const DAC_STMODR_STINCTRIGSEL2: u32 = DAC_STMODR_STINCTRIGSEL2_Msk;
pub const DAC_STMODR_STINCTRIGSEL2_0: u32 = 0x1 << DAC_STMODR_STINCTRIGSEL2_Pos;
pub const DAC_STMODR_STINCTRIGSEL2_1: u32 = 0x2 << DAC_STMODR_STINCTRIGSEL2_Pos;
pub const DAC_STMODR_STINCTRIGSEL2_2: u32 = 0x4 << DAC_STMODR_STINCTRIGSEL2_Pos;
pub const DAC_STMODR_STINCTRIGSEL2_3: u32 = 0x8 << DAC_STMODR_STINCTRIGSEL2_Pos;
pub const DBGMCU_IDCODE_DEV_ID_Pos: u32 = 0;
pub const DBGMCU_IDCODE_DEV_ID_Msk: u32 = 0xFFF << DBGMCU_IDCODE_DEV_ID_Pos;
pub const DBGMCU_IDCODE_DEV_ID: u32 = DBGMCU_IDCODE_DEV_ID_Msk;
pub const DBGMCU_IDCODE_REV_ID_Pos: u32 = 16;
pub const DBGMCU_IDCODE_REV_ID_Msk: u32 = 0xFFFF << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID: u32 = DBGMCU_IDCODE_REV_ID_Msk;
pub const DBGMCU_CR_DBG_SLEEP_Pos: u32 = 0;
pub const DBGMCU_CR_DBG_SLEEP_Msk: u32 = 0x1 << DBGMCU_CR_DBG_SLEEP_Pos;
pub const DBGMCU_CR_DBG_SLEEP: u32 = DBGMCU_CR_DBG_SLEEP_Msk;
pub const DBGMCU_CR_DBG_STOP_Pos: u32 = 1;
pub const DBGMCU_CR_DBG_STOP_Msk: u32 = 0x1 << DBGMCU_CR_DBG_STOP_Pos;
pub const DBGMCU_CR_DBG_STOP: u32 = DBGMCU_CR_DBG_STOP_Msk;
pub const DBGMCU_CR_DBG_STANDBY_Pos: u32 = 2;
pub const DBGMCU_CR_DBG_STANDBY_Msk: u32 = 0x1 << DBGMCU_CR_DBG_STANDBY_Pos;
pub const DBGMCU_CR_DBG_STANDBY: u32 = DBGMCU_CR_DBG_STANDBY_Msk;
pub const DBGMCU_CR_TRACE_IOEN_Pos: u32 = 5;
pub const DBGMCU_CR_TRACE_IOEN_Msk: u32 = 0x1 << DBGMCU_CR_TRACE_IOEN_Pos;
pub const DBGMCU_CR_TRACE_IOEN: u32 = DBGMCU_CR_TRACE_IOEN_Msk;
pub const DBGMCU_CR_TRACE_MODE_Pos: u32 = 6;
pub const DBGMCU_CR_TRACE_MODE_Msk: u32 = 0x3 << DBGMCU_CR_TRACE_MODE_Pos;
pub const DBGMCU_CR_TRACE_MODE: u32 = DBGMCU_CR_TRACE_MODE_Msk;
pub const DBGMCU_CR_TRACE_MODE_0: u32 = 0x1 << DBGMCU_CR_TRACE_MODE_Pos;
pub const DBGMCU_CR_TRACE_MODE_1: u32 = 0x2 << DBGMCU_CR_TRACE_MODE_Pos;
pub const DBGMCU_APB1FZR1_DBG_TIM2_STOP_Pos: u32 = 0;
pub const DBGMCU_APB1FZR1_DBG_TIM2_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_TIM2_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_TIM2_STOP: u32 = DBGMCU_APB1FZR1_DBG_TIM2_STOP_Msk;
pub const DBGMCU_APB1FZR1_DBG_TIM3_STOP_Pos: u32 = 1;
pub const DBGMCU_APB1FZR1_DBG_TIM3_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_TIM3_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_TIM3_STOP: u32 = DBGMCU_APB1FZR1_DBG_TIM3_STOP_Msk;
pub const DBGMCU_APB1FZR1_DBG_TIM4_STOP_Pos: u32 = 2;
pub const DBGMCU_APB1FZR1_DBG_TIM4_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_TIM4_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_TIM4_STOP: u32 = DBGMCU_APB1FZR1_DBG_TIM4_STOP_Msk;
pub const DBGMCU_APB1FZR1_DBG_TIM6_STOP_Pos: u32 = 4;
pub const DBGMCU_APB1FZR1_DBG_TIM6_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_TIM6_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_TIM6_STOP: u32 = DBGMCU_APB1FZR1_DBG_TIM6_STOP_Msk;
pub const DBGMCU_APB1FZR1_DBG_TIM7_STOP_Pos: u32 = 5;
pub const DBGMCU_APB1FZR1_DBG_TIM7_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_TIM7_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_TIM7_STOP: u32 = DBGMCU_APB1FZR1_DBG_TIM7_STOP_Msk;
pub const DBGMCU_APB1FZR1_DBG_RTC_STOP_Pos: u32 = 10;
pub const DBGMCU_APB1FZR1_DBG_RTC_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_RTC_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_RTC_STOP: u32 = DBGMCU_APB1FZR1_DBG_RTC_STOP_Msk;
pub const DBGMCU_APB1FZR1_DBG_WWDG_STOP_Pos: u32 = 11;
pub const DBGMCU_APB1FZR1_DBG_WWDG_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_WWDG_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_WWDG_STOP: u32 = DBGMCU_APB1FZR1_DBG_WWDG_STOP_Msk;
pub const DBGMCU_APB1FZR1_DBG_IWDG_STOP_Pos: u32 = 12;
pub const DBGMCU_APB1FZR1_DBG_IWDG_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_IWDG_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_IWDG_STOP: u32 = DBGMCU_APB1FZR1_DBG_IWDG_STOP_Msk;
pub const DBGMCU_APB1FZR1_DBG_I2C1_STOP_Pos: u32 = 21;
pub const DBGMCU_APB1FZR1_DBG_I2C1_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_I2C1_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_I2C1_STOP: u32 = DBGMCU_APB1FZR1_DBG_I2C1_STOP_Msk;
pub const DBGMCU_APB1FZR1_DBG_I2C2_STOP_Pos: u32 = 22;
pub const DBGMCU_APB1FZR1_DBG_I2C2_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_I2C2_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_I2C2_STOP: u32 = DBGMCU_APB1FZR1_DBG_I2C2_STOP_Msk;
pub const DBGMCU_APB1FZR1_DBG_I2C3_STOP_Pos: u32 = 30;
pub const DBGMCU_APB1FZR1_DBG_I2C3_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_I2C3_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_I2C3_STOP: u32 = DBGMCU_APB1FZR1_DBG_I2C3_STOP_Msk;
pub const DBGMCU_APB1FZR1_DBG_LPTIM1_STOP_Pos: u32 = 31;
pub const DBGMCU_APB1FZR1_DBG_LPTIM1_STOP_Msk: u32 = 0x1 << DBGMCU_APB1FZR1_DBG_LPTIM1_STOP_Pos;
pub const DBGMCU_APB1FZR1_DBG_LPTIM1_STOP: u32 = DBGMCU_APB1FZR1_DBG_LPTIM1_STOP_Msk;
pub const DBGMCU_APB2FZ_DBG_TIM1_STOP_Pos: u32 = 11;
pub const DBGMCU_APB2FZ_DBG_TIM1_STOP_Msk: u32 = 0x1 << DBGMCU_APB2FZ_DBG_TIM1_STOP_Pos;
pub const DBGMCU_APB2FZ_DBG_TIM1_STOP: u32 = DBGMCU_APB2FZ_DBG_TIM1_STOP_Msk;
pub const DBGMCU_APB2FZ_DBG_TIM8_STOP_Pos: u32 = 13;
pub const DBGMCU_APB2FZ_DBG_TIM8_STOP_Msk: u32 = 0x1 << DBGMCU_APB2FZ_DBG_TIM8_STOP_Pos;
pub const DBGMCU_APB2FZ_DBG_TIM8_STOP: u32 = DBGMCU_APB2FZ_DBG_TIM8_STOP_Msk;
pub const DBGMCU_APB2FZ_DBG_TIM15_STOP_Pos: u32 = 16;
pub const DBGMCU_APB2FZ_DBG_TIM15_STOP_Msk: u32 = 0x1 << DBGMCU_APB2FZ_DBG_TIM15_STOP_Pos;
pub const DBGMCU_APB2FZ_DBG_TIM15_STOP: u32 = DBGMCU_APB2FZ_DBG_TIM15_STOP_Msk;
pub const DBGMCU_APB2FZ_DBG_TIM16_STOP_Pos: u32 = 17;
pub const DBGMCU_APB2FZ_DBG_TIM16_STOP_Msk: u32 = 0x1 << DBGMCU_APB2FZ_DBG_TIM16_STOP_Pos;
pub const DBGMCU_APB2FZ_DBG_TIM16_STOP: u32 = DBGMCU_APB2FZ_DBG_TIM16_STOP_Msk;
pub const DBGMCU_APB2FZ_DBG_TIM17_STOP_Pos: u32 = 18;
pub const DBGMCU_APB2FZ_DBG_TIM17_STOP_Msk: u32 = 0x1 << DBGMCU_APB2FZ_DBG_TIM17_STOP_Pos;
pub const DBGMCU_APB2FZ_DBG_TIM17_STOP: u32 = DBGMCU_APB2FZ_DBG_TIM17_STOP_Msk;
pub const DBGMCU_APB2FZ_DBG_TIM20_STOP_Pos: u32 = 20;
pub const DBGMCU_APB2FZ_DBG_TIM20_STOP_Msk: u32 = 0x1 << DBGMCU_APB2FZ_DBG_TIM20_STOP_Pos;
pub const DBGMCU_APB2FZ_DBG_TIM20_STOP: u32 = DBGMCU_APB2FZ_DBG_TIM20_STOP_Msk;
pub const DMA_ISR_GIF1_Pos: u32 = 0;
pub const DMA_ISR_GIF1_Msk: u32 = 0x1 << DMA_ISR_GIF1_Pos;
pub const DMA_ISR_GIF1: u32 = DMA_ISR_GIF1_Msk;
pub const DMA_ISR_TCIF1_Pos: u32 = 1;
pub const DMA_ISR_TCIF1_Msk: u32 = 0x1 << DMA_ISR_TCIF1_Pos;
pub const DMA_ISR_TCIF1: u32 = DMA_ISR_TCIF1_Msk;
pub const DMA_ISR_HTIF1_Pos: u32 = 2;
pub const DMA_ISR_HTIF1_Msk: u32 = 0x1 << DMA_ISR_HTIF1_Pos;
pub const DMA_ISR_HTIF1: u32 = DMA_ISR_HTIF1_Msk;
pub const DMA_ISR_TEIF1_Pos: u32 = 3;
pub const DMA_ISR_TEIF1_Msk: u32 = 0x1 << DMA_ISR_TEIF1_Pos;
pub const DMA_ISR_TEIF1: u32 = DMA_ISR_TEIF1_Msk;
pub const DMA_ISR_GIF2_Pos: u32 = 4;
pub const DMA_ISR_GIF2_Msk: u32 = 0x1 << DMA_ISR_GIF2_Pos;
pub const DMA_ISR_GIF2: u32 = DMA_ISR_GIF2_Msk;
pub const DMA_ISR_TCIF2_Pos: u32 = 5;
pub const DMA_ISR_TCIF2_Msk: u32 = 0x1 << DMA_ISR_TCIF2_Pos;
pub const DMA_ISR_TCIF2: u32 = DMA_ISR_TCIF2_Msk;
pub const DMA_ISR_HTIF2_Pos: u32 = 6;
pub const DMA_ISR_HTIF2_Msk: u32 = 0x1 << DMA_ISR_HTIF2_Pos;
pub const DMA_ISR_HTIF2: u32 = DMA_ISR_HTIF2_Msk;
pub const DMA_ISR_TEIF2_Pos: u32 = 7;
pub const DMA_ISR_TEIF2_Msk: u32 = 0x1 << DMA_ISR_TEIF2_Pos;
pub const DMA_ISR_TEIF2: u32 = DMA_ISR_TEIF2_Msk;
pub const DMA_ISR_GIF3_Pos: u32 = 8;
pub const DMA_ISR_GIF3_Msk: u32 = 0x1 << DMA_ISR_GIF3_Pos;
pub const DMA_ISR_GIF3: u32 = DMA_ISR_GIF3_Msk;
pub const DMA_ISR_TCIF3_Pos: u32 = 9;
pub const DMA_ISR_TCIF3_Msk: u32 = 0x1 << DMA_ISR_TCIF3_Pos;
pub const DMA_ISR_TCIF3: u32 = DMA_ISR_TCIF3_Msk;
pub const DMA_ISR_HTIF3_Pos: u32 = 10;
pub const DMA_ISR_HTIF3_Msk: u32 = 0x1 << DMA_ISR_HTIF3_Pos;
pub const DMA_ISR_HTIF3: u32 = DMA_ISR_HTIF3_Msk;
pub const DMA_ISR_TEIF3_Pos: u32 = 11;
pub const DMA_ISR_TEIF3_Msk: u32 = 0x1 << DMA_ISR_TEIF3_Pos;
pub const DMA_ISR_TEIF3: u32 = DMA_ISR_TEIF3_Msk;
pub const DMA_ISR_GIF4_Pos: u32 = 12;
pub const DMA_ISR_GIF4_Msk: u32 = 0x1 << DMA_ISR_GIF4_Pos;
pub const DMA_ISR_GIF4: u32 = DMA_ISR_GIF4_Msk;
pub const DMA_ISR_TCIF4_Pos: u32 = 13;
pub const DMA_ISR_TCIF4_Msk: u32 = 0x1 << DMA_ISR_TCIF4_Pos;
pub const DMA_ISR_TCIF4: u32 = DMA_ISR_TCIF4_Msk;
pub const DMA_ISR_HTIF4_Pos: u32 = 14;
pub const DMA_ISR_HTIF4_Msk: u32 = 0x1 << DMA_ISR_HTIF4_Pos;
pub const DMA_ISR_HTIF4: u32 = DMA_ISR_HTIF4_Msk;
pub const DMA_ISR_TEIF4_Pos: u32 = 15;
pub const DMA_ISR_TEIF4_Msk: u32 = 0x1 << DMA_ISR_TEIF4_Pos;
pub const DMA_ISR_TEIF4: u32 = DMA_ISR_TEIF4_Msk;
pub const DMA_ISR_GIF5_Pos: u32 = 16;
pub const DMA_ISR_GIF5_Msk: u32 = 0x1 << DMA_ISR_GIF5_Pos;
pub const DMA_ISR_GIF5: u32 = DMA_ISR_GIF5_Msk;
pub const DMA_ISR_TCIF5_Pos: u32 = 17;
pub const DMA_ISR_TCIF5_Msk: u32 = 0x1 << DMA_ISR_TCIF5_Pos;
pub const DMA_ISR_TCIF5: u32 = DMA_ISR_TCIF5_Msk;
pub const DMA_ISR_HTIF5_Pos: u32 = 18;
pub const DMA_ISR_HTIF5_Msk: u32 = 0x1 << DMA_ISR_HTIF5_Pos;
pub const DMA_ISR_HTIF5: u32 = DMA_ISR_HTIF5_Msk;
pub const DMA_ISR_TEIF5_Pos: u32 = 19;
pub const DMA_ISR_TEIF5_Msk: u32 = 0x1 << DMA_ISR_TEIF5_Pos;
pub const DMA_ISR_TEIF5: u32 = DMA_ISR_TEIF5_Msk;
pub const DMA_ISR_GIF6_Pos: u32 = 20;
pub const DMA_ISR_GIF6_Msk: u32 = 0x1 << DMA_ISR_GIF6_Pos;
pub const DMA_ISR_GIF6: u32 = DMA_ISR_GIF6_Msk;
pub const DMA_ISR_TCIF6_Pos: u32 = 21;
pub const DMA_ISR_TCIF6_Msk: u32 = 0x1 << DMA_ISR_TCIF6_Pos;
pub const DMA_ISR_TCIF6: u32 = DMA_ISR_TCIF6_Msk;
pub const DMA_ISR_HTIF6_Pos: u32 = 22;
pub const DMA_ISR_HTIF6_Msk: u32 = 0x1 << DMA_ISR_HTIF6_Pos;
pub const DMA_ISR_HTIF6: u32 = DMA_ISR_HTIF6_Msk;
pub const DMA_ISR_TEIF6_Pos: u32 = 23;
pub const DMA_ISR_TEIF6_Msk: u32 = 0x1 << DMA_ISR_TEIF6_Pos;
pub const DMA_ISR_TEIF6: u32 = DMA_ISR_TEIF6_Msk;
pub const DMA_ISR_GIF7_Pos: u32 = 24;
pub const DMA_ISR_GIF7_Msk: u32 = 0x1 << DMA_ISR_GIF7_Pos;
pub const DMA_ISR_GIF7: u32 = DMA_ISR_GIF7_Msk;
pub const DMA_ISR_TCIF7_Pos: u32 = 25;
pub const DMA_ISR_TCIF7_Msk: u32 = 0x1 << DMA_ISR_TCIF7_Pos;
pub const DMA_ISR_TCIF7: u32 = DMA_ISR_TCIF7_Msk;
pub const DMA_ISR_HTIF7_Pos: u32 = 26;
pub const DMA_ISR_HTIF7_Msk: u32 = 0x1 << DMA_ISR_HTIF7_Pos;
pub const DMA_ISR_HTIF7: u32 = DMA_ISR_HTIF7_Msk;
pub const DMA_ISR_TEIF7_Pos: u32 = 27;
pub const DMA_ISR_TEIF7_Msk: u32 = 0x1 << DMA_ISR_TEIF7_Pos;
pub const DMA_ISR_TEIF7: u32 = DMA_ISR_TEIF7_Msk;
pub const DMA_ISR_GIF8_Pos: u32 = 28;
pub const DMA_ISR_GIF8_Msk: u32 = 0x1 << DMA_ISR_GIF8_Pos;
pub const DMA_ISR_GIF8: u32 = DMA_ISR_GIF8_Msk;
pub const DMA_ISR_TCIF8_Pos: u32 = 29;
pub const DMA_ISR_TCIF8_Msk: u32 = 0x1 << DMA_ISR_TCIF8_Pos;
pub const DMA_ISR_TCIF8: u32 = DMA_ISR_TCIF8_Msk;
pub const DMA_ISR_HTIF8_Pos: u32 = 30;
pub const DMA_ISR_HTIF8_Msk: u32 = 0x1 << DMA_ISR_HTIF8_Pos;
pub const DMA_ISR_HTIF8: u32 = DMA_ISR_HTIF8_Msk;
pub const DMA_ISR_TEIF8_Pos: u32 = 31;
pub const DMA_ISR_TEIF8_Msk: u32 = 0x1 << DMA_ISR_TEIF8_Pos;
pub const DMA_ISR_TEIF8: u32 = DMA_ISR_TEIF8_Msk;
pub const DMA_IFCR_CGIF1_Pos: u32 = 0;
pub const DMA_IFCR_CGIF1_Msk: u32 = 0x1 << DMA_IFCR_CGIF1_Pos;
pub const DMA_IFCR_CGIF1: u32 = DMA_IFCR_CGIF1_Msk;
pub const DMA_IFCR_CTCIF1_Pos: u32 = 1;
pub const DMA_IFCR_CTCIF1_Msk: u32 = 0x1 << DMA_IFCR_CTCIF1_Pos;
pub const DMA_IFCR_CTCIF1: u32 = DMA_IFCR_CTCIF1_Msk;
pub const DMA_IFCR_CHTIF1_Pos: u32 = 2;
pub const DMA_IFCR_CHTIF1_Msk: u32 = 0x1 << DMA_IFCR_CHTIF1_Pos;
pub const DMA_IFCR_CHTIF1: u32 = DMA_IFCR_CHTIF1_Msk;
pub const DMA_IFCR_CTEIF1_Pos: u32 = 3;
pub const DMA_IFCR_CTEIF1_Msk: u32 = 0x1 << DMA_IFCR_CTEIF1_Pos;
pub const DMA_IFCR_CTEIF1: u32 = DMA_IFCR_CTEIF1_Msk;
pub const DMA_IFCR_CGIF2_Pos: u32 = 4;
pub const DMA_IFCR_CGIF2_Msk: u32 = 0x1 << DMA_IFCR_CGIF2_Pos;
pub const DMA_IFCR_CGIF2: u32 = DMA_IFCR_CGIF2_Msk;
pub const DMA_IFCR_CTCIF2_Pos: u32 = 5;
pub const DMA_IFCR_CTCIF2_Msk: u32 = 0x1 << DMA_IFCR_CTCIF2_Pos;
pub const DMA_IFCR_CTCIF2: u32 = DMA_IFCR_CTCIF2_Msk;
pub const DMA_IFCR_CHTIF2_Pos: u32 = 6;
pub const DMA_IFCR_CHTIF2_Msk: u32 = 0x1 << DMA_IFCR_CHTIF2_Pos;
pub const DMA_IFCR_CHTIF2: u32 = DMA_IFCR_CHTIF2_Msk;
pub const DMA_IFCR_CTEIF2_Pos: u32 = 7;
pub const DMA_IFCR_CTEIF2_Msk: u32 = 0x1 << DMA_IFCR_CTEIF2_Pos;
pub const DMA_IFCR_CTEIF2: u32 = DMA_IFCR_CTEIF2_Msk;
pub const DMA_IFCR_CGIF3_Pos: u32 = 8;
pub const DMA_IFCR_CGIF3_Msk: u32 = 0x1 << DMA_IFCR_CGIF3_Pos;
pub const DMA_IFCR_CGIF3: u32 = DMA_IFCR_CGIF3_Msk;
pub const DMA_IFCR_CTCIF3_Pos: u32 = 9;
pub const DMA_IFCR_CTCIF3_Msk: u32 = 0x1 << DMA_IFCR_CTCIF3_Pos;
pub const DMA_IFCR_CTCIF3: u32 = DMA_IFCR_CTCIF3_Msk;
pub const DMA_IFCR_CHTIF3_Pos: u32 = 10;
pub const DMA_IFCR_CHTIF3_Msk: u32 = 0x1 << DMA_IFCR_CHTIF3_Pos;
pub const DMA_IFCR_CHTIF3: u32 = DMA_IFCR_CHTIF3_Msk;
pub const DMA_IFCR_CTEIF3_Pos: u32 = 11;
pub const DMA_IFCR_CTEIF3_Msk: u32 = 0x1 << DMA_IFCR_CTEIF3_Pos;
pub const DMA_IFCR_CTEIF3: u32 = DMA_IFCR_CTEIF3_Msk;
pub const DMA_IFCR_CGIF4_Pos: u32 = 12;
pub const DMA_IFCR_CGIF4_Msk: u32 = 0x1 << DMA_IFCR_CGIF4_Pos;
pub const DMA_IFCR_CGIF4: u32 = DMA_IFCR_CGIF4_Msk;
pub const DMA_IFCR_CTCIF4_Pos: u32 = 13;
pub const DMA_IFCR_CTCIF4_Msk: u32 = 0x1 << DMA_IFCR_CTCIF4_Pos;
pub const DMA_IFCR_CTCIF4: u32 = DMA_IFCR_CTCIF4_Msk;
pub const DMA_IFCR_CHTIF4_Pos: u32 = 14;
pub const DMA_IFCR_CHTIF4_Msk: u32 = 0x1 << DMA_IFCR_CHTIF4_Pos;
pub const DMA_IFCR_CHTIF4: u32 = DMA_IFCR_CHTIF4_Msk;
pub const DMA_IFCR_CTEIF4_Pos: u32 = 15;
pub const DMA_IFCR_CTEIF4_Msk: u32 = 0x1 << DMA_IFCR_CTEIF4_Pos;
pub const DMA_IFCR_CTEIF4: u32 = DMA_IFCR_CTEIF4_Msk;
pub const DMA_IFCR_CGIF5_Pos: u32 = 16;
pub const DMA_IFCR_CGIF5_Msk: u32 = 0x1 << DMA_IFCR_CGIF5_Pos;
pub const DMA_IFCR_CGIF5: u32 = DMA_IFCR_CGIF5_Msk;
pub const DMA_IFCR_CTCIF5_Pos: u32 = 17;
pub const DMA_IFCR_CTCIF5_Msk: u32 = 0x1 << DMA_IFCR_CTCIF5_Pos;
pub const DMA_IFCR_CTCIF5: u32 = DMA_IFCR_CTCIF5_Msk;
pub const DMA_IFCR_CHTIF5_Pos: u32 = 18;
pub const DMA_IFCR_CHTIF5_Msk: u32 = 0x1 << DMA_IFCR_CHTIF5_Pos;
pub const DMA_IFCR_CHTIF5: u32 = DMA_IFCR_CHTIF5_Msk;
pub const DMA_IFCR_CTEIF5_Pos: u32 = 19;
pub const DMA_IFCR_CTEIF5_Msk: u32 = 0x1 << DMA_IFCR_CTEIF5_Pos;
pub const DMA_IFCR_CTEIF5: u32 = DMA_IFCR_CTEIF5_Msk;
pub const DMA_IFCR_CGIF6_Pos: u32 = 20;
pub const DMA_IFCR_CGIF6_Msk: u32 = 0x1 << DMA_IFCR_CGIF6_Pos;
pub const DMA_IFCR_CGIF6: u32 = DMA_IFCR_CGIF6_Msk;
pub const DMA_IFCR_CTCIF6_Pos: u32 = 21;
pub const DMA_IFCR_CTCIF6_Msk: u32 = 0x1 << DMA_IFCR_CTCIF6_Pos;
pub const DMA_IFCR_CTCIF6: u32 = DMA_IFCR_CTCIF6_Msk;
pub const DMA_IFCR_CHTIF6_Pos: u32 = 22;
pub const DMA_IFCR_CHTIF6_Msk: u32 = 0x1 << DMA_IFCR_CHTIF6_Pos;
pub const DMA_IFCR_CHTIF6: u32 = DMA_IFCR_CHTIF6_Msk;
pub const DMA_IFCR_CTEIF6_Pos: u32 = 23;
pub const DMA_IFCR_CTEIF6_Msk: u32 = 0x1 << DMA_IFCR_CTEIF6_Pos;
pub const DMA_IFCR_CTEIF6: u32 = DMA_IFCR_CTEIF6_Msk;
pub const DMA_IFCR_CGIF7_Pos: u32 = 24;
pub const DMA_IFCR_CGIF7_Msk: u32 = 0x1 << DMA_IFCR_CGIF7_Pos;
pub const DMA_IFCR_CGIF7: u32 = DMA_IFCR_CGIF7_Msk;
pub const DMA_IFCR_CTCIF7_Pos: u32 = 25;
pub const DMA_IFCR_CTCIF7_Msk: u32 = 0x1 << DMA_IFCR_CTCIF7_Pos;
pub const DMA_IFCR_CTCIF7: u32 = DMA_IFCR_CTCIF7_Msk;
pub const DMA_IFCR_CHTIF7_Pos: u32 = 26;
pub const DMA_IFCR_CHTIF7_Msk: u32 = 0x1 << DMA_IFCR_CHTIF7_Pos;
pub const DMA_IFCR_CHTIF7: u32 = DMA_IFCR_CHTIF7_Msk;
pub const DMA_IFCR_CTEIF7_Pos: u32 = 27;
pub const DMA_IFCR_CTEIF7_Msk: u32 = 0x1 << DMA_IFCR_CTEIF7_Pos;
pub const DMA_IFCR_CTEIF7: u32 = DMA_IFCR_CTEIF7_Msk;
pub const DMA_IFCR_CGIF8_Pos: u32 = 28;
pub const DMA_IFCR_CGIF8_Msk: u32 = 0x1 << DMA_IFCR_CGIF8_Pos;
pub const DMA_IFCR_CGIF8: u32 = DMA_IFCR_CGIF8_Msk;
pub const DMA_IFCR_CTCIF8_Pos: u32 = 29;
pub const DMA_IFCR_CTCIF8_Msk: u32 = 0x1 << DMA_IFCR_CTCIF8_Pos;
pub const DMA_IFCR_CTCIF8: u32 = DMA_IFCR_CTCIF8_Msk;
pub const DMA_IFCR_CHTIF8_Pos: u32 = 30;
pub const DMA_IFCR_CHTIF8_Msk: u32 = 0x1 << DMA_IFCR_CHTIF8_Pos;
pub const DMA_IFCR_CHTIF8: u32 = DMA_IFCR_CHTIF8_Msk;
pub const DMA_IFCR_CTEIF8_Pos: u32 = 31;
pub const DMA_IFCR_CTEIF8_Msk: u32 = 0x1 << DMA_IFCR_CTEIF8_Pos;
pub const DMA_IFCR_CTEIF8: u32 = DMA_IFCR_CTEIF8_Msk;
pub const DMA_CCR_EN_Pos: u32 = 0;
pub const DMA_CCR_EN_Msk: u32 = 0x1 << DMA_CCR_EN_Pos;
pub const DMA_CCR_EN: u32 = DMA_CCR_EN_Msk;
pub const DMA_CCR_TCIE_Pos: u32 = 1;
pub const DMA_CCR_TCIE_Msk: u32 = 0x1 << DMA_CCR_TCIE_Pos;
pub const DMA_CCR_TCIE: u32 = DMA_CCR_TCIE_Msk;
pub const DMA_CCR_HTIE_Pos: u32 = 2;
pub const DMA_CCR_HTIE_Msk: u32 = 0x1 << DMA_CCR_HTIE_Pos;
pub const DMA_CCR_HTIE: u32 = DMA_CCR_HTIE_Msk;
pub const DMA_CCR_TEIE_Pos: u32 = 3;
pub const DMA_CCR_TEIE_Msk: u32 = 0x1 << DMA_CCR_TEIE_Pos;
pub const DMA_CCR_TEIE: u32 = DMA_CCR_TEIE_Msk;
pub const DMA_CCR_DIR_Pos: u32 = 4;
pub const DMA_CCR_DIR_Msk: u32 = 0x1 << DMA_CCR_DIR_Pos;
pub const DMA_CCR_DIR: u32 = DMA_CCR_DIR_Msk;
pub const DMA_CCR_CIRC_Pos: u32 = 5;
pub const DMA_CCR_CIRC_Msk: u32 = 0x1 << DMA_CCR_CIRC_Pos;
pub const DMA_CCR_CIRC: u32 = DMA_CCR_CIRC_Msk;
pub const DMA_CCR_PINC_Pos: u32 = 6;
pub const DMA_CCR_PINC_Msk: u32 = 0x1 << DMA_CCR_PINC_Pos;
pub const DMA_CCR_PINC: u32 = DMA_CCR_PINC_Msk;
pub const DMA_CCR_MINC_Pos: u32 = 7;
pub const DMA_CCR_MINC_Msk: u32 = 0x1 << DMA_CCR_MINC_Pos;
pub const DMA_CCR_MINC: u32 = DMA_CCR_MINC_Msk;
pub const DMA_CCR_PSIZE_Pos: u32 = 8;
pub const DMA_CCR_PSIZE_Msk: u32 = 0x3 << DMA_CCR_PSIZE_Pos;
pub const DMA_CCR_PSIZE: u32 = DMA_CCR_PSIZE_Msk;
pub const DMA_CCR_PSIZE_0: u32 = 0x1 << DMA_CCR_PSIZE_Pos;
pub const DMA_CCR_PSIZE_1: u32 = 0x2 << DMA_CCR_PSIZE_Pos;
pub const DMA_CCR_MSIZE_Pos: u32 = 10;
pub const DMA_CCR_MSIZE_Msk: u32 = 0x3 << DMA_CCR_MSIZE_Pos;
pub const DMA_CCR_MSIZE: u32 = DMA_CCR_MSIZE_Msk;
pub const DMA_CCR_MSIZE_0: u32 = 0x1 << DMA_CCR_MSIZE_Pos;
pub const DMA_CCR_MSIZE_1: u32 = 0x2 << DMA_CCR_MSIZE_Pos;
pub const DMA_CCR_PL_Pos: u32 = 12;
pub const DMA_CCR_PL_Msk: u32 = 0x3 << DMA_CCR_PL_Pos;
pub const DMA_CCR_PL: u32 = DMA_CCR_PL_Msk;
pub const DMA_CCR_PL_0: u32 = 0x1 << DMA_CCR_PL_Pos;
pub const DMA_CCR_PL_1: u32 = 0x2 << DMA_CCR_PL_Pos;
pub const DMA_CCR_MEM2MEM_Pos: u32 = 14;
pub const DMA_CCR_MEM2MEM_Msk: u32 = 0x1 << DMA_CCR_MEM2MEM_Pos;
pub const DMA_CCR_MEM2MEM: u32 = DMA_CCR_MEM2MEM_Msk;
pub const DMA_CNDTR_NDT_Pos: u32 = 0;
pub const DMA_CNDTR_NDT_Msk: u32 = 0xFFFF << DMA_CNDTR_NDT_Pos;
pub const DMA_CNDTR_NDT: u32 = DMA_CNDTR_NDT_Msk;
pub const DMA_CPAR_PA_Pos: u32 = 0;
pub const DMA_CPAR_PA_Msk: u32 = 0xFFFFFFFF << DMA_CPAR_PA_Pos;
pub const DMA_CPAR_PA: u32 = DMA_CPAR_PA_Msk;
pub const DMA_CMAR_MA_Pos: u32 = 0;
pub const DMA_CMAR_MA_Msk: u32 = 0xFFFFFFFF << DMA_CMAR_MA_Pos;
pub const DMA_CMAR_MA: u32 = DMA_CMAR_MA_Msk;
pub const DMAMUX_CxCR_DMAREQ_ID_Pos: u32 = 0;
pub const DMAMUX_CxCR_DMAREQ_ID_Msk: u32 = 0xFF << DMAMUX_CxCR_DMAREQ_ID_Pos;
pub const DMAMUX_CxCR_DMAREQ_ID: u32 = DMAMUX_CxCR_DMAREQ_ID_Msk;
pub const DMAMUX_CxCR_DMAREQ_ID_0: u32 = 0x01 << DMAMUX_CxCR_DMAREQ_ID_Pos;
pub const DMAMUX_CxCR_DMAREQ_ID_1: u32 = 0x02 << DMAMUX_CxCR_DMAREQ_ID_Pos;
pub const DMAMUX_CxCR_DMAREQ_ID_2: u32 = 0x04 << DMAMUX_CxCR_DMAREQ_ID_Pos;
pub const DMAMUX_CxCR_DMAREQ_ID_3: u32 = 0x08 << DMAMUX_CxCR_DMAREQ_ID_Pos;
pub const DMAMUX_CxCR_DMAREQ_ID_4: u32 = 0x10 << DMAMUX_CxCR_DMAREQ_ID_Pos;
pub const DMAMUX_CxCR_DMAREQ_ID_5: u32 = 0x20 << DMAMUX_CxCR_DMAREQ_ID_Pos;
pub const DMAMUX_CxCR_DMAREQ_ID_6: u32 = 0x40 << DMAMUX_CxCR_DMAREQ_ID_Pos;
pub const DMAMUX_CxCR_DMAREQ_ID_7: u32 = 0x80 << DMAMUX_CxCR_DMAREQ_ID_Pos;
pub const DMAMUX_CxCR_SOIE_Pos: u32 = 8;
pub const DMAMUX_CxCR_SOIE_Msk: u32 = 0x1 << DMAMUX_CxCR_SOIE_Pos;
pub const DMAMUX_CxCR_SOIE: u32 = DMAMUX_CxCR_SOIE_Msk;
pub const DMAMUX_CxCR_EGE_Pos: u32 = 9;
pub const DMAMUX_CxCR_EGE_Msk: u32 = 0x1 << DMAMUX_CxCR_EGE_Pos;
pub const DMAMUX_CxCR_EGE: u32 = DMAMUX_CxCR_EGE_Msk;
pub const DMAMUX_CxCR_SE_Pos: u32 = 16;
pub const DMAMUX_CxCR_SE_Msk: u32 = 0x1 << DMAMUX_CxCR_SE_Pos;
pub const DMAMUX_CxCR_SE: u32 = DMAMUX_CxCR_SE_Msk;
pub const DMAMUX_CxCR_SPOL_Pos: u32 = 17;
pub const DMAMUX_CxCR_SPOL_Msk: u32 = 0x3 << DMAMUX_CxCR_SPOL_Pos;
pub const DMAMUX_CxCR_SPOL: u32 = DMAMUX_CxCR_SPOL_Msk;
pub const DMAMUX_CxCR_SPOL_0: u32 = 0x1 << DMAMUX_CxCR_SPOL_Pos;
pub const DMAMUX_CxCR_SPOL_1: u32 = 0x2 << DMAMUX_CxCR_SPOL_Pos;
pub const DMAMUX_CxCR_NBREQ_Pos: u32 = 19;
pub const DMAMUX_CxCR_NBREQ_Msk: u32 = 0x1F << DMAMUX_CxCR_NBREQ_Pos;
pub const DMAMUX_CxCR_NBREQ: u32 = DMAMUX_CxCR_NBREQ_Msk;
pub const DMAMUX_CxCR_NBREQ_0: u32 = 0x01 << DMAMUX_CxCR_NBREQ_Pos;
pub const DMAMUX_CxCR_NBREQ_1: u32 = 0x02 << DMAMUX_CxCR_NBREQ_Pos;
pub const DMAMUX_CxCR_NBREQ_2: u32 = 0x04 << DMAMUX_CxCR_NBREQ_Pos;
pub const DMAMUX_CxCR_NBREQ_3: u32 = 0x08 << DMAMUX_CxCR_NBREQ_Pos;
pub const DMAMUX_CxCR_NBREQ_4: u32 = 0x10 << DMAMUX_CxCR_NBREQ_Pos;
pub const DMAMUX_CxCR_SYNC_ID_Pos: u32 = 24;
pub const DMAMUX_CxCR_SYNC_ID_Msk: u32 = 0x1F << DMAMUX_CxCR_SYNC_ID_Pos;
pub const DMAMUX_CxCR_SYNC_ID: u32 = DMAMUX_CxCR_SYNC_ID_Msk;
pub const DMAMUX_CxCR_SYNC_ID_0: u32 = 0x01 << DMAMUX_CxCR_SYNC_ID_Pos;
pub const DMAMUX_CxCR_SYNC_ID_1: u32 = 0x02 << DMAMUX_CxCR_SYNC_ID_Pos;
pub const DMAMUX_CxCR_SYNC_ID_2: u32 = 0x04 << DMAMUX_CxCR_SYNC_ID_Pos;
pub const DMAMUX_CxCR_SYNC_ID_3: u32 = 0x08 << DMAMUX_CxCR_SYNC_ID_Pos;
pub const DMAMUX_CxCR_SYNC_ID_4: u32 = 0x10 << DMAMUX_CxCR_SYNC_ID_Pos;
pub const DMAMUX_CSR_SOF0_Pos: u32 = 0;
pub const DMAMUX_CSR_SOF0_Msk: u32 = 0x1 << DMAMUX_CSR_SOF0_Pos;
pub const DMAMUX_CSR_SOF0: u32 = DMAMUX_CSR_SOF0_Msk;
pub const DMAMUX_CSR_SOF1_Pos: u32 = 1;
pub const DMAMUX_CSR_SOF1_Msk: u32 = 0x1 << DMAMUX_CSR_SOF1_Pos;
pub const DMAMUX_CSR_SOF1: u32 = DMAMUX_CSR_SOF1_Msk;
pub const DMAMUX_CSR_SOF2_Pos: u32 = 2;
pub const DMAMUX_CSR_SOF2_Msk: u32 = 0x1 << DMAMUX_CSR_SOF2_Pos;
pub const DMAMUX_CSR_SOF2: u32 = DMAMUX_CSR_SOF2_Msk;
pub const DMAMUX_CSR_SOF3_Pos: u32 = 3;
pub const DMAMUX_CSR_SOF3_Msk: u32 = 0x1 << DMAMUX_CSR_SOF3_Pos;
pub const DMAMUX_CSR_SOF3: u32 = DMAMUX_CSR_SOF3_Msk;
pub const DMAMUX_CSR_SOF4_Pos: u32 = 4;
pub const DMAMUX_CSR_SOF4_Msk: u32 = 0x1 << DMAMUX_CSR_SOF4_Pos;
pub const DMAMUX_CSR_SOF4: u32 = DMAMUX_CSR_SOF4_Msk;
pub const DMAMUX_CSR_SOF5_Pos: u32 = 5;
pub const DMAMUX_CSR_SOF5_Msk: u32 = 0x1 << DMAMUX_CSR_SOF5_Pos;
pub const DMAMUX_CSR_SOF5: u32 = DMAMUX_CSR_SOF5_Msk;
pub const DMAMUX_CSR_SOF6_Pos: u32 = 6;
pub const DMAMUX_CSR_SOF6_Msk: u32 = 0x1 << DMAMUX_CSR_SOF6_Pos;
pub const DMAMUX_CSR_SOF6: u32 = DMAMUX_CSR_SOF6_Msk;
pub const DMAMUX_CSR_SOF7_Pos: u32 = 7;
pub const DMAMUX_CSR_SOF7_Msk: u32 = 0x1 << DMAMUX_CSR_SOF7_Pos;
pub const DMAMUX_CSR_SOF7: u32 = DMAMUX_CSR_SOF7_Msk;
pub const DMAMUX_CSR_SOF8_Pos: u32 = 8;
pub const DMAMUX_CSR_SOF8_Msk: u32 = 0x1 << DMAMUX_CSR_SOF8_Pos;
pub const DMAMUX_CSR_SOF8: u32 = DMAMUX_CSR_SOF8_Msk;
pub const DMAMUX_CSR_SOF9_Pos: u32 = 9;
pub const DMAMUX_CSR_SOF9_Msk: u32 = 0x1 << DMAMUX_CSR_SOF9_Pos;
pub const DMAMUX_CSR_SOF9: u32 = DMAMUX_CSR_SOF9_Msk;
pub const DMAMUX_CSR_SOF10_Pos: u32 = 10;
pub const DMAMUX_CSR_SOF10_Msk: u32 = 0x1 << DMAMUX_CSR_SOF10_Pos;
pub const DMAMUX_CSR_SOF10: u32 = DMAMUX_CSR_SOF10_Msk;
pub const DMAMUX_CSR_SOF11_Pos: u32 = 11;
pub const DMAMUX_CSR_SOF11_Msk: u32 = 0x1 << DMAMUX_CSR_SOF11_Pos;
pub const DMAMUX_CSR_SOF11: u32 = DMAMUX_CSR_SOF11_Msk;
pub const DMAMUX_CSR_SOF12_Pos: u32 = 12;
pub const DMAMUX_CSR_SOF12_Msk: u32 = 0x1 << DMAMUX_CSR_SOF12_Pos;
pub const DMAMUX_CSR_SOF12: u32 = DMAMUX_CSR_SOF12_Msk;
pub const DMAMUX_CSR_SOF13_Pos: u32 = 13;
pub const DMAMUX_CSR_SOF13_Msk: u32 = 0x1 << DMAMUX_CSR_SOF13_Pos;
pub const DMAMUX_CSR_SOF13: u32 = DMAMUX_CSR_SOF13_Msk;
pub const DMAMUX_CSR_SOF14_Pos: u32 = 14;
pub const DMAMUX_CSR_SOF14_Msk: u32 = 0x1 << DMAMUX_CSR_SOF14_Pos;
pub const DMAMUX_CSR_SOF14: u32 = DMAMUX_CSR_SOF14_Msk;
pub const DMAMUX_CSR_SOF15_Pos: u32 = 15;
pub const DMAMUX_CSR_SOF15_Msk: u32 = 0x1 << DMAMUX_CSR_SOF15_Pos;
pub const DMAMUX_CSR_SOF15: u32 = DMAMUX_CSR_SOF15_Msk;
pub const DMAMUX_CFR_CSOF0_Pos: u32 = 0;
pub const DMAMUX_CFR_CSOF0_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF0_Pos;
pub const DMAMUX_CFR_CSOF0: u32 = DMAMUX_CFR_CSOF0_Msk;
pub const DMAMUX_CFR_CSOF1_Pos: u32 = 1;
pub const DMAMUX_CFR_CSOF1_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF1_Pos;
pub const DMAMUX_CFR_CSOF1: u32 = DMAMUX_CFR_CSOF1_Msk;
pub const DMAMUX_CFR_CSOF2_Pos: u32 = 2;
pub const DMAMUX_CFR_CSOF2_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF2_Pos;
pub const DMAMUX_CFR_CSOF2: u32 = DMAMUX_CFR_CSOF2_Msk;
pub const DMAMUX_CFR_CSOF3_Pos: u32 = 3;
pub const DMAMUX_CFR_CSOF3_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF3_Pos;
pub const DMAMUX_CFR_CSOF3: u32 = DMAMUX_CFR_CSOF3_Msk;
pub const DMAMUX_CFR_CSOF4_Pos: u32 = 4;
pub const DMAMUX_CFR_CSOF4_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF4_Pos;
pub const DMAMUX_CFR_CSOF4: u32 = DMAMUX_CFR_CSOF4_Msk;
pub const DMAMUX_CFR_CSOF5_Pos: u32 = 5;
pub const DMAMUX_CFR_CSOF5_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF5_Pos;
pub const DMAMUX_CFR_CSOF5: u32 = DMAMUX_CFR_CSOF5_Msk;
pub const DMAMUX_CFR_CSOF6_Pos: u32 = 6;
pub const DMAMUX_CFR_CSOF6_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF6_Pos;
pub const DMAMUX_CFR_CSOF6: u32 = DMAMUX_CFR_CSOF6_Msk;
pub const DMAMUX_CFR_CSOF7_Pos: u32 = 7;
pub const DMAMUX_CFR_CSOF7_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF7_Pos;
pub const DMAMUX_CFR_CSOF7: u32 = DMAMUX_CFR_CSOF7_Msk;
pub const DMAMUX_CFR_CSOF8_Pos: u32 = 8;
pub const DMAMUX_CFR_CSOF8_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF8_Pos;
pub const DMAMUX_CFR_CSOF8: u32 = DMAMUX_CFR_CSOF8_Msk;
pub const DMAMUX_CFR_CSOF9_Pos: u32 = 9;
pub const DMAMUX_CFR_CSOF9_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF9_Pos;
pub const DMAMUX_CFR_CSOF9: u32 = DMAMUX_CFR_CSOF9_Msk;
pub const DMAMUX_CFR_CSOF10_Pos: u32 = 10;
pub const DMAMUX_CFR_CSOF10_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF10_Pos;
pub const DMAMUX_CFR_CSOF10: u32 = DMAMUX_CFR_CSOF10_Msk;
pub const DMAMUX_CFR_CSOF11_Pos: u32 = 11;
pub const DMAMUX_CFR_CSOF11_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF11_Pos;
pub const DMAMUX_CFR_CSOF11: u32 = DMAMUX_CFR_CSOF11_Msk;
pub const DMAMUX_CFR_CSOF12_Pos: u32 = 12;
pub const DMAMUX_CFR_CSOF12_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF12_Pos;
pub const DMAMUX_CFR_CSOF12: u32 = DMAMUX_CFR_CSOF12_Msk;
pub const DMAMUX_CFR_CSOF13_Pos: u32 = 13;
pub const DMAMUX_CFR_CSOF13_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF13_Pos;
pub const DMAMUX_CFR_CSOF13: u32 = DMAMUX_CFR_CSOF13_Msk;
pub const DMAMUX_CFR_CSOF14_Pos: u32 = 14;
pub const DMAMUX_CFR_CSOF14_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF14_Pos;
pub const DMAMUX_CFR_CSOF14: u32 = DMAMUX_CFR_CSOF14_Msk;
pub const DMAMUX_CFR_CSOF15_Pos: u32 = 15;
pub const DMAMUX_CFR_CSOF15_Msk: u32 = 0x1 << DMAMUX_CFR_CSOF15_Pos;
pub const DMAMUX_CFR_CSOF15: u32 = DMAMUX_CFR_CSOF15_Msk;
pub const DMAMUX_RGxCR_SIG_ID_Pos: u32 = 0;
pub const DMAMUX_RGxCR_SIG_ID_Msk: u32 = 0x1F << DMAMUX_RGxCR_SIG_ID_Pos;
pub const DMAMUX_RGxCR_SIG_ID: u32 = DMAMUX_RGxCR_SIG_ID_Msk;
pub const DMAMUX_RGxCR_SIG_ID_0: u32 = 0x01 << DMAMUX_RGxCR_SIG_ID_Pos;
pub const DMAMUX_RGxCR_SIG_ID_1: u32 = 0x02 << DMAMUX_RGxCR_SIG_ID_Pos;
pub const DMAMUX_RGxCR_SIG_ID_2: u32 = 0x04 << DMAMUX_RGxCR_SIG_ID_Pos;
pub const DMAMUX_RGxCR_SIG_ID_3: u32 = 0x08 << DMAMUX_RGxCR_SIG_ID_Pos;
pub const DMAMUX_RGxCR_SIG_ID_4: u32 = 0x10 << DMAMUX_RGxCR_SIG_ID_Pos;
pub const DMAMUX_RGxCR_OIE_Pos: u32 = 8;
pub const DMAMUX_RGxCR_OIE_Msk: u32 = 0x1 << DMAMUX_RGxCR_OIE_Pos;
pub const DMAMUX_RGxCR_OIE: u32 = DMAMUX_RGxCR_OIE_Msk;
pub const DMAMUX_RGxCR_GE_Pos: u32 = 16;
pub const DMAMUX_RGxCR_GE_Msk: u32 = 0x1 << DMAMUX_RGxCR_GE_Pos;
pub const DMAMUX_RGxCR_GE: u32 = DMAMUX_RGxCR_GE_Msk;
pub const DMAMUX_RGxCR_GPOL_Pos: u32 = 17;
pub const DMAMUX_RGxCR_GPOL_Msk: u32 = 0x3 << DMAMUX_RGxCR_GPOL_Pos;
pub const DMAMUX_RGxCR_GPOL: u32 = DMAMUX_RGxCR_GPOL_Msk;
pub const DMAMUX_RGxCR_GPOL_0: u32 = 0x1 << DMAMUX_RGxCR_GPOL_Pos;
pub const DMAMUX_RGxCR_GPOL_1: u32 = 0x2 << DMAMUX_RGxCR_GPOL_Pos;
pub const DMAMUX_RGxCR_GNBREQ_Pos: u32 = 19;
pub const DMAMUX_RGxCR_GNBREQ_Msk: u32 = 0x1F << DMAMUX_RGxCR_GNBREQ_Pos;
pub const DMAMUX_RGxCR_GNBREQ: u32 = DMAMUX_RGxCR_GNBREQ_Msk;
pub const DMAMUX_RGxCR_GNBREQ_0: u32 = 0x01 << DMAMUX_RGxCR_GNBREQ_Pos;
pub const DMAMUX_RGxCR_GNBREQ_1: u32 = 0x02 << DMAMUX_RGxCR_GNBREQ_Pos;
pub const DMAMUX_RGxCR_GNBREQ_2: u32 = 0x04 << DMAMUX_RGxCR_GNBREQ_Pos;
pub const DMAMUX_RGxCR_GNBREQ_3: u32 = 0x08 << DMAMUX_RGxCR_GNBREQ_Pos;
pub const DMAMUX_RGxCR_GNBREQ_4: u32 = 0x10 << DMAMUX_RGxCR_GNBREQ_Pos;
pub const DMAMUX_RGSR_OF0_Pos: u32 = 0;
pub const DMAMUX_RGSR_OF0_Msk: u32 = 0x1 << DMAMUX_RGSR_OF0_Pos;
pub const DMAMUX_RGSR_OF0: u32 = DMAMUX_RGSR_OF0_Msk;
pub const DMAMUX_RGSR_OF1_Pos: u32 = 1;
pub const DMAMUX_RGSR_OF1_Msk: u32 = 0x1 << DMAMUX_RGSR_OF1_Pos;
pub const DMAMUX_RGSR_OF1: u32 = DMAMUX_RGSR_OF1_Msk;
pub const DMAMUX_RGSR_OF2_Pos: u32 = 2;
pub const DMAMUX_RGSR_OF2_Msk: u32 = 0x1 << DMAMUX_RGSR_OF2_Pos;
pub const DMAMUX_RGSR_OF2: u32 = DMAMUX_RGSR_OF2_Msk;
pub const DMAMUX_RGSR_OF3_Pos: u32 = 3;
pub const DMAMUX_RGSR_OF3_Msk: u32 = 0x1 << DMAMUX_RGSR_OF3_Pos;
pub const DMAMUX_RGSR_OF3: u32 = DMAMUX_RGSR_OF3_Msk;
pub const DMAMUX_RGCFR_COF0_Pos: u32 = 0;
pub const DMAMUX_RGCFR_COF0_Msk: u32 = 0x1 << DMAMUX_RGCFR_COF0_Pos;
pub const DMAMUX_RGCFR_COF0: u32 = DMAMUX_RGCFR_COF0_Msk;
pub const DMAMUX_RGCFR_COF1_Pos: u32 = 1;
pub const DMAMUX_RGCFR_COF1_Msk: u32 = 0x1 << DMAMUX_RGCFR_COF1_Pos;
pub const DMAMUX_RGCFR_COF1: u32 = DMAMUX_RGCFR_COF1_Msk;
pub const DMAMUX_RGCFR_COF2_Pos: u32 = 2;
pub const DMAMUX_RGCFR_COF2_Msk: u32 = 0x1 << DMAMUX_RGCFR_COF2_Pos;
pub const DMAMUX_RGCFR_COF2: u32 = DMAMUX_RGCFR_COF2_Msk;
pub const DMAMUX_RGCFR_COF3_Pos: u32 = 3;
pub const DMAMUX_RGCFR_COF3_Msk: u32 = 0x1 << DMAMUX_RGCFR_COF3_Pos;
pub const DMAMUX_RGCFR_COF3: u32 = DMAMUX_RGCFR_COF3_Msk;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ0_Pos: u32 = 0;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ0_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ0_Pos;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ0: u32 = DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ0_Msk;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ1_Pos: u32 = 1;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ1_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ1_Pos;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ1: u32 = DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ1_Msk;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ2_Pos: u32 = 2;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ2_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ2_Pos;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ2: u32 = DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ2_Msk;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ3_Pos: u32 = 3;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ3_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ3_Pos;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ3: u32 = DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ3_Msk;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ4_Pos: u32 = 4;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ4_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ4_Pos;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ4: u32 = DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ4_Msk;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ5_Pos: u32 = 5;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ5_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ5_Pos;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ5: u32 = DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ5_Msk;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ6_Pos: u32 = 6;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ6_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ6_Pos;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ6: u32 = DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ6_Msk;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ7_Pos: u32 = 7;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ7_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ7_Pos;
pub const DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ7: u32 = DMAMUX_IPHW_CFGR2_NUM_DMA_EXT_REQ7_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS0_Pos: u32 = 0;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS0_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS0_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS0: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS0_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS1_Pos: u32 = 1;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS1_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS1_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS1: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS1_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS2_Pos: u32 = 2;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS2_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS2_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS2: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS2_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS3_Pos: u32 = 3;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS3_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS3_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS3: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS3_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS4_Pos: u32 = 4;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS4_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS4_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS4: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS4_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS5_Pos: u32 = 5;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS5_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS5_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS5: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS5_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS6_Pos: u32 = 6;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS6_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS6_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS6: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS6_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS7_Pos: u32 = 7;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS7_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS7_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS7: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_STREAMS7_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ0_Pos: u32 = 8;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ0_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ0_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ0: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ0_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ1_Pos: u32 = 9;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ1_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ1_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ1: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ1_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ2_Pos: u32 = 10;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ2_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ2_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ2: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ2_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ3_Pos: u32 = 11;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ3_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ3_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ3: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ3_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ4_Pos: u32 = 12;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ4_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ4_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ4: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ4_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ5_Pos: u32 = 13;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ5_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ5_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ5: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ5_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ6_Pos: u32 = 14;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ6_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ6_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ6: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ6_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ7_Pos: u32 = 15;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ7_Msk: u32 =
    0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ7_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ7: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_PERIPH_REQ7_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG0_Pos: u32 = 16;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG0_Msk: u32 = 0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG0_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG0: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG0_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG1_Pos: u32 = 17;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG1_Msk: u32 = 0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG1_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG1: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG1_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG2_Pos: u32 = 18;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG2_Msk: u32 = 0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG2_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG2: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG2_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG3_Pos: u32 = 19;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG3_Msk: u32 = 0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG3_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG3: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG3_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG4_Pos: u32 = 20;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG4_Msk: u32 = 0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG4_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG4: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG4_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG5_Pos: u32 = 21;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG5_Msk: u32 = 0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG5_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG5: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG5_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG6_Pos: u32 = 22;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG6_Msk: u32 = 0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG6_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG6: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG6_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG7_Pos: u32 = 23;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG7_Msk: u32 = 0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG7_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG7: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_TRIG7_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN0_Pos: u32 = 24;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN0_Msk: u32 = 0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN0_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN0: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN0_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN1_Pos: u32 = 25;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN1_Msk: u32 = 0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN1_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN1: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN1_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN2_Pos: u32 = 26;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN2_Msk: u32 = 0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN2_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN2: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN2_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN3_Pos: u32 = 27;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN3_Msk: u32 = 0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN3_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN3: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN3_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN4_Pos: u32 = 28;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN4_Msk: u32 = 0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN4_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN4: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN4_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN5_Pos: u32 = 29;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN5_Msk: u32 = 0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN5_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN5: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN5_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN6_Pos: u32 = 30;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN6_Msk: u32 = 0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN6_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN6: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN6_Msk;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN7_Pos: u32 = 31;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN7_Msk: u32 = 0x1 << DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN7_Pos;
pub const DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN7: u32 = DMAMUX_IPHW_CFGR1_NUM_DMA_REQGEN7_Msk;
pub const EXTI_IMR1_IM0_Pos: u32 = 0;
pub const EXTI_IMR1_IM0_Msk: u32 = 0x1 << EXTI_IMR1_IM0_Pos;
pub const EXTI_IMR1_IM0: u32 = EXTI_IMR1_IM0_Msk;
pub const EXTI_IMR1_IM1_Pos: u32 = 1;
pub const EXTI_IMR1_IM1_Msk: u32 = 0x1 << EXTI_IMR1_IM1_Pos;
pub const EXTI_IMR1_IM1: u32 = EXTI_IMR1_IM1_Msk;
pub const EXTI_IMR1_IM2_Pos: u32 = 2;
pub const EXTI_IMR1_IM2_Msk: u32 = 0x1 << EXTI_IMR1_IM2_Pos;
pub const EXTI_IMR1_IM2: u32 = EXTI_IMR1_IM2_Msk;
pub const EXTI_IMR1_IM3_Pos: u32 = 3;
pub const EXTI_IMR1_IM3_Msk: u32 = 0x1 << EXTI_IMR1_IM3_Pos;
pub const EXTI_IMR1_IM3: u32 = EXTI_IMR1_IM3_Msk;
pub const EXTI_IMR1_IM4_Pos: u32 = 4;
pub const EXTI_IMR1_IM4_Msk: u32 = 0x1 << EXTI_IMR1_IM4_Pos;
pub const EXTI_IMR1_IM4: u32 = EXTI_IMR1_IM4_Msk;
pub const EXTI_IMR1_IM5_Pos: u32 = 5;
pub const EXTI_IMR1_IM5_Msk: u32 = 0x1 << EXTI_IMR1_IM5_Pos;
pub const EXTI_IMR1_IM5: u32 = EXTI_IMR1_IM5_Msk;
pub const EXTI_IMR1_IM6_Pos: u32 = 6;
pub const EXTI_IMR1_IM6_Msk: u32 = 0x1 << EXTI_IMR1_IM6_Pos;
pub const EXTI_IMR1_IM6: u32 = EXTI_IMR1_IM6_Msk;
pub const EXTI_IMR1_IM7_Pos: u32 = 7;
pub const EXTI_IMR1_IM7_Msk: u32 = 0x1 << EXTI_IMR1_IM7_Pos;
pub const EXTI_IMR1_IM7: u32 = EXTI_IMR1_IM7_Msk;
pub const EXTI_IMR1_IM8_Pos: u32 = 8;
pub const EXTI_IMR1_IM8_Msk: u32 = 0x1 << EXTI_IMR1_IM8_Pos;
pub const EXTI_IMR1_IM8: u32 = EXTI_IMR1_IM8_Msk;
pub const EXTI_IMR1_IM9_Pos: u32 = 9;
pub const EXTI_IMR1_IM9_Msk: u32 = 0x1 << EXTI_IMR1_IM9_Pos;
pub const EXTI_IMR1_IM9: u32 = EXTI_IMR1_IM9_Msk;
pub const EXTI_IMR1_IM10_Pos: u32 = 10;
pub const EXTI_IMR1_IM10_Msk: u32 = 0x1 << EXTI_IMR1_IM10_Pos;
pub const EXTI_IMR1_IM10: u32 = EXTI_IMR1_IM10_Msk;
pub const EXTI_IMR1_IM11_Pos: u32 = 11;
pub const EXTI_IMR1_IM11_Msk: u32 = 0x1 << EXTI_IMR1_IM11_Pos;
pub const EXTI_IMR1_IM11: u32 = EXTI_IMR1_IM11_Msk;
pub const EXTI_IMR1_IM12_Pos: u32 = 12;
pub const EXTI_IMR1_IM12_Msk: u32 = 0x1 << EXTI_IMR1_IM12_Pos;
pub const EXTI_IMR1_IM12: u32 = EXTI_IMR1_IM12_Msk;
pub const EXTI_IMR1_IM13_Pos: u32 = 13;
pub const EXTI_IMR1_IM13_Msk: u32 = 0x1 << EXTI_IMR1_IM13_Pos;
pub const EXTI_IMR1_IM13: u32 = EXTI_IMR1_IM13_Msk;
pub const EXTI_IMR1_IM14_Pos: u32 = 14;
pub const EXTI_IMR1_IM14_Msk: u32 = 0x1 << EXTI_IMR1_IM14_Pos;
pub const EXTI_IMR1_IM14: u32 = EXTI_IMR1_IM14_Msk;
pub const EXTI_IMR1_IM15_Pos: u32 = 15;
pub const EXTI_IMR1_IM15_Msk: u32 = 0x1 << EXTI_IMR1_IM15_Pos;
pub const EXTI_IMR1_IM15: u32 = EXTI_IMR1_IM15_Msk;
pub const EXTI_IMR1_IM16_Pos: u32 = 16;
pub const EXTI_IMR1_IM16_Msk: u32 = 0x1 << EXTI_IMR1_IM16_Pos;
pub const EXTI_IMR1_IM16: u32 = EXTI_IMR1_IM16_Msk;
pub const EXTI_IMR1_IM17_Pos: u32 = 17;
pub const EXTI_IMR1_IM17_Msk: u32 = 0x1 << EXTI_IMR1_IM17_Pos;
pub const EXTI_IMR1_IM17: u32 = EXTI_IMR1_IM17_Msk;
pub const EXTI_IMR1_IM18_Pos: u32 = 18;
pub const EXTI_IMR1_IM18_Msk: u32 = 0x1 << EXTI_IMR1_IM18_Pos;
pub const EXTI_IMR1_IM18: u32 = EXTI_IMR1_IM18_Msk;
pub const EXTI_IMR1_IM19_Pos: u32 = 19;
pub const EXTI_IMR1_IM19_Msk: u32 = 0x1 << EXTI_IMR1_IM19_Pos;
pub const EXTI_IMR1_IM19: u32 = EXTI_IMR1_IM19_Msk;
pub const EXTI_IMR1_IM20_Pos: u32 = 20;
pub const EXTI_IMR1_IM20_Msk: u32 = 0x1 << EXTI_IMR1_IM20_Pos;
pub const EXTI_IMR1_IM20: u32 = EXTI_IMR1_IM20_Msk;
pub const EXTI_IMR1_IM21_Pos: u32 = 21;
pub const EXTI_IMR1_IM21_Msk: u32 = 0x1 << EXTI_IMR1_IM21_Pos;
pub const EXTI_IMR1_IM21: u32 = EXTI_IMR1_IM21_Msk;
pub const EXTI_IMR1_IM22_Pos: u32 = 22;
pub const EXTI_IMR1_IM22_Msk: u32 = 0x1 << EXTI_IMR1_IM22_Pos;
pub const EXTI_IMR1_IM22: u32 = EXTI_IMR1_IM22_Msk;
pub const EXTI_IMR1_IM23_Pos: u32 = 23;
pub const EXTI_IMR1_IM23_Msk: u32 = 0x1 << EXTI_IMR1_IM23_Pos;
pub const EXTI_IMR1_IM23: u32 = EXTI_IMR1_IM23_Msk;
pub const EXTI_IMR1_IM24_Pos: u32 = 24;
pub const EXTI_IMR1_IM24_Msk: u32 = 0x1 << EXTI_IMR1_IM24_Pos;
pub const EXTI_IMR1_IM24: u32 = EXTI_IMR1_IM24_Msk;
pub const EXTI_IMR1_IM25_Pos: u32 = 25;
pub const EXTI_IMR1_IM25_Msk: u32 = 0x1 << EXTI_IMR1_IM25_Pos;
pub const EXTI_IMR1_IM25: u32 = EXTI_IMR1_IM25_Msk;
pub const EXTI_IMR1_IM26_Pos: u32 = 26;
pub const EXTI_IMR1_IM26_Msk: u32 = 0x1 << EXTI_IMR1_IM26_Pos;
pub const EXTI_IMR1_IM26: u32 = EXTI_IMR1_IM26_Msk;
pub const EXTI_IMR1_IM27_Pos: u32 = 27;
pub const EXTI_IMR1_IM27_Msk: u32 = 0x1 << EXTI_IMR1_IM27_Pos;
pub const EXTI_IMR1_IM27: u32 = EXTI_IMR1_IM27_Msk;
pub const EXTI_IMR1_IM28_Pos: u32 = 28;
pub const EXTI_IMR1_IM28_Msk: u32 = 0x1 << EXTI_IMR1_IM28_Pos;
pub const EXTI_IMR1_IM28: u32 = EXTI_IMR1_IM28_Msk;
pub const EXTI_IMR1_IM29_Pos: u32 = 29;
pub const EXTI_IMR1_IM29_Msk: u32 = 0x1 << EXTI_IMR1_IM29_Pos;
pub const EXTI_IMR1_IM29: u32 = EXTI_IMR1_IM29_Msk;
pub const EXTI_IMR1_IM30_Pos: u32 = 30;
pub const EXTI_IMR1_IM30_Msk: u32 = 0x1 << EXTI_IMR1_IM30_Pos;
pub const EXTI_IMR1_IM30: u32 = EXTI_IMR1_IM30_Msk;
pub const EXTI_IMR1_IM_Pos: u32 = 0;
pub const EXTI_IMR1_IM_Msk: u32 = 0x7FFFFFFF << EXTI_IMR1_IM_Pos;
pub const EXTI_IMR1_IM: u32 = EXTI_IMR1_IM_Msk;
pub const EXTI_EMR1_EM0_Pos: u32 = 0;
pub const EXTI_EMR1_EM0_Msk: u32 = 0x1 << EXTI_EMR1_EM0_Pos;
pub const EXTI_EMR1_EM0: u32 = EXTI_EMR1_EM0_Msk;
pub const EXTI_EMR1_EM1_Pos: u32 = 1;
pub const EXTI_EMR1_EM1_Msk: u32 = 0x1 << EXTI_EMR1_EM1_Pos;
pub const EXTI_EMR1_EM1: u32 = EXTI_EMR1_EM1_Msk;
pub const EXTI_EMR1_EM2_Pos: u32 = 2;
pub const EXTI_EMR1_EM2_Msk: u32 = 0x1 << EXTI_EMR1_EM2_Pos;
pub const EXTI_EMR1_EM2: u32 = EXTI_EMR1_EM2_Msk;
pub const EXTI_EMR1_EM3_Pos: u32 = 3;
pub const EXTI_EMR1_EM3_Msk: u32 = 0x1 << EXTI_EMR1_EM3_Pos;
pub const EXTI_EMR1_EM3: u32 = EXTI_EMR1_EM3_Msk;
pub const EXTI_EMR1_EM4_Pos: u32 = 4;
pub const EXTI_EMR1_EM4_Msk: u32 = 0x1 << EXTI_EMR1_EM4_Pos;
pub const EXTI_EMR1_EM4: u32 = EXTI_EMR1_EM4_Msk;
pub const EXTI_EMR1_EM5_Pos: u32 = 5;
pub const EXTI_EMR1_EM5_Msk: u32 = 0x1 << EXTI_EMR1_EM5_Pos;
pub const EXTI_EMR1_EM5: u32 = EXTI_EMR1_EM5_Msk;
pub const EXTI_EMR1_EM6_Pos: u32 = 6;
pub const EXTI_EMR1_EM6_Msk: u32 = 0x1 << EXTI_EMR1_EM6_Pos;
pub const EXTI_EMR1_EM6: u32 = EXTI_EMR1_EM6_Msk;
pub const EXTI_EMR1_EM7_Pos: u32 = 7;
pub const EXTI_EMR1_EM7_Msk: u32 = 0x1 << EXTI_EMR1_EM7_Pos;
pub const EXTI_EMR1_EM7: u32 = EXTI_EMR1_EM7_Msk;
pub const EXTI_EMR1_EM8_Pos: u32 = 8;
pub const EXTI_EMR1_EM8_Msk: u32 = 0x1 << EXTI_EMR1_EM8_Pos;
pub const EXTI_EMR1_EM8: u32 = EXTI_EMR1_EM8_Msk;
pub const EXTI_EMR1_EM9_Pos: u32 = 9;
pub const EXTI_EMR1_EM9_Msk: u32 = 0x1 << EXTI_EMR1_EM9_Pos;
pub const EXTI_EMR1_EM9: u32 = EXTI_EMR1_EM9_Msk;
pub const EXTI_EMR1_EM10_Pos: u32 = 10;
pub const EXTI_EMR1_EM10_Msk: u32 = 0x1 << EXTI_EMR1_EM10_Pos;
pub const EXTI_EMR1_EM10: u32 = EXTI_EMR1_EM10_Msk;
pub const EXTI_EMR1_EM11_Pos: u32 = 11;
pub const EXTI_EMR1_EM11_Msk: u32 = 0x1 << EXTI_EMR1_EM11_Pos;
pub const EXTI_EMR1_EM11: u32 = EXTI_EMR1_EM11_Msk;
pub const EXTI_EMR1_EM12_Pos: u32 = 12;
pub const EXTI_EMR1_EM12_Msk: u32 = 0x1 << EXTI_EMR1_EM12_Pos;
pub const EXTI_EMR1_EM12: u32 = EXTI_EMR1_EM12_Msk;
pub const EXTI_EMR1_EM13_Pos: u32 = 13;
pub const EXTI_EMR1_EM13_Msk: u32 = 0x1 << EXTI_EMR1_EM13_Pos;
pub const EXTI_EMR1_EM13: u32 = EXTI_EMR1_EM13_Msk;
pub const EXTI_EMR1_EM14_Pos: u32 = 14;
pub const EXTI_EMR1_EM14_Msk: u32 = 0x1 << EXTI_EMR1_EM14_Pos;
pub const EXTI_EMR1_EM14: u32 = EXTI_EMR1_EM14_Msk;
pub const EXTI_EMR1_EM15_Pos: u32 = 15;
pub const EXTI_EMR1_EM15_Msk: u32 = 0x1 << EXTI_EMR1_EM15_Pos;
pub const EXTI_EMR1_EM15: u32 = EXTI_EMR1_EM15_Msk;
pub const EXTI_EMR1_EM16_Pos: u32 = 16;
pub const EXTI_EMR1_EM16_Msk: u32 = 0x1 << EXTI_EMR1_EM16_Pos;
pub const EXTI_EMR1_EM16: u32 = EXTI_EMR1_EM16_Msk;
pub const EXTI_EMR1_EM17_Pos: u32 = 17;
pub const EXTI_EMR1_EM17_Msk: u32 = 0x1 << EXTI_EMR1_EM17_Pos;
pub const EXTI_EMR1_EM17: u32 = EXTI_EMR1_EM17_Msk;
pub const EXTI_EMR1_EM18_Pos: u32 = 18;
pub const EXTI_EMR1_EM18_Msk: u32 = 0x1 << EXTI_EMR1_EM18_Pos;
pub const EXTI_EMR1_EM18: u32 = EXTI_EMR1_EM18_Msk;
pub const EXTI_EMR1_EM19_Pos: u32 = 19;
pub const EXTI_EMR1_EM19_Msk: u32 = 0x1 << EXTI_EMR1_EM19_Pos;
pub const EXTI_EMR1_EM19: u32 = EXTI_EMR1_EM19_Msk;
pub const EXTI_EMR1_EM20_Pos: u32 = 20;
pub const EXTI_EMR1_EM20_Msk: u32 = 0x1 << EXTI_EMR1_EM20_Pos;
pub const EXTI_EMR1_EM20: u32 = EXTI_EMR1_EM20_Msk;
pub const EXTI_EMR1_EM21_Pos: u32 = 21;
pub const EXTI_EMR1_EM21_Msk: u32 = 0x1 << EXTI_EMR1_EM21_Pos;
pub const EXTI_EMR1_EM21: u32 = EXTI_EMR1_EM21_Msk;
pub const EXTI_EMR1_EM22_Pos: u32 = 22;
pub const EXTI_EMR1_EM22_Msk: u32 = 0x1 << EXTI_EMR1_EM22_Pos;
pub const EXTI_EMR1_EM22: u32 = EXTI_EMR1_EM22_Msk;
pub const EXTI_EMR1_EM23_Pos: u32 = 23;
pub const EXTI_EMR1_EM23_Msk: u32 = 0x1 << EXTI_EMR1_EM23_Pos;
pub const EXTI_EMR1_EM23: u32 = EXTI_EMR1_EM23_Msk;
pub const EXTI_EMR1_EM24_Pos: u32 = 24;
pub const EXTI_EMR1_EM24_Msk: u32 = 0x1 << EXTI_EMR1_EM24_Pos;
pub const EXTI_EMR1_EM24: u32 = EXTI_EMR1_EM24_Msk;
pub const EXTI_EMR1_EM25_Pos: u32 = 25;
pub const EXTI_EMR1_EM25_Msk: u32 = 0x1 << EXTI_EMR1_EM25_Pos;
pub const EXTI_EMR1_EM25: u32 = EXTI_EMR1_EM25_Msk;
pub const EXTI_EMR1_EM26_Pos: u32 = 26;
pub const EXTI_EMR1_EM26_Msk: u32 = 0x1 << EXTI_EMR1_EM26_Pos;
pub const EXTI_EMR1_EM26: u32 = EXTI_EMR1_EM26_Msk;
pub const EXTI_EMR1_EM27_Pos: u32 = 27;
pub const EXTI_EMR1_EM27_Msk: u32 = 0x1 << EXTI_EMR1_EM27_Pos;
pub const EXTI_EMR1_EM27: u32 = EXTI_EMR1_EM27_Msk;
pub const EXTI_EMR1_EM28_Pos: u32 = 28;
pub const EXTI_EMR1_EM28_Msk: u32 = 0x1 << EXTI_EMR1_EM28_Pos;
pub const EXTI_EMR1_EM28: u32 = EXTI_EMR1_EM28_Msk;
pub const EXTI_EMR1_EM29_Pos: u32 = 29;
pub const EXTI_EMR1_EM29_Msk: u32 = 0x1 << EXTI_EMR1_EM29_Pos;
pub const EXTI_EMR1_EM29: u32 = EXTI_EMR1_EM29_Msk;
pub const EXTI_EMR1_EM30_Pos: u32 = 30;
pub const EXTI_EMR1_EM30_Msk: u32 = 0x1 << EXTI_EMR1_EM30_Pos;
pub const EXTI_EMR1_EM30: u32 = EXTI_EMR1_EM30_Msk;
pub const EXTI_RTSR1_RT0_Pos: u32 = 0;
pub const EXTI_RTSR1_RT0_Msk: u32 = 0x1 << EXTI_RTSR1_RT0_Pos;
pub const EXTI_RTSR1_RT0: u32 = EXTI_RTSR1_RT0_Msk;
pub const EXTI_RTSR1_RT1_Pos: u32 = 1;
pub const EXTI_RTSR1_RT1_Msk: u32 = 0x1 << EXTI_RTSR1_RT1_Pos;
pub const EXTI_RTSR1_RT1: u32 = EXTI_RTSR1_RT1_Msk;
pub const EXTI_RTSR1_RT2_Pos: u32 = 2;
pub const EXTI_RTSR1_RT2_Msk: u32 = 0x1 << EXTI_RTSR1_RT2_Pos;
pub const EXTI_RTSR1_RT2: u32 = EXTI_RTSR1_RT2_Msk;
pub const EXTI_RTSR1_RT3_Pos: u32 = 3;
pub const EXTI_RTSR1_RT3_Msk: u32 = 0x1 << EXTI_RTSR1_RT3_Pos;
pub const EXTI_RTSR1_RT3: u32 = EXTI_RTSR1_RT3_Msk;
pub const EXTI_RTSR1_RT4_Pos: u32 = 4;
pub const EXTI_RTSR1_RT4_Msk: u32 = 0x1 << EXTI_RTSR1_RT4_Pos;
pub const EXTI_RTSR1_RT4: u32 = EXTI_RTSR1_RT4_Msk;
pub const EXTI_RTSR1_RT5_Pos: u32 = 5;
pub const EXTI_RTSR1_RT5_Msk: u32 = 0x1 << EXTI_RTSR1_RT5_Pos;
pub const EXTI_RTSR1_RT5: u32 = EXTI_RTSR1_RT5_Msk;
pub const EXTI_RTSR1_RT6_Pos: u32 = 6;
pub const EXTI_RTSR1_RT6_Msk: u32 = 0x1 << EXTI_RTSR1_RT6_Pos;
pub const EXTI_RTSR1_RT6: u32 = EXTI_RTSR1_RT6_Msk;
pub const EXTI_RTSR1_RT7_Pos: u32 = 7;
pub const EXTI_RTSR1_RT7_Msk: u32 = 0x1 << EXTI_RTSR1_RT7_Pos;
pub const EXTI_RTSR1_RT7: u32 = EXTI_RTSR1_RT7_Msk;
pub const EXTI_RTSR1_RT8_Pos: u32 = 8;
pub const EXTI_RTSR1_RT8_Msk: u32 = 0x1 << EXTI_RTSR1_RT8_Pos;
pub const EXTI_RTSR1_RT8: u32 = EXTI_RTSR1_RT8_Msk;
pub const EXTI_RTSR1_RT9_Pos: u32 = 9;
pub const EXTI_RTSR1_RT9_Msk: u32 = 0x1 << EXTI_RTSR1_RT9_Pos;
pub const EXTI_RTSR1_RT9: u32 = EXTI_RTSR1_RT9_Msk;
pub const EXTI_RTSR1_RT10_Pos: u32 = 10;
pub const EXTI_RTSR1_RT10_Msk: u32 = 0x1 << EXTI_RTSR1_RT10_Pos;
pub const EXTI_RTSR1_RT10: u32 = EXTI_RTSR1_RT10_Msk;
pub const EXTI_RTSR1_RT11_Pos: u32 = 11;
pub const EXTI_RTSR1_RT11_Msk: u32 = 0x1 << EXTI_RTSR1_RT11_Pos;
pub const EXTI_RTSR1_RT11: u32 = EXTI_RTSR1_RT11_Msk;
pub const EXTI_RTSR1_RT12_Pos: u32 = 12;
pub const EXTI_RTSR1_RT12_Msk: u32 = 0x1 << EXTI_RTSR1_RT12_Pos;
pub const EXTI_RTSR1_RT12: u32 = EXTI_RTSR1_RT12_Msk;
pub const EXTI_RTSR1_RT13_Pos: u32 = 13;
pub const EXTI_RTSR1_RT13_Msk: u32 = 0x1 << EXTI_RTSR1_RT13_Pos;
pub const EXTI_RTSR1_RT13: u32 = EXTI_RTSR1_RT13_Msk;
pub const EXTI_RTSR1_RT14_Pos: u32 = 14;
pub const EXTI_RTSR1_RT14_Msk: u32 = 0x1 << EXTI_RTSR1_RT14_Pos;
pub const EXTI_RTSR1_RT14: u32 = EXTI_RTSR1_RT14_Msk;
pub const EXTI_RTSR1_RT15_Pos: u32 = 15;
pub const EXTI_RTSR1_RT15_Msk: u32 = 0x1 << EXTI_RTSR1_RT15_Pos;
pub const EXTI_RTSR1_RT15: u32 = EXTI_RTSR1_RT15_Msk;
pub const EXTI_RTSR1_RT16_Pos: u32 = 16;
pub const EXTI_RTSR1_RT16_Msk: u32 = 0x1 << EXTI_RTSR1_RT16_Pos;
pub const EXTI_RTSR1_RT16: u32 = EXTI_RTSR1_RT16_Msk;
pub const EXTI_RTSR1_RT17_Pos: u32 = 17;
pub const EXTI_RTSR1_RT17_Msk: u32 = 0x1 << EXTI_RTSR1_RT17_Pos;
pub const EXTI_RTSR1_RT17: u32 = EXTI_RTSR1_RT17_Msk;
pub const EXTI_RTSR1_RT19_Pos: u32 = 19;
pub const EXTI_RTSR1_RT19_Msk: u32 = 0x1 << EXTI_RTSR1_RT19_Pos;
pub const EXTI_RTSR1_RT19: u32 = EXTI_RTSR1_RT19_Msk;
pub const EXTI_RTSR1_RT20_Pos: u32 = 20;
pub const EXTI_RTSR1_RT20_Msk: u32 = 0x1 << EXTI_RTSR1_RT20_Pos;
pub const EXTI_RTSR1_RT20: u32 = EXTI_RTSR1_RT20_Msk;
pub const EXTI_RTSR1_RT21_Pos: u32 = 21;
pub const EXTI_RTSR1_RT21_Msk: u32 = 0x1 << EXTI_RTSR1_RT21_Pos;
pub const EXTI_RTSR1_RT21: u32 = EXTI_RTSR1_RT21_Msk;
pub const EXTI_RTSR1_RT22_Pos: u32 = 22;
pub const EXTI_RTSR1_RT22_Msk: u32 = 0x1 << EXTI_RTSR1_RT22_Pos;
pub const EXTI_RTSR1_RT22: u32 = EXTI_RTSR1_RT22_Msk;
pub const EXTI_RTSR1_RT29_Pos: u32 = 29;
pub const EXTI_RTSR1_RT29_Msk: u32 = 0x1 << EXTI_RTSR1_RT29_Pos;
pub const EXTI_RTSR1_RT29: u32 = EXTI_RTSR1_RT29_Msk;
pub const EXTI_RTSR1_RT30_Pos: u32 = 30;
pub const EXTI_RTSR1_RT30_Msk: u32 = 0x1 << EXTI_RTSR1_RT30_Pos;
pub const EXTI_RTSR1_RT30: u32 = EXTI_RTSR1_RT30_Msk;
pub const EXTI_FTSR1_FT0_Pos: u32 = 0;
pub const EXTI_FTSR1_FT0_Msk: u32 = 0x1 << EXTI_FTSR1_FT0_Pos;
pub const EXTI_FTSR1_FT0: u32 = EXTI_FTSR1_FT0_Msk;
pub const EXTI_FTSR1_FT1_Pos: u32 = 1;
pub const EXTI_FTSR1_FT1_Msk: u32 = 0x1 << EXTI_FTSR1_FT1_Pos;
pub const EXTI_FTSR1_FT1: u32 = EXTI_FTSR1_FT1_Msk;
pub const EXTI_FTSR1_FT2_Pos: u32 = 2;
pub const EXTI_FTSR1_FT2_Msk: u32 = 0x1 << EXTI_FTSR1_FT2_Pos;
pub const EXTI_FTSR1_FT2: u32 = EXTI_FTSR1_FT2_Msk;
pub const EXTI_FTSR1_FT3_Pos: u32 = 3;
pub const EXTI_FTSR1_FT3_Msk: u32 = 0x1 << EXTI_FTSR1_FT3_Pos;
pub const EXTI_FTSR1_FT3: u32 = EXTI_FTSR1_FT3_Msk;
pub const EXTI_FTSR1_FT4_Pos: u32 = 4;
pub const EXTI_FTSR1_FT4_Msk: u32 = 0x1 << EXTI_FTSR1_FT4_Pos;
pub const EXTI_FTSR1_FT4: u32 = EXTI_FTSR1_FT4_Msk;
pub const EXTI_FTSR1_FT5_Pos: u32 = 5;
pub const EXTI_FTSR1_FT5_Msk: u32 = 0x1 << EXTI_FTSR1_FT5_Pos;
pub const EXTI_FTSR1_FT5: u32 = EXTI_FTSR1_FT5_Msk;
pub const EXTI_FTSR1_FT6_Pos: u32 = 6;
pub const EXTI_FTSR1_FT6_Msk: u32 = 0x1 << EXTI_FTSR1_FT6_Pos;
pub const EXTI_FTSR1_FT6: u32 = EXTI_FTSR1_FT6_Msk;
pub const EXTI_FTSR1_FT7_Pos: u32 = 7;
pub const EXTI_FTSR1_FT7_Msk: u32 = 0x1 << EXTI_FTSR1_FT7_Pos;
pub const EXTI_FTSR1_FT7: u32 = EXTI_FTSR1_FT7_Msk;
pub const EXTI_FTSR1_FT8_Pos: u32 = 8;
pub const EXTI_FTSR1_FT8_Msk: u32 = 0x1 << EXTI_FTSR1_FT8_Pos;
pub const EXTI_FTSR1_FT8: u32 = EXTI_FTSR1_FT8_Msk;
pub const EXTI_FTSR1_FT9_Pos: u32 = 9;
pub const EXTI_FTSR1_FT9_Msk: u32 = 0x1 << EXTI_FTSR1_FT9_Pos;
pub const EXTI_FTSR1_FT9: u32 = EXTI_FTSR1_FT9_Msk;
pub const EXTI_FTSR1_FT10_Pos: u32 = 10;
pub const EXTI_FTSR1_FT10_Msk: u32 = 0x1 << EXTI_FTSR1_FT10_Pos;
pub const EXTI_FTSR1_FT10: u32 = EXTI_FTSR1_FT10_Msk;
pub const EXTI_FTSR1_FT11_Pos: u32 = 11;
pub const EXTI_FTSR1_FT11_Msk: u32 = 0x1 << EXTI_FTSR1_FT11_Pos;
pub const EXTI_FTSR1_FT11: u32 = EXTI_FTSR1_FT11_Msk;
pub const EXTI_FTSR1_FT12_Pos: u32 = 12;
pub const EXTI_FTSR1_FT12_Msk: u32 = 0x1 << EXTI_FTSR1_FT12_Pos;
pub const EXTI_FTSR1_FT12: u32 = EXTI_FTSR1_FT12_Msk;
pub const EXTI_FTSR1_FT13_Pos: u32 = 13;
pub const EXTI_FTSR1_FT13_Msk: u32 = 0x1 << EXTI_FTSR1_FT13_Pos;
pub const EXTI_FTSR1_FT13: u32 = EXTI_FTSR1_FT13_Msk;
pub const EXTI_FTSR1_FT14_Pos: u32 = 14;
pub const EXTI_FTSR1_FT14_Msk: u32 = 0x1 << EXTI_FTSR1_FT14_Pos;
pub const EXTI_FTSR1_FT14: u32 = EXTI_FTSR1_FT14_Msk;
pub const EXTI_FTSR1_FT15_Pos: u32 = 15;
pub const EXTI_FTSR1_FT15_Msk: u32 = 0x1 << EXTI_FTSR1_FT15_Pos;
pub const EXTI_FTSR1_FT15: u32 = EXTI_FTSR1_FT15_Msk;
pub const EXTI_FTSR1_FT16_Pos: u32 = 16;
pub const EXTI_FTSR1_FT16_Msk: u32 = 0x1 << EXTI_FTSR1_FT16_Pos;
pub const EXTI_FTSR1_FT16: u32 = EXTI_FTSR1_FT16_Msk;
pub const EXTI_FTSR1_FT17_Pos: u32 = 17;
pub const EXTI_FTSR1_FT17_Msk: u32 = 0x1 << EXTI_FTSR1_FT17_Pos;
pub const EXTI_FTSR1_FT17: u32 = EXTI_FTSR1_FT17_Msk;
pub const EXTI_FTSR1_FT19_Pos: u32 = 19;
pub const EXTI_FTSR1_FT19_Msk: u32 = 0x1 << EXTI_FTSR1_FT19_Pos;
pub const EXTI_FTSR1_FT19: u32 = EXTI_FTSR1_FT19_Msk;
pub const EXTI_FTSR1_FT20_Pos: u32 = 20;
pub const EXTI_FTSR1_FT20_Msk: u32 = 0x1 << EXTI_FTSR1_FT20_Pos;
pub const EXTI_FTSR1_FT20: u32 = EXTI_FTSR1_FT20_Msk;
pub const EXTI_FTSR1_FT21_Pos: u32 = 21;
pub const EXTI_FTSR1_FT21_Msk: u32 = 0x1 << EXTI_FTSR1_FT21_Pos;
pub const EXTI_FTSR1_FT21: u32 = EXTI_FTSR1_FT21_Msk;
pub const EXTI_FTSR1_FT22_Pos: u32 = 22;
pub const EXTI_FTSR1_FT22_Msk: u32 = 0x1 << EXTI_FTSR1_FT22_Pos;
pub const EXTI_FTSR1_FT22: u32 = EXTI_FTSR1_FT22_Msk;
pub const EXTI_FTSR1_FT29_Pos: u32 = 29;
pub const EXTI_FTSR1_FT29_Msk: u32 = 0x1 << EXTI_FTSR1_FT29_Pos;
pub const EXTI_FTSR1_FT29: u32 = EXTI_FTSR1_FT29_Msk;
pub const EXTI_FTSR1_FT30_Pos: u32 = 30;
pub const EXTI_FTSR1_FT30_Msk: u32 = 0x1 << EXTI_FTSR1_FT30_Pos;
pub const EXTI_FTSR1_FT30: u32 = EXTI_FTSR1_FT30_Msk;
pub const EXTI_SWIER1_SWI0_Pos: u32 = 0;
pub const EXTI_SWIER1_SWI0_Msk: u32 = 0x1 << EXTI_SWIER1_SWI0_Pos;
pub const EXTI_SWIER1_SWI0: u32 = EXTI_SWIER1_SWI0_Msk;
pub const EXTI_SWIER1_SWI1_Pos: u32 = 1;
pub const EXTI_SWIER1_SWI1_Msk: u32 = 0x1 << EXTI_SWIER1_SWI1_Pos;
pub const EXTI_SWIER1_SWI1: u32 = EXTI_SWIER1_SWI1_Msk;
pub const EXTI_SWIER1_SWI2_Pos: u32 = 2;
pub const EXTI_SWIER1_SWI2_Msk: u32 = 0x1 << EXTI_SWIER1_SWI2_Pos;
pub const EXTI_SWIER1_SWI2: u32 = EXTI_SWIER1_SWI2_Msk;
pub const EXTI_SWIER1_SWI3_Pos: u32 = 3;
pub const EXTI_SWIER1_SWI3_Msk: u32 = 0x1 << EXTI_SWIER1_SWI3_Pos;
pub const EXTI_SWIER1_SWI3: u32 = EXTI_SWIER1_SWI3_Msk;
pub const EXTI_SWIER1_SWI4_Pos: u32 = 4;
pub const EXTI_SWIER1_SWI4_Msk: u32 = 0x1 << EXTI_SWIER1_SWI4_Pos;
pub const EXTI_SWIER1_SWI4: u32 = EXTI_SWIER1_SWI4_Msk;
pub const EXTI_SWIER1_SWI5_Pos: u32 = 5;
pub const EXTI_SWIER1_SWI5_Msk: u32 = 0x1 << EXTI_SWIER1_SWI5_Pos;
pub const EXTI_SWIER1_SWI5: u32 = EXTI_SWIER1_SWI5_Msk;
pub const EXTI_SWIER1_SWI6_Pos: u32 = 6;
pub const EXTI_SWIER1_SWI6_Msk: u32 = 0x1 << EXTI_SWIER1_SWI6_Pos;
pub const EXTI_SWIER1_SWI6: u32 = EXTI_SWIER1_SWI6_Msk;
pub const EXTI_SWIER1_SWI7_Pos: u32 = 7;
pub const EXTI_SWIER1_SWI7_Msk: u32 = 0x1 << EXTI_SWIER1_SWI7_Pos;
pub const EXTI_SWIER1_SWI7: u32 = EXTI_SWIER1_SWI7_Msk;
pub const EXTI_SWIER1_SWI8_Pos: u32 = 8;
pub const EXTI_SWIER1_SWI8_Msk: u32 = 0x1 << EXTI_SWIER1_SWI8_Pos;
pub const EXTI_SWIER1_SWI8: u32 = EXTI_SWIER1_SWI8_Msk;
pub const EXTI_SWIER1_SWI9_Pos: u32 = 9;
pub const EXTI_SWIER1_SWI9_Msk: u32 = 0x1 << EXTI_SWIER1_SWI9_Pos;
pub const EXTI_SWIER1_SWI9: u32 = EXTI_SWIER1_SWI9_Msk;
pub const EXTI_SWIER1_SWI10_Pos: u32 = 10;
pub const EXTI_SWIER1_SWI10_Msk: u32 = 0x1 << EXTI_SWIER1_SWI10_Pos;
pub const EXTI_SWIER1_SWI10: u32 = EXTI_SWIER1_SWI10_Msk;
pub const EXTI_SWIER1_SWI11_Pos: u32 = 11;
pub const EXTI_SWIER1_SWI11_Msk: u32 = 0x1 << EXTI_SWIER1_SWI11_Pos;
pub const EXTI_SWIER1_SWI11: u32 = EXTI_SWIER1_SWI11_Msk;
pub const EXTI_SWIER1_SWI12_Pos: u32 = 12;
pub const EXTI_SWIER1_SWI12_Msk: u32 = 0x1 << EXTI_SWIER1_SWI12_Pos;
pub const EXTI_SWIER1_SWI12: u32 = EXTI_SWIER1_SWI12_Msk;
pub const EXTI_SWIER1_SWI13_Pos: u32 = 13;
pub const EXTI_SWIER1_SWI13_Msk: u32 = 0x1 << EXTI_SWIER1_SWI13_Pos;
pub const EXTI_SWIER1_SWI13: u32 = EXTI_SWIER1_SWI13_Msk;
pub const EXTI_SWIER1_SWI14_Pos: u32 = 14;
pub const EXTI_SWIER1_SWI14_Msk: u32 = 0x1 << EXTI_SWIER1_SWI14_Pos;
pub const EXTI_SWIER1_SWI14: u32 = EXTI_SWIER1_SWI14_Msk;
pub const EXTI_SWIER1_SWI15_Pos: u32 = 15;
pub const EXTI_SWIER1_SWI15_Msk: u32 = 0x1 << EXTI_SWIER1_SWI15_Pos;
pub const EXTI_SWIER1_SWI15: u32 = EXTI_SWIER1_SWI15_Msk;
pub const EXTI_SWIER1_SWI16_Pos: u32 = 16;
pub const EXTI_SWIER1_SWI16_Msk: u32 = 0x1 << EXTI_SWIER1_SWI16_Pos;
pub const EXTI_SWIER1_SWI16: u32 = EXTI_SWIER1_SWI16_Msk;
pub const EXTI_SWIER1_SWI17_Pos: u32 = 17;
pub const EXTI_SWIER1_SWI17_Msk: u32 = 0x1 << EXTI_SWIER1_SWI17_Pos;
pub const EXTI_SWIER1_SWI17: u32 = EXTI_SWIER1_SWI17_Msk;
pub const EXTI_SWIER1_SWI19_Pos: u32 = 19;
pub const EXTI_SWIER1_SWI19_Msk: u32 = 0x1 << EXTI_SWIER1_SWI19_Pos;
pub const EXTI_SWIER1_SWI19: u32 = EXTI_SWIER1_SWI19_Msk;
pub const EXTI_SWIER1_SWI20_Pos: u32 = 20;
pub const EXTI_SWIER1_SWI20_Msk: u32 = 0x1 << EXTI_SWIER1_SWI20_Pos;
pub const EXTI_SWIER1_SWI20: u32 = EXTI_SWIER1_SWI20_Msk;
pub const EXTI_SWIER1_SWI21_Pos: u32 = 21;
pub const EXTI_SWIER1_SWI21_Msk: u32 = 0x1 << EXTI_SWIER1_SWI21_Pos;
pub const EXTI_SWIER1_SWI21: u32 = EXTI_SWIER1_SWI21_Msk;
pub const EXTI_SWIER1_SWI22_Pos: u32 = 22;
pub const EXTI_SWIER1_SWI22_Msk: u32 = 0x1 << EXTI_SWIER1_SWI22_Pos;
pub const EXTI_SWIER1_SWI22: u32 = EXTI_SWIER1_SWI22_Msk;
pub const EXTI_SWIER1_SWI29_Pos: u32 = 29;
pub const EXTI_SWIER1_SWI29_Msk: u32 = 0x1 << EXTI_SWIER1_SWI29_Pos;
pub const EXTI_SWIER1_SWI29: u32 = EXTI_SWIER1_SWI29_Msk;
pub const EXTI_SWIER1_SWI30_Pos: u32 = 30;
pub const EXTI_SWIER1_SWI30_Msk: u32 = 0x1 << EXTI_SWIER1_SWI30_Pos;
pub const EXTI_SWIER1_SWI30: u32 = EXTI_SWIER1_SWI30_Msk;
pub const EXTI_PR1_PIF0_Pos: u32 = 0;
pub const EXTI_PR1_PIF0_Msk: u32 = 0x1 << EXTI_PR1_PIF0_Pos;
pub const EXTI_PR1_PIF0: u32 = EXTI_PR1_PIF0_Msk;
pub const EXTI_PR1_PIF1_Pos: u32 = 1;
pub const EXTI_PR1_PIF1_Msk: u32 = 0x1 << EXTI_PR1_PIF1_Pos;
pub const EXTI_PR1_PIF1: u32 = EXTI_PR1_PIF1_Msk;
pub const EXTI_PR1_PIF2_Pos: u32 = 2;
pub const EXTI_PR1_PIF2_Msk: u32 = 0x1 << EXTI_PR1_PIF2_Pos;
pub const EXTI_PR1_PIF2: u32 = EXTI_PR1_PIF2_Msk;
pub const EXTI_PR1_PIF3_Pos: u32 = 3;
pub const EXTI_PR1_PIF3_Msk: u32 = 0x1 << EXTI_PR1_PIF3_Pos;
pub const EXTI_PR1_PIF3: u32 = EXTI_PR1_PIF3_Msk;
pub const EXTI_PR1_PIF4_Pos: u32 = 4;
pub const EXTI_PR1_PIF4_Msk: u32 = 0x1 << EXTI_PR1_PIF4_Pos;
pub const EXTI_PR1_PIF4: u32 = EXTI_PR1_PIF4_Msk;
pub const EXTI_PR1_PIF5_Pos: u32 = 5;
pub const EXTI_PR1_PIF5_Msk: u32 = 0x1 << EXTI_PR1_PIF5_Pos;
pub const EXTI_PR1_PIF5: u32 = EXTI_PR1_PIF5_Msk;
pub const EXTI_PR1_PIF6_Pos: u32 = 6;
pub const EXTI_PR1_PIF6_Msk: u32 = 0x1 << EXTI_PR1_PIF6_Pos;
pub const EXTI_PR1_PIF6: u32 = EXTI_PR1_PIF6_Msk;
pub const EXTI_PR1_PIF7_Pos: u32 = 7;
pub const EXTI_PR1_PIF7_Msk: u32 = 0x1 << EXTI_PR1_PIF7_Pos;
pub const EXTI_PR1_PIF7: u32 = EXTI_PR1_PIF7_Msk;
pub const EXTI_PR1_PIF8_Pos: u32 = 8;
pub const EXTI_PR1_PIF8_Msk: u32 = 0x1 << EXTI_PR1_PIF8_Pos;
pub const EXTI_PR1_PIF8: u32 = EXTI_PR1_PIF8_Msk;
pub const EXTI_PR1_PIF9_Pos: u32 = 9;
pub const EXTI_PR1_PIF9_Msk: u32 = 0x1 << EXTI_PR1_PIF9_Pos;
pub const EXTI_PR1_PIF9: u32 = EXTI_PR1_PIF9_Msk;
pub const EXTI_PR1_PIF10_Pos: u32 = 10;
pub const EXTI_PR1_PIF10_Msk: u32 = 0x1 << EXTI_PR1_PIF10_Pos;
pub const EXTI_PR1_PIF10: u32 = EXTI_PR1_PIF10_Msk;
pub const EXTI_PR1_PIF11_Pos: u32 = 11;
pub const EXTI_PR1_PIF11_Msk: u32 = 0x1 << EXTI_PR1_PIF11_Pos;
pub const EXTI_PR1_PIF11: u32 = EXTI_PR1_PIF11_Msk;
pub const EXTI_PR1_PIF12_Pos: u32 = 12;
pub const EXTI_PR1_PIF12_Msk: u32 = 0x1 << EXTI_PR1_PIF12_Pos;
pub const EXTI_PR1_PIF12: u32 = EXTI_PR1_PIF12_Msk;
pub const EXTI_PR1_PIF13_Pos: u32 = 13;
pub const EXTI_PR1_PIF13_Msk: u32 = 0x1 << EXTI_PR1_PIF13_Pos;
pub const EXTI_PR1_PIF13: u32 = EXTI_PR1_PIF13_Msk;
pub const EXTI_PR1_PIF14_Pos: u32 = 14;
pub const EXTI_PR1_PIF14_Msk: u32 = 0x1 << EXTI_PR1_PIF14_Pos;
pub const EXTI_PR1_PIF14: u32 = EXTI_PR1_PIF14_Msk;
pub const EXTI_PR1_PIF15_Pos: u32 = 15;
pub const EXTI_PR1_PIF15_Msk: u32 = 0x1 << EXTI_PR1_PIF15_Pos;
pub const EXTI_PR1_PIF15: u32 = EXTI_PR1_PIF15_Msk;
pub const EXTI_PR1_PIF16_Pos: u32 = 16;
pub const EXTI_PR1_PIF16_Msk: u32 = 0x1 << EXTI_PR1_PIF16_Pos;
pub const EXTI_PR1_PIF16: u32 = EXTI_PR1_PIF16_Msk;
pub const EXTI_PR1_PIF17_Pos: u32 = 17;
pub const EXTI_PR1_PIF17_Msk: u32 = 0x1 << EXTI_PR1_PIF17_Pos;
pub const EXTI_PR1_PIF17: u32 = EXTI_PR1_PIF17_Msk;
pub const EXTI_PR1_PIF19_Pos: u32 = 19;
pub const EXTI_PR1_PIF19_Msk: u32 = 0x1 << EXTI_PR1_PIF19_Pos;
pub const EXTI_PR1_PIF19: u32 = EXTI_PR1_PIF19_Msk;
pub const EXTI_PR1_PIF20_Pos: u32 = 20;
pub const EXTI_PR1_PIF20_Msk: u32 = 0x1 << EXTI_PR1_PIF20_Pos;
pub const EXTI_PR1_PIF20: u32 = EXTI_PR1_PIF20_Msk;
pub const EXTI_PR1_PIF21_Pos: u32 = 21;
pub const EXTI_PR1_PIF21_Msk: u32 = 0x1 << EXTI_PR1_PIF21_Pos;
pub const EXTI_PR1_PIF21: u32 = EXTI_PR1_PIF21_Msk;
pub const EXTI_PR1_PIF22_Pos: u32 = 22;
pub const EXTI_PR1_PIF22_Msk: u32 = 0x1 << EXTI_PR1_PIF22_Pos;
pub const EXTI_PR1_PIF22: u32 = EXTI_PR1_PIF22_Msk;
pub const EXTI_PR1_PIF29_Pos: u32 = 29;
pub const EXTI_PR1_PIF29_Msk: u32 = 0x1 << EXTI_PR1_PIF29_Pos;
pub const EXTI_PR1_PIF29: u32 = EXTI_PR1_PIF29_Msk;
pub const EXTI_PR1_PIF30_Pos: u32 = 30;
pub const EXTI_PR1_PIF30_Msk: u32 = 0x1 << EXTI_PR1_PIF30_Pos;
pub const EXTI_PR1_PIF30: u32 = EXTI_PR1_PIF30_Msk;
pub const EXTI_IMR2_IM34_Pos: u32 = 2;
pub const EXTI_IMR2_IM34_Msk: u32 = 0x1 << EXTI_IMR2_IM34_Pos;
pub const EXTI_IMR2_IM34: u32 = EXTI_IMR2_IM34_Msk;
pub const EXTI_IMR2_IM35_Pos: u32 = 3;
pub const EXTI_IMR2_IM35_Msk: u32 = 0x1 << EXTI_IMR2_IM35_Pos;
pub const EXTI_IMR2_IM35: u32 = EXTI_IMR2_IM35_Msk;
pub const EXTI_IMR2_IM36_Pos: u32 = 4;
pub const EXTI_IMR2_IM36_Msk: u32 = 0x1 << EXTI_IMR2_IM36_Pos;
pub const EXTI_IMR2_IM36: u32 = EXTI_IMR2_IM36_Msk;
pub const EXTI_IMR2_IM37_Pos: u32 = 5;
pub const EXTI_IMR2_IM37_Msk: u32 = 0x1 << EXTI_IMR2_IM37_Pos;
pub const EXTI_IMR2_IM37: u32 = EXTI_IMR2_IM37_Msk;
pub const EXTI_IMR2_IM38_Pos: u32 = 6;
pub const EXTI_IMR2_IM38_Msk: u32 = 0x1 << EXTI_IMR2_IM38_Pos;
pub const EXTI_IMR2_IM38: u32 = EXTI_IMR2_IM38_Msk;
pub const EXTI_IMR2_IM39_Pos: u32 = 7;
pub const EXTI_IMR2_IM39_Msk: u32 = 0x1 << EXTI_IMR2_IM39_Pos;
pub const EXTI_IMR2_IM39: u32 = EXTI_IMR2_IM39_Msk;
pub const EXTI_IMR2_IM40_Pos: u32 = 8;
pub const EXTI_IMR2_IM40_Msk: u32 = 0x1 << EXTI_IMR2_IM40_Pos;
pub const EXTI_IMR2_IM40: u32 = EXTI_IMR2_IM40_Msk;
pub const EXTI_IMR2_IM41_Pos: u32 = 9;
pub const EXTI_IMR2_IM41_Msk: u32 = 0x1 << EXTI_IMR2_IM41_Pos;
pub const EXTI_IMR2_IM41: u32 = EXTI_IMR2_IM41_Msk;
pub const EXTI_IMR2_IM_Pos: u32 = 0;
pub const EXTI_IMR2_IM_Msk: u32 = 0x2FC << EXTI_IMR2_IM_Pos;
pub const EXTI_IMR2_IM: u32 = EXTI_IMR2_IM_Msk;
pub const EXTI_EMR2_EM34_Pos: u32 = 2;
pub const EXTI_EMR2_EM34_Msk: u32 = 0x1 << EXTI_EMR2_EM34_Pos;
pub const EXTI_EMR2_EM34: u32 = EXTI_EMR2_EM34_Msk;
pub const EXTI_EMR2_EM36_Pos: u32 = 4;
pub const EXTI_EMR2_EM36_Msk: u32 = 0x1 << EXTI_EMR2_EM36_Pos;
pub const EXTI_EMR2_EM36: u32 = EXTI_EMR2_EM36_Msk;
pub const EXTI_EMR2_EM37_Pos: u32 = 5;
pub const EXTI_EMR2_EM37_Msk: u32 = 0x1 << EXTI_EMR2_EM37_Pos;
pub const EXTI_EMR2_EM37: u32 = EXTI_EMR2_EM37_Msk;
pub const EXTI_EMR2_EM38_Pos: u32 = 6;
pub const EXTI_EMR2_EM38_Msk: u32 = 0x1 << EXTI_EMR2_EM38_Pos;
pub const EXTI_EMR2_EM38: u32 = EXTI_EMR2_EM38_Msk;
pub const EXTI_EMR2_EM39_Pos: u32 = 7;
pub const EXTI_EMR2_EM39_Msk: u32 = 0x1 << EXTI_EMR2_EM39_Pos;
pub const EXTI_EMR2_EM39: u32 = EXTI_EMR2_EM39_Msk;
pub const EXTI_EMR2_EM40_Pos: u32 = 8;
pub const EXTI_EMR2_EM40_Msk: u32 = 0x1 << EXTI_EMR2_EM40_Pos;
pub const EXTI_EMR2_EM40: u32 = EXTI_EMR2_EM40_Msk;
pub const EXTI_EMR2_EM41_Pos: u32 = 9;
pub const EXTI_EMR2_EM41_Msk: u32 = 0x1 << EXTI_EMR2_EM41_Pos;
pub const EXTI_EMR2_EM41: u32 = EXTI_EMR2_EM41_Msk;
pub const EXTI_EMR2_EM_Pos: u32 = 0;
pub const EXTI_EMR2_EM_Msk: u32 = 0x2FC << EXTI_EMR2_EM_Pos;
pub const EXTI_EMR2_EM: u32 = EXTI_EMR2_EM_Msk;
pub const EXTI_RTSR2_RT38_Pos: u32 = 6;
pub const EXTI_RTSR2_RT38_Msk: u32 = 0x1 << EXTI_RTSR2_RT38_Pos;
pub const EXTI_RTSR2_RT38: u32 = EXTI_RTSR2_RT38_Msk;
pub const EXTI_RTSR2_RT39_Pos: u32 = 7;
pub const EXTI_RTSR2_RT39_Msk: u32 = 0x1 << EXTI_RTSR2_RT39_Pos;
pub const EXTI_RTSR2_RT39: u32 = EXTI_RTSR2_RT39_Msk;
pub const EXTI_RTSR2_RT40_Pos: u32 = 8;
pub const EXTI_RTSR2_RT40_Msk: u32 = 0x1 << EXTI_RTSR2_RT40_Pos;
pub const EXTI_RTSR2_RT40: u32 = EXTI_RTSR2_RT40_Msk;
pub const EXTI_RTSR2_RT41_Pos: u32 = 9;
pub const EXTI_RTSR2_RT41_Msk: u32 = 0x1 << EXTI_RTSR2_RT41_Pos;
pub const EXTI_RTSR2_RT41: u32 = EXTI_RTSR2_RT41_Msk;
pub const EXTI_FTSR2_FT38_Pos: u32 = 6;
pub const EXTI_FTSR2_FT38_Msk: u32 = 0x1 << EXTI_FTSR2_FT38_Pos;
pub const EXTI_FTSR2_FT38: u32 = EXTI_FTSR2_FT38_Msk;
pub const EXTI_FTSR2_FT39_Pos: u32 = 7;
pub const EXTI_FTSR2_FT39_Msk: u32 = 0x1 << EXTI_FTSR2_FT39_Pos;
pub const EXTI_FTSR2_FT39: u32 = EXTI_FTSR2_FT39_Msk;
pub const EXTI_FTSR2_FT40_Pos: u32 = 8;
pub const EXTI_FTSR2_FT40_Msk: u32 = 0x1 << EXTI_FTSR2_FT40_Pos;
pub const EXTI_FTSR2_FT40: u32 = EXTI_FTSR2_FT40_Msk;
pub const EXTI_FTSR2_FT41_Pos: u32 = 9;
pub const EXTI_FTSR2_FT41_Msk: u32 = 0x1 << EXTI_FTSR2_FT41_Pos;
pub const EXTI_FTSR2_FT41: u32 = EXTI_FTSR2_FT41_Msk;
pub const EXTI_SWIER2_SWI38_Pos: u32 = 6;
pub const EXTI_SWIER2_SWI38_Msk: u32 = 0x1 << EXTI_SWIER2_SWI38_Pos;
pub const EXTI_SWIER2_SWI38: u32 = EXTI_SWIER2_SWI38_Msk;
pub const EXTI_SWIER2_SWI39_Pos: u32 = 7;
pub const EXTI_SWIER2_SWI39_Msk: u32 = 0x1 << EXTI_SWIER2_SWI39_Pos;
pub const EXTI_SWIER2_SWI39: u32 = EXTI_SWIER2_SWI39_Msk;
pub const EXTI_SWIER2_SWI40_Pos: u32 = 8;
pub const EXTI_SWIER2_SWI40_Msk: u32 = 0x1 << EXTI_SWIER2_SWI40_Pos;
pub const EXTI_SWIER2_SWI40: u32 = EXTI_SWIER2_SWI40_Msk;
pub const EXTI_SWIER2_SWI41_Pos: u32 = 9;
pub const EXTI_SWIER2_SWI41_Msk: u32 = 0x1 << EXTI_SWIER2_SWI41_Pos;
pub const EXTI_SWIER2_SWI41: u32 = EXTI_SWIER2_SWI41_Msk;
pub const EXTI_PR2_PIF38_Pos: u32 = 6;
pub const EXTI_PR2_PIF38_Msk: u32 = 0x1 << EXTI_PR2_PIF38_Pos;
pub const EXTI_PR2_PIF38: u32 = EXTI_PR2_PIF38_Msk;
pub const EXTI_PR2_PIF39_Pos: u32 = 7;
pub const EXTI_PR2_PIF39_Msk: u32 = 0x1 << EXTI_PR2_PIF39_Pos;
pub const EXTI_PR2_PIF39: u32 = EXTI_PR2_PIF39_Msk;
pub const EXTI_PR2_PIF40_Pos: u32 = 8;
pub const EXTI_PR2_PIF40_Msk: u32 = 0x1 << EXTI_PR2_PIF40_Pos;
pub const EXTI_PR2_PIF40: u32 = EXTI_PR2_PIF40_Msk;
pub const EXTI_PR2_PIF41_Pos: u32 = 9;
pub const EXTI_PR2_PIF41_Msk: u32 = 0x1 << EXTI_PR2_PIF41_Pos;
pub const EXTI_PR2_PIF41: u32 = EXTI_PR2_PIF41_Msk;
pub const FDCAN_CREL_DAY_Pos: u32 = 0;
pub const FDCAN_CREL_DAY_Msk: u32 = 0xFF << FDCAN_CREL_DAY_Pos;
pub const FDCAN_CREL_DAY: u32 = FDCAN_CREL_DAY_Msk;
pub const FDCAN_CREL_MON_Pos: u32 = 8;
pub const FDCAN_CREL_MON_Msk: u32 = 0xFF << FDCAN_CREL_MON_Pos;
pub const FDCAN_CREL_MON: u32 = FDCAN_CREL_MON_Msk;
pub const FDCAN_CREL_YEAR_Pos: u32 = 16;
pub const FDCAN_CREL_YEAR_Msk: u32 = 0xF << FDCAN_CREL_YEAR_Pos;
pub const FDCAN_CREL_YEAR: u32 = FDCAN_CREL_YEAR_Msk;
pub const FDCAN_CREL_SUBSTEP_Pos: u32 = 20;
pub const FDCAN_CREL_SUBSTEP_Msk: u32 = 0xF << FDCAN_CREL_SUBSTEP_Pos;
pub const FDCAN_CREL_SUBSTEP: u32 = FDCAN_CREL_SUBSTEP_Msk;
pub const FDCAN_CREL_STEP_Pos: u32 = 24;
pub const FDCAN_CREL_STEP_Msk: u32 = 0xF << FDCAN_CREL_STEP_Pos;
pub const FDCAN_CREL_STEP: u32 = FDCAN_CREL_STEP_Msk;
pub const FDCAN_CREL_REL_Pos: u32 = 28;
pub const FDCAN_CREL_REL_Msk: u32 = 0xF << FDCAN_CREL_REL_Pos;
pub const FDCAN_CREL_REL: u32 = FDCAN_CREL_REL_Msk;
pub const FDCAN_ENDN_ETV_Pos: u32 = 0;
pub const FDCAN_ENDN_ETV_Msk: u32 = 0xFFFFFFFF << FDCAN_ENDN_ETV_Pos;
pub const FDCAN_ENDN_ETV: u32 = FDCAN_ENDN_ETV_Msk;
pub const FDCAN_DBTP_DSJW_Pos: u32 = 0;
pub const FDCAN_DBTP_DSJW_Msk: u32 = 0xF << FDCAN_DBTP_DSJW_Pos;
pub const FDCAN_DBTP_DSJW: u32 = FDCAN_DBTP_DSJW_Msk;
pub const FDCAN_DBTP_DTSEG2_Pos: u32 = 4;
pub const FDCAN_DBTP_DTSEG2_Msk: u32 = 0xF << FDCAN_DBTP_DTSEG2_Pos;
pub const FDCAN_DBTP_DTSEG2: u32 = FDCAN_DBTP_DTSEG2_Msk;
pub const FDCAN_DBTP_DTSEG1_Pos: u32 = 8;
pub const FDCAN_DBTP_DTSEG1_Msk: u32 = 0x1F << FDCAN_DBTP_DTSEG1_Pos;
pub const FDCAN_DBTP_DTSEG1: u32 = FDCAN_DBTP_DTSEG1_Msk;
pub const FDCAN_DBTP_DBRP_Pos: u32 = 16;
pub const FDCAN_DBTP_DBRP_Msk: u32 = 0x1F << FDCAN_DBTP_DBRP_Pos;
pub const FDCAN_DBTP_DBRP: u32 = FDCAN_DBTP_DBRP_Msk;
pub const FDCAN_DBTP_TDC_Pos: u32 = 23;
pub const FDCAN_DBTP_TDC_Msk: u32 = 0x1 << FDCAN_DBTP_TDC_Pos;
pub const FDCAN_DBTP_TDC: u32 = FDCAN_DBTP_TDC_Msk;
pub const FDCAN_TEST_LBCK_Pos: u32 = 4;
pub const FDCAN_TEST_LBCK_Msk: u32 = 0x1 << FDCAN_TEST_LBCK_Pos;
pub const FDCAN_TEST_LBCK: u32 = FDCAN_TEST_LBCK_Msk;
pub const FDCAN_TEST_TX_Pos: u32 = 5;
pub const FDCAN_TEST_TX_Msk: u32 = 0x3 << FDCAN_TEST_TX_Pos;
pub const FDCAN_TEST_TX: u32 = FDCAN_TEST_TX_Msk;
pub const FDCAN_TEST_RX_Pos: u32 = 7;
pub const FDCAN_TEST_RX_Msk: u32 = 0x1 << FDCAN_TEST_RX_Pos;
pub const FDCAN_TEST_RX: u32 = FDCAN_TEST_RX_Msk;
pub const FDCAN_RWD_WDC_Pos: u32 = 0;
pub const FDCAN_RWD_WDC_Msk: u32 = 0xFF << FDCAN_RWD_WDC_Pos;
pub const FDCAN_RWD_WDC: u32 = FDCAN_RWD_WDC_Msk;
pub const FDCAN_RWD_WDV_Pos: u32 = 8;
pub const FDCAN_RWD_WDV_Msk: u32 = 0xFF << FDCAN_RWD_WDV_Pos;
pub const FDCAN_RWD_WDV: u32 = FDCAN_RWD_WDV_Msk;
pub const FDCAN_CCCR_INIT_Pos: u32 = 0;
pub const FDCAN_CCCR_INIT_Msk: u32 = 0x1 << FDCAN_CCCR_INIT_Pos;
pub const FDCAN_CCCR_INIT: u32 = FDCAN_CCCR_INIT_Msk;
pub const FDCAN_CCCR_CCE_Pos: u32 = 1;
pub const FDCAN_CCCR_CCE_Msk: u32 = 0x1 << FDCAN_CCCR_CCE_Pos;
pub const FDCAN_CCCR_CCE: u32 = FDCAN_CCCR_CCE_Msk;
pub const FDCAN_CCCR_ASM_Pos: u32 = 2;
pub const FDCAN_CCCR_ASM_Msk: u32 = 0x1 << FDCAN_CCCR_ASM_Pos;
pub const FDCAN_CCCR_ASM: u32 = FDCAN_CCCR_ASM_Msk;
pub const FDCAN_CCCR_CSA_Pos: u32 = 3;
pub const FDCAN_CCCR_CSA_Msk: u32 = 0x1 << FDCAN_CCCR_CSA_Pos;
pub const FDCAN_CCCR_CSA: u32 = FDCAN_CCCR_CSA_Msk;
pub const FDCAN_CCCR_CSR_Pos: u32 = 4;
pub const FDCAN_CCCR_CSR_Msk: u32 = 0x1 << FDCAN_CCCR_CSR_Pos;
pub const FDCAN_CCCR_CSR: u32 = FDCAN_CCCR_CSR_Msk;
pub const FDCAN_CCCR_MON_Pos: u32 = 5;
pub const FDCAN_CCCR_MON_Msk: u32 = 0x1 << FDCAN_CCCR_MON_Pos;
pub const FDCAN_CCCR_MON: u32 = FDCAN_CCCR_MON_Msk;
pub const FDCAN_CCCR_DAR_Pos: u32 = 6;
pub const FDCAN_CCCR_DAR_Msk: u32 = 0x1 << FDCAN_CCCR_DAR_Pos;
pub const FDCAN_CCCR_DAR: u32 = FDCAN_CCCR_DAR_Msk;
pub const FDCAN_CCCR_TEST_Pos: u32 = 7;
pub const FDCAN_CCCR_TEST_Msk: u32 = 0x1 << FDCAN_CCCR_TEST_Pos;
pub const FDCAN_CCCR_TEST: u32 = FDCAN_CCCR_TEST_Msk;
pub const FDCAN_CCCR_FDOE_Pos: u32 = 8;
pub const FDCAN_CCCR_FDOE_Msk: u32 = 0x1 << FDCAN_CCCR_FDOE_Pos;
pub const FDCAN_CCCR_FDOE: u32 = FDCAN_CCCR_FDOE_Msk;
pub const FDCAN_CCCR_BRSE_Pos: u32 = 9;
pub const FDCAN_CCCR_BRSE_Msk: u32 = 0x1 << FDCAN_CCCR_BRSE_Pos;
pub const FDCAN_CCCR_BRSE: u32 = FDCAN_CCCR_BRSE_Msk;
pub const FDCAN_CCCR_PXHD_Pos: u32 = 12;
pub const FDCAN_CCCR_PXHD_Msk: u32 = 0x1 << FDCAN_CCCR_PXHD_Pos;
pub const FDCAN_CCCR_PXHD: u32 = FDCAN_CCCR_PXHD_Msk;
pub const FDCAN_CCCR_EFBI_Pos: u32 = 13;
pub const FDCAN_CCCR_EFBI_Msk: u32 = 0x1 << FDCAN_CCCR_EFBI_Pos;
pub const FDCAN_CCCR_EFBI: u32 = FDCAN_CCCR_EFBI_Msk;
pub const FDCAN_CCCR_TXP_Pos: u32 = 14;
pub const FDCAN_CCCR_TXP_Msk: u32 = 0x1 << FDCAN_CCCR_TXP_Pos;
pub const FDCAN_CCCR_TXP: u32 = FDCAN_CCCR_TXP_Msk;
pub const FDCAN_CCCR_NISO_Pos: u32 = 15;
pub const FDCAN_CCCR_NISO_Msk: u32 = 0x1 << FDCAN_CCCR_NISO_Pos;
pub const FDCAN_CCCR_NISO: u32 = FDCAN_CCCR_NISO_Msk;
pub const FDCAN_NBTP_NTSEG2_Pos: u32 = 0;
pub const FDCAN_NBTP_NTSEG2_Msk: u32 = 0x7F << FDCAN_NBTP_NTSEG2_Pos;
pub const FDCAN_NBTP_NTSEG2: u32 = FDCAN_NBTP_NTSEG2_Msk;
pub const FDCAN_NBTP_NTSEG1_Pos: u32 = 8;
pub const FDCAN_NBTP_NTSEG1_Msk: u32 = 0xFF << FDCAN_NBTP_NTSEG1_Pos;
pub const FDCAN_NBTP_NTSEG1: u32 = FDCAN_NBTP_NTSEG1_Msk;
pub const FDCAN_NBTP_NBRP_Pos: u32 = 16;
pub const FDCAN_NBTP_NBRP_Msk: u32 = 0x1FF << FDCAN_NBTP_NBRP_Pos;
pub const FDCAN_NBTP_NBRP: u32 = FDCAN_NBTP_NBRP_Msk;
pub const FDCAN_NBTP_NSJW_Pos: u32 = 25;
pub const FDCAN_NBTP_NSJW_Msk: u32 = 0x7F << FDCAN_NBTP_NSJW_Pos;
pub const FDCAN_NBTP_NSJW: u32 = FDCAN_NBTP_NSJW_Msk;
pub const FDCAN_TSCC_TSS_Pos: u32 = 0;
pub const FDCAN_TSCC_TSS_Msk: u32 = 0x3 << FDCAN_TSCC_TSS_Pos;
pub const FDCAN_TSCC_TSS: u32 = FDCAN_TSCC_TSS_Msk;
pub const FDCAN_TSCC_TCP_Pos: u32 = 16;
pub const FDCAN_TSCC_TCP_Msk: u32 = 0xF << FDCAN_TSCC_TCP_Pos;
pub const FDCAN_TSCC_TCP: u32 = FDCAN_TSCC_TCP_Msk;
pub const FDCAN_TSCV_TSC_Pos: u32 = 0;
pub const FDCAN_TSCV_TSC_Msk: u32 = 0xFFFF << FDCAN_TSCV_TSC_Pos;
pub const FDCAN_TSCV_TSC: u32 = FDCAN_TSCV_TSC_Msk;
pub const FDCAN_TOCC_ETOC_Pos: u32 = 0;
pub const FDCAN_TOCC_ETOC_Msk: u32 = 0x1 << FDCAN_TOCC_ETOC_Pos;
pub const FDCAN_TOCC_ETOC: u32 = FDCAN_TOCC_ETOC_Msk;
pub const FDCAN_TOCC_TOS_Pos: u32 = 1;
pub const FDCAN_TOCC_TOS_Msk: u32 = 0x3 << FDCAN_TOCC_TOS_Pos;
pub const FDCAN_TOCC_TOS: u32 = FDCAN_TOCC_TOS_Msk;
pub const FDCAN_TOCC_TOP_Pos: u32 = 16;
pub const FDCAN_TOCC_TOP_Msk: u32 = 0xFFFF << FDCAN_TOCC_TOP_Pos;
pub const FDCAN_TOCC_TOP: u32 = FDCAN_TOCC_TOP_Msk;
pub const FDCAN_TOCV_TOC_Pos: u32 = 0;
pub const FDCAN_TOCV_TOC_Msk: u32 = 0xFFFF << FDCAN_TOCV_TOC_Pos;
pub const FDCAN_TOCV_TOC: u32 = FDCAN_TOCV_TOC_Msk;
pub const FDCAN_ECR_TEC_Pos: u32 = 0;
pub const FDCAN_ECR_TEC_Msk: u32 = 0xFF << FDCAN_ECR_TEC_Pos;
pub const FDCAN_ECR_TEC: u32 = FDCAN_ECR_TEC_Msk;
pub const FDCAN_ECR_REC_Pos: u32 = 8;
pub const FDCAN_ECR_REC_Msk: u32 = 0x7F << FDCAN_ECR_REC_Pos;
pub const FDCAN_ECR_REC: u32 = FDCAN_ECR_REC_Msk;
pub const FDCAN_ECR_RP_Pos: u32 = 15;
pub const FDCAN_ECR_RP_Msk: u32 = 0x1 << FDCAN_ECR_RP_Pos;
pub const FDCAN_ECR_RP: u32 = FDCAN_ECR_RP_Msk;
pub const FDCAN_ECR_CEL_Pos: u32 = 16;
pub const FDCAN_ECR_CEL_Msk: u32 = 0xFF << FDCAN_ECR_CEL_Pos;
pub const FDCAN_ECR_CEL: u32 = FDCAN_ECR_CEL_Msk;
pub const FDCAN_PSR_LEC_Pos: u32 = 0;
pub const FDCAN_PSR_LEC_Msk: u32 = 0x7 << FDCAN_PSR_LEC_Pos;
pub const FDCAN_PSR_LEC: u32 = FDCAN_PSR_LEC_Msk;
pub const FDCAN_PSR_ACT_Pos: u32 = 3;
pub const FDCAN_PSR_ACT_Msk: u32 = 0x3 << FDCAN_PSR_ACT_Pos;
pub const FDCAN_PSR_ACT: u32 = FDCAN_PSR_ACT_Msk;
pub const FDCAN_PSR_EP_Pos: u32 = 5;
pub const FDCAN_PSR_EP_Msk: u32 = 0x1 << FDCAN_PSR_EP_Pos;
pub const FDCAN_PSR_EP: u32 = FDCAN_PSR_EP_Msk;
pub const FDCAN_PSR_EW_Pos: u32 = 6;
pub const FDCAN_PSR_EW_Msk: u32 = 0x1 << FDCAN_PSR_EW_Pos;
pub const FDCAN_PSR_EW: u32 = FDCAN_PSR_EW_Msk;
pub const FDCAN_PSR_BO_Pos: u32 = 7;
pub const FDCAN_PSR_BO_Msk: u32 = 0x1 << FDCAN_PSR_BO_Pos;
pub const FDCAN_PSR_BO: u32 = FDCAN_PSR_BO_Msk;
pub const FDCAN_PSR_DLEC_Pos: u32 = 8;
pub const FDCAN_PSR_DLEC_Msk: u32 = 0x7 << FDCAN_PSR_DLEC_Pos;
pub const FDCAN_PSR_DLEC: u32 = FDCAN_PSR_DLEC_Msk;
pub const FDCAN_PSR_RESI_Pos: u32 = 11;
pub const FDCAN_PSR_RESI_Msk: u32 = 0x1 << FDCAN_PSR_RESI_Pos;
pub const FDCAN_PSR_RESI: u32 = FDCAN_PSR_RESI_Msk;
pub const FDCAN_PSR_RBRS_Pos: u32 = 12;
pub const FDCAN_PSR_RBRS_Msk: u32 = 0x1 << FDCAN_PSR_RBRS_Pos;
pub const FDCAN_PSR_RBRS: u32 = FDCAN_PSR_RBRS_Msk;
pub const FDCAN_PSR_REDL_Pos: u32 = 13;
pub const FDCAN_PSR_REDL_Msk: u32 = 0x1 << FDCAN_PSR_REDL_Pos;
pub const FDCAN_PSR_REDL: u32 = FDCAN_PSR_REDL_Msk;
pub const FDCAN_PSR_PXE_Pos: u32 = 14;
pub const FDCAN_PSR_PXE_Msk: u32 = 0x1 << FDCAN_PSR_PXE_Pos;
pub const FDCAN_PSR_PXE: u32 = FDCAN_PSR_PXE_Msk;
pub const FDCAN_PSR_TDCV_Pos: u32 = 16;
pub const FDCAN_PSR_TDCV_Msk: u32 = 0x7F << FDCAN_PSR_TDCV_Pos;
pub const FDCAN_PSR_TDCV: u32 = FDCAN_PSR_TDCV_Msk;
pub const FDCAN_TDCR_TDCF_Pos: u32 = 0;
pub const FDCAN_TDCR_TDCF_Msk: u32 = 0x7F << FDCAN_TDCR_TDCF_Pos;
pub const FDCAN_TDCR_TDCF: u32 = FDCAN_TDCR_TDCF_Msk;
pub const FDCAN_TDCR_TDCO_Pos: u32 = 8;
pub const FDCAN_TDCR_TDCO_Msk: u32 = 0x7F << FDCAN_TDCR_TDCO_Pos;
pub const FDCAN_TDCR_TDCO: u32 = FDCAN_TDCR_TDCO_Msk;
pub const FDCAN_IR_RF0N_Pos: u32 = 0;
pub const FDCAN_IR_RF0N_Msk: u32 = 0x1 << FDCAN_IR_RF0N_Pos;
pub const FDCAN_IR_RF0N: u32 = FDCAN_IR_RF0N_Msk;
pub const FDCAN_IR_RF0F_Pos: u32 = 1;
pub const FDCAN_IR_RF0F_Msk: u32 = 0x1 << FDCAN_IR_RF0F_Pos;
pub const FDCAN_IR_RF0F: u32 = FDCAN_IR_RF0F_Msk;
pub const FDCAN_IR_RF0L_Pos: u32 = 2;
pub const FDCAN_IR_RF0L_Msk: u32 = 0x1 << FDCAN_IR_RF0L_Pos;
pub const FDCAN_IR_RF0L: u32 = FDCAN_IR_RF0L_Msk;
pub const FDCAN_IR_RF1N_Pos: u32 = 3;
pub const FDCAN_IR_RF1N_Msk: u32 = 0x1 << FDCAN_IR_RF1N_Pos;
pub const FDCAN_IR_RF1N: u32 = FDCAN_IR_RF1N_Msk;
pub const FDCAN_IR_RF1F_Pos: u32 = 4;
pub const FDCAN_IR_RF1F_Msk: u32 = 0x1 << FDCAN_IR_RF1F_Pos;
pub const FDCAN_IR_RF1F: u32 = FDCAN_IR_RF1F_Msk;
pub const FDCAN_IR_RF1L_Pos: u32 = 5;
pub const FDCAN_IR_RF1L_Msk: u32 = 0x1 << FDCAN_IR_RF1L_Pos;
pub const FDCAN_IR_RF1L: u32 = FDCAN_IR_RF1L_Msk;
pub const FDCAN_IR_HPM_Pos: u32 = 6;
pub const FDCAN_IR_HPM_Msk: u32 = 0x1 << FDCAN_IR_HPM_Pos;
pub const FDCAN_IR_HPM: u32 = FDCAN_IR_HPM_Msk;
pub const FDCAN_IR_TC_Pos: u32 = 7;
pub const FDCAN_IR_TC_Msk: u32 = 0x1 << FDCAN_IR_TC_Pos;
pub const FDCAN_IR_TC: u32 = FDCAN_IR_TC_Msk;
pub const FDCAN_IR_TCF_Pos: u32 = 8;
pub const FDCAN_IR_TCF_Msk: u32 = 0x1 << FDCAN_IR_TCF_Pos;
pub const FDCAN_IR_TCF: u32 = FDCAN_IR_TCF_Msk;
pub const FDCAN_IR_TFE_Pos: u32 = 9;
pub const FDCAN_IR_TFE_Msk: u32 = 0x1 << FDCAN_IR_TFE_Pos;
pub const FDCAN_IR_TFE: u32 = FDCAN_IR_TFE_Msk;
pub const FDCAN_IR_TEFN_Pos: u32 = 10;
pub const FDCAN_IR_TEFN_Msk: u32 = 0x1 << FDCAN_IR_TEFN_Pos;
pub const FDCAN_IR_TEFN: u32 = FDCAN_IR_TEFN_Msk;
pub const FDCAN_IR_TEFF_Pos: u32 = 11;
pub const FDCAN_IR_TEFF_Msk: u32 = 0x1 << FDCAN_IR_TEFF_Pos;
pub const FDCAN_IR_TEFF: u32 = FDCAN_IR_TEFF_Msk;
pub const FDCAN_IR_TEFL_Pos: u32 = 12;
pub const FDCAN_IR_TEFL_Msk: u32 = 0x1 << FDCAN_IR_TEFL_Pos;
pub const FDCAN_IR_TEFL: u32 = FDCAN_IR_TEFL_Msk;
pub const FDCAN_IR_TSW_Pos: u32 = 13;
pub const FDCAN_IR_TSW_Msk: u32 = 0x1 << FDCAN_IR_TSW_Pos;
pub const FDCAN_IR_TSW: u32 = FDCAN_IR_TSW_Msk;
pub const FDCAN_IR_MRAF_Pos: u32 = 14;
pub const FDCAN_IR_MRAF_Msk: u32 = 0x1 << FDCAN_IR_MRAF_Pos;
pub const FDCAN_IR_MRAF: u32 = FDCAN_IR_MRAF_Msk;
pub const FDCAN_IR_TOO_Pos: u32 = 15;
pub const FDCAN_IR_TOO_Msk: u32 = 0x1 << FDCAN_IR_TOO_Pos;
pub const FDCAN_IR_TOO: u32 = FDCAN_IR_TOO_Msk;
pub const FDCAN_IR_ELO_Pos: u32 = 16;
pub const FDCAN_IR_ELO_Msk: u32 = 0x1 << FDCAN_IR_ELO_Pos;
pub const FDCAN_IR_ELO: u32 = FDCAN_IR_ELO_Msk;
pub const FDCAN_IR_EP_Pos: u32 = 17;
pub const FDCAN_IR_EP_Msk: u32 = 0x1 << FDCAN_IR_EP_Pos;
pub const FDCAN_IR_EP: u32 = FDCAN_IR_EP_Msk;
pub const FDCAN_IR_EW_Pos: u32 = 18;
pub const FDCAN_IR_EW_Msk: u32 = 0x1 << FDCAN_IR_EW_Pos;
pub const FDCAN_IR_EW: u32 = FDCAN_IR_EW_Msk;
pub const FDCAN_IR_BO_Pos: u32 = 19;
pub const FDCAN_IR_BO_Msk: u32 = 0x1 << FDCAN_IR_BO_Pos;
pub const FDCAN_IR_BO: u32 = FDCAN_IR_BO_Msk;
pub const FDCAN_IR_WDI_Pos: u32 = 20;
pub const FDCAN_IR_WDI_Msk: u32 = 0x1 << FDCAN_IR_WDI_Pos;
pub const FDCAN_IR_WDI: u32 = FDCAN_IR_WDI_Msk;
pub const FDCAN_IR_PEA_Pos: u32 = 21;
pub const FDCAN_IR_PEA_Msk: u32 = 0x1 << FDCAN_IR_PEA_Pos;
pub const FDCAN_IR_PEA: u32 = FDCAN_IR_PEA_Msk;
pub const FDCAN_IR_PED_Pos: u32 = 22;
pub const FDCAN_IR_PED_Msk: u32 = 0x1 << FDCAN_IR_PED_Pos;
pub const FDCAN_IR_PED: u32 = FDCAN_IR_PED_Msk;
pub const FDCAN_IR_ARA_Pos: u32 = 23;
pub const FDCAN_IR_ARA_Msk: u32 = 0x1 << FDCAN_IR_ARA_Pos;
pub const FDCAN_IR_ARA: u32 = FDCAN_IR_ARA_Msk;
pub const FDCAN_IE_RF0NE_Pos: u32 = 0;
pub const FDCAN_IE_RF0NE_Msk: u32 = 0x1 << FDCAN_IE_RF0NE_Pos;
pub const FDCAN_IE_RF0NE: u32 = FDCAN_IE_RF0NE_Msk;
pub const FDCAN_IE_RF0FE_Pos: u32 = 1;
pub const FDCAN_IE_RF0FE_Msk: u32 = 0x1 << FDCAN_IE_RF0FE_Pos;
pub const FDCAN_IE_RF0FE: u32 = FDCAN_IE_RF0FE_Msk;
pub const FDCAN_IE_RF0LE_Pos: u32 = 2;
pub const FDCAN_IE_RF0LE_Msk: u32 = 0x1 << FDCAN_IE_RF0LE_Pos;
pub const FDCAN_IE_RF0LE: u32 = FDCAN_IE_RF0LE_Msk;
pub const FDCAN_IE_RF1NE_Pos: u32 = 3;
pub const FDCAN_IE_RF1NE_Msk: u32 = 0x1 << FDCAN_IE_RF1NE_Pos;
pub const FDCAN_IE_RF1NE: u32 = FDCAN_IE_RF1NE_Msk;
pub const FDCAN_IE_RF1FE_Pos: u32 = 4;
pub const FDCAN_IE_RF1FE_Msk: u32 = 0x1 << FDCAN_IE_RF1FE_Pos;
pub const FDCAN_IE_RF1FE: u32 = FDCAN_IE_RF1FE_Msk;
pub const FDCAN_IE_RF1LE_Pos: u32 = 5;
pub const FDCAN_IE_RF1LE_Msk: u32 = 0x1 << FDCAN_IE_RF1LE_Pos;
pub const FDCAN_IE_RF1LE: u32 = FDCAN_IE_RF1LE_Msk;
pub const FDCAN_IE_HPME_Pos: u32 = 6;
pub const FDCAN_IE_HPME_Msk: u32 = 0x1 << FDCAN_IE_HPME_Pos;
pub const FDCAN_IE_HPME: u32 = FDCAN_IE_HPME_Msk;
pub const FDCAN_IE_TCE_Pos: u32 = 7;
pub const FDCAN_IE_TCE_Msk: u32 = 0x1 << FDCAN_IE_TCE_Pos;
pub const FDCAN_IE_TCE: u32 = FDCAN_IE_TCE_Msk;
pub const FDCAN_IE_TCFE_Pos: u32 = 8;
pub const FDCAN_IE_TCFE_Msk: u32 = 0x1 << FDCAN_IE_TCFE_Pos;
pub const FDCAN_IE_TCFE: u32 = FDCAN_IE_TCFE_Msk;
pub const FDCAN_IE_TFEE_Pos: u32 = 9;
pub const FDCAN_IE_TFEE_Msk: u32 = 0x1 << FDCAN_IE_TFEE_Pos;
pub const FDCAN_IE_TFEE: u32 = FDCAN_IE_TFEE_Msk;
pub const FDCAN_IE_TEFNE_Pos: u32 = 10;
pub const FDCAN_IE_TEFNE_Msk: u32 = 0x1 << FDCAN_IE_TEFNE_Pos;
pub const FDCAN_IE_TEFNE: u32 = FDCAN_IE_TEFNE_Msk;
pub const FDCAN_IE_TEFFE_Pos: u32 = 11;
pub const FDCAN_IE_TEFFE_Msk: u32 = 0x1 << FDCAN_IE_TEFFE_Pos;
pub const FDCAN_IE_TEFFE: u32 = FDCAN_IE_TEFFE_Msk;
pub const FDCAN_IE_TEFLE_Pos: u32 = 12;
pub const FDCAN_IE_TEFLE_Msk: u32 = 0x1 << FDCAN_IE_TEFLE_Pos;
pub const FDCAN_IE_TEFLE: u32 = FDCAN_IE_TEFLE_Msk;
pub const FDCAN_IE_TSWE_Pos: u32 = 13;
pub const FDCAN_IE_TSWE_Msk: u32 = 0x1 << FDCAN_IE_TSWE_Pos;
pub const FDCAN_IE_TSWE: u32 = FDCAN_IE_TSWE_Msk;
pub const FDCAN_IE_MRAFE_Pos: u32 = 14;
pub const FDCAN_IE_MRAFE_Msk: u32 = 0x1 << FDCAN_IE_MRAFE_Pos;
pub const FDCAN_IE_MRAFE: u32 = FDCAN_IE_MRAFE_Msk;
pub const FDCAN_IE_TOOE_Pos: u32 = 15;
pub const FDCAN_IE_TOOE_Msk: u32 = 0x1 << FDCAN_IE_TOOE_Pos;
pub const FDCAN_IE_TOOE: u32 = FDCAN_IE_TOOE_Msk;
pub const FDCAN_IE_ELOE_Pos: u32 = 16;
pub const FDCAN_IE_ELOE_Msk: u32 = 0x1 << FDCAN_IE_ELOE_Pos;
pub const FDCAN_IE_ELOE: u32 = FDCAN_IE_ELOE_Msk;
pub const FDCAN_IE_EPE_Pos: u32 = 17;
pub const FDCAN_IE_EPE_Msk: u32 = 0x1 << FDCAN_IE_EPE_Pos;
pub const FDCAN_IE_EPE: u32 = FDCAN_IE_EPE_Msk;
pub const FDCAN_IE_EWE_Pos: u32 = 18;
pub const FDCAN_IE_EWE_Msk: u32 = 0x1 << FDCAN_IE_EWE_Pos;
pub const FDCAN_IE_EWE: u32 = FDCAN_IE_EWE_Msk;
pub const FDCAN_IE_BOE_Pos: u32 = 19;
pub const FDCAN_IE_BOE_Msk: u32 = 0x1 << FDCAN_IE_BOE_Pos;
pub const FDCAN_IE_BOE: u32 = FDCAN_IE_BOE_Msk;
pub const FDCAN_IE_WDIE_Pos: u32 = 20;
pub const FDCAN_IE_WDIE_Msk: u32 = 0x1 << FDCAN_IE_WDIE_Pos;
pub const FDCAN_IE_WDIE: u32 = FDCAN_IE_WDIE_Msk;
pub const FDCAN_IE_PEAE_Pos: u32 = 21;
pub const FDCAN_IE_PEAE_Msk: u32 = 0x1 << FDCAN_IE_PEAE_Pos;
pub const FDCAN_IE_PEAE: u32 = FDCAN_IE_PEAE_Msk;
pub const FDCAN_IE_PEDE_Pos: u32 = 22;
pub const FDCAN_IE_PEDE_Msk: u32 = 0x1 << FDCAN_IE_PEDE_Pos;
pub const FDCAN_IE_PEDE: u32 = FDCAN_IE_PEDE_Msk;
pub const FDCAN_IE_ARAE_Pos: u32 = 23;
pub const FDCAN_IE_ARAE_Msk: u32 = 0x1 << FDCAN_IE_ARAE_Pos;
pub const FDCAN_IE_ARAE: u32 = FDCAN_IE_ARAE_Msk;
pub const FDCAN_ILS_RXFIFO0_Pos: u32 = 0;
pub const FDCAN_ILS_RXFIFO0_Msk: u32 = 0x1 << FDCAN_ILS_RXFIFO0_Pos;
pub const FDCAN_ILS_RXFIFO0: u32 = FDCAN_ILS_RXFIFO0_Msk;
pub const FDCAN_ILS_RXFIFO1_Pos: u32 = 1;
pub const FDCAN_ILS_RXFIFO1_Msk: u32 = 0x1 << FDCAN_ILS_RXFIFO1_Pos;
pub const FDCAN_ILS_RXFIFO1: u32 = FDCAN_ILS_RXFIFO1_Msk;
pub const FDCAN_ILS_SMSG_Pos: u32 = 2;
pub const FDCAN_ILS_SMSG_Msk: u32 = 0x1 << FDCAN_ILS_SMSG_Pos;
pub const FDCAN_ILS_SMSG: u32 = FDCAN_ILS_SMSG_Msk;
pub const FDCAN_ILS_TFERR_Pos: u32 = 3;
pub const FDCAN_ILS_TFERR_Msk: u32 = 0x1 << FDCAN_ILS_TFERR_Pos;
pub const FDCAN_ILS_TFERR: u32 = FDCAN_ILS_TFERR_Msk;
pub const FDCAN_ILS_MISC_Pos: u32 = 4;
pub const FDCAN_ILS_MISC_Msk: u32 = 0x1 << FDCAN_ILS_MISC_Pos;
pub const FDCAN_ILS_MISC: u32 = FDCAN_ILS_MISC_Msk;
pub const FDCAN_ILS_BERR_Pos: u32 = 5;
pub const FDCAN_ILS_BERR_Msk: u32 = 0x1 << FDCAN_ILS_BERR_Pos;
pub const FDCAN_ILS_BERR: u32 = FDCAN_ILS_BERR_Msk;
pub const FDCAN_ILS_PERR_Pos: u32 = 6;
pub const FDCAN_ILS_PERR_Msk: u32 = 0x1 << FDCAN_ILS_PERR_Pos;
pub const FDCAN_ILS_PERR: u32 = FDCAN_ILS_PERR_Msk;
pub const FDCAN_ILE_EINT0_Pos: u32 = 0;
pub const FDCAN_ILE_EINT0_Msk: u32 = 0x1 << FDCAN_ILE_EINT0_Pos;
pub const FDCAN_ILE_EINT0: u32 = FDCAN_ILE_EINT0_Msk;
pub const FDCAN_ILE_EINT1_Pos: u32 = 1;
pub const FDCAN_ILE_EINT1_Msk: u32 = 0x1 << FDCAN_ILE_EINT1_Pos;
pub const FDCAN_ILE_EINT1: u32 = FDCAN_ILE_EINT1_Msk;
pub const FDCAN_RXGFC_RRFE_Pos: u32 = 0;
pub const FDCAN_RXGFC_RRFE_Msk: u32 = 0x1 << FDCAN_RXGFC_RRFE_Pos;
pub const FDCAN_RXGFC_RRFE: u32 = FDCAN_RXGFC_RRFE_Msk;
pub const FDCAN_RXGFC_RRFS_Pos: u32 = 1;
pub const FDCAN_RXGFC_RRFS_Msk: u32 = 0x1 << FDCAN_RXGFC_RRFS_Pos;
pub const FDCAN_RXGFC_RRFS: u32 = FDCAN_RXGFC_RRFS_Msk;
pub const FDCAN_RXGFC_ANFE_Pos: u32 = 2;
pub const FDCAN_RXGFC_ANFE_Msk: u32 = 0x3 << FDCAN_RXGFC_ANFE_Pos;
pub const FDCAN_RXGFC_ANFE: u32 = FDCAN_RXGFC_ANFE_Msk;
pub const FDCAN_RXGFC_ANFS_Pos: u32 = 4;
pub const FDCAN_RXGFC_ANFS_Msk: u32 = 0x3 << FDCAN_RXGFC_ANFS_Pos;
pub const FDCAN_RXGFC_ANFS: u32 = FDCAN_RXGFC_ANFS_Msk;
pub const FDCAN_RXGFC_F1OM_Pos: u32 = 8;
pub const FDCAN_RXGFC_F1OM_Msk: u32 = 0x1 << FDCAN_RXGFC_F1OM_Pos;
pub const FDCAN_RXGFC_F1OM: u32 = FDCAN_RXGFC_F1OM_Msk;
pub const FDCAN_RXGFC_F0OM_Pos: u32 = 9;
pub const FDCAN_RXGFC_F0OM_Msk: u32 = 0x1 << FDCAN_RXGFC_F0OM_Pos;
pub const FDCAN_RXGFC_F0OM: u32 = FDCAN_RXGFC_F0OM_Msk;
pub const FDCAN_RXGFC_LSS_Pos: u32 = 16;
pub const FDCAN_RXGFC_LSS_Msk: u32 = 0x1F << FDCAN_RXGFC_LSS_Pos;
pub const FDCAN_RXGFC_LSS: u32 = FDCAN_RXGFC_LSS_Msk;
pub const FDCAN_RXGFC_LSE_Pos: u32 = 24;
pub const FDCAN_RXGFC_LSE_Msk: u32 = 0xF << FDCAN_RXGFC_LSE_Pos;
pub const FDCAN_RXGFC_LSE: u32 = FDCAN_RXGFC_LSE_Msk;
pub const FDCAN_XIDAM_EIDM_Pos: u32 = 0;
pub const FDCAN_XIDAM_EIDM_Msk: u32 = 0x1FFFFFFF << FDCAN_XIDAM_EIDM_Pos;
pub const FDCAN_XIDAM_EIDM: u32 = FDCAN_XIDAM_EIDM_Msk;
pub const FDCAN_HPMS_BIDX_Pos: u32 = 0;
pub const FDCAN_HPMS_BIDX_Msk: u32 = 0x7 << FDCAN_HPMS_BIDX_Pos;
pub const FDCAN_HPMS_BIDX: u32 = FDCAN_HPMS_BIDX_Msk;
pub const FDCAN_HPMS_MSI_Pos: u32 = 6;
pub const FDCAN_HPMS_MSI_Msk: u32 = 0x3 << FDCAN_HPMS_MSI_Pos;
pub const FDCAN_HPMS_MSI: u32 = FDCAN_HPMS_MSI_Msk;
pub const FDCAN_HPMS_FIDX_Pos: u32 = 8;
pub const FDCAN_HPMS_FIDX_Msk: u32 = 0x1F << FDCAN_HPMS_FIDX_Pos;
pub const FDCAN_HPMS_FIDX: u32 = FDCAN_HPMS_FIDX_Msk;
pub const FDCAN_HPMS_FLST_Pos: u32 = 15;
pub const FDCAN_HPMS_FLST_Msk: u32 = 0x1 << FDCAN_HPMS_FLST_Pos;
pub const FDCAN_HPMS_FLST: u32 = FDCAN_HPMS_FLST_Msk;
pub const FDCAN_RXF0S_F0FL_Pos: u32 = 0;
pub const FDCAN_RXF0S_F0FL_Msk: u32 = 0xF << FDCAN_RXF0S_F0FL_Pos;
pub const FDCAN_RXF0S_F0FL: u32 = FDCAN_RXF0S_F0FL_Msk;
pub const FDCAN_RXF0S_F0GI_Pos: u32 = 8;
pub const FDCAN_RXF0S_F0GI_Msk: u32 = 0x3 << FDCAN_RXF0S_F0GI_Pos;
pub const FDCAN_RXF0S_F0GI: u32 = FDCAN_RXF0S_F0GI_Msk;
pub const FDCAN_RXF0S_F0PI_Pos: u32 = 16;
pub const FDCAN_RXF0S_F0PI_Msk: u32 = 0x3 << FDCAN_RXF0S_F0PI_Pos;
pub const FDCAN_RXF0S_F0PI: u32 = FDCAN_RXF0S_F0PI_Msk;
pub const FDCAN_RXF0S_F0F_Pos: u32 = 24;
pub const FDCAN_RXF0S_F0F_Msk: u32 = 0x1 << FDCAN_RXF0S_F0F_Pos;
pub const FDCAN_RXF0S_F0F: u32 = FDCAN_RXF0S_F0F_Msk;
pub const FDCAN_RXF0S_RF0L_Pos: u32 = 25;
pub const FDCAN_RXF0S_RF0L_Msk: u32 = 0x1 << FDCAN_RXF0S_RF0L_Pos;
pub const FDCAN_RXF0S_RF0L: u32 = FDCAN_RXF0S_RF0L_Msk;
pub const FDCAN_RXF0A_F0AI_Pos: u32 = 0;
pub const FDCAN_RXF0A_F0AI_Msk: u32 = 0x7 << FDCAN_RXF0A_F0AI_Pos;
pub const FDCAN_RXF0A_F0AI: u32 = FDCAN_RXF0A_F0AI_Msk;
pub const FDCAN_RXF1S_F1FL_Pos: u32 = 0;
pub const FDCAN_RXF1S_F1FL_Msk: u32 = 0xF << FDCAN_RXF1S_F1FL_Pos;
pub const FDCAN_RXF1S_F1FL: u32 = FDCAN_RXF1S_F1FL_Msk;
pub const FDCAN_RXF1S_F1GI_Pos: u32 = 8;
pub const FDCAN_RXF1S_F1GI_Msk: u32 = 0x3 << FDCAN_RXF1S_F1GI_Pos;
pub const FDCAN_RXF1S_F1GI: u32 = FDCAN_RXF1S_F1GI_Msk;
pub const FDCAN_RXF1S_F1PI_Pos: u32 = 16;
pub const FDCAN_RXF1S_F1PI_Msk: u32 = 0x3 << FDCAN_RXF1S_F1PI_Pos;
pub const FDCAN_RXF1S_F1PI: u32 = FDCAN_RXF1S_F1PI_Msk;
pub const FDCAN_RXF1S_F1F_Pos: u32 = 24;
pub const FDCAN_RXF1S_F1F_Msk: u32 = 0x1 << FDCAN_RXF1S_F1F_Pos;
pub const FDCAN_RXF1S_F1F: u32 = FDCAN_RXF1S_F1F_Msk;
pub const FDCAN_RXF1S_RF1L_Pos: u32 = 25;
pub const FDCAN_RXF1S_RF1L_Msk: u32 = 0x1 << FDCAN_RXF1S_RF1L_Pos;
pub const FDCAN_RXF1S_RF1L: u32 = FDCAN_RXF1S_RF1L_Msk;
pub const FDCAN_RXF1A_F1AI_Pos: u32 = 0;
pub const FDCAN_RXF1A_F1AI_Msk: u32 = 0x7 << FDCAN_RXF1A_F1AI_Pos;
pub const FDCAN_RXF1A_F1AI: u32 = FDCAN_RXF1A_F1AI_Msk;
pub const FDCAN_TXBC_TFQM_Pos: u32 = 24;
pub const FDCAN_TXBC_TFQM_Msk: u32 = 0x1 << FDCAN_TXBC_TFQM_Pos;
pub const FDCAN_TXBC_TFQM: u32 = FDCAN_TXBC_TFQM_Msk;
pub const FDCAN_TXFQS_TFFL_Pos: u32 = 0;
pub const FDCAN_TXFQS_TFFL_Msk: u32 = 0x7 << FDCAN_TXFQS_TFFL_Pos;
pub const FDCAN_TXFQS_TFFL: u32 = FDCAN_TXFQS_TFFL_Msk;
pub const FDCAN_TXFQS_TFGI_Pos: u32 = 8;
pub const FDCAN_TXFQS_TFGI_Msk: u32 = 0x3 << FDCAN_TXFQS_TFGI_Pos;
pub const FDCAN_TXFQS_TFGI: u32 = FDCAN_TXFQS_TFGI_Msk;
pub const FDCAN_TXFQS_TFQPI_Pos: u32 = 16;
pub const FDCAN_TXFQS_TFQPI_Msk: u32 = 0x3 << FDCAN_TXFQS_TFQPI_Pos;
pub const FDCAN_TXFQS_TFQPI: u32 = FDCAN_TXFQS_TFQPI_Msk;
pub const FDCAN_TXFQS_TFQF_Pos: u32 = 21;
pub const FDCAN_TXFQS_TFQF_Msk: u32 = 0x1 << FDCAN_TXFQS_TFQF_Pos;
pub const FDCAN_TXFQS_TFQF: u32 = FDCAN_TXFQS_TFQF_Msk;
pub const FDCAN_TXBRP_TRP_Pos: u32 = 0;
pub const FDCAN_TXBRP_TRP_Msk: u32 = 0x7 << FDCAN_TXBRP_TRP_Pos;
pub const FDCAN_TXBRP_TRP: u32 = FDCAN_TXBRP_TRP_Msk;
pub const FDCAN_TXBAR_AR_Pos: u32 = 0;
pub const FDCAN_TXBAR_AR_Msk: u32 = 0x7 << FDCAN_TXBAR_AR_Pos;
pub const FDCAN_TXBAR_AR: u32 = FDCAN_TXBAR_AR_Msk;
pub const FDCAN_TXBCR_CR_Pos: u32 = 0;
pub const FDCAN_TXBCR_CR_Msk: u32 = 0x7 << FDCAN_TXBCR_CR_Pos;
pub const FDCAN_TXBCR_CR: u32 = FDCAN_TXBCR_CR_Msk;
pub const FDCAN_TXBTO_TO_Pos: u32 = 0;
pub const FDCAN_TXBTO_TO_Msk: u32 = 0x7 << FDCAN_TXBTO_TO_Pos;
pub const FDCAN_TXBTO_TO: u32 = FDCAN_TXBTO_TO_Msk;
pub const FDCAN_TXBCF_CF_Pos: u32 = 0;
pub const FDCAN_TXBCF_CF_Msk: u32 = 0x7 << FDCAN_TXBCF_CF_Pos;
pub const FDCAN_TXBCF_CF: u32 = FDCAN_TXBCF_CF_Msk;
pub const FDCAN_TXBTIE_TIE_Pos: u32 = 0;
pub const FDCAN_TXBTIE_TIE_Msk: u32 = 0x7 << FDCAN_TXBTIE_TIE_Pos;
pub const FDCAN_TXBTIE_TIE: u32 = FDCAN_TXBTIE_TIE_Msk;
pub const FDCAN_TXBCIE_CFIE_Pos: u32 = 0;
pub const FDCAN_TXBCIE_CFIE_Msk: u32 = 0x7 << FDCAN_TXBCIE_CFIE_Pos;
pub const FDCAN_TXBCIE_CFIE: u32 = FDCAN_TXBCIE_CFIE_Msk;
pub const FDCAN_TXEFS_EFFL_Pos: u32 = 0;
pub const FDCAN_TXEFS_EFFL_Msk: u32 = 0x7 << FDCAN_TXEFS_EFFL_Pos;
pub const FDCAN_TXEFS_EFFL: u32 = FDCAN_TXEFS_EFFL_Msk;
pub const FDCAN_TXEFS_EFGI_Pos: u32 = 8;
pub const FDCAN_TXEFS_EFGI_Msk: u32 = 0x3 << FDCAN_TXEFS_EFGI_Pos;
pub const FDCAN_TXEFS_EFGI: u32 = FDCAN_TXEFS_EFGI_Msk;
pub const FDCAN_TXEFS_EFPI_Pos: u32 = 16;
pub const FDCAN_TXEFS_EFPI_Msk: u32 = 0x3 << FDCAN_TXEFS_EFPI_Pos;
pub const FDCAN_TXEFS_EFPI: u32 = FDCAN_TXEFS_EFPI_Msk;
pub const FDCAN_TXEFS_EFF_Pos: u32 = 24;
pub const FDCAN_TXEFS_EFF_Msk: u32 = 0x1 << FDCAN_TXEFS_EFF_Pos;
pub const FDCAN_TXEFS_EFF: u32 = FDCAN_TXEFS_EFF_Msk;
pub const FDCAN_TXEFS_TEFL_Pos: u32 = 25;
pub const FDCAN_TXEFS_TEFL_Msk: u32 = 0x1 << FDCAN_TXEFS_TEFL_Pos;
pub const FDCAN_TXEFS_TEFL: u32 = FDCAN_TXEFS_TEFL_Msk;
pub const FDCAN_TXEFA_EFAI_Pos: u32 = 0;
pub const FDCAN_TXEFA_EFAI_Msk: u32 = 0x3 << FDCAN_TXEFA_EFAI_Pos;
pub const FDCAN_TXEFA_EFAI: u32 = FDCAN_TXEFA_EFAI_Msk;
pub const FDCAN_CKDIV_PDIV_Pos: u32 = 0;
pub const FDCAN_CKDIV_PDIV_Msk: u32 = 0xF << FDCAN_CKDIV_PDIV_Pos;
pub const FDCAN_CKDIV_PDIV: u32 = FDCAN_CKDIV_PDIV_Msk;
pub const FLASH_ACR_LATENCY_Pos: u32 = 0;
pub const FLASH_ACR_LATENCY_Msk: u32 = 0xF << FLASH_ACR_LATENCY_Pos;
pub const FLASH_ACR_LATENCY: u32 = FLASH_ACR_LATENCY_Msk;
pub const FLASH_ACR_LATENCY_0WS: u32 = 0x00000000;
pub const FLASH_ACR_LATENCY_1WS: u32 = 0x00000001;
pub const FLASH_ACR_LATENCY_2WS: u32 = 0x00000002;
pub const FLASH_ACR_LATENCY_3WS: u32 = 0x00000003;
pub const FLASH_ACR_LATENCY_4WS: u32 = 0x00000004;
pub const FLASH_ACR_LATENCY_5WS: u32 = 0x00000005;
pub const FLASH_ACR_LATENCY_6WS: u32 = 0x00000006;
pub const FLASH_ACR_LATENCY_7WS: u32 = 0x00000007;
pub const FLASH_ACR_LATENCY_8WS: u32 = 0x00000008;
pub const FLASH_ACR_LATENCY_9WS: u32 = 0x00000009;
pub const FLASH_ACR_LATENCY_10WS: u32 = 0x0000000A;
pub const FLASH_ACR_LATENCY_11WS: u32 = 0x0000000B;
pub const FLASH_ACR_LATENCY_12WS: u32 = 0x0000000C;
pub const FLASH_ACR_LATENCY_13WS: u32 = 0x0000000D;
pub const FLASH_ACR_LATENCY_14WS: u32 = 0x0000000E;
pub const FLASH_ACR_LATENCY_15WS: u32 = 0x0000000F;
pub const FLASH_ACR_PRFTEN_Pos: u32 = 8;
pub const FLASH_ACR_PRFTEN_Msk: u32 = 0x1 << FLASH_ACR_PRFTEN_Pos;
pub const FLASH_ACR_PRFTEN: u32 = FLASH_ACR_PRFTEN_Msk;
pub const FLASH_ACR_ICEN_Pos: u32 = 9;
pub const FLASH_ACR_ICEN_Msk: u32 = 0x1 << FLASH_ACR_ICEN_Pos;
pub const FLASH_ACR_ICEN: u32 = FLASH_ACR_ICEN_Msk;
pub const FLASH_ACR_DCEN_Pos: u32 = 10;
pub const FLASH_ACR_DCEN_Msk: u32 = 0x1 << FLASH_ACR_DCEN_Pos;
pub const FLASH_ACR_DCEN: u32 = FLASH_ACR_DCEN_Msk;
pub const FLASH_ACR_ICRST_Pos: u32 = 11;
pub const FLASH_ACR_ICRST_Msk: u32 = 0x1 << FLASH_ACR_ICRST_Pos;
pub const FLASH_ACR_ICRST: u32 = FLASH_ACR_ICRST_Msk;
pub const FLASH_ACR_DCRST_Pos: u32 = 12;
pub const FLASH_ACR_DCRST_Msk: u32 = 0x1 << FLASH_ACR_DCRST_Pos;
pub const FLASH_ACR_DCRST: u32 = FLASH_ACR_DCRST_Msk;
pub const FLASH_ACR_RUN_PD_Pos: u32 = 13;
pub const FLASH_ACR_RUN_PD_Msk: u32 = 0x1 << FLASH_ACR_RUN_PD_Pos;
pub const FLASH_ACR_RUN_PD: u32 = FLASH_ACR_RUN_PD_Msk;
pub const FLASH_ACR_SLEEP_PD_Pos: u32 = 14;
pub const FLASH_ACR_SLEEP_PD_Msk: u32 = 0x1 << FLASH_ACR_SLEEP_PD_Pos;
pub const FLASH_ACR_SLEEP_PD: u32 = FLASH_ACR_SLEEP_PD_Msk;
pub const FLASH_ACR_DBG_SWEN_Pos: u32 = 18;
pub const FLASH_ACR_DBG_SWEN_Msk: u32 = 0x1 << FLASH_ACR_DBG_SWEN_Pos;
pub const FLASH_ACR_DBG_SWEN: u32 = FLASH_ACR_DBG_SWEN_Msk;
pub const FLASH_SR_EOP_Pos: u32 = 0;
pub const FLASH_SR_EOP_Msk: u32 = 0x1 << FLASH_SR_EOP_Pos;
pub const FLASH_SR_EOP: u32 = FLASH_SR_EOP_Msk;
pub const FLASH_SR_OPERR_Pos: u32 = 1;
pub const FLASH_SR_OPERR_Msk: u32 = 0x1 << FLASH_SR_OPERR_Pos;
pub const FLASH_SR_OPERR: u32 = FLASH_SR_OPERR_Msk;
pub const FLASH_SR_PROGERR_Pos: u32 = 3;
pub const FLASH_SR_PROGERR_Msk: u32 = 0x1 << FLASH_SR_PROGERR_Pos;
pub const FLASH_SR_PROGERR: u32 = FLASH_SR_PROGERR_Msk;
pub const FLASH_SR_WRPERR_Pos: u32 = 4;
pub const FLASH_SR_WRPERR_Msk: u32 = 0x1 << FLASH_SR_WRPERR_Pos;
pub const FLASH_SR_WRPERR: u32 = FLASH_SR_WRPERR_Msk;
pub const FLASH_SR_PGAERR_Pos: u32 = 5;
pub const FLASH_SR_PGAERR_Msk: u32 = 0x1 << FLASH_SR_PGAERR_Pos;
pub const FLASH_SR_PGAERR: u32 = FLASH_SR_PGAERR_Msk;
pub const FLASH_SR_SIZERR_Pos: u32 = 6;
pub const FLASH_SR_SIZERR_Msk: u32 = 0x1 << FLASH_SR_SIZERR_Pos;
pub const FLASH_SR_SIZERR: u32 = FLASH_SR_SIZERR_Msk;
pub const FLASH_SR_PGSERR_Pos: u32 = 7;
pub const FLASH_SR_PGSERR_Msk: u32 = 0x1 << FLASH_SR_PGSERR_Pos;
pub const FLASH_SR_PGSERR: u32 = FLASH_SR_PGSERR_Msk;
pub const FLASH_SR_MISERR_Pos: u32 = 8;
pub const FLASH_SR_MISERR_Msk: u32 = 0x1 << FLASH_SR_MISERR_Pos;
pub const FLASH_SR_MISERR: u32 = FLASH_SR_MISERR_Msk;
pub const FLASH_SR_FASTERR_Pos: u32 = 9;
pub const FLASH_SR_FASTERR_Msk: u32 = 0x1 << FLASH_SR_FASTERR_Pos;
pub const FLASH_SR_FASTERR: u32 = FLASH_SR_FASTERR_Msk;
pub const FLASH_SR_RDERR_Pos: u32 = 14;
pub const FLASH_SR_RDERR_Msk: u32 = 0x1 << FLASH_SR_RDERR_Pos;
pub const FLASH_SR_RDERR: u32 = FLASH_SR_RDERR_Msk;
pub const FLASH_SR_OPTVERR_Pos: u32 = 15;
pub const FLASH_SR_OPTVERR_Msk: u32 = 0x1 << FLASH_SR_OPTVERR_Pos;
pub const FLASH_SR_OPTVERR: u32 = FLASH_SR_OPTVERR_Msk;
pub const FLASH_SR_BSY_Pos: u32 = 16;
pub const FLASH_SR_BSY_Msk: u32 = 0x1 << FLASH_SR_BSY_Pos;
pub const FLASH_SR_BSY: u32 = FLASH_SR_BSY_Msk;
pub const FLASH_CR_PG_Pos: u32 = 0;
pub const FLASH_CR_PG_Msk: u32 = 0x1 << FLASH_CR_PG_Pos;
pub const FLASH_CR_PG: u32 = FLASH_CR_PG_Msk;
pub const FLASH_CR_PER_Pos: u32 = 1;
pub const FLASH_CR_PER_Msk: u32 = 0x1 << FLASH_CR_PER_Pos;
pub const FLASH_CR_PER: u32 = FLASH_CR_PER_Msk;
pub const FLASH_CR_MER1_Pos: u32 = 2;
pub const FLASH_CR_MER1_Msk: u32 = 0x1 << FLASH_CR_MER1_Pos;
pub const FLASH_CR_MER1: u32 = FLASH_CR_MER1_Msk;
pub const FLASH_CR_PNB_Pos: u32 = 3;
pub const FLASH_CR_PNB_Msk: u32 = 0xFF << FLASH_CR_PNB_Pos;
pub const FLASH_CR_PNB: u32 = FLASH_CR_PNB_Msk;
pub const FLASH_CR_STRT_Pos: u32 = 16;
pub const FLASH_CR_STRT_Msk: u32 = 0x1 << FLASH_CR_STRT_Pos;
pub const FLASH_CR_STRT: u32 = FLASH_CR_STRT_Msk;
pub const FLASH_CR_OPTSTRT_Pos: u32 = 17;
pub const FLASH_CR_OPTSTRT_Msk: u32 = 0x1 << FLASH_CR_OPTSTRT_Pos;
pub const FLASH_CR_OPTSTRT: u32 = FLASH_CR_OPTSTRT_Msk;
pub const FLASH_CR_FSTPG_Pos: u32 = 18;
pub const FLASH_CR_FSTPG_Msk: u32 = 0x1 << FLASH_CR_FSTPG_Pos;
pub const FLASH_CR_FSTPG: u32 = FLASH_CR_FSTPG_Msk;
pub const FLASH_CR_EOPIE_Pos: u32 = 24;
pub const FLASH_CR_EOPIE_Msk: u32 = 0x1 << FLASH_CR_EOPIE_Pos;
pub const FLASH_CR_EOPIE: u32 = FLASH_CR_EOPIE_Msk;
pub const FLASH_CR_ERRIE_Pos: u32 = 25;
pub const FLASH_CR_ERRIE_Msk: u32 = 0x1 << FLASH_CR_ERRIE_Pos;
pub const FLASH_CR_ERRIE: u32 = FLASH_CR_ERRIE_Msk;
pub const FLASH_CR_RDERRIE_Pos: u32 = 26;
pub const FLASH_CR_RDERRIE_Msk: u32 = 0x1 << FLASH_CR_RDERRIE_Pos;
pub const FLASH_CR_RDERRIE: u32 = FLASH_CR_RDERRIE_Msk;
pub const FLASH_CR_OBL_LAUNCH_Pos: u32 = 27;
pub const FLASH_CR_OBL_LAUNCH_Msk: u32 = 0x1 << FLASH_CR_OBL_LAUNCH_Pos;
pub const FLASH_CR_OBL_LAUNCH: u32 = FLASH_CR_OBL_LAUNCH_Msk;
pub const FLASH_CR_SEC_PROT1_Pos: u32 = 28;
pub const FLASH_CR_SEC_PROT1_Msk: u32 = 0x1 << FLASH_CR_SEC_PROT1_Pos;
pub const FLASH_CR_SEC_PROT1: u32 = FLASH_CR_SEC_PROT1_Msk;
pub const FLASH_CR_OPTLOCK_Pos: u32 = 30;
pub const FLASH_CR_OPTLOCK_Msk: u32 = 0x1 << FLASH_CR_OPTLOCK_Pos;
pub const FLASH_CR_OPTLOCK: u32 = FLASH_CR_OPTLOCK_Msk;
pub const FLASH_CR_LOCK_Pos: u32 = 31;
pub const FLASH_CR_LOCK_Msk: u32 = 0x1 << FLASH_CR_LOCK_Pos;
pub const FLASH_CR_LOCK: u32 = FLASH_CR_LOCK_Msk;
pub const FLASH_ECCR_ADDR_ECC_Pos: u32 = 0;
pub const FLASH_ECCR_ADDR_ECC_Msk: u32 = 0x7FFFF << FLASH_ECCR_ADDR_ECC_Pos;
pub const FLASH_ECCR_ADDR_ECC: u32 = FLASH_ECCR_ADDR_ECC_Msk;
pub const FLASH_ECCR_BK_ECC_Pos: u32 = 21;
pub const FLASH_ECCR_BK_ECC_Msk: u32 = 0x1 << FLASH_ECCR_BK_ECC_Pos;
pub const FLASH_ECCR_BK_ECC: u32 = FLASH_ECCR_BK_ECC_Msk;
pub const FLASH_ECCR_SYSF_ECC_Pos: u32 = 22;
pub const FLASH_ECCR_SYSF_ECC_Msk: u32 = 0x1 << FLASH_ECCR_SYSF_ECC_Pos;
pub const FLASH_ECCR_SYSF_ECC: u32 = FLASH_ECCR_SYSF_ECC_Msk;
pub const FLASH_ECCR_ECCIE_Pos: u32 = 24;
pub const FLASH_ECCR_ECCIE_Msk: u32 = 0x1 << FLASH_ECCR_ECCIE_Pos;
pub const FLASH_ECCR_ECCIE: u32 = FLASH_ECCR_ECCIE_Msk;
pub const FLASH_ECCR_ECCC_Pos: u32 = 30;
pub const FLASH_ECCR_ECCC_Msk: u32 = 0x1 << FLASH_ECCR_ECCC_Pos;
pub const FLASH_ECCR_ECCC: u32 = FLASH_ECCR_ECCC_Msk;
pub const FLASH_ECCR_ECCD_Pos: u32 = 31;
pub const FLASH_ECCR_ECCD_Msk: u32 = 0x1 << FLASH_ECCR_ECCD_Pos;
pub const FLASH_ECCR_ECCD: u32 = FLASH_ECCR_ECCD_Msk;
pub const FLASH_OPTR_RDP_Pos: u32 = 0;
pub const FLASH_OPTR_RDP_Msk: u32 = 0xFF << FLASH_OPTR_RDP_Pos;
pub const FLASH_OPTR_RDP: u32 = FLASH_OPTR_RDP_Msk;
pub const FLASH_OPTR_BOR_LEV_Pos: u32 = 8;
pub const FLASH_OPTR_BOR_LEV_Msk: u32 = 0x7 << FLASH_OPTR_BOR_LEV_Pos;
pub const FLASH_OPTR_BOR_LEV: u32 = FLASH_OPTR_BOR_LEV_Msk;
pub const FLASH_OPTR_BOR_LEV_0: u32 = 0x0 << FLASH_OPTR_BOR_LEV_Pos;
pub const FLASH_OPTR_BOR_LEV_1: u32 = 0x1 << FLASH_OPTR_BOR_LEV_Pos;
pub const FLASH_OPTR_BOR_LEV_2: u32 = 0x2 << FLASH_OPTR_BOR_LEV_Pos;
pub const FLASH_OPTR_BOR_LEV_3: u32 = 0x3 << FLASH_OPTR_BOR_LEV_Pos;
pub const FLASH_OPTR_BOR_LEV_4: u32 = 0x4 << FLASH_OPTR_BOR_LEV_Pos;
pub const FLASH_OPTR_nRST_STOP_Pos: u32 = 12;
pub const FLASH_OPTR_nRST_STOP_Msk: u32 = 0x1 << FLASH_OPTR_nRST_STOP_Pos;
pub const FLASH_OPTR_nRST_STOP: u32 = FLASH_OPTR_nRST_STOP_Msk;
pub const FLASH_OPTR_nRST_STDBY_Pos: u32 = 13;
pub const FLASH_OPTR_nRST_STDBY_Msk: u32 = 0x1 << FLASH_OPTR_nRST_STDBY_Pos;
pub const FLASH_OPTR_nRST_STDBY: u32 = FLASH_OPTR_nRST_STDBY_Msk;
pub const FLASH_OPTR_nRST_SHDW_Pos: u32 = 14;
pub const FLASH_OPTR_nRST_SHDW_Msk: u32 = 0x1 << FLASH_OPTR_nRST_SHDW_Pos;
pub const FLASH_OPTR_nRST_SHDW: u32 = FLASH_OPTR_nRST_SHDW_Msk;
pub const FLASH_OPTR_IWDG_SW_Pos: u32 = 16;
pub const FLASH_OPTR_IWDG_SW_Msk: u32 = 0x1 << FLASH_OPTR_IWDG_SW_Pos;
pub const FLASH_OPTR_IWDG_SW: u32 = FLASH_OPTR_IWDG_SW_Msk;
pub const FLASH_OPTR_IWDG_STOP_Pos: u32 = 17;
pub const FLASH_OPTR_IWDG_STOP_Msk: u32 = 0x1 << FLASH_OPTR_IWDG_STOP_Pos;
pub const FLASH_OPTR_IWDG_STOP: u32 = FLASH_OPTR_IWDG_STOP_Msk;
pub const FLASH_OPTR_IWDG_STDBY_Pos: u32 = 18;
pub const FLASH_OPTR_IWDG_STDBY_Msk: u32 = 0x1 << FLASH_OPTR_IWDG_STDBY_Pos;
pub const FLASH_OPTR_IWDG_STDBY: u32 = FLASH_OPTR_IWDG_STDBY_Msk;
pub const FLASH_OPTR_WWDG_SW_Pos: u32 = 19;
pub const FLASH_OPTR_WWDG_SW_Msk: u32 = 0x1 << FLASH_OPTR_WWDG_SW_Pos;
pub const FLASH_OPTR_WWDG_SW: u32 = FLASH_OPTR_WWDG_SW_Msk;
pub const FLASH_OPTR_PB4_PUPEN_Pos: u32 = 22;
pub const FLASH_OPTR_PB4_PUPEN_Msk: u32 = 0x1 << FLASH_OPTR_PB4_PUPEN_Pos;
pub const FLASH_OPTR_PB4_PUPEN: u32 = FLASH_OPTR_PB4_PUPEN_Msk;
pub const FLASH_OPTR_nBOOT1_Pos: u32 = 23;
pub const FLASH_OPTR_nBOOT1_Msk: u32 = 0x1 << FLASH_OPTR_nBOOT1_Pos;
pub const FLASH_OPTR_nBOOT1: u32 = FLASH_OPTR_nBOOT1_Msk;
pub const FLASH_OPTR_SRAM_PE_Pos: u32 = 24;
pub const FLASH_OPTR_SRAM_PE_Msk: u32 = 0x1 << FLASH_OPTR_SRAM_PE_Pos;
pub const FLASH_OPTR_SRAM_PE: u32 = FLASH_OPTR_SRAM_PE_Msk;
pub const FLASH_OPTR_CCMSRAM_RST_Pos: u32 = 25;
pub const FLASH_OPTR_CCMSRAM_RST_Msk: u32 = 0x1 << FLASH_OPTR_CCMSRAM_RST_Pos;
pub const FLASH_OPTR_CCMSRAM_RST: u32 = FLASH_OPTR_CCMSRAM_RST_Msk;
pub const FLASH_OPTR_nSWBOOT0_Pos: u32 = 26;
pub const FLASH_OPTR_nSWBOOT0_Msk: u32 = 0x1 << FLASH_OPTR_nSWBOOT0_Pos;
pub const FLASH_OPTR_nSWBOOT0: u32 = FLASH_OPTR_nSWBOOT0_Msk;
pub const FLASH_OPTR_nBOOT0_Pos: u32 = 27;
pub const FLASH_OPTR_nBOOT0_Msk: u32 = 0x1 << FLASH_OPTR_nBOOT0_Pos;
pub const FLASH_OPTR_nBOOT0: u32 = FLASH_OPTR_nBOOT0_Msk;
pub const FLASH_OPTR_NRST_MODE_Pos: u32 = 28;
pub const FLASH_OPTR_NRST_MODE_Msk: u32 = 0x3 << FLASH_OPTR_NRST_MODE_Pos;
pub const FLASH_OPTR_NRST_MODE: u32 = FLASH_OPTR_NRST_MODE_Msk;
pub const FLASH_OPTR_NRST_MODE_0: u32 = 0x1 << FLASH_OPTR_NRST_MODE_Pos;
pub const FLASH_OPTR_NRST_MODE_1: u32 = 0x2 << FLASH_OPTR_NRST_MODE_Pos;
pub const FLASH_OPTR_IRHEN_Pos: u32 = 30;
pub const FLASH_OPTR_IRHEN_Msk: u32 = 0x1 << FLASH_OPTR_IRHEN_Pos;
pub const FLASH_OPTR_IRHEN: u32 = FLASH_OPTR_IRHEN_Msk;
pub const FLASH_PCROP1SR_PCROP1_STRT_Pos: u32 = 0;
pub const FLASH_PCROP1SR_PCROP1_STRT_Msk: u32 = 0x7FFF << FLASH_PCROP1SR_PCROP1_STRT_Pos;
pub const FLASH_PCROP1SR_PCROP1_STRT: u32 = FLASH_PCROP1SR_PCROP1_STRT_Msk;
pub const FLASH_PCROP1ER_PCROP1_END_Pos: u32 = 0;
pub const FLASH_PCROP1ER_PCROP1_END_Msk: u32 = 0x7FFF << FLASH_PCROP1ER_PCROP1_END_Pos;
pub const FLASH_PCROP1ER_PCROP1_END: u32 = FLASH_PCROP1ER_PCROP1_END_Msk;
pub const FLASH_PCROP1ER_PCROP_RDP_Pos: u32 = 31;
pub const FLASH_PCROP1ER_PCROP_RDP_Msk: u32 = 0x1 << FLASH_PCROP1ER_PCROP_RDP_Pos;
pub const FLASH_PCROP1ER_PCROP_RDP: u32 = FLASH_PCROP1ER_PCROP_RDP_Msk;
pub const FLASH_WRP1AR_WRP1A_STRT_Pos: u32 = 0;
pub const FLASH_WRP1AR_WRP1A_STRT_Msk: u32 = 0x7F << FLASH_WRP1AR_WRP1A_STRT_Pos;
pub const FLASH_WRP1AR_WRP1A_STRT: u32 = FLASH_WRP1AR_WRP1A_STRT_Msk;
pub const FLASH_WRP1AR_WRP1A_END_Pos: u32 = 16;
pub const FLASH_WRP1AR_WRP1A_END_Msk: u32 = 0x7F << FLASH_WRP1AR_WRP1A_END_Pos;
pub const FLASH_WRP1AR_WRP1A_END: u32 = FLASH_WRP1AR_WRP1A_END_Msk;
pub const FLASH_WRP1BR_WRP1B_STRT_Pos: u32 = 0;
pub const FLASH_WRP1BR_WRP1B_STRT_Msk: u32 = 0x7F << FLASH_WRP1BR_WRP1B_STRT_Pos;
pub const FLASH_WRP1BR_WRP1B_STRT: u32 = FLASH_WRP1BR_WRP1B_STRT_Msk;
pub const FLASH_WRP1BR_WRP1B_END_Pos: u32 = 16;
pub const FLASH_WRP1BR_WRP1B_END_Msk: u32 = 0x7F << FLASH_WRP1BR_WRP1B_END_Pos;
pub const FLASH_WRP1BR_WRP1B_END: u32 = FLASH_WRP1BR_WRP1B_END_Msk;
pub const FLASH_SEC1R_SEC_SIZE1_Pos: u32 = 0;
pub const FLASH_SEC1R_SEC_SIZE1_Msk: u32 = 0xFF << FLASH_SEC1R_SEC_SIZE1_Pos;
pub const FLASH_SEC1R_SEC_SIZE1: u32 = FLASH_SEC1R_SEC_SIZE1_Msk;
pub const FLASH_SEC1R_BOOT_LOCK_Pos: u32 = 16;
pub const FLASH_SEC1R_BOOT_LOCK_Msk: u32 = 0x1 << FLASH_SEC1R_BOOT_LOCK_Pos;
pub const FLASH_SEC1R_BOOT_LOCK: u32 = FLASH_SEC1R_BOOT_LOCK_Msk;
pub const FMAC_X1BUFCFG_X1_BASE_Pos: u32 = 0;
pub const FMAC_X1BUFCFG_X1_BASE_Msk: u32 = 0xFF << FMAC_X1BUFCFG_X1_BASE_Pos;
pub const FMAC_X1BUFCFG_X1_BASE: u32 = FMAC_X1BUFCFG_X1_BASE_Msk;
pub const FMAC_X1BUFCFG_X1_BUF_SIZE_Pos: u32 = 8;
pub const FMAC_X1BUFCFG_X1_BUF_SIZE_Msk: u32 = 0xFF << FMAC_X1BUFCFG_X1_BUF_SIZE_Pos;
pub const FMAC_X1BUFCFG_X1_BUF_SIZE: u32 = FMAC_X1BUFCFG_X1_BUF_SIZE_Msk;
pub const FMAC_X1BUFCFG_FULL_WM_Pos: u32 = 24;
pub const FMAC_X1BUFCFG_FULL_WM_Msk: u32 = 0x3 << FMAC_X1BUFCFG_FULL_WM_Pos;
pub const FMAC_X1BUFCFG_FULL_WM: u32 = FMAC_X1BUFCFG_FULL_WM_Msk;
pub const FMAC_X2BUFCFG_X2_BASE_Pos: u32 = 0;
pub const FMAC_X2BUFCFG_X2_BASE_Msk: u32 = 0xFF << FMAC_X2BUFCFG_X2_BASE_Pos;
pub const FMAC_X2BUFCFG_X2_BASE: u32 = FMAC_X2BUFCFG_X2_BASE_Msk;
pub const FMAC_X2BUFCFG_X2_BUF_SIZE_Pos: u32 = 8;
pub const FMAC_X2BUFCFG_X2_BUF_SIZE_Msk: u32 = 0xFF << FMAC_X2BUFCFG_X2_BUF_SIZE_Pos;
pub const FMAC_X2BUFCFG_X2_BUF_SIZE: u32 = FMAC_X2BUFCFG_X2_BUF_SIZE_Msk;
pub const FMAC_YBUFCFG_Y_BASE_Pos: u32 = 0;
pub const FMAC_YBUFCFG_Y_BASE_Msk: u32 = 0xFF << FMAC_YBUFCFG_Y_BASE_Pos;
pub const FMAC_YBUFCFG_Y_BASE: u32 = FMAC_YBUFCFG_Y_BASE_Msk;
pub const FMAC_YBUFCFG_Y_BUF_SIZE_Pos: u32 = 8;
pub const FMAC_YBUFCFG_Y_BUF_SIZE_Msk: u32 = 0xFF << FMAC_YBUFCFG_Y_BUF_SIZE_Pos;
pub const FMAC_YBUFCFG_Y_BUF_SIZE: u32 = FMAC_YBUFCFG_Y_BUF_SIZE_Msk;
pub const FMAC_YBUFCFG_EMPTY_WM_Pos: u32 = 24;
pub const FMAC_YBUFCFG_EMPTY_WM_Msk: u32 = 0x3 << FMAC_YBUFCFG_EMPTY_WM_Pos;
pub const FMAC_YBUFCFG_EMPTY_WM: u32 = FMAC_YBUFCFG_EMPTY_WM_Msk;
pub const FMAC_PARAM_P_Pos: u32 = 0;
pub const FMAC_PARAM_P_Msk: u32 = 0xFF << FMAC_PARAM_P_Pos;
pub const FMAC_PARAM_P: u32 = FMAC_PARAM_P_Msk;
pub const FMAC_PARAM_Q_Pos: u32 = 8;
pub const FMAC_PARAM_Q_Msk: u32 = 0xFF << FMAC_PARAM_Q_Pos;
pub const FMAC_PARAM_Q: u32 = FMAC_PARAM_Q_Msk;
pub const FMAC_PARAM_R_Pos: u32 = 16;
pub const FMAC_PARAM_R_Msk: u32 = 0xFF << FMAC_PARAM_R_Pos;
pub const FMAC_PARAM_R: u32 = FMAC_PARAM_R_Msk;
pub const FMAC_PARAM_FUNC_Pos: u32 = 24;
pub const FMAC_PARAM_FUNC_Msk: u32 = 0x7F << FMAC_PARAM_FUNC_Pos;
pub const FMAC_PARAM_FUNC: u32 = FMAC_PARAM_FUNC_Msk;
pub const FMAC_PARAM_FUNC_0: u32 = 0x1 << FMAC_PARAM_FUNC_Pos;
pub const FMAC_PARAM_FUNC_1: u32 = 0x2 << FMAC_PARAM_FUNC_Pos;
pub const FMAC_PARAM_FUNC_2: u32 = 0x4 << FMAC_PARAM_FUNC_Pos;
pub const FMAC_PARAM_FUNC_3: u32 = 0x8 << FMAC_PARAM_FUNC_Pos;
pub const FMAC_PARAM_FUNC_4: u32 = 0x10 << FMAC_PARAM_FUNC_Pos;
pub const FMAC_PARAM_FUNC_5: u32 = 0x20 << FMAC_PARAM_FUNC_Pos;
pub const FMAC_PARAM_FUNC_6: u32 = 0x40 << FMAC_PARAM_FUNC_Pos;
pub const FMAC_PARAM_START_Pos: u32 = 31;
pub const FMAC_PARAM_START_Msk: u32 = 0x1 << FMAC_PARAM_START_Pos;
pub const FMAC_PARAM_START: u32 = FMAC_PARAM_START_Msk;
pub const FMAC_CR_RIEN_Pos: u32 = 0;
pub const FMAC_CR_RIEN_Msk: u32 = 0x1 << FMAC_CR_RIEN_Pos;
pub const FMAC_CR_RIEN: u32 = FMAC_CR_RIEN_Msk;
pub const FMAC_CR_WIEN_Pos: u32 = 1;
pub const FMAC_CR_WIEN_Msk: u32 = 0x1 << FMAC_CR_WIEN_Pos;
pub const FMAC_CR_WIEN: u32 = FMAC_CR_WIEN_Msk;
pub const FMAC_CR_OVFLIEN_Pos: u32 = 2;
pub const FMAC_CR_OVFLIEN_Msk: u32 = 0x1 << FMAC_CR_OVFLIEN_Pos;
pub const FMAC_CR_OVFLIEN: u32 = FMAC_CR_OVFLIEN_Msk;
pub const FMAC_CR_UNFLIEN_Pos: u32 = 3;
pub const FMAC_CR_UNFLIEN_Msk: u32 = 0x1 << FMAC_CR_UNFLIEN_Pos;
pub const FMAC_CR_UNFLIEN: u32 = FMAC_CR_UNFLIEN_Msk;
pub const FMAC_CR_SATIEN_Pos: u32 = 4;
pub const FMAC_CR_SATIEN_Msk: u32 = 0x1 << FMAC_CR_SATIEN_Pos;
pub const FMAC_CR_SATIEN: u32 = FMAC_CR_SATIEN_Msk;
pub const FMAC_CR_DMAREN_Pos: u32 = 8;
pub const FMAC_CR_DMAREN_Msk: u32 = 0x1 << FMAC_CR_DMAREN_Pos;
pub const FMAC_CR_DMAREN: u32 = FMAC_CR_DMAREN_Msk;
pub const FMAC_CR_DMAWEN_Pos: u32 = 9;
pub const FMAC_CR_DMAWEN_Msk: u32 = 0x1 << FMAC_CR_DMAWEN_Pos;
pub const FMAC_CR_DMAWEN: u32 = FMAC_CR_DMAWEN_Msk;
pub const FMAC_CR_CLIPEN_Pos: u32 = 15;
pub const FMAC_CR_CLIPEN_Msk: u32 = 0x1 << FMAC_CR_CLIPEN_Pos;
pub const FMAC_CR_CLIPEN: u32 = FMAC_CR_CLIPEN_Msk;
pub const FMAC_CR_RESET_Pos: u32 = 16;
pub const FMAC_CR_RESET_Msk: u32 = 0x1 << FMAC_CR_RESET_Pos;
pub const FMAC_CR_RESET: u32 = FMAC_CR_RESET_Msk;
pub const FMAC_SR_YEMPTY_Pos: u32 = 0;
pub const FMAC_SR_YEMPTY_Msk: u32 = 0x1 << FMAC_SR_YEMPTY_Pos;
pub const FMAC_SR_YEMPTY: u32 = FMAC_SR_YEMPTY_Msk;
pub const FMAC_SR_X1FULL_Pos: u32 = 1;
pub const FMAC_SR_X1FULL_Msk: u32 = 0x1 << FMAC_SR_X1FULL_Pos;
pub const FMAC_SR_X1FULL: u32 = FMAC_SR_X1FULL_Msk;
pub const FMAC_SR_OVFL_Pos: u32 = 8;
pub const FMAC_SR_OVFL_Msk: u32 = 0x1 << FMAC_SR_OVFL_Pos;
pub const FMAC_SR_OVFL: u32 = FMAC_SR_OVFL_Msk;
pub const FMAC_SR_UNFL_Pos: u32 = 9;
pub const FMAC_SR_UNFL_Msk: u32 = 0x1 << FMAC_SR_UNFL_Pos;
pub const FMAC_SR_UNFL: u32 = FMAC_SR_UNFL_Msk;
pub const FMAC_SR_SAT_Pos: u32 = 10;
pub const FMAC_SR_SAT_Msk: u32 = 0x1 << FMAC_SR_SAT_Pos;
pub const FMAC_SR_SAT: u32 = FMAC_SR_SAT_Msk;
pub const FMAC_WDATA_WDATA_Pos: u32 = 0;
pub const FMAC_WDATA_WDATA_Msk: u32 = 0xFFFF << FMAC_WDATA_WDATA_Pos;
pub const FMAC_WDATA_WDATA: u32 = FMAC_WDATA_WDATA_Msk;
pub const FMAC_RDATA_RDATA_Pos: u32 = 0;
pub const FMAC_RDATA_RDATA_Msk: u32 = 0xFFFF << FMAC_RDATA_RDATA_Pos;
pub const FMAC_RDATA_RDATA: u32 = FMAC_RDATA_RDATA_Msk;
pub const GPIO_MODER_MODE0_Pos: u32 = 0;
pub const GPIO_MODER_MODE0_Msk: u32 = 0x3 << GPIO_MODER_MODE0_Pos;
pub const GPIO_MODER_MODE0: u32 = GPIO_MODER_MODE0_Msk;
pub const GPIO_MODER_MODE0_0: u32 = 0x1 << GPIO_MODER_MODE0_Pos;
pub const GPIO_MODER_MODE0_1: u32 = 0x2 << GPIO_MODER_MODE0_Pos;
pub const GPIO_MODER_MODE1_Pos: u32 = 2;
pub const GPIO_MODER_MODE1_Msk: u32 = 0x3 << GPIO_MODER_MODE1_Pos;
pub const GPIO_MODER_MODE1: u32 = GPIO_MODER_MODE1_Msk;
pub const GPIO_MODER_MODE1_0: u32 = 0x1 << GPIO_MODER_MODE1_Pos;
pub const GPIO_MODER_MODE1_1: u32 = 0x2 << GPIO_MODER_MODE1_Pos;
pub const GPIO_MODER_MODE2_Pos: u32 = 4;
pub const GPIO_MODER_MODE2_Msk: u32 = 0x3 << GPIO_MODER_MODE2_Pos;
pub const GPIO_MODER_MODE2: u32 = GPIO_MODER_MODE2_Msk;
pub const GPIO_MODER_MODE2_0: u32 = 0x1 << GPIO_MODER_MODE2_Pos;
pub const GPIO_MODER_MODE2_1: u32 = 0x2 << GPIO_MODER_MODE2_Pos;
pub const GPIO_MODER_MODE3_Pos: u32 = 6;
pub const GPIO_MODER_MODE3_Msk: u32 = 0x3 << GPIO_MODER_MODE3_Pos;
pub const GPIO_MODER_MODE3: u32 = GPIO_MODER_MODE3_Msk;
pub const GPIO_MODER_MODE3_0: u32 = 0x1 << GPIO_MODER_MODE3_Pos;
pub const GPIO_MODER_MODE3_1: u32 = 0x2 << GPIO_MODER_MODE3_Pos;
pub const GPIO_MODER_MODE4_Pos: u32 = 8;
pub const GPIO_MODER_MODE4_Msk: u32 = 0x3 << GPIO_MODER_MODE4_Pos;
pub const GPIO_MODER_MODE4: u32 = GPIO_MODER_MODE4_Msk;
pub const GPIO_MODER_MODE4_0: u32 = 0x1 << GPIO_MODER_MODE4_Pos;
pub const GPIO_MODER_MODE4_1: u32 = 0x2 << GPIO_MODER_MODE4_Pos;
pub const GPIO_MODER_MODE5_Pos: u32 = 10;
pub const GPIO_MODER_MODE5_Msk: u32 = 0x3 << GPIO_MODER_MODE5_Pos;
pub const GPIO_MODER_MODE5: u32 = GPIO_MODER_MODE5_Msk;
pub const GPIO_MODER_MODE5_0: u32 = 0x1 << GPIO_MODER_MODE5_Pos;
pub const GPIO_MODER_MODE5_1: u32 = 0x2 << GPIO_MODER_MODE5_Pos;
pub const GPIO_MODER_MODE6_Pos: u32 = 12;
pub const GPIO_MODER_MODE6_Msk: u32 = 0x3 << GPIO_MODER_MODE6_Pos;
pub const GPIO_MODER_MODE6: u32 = GPIO_MODER_MODE6_Msk;
pub const GPIO_MODER_MODE6_0: u32 = 0x1 << GPIO_MODER_MODE6_Pos;
pub const GPIO_MODER_MODE6_1: u32 = 0x2 << GPIO_MODER_MODE6_Pos;
pub const GPIO_MODER_MODE7_Pos: u32 = 14;
pub const GPIO_MODER_MODE7_Msk: u32 = 0x3 << GPIO_MODER_MODE7_Pos;
pub const GPIO_MODER_MODE7: u32 = GPIO_MODER_MODE7_Msk;
pub const GPIO_MODER_MODE7_0: u32 = 0x1 << GPIO_MODER_MODE7_Pos;
pub const GPIO_MODER_MODE7_1: u32 = 0x2 << GPIO_MODER_MODE7_Pos;
pub const GPIO_MODER_MODE8_Pos: u32 = 16;
pub const GPIO_MODER_MODE8_Msk: u32 = 0x3 << GPIO_MODER_MODE8_Pos;
pub const GPIO_MODER_MODE8: u32 = GPIO_MODER_MODE8_Msk;
pub const GPIO_MODER_MODE8_0: u32 = 0x1 << GPIO_MODER_MODE8_Pos;
pub const GPIO_MODER_MODE8_1: u32 = 0x2 << GPIO_MODER_MODE8_Pos;
pub const GPIO_MODER_MODE9_Pos: u32 = 18;
pub const GPIO_MODER_MODE9_Msk: u32 = 0x3 << GPIO_MODER_MODE9_Pos;
pub const GPIO_MODER_MODE9: u32 = GPIO_MODER_MODE9_Msk;
pub const GPIO_MODER_MODE9_0: u32 = 0x1 << GPIO_MODER_MODE9_Pos;
pub const GPIO_MODER_MODE9_1: u32 = 0x2 << GPIO_MODER_MODE9_Pos;
pub const GPIO_MODER_MODE10_Pos: u32 = 20;
pub const GPIO_MODER_MODE10_Msk: u32 = 0x3 << GPIO_MODER_MODE10_Pos;
pub const GPIO_MODER_MODE10: u32 = GPIO_MODER_MODE10_Msk;
pub const GPIO_MODER_MODE10_0: u32 = 0x1 << GPIO_MODER_MODE10_Pos;
pub const GPIO_MODER_MODE10_1: u32 = 0x2 << GPIO_MODER_MODE10_Pos;
pub const GPIO_MODER_MODE11_Pos: u32 = 22;
pub const GPIO_MODER_MODE11_Msk: u32 = 0x3 << GPIO_MODER_MODE11_Pos;
pub const GPIO_MODER_MODE11: u32 = GPIO_MODER_MODE11_Msk;
pub const GPIO_MODER_MODE11_0: u32 = 0x1 << GPIO_MODER_MODE11_Pos;
pub const GPIO_MODER_MODE11_1: u32 = 0x2 << GPIO_MODER_MODE11_Pos;
pub const GPIO_MODER_MODE12_Pos: u32 = 24;
pub const GPIO_MODER_MODE12_Msk: u32 = 0x3 << GPIO_MODER_MODE12_Pos;
pub const GPIO_MODER_MODE12: u32 = GPIO_MODER_MODE12_Msk;
pub const GPIO_MODER_MODE12_0: u32 = 0x1 << GPIO_MODER_MODE12_Pos;
pub const GPIO_MODER_MODE12_1: u32 = 0x2 << GPIO_MODER_MODE12_Pos;
pub const GPIO_MODER_MODE13_Pos: u32 = 26;
pub const GPIO_MODER_MODE13_Msk: u32 = 0x3 << GPIO_MODER_MODE13_Pos;
pub const GPIO_MODER_MODE13: u32 = GPIO_MODER_MODE13_Msk;
pub const GPIO_MODER_MODE13_0: u32 = 0x1 << GPIO_MODER_MODE13_Pos;
pub const GPIO_MODER_MODE13_1: u32 = 0x2 << GPIO_MODER_MODE13_Pos;
pub const GPIO_MODER_MODE14_Pos: u32 = 28;
pub const GPIO_MODER_MODE14_Msk: u32 = 0x3 << GPIO_MODER_MODE14_Pos;
pub const GPIO_MODER_MODE14: u32 = GPIO_MODER_MODE14_Msk;
pub const GPIO_MODER_MODE14_0: u32 = 0x1 << GPIO_MODER_MODE14_Pos;
pub const GPIO_MODER_MODE14_1: u32 = 0x2 << GPIO_MODER_MODE14_Pos;
pub const GPIO_MODER_MODE15_Pos: u32 = 30;
pub const GPIO_MODER_MODE15_Msk: u32 = 0x3 << GPIO_MODER_MODE15_Pos;
pub const GPIO_MODER_MODE15: u32 = GPIO_MODER_MODE15_Msk;
pub const GPIO_MODER_MODE15_0: u32 = 0x1 << GPIO_MODER_MODE15_Pos;
pub const GPIO_MODER_MODE15_1: u32 = 0x2 << GPIO_MODER_MODE15_Pos;
pub const GPIO_MODER_MODER0: u32 = GPIO_MODER_MODE0;
pub const GPIO_MODER_MODER0_0: u32 = GPIO_MODER_MODE0_0;
pub const GPIO_MODER_MODER0_1: u32 = GPIO_MODER_MODE0_1;
pub const GPIO_MODER_MODER1: u32 = GPIO_MODER_MODE1;
pub const GPIO_MODER_MODER1_0: u32 = GPIO_MODER_MODE1_0;
pub const GPIO_MODER_MODER1_1: u32 = GPIO_MODER_MODE1_1;
pub const GPIO_MODER_MODER2: u32 = GPIO_MODER_MODE2;
pub const GPIO_MODER_MODER2_0: u32 = GPIO_MODER_MODE2_0;
pub const GPIO_MODER_MODER2_1: u32 = GPIO_MODER_MODE2_1;
pub const GPIO_MODER_MODER3: u32 = GPIO_MODER_MODE3;
pub const GPIO_MODER_MODER3_0: u32 = GPIO_MODER_MODE3_0;
pub const GPIO_MODER_MODER3_1: u32 = GPIO_MODER_MODE3_1;
pub const GPIO_MODER_MODER4: u32 = GPIO_MODER_MODE4;
pub const GPIO_MODER_MODER4_0: u32 = GPIO_MODER_MODE4_0;
pub const GPIO_MODER_MODER4_1: u32 = GPIO_MODER_MODE4_1;
pub const GPIO_MODER_MODER5: u32 = GPIO_MODER_MODE5;
pub const GPIO_MODER_MODER5_0: u32 = GPIO_MODER_MODE5_0;
pub const GPIO_MODER_MODER5_1: u32 = GPIO_MODER_MODE5_1;
pub const GPIO_MODER_MODER6: u32 = GPIO_MODER_MODE6;
pub const GPIO_MODER_MODER6_0: u32 = GPIO_MODER_MODE6_0;
pub const GPIO_MODER_MODER6_1: u32 = GPIO_MODER_MODE6_1;
pub const GPIO_MODER_MODER7: u32 = GPIO_MODER_MODE7;
pub const GPIO_MODER_MODER7_0: u32 = GPIO_MODER_MODE7_0;
pub const GPIO_MODER_MODER7_1: u32 = GPIO_MODER_MODE7_1;
pub const GPIO_MODER_MODER8: u32 = GPIO_MODER_MODE8;
pub const GPIO_MODER_MODER8_0: u32 = GPIO_MODER_MODE8_0;
pub const GPIO_MODER_MODER8_1: u32 = GPIO_MODER_MODE8_1;
pub const GPIO_MODER_MODER9: u32 = GPIO_MODER_MODE9;
pub const GPIO_MODER_MODER9_0: u32 = GPIO_MODER_MODE9_0;
pub const GPIO_MODER_MODER9_1: u32 = GPIO_MODER_MODE9_1;
pub const GPIO_MODER_MODER10: u32 = GPIO_MODER_MODE10;
pub const GPIO_MODER_MODER10_0: u32 = GPIO_MODER_MODE10_0;
pub const GPIO_MODER_MODER10_1: u32 = GPIO_MODER_MODE10_1;
pub const GPIO_MODER_MODER11: u32 = GPIO_MODER_MODE11;
pub const GPIO_MODER_MODER11_0: u32 = GPIO_MODER_MODE11_0;
pub const GPIO_MODER_MODER11_1: u32 = GPIO_MODER_MODE11_1;
pub const GPIO_MODER_MODER12: u32 = GPIO_MODER_MODE12;
pub const GPIO_MODER_MODER12_0: u32 = GPIO_MODER_MODE12_0;
pub const GPIO_MODER_MODER12_1: u32 = GPIO_MODER_MODE12_1;
pub const GPIO_MODER_MODER13: u32 = GPIO_MODER_MODE13;
pub const GPIO_MODER_MODER13_0: u32 = GPIO_MODER_MODE13_0;
pub const GPIO_MODER_MODER13_1: u32 = GPIO_MODER_MODE13_1;
pub const GPIO_MODER_MODER14: u32 = GPIO_MODER_MODE14;
pub const GPIO_MODER_MODER14_0: u32 = GPIO_MODER_MODE14_0;
pub const GPIO_MODER_MODER14_1: u32 = GPIO_MODER_MODE14_1;
pub const GPIO_MODER_MODER15: u32 = GPIO_MODER_MODE15;
pub const GPIO_MODER_MODER15_0: u32 = GPIO_MODER_MODE15_0;
pub const GPIO_MODER_MODER15_1: u32 = GPIO_MODER_MODE15_1;
pub const GPIO_OTYPER_OT0_Pos: u32 = 0;
pub const GPIO_OTYPER_OT0_Msk: u32 = 0x1 << GPIO_OTYPER_OT0_Pos;
pub const GPIO_OTYPER_OT0: u32 = GPIO_OTYPER_OT0_Msk;
pub const GPIO_OTYPER_OT1_Pos: u32 = 1;
pub const GPIO_OTYPER_OT1_Msk: u32 = 0x1 << GPIO_OTYPER_OT1_Pos;
pub const GPIO_OTYPER_OT1: u32 = GPIO_OTYPER_OT1_Msk;
pub const GPIO_OTYPER_OT2_Pos: u32 = 2;
pub const GPIO_OTYPER_OT2_Msk: u32 = 0x1 << GPIO_OTYPER_OT2_Pos;
pub const GPIO_OTYPER_OT2: u32 = GPIO_OTYPER_OT2_Msk;
pub const GPIO_OTYPER_OT3_Pos: u32 = 3;
pub const GPIO_OTYPER_OT3_Msk: u32 = 0x1 << GPIO_OTYPER_OT3_Pos;
pub const GPIO_OTYPER_OT3: u32 = GPIO_OTYPER_OT3_Msk;
pub const GPIO_OTYPER_OT4_Pos: u32 = 4;
pub const GPIO_OTYPER_OT4_Msk: u32 = 0x1 << GPIO_OTYPER_OT4_Pos;
pub const GPIO_OTYPER_OT4: u32 = GPIO_OTYPER_OT4_Msk;
pub const GPIO_OTYPER_OT5_Pos: u32 = 5;
pub const GPIO_OTYPER_OT5_Msk: u32 = 0x1 << GPIO_OTYPER_OT5_Pos;
pub const GPIO_OTYPER_OT5: u32 = GPIO_OTYPER_OT5_Msk;
pub const GPIO_OTYPER_OT6_Pos: u32 = 6;
pub const GPIO_OTYPER_OT6_Msk: u32 = 0x1 << GPIO_OTYPER_OT6_Pos;
pub const GPIO_OTYPER_OT6: u32 = GPIO_OTYPER_OT6_Msk;
pub const GPIO_OTYPER_OT7_Pos: u32 = 7;
pub const GPIO_OTYPER_OT7_Msk: u32 = 0x1 << GPIO_OTYPER_OT7_Pos;
pub const GPIO_OTYPER_OT7: u32 = GPIO_OTYPER_OT7_Msk;
pub const GPIO_OTYPER_OT8_Pos: u32 = 8;
pub const GPIO_OTYPER_OT8_Msk: u32 = 0x1 << GPIO_OTYPER_OT8_Pos;
pub const GPIO_OTYPER_OT8: u32 = GPIO_OTYPER_OT8_Msk;
pub const GPIO_OTYPER_OT9_Pos: u32 = 9;
pub const GPIO_OTYPER_OT9_Msk: u32 = 0x1 << GPIO_OTYPER_OT9_Pos;
pub const GPIO_OTYPER_OT9: u32 = GPIO_OTYPER_OT9_Msk;
pub const GPIO_OTYPER_OT10_Pos: u32 = 10;
pub const GPIO_OTYPER_OT10_Msk: u32 = 0x1 << GPIO_OTYPER_OT10_Pos;
pub const GPIO_OTYPER_OT10: u32 = GPIO_OTYPER_OT10_Msk;
pub const GPIO_OTYPER_OT11_Pos: u32 = 11;
pub const GPIO_OTYPER_OT11_Msk: u32 = 0x1 << GPIO_OTYPER_OT11_Pos;
pub const GPIO_OTYPER_OT11: u32 = GPIO_OTYPER_OT11_Msk;
pub const GPIO_OTYPER_OT12_Pos: u32 = 12;
pub const GPIO_OTYPER_OT12_Msk: u32 = 0x1 << GPIO_OTYPER_OT12_Pos;
pub const GPIO_OTYPER_OT12: u32 = GPIO_OTYPER_OT12_Msk;
pub const GPIO_OTYPER_OT13_Pos: u32 = 13;
pub const GPIO_OTYPER_OT13_Msk: u32 = 0x1 << GPIO_OTYPER_OT13_Pos;
pub const GPIO_OTYPER_OT13: u32 = GPIO_OTYPER_OT13_Msk;
pub const GPIO_OTYPER_OT14_Pos: u32 = 14;
pub const GPIO_OTYPER_OT14_Msk: u32 = 0x1 << GPIO_OTYPER_OT14_Pos;
pub const GPIO_OTYPER_OT14: u32 = GPIO_OTYPER_OT14_Msk;
pub const GPIO_OTYPER_OT15_Pos: u32 = 15;
pub const GPIO_OTYPER_OT15_Msk: u32 = 0x1 << GPIO_OTYPER_OT15_Pos;
pub const GPIO_OTYPER_OT15: u32 = GPIO_OTYPER_OT15_Msk;
pub const GPIO_OTYPER_OT_0: u32 = GPIO_OTYPER_OT0;
pub const GPIO_OTYPER_OT_1: u32 = GPIO_OTYPER_OT1;
pub const GPIO_OTYPER_OT_2: u32 = GPIO_OTYPER_OT2;
pub const GPIO_OTYPER_OT_3: u32 = GPIO_OTYPER_OT3;
pub const GPIO_OTYPER_OT_4: u32 = GPIO_OTYPER_OT4;
pub const GPIO_OTYPER_OT_5: u32 = GPIO_OTYPER_OT5;
pub const GPIO_OTYPER_OT_6: u32 = GPIO_OTYPER_OT6;
pub const GPIO_OTYPER_OT_7: u32 = GPIO_OTYPER_OT7;
pub const GPIO_OTYPER_OT_8: u32 = GPIO_OTYPER_OT8;
pub const GPIO_OTYPER_OT_9: u32 = GPIO_OTYPER_OT9;
pub const GPIO_OTYPER_OT_10: u32 = GPIO_OTYPER_OT10;
pub const GPIO_OTYPER_OT_11: u32 = GPIO_OTYPER_OT11;
pub const GPIO_OTYPER_OT_12: u32 = GPIO_OTYPER_OT12;
pub const GPIO_OTYPER_OT_13: u32 = GPIO_OTYPER_OT13;
pub const GPIO_OTYPER_OT_14: u32 = GPIO_OTYPER_OT14;
pub const GPIO_OTYPER_OT_15: u32 = GPIO_OTYPER_OT15;
pub const GPIO_OSPEEDR_OSPEED0_Pos: u32 = 0;
pub const GPIO_OSPEEDR_OSPEED0_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED0_Pos;
pub const GPIO_OSPEEDR_OSPEED0: u32 = GPIO_OSPEEDR_OSPEED0_Msk;
pub const GPIO_OSPEEDR_OSPEED0_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED0_Pos;
pub const GPIO_OSPEEDR_OSPEED0_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED0_Pos;
pub const GPIO_OSPEEDR_OSPEED1_Pos: u32 = 2;
pub const GPIO_OSPEEDR_OSPEED1_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED1_Pos;
pub const GPIO_OSPEEDR_OSPEED1: u32 = GPIO_OSPEEDR_OSPEED1_Msk;
pub const GPIO_OSPEEDR_OSPEED1_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED1_Pos;
pub const GPIO_OSPEEDR_OSPEED1_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED1_Pos;
pub const GPIO_OSPEEDR_OSPEED2_Pos: u32 = 4;
pub const GPIO_OSPEEDR_OSPEED2_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED2_Pos;
pub const GPIO_OSPEEDR_OSPEED2: u32 = GPIO_OSPEEDR_OSPEED2_Msk;
pub const GPIO_OSPEEDR_OSPEED2_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED2_Pos;
pub const GPIO_OSPEEDR_OSPEED2_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED2_Pos;
pub const GPIO_OSPEEDR_OSPEED3_Pos: u32 = 6;
pub const GPIO_OSPEEDR_OSPEED3_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED3_Pos;
pub const GPIO_OSPEEDR_OSPEED3: u32 = GPIO_OSPEEDR_OSPEED3_Msk;
pub const GPIO_OSPEEDR_OSPEED3_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED3_Pos;
pub const GPIO_OSPEEDR_OSPEED3_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED3_Pos;
pub const GPIO_OSPEEDR_OSPEED4_Pos: u32 = 8;
pub const GPIO_OSPEEDR_OSPEED4_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED4_Pos;
pub const GPIO_OSPEEDR_OSPEED4: u32 = GPIO_OSPEEDR_OSPEED4_Msk;
pub const GPIO_OSPEEDR_OSPEED4_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED4_Pos;
pub const GPIO_OSPEEDR_OSPEED4_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED4_Pos;
pub const GPIO_OSPEEDR_OSPEED5_Pos: u32 = 10;
pub const GPIO_OSPEEDR_OSPEED5_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED5_Pos;
pub const GPIO_OSPEEDR_OSPEED5: u32 = GPIO_OSPEEDR_OSPEED5_Msk;
pub const GPIO_OSPEEDR_OSPEED5_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED5_Pos;
pub const GPIO_OSPEEDR_OSPEED5_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED5_Pos;
pub const GPIO_OSPEEDR_OSPEED6_Pos: u32 = 12;
pub const GPIO_OSPEEDR_OSPEED6_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED6_Pos;
pub const GPIO_OSPEEDR_OSPEED6: u32 = GPIO_OSPEEDR_OSPEED6_Msk;
pub const GPIO_OSPEEDR_OSPEED6_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED6_Pos;
pub const GPIO_OSPEEDR_OSPEED6_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED6_Pos;
pub const GPIO_OSPEEDR_OSPEED7_Pos: u32 = 14;
pub const GPIO_OSPEEDR_OSPEED7_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED7_Pos;
pub const GPIO_OSPEEDR_OSPEED7: u32 = GPIO_OSPEEDR_OSPEED7_Msk;
pub const GPIO_OSPEEDR_OSPEED7_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED7_Pos;
pub const GPIO_OSPEEDR_OSPEED7_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED7_Pos;
pub const GPIO_OSPEEDR_OSPEED8_Pos: u32 = 16;
pub const GPIO_OSPEEDR_OSPEED8_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED8_Pos;
pub const GPIO_OSPEEDR_OSPEED8: u32 = GPIO_OSPEEDR_OSPEED8_Msk;
pub const GPIO_OSPEEDR_OSPEED8_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED8_Pos;
pub const GPIO_OSPEEDR_OSPEED8_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED8_Pos;
pub const GPIO_OSPEEDR_OSPEED9_Pos: u32 = 18;
pub const GPIO_OSPEEDR_OSPEED9_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED9_Pos;
pub const GPIO_OSPEEDR_OSPEED9: u32 = GPIO_OSPEEDR_OSPEED9_Msk;
pub const GPIO_OSPEEDR_OSPEED9_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED9_Pos;
pub const GPIO_OSPEEDR_OSPEED9_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED9_Pos;
pub const GPIO_OSPEEDR_OSPEED10_Pos: u32 = 20;
pub const GPIO_OSPEEDR_OSPEED10_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED10_Pos;
pub const GPIO_OSPEEDR_OSPEED10: u32 = GPIO_OSPEEDR_OSPEED10_Msk;
pub const GPIO_OSPEEDR_OSPEED10_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED10_Pos;
pub const GPIO_OSPEEDR_OSPEED10_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED10_Pos;
pub const GPIO_OSPEEDR_OSPEED11_Pos: u32 = 22;
pub const GPIO_OSPEEDR_OSPEED11_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED11_Pos;
pub const GPIO_OSPEEDR_OSPEED11: u32 = GPIO_OSPEEDR_OSPEED11_Msk;
pub const GPIO_OSPEEDR_OSPEED11_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED11_Pos;
pub const GPIO_OSPEEDR_OSPEED11_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED11_Pos;
pub const GPIO_OSPEEDR_OSPEED12_Pos: u32 = 24;
pub const GPIO_OSPEEDR_OSPEED12_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED12_Pos;
pub const GPIO_OSPEEDR_OSPEED12: u32 = GPIO_OSPEEDR_OSPEED12_Msk;
pub const GPIO_OSPEEDR_OSPEED12_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED12_Pos;
pub const GPIO_OSPEEDR_OSPEED12_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED12_Pos;
pub const GPIO_OSPEEDR_OSPEED13_Pos: u32 = 26;
pub const GPIO_OSPEEDR_OSPEED13_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED13_Pos;
pub const GPIO_OSPEEDR_OSPEED13: u32 = GPIO_OSPEEDR_OSPEED13_Msk;
pub const GPIO_OSPEEDR_OSPEED13_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED13_Pos;
pub const GPIO_OSPEEDR_OSPEED13_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED13_Pos;
pub const GPIO_OSPEEDR_OSPEED14_Pos: u32 = 28;
pub const GPIO_OSPEEDR_OSPEED14_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED14_Pos;
pub const GPIO_OSPEEDR_OSPEED14: u32 = GPIO_OSPEEDR_OSPEED14_Msk;
pub const GPIO_OSPEEDR_OSPEED14_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED14_Pos;
pub const GPIO_OSPEEDR_OSPEED14_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED14_Pos;
pub const GPIO_OSPEEDR_OSPEED15_Pos: u32 = 30;
pub const GPIO_OSPEEDR_OSPEED15_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED15_Pos;
pub const GPIO_OSPEEDR_OSPEED15: u32 = GPIO_OSPEEDR_OSPEED15_Msk;
pub const GPIO_OSPEEDR_OSPEED15_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED15_Pos;
pub const GPIO_OSPEEDR_OSPEED15_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED15_Pos;
pub const GPIO_OSPEEDER_OSPEEDR0: u32 = GPIO_OSPEEDR_OSPEED0;
pub const GPIO_OSPEEDER_OSPEEDR0_0: u32 = GPIO_OSPEEDR_OSPEED0_0;
pub const GPIO_OSPEEDER_OSPEEDR0_1: u32 = GPIO_OSPEEDR_OSPEED0_1;
pub const GPIO_OSPEEDER_OSPEEDR1: u32 = GPIO_OSPEEDR_OSPEED1;
pub const GPIO_OSPEEDER_OSPEEDR1_0: u32 = GPIO_OSPEEDR_OSPEED1_0;
pub const GPIO_OSPEEDER_OSPEEDR1_1: u32 = GPIO_OSPEEDR_OSPEED1_1;
pub const GPIO_OSPEEDER_OSPEEDR2: u32 = GPIO_OSPEEDR_OSPEED2;
pub const GPIO_OSPEEDER_OSPEEDR2_0: u32 = GPIO_OSPEEDR_OSPEED2_0;
pub const GPIO_OSPEEDER_OSPEEDR2_1: u32 = GPIO_OSPEEDR_OSPEED2_1;
pub const GPIO_OSPEEDER_OSPEEDR3: u32 = GPIO_OSPEEDR_OSPEED3;
pub const GPIO_OSPEEDER_OSPEEDR3_0: u32 = GPIO_OSPEEDR_OSPEED3_0;
pub const GPIO_OSPEEDER_OSPEEDR3_1: u32 = GPIO_OSPEEDR_OSPEED3_1;
pub const GPIO_OSPEEDER_OSPEEDR4: u32 = GPIO_OSPEEDR_OSPEED4;
pub const GPIO_OSPEEDER_OSPEEDR4_0: u32 = GPIO_OSPEEDR_OSPEED4_0;
pub const GPIO_OSPEEDER_OSPEEDR4_1: u32 = GPIO_OSPEEDR_OSPEED4_1;
pub const GPIO_OSPEEDER_OSPEEDR5: u32 = GPIO_OSPEEDR_OSPEED5;
pub const GPIO_OSPEEDER_OSPEEDR5_0: u32 = GPIO_OSPEEDR_OSPEED5_0;
pub const GPIO_OSPEEDER_OSPEEDR5_1: u32 = GPIO_OSPEEDR_OSPEED5_1;
pub const GPIO_OSPEEDER_OSPEEDR6: u32 = GPIO_OSPEEDR_OSPEED6;
pub const GPIO_OSPEEDER_OSPEEDR6_0: u32 = GPIO_OSPEEDR_OSPEED6_0;
pub const GPIO_OSPEEDER_OSPEEDR6_1: u32 = GPIO_OSPEEDR_OSPEED6_1;
pub const GPIO_OSPEEDER_OSPEEDR7: u32 = GPIO_OSPEEDR_OSPEED7;
pub const GPIO_OSPEEDER_OSPEEDR7_0: u32 = GPIO_OSPEEDR_OSPEED7_0;
pub const GPIO_OSPEEDER_OSPEEDR7_1: u32 = GPIO_OSPEEDR_OSPEED7_1;
pub const GPIO_OSPEEDER_OSPEEDR8: u32 = GPIO_OSPEEDR_OSPEED8;
pub const GPIO_OSPEEDER_OSPEEDR8_0: u32 = GPIO_OSPEEDR_OSPEED8_0;
pub const GPIO_OSPEEDER_OSPEEDR8_1: u32 = GPIO_OSPEEDR_OSPEED8_1;
pub const GPIO_OSPEEDER_OSPEEDR9: u32 = GPIO_OSPEEDR_OSPEED9;
pub const GPIO_OSPEEDER_OSPEEDR9_0: u32 = GPIO_OSPEEDR_OSPEED9_0;
pub const GPIO_OSPEEDER_OSPEEDR9_1: u32 = GPIO_OSPEEDR_OSPEED9_1;
pub const GPIO_OSPEEDER_OSPEEDR10: u32 = GPIO_OSPEEDR_OSPEED10;
pub const GPIO_OSPEEDER_OSPEEDR10_0: u32 = GPIO_OSPEEDR_OSPEED10_0;
pub const GPIO_OSPEEDER_OSPEEDR10_1: u32 = GPIO_OSPEEDR_OSPEED10_1;
pub const GPIO_OSPEEDER_OSPEEDR11: u32 = GPIO_OSPEEDR_OSPEED11;
pub const GPIO_OSPEEDER_OSPEEDR11_0: u32 = GPIO_OSPEEDR_OSPEED11_0;
pub const GPIO_OSPEEDER_OSPEEDR11_1: u32 = GPIO_OSPEEDR_OSPEED11_1;
pub const GPIO_OSPEEDER_OSPEEDR12: u32 = GPIO_OSPEEDR_OSPEED12;
pub const GPIO_OSPEEDER_OSPEEDR12_0: u32 = GPIO_OSPEEDR_OSPEED12_0;
pub const GPIO_OSPEEDER_OSPEEDR12_1: u32 = GPIO_OSPEEDR_OSPEED12_1;
pub const GPIO_OSPEEDER_OSPEEDR13: u32 = GPIO_OSPEEDR_OSPEED13;
pub const GPIO_OSPEEDER_OSPEEDR13_0: u32 = GPIO_OSPEEDR_OSPEED13_0;
pub const GPIO_OSPEEDER_OSPEEDR13_1: u32 = GPIO_OSPEEDR_OSPEED13_1;
pub const GPIO_OSPEEDER_OSPEEDR14: u32 = GPIO_OSPEEDR_OSPEED14;
pub const GPIO_OSPEEDER_OSPEEDR14_0: u32 = GPIO_OSPEEDR_OSPEED14_0;
pub const GPIO_OSPEEDER_OSPEEDR14_1: u32 = GPIO_OSPEEDR_OSPEED14_1;
pub const GPIO_OSPEEDER_OSPEEDR15: u32 = GPIO_OSPEEDR_OSPEED15;
pub const GPIO_OSPEEDER_OSPEEDR15_0: u32 = GPIO_OSPEEDR_OSPEED15_0;
pub const GPIO_OSPEEDER_OSPEEDR15_1: u32 = GPIO_OSPEEDR_OSPEED15_1;
pub const GPIO_PUPDR_PUPD0_Pos: u32 = 0;
pub const GPIO_PUPDR_PUPD0_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD0_Pos;
pub const GPIO_PUPDR_PUPD0: u32 = GPIO_PUPDR_PUPD0_Msk;
pub const GPIO_PUPDR_PUPD0_0: u32 = 0x1 << GPIO_PUPDR_PUPD0_Pos;
pub const GPIO_PUPDR_PUPD0_1: u32 = 0x2 << GPIO_PUPDR_PUPD0_Pos;
pub const GPIO_PUPDR_PUPD1_Pos: u32 = 2;
pub const GPIO_PUPDR_PUPD1_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD1_Pos;
pub const GPIO_PUPDR_PUPD1: u32 = GPIO_PUPDR_PUPD1_Msk;
pub const GPIO_PUPDR_PUPD1_0: u32 = 0x1 << GPIO_PUPDR_PUPD1_Pos;
pub const GPIO_PUPDR_PUPD1_1: u32 = 0x2 << GPIO_PUPDR_PUPD1_Pos;
pub const GPIO_PUPDR_PUPD2_Pos: u32 = 4;
pub const GPIO_PUPDR_PUPD2_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD2_Pos;
pub const GPIO_PUPDR_PUPD2: u32 = GPIO_PUPDR_PUPD2_Msk;
pub const GPIO_PUPDR_PUPD2_0: u32 = 0x1 << GPIO_PUPDR_PUPD2_Pos;
pub const GPIO_PUPDR_PUPD2_1: u32 = 0x2 << GPIO_PUPDR_PUPD2_Pos;
pub const GPIO_PUPDR_PUPD3_Pos: u32 = 6;
pub const GPIO_PUPDR_PUPD3_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD3_Pos;
pub const GPIO_PUPDR_PUPD3: u32 = GPIO_PUPDR_PUPD3_Msk;
pub const GPIO_PUPDR_PUPD3_0: u32 = 0x1 << GPIO_PUPDR_PUPD3_Pos;
pub const GPIO_PUPDR_PUPD3_1: u32 = 0x2 << GPIO_PUPDR_PUPD3_Pos;
pub const GPIO_PUPDR_PUPD4_Pos: u32 = 8;
pub const GPIO_PUPDR_PUPD4_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD4_Pos;
pub const GPIO_PUPDR_PUPD4: u32 = GPIO_PUPDR_PUPD4_Msk;
pub const GPIO_PUPDR_PUPD4_0: u32 = 0x1 << GPIO_PUPDR_PUPD4_Pos;
pub const GPIO_PUPDR_PUPD4_1: u32 = 0x2 << GPIO_PUPDR_PUPD4_Pos;
pub const GPIO_PUPDR_PUPD5_Pos: u32 = 10;
pub const GPIO_PUPDR_PUPD5_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD5_Pos;
pub const GPIO_PUPDR_PUPD5: u32 = GPIO_PUPDR_PUPD5_Msk;
pub const GPIO_PUPDR_PUPD5_0: u32 = 0x1 << GPIO_PUPDR_PUPD5_Pos;
pub const GPIO_PUPDR_PUPD5_1: u32 = 0x2 << GPIO_PUPDR_PUPD5_Pos;
pub const GPIO_PUPDR_PUPD6_Pos: u32 = 12;
pub const GPIO_PUPDR_PUPD6_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD6_Pos;
pub const GPIO_PUPDR_PUPD6: u32 = GPIO_PUPDR_PUPD6_Msk;
pub const GPIO_PUPDR_PUPD6_0: u32 = 0x1 << GPIO_PUPDR_PUPD6_Pos;
pub const GPIO_PUPDR_PUPD6_1: u32 = 0x2 << GPIO_PUPDR_PUPD6_Pos;
pub const GPIO_PUPDR_PUPD7_Pos: u32 = 14;
pub const GPIO_PUPDR_PUPD7_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD7_Pos;
pub const GPIO_PUPDR_PUPD7: u32 = GPIO_PUPDR_PUPD7_Msk;
pub const GPIO_PUPDR_PUPD7_0: u32 = 0x1 << GPIO_PUPDR_PUPD7_Pos;
pub const GPIO_PUPDR_PUPD7_1: u32 = 0x2 << GPIO_PUPDR_PUPD7_Pos;
pub const GPIO_PUPDR_PUPD8_Pos: u32 = 16;
pub const GPIO_PUPDR_PUPD8_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD8_Pos;
pub const GPIO_PUPDR_PUPD8: u32 = GPIO_PUPDR_PUPD8_Msk;
pub const GPIO_PUPDR_PUPD8_0: u32 = 0x1 << GPIO_PUPDR_PUPD8_Pos;
pub const GPIO_PUPDR_PUPD8_1: u32 = 0x2 << GPIO_PUPDR_PUPD8_Pos;
pub const GPIO_PUPDR_PUPD9_Pos: u32 = 18;
pub const GPIO_PUPDR_PUPD9_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD9_Pos;
pub const GPIO_PUPDR_PUPD9: u32 = GPIO_PUPDR_PUPD9_Msk;
pub const GPIO_PUPDR_PUPD9_0: u32 = 0x1 << GPIO_PUPDR_PUPD9_Pos;
pub const GPIO_PUPDR_PUPD9_1: u32 = 0x2 << GPIO_PUPDR_PUPD9_Pos;
pub const GPIO_PUPDR_PUPD10_Pos: u32 = 20;
pub const GPIO_PUPDR_PUPD10_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD10_Pos;
pub const GPIO_PUPDR_PUPD10: u32 = GPIO_PUPDR_PUPD10_Msk;
pub const GPIO_PUPDR_PUPD10_0: u32 = 0x1 << GPIO_PUPDR_PUPD10_Pos;
pub const GPIO_PUPDR_PUPD10_1: u32 = 0x2 << GPIO_PUPDR_PUPD10_Pos;
pub const GPIO_PUPDR_PUPD11_Pos: u32 = 22;
pub const GPIO_PUPDR_PUPD11_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD11_Pos;
pub const GPIO_PUPDR_PUPD11: u32 = GPIO_PUPDR_PUPD11_Msk;
pub const GPIO_PUPDR_PUPD11_0: u32 = 0x1 << GPIO_PUPDR_PUPD11_Pos;
pub const GPIO_PUPDR_PUPD11_1: u32 = 0x2 << GPIO_PUPDR_PUPD11_Pos;
pub const GPIO_PUPDR_PUPD12_Pos: u32 = 24;
pub const GPIO_PUPDR_PUPD12_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD12_Pos;
pub const GPIO_PUPDR_PUPD12: u32 = GPIO_PUPDR_PUPD12_Msk;
pub const GPIO_PUPDR_PUPD12_0: u32 = 0x1 << GPIO_PUPDR_PUPD12_Pos;
pub const GPIO_PUPDR_PUPD12_1: u32 = 0x2 << GPIO_PUPDR_PUPD12_Pos;
pub const GPIO_PUPDR_PUPD13_Pos: u32 = 26;
pub const GPIO_PUPDR_PUPD13_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD13_Pos;
pub const GPIO_PUPDR_PUPD13: u32 = GPIO_PUPDR_PUPD13_Msk;
pub const GPIO_PUPDR_PUPD13_0: u32 = 0x1 << GPIO_PUPDR_PUPD13_Pos;
pub const GPIO_PUPDR_PUPD13_1: u32 = 0x2 << GPIO_PUPDR_PUPD13_Pos;
pub const GPIO_PUPDR_PUPD14_Pos: u32 = 28;
pub const GPIO_PUPDR_PUPD14_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD14_Pos;
pub const GPIO_PUPDR_PUPD14: u32 = GPIO_PUPDR_PUPD14_Msk;
pub const GPIO_PUPDR_PUPD14_0: u32 = 0x1 << GPIO_PUPDR_PUPD14_Pos;
pub const GPIO_PUPDR_PUPD14_1: u32 = 0x2 << GPIO_PUPDR_PUPD14_Pos;
pub const GPIO_PUPDR_PUPD15_Pos: u32 = 30;
pub const GPIO_PUPDR_PUPD15_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD15_Pos;
pub const GPIO_PUPDR_PUPD15: u32 = GPIO_PUPDR_PUPD15_Msk;
pub const GPIO_PUPDR_PUPD15_0: u32 = 0x1 << GPIO_PUPDR_PUPD15_Pos;
pub const GPIO_PUPDR_PUPD15_1: u32 = 0x2 << GPIO_PUPDR_PUPD15_Pos;
pub const GPIO_PUPDR_PUPDR0: u32 = GPIO_PUPDR_PUPD0;
pub const GPIO_PUPDR_PUPDR0_0: u32 = GPIO_PUPDR_PUPD0_0;
pub const GPIO_PUPDR_PUPDR0_1: u32 = GPIO_PUPDR_PUPD0_1;
pub const GPIO_PUPDR_PUPDR1: u32 = GPIO_PUPDR_PUPD1;
pub const GPIO_PUPDR_PUPDR1_0: u32 = GPIO_PUPDR_PUPD1_0;
pub const GPIO_PUPDR_PUPDR1_1: u32 = GPIO_PUPDR_PUPD1_1;
pub const GPIO_PUPDR_PUPDR2: u32 = GPIO_PUPDR_PUPD2;
pub const GPIO_PUPDR_PUPDR2_0: u32 = GPIO_PUPDR_PUPD2_0;
pub const GPIO_PUPDR_PUPDR2_1: u32 = GPIO_PUPDR_PUPD2_1;
pub const GPIO_PUPDR_PUPDR3: u32 = GPIO_PUPDR_PUPD3;
pub const GPIO_PUPDR_PUPDR3_0: u32 = GPIO_PUPDR_PUPD3_0;
pub const GPIO_PUPDR_PUPDR3_1: u32 = GPIO_PUPDR_PUPD3_1;
pub const GPIO_PUPDR_PUPDR4: u32 = GPIO_PUPDR_PUPD4;
pub const GPIO_PUPDR_PUPDR4_0: u32 = GPIO_PUPDR_PUPD4_0;
pub const GPIO_PUPDR_PUPDR4_1: u32 = GPIO_PUPDR_PUPD4_1;
pub const GPIO_PUPDR_PUPDR5: u32 = GPIO_PUPDR_PUPD5;
pub const GPIO_PUPDR_PUPDR5_0: u32 = GPIO_PUPDR_PUPD5_0;
pub const GPIO_PUPDR_PUPDR5_1: u32 = GPIO_PUPDR_PUPD5_1;
pub const GPIO_PUPDR_PUPDR6: u32 = GPIO_PUPDR_PUPD6;
pub const GPIO_PUPDR_PUPDR6_0: u32 = GPIO_PUPDR_PUPD6_0;
pub const GPIO_PUPDR_PUPDR6_1: u32 = GPIO_PUPDR_PUPD6_1;
pub const GPIO_PUPDR_PUPDR7: u32 = GPIO_PUPDR_PUPD7;
pub const GPIO_PUPDR_PUPDR7_0: u32 = GPIO_PUPDR_PUPD7_0;
pub const GPIO_PUPDR_PUPDR7_1: u32 = GPIO_PUPDR_PUPD7_1;
pub const GPIO_PUPDR_PUPDR8: u32 = GPIO_PUPDR_PUPD8;
pub const GPIO_PUPDR_PUPDR8_0: u32 = GPIO_PUPDR_PUPD8_0;
pub const GPIO_PUPDR_PUPDR8_1: u32 = GPIO_PUPDR_PUPD8_1;
pub const GPIO_PUPDR_PUPDR9: u32 = GPIO_PUPDR_PUPD9;
pub const GPIO_PUPDR_PUPDR9_0: u32 = GPIO_PUPDR_PUPD9_0;
pub const GPIO_PUPDR_PUPDR9_1: u32 = GPIO_PUPDR_PUPD9_1;
pub const GPIO_PUPDR_PUPDR10: u32 = GPIO_PUPDR_PUPD10;
pub const GPIO_PUPDR_PUPDR10_0: u32 = GPIO_PUPDR_PUPD10_0;
pub const GPIO_PUPDR_PUPDR10_1: u32 = GPIO_PUPDR_PUPD10_1;
pub const GPIO_PUPDR_PUPDR11: u32 = GPIO_PUPDR_PUPD11;
pub const GPIO_PUPDR_PUPDR11_0: u32 = GPIO_PUPDR_PUPD11_0;
pub const GPIO_PUPDR_PUPDR11_1: u32 = GPIO_PUPDR_PUPD11_1;
pub const GPIO_PUPDR_PUPDR12: u32 = GPIO_PUPDR_PUPD12;
pub const GPIO_PUPDR_PUPDR12_0: u32 = GPIO_PUPDR_PUPD12_0;
pub const GPIO_PUPDR_PUPDR12_1: u32 = GPIO_PUPDR_PUPD12_1;
pub const GPIO_PUPDR_PUPDR13: u32 = GPIO_PUPDR_PUPD13;
pub const GPIO_PUPDR_PUPDR13_0: u32 = GPIO_PUPDR_PUPD13_0;
pub const GPIO_PUPDR_PUPDR13_1: u32 = GPIO_PUPDR_PUPD13_1;
pub const GPIO_PUPDR_PUPDR14: u32 = GPIO_PUPDR_PUPD14;
pub const GPIO_PUPDR_PUPDR14_0: u32 = GPIO_PUPDR_PUPD14_0;
pub const GPIO_PUPDR_PUPDR14_1: u32 = GPIO_PUPDR_PUPD14_1;
pub const GPIO_PUPDR_PUPDR15: u32 = GPIO_PUPDR_PUPD15;
pub const GPIO_PUPDR_PUPDR15_0: u32 = GPIO_PUPDR_PUPD15_0;
pub const GPIO_PUPDR_PUPDR15_1: u32 = GPIO_PUPDR_PUPD15_1;
pub const GPIO_IDR_ID0_Pos: u32 = 0;
pub const GPIO_IDR_ID0_Msk: u32 = 0x1 << GPIO_IDR_ID0_Pos;
pub const GPIO_IDR_ID0: u32 = GPIO_IDR_ID0_Msk;
pub const GPIO_IDR_ID1_Pos: u32 = 1;
pub const GPIO_IDR_ID1_Msk: u32 = 0x1 << GPIO_IDR_ID1_Pos;
pub const GPIO_IDR_ID1: u32 = GPIO_IDR_ID1_Msk;
pub const GPIO_IDR_ID2_Pos: u32 = 2;
pub const GPIO_IDR_ID2_Msk: u32 = 0x1 << GPIO_IDR_ID2_Pos;
pub const GPIO_IDR_ID2: u32 = GPIO_IDR_ID2_Msk;
pub const GPIO_IDR_ID3_Pos: u32 = 3;
pub const GPIO_IDR_ID3_Msk: u32 = 0x1 << GPIO_IDR_ID3_Pos;
pub const GPIO_IDR_ID3: u32 = GPIO_IDR_ID3_Msk;
pub const GPIO_IDR_ID4_Pos: u32 = 4;
pub const GPIO_IDR_ID4_Msk: u32 = 0x1 << GPIO_IDR_ID4_Pos;
pub const GPIO_IDR_ID4: u32 = GPIO_IDR_ID4_Msk;
pub const GPIO_IDR_ID5_Pos: u32 = 5;
pub const GPIO_IDR_ID5_Msk: u32 = 0x1 << GPIO_IDR_ID5_Pos;
pub const GPIO_IDR_ID5: u32 = GPIO_IDR_ID5_Msk;
pub const GPIO_IDR_ID6_Pos: u32 = 6;
pub const GPIO_IDR_ID6_Msk: u32 = 0x1 << GPIO_IDR_ID6_Pos;
pub const GPIO_IDR_ID6: u32 = GPIO_IDR_ID6_Msk;
pub const GPIO_IDR_ID7_Pos: u32 = 7;
pub const GPIO_IDR_ID7_Msk: u32 = 0x1 << GPIO_IDR_ID7_Pos;
pub const GPIO_IDR_ID7: u32 = GPIO_IDR_ID7_Msk;
pub const GPIO_IDR_ID8_Pos: u32 = 8;
pub const GPIO_IDR_ID8_Msk: u32 = 0x1 << GPIO_IDR_ID8_Pos;
pub const GPIO_IDR_ID8: u32 = GPIO_IDR_ID8_Msk;
pub const GPIO_IDR_ID9_Pos: u32 = 9;
pub const GPIO_IDR_ID9_Msk: u32 = 0x1 << GPIO_IDR_ID9_Pos;
pub const GPIO_IDR_ID9: u32 = GPIO_IDR_ID9_Msk;
pub const GPIO_IDR_ID10_Pos: u32 = 10;
pub const GPIO_IDR_ID10_Msk: u32 = 0x1 << GPIO_IDR_ID10_Pos;
pub const GPIO_IDR_ID10: u32 = GPIO_IDR_ID10_Msk;
pub const GPIO_IDR_ID11_Pos: u32 = 11;
pub const GPIO_IDR_ID11_Msk: u32 = 0x1 << GPIO_IDR_ID11_Pos;
pub const GPIO_IDR_ID11: u32 = GPIO_IDR_ID11_Msk;
pub const GPIO_IDR_ID12_Pos: u32 = 12;
pub const GPIO_IDR_ID12_Msk: u32 = 0x1 << GPIO_IDR_ID12_Pos;
pub const GPIO_IDR_ID12: u32 = GPIO_IDR_ID12_Msk;
pub const GPIO_IDR_ID13_Pos: u32 = 13;
pub const GPIO_IDR_ID13_Msk: u32 = 0x1 << GPIO_IDR_ID13_Pos;
pub const GPIO_IDR_ID13: u32 = GPIO_IDR_ID13_Msk;
pub const GPIO_IDR_ID14_Pos: u32 = 14;
pub const GPIO_IDR_ID14_Msk: u32 = 0x1 << GPIO_IDR_ID14_Pos;
pub const GPIO_IDR_ID14: u32 = GPIO_IDR_ID14_Msk;
pub const GPIO_IDR_ID15_Pos: u32 = 15;
pub const GPIO_IDR_ID15_Msk: u32 = 0x1 << GPIO_IDR_ID15_Pos;
pub const GPIO_IDR_ID15: u32 = GPIO_IDR_ID15_Msk;
pub const GPIO_IDR_IDR_0: u32 = GPIO_IDR_ID0;
pub const GPIO_IDR_IDR_1: u32 = GPIO_IDR_ID1;
pub const GPIO_IDR_IDR_2: u32 = GPIO_IDR_ID2;
pub const GPIO_IDR_IDR_3: u32 = GPIO_IDR_ID3;
pub const GPIO_IDR_IDR_4: u32 = GPIO_IDR_ID4;
pub const GPIO_IDR_IDR_5: u32 = GPIO_IDR_ID5;
pub const GPIO_IDR_IDR_6: u32 = GPIO_IDR_ID6;
pub const GPIO_IDR_IDR_7: u32 = GPIO_IDR_ID7;
pub const GPIO_IDR_IDR_8: u32 = GPIO_IDR_ID8;
pub const GPIO_IDR_IDR_9: u32 = GPIO_IDR_ID9;
pub const GPIO_IDR_IDR_10: u32 = GPIO_IDR_ID10;
pub const GPIO_IDR_IDR_11: u32 = GPIO_IDR_ID11;
pub const GPIO_IDR_IDR_12: u32 = GPIO_IDR_ID12;
pub const GPIO_IDR_IDR_13: u32 = GPIO_IDR_ID13;
pub const GPIO_IDR_IDR_14: u32 = GPIO_IDR_ID14;
pub const GPIO_IDR_IDR_15: u32 = GPIO_IDR_ID15;
pub const GPIO_OTYPER_IDR_0: u32 = GPIO_IDR_ID0;
pub const GPIO_OTYPER_IDR_1: u32 = GPIO_IDR_ID1;
pub const GPIO_OTYPER_IDR_2: u32 = GPIO_IDR_ID2;
pub const GPIO_OTYPER_IDR_3: u32 = GPIO_IDR_ID3;
pub const GPIO_OTYPER_IDR_4: u32 = GPIO_IDR_ID4;
pub const GPIO_OTYPER_IDR_5: u32 = GPIO_IDR_ID5;
pub const GPIO_OTYPER_IDR_6: u32 = GPIO_IDR_ID6;
pub const GPIO_OTYPER_IDR_7: u32 = GPIO_IDR_ID7;
pub const GPIO_OTYPER_IDR_8: u32 = GPIO_IDR_ID8;
pub const GPIO_OTYPER_IDR_9: u32 = GPIO_IDR_ID9;
pub const GPIO_OTYPER_IDR_10: u32 = GPIO_IDR_ID10;
pub const GPIO_OTYPER_IDR_11: u32 = GPIO_IDR_ID11;
pub const GPIO_OTYPER_IDR_12: u32 = GPIO_IDR_ID12;
pub const GPIO_OTYPER_IDR_13: u32 = GPIO_IDR_ID13;
pub const GPIO_OTYPER_IDR_14: u32 = GPIO_IDR_ID14;
pub const GPIO_OTYPER_IDR_15: u32 = GPIO_IDR_ID15;
pub const GPIO_ODR_OD0_Pos: u32 = 0;
pub const GPIO_ODR_OD0_Msk: u32 = 0x1 << GPIO_ODR_OD0_Pos;
pub const GPIO_ODR_OD0: u32 = GPIO_ODR_OD0_Msk;
pub const GPIO_ODR_OD1_Pos: u32 = 1;
pub const GPIO_ODR_OD1_Msk: u32 = 0x1 << GPIO_ODR_OD1_Pos;
pub const GPIO_ODR_OD1: u32 = GPIO_ODR_OD1_Msk;
pub const GPIO_ODR_OD2_Pos: u32 = 2;
pub const GPIO_ODR_OD2_Msk: u32 = 0x1 << GPIO_ODR_OD2_Pos;
pub const GPIO_ODR_OD2: u32 = GPIO_ODR_OD2_Msk;
pub const GPIO_ODR_OD3_Pos: u32 = 3;
pub const GPIO_ODR_OD3_Msk: u32 = 0x1 << GPIO_ODR_OD3_Pos;
pub const GPIO_ODR_OD3: u32 = GPIO_ODR_OD3_Msk;
pub const GPIO_ODR_OD4_Pos: u32 = 4;
pub const GPIO_ODR_OD4_Msk: u32 = 0x1 << GPIO_ODR_OD4_Pos;
pub const GPIO_ODR_OD4: u32 = GPIO_ODR_OD4_Msk;
pub const GPIO_ODR_OD5_Pos: u32 = 5;
pub const GPIO_ODR_OD5_Msk: u32 = 0x1 << GPIO_ODR_OD5_Pos;
pub const GPIO_ODR_OD5: u32 = GPIO_ODR_OD5_Msk;
pub const GPIO_ODR_OD6_Pos: u32 = 6;
pub const GPIO_ODR_OD6_Msk: u32 = 0x1 << GPIO_ODR_OD6_Pos;
pub const GPIO_ODR_OD6: u32 = GPIO_ODR_OD6_Msk;
pub const GPIO_ODR_OD7_Pos: u32 = 7;
pub const GPIO_ODR_OD7_Msk: u32 = 0x1 << GPIO_ODR_OD7_Pos;
pub const GPIO_ODR_OD7: u32 = GPIO_ODR_OD7_Msk;
pub const GPIO_ODR_OD8_Pos: u32 = 8;
pub const GPIO_ODR_OD8_Msk: u32 = 0x1 << GPIO_ODR_OD8_Pos;
pub const GPIO_ODR_OD8: u32 = GPIO_ODR_OD8_Msk;
pub const GPIO_ODR_OD9_Pos: u32 = 9;
pub const GPIO_ODR_OD9_Msk: u32 = 0x1 << GPIO_ODR_OD9_Pos;
pub const GPIO_ODR_OD9: u32 = GPIO_ODR_OD9_Msk;
pub const GPIO_ODR_OD10_Pos: u32 = 10;
pub const GPIO_ODR_OD10_Msk: u32 = 0x1 << GPIO_ODR_OD10_Pos;
pub const GPIO_ODR_OD10: u32 = GPIO_ODR_OD10_Msk;
pub const GPIO_ODR_OD11_Pos: u32 = 11;
pub const GPIO_ODR_OD11_Msk: u32 = 0x1 << GPIO_ODR_OD11_Pos;
pub const GPIO_ODR_OD11: u32 = GPIO_ODR_OD11_Msk;
pub const GPIO_ODR_OD12_Pos: u32 = 12;
pub const GPIO_ODR_OD12_Msk: u32 = 0x1 << GPIO_ODR_OD12_Pos;
pub const GPIO_ODR_OD12: u32 = GPIO_ODR_OD12_Msk;
pub const GPIO_ODR_OD13_Pos: u32 = 13;
pub const GPIO_ODR_OD13_Msk: u32 = 0x1 << GPIO_ODR_OD13_Pos;
pub const GPIO_ODR_OD13: u32 = GPIO_ODR_OD13_Msk;
pub const GPIO_ODR_OD14_Pos: u32 = 14;
pub const GPIO_ODR_OD14_Msk: u32 = 0x1 << GPIO_ODR_OD14_Pos;
pub const GPIO_ODR_OD14: u32 = GPIO_ODR_OD14_Msk;
pub const GPIO_ODR_OD15_Pos: u32 = 15;
pub const GPIO_ODR_OD15_Msk: u32 = 0x1 << GPIO_ODR_OD15_Pos;
pub const GPIO_ODR_OD15: u32 = GPIO_ODR_OD15_Msk;
pub const GPIO_ODR_ODR_0: u32 = GPIO_ODR_OD0;
pub const GPIO_ODR_ODR_1: u32 = GPIO_ODR_OD1;
pub const GPIO_ODR_ODR_2: u32 = GPIO_ODR_OD2;
pub const GPIO_ODR_ODR_3: u32 = GPIO_ODR_OD3;
pub const GPIO_ODR_ODR_4: u32 = GPIO_ODR_OD4;
pub const GPIO_ODR_ODR_5: u32 = GPIO_ODR_OD5;
pub const GPIO_ODR_ODR_6: u32 = GPIO_ODR_OD6;
pub const GPIO_ODR_ODR_7: u32 = GPIO_ODR_OD7;
pub const GPIO_ODR_ODR_8: u32 = GPIO_ODR_OD8;
pub const GPIO_ODR_ODR_9: u32 = GPIO_ODR_OD9;
pub const GPIO_ODR_ODR_10: u32 = GPIO_ODR_OD10;
pub const GPIO_ODR_ODR_11: u32 = GPIO_ODR_OD11;
pub const GPIO_ODR_ODR_12: u32 = GPIO_ODR_OD12;
pub const GPIO_ODR_ODR_13: u32 = GPIO_ODR_OD13;
pub const GPIO_ODR_ODR_14: u32 = GPIO_ODR_OD14;
pub const GPIO_ODR_ODR_15: u32 = GPIO_ODR_OD15;
pub const GPIO_OTYPER_ODR_0: u32 = GPIO_ODR_OD0;
pub const GPIO_OTYPER_ODR_1: u32 = GPIO_ODR_OD1;
pub const GPIO_OTYPER_ODR_2: u32 = GPIO_ODR_OD2;
pub const GPIO_OTYPER_ODR_3: u32 = GPIO_ODR_OD3;
pub const GPIO_OTYPER_ODR_4: u32 = GPIO_ODR_OD4;
pub const GPIO_OTYPER_ODR_5: u32 = GPIO_ODR_OD5;
pub const GPIO_OTYPER_ODR_6: u32 = GPIO_ODR_OD6;
pub const GPIO_OTYPER_ODR_7: u32 = GPIO_ODR_OD7;
pub const GPIO_OTYPER_ODR_8: u32 = GPIO_ODR_OD8;
pub const GPIO_OTYPER_ODR_9: u32 = GPIO_ODR_OD9;
pub const GPIO_OTYPER_ODR_10: u32 = GPIO_ODR_OD10;
pub const GPIO_OTYPER_ODR_11: u32 = GPIO_ODR_OD11;
pub const GPIO_OTYPER_ODR_12: u32 = GPIO_ODR_OD12;
pub const GPIO_OTYPER_ODR_13: u32 = GPIO_ODR_OD13;
pub const GPIO_OTYPER_ODR_14: u32 = GPIO_ODR_OD14;
pub const GPIO_OTYPER_ODR_15: u32 = GPIO_ODR_OD15;
pub const GPIO_BSRR_BS0_Pos: u32 = 0;
pub const GPIO_BSRR_BS0_Msk: u32 = 0x1 << GPIO_BSRR_BS0_Pos;
pub const GPIO_BSRR_BS0: u32 = GPIO_BSRR_BS0_Msk;
pub const GPIO_BSRR_BS1_Pos: u32 = 1;
pub const GPIO_BSRR_BS1_Msk: u32 = 0x1 << GPIO_BSRR_BS1_Pos;
pub const GPIO_BSRR_BS1: u32 = GPIO_BSRR_BS1_Msk;
pub const GPIO_BSRR_BS2_Pos: u32 = 2;
pub const GPIO_BSRR_BS2_Msk: u32 = 0x1 << GPIO_BSRR_BS2_Pos;
pub const GPIO_BSRR_BS2: u32 = GPIO_BSRR_BS2_Msk;
pub const GPIO_BSRR_BS3_Pos: u32 = 3;
pub const GPIO_BSRR_BS3_Msk: u32 = 0x1 << GPIO_BSRR_BS3_Pos;
pub const GPIO_BSRR_BS3: u32 = GPIO_BSRR_BS3_Msk;
pub const GPIO_BSRR_BS4_Pos: u32 = 4;
pub const GPIO_BSRR_BS4_Msk: u32 = 0x1 << GPIO_BSRR_BS4_Pos;
pub const GPIO_BSRR_BS4: u32 = GPIO_BSRR_BS4_Msk;
pub const GPIO_BSRR_BS5_Pos: u32 = 5;
pub const GPIO_BSRR_BS5_Msk: u32 = 0x1 << GPIO_BSRR_BS5_Pos;
pub const GPIO_BSRR_BS5: u32 = GPIO_BSRR_BS5_Msk;
pub const GPIO_BSRR_BS6_Pos: u32 = 6;
pub const GPIO_BSRR_BS6_Msk: u32 = 0x1 << GPIO_BSRR_BS6_Pos;
pub const GPIO_BSRR_BS6: u32 = GPIO_BSRR_BS6_Msk;
pub const GPIO_BSRR_BS7_Pos: u32 = 7;
pub const GPIO_BSRR_BS7_Msk: u32 = 0x1 << GPIO_BSRR_BS7_Pos;
pub const GPIO_BSRR_BS7: u32 = GPIO_BSRR_BS7_Msk;
pub const GPIO_BSRR_BS8_Pos: u32 = 8;
pub const GPIO_BSRR_BS8_Msk: u32 = 0x1 << GPIO_BSRR_BS8_Pos;
pub const GPIO_BSRR_BS8: u32 = GPIO_BSRR_BS8_Msk;
pub const GPIO_BSRR_BS9_Pos: u32 = 9;
pub const GPIO_BSRR_BS9_Msk: u32 = 0x1 << GPIO_BSRR_BS9_Pos;
pub const GPIO_BSRR_BS9: u32 = GPIO_BSRR_BS9_Msk;
pub const GPIO_BSRR_BS10_Pos: u32 = 10;
pub const GPIO_BSRR_BS10_Msk: u32 = 0x1 << GPIO_BSRR_BS10_Pos;
pub const GPIO_BSRR_BS10: u32 = GPIO_BSRR_BS10_Msk;
pub const GPIO_BSRR_BS11_Pos: u32 = 11;
pub const GPIO_BSRR_BS11_Msk: u32 = 0x1 << GPIO_BSRR_BS11_Pos;
pub const GPIO_BSRR_BS11: u32 = GPIO_BSRR_BS11_Msk;
pub const GPIO_BSRR_BS12_Pos: u32 = 12;
pub const GPIO_BSRR_BS12_Msk: u32 = 0x1 << GPIO_BSRR_BS12_Pos;
pub const GPIO_BSRR_BS12: u32 = GPIO_BSRR_BS12_Msk;
pub const GPIO_BSRR_BS13_Pos: u32 = 13;
pub const GPIO_BSRR_BS13_Msk: u32 = 0x1 << GPIO_BSRR_BS13_Pos;
pub const GPIO_BSRR_BS13: u32 = GPIO_BSRR_BS13_Msk;
pub const GPIO_BSRR_BS14_Pos: u32 = 14;
pub const GPIO_BSRR_BS14_Msk: u32 = 0x1 << GPIO_BSRR_BS14_Pos;
pub const GPIO_BSRR_BS14: u32 = GPIO_BSRR_BS14_Msk;
pub const GPIO_BSRR_BS15_Pos: u32 = 15;
pub const GPIO_BSRR_BS15_Msk: u32 = 0x1 << GPIO_BSRR_BS15_Pos;
pub const GPIO_BSRR_BS15: u32 = GPIO_BSRR_BS15_Msk;
pub const GPIO_BSRR_BR0_Pos: u32 = 16;
pub const GPIO_BSRR_BR0_Msk: u32 = 0x1 << GPIO_BSRR_BR0_Pos;
pub const GPIO_BSRR_BR0: u32 = GPIO_BSRR_BR0_Msk;
pub const GPIO_BSRR_BR1_Pos: u32 = 17;
pub const GPIO_BSRR_BR1_Msk: u32 = 0x1 << GPIO_BSRR_BR1_Pos;
pub const GPIO_BSRR_BR1: u32 = GPIO_BSRR_BR1_Msk;
pub const GPIO_BSRR_BR2_Pos: u32 = 18;
pub const GPIO_BSRR_BR2_Msk: u32 = 0x1 << GPIO_BSRR_BR2_Pos;
pub const GPIO_BSRR_BR2: u32 = GPIO_BSRR_BR2_Msk;
pub const GPIO_BSRR_BR3_Pos: u32 = 19;
pub const GPIO_BSRR_BR3_Msk: u32 = 0x1 << GPIO_BSRR_BR3_Pos;
pub const GPIO_BSRR_BR3: u32 = GPIO_BSRR_BR3_Msk;
pub const GPIO_BSRR_BR4_Pos: u32 = 20;
pub const GPIO_BSRR_BR4_Msk: u32 = 0x1 << GPIO_BSRR_BR4_Pos;
pub const GPIO_BSRR_BR4: u32 = GPIO_BSRR_BR4_Msk;
pub const GPIO_BSRR_BR5_Pos: u32 = 21;
pub const GPIO_BSRR_BR5_Msk: u32 = 0x1 << GPIO_BSRR_BR5_Pos;
pub const GPIO_BSRR_BR5: u32 = GPIO_BSRR_BR5_Msk;
pub const GPIO_BSRR_BR6_Pos: u32 = 22;
pub const GPIO_BSRR_BR6_Msk: u32 = 0x1 << GPIO_BSRR_BR6_Pos;
pub const GPIO_BSRR_BR6: u32 = GPIO_BSRR_BR6_Msk;
pub const GPIO_BSRR_BR7_Pos: u32 = 23;
pub const GPIO_BSRR_BR7_Msk: u32 = 0x1 << GPIO_BSRR_BR7_Pos;
pub const GPIO_BSRR_BR7: u32 = GPIO_BSRR_BR7_Msk;
pub const GPIO_BSRR_BR8_Pos: u32 = 24;
pub const GPIO_BSRR_BR8_Msk: u32 = 0x1 << GPIO_BSRR_BR8_Pos;
pub const GPIO_BSRR_BR8: u32 = GPIO_BSRR_BR8_Msk;
pub const GPIO_BSRR_BR9_Pos: u32 = 25;
pub const GPIO_BSRR_BR9_Msk: u32 = 0x1 << GPIO_BSRR_BR9_Pos;
pub const GPIO_BSRR_BR9: u32 = GPIO_BSRR_BR9_Msk;
pub const GPIO_BSRR_BR10_Pos: u32 = 26;
pub const GPIO_BSRR_BR10_Msk: u32 = 0x1 << GPIO_BSRR_BR10_Pos;
pub const GPIO_BSRR_BR10: u32 = GPIO_BSRR_BR10_Msk;
pub const GPIO_BSRR_BR11_Pos: u32 = 27;
pub const GPIO_BSRR_BR11_Msk: u32 = 0x1 << GPIO_BSRR_BR11_Pos;
pub const GPIO_BSRR_BR11: u32 = GPIO_BSRR_BR11_Msk;
pub const GPIO_BSRR_BR12_Pos: u32 = 28;
pub const GPIO_BSRR_BR12_Msk: u32 = 0x1 << GPIO_BSRR_BR12_Pos;
pub const GPIO_BSRR_BR12: u32 = GPIO_BSRR_BR12_Msk;
pub const GPIO_BSRR_BR13_Pos: u32 = 29;
pub const GPIO_BSRR_BR13_Msk: u32 = 0x1 << GPIO_BSRR_BR13_Pos;
pub const GPIO_BSRR_BR13: u32 = GPIO_BSRR_BR13_Msk;
pub const GPIO_BSRR_BR14_Pos: u32 = 30;
pub const GPIO_BSRR_BR14_Msk: u32 = 0x1 << GPIO_BSRR_BR14_Pos;
pub const GPIO_BSRR_BR14: u32 = GPIO_BSRR_BR14_Msk;
pub const GPIO_BSRR_BR15_Pos: u32 = 31;
pub const GPIO_BSRR_BR15_Msk: u32 = 0x1 << GPIO_BSRR_BR15_Pos;
pub const GPIO_BSRR_BR15: u32 = GPIO_BSRR_BR15_Msk;
pub const GPIO_BSRR_BS_0: u32 = GPIO_BSRR_BS0;
pub const GPIO_BSRR_BS_1: u32 = GPIO_BSRR_BS1;
pub const GPIO_BSRR_BS_2: u32 = GPIO_BSRR_BS2;
pub const GPIO_BSRR_BS_3: u32 = GPIO_BSRR_BS3;
pub const GPIO_BSRR_BS_4: u32 = GPIO_BSRR_BS4;
pub const GPIO_BSRR_BS_5: u32 = GPIO_BSRR_BS5;
pub const GPIO_BSRR_BS_6: u32 = GPIO_BSRR_BS6;
pub const GPIO_BSRR_BS_7: u32 = GPIO_BSRR_BS7;
pub const GPIO_BSRR_BS_8: u32 = GPIO_BSRR_BS8;
pub const GPIO_BSRR_BS_9: u32 = GPIO_BSRR_BS9;
pub const GPIO_BSRR_BS_10: u32 = GPIO_BSRR_BS10;
pub const GPIO_BSRR_BS_11: u32 = GPIO_BSRR_BS11;
pub const GPIO_BSRR_BS_12: u32 = GPIO_BSRR_BS12;
pub const GPIO_BSRR_BS_13: u32 = GPIO_BSRR_BS13;
pub const GPIO_BSRR_BS_14: u32 = GPIO_BSRR_BS14;
pub const GPIO_BSRR_BS_15: u32 = GPIO_BSRR_BS15;
pub const GPIO_BSRR_BR_0: u32 = GPIO_BSRR_BR0;
pub const GPIO_BSRR_BR_1: u32 = GPIO_BSRR_BR1;
pub const GPIO_BSRR_BR_2: u32 = GPIO_BSRR_BR2;
pub const GPIO_BSRR_BR_3: u32 = GPIO_BSRR_BR3;
pub const GPIO_BSRR_BR_4: u32 = GPIO_BSRR_BR4;
pub const GPIO_BSRR_BR_5: u32 = GPIO_BSRR_BR5;
pub const GPIO_BSRR_BR_6: u32 = GPIO_BSRR_BR6;
pub const GPIO_BSRR_BR_7: u32 = GPIO_BSRR_BR7;
pub const GPIO_BSRR_BR_8: u32 = GPIO_BSRR_BR8;
pub const GPIO_BSRR_BR_9: u32 = GPIO_BSRR_BR9;
pub const GPIO_BSRR_BR_10: u32 = GPIO_BSRR_BR10;
pub const GPIO_BSRR_BR_11: u32 = GPIO_BSRR_BR11;
pub const GPIO_BSRR_BR_12: u32 = GPIO_BSRR_BR12;
pub const GPIO_BSRR_BR_13: u32 = GPIO_BSRR_BR13;
pub const GPIO_BSRR_BR_14: u32 = GPIO_BSRR_BR14;
pub const GPIO_BSRR_BR_15: u32 = GPIO_BSRR_BR15;
pub const GPIO_LCKR_LCK0_Pos: u32 = 0;
pub const GPIO_LCKR_LCK0_Msk: u32 = 0x1 << GPIO_LCKR_LCK0_Pos;
pub const GPIO_LCKR_LCK0: u32 = GPIO_LCKR_LCK0_Msk;
pub const GPIO_LCKR_LCK1_Pos: u32 = 1;
pub const GPIO_LCKR_LCK1_Msk: u32 = 0x1 << GPIO_LCKR_LCK1_Pos;
pub const GPIO_LCKR_LCK1: u32 = GPIO_LCKR_LCK1_Msk;
pub const GPIO_LCKR_LCK2_Pos: u32 = 2;
pub const GPIO_LCKR_LCK2_Msk: u32 = 0x1 << GPIO_LCKR_LCK2_Pos;
pub const GPIO_LCKR_LCK2: u32 = GPIO_LCKR_LCK2_Msk;
pub const GPIO_LCKR_LCK3_Pos: u32 = 3;
pub const GPIO_LCKR_LCK3_Msk: u32 = 0x1 << GPIO_LCKR_LCK3_Pos;
pub const GPIO_LCKR_LCK3: u32 = GPIO_LCKR_LCK3_Msk;
pub const GPIO_LCKR_LCK4_Pos: u32 = 4;
pub const GPIO_LCKR_LCK4_Msk: u32 = 0x1 << GPIO_LCKR_LCK4_Pos;
pub const GPIO_LCKR_LCK4: u32 = GPIO_LCKR_LCK4_Msk;
pub const GPIO_LCKR_LCK5_Pos: u32 = 5;
pub const GPIO_LCKR_LCK5_Msk: u32 = 0x1 << GPIO_LCKR_LCK5_Pos;
pub const GPIO_LCKR_LCK5: u32 = GPIO_LCKR_LCK5_Msk;
pub const GPIO_LCKR_LCK6_Pos: u32 = 6;
pub const GPIO_LCKR_LCK6_Msk: u32 = 0x1 << GPIO_LCKR_LCK6_Pos;
pub const GPIO_LCKR_LCK6: u32 = GPIO_LCKR_LCK6_Msk;
pub const GPIO_LCKR_LCK7_Pos: u32 = 7;
pub const GPIO_LCKR_LCK7_Msk: u32 = 0x1 << GPIO_LCKR_LCK7_Pos;
pub const GPIO_LCKR_LCK7: u32 = GPIO_LCKR_LCK7_Msk;
pub const GPIO_LCKR_LCK8_Pos: u32 = 8;
pub const GPIO_LCKR_LCK8_Msk: u32 = 0x1 << GPIO_LCKR_LCK8_Pos;
pub const GPIO_LCKR_LCK8: u32 = GPIO_LCKR_LCK8_Msk;
pub const GPIO_LCKR_LCK9_Pos: u32 = 9;
pub const GPIO_LCKR_LCK9_Msk: u32 = 0x1 << GPIO_LCKR_LCK9_Pos;
pub const GPIO_LCKR_LCK9: u32 = GPIO_LCKR_LCK9_Msk;
pub const GPIO_LCKR_LCK10_Pos: u32 = 10;
pub const GPIO_LCKR_LCK10_Msk: u32 = 0x1 << GPIO_LCKR_LCK10_Pos;
pub const GPIO_LCKR_LCK10: u32 = GPIO_LCKR_LCK10_Msk;
pub const GPIO_LCKR_LCK11_Pos: u32 = 11;
pub const GPIO_LCKR_LCK11_Msk: u32 = 0x1 << GPIO_LCKR_LCK11_Pos;
pub const GPIO_LCKR_LCK11: u32 = GPIO_LCKR_LCK11_Msk;
pub const GPIO_LCKR_LCK12_Pos: u32 = 12;
pub const GPIO_LCKR_LCK12_Msk: u32 = 0x1 << GPIO_LCKR_LCK12_Pos;
pub const GPIO_LCKR_LCK12: u32 = GPIO_LCKR_LCK12_Msk;
pub const GPIO_LCKR_LCK13_Pos: u32 = 13;
pub const GPIO_LCKR_LCK13_Msk: u32 = 0x1 << GPIO_LCKR_LCK13_Pos;
pub const GPIO_LCKR_LCK13: u32 = GPIO_LCKR_LCK13_Msk;
pub const GPIO_LCKR_LCK14_Pos: u32 = 14;
pub const GPIO_LCKR_LCK14_Msk: u32 = 0x1 << GPIO_LCKR_LCK14_Pos;
pub const GPIO_LCKR_LCK14: u32 = GPIO_LCKR_LCK14_Msk;
pub const GPIO_LCKR_LCK15_Pos: u32 = 15;
pub const GPIO_LCKR_LCK15_Msk: u32 = 0x1 << GPIO_LCKR_LCK15_Pos;
pub const GPIO_LCKR_LCK15: u32 = GPIO_LCKR_LCK15_Msk;
pub const GPIO_LCKR_LCKK_Pos: u32 = 16;
pub const GPIO_LCKR_LCKK_Msk: u32 = 0x1 << GPIO_LCKR_LCKK_Pos;
pub const GPIO_LCKR_LCKK: u32 = GPIO_LCKR_LCKK_Msk;
pub const GPIO_AFRL_AFSEL0_Pos: u32 = 0;
pub const GPIO_AFRL_AFSEL0_Msk: u32 = 0xF << GPIO_AFRL_AFSEL0_Pos;
pub const GPIO_AFRL_AFSEL0: u32 = GPIO_AFRL_AFSEL0_Msk;
pub const GPIO_AFRL_AFSEL0_0: u32 = 0x1 << GPIO_AFRL_AFSEL0_Pos;
pub const GPIO_AFRL_AFSEL0_1: u32 = 0x2 << GPIO_AFRL_AFSEL0_Pos;
pub const GPIO_AFRL_AFSEL0_2: u32 = 0x4 << GPIO_AFRL_AFSEL0_Pos;
pub const GPIO_AFRL_AFSEL0_3: u32 = 0x8 << GPIO_AFRL_AFSEL0_Pos;
pub const GPIO_AFRL_AFSEL1_Pos: u32 = 4;
pub const GPIO_AFRL_AFSEL1_Msk: u32 = 0xF << GPIO_AFRL_AFSEL1_Pos;
pub const GPIO_AFRL_AFSEL1: u32 = GPIO_AFRL_AFSEL1_Msk;
pub const GPIO_AFRL_AFSEL1_0: u32 = 0x1 << GPIO_AFRL_AFSEL1_Pos;
pub const GPIO_AFRL_AFSEL1_1: u32 = 0x2 << GPIO_AFRL_AFSEL1_Pos;
pub const GPIO_AFRL_AFSEL1_2: u32 = 0x4 << GPIO_AFRL_AFSEL1_Pos;
pub const GPIO_AFRL_AFSEL1_3: u32 = 0x8 << GPIO_AFRL_AFSEL1_Pos;
pub const GPIO_AFRL_AFSEL2_Pos: u32 = 8;
pub const GPIO_AFRL_AFSEL2_Msk: u32 = 0xF << GPIO_AFRL_AFSEL2_Pos;
pub const GPIO_AFRL_AFSEL2: u32 = GPIO_AFRL_AFSEL2_Msk;
pub const GPIO_AFRL_AFSEL2_0: u32 = 0x1 << GPIO_AFRL_AFSEL2_Pos;
pub const GPIO_AFRL_AFSEL2_1: u32 = 0x2 << GPIO_AFRL_AFSEL2_Pos;
pub const GPIO_AFRL_AFSEL2_2: u32 = 0x4 << GPIO_AFRL_AFSEL2_Pos;
pub const GPIO_AFRL_AFSEL2_3: u32 = 0x8 << GPIO_AFRL_AFSEL2_Pos;
pub const GPIO_AFRL_AFSEL3_Pos: u32 = 12;
pub const GPIO_AFRL_AFSEL3_Msk: u32 = 0xF << GPIO_AFRL_AFSEL3_Pos;
pub const GPIO_AFRL_AFSEL3: u32 = GPIO_AFRL_AFSEL3_Msk;
pub const GPIO_AFRL_AFSEL3_0: u32 = 0x1 << GPIO_AFRL_AFSEL3_Pos;
pub const GPIO_AFRL_AFSEL3_1: u32 = 0x2 << GPIO_AFRL_AFSEL3_Pos;
pub const GPIO_AFRL_AFSEL3_2: u32 = 0x4 << GPIO_AFRL_AFSEL3_Pos;
pub const GPIO_AFRL_AFSEL3_3: u32 = 0x8 << GPIO_AFRL_AFSEL3_Pos;
pub const GPIO_AFRL_AFSEL4_Pos: u32 = 16;
pub const GPIO_AFRL_AFSEL4_Msk: u32 = 0xF << GPIO_AFRL_AFSEL4_Pos;
pub const GPIO_AFRL_AFSEL4: u32 = GPIO_AFRL_AFSEL4_Msk;
pub const GPIO_AFRL_AFSEL4_0: u32 = 0x1 << GPIO_AFRL_AFSEL4_Pos;
pub const GPIO_AFRL_AFSEL4_1: u32 = 0x2 << GPIO_AFRL_AFSEL4_Pos;
pub const GPIO_AFRL_AFSEL4_2: u32 = 0x4 << GPIO_AFRL_AFSEL4_Pos;
pub const GPIO_AFRL_AFSEL4_3: u32 = 0x8 << GPIO_AFRL_AFSEL4_Pos;
pub const GPIO_AFRL_AFSEL5_Pos: u32 = 20;
pub const GPIO_AFRL_AFSEL5_Msk: u32 = 0xF << GPIO_AFRL_AFSEL5_Pos;
pub const GPIO_AFRL_AFSEL5: u32 = GPIO_AFRL_AFSEL5_Msk;
pub const GPIO_AFRL_AFSEL5_0: u32 = 0x1 << GPIO_AFRL_AFSEL5_Pos;
pub const GPIO_AFRL_AFSEL5_1: u32 = 0x2 << GPIO_AFRL_AFSEL5_Pos;
pub const GPIO_AFRL_AFSEL5_2: u32 = 0x4 << GPIO_AFRL_AFSEL5_Pos;
pub const GPIO_AFRL_AFSEL5_3: u32 = 0x8 << GPIO_AFRL_AFSEL5_Pos;
pub const GPIO_AFRL_AFSEL6_Pos: u32 = 24;
pub const GPIO_AFRL_AFSEL6_Msk: u32 = 0xF << GPIO_AFRL_AFSEL6_Pos;
pub const GPIO_AFRL_AFSEL6: u32 = GPIO_AFRL_AFSEL6_Msk;
pub const GPIO_AFRL_AFSEL6_0: u32 = 0x1 << GPIO_AFRL_AFSEL6_Pos;
pub const GPIO_AFRL_AFSEL6_1: u32 = 0x2 << GPIO_AFRL_AFSEL6_Pos;
pub const GPIO_AFRL_AFSEL6_2: u32 = 0x4 << GPIO_AFRL_AFSEL6_Pos;
pub const GPIO_AFRL_AFSEL6_3: u32 = 0x8 << GPIO_AFRL_AFSEL6_Pos;
pub const GPIO_AFRL_AFSEL7_Pos: u32 = 28;
pub const GPIO_AFRL_AFSEL7_Msk: u32 = 0xF << GPIO_AFRL_AFSEL7_Pos;
pub const GPIO_AFRL_AFSEL7: u32 = GPIO_AFRL_AFSEL7_Msk;
pub const GPIO_AFRL_AFSEL7_0: u32 = 0x1 << GPIO_AFRL_AFSEL7_Pos;
pub const GPIO_AFRL_AFSEL7_1: u32 = 0x2 << GPIO_AFRL_AFSEL7_Pos;
pub const GPIO_AFRL_AFSEL7_2: u32 = 0x4 << GPIO_AFRL_AFSEL7_Pos;
pub const GPIO_AFRL_AFSEL7_3: u32 = 0x8 << GPIO_AFRL_AFSEL7_Pos;
pub const GPIO_AFRL_AFRL0: u32 = GPIO_AFRL_AFSEL0;
pub const GPIO_AFRL_AFRL1: u32 = GPIO_AFRL_AFSEL1;
pub const GPIO_AFRL_AFRL2: u32 = GPIO_AFRL_AFSEL2;
pub const GPIO_AFRL_AFRL3: u32 = GPIO_AFRL_AFSEL3;
pub const GPIO_AFRL_AFRL4: u32 = GPIO_AFRL_AFSEL4;
pub const GPIO_AFRL_AFRL5: u32 = GPIO_AFRL_AFSEL5;
pub const GPIO_AFRL_AFRL6: u32 = GPIO_AFRL_AFSEL6;
pub const GPIO_AFRL_AFRL7: u32 = GPIO_AFRL_AFSEL7;
pub const GPIO_AFRH_AFSEL8_Pos: u32 = 0;
pub const GPIO_AFRH_AFSEL8_Msk: u32 = 0xF << GPIO_AFRH_AFSEL8_Pos;
pub const GPIO_AFRH_AFSEL8: u32 = GPIO_AFRH_AFSEL8_Msk;
pub const GPIO_AFRH_AFSEL8_0: u32 = 0x1 << GPIO_AFRH_AFSEL8_Pos;
pub const GPIO_AFRH_AFSEL8_1: u32 = 0x2 << GPIO_AFRH_AFSEL8_Pos;
pub const GPIO_AFRH_AFSEL8_2: u32 = 0x4 << GPIO_AFRH_AFSEL8_Pos;
pub const GPIO_AFRH_AFSEL8_3: u32 = 0x8 << GPIO_AFRH_AFSEL8_Pos;
pub const GPIO_AFRH_AFSEL9_Pos: u32 = 4;
pub const GPIO_AFRH_AFSEL9_Msk: u32 = 0xF << GPIO_AFRH_AFSEL9_Pos;
pub const GPIO_AFRH_AFSEL9: u32 = GPIO_AFRH_AFSEL9_Msk;
pub const GPIO_AFRH_AFSEL9_0: u32 = 0x1 << GPIO_AFRH_AFSEL9_Pos;
pub const GPIO_AFRH_AFSEL9_1: u32 = 0x2 << GPIO_AFRH_AFSEL9_Pos;
pub const GPIO_AFRH_AFSEL9_2: u32 = 0x4 << GPIO_AFRH_AFSEL9_Pos;
pub const GPIO_AFRH_AFSEL9_3: u32 = 0x8 << GPIO_AFRH_AFSEL9_Pos;
pub const GPIO_AFRH_AFSEL10_Pos: u32 = 8;
pub const GPIO_AFRH_AFSEL10_Msk: u32 = 0xF << GPIO_AFRH_AFSEL10_Pos;
pub const GPIO_AFRH_AFSEL10: u32 = GPIO_AFRH_AFSEL10_Msk;
pub const GPIO_AFRH_AFSEL10_0: u32 = 0x1 << GPIO_AFRH_AFSEL10_Pos;
pub const GPIO_AFRH_AFSEL10_1: u32 = 0x2 << GPIO_AFRH_AFSEL10_Pos;
pub const GPIO_AFRH_AFSEL10_2: u32 = 0x4 << GPIO_AFRH_AFSEL10_Pos;
pub const GPIO_AFRH_AFSEL10_3: u32 = 0x8 << GPIO_AFRH_AFSEL10_Pos;
pub const GPIO_AFRH_AFSEL11_Pos: u32 = 12;
pub const GPIO_AFRH_AFSEL11_Msk: u32 = 0xF << GPIO_AFRH_AFSEL11_Pos;
pub const GPIO_AFRH_AFSEL11: u32 = GPIO_AFRH_AFSEL11_Msk;
pub const GPIO_AFRH_AFSEL11_0: u32 = 0x1 << GPIO_AFRH_AFSEL11_Pos;
pub const GPIO_AFRH_AFSEL11_1: u32 = 0x2 << GPIO_AFRH_AFSEL11_Pos;
pub const GPIO_AFRH_AFSEL11_2: u32 = 0x4 << GPIO_AFRH_AFSEL11_Pos;
pub const GPIO_AFRH_AFSEL11_3: u32 = 0x8 << GPIO_AFRH_AFSEL11_Pos;
pub const GPIO_AFRH_AFSEL12_Pos: u32 = 16;
pub const GPIO_AFRH_AFSEL12_Msk: u32 = 0xF << GPIO_AFRH_AFSEL12_Pos;
pub const GPIO_AFRH_AFSEL12: u32 = GPIO_AFRH_AFSEL12_Msk;
pub const GPIO_AFRH_AFSEL12_0: u32 = 0x1 << GPIO_AFRH_AFSEL12_Pos;
pub const GPIO_AFRH_AFSEL12_1: u32 = 0x2 << GPIO_AFRH_AFSEL12_Pos;
pub const GPIO_AFRH_AFSEL12_2: u32 = 0x4 << GPIO_AFRH_AFSEL12_Pos;
pub const GPIO_AFRH_AFSEL12_3: u32 = 0x8 << GPIO_AFRH_AFSEL12_Pos;
pub const GPIO_AFRH_AFSEL13_Pos: u32 = 20;
pub const GPIO_AFRH_AFSEL13_Msk: u32 = 0xF << GPIO_AFRH_AFSEL13_Pos;
pub const GPIO_AFRH_AFSEL13: u32 = GPIO_AFRH_AFSEL13_Msk;
pub const GPIO_AFRH_AFSEL13_0: u32 = 0x1 << GPIO_AFRH_AFSEL13_Pos;
pub const GPIO_AFRH_AFSEL13_1: u32 = 0x2 << GPIO_AFRH_AFSEL13_Pos;
pub const GPIO_AFRH_AFSEL13_2: u32 = 0x4 << GPIO_AFRH_AFSEL13_Pos;
pub const GPIO_AFRH_AFSEL13_3: u32 = 0x8 << GPIO_AFRH_AFSEL13_Pos;
pub const GPIO_AFRH_AFSEL14_Pos: u32 = 24;
pub const GPIO_AFRH_AFSEL14_Msk: u32 = 0xF << GPIO_AFRH_AFSEL14_Pos;
pub const GPIO_AFRH_AFSEL14: u32 = GPIO_AFRH_AFSEL14_Msk;
pub const GPIO_AFRH_AFSEL14_0: u32 = 0x1 << GPIO_AFRH_AFSEL14_Pos;
pub const GPIO_AFRH_AFSEL14_1: u32 = 0x2 << GPIO_AFRH_AFSEL14_Pos;
pub const GPIO_AFRH_AFSEL14_2: u32 = 0x4 << GPIO_AFRH_AFSEL14_Pos;
pub const GPIO_AFRH_AFSEL14_3: u32 = 0x8 << GPIO_AFRH_AFSEL14_Pos;
pub const GPIO_AFRH_AFSEL15_Pos: u32 = 28;
pub const GPIO_AFRH_AFSEL15_Msk: u32 = 0xF << GPIO_AFRH_AFSEL15_Pos;
pub const GPIO_AFRH_AFSEL15: u32 = GPIO_AFRH_AFSEL15_Msk;
pub const GPIO_AFRH_AFSEL15_0: u32 = 0x1 << GPIO_AFRH_AFSEL15_Pos;
pub const GPIO_AFRH_AFSEL15_1: u32 = 0x2 << GPIO_AFRH_AFSEL15_Pos;
pub const GPIO_AFRH_AFSEL15_2: u32 = 0x4 << GPIO_AFRH_AFSEL15_Pos;
pub const GPIO_AFRH_AFSEL15_3: u32 = 0x8 << GPIO_AFRH_AFSEL15_Pos;
pub const GPIO_AFRH_AFRH0: u32 = GPIO_AFRH_AFSEL8;
pub const GPIO_AFRH_AFRH1: u32 = GPIO_AFRH_AFSEL9;
pub const GPIO_AFRH_AFRH2: u32 = GPIO_AFRH_AFSEL10;
pub const GPIO_AFRH_AFRH3: u32 = GPIO_AFRH_AFSEL11;
pub const GPIO_AFRH_AFRH4: u32 = GPIO_AFRH_AFSEL12;
pub const GPIO_AFRH_AFRH5: u32 = GPIO_AFRH_AFSEL13;
pub const GPIO_AFRH_AFRH6: u32 = GPIO_AFRH_AFSEL14;
pub const GPIO_AFRH_AFRH7: u32 = GPIO_AFRH_AFSEL15;
pub const GPIO_BRR_BR0_Pos: u32 = 0;
pub const GPIO_BRR_BR0_Msk: u32 = 0x1 << GPIO_BRR_BR0_Pos;
pub const GPIO_BRR_BR0: u32 = GPIO_BRR_BR0_Msk;
pub const GPIO_BRR_BR1_Pos: u32 = 1;
pub const GPIO_BRR_BR1_Msk: u32 = 0x1 << GPIO_BRR_BR1_Pos;
pub const GPIO_BRR_BR1: u32 = GPIO_BRR_BR1_Msk;
pub const GPIO_BRR_BR2_Pos: u32 = 2;
pub const GPIO_BRR_BR2_Msk: u32 = 0x1 << GPIO_BRR_BR2_Pos;
pub const GPIO_BRR_BR2: u32 = GPIO_BRR_BR2_Msk;
pub const GPIO_BRR_BR3_Pos: u32 = 3;
pub const GPIO_BRR_BR3_Msk: u32 = 0x1 << GPIO_BRR_BR3_Pos;
pub const GPIO_BRR_BR3: u32 = GPIO_BRR_BR3_Msk;
pub const GPIO_BRR_BR4_Pos: u32 = 4;
pub const GPIO_BRR_BR4_Msk: u32 = 0x1 << GPIO_BRR_BR4_Pos;
pub const GPIO_BRR_BR4: u32 = GPIO_BRR_BR4_Msk;
pub const GPIO_BRR_BR5_Pos: u32 = 5;
pub const GPIO_BRR_BR5_Msk: u32 = 0x1 << GPIO_BRR_BR5_Pos;
pub const GPIO_BRR_BR5: u32 = GPIO_BRR_BR5_Msk;
pub const GPIO_BRR_BR6_Pos: u32 = 6;
pub const GPIO_BRR_BR6_Msk: u32 = 0x1 << GPIO_BRR_BR6_Pos;
pub const GPIO_BRR_BR6: u32 = GPIO_BRR_BR6_Msk;
pub const GPIO_BRR_BR7_Pos: u32 = 7;
pub const GPIO_BRR_BR7_Msk: u32 = 0x1 << GPIO_BRR_BR7_Pos;
pub const GPIO_BRR_BR7: u32 = GPIO_BRR_BR7_Msk;
pub const GPIO_BRR_BR8_Pos: u32 = 8;
pub const GPIO_BRR_BR8_Msk: u32 = 0x1 << GPIO_BRR_BR8_Pos;
pub const GPIO_BRR_BR8: u32 = GPIO_BRR_BR8_Msk;
pub const GPIO_BRR_BR9_Pos: u32 = 9;
pub const GPIO_BRR_BR9_Msk: u32 = 0x1 << GPIO_BRR_BR9_Pos;
pub const GPIO_BRR_BR9: u32 = GPIO_BRR_BR9_Msk;
pub const GPIO_BRR_BR10_Pos: u32 = 10;
pub const GPIO_BRR_BR10_Msk: u32 = 0x1 << GPIO_BRR_BR10_Pos;
pub const GPIO_BRR_BR10: u32 = GPIO_BRR_BR10_Msk;
pub const GPIO_BRR_BR11_Pos: u32 = 11;
pub const GPIO_BRR_BR11_Msk: u32 = 0x1 << GPIO_BRR_BR11_Pos;
pub const GPIO_BRR_BR11: u32 = GPIO_BRR_BR11_Msk;
pub const GPIO_BRR_BR12_Pos: u32 = 12;
pub const GPIO_BRR_BR12_Msk: u32 = 0x1 << GPIO_BRR_BR12_Pos;
pub const GPIO_BRR_BR12: u32 = GPIO_BRR_BR12_Msk;
pub const GPIO_BRR_BR13_Pos: u32 = 13;
pub const GPIO_BRR_BR13_Msk: u32 = 0x1 << GPIO_BRR_BR13_Pos;
pub const GPIO_BRR_BR13: u32 = GPIO_BRR_BR13_Msk;
pub const GPIO_BRR_BR14_Pos: u32 = 14;
pub const GPIO_BRR_BR14_Msk: u32 = 0x1 << GPIO_BRR_BR14_Pos;
pub const GPIO_BRR_BR14: u32 = GPIO_BRR_BR14_Msk;
pub const GPIO_BRR_BR15_Pos: u32 = 15;
pub const GPIO_BRR_BR15_Msk: u32 = 0x1 << GPIO_BRR_BR15_Pos;
pub const GPIO_BRR_BR15: u32 = GPIO_BRR_BR15_Msk;
pub const GPIO_BRR_BR_0: u32 = GPIO_BRR_BR0;
pub const GPIO_BRR_BR_1: u32 = GPIO_BRR_BR1;
pub const GPIO_BRR_BR_2: u32 = GPIO_BRR_BR2;
pub const GPIO_BRR_BR_3: u32 = GPIO_BRR_BR3;
pub const GPIO_BRR_BR_4: u32 = GPIO_BRR_BR4;
pub const GPIO_BRR_BR_5: u32 = GPIO_BRR_BR5;
pub const GPIO_BRR_BR_6: u32 = GPIO_BRR_BR6;
pub const GPIO_BRR_BR_7: u32 = GPIO_BRR_BR7;
pub const GPIO_BRR_BR_8: u32 = GPIO_BRR_BR8;
pub const GPIO_BRR_BR_9: u32 = GPIO_BRR_BR9;
pub const GPIO_BRR_BR_10: u32 = GPIO_BRR_BR10;
pub const GPIO_BRR_BR_11: u32 = GPIO_BRR_BR11;
pub const GPIO_BRR_BR_12: u32 = GPIO_BRR_BR12;
pub const GPIO_BRR_BR_13: u32 = GPIO_BRR_BR13;
pub const GPIO_BRR_BR_14: u32 = GPIO_BRR_BR14;
pub const GPIO_BRR_BR_15: u32 = GPIO_BRR_BR15;
pub const I2C_CR1_PE_Pos: u32 = 0;
pub const I2C_CR1_PE_Msk: u32 = 0x1 << I2C_CR1_PE_Pos;
pub const I2C_CR1_PE: u32 = I2C_CR1_PE_Msk;
pub const I2C_CR1_TXIE_Pos: u32 = 1;
pub const I2C_CR1_TXIE_Msk: u32 = 0x1 << I2C_CR1_TXIE_Pos;
pub const I2C_CR1_TXIE: u32 = I2C_CR1_TXIE_Msk;
pub const I2C_CR1_RXIE_Pos: u32 = 2;
pub const I2C_CR1_RXIE_Msk: u32 = 0x1 << I2C_CR1_RXIE_Pos;
pub const I2C_CR1_RXIE: u32 = I2C_CR1_RXIE_Msk;
pub const I2C_CR1_ADDRIE_Pos: u32 = 3;
pub const I2C_CR1_ADDRIE_Msk: u32 = 0x1 << I2C_CR1_ADDRIE_Pos;
pub const I2C_CR1_ADDRIE: u32 = I2C_CR1_ADDRIE_Msk;
pub const I2C_CR1_NACKIE_Pos: u32 = 4;
pub const I2C_CR1_NACKIE_Msk: u32 = 0x1 << I2C_CR1_NACKIE_Pos;
pub const I2C_CR1_NACKIE: u32 = I2C_CR1_NACKIE_Msk;
pub const I2C_CR1_STOPIE_Pos: u32 = 5;
pub const I2C_CR1_STOPIE_Msk: u32 = 0x1 << I2C_CR1_STOPIE_Pos;
pub const I2C_CR1_STOPIE: u32 = I2C_CR1_STOPIE_Msk;
pub const I2C_CR1_TCIE_Pos: u32 = 6;
pub const I2C_CR1_TCIE_Msk: u32 = 0x1 << I2C_CR1_TCIE_Pos;
pub const I2C_CR1_TCIE: u32 = I2C_CR1_TCIE_Msk;
pub const I2C_CR1_ERRIE_Pos: u32 = 7;
pub const I2C_CR1_ERRIE_Msk: u32 = 0x1 << I2C_CR1_ERRIE_Pos;
pub const I2C_CR1_ERRIE: u32 = I2C_CR1_ERRIE_Msk;
pub const I2C_CR1_DNF_Pos: u32 = 8;
pub const I2C_CR1_DNF_Msk: u32 = 0xF << I2C_CR1_DNF_Pos;
pub const I2C_CR1_DNF: u32 = I2C_CR1_DNF_Msk;
pub const I2C_CR1_ANFOFF_Pos: u32 = 12;
pub const I2C_CR1_ANFOFF_Msk: u32 = 0x1 << I2C_CR1_ANFOFF_Pos;
pub const I2C_CR1_ANFOFF: u32 = I2C_CR1_ANFOFF_Msk;
pub const I2C_CR1_SWRST_Pos: u32 = 13;
pub const I2C_CR1_SWRST_Msk: u32 = 0x1 << I2C_CR1_SWRST_Pos;
pub const I2C_CR1_SWRST: u32 = I2C_CR1_SWRST_Msk;
pub const I2C_CR1_TXDMAEN_Pos: u32 = 14;
pub const I2C_CR1_TXDMAEN_Msk: u32 = 0x1 << I2C_CR1_TXDMAEN_Pos;
pub const I2C_CR1_TXDMAEN: u32 = I2C_CR1_TXDMAEN_Msk;
pub const I2C_CR1_RXDMAEN_Pos: u32 = 15;
pub const I2C_CR1_RXDMAEN_Msk: u32 = 0x1 << I2C_CR1_RXDMAEN_Pos;
pub const I2C_CR1_RXDMAEN: u32 = I2C_CR1_RXDMAEN_Msk;
pub const I2C_CR1_SBC_Pos: u32 = 16;
pub const I2C_CR1_SBC_Msk: u32 = 0x1 << I2C_CR1_SBC_Pos;
pub const I2C_CR1_SBC: u32 = I2C_CR1_SBC_Msk;
pub const I2C_CR1_NOSTRETCH_Pos: u32 = 17;
pub const I2C_CR1_NOSTRETCH_Msk: u32 = 0x1 << I2C_CR1_NOSTRETCH_Pos;
pub const I2C_CR1_NOSTRETCH: u32 = I2C_CR1_NOSTRETCH_Msk;
pub const I2C_CR1_WUPEN_Pos: u32 = 18;
pub const I2C_CR1_WUPEN_Msk: u32 = 0x1 << I2C_CR1_WUPEN_Pos;
pub const I2C_CR1_WUPEN: u32 = I2C_CR1_WUPEN_Msk;
pub const I2C_CR1_GCEN_Pos: u32 = 19;
pub const I2C_CR1_GCEN_Msk: u32 = 0x1 << I2C_CR1_GCEN_Pos;
pub const I2C_CR1_GCEN: u32 = I2C_CR1_GCEN_Msk;
pub const I2C_CR1_SMBHEN_Pos: u32 = 20;
pub const I2C_CR1_SMBHEN_Msk: u32 = 0x1 << I2C_CR1_SMBHEN_Pos;
pub const I2C_CR1_SMBHEN: u32 = I2C_CR1_SMBHEN_Msk;
pub const I2C_CR1_SMBDEN_Pos: u32 = 21;
pub const I2C_CR1_SMBDEN_Msk: u32 = 0x1 << I2C_CR1_SMBDEN_Pos;
pub const I2C_CR1_SMBDEN: u32 = I2C_CR1_SMBDEN_Msk;
pub const I2C_CR1_ALERTEN_Pos: u32 = 22;
pub const I2C_CR1_ALERTEN_Msk: u32 = 0x1 << I2C_CR1_ALERTEN_Pos;
pub const I2C_CR1_ALERTEN: u32 = I2C_CR1_ALERTEN_Msk;
pub const I2C_CR1_PECEN_Pos: u32 = 23;
pub const I2C_CR1_PECEN_Msk: u32 = 0x1 << I2C_CR1_PECEN_Pos;
pub const I2C_CR1_PECEN: u32 = I2C_CR1_PECEN_Msk;
pub const I2C_CR2_SADD_Pos: u32 = 0;
pub const I2C_CR2_SADD_Msk: u32 = 0x3FF << I2C_CR2_SADD_Pos;
pub const I2C_CR2_SADD: u32 = I2C_CR2_SADD_Msk;
pub const I2C_CR2_RD_WRN_Pos: u32 = 10;
pub const I2C_CR2_RD_WRN_Msk: u32 = 0x1 << I2C_CR2_RD_WRN_Pos;
pub const I2C_CR2_RD_WRN: u32 = I2C_CR2_RD_WRN_Msk;
pub const I2C_CR2_ADD10_Pos: u32 = 11;
pub const I2C_CR2_ADD10_Msk: u32 = 0x1 << I2C_CR2_ADD10_Pos;
pub const I2C_CR2_ADD10: u32 = I2C_CR2_ADD10_Msk;
pub const I2C_CR2_HEAD10R_Pos: u32 = 12;
pub const I2C_CR2_HEAD10R_Msk: u32 = 0x1 << I2C_CR2_HEAD10R_Pos;
pub const I2C_CR2_HEAD10R: u32 = I2C_CR2_HEAD10R_Msk;
pub const I2C_CR2_START_Pos: u32 = 13;
pub const I2C_CR2_START_Msk: u32 = 0x1 << I2C_CR2_START_Pos;
pub const I2C_CR2_START: u32 = I2C_CR2_START_Msk;
pub const I2C_CR2_STOP_Pos: u32 = 14;
pub const I2C_CR2_STOP_Msk: u32 = 0x1 << I2C_CR2_STOP_Pos;
pub const I2C_CR2_STOP: u32 = I2C_CR2_STOP_Msk;
pub const I2C_CR2_NACK_Pos: u32 = 15;
pub const I2C_CR2_NACK_Msk: u32 = 0x1 << I2C_CR2_NACK_Pos;
pub const I2C_CR2_NACK: u32 = I2C_CR2_NACK_Msk;
pub const I2C_CR2_NBYTES_Pos: u32 = 16;
pub const I2C_CR2_NBYTES_Msk: u32 = 0xFF << I2C_CR2_NBYTES_Pos;
pub const I2C_CR2_NBYTES: u32 = I2C_CR2_NBYTES_Msk;
pub const I2C_CR2_RELOAD_Pos: u32 = 24;
pub const I2C_CR2_RELOAD_Msk: u32 = 0x1 << I2C_CR2_RELOAD_Pos;
pub const I2C_CR2_RELOAD: u32 = I2C_CR2_RELOAD_Msk;
pub const I2C_CR2_AUTOEND_Pos: u32 = 25;
pub const I2C_CR2_AUTOEND_Msk: u32 = 0x1 << I2C_CR2_AUTOEND_Pos;
pub const I2C_CR2_AUTOEND: u32 = I2C_CR2_AUTOEND_Msk;
pub const I2C_CR2_PECBYTE_Pos: u32 = 26;
pub const I2C_CR2_PECBYTE_Msk: u32 = 0x1 << I2C_CR2_PECBYTE_Pos;
pub const I2C_CR2_PECBYTE: u32 = I2C_CR2_PECBYTE_Msk;
pub const I2C_OAR1_OA1_Pos: u32 = 0;
pub const I2C_OAR1_OA1_Msk: u32 = 0x3FF << I2C_OAR1_OA1_Pos;
pub const I2C_OAR1_OA1: u32 = I2C_OAR1_OA1_Msk;
pub const I2C_OAR1_OA1MODE_Pos: u32 = 10;
pub const I2C_OAR1_OA1MODE_Msk: u32 = 0x1 << I2C_OAR1_OA1MODE_Pos;
pub const I2C_OAR1_OA1MODE: u32 = I2C_OAR1_OA1MODE_Msk;
pub const I2C_OAR1_OA1EN_Pos: u32 = 15;
pub const I2C_OAR1_OA1EN_Msk: u32 = 0x1 << I2C_OAR1_OA1EN_Pos;
pub const I2C_OAR1_OA1EN: u32 = I2C_OAR1_OA1EN_Msk;
pub const I2C_OAR2_OA2_Pos: u32 = 1;
pub const I2C_OAR2_OA2_Msk: u32 = 0x7F << I2C_OAR2_OA2_Pos;
pub const I2C_OAR2_OA2: u32 = I2C_OAR2_OA2_Msk;
pub const I2C_OAR2_OA2MSK_Pos: u32 = 8;
pub const I2C_OAR2_OA2MSK_Msk: u32 = 0x7 << I2C_OAR2_OA2MSK_Pos;
pub const I2C_OAR2_OA2MSK: u32 = I2C_OAR2_OA2MSK_Msk;
pub const I2C_OAR2_OA2NOMASK: u32 = 0x00000000;
pub const I2C_OAR2_OA2MASK01_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK01_Msk: u32 = 0x1 << I2C_OAR2_OA2MASK01_Pos;
pub const I2C_OAR2_OA2MASK01: u32 = I2C_OAR2_OA2MASK01_Msk;
pub const I2C_OAR2_OA2MASK02_Pos: u32 = 9;
pub const I2C_OAR2_OA2MASK02_Msk: u32 = 0x1 << I2C_OAR2_OA2MASK02_Pos;
pub const I2C_OAR2_OA2MASK02: u32 = I2C_OAR2_OA2MASK02_Msk;
pub const I2C_OAR2_OA2MASK03_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK03_Msk: u32 = 0x3 << I2C_OAR2_OA2MASK03_Pos;
pub const I2C_OAR2_OA2MASK03: u32 = I2C_OAR2_OA2MASK03_Msk;
pub const I2C_OAR2_OA2MASK04_Pos: u32 = 10;
pub const I2C_OAR2_OA2MASK04_Msk: u32 = 0x1 << I2C_OAR2_OA2MASK04_Pos;
pub const I2C_OAR2_OA2MASK04: u32 = I2C_OAR2_OA2MASK04_Msk;
pub const I2C_OAR2_OA2MASK05_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK05_Msk: u32 = 0x5 << I2C_OAR2_OA2MASK05_Pos;
pub const I2C_OAR2_OA2MASK05: u32 = I2C_OAR2_OA2MASK05_Msk;
pub const I2C_OAR2_OA2MASK06_Pos: u32 = 9;
pub const I2C_OAR2_OA2MASK06_Msk: u32 = 0x3 << I2C_OAR2_OA2MASK06_Pos;
pub const I2C_OAR2_OA2MASK06: u32 = I2C_OAR2_OA2MASK06_Msk;
pub const I2C_OAR2_OA2MASK07_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK07_Msk: u32 = 0x7 << I2C_OAR2_OA2MASK07_Pos;
pub const I2C_OAR2_OA2MASK07: u32 = I2C_OAR2_OA2MASK07_Msk;
pub const I2C_OAR2_OA2EN_Pos: u32 = 15;
pub const I2C_OAR2_OA2EN_Msk: u32 = 0x1 << I2C_OAR2_OA2EN_Pos;
pub const I2C_OAR2_OA2EN: u32 = I2C_OAR2_OA2EN_Msk;
pub const I2C_TIMINGR_SCLL_Pos: u32 = 0;
pub const I2C_TIMINGR_SCLL_Msk: u32 = 0xFF << I2C_TIMINGR_SCLL_Pos;
pub const I2C_TIMINGR_SCLL: u32 = I2C_TIMINGR_SCLL_Msk;
pub const I2C_TIMINGR_SCLH_Pos: u32 = 8;
pub const I2C_TIMINGR_SCLH_Msk: u32 = 0xFF << I2C_TIMINGR_SCLH_Pos;
pub const I2C_TIMINGR_SCLH: u32 = I2C_TIMINGR_SCLH_Msk;
pub const I2C_TIMINGR_SDADEL_Pos: u32 = 16;
pub const I2C_TIMINGR_SDADEL_Msk: u32 = 0xF << I2C_TIMINGR_SDADEL_Pos;
pub const I2C_TIMINGR_SDADEL: u32 = I2C_TIMINGR_SDADEL_Msk;
pub const I2C_TIMINGR_SCLDEL_Pos: u32 = 20;
pub const I2C_TIMINGR_SCLDEL_Msk: u32 = 0xF << I2C_TIMINGR_SCLDEL_Pos;
pub const I2C_TIMINGR_SCLDEL: u32 = I2C_TIMINGR_SCLDEL_Msk;
pub const I2C_TIMINGR_PRESC_Pos: u32 = 28;
pub const I2C_TIMINGR_PRESC_Msk: u32 = 0xF << I2C_TIMINGR_PRESC_Pos;
pub const I2C_TIMINGR_PRESC: u32 = I2C_TIMINGR_PRESC_Msk;
pub const I2C_TIMEOUTR_TIMEOUTA_Pos: u32 = 0;
pub const I2C_TIMEOUTR_TIMEOUTA_Msk: u32 = 0xFFF << I2C_TIMEOUTR_TIMEOUTA_Pos;
pub const I2C_TIMEOUTR_TIMEOUTA: u32 = I2C_TIMEOUTR_TIMEOUTA_Msk;
pub const I2C_TIMEOUTR_TIDLE_Pos: u32 = 12;
pub const I2C_TIMEOUTR_TIDLE_Msk: u32 = 0x1 << I2C_TIMEOUTR_TIDLE_Pos;
pub const I2C_TIMEOUTR_TIDLE: u32 = I2C_TIMEOUTR_TIDLE_Msk;
pub const I2C_TIMEOUTR_TIMOUTEN_Pos: u32 = 15;
pub const I2C_TIMEOUTR_TIMOUTEN_Msk: u32 = 0x1 << I2C_TIMEOUTR_TIMOUTEN_Pos;
pub const I2C_TIMEOUTR_TIMOUTEN: u32 = I2C_TIMEOUTR_TIMOUTEN_Msk;
pub const I2C_TIMEOUTR_TIMEOUTB_Pos: u32 = 16;
pub const I2C_TIMEOUTR_TIMEOUTB_Msk: u32 = 0xFFF << I2C_TIMEOUTR_TIMEOUTB_Pos;
pub const I2C_TIMEOUTR_TIMEOUTB: u32 = I2C_TIMEOUTR_TIMEOUTB_Msk;
pub const I2C_TIMEOUTR_TEXTEN_Pos: u32 = 31;
pub const I2C_TIMEOUTR_TEXTEN_Msk: u32 = 0x1 << I2C_TIMEOUTR_TEXTEN_Pos;
pub const I2C_TIMEOUTR_TEXTEN: u32 = I2C_TIMEOUTR_TEXTEN_Msk;
pub const I2C_ISR_TXE_Pos: u32 = 0;
pub const I2C_ISR_TXE_Msk: u32 = 0x1 << I2C_ISR_TXE_Pos;
pub const I2C_ISR_TXE: u32 = I2C_ISR_TXE_Msk;
pub const I2C_ISR_TXIS_Pos: u32 = 1;
pub const I2C_ISR_TXIS_Msk: u32 = 0x1 << I2C_ISR_TXIS_Pos;
pub const I2C_ISR_TXIS: u32 = I2C_ISR_TXIS_Msk;
pub const I2C_ISR_RXNE_Pos: u32 = 2;
pub const I2C_ISR_RXNE_Msk: u32 = 0x1 << I2C_ISR_RXNE_Pos;
pub const I2C_ISR_RXNE: u32 = I2C_ISR_RXNE_Msk;
pub const I2C_ISR_ADDR_Pos: u32 = 3;
pub const I2C_ISR_ADDR_Msk: u32 = 0x1 << I2C_ISR_ADDR_Pos;
pub const I2C_ISR_ADDR: u32 = I2C_ISR_ADDR_Msk;
pub const I2C_ISR_NACKF_Pos: u32 = 4;
pub const I2C_ISR_NACKF_Msk: u32 = 0x1 << I2C_ISR_NACKF_Pos;
pub const I2C_ISR_NACKF: u32 = I2C_ISR_NACKF_Msk;
pub const I2C_ISR_STOPF_Pos: u32 = 5;
pub const I2C_ISR_STOPF_Msk: u32 = 0x1 << I2C_ISR_STOPF_Pos;
pub const I2C_ISR_STOPF: u32 = I2C_ISR_STOPF_Msk;
pub const I2C_ISR_TC_Pos: u32 = 6;
pub const I2C_ISR_TC_Msk: u32 = 0x1 << I2C_ISR_TC_Pos;
pub const I2C_ISR_TC: u32 = I2C_ISR_TC_Msk;
pub const I2C_ISR_TCR_Pos: u32 = 7;
pub const I2C_ISR_TCR_Msk: u32 = 0x1 << I2C_ISR_TCR_Pos;
pub const I2C_ISR_TCR: u32 = I2C_ISR_TCR_Msk;
pub const I2C_ISR_BERR_Pos: u32 = 8;
pub const I2C_ISR_BERR_Msk: u32 = 0x1 << I2C_ISR_BERR_Pos;
pub const I2C_ISR_BERR: u32 = I2C_ISR_BERR_Msk;
pub const I2C_ISR_ARLO_Pos: u32 = 9;
pub const I2C_ISR_ARLO_Msk: u32 = 0x1 << I2C_ISR_ARLO_Pos;
pub const I2C_ISR_ARLO: u32 = I2C_ISR_ARLO_Msk;
pub const I2C_ISR_OVR_Pos: u32 = 10;
pub const I2C_ISR_OVR_Msk: u32 = 0x1 << I2C_ISR_OVR_Pos;
pub const I2C_ISR_OVR: u32 = I2C_ISR_OVR_Msk;
pub const I2C_ISR_PECERR_Pos: u32 = 11;
pub const I2C_ISR_PECERR_Msk: u32 = 0x1 << I2C_ISR_PECERR_Pos;
pub const I2C_ISR_PECERR: u32 = I2C_ISR_PECERR_Msk;
pub const I2C_ISR_TIMEOUT_Pos: u32 = 12;
pub const I2C_ISR_TIMEOUT_Msk: u32 = 0x1 << I2C_ISR_TIMEOUT_Pos;
pub const I2C_ISR_TIMEOUT: u32 = I2C_ISR_TIMEOUT_Msk;
pub const I2C_ISR_ALERT_Pos: u32 = 13;
pub const I2C_ISR_ALERT_Msk: u32 = 0x1 << I2C_ISR_ALERT_Pos;
pub const I2C_ISR_ALERT: u32 = I2C_ISR_ALERT_Msk;
pub const I2C_ISR_BUSY_Pos: u32 = 15;
pub const I2C_ISR_BUSY_Msk: u32 = 0x1 << I2C_ISR_BUSY_Pos;
pub const I2C_ISR_BUSY: u32 = I2C_ISR_BUSY_Msk;
pub const I2C_ISR_DIR_Pos: u32 = 16;
pub const I2C_ISR_DIR_Msk: u32 = 0x1 << I2C_ISR_DIR_Pos;
pub const I2C_ISR_DIR: u32 = I2C_ISR_DIR_Msk;
pub const I2C_ISR_ADDCODE_Pos: u32 = 17;
pub const I2C_ISR_ADDCODE_Msk: u32 = 0x7F << I2C_ISR_ADDCODE_Pos;
pub const I2C_ISR_ADDCODE: u32 = I2C_ISR_ADDCODE_Msk;
pub const I2C_ICR_ADDRCF_Pos: u32 = 3;
pub const I2C_ICR_ADDRCF_Msk: u32 = 0x1 << I2C_ICR_ADDRCF_Pos;
pub const I2C_ICR_ADDRCF: u32 = I2C_ICR_ADDRCF_Msk;
pub const I2C_ICR_NACKCF_Pos: u32 = 4;
pub const I2C_ICR_NACKCF_Msk: u32 = 0x1 << I2C_ICR_NACKCF_Pos;
pub const I2C_ICR_NACKCF: u32 = I2C_ICR_NACKCF_Msk;
pub const I2C_ICR_STOPCF_Pos: u32 = 5;
pub const I2C_ICR_STOPCF_Msk: u32 = 0x1 << I2C_ICR_STOPCF_Pos;
pub const I2C_ICR_STOPCF: u32 = I2C_ICR_STOPCF_Msk;
pub const I2C_ICR_BERRCF_Pos: u32 = 8;
pub const I2C_ICR_BERRCF_Msk: u32 = 0x1 << I2C_ICR_BERRCF_Pos;
pub const I2C_ICR_BERRCF: u32 = I2C_ICR_BERRCF_Msk;
pub const I2C_ICR_ARLOCF_Pos: u32 = 9;
pub const I2C_ICR_ARLOCF_Msk: u32 = 0x1 << I2C_ICR_ARLOCF_Pos;
pub const I2C_ICR_ARLOCF: u32 = I2C_ICR_ARLOCF_Msk;
pub const I2C_ICR_OVRCF_Pos: u32 = 10;
pub const I2C_ICR_OVRCF_Msk: u32 = 0x1 << I2C_ICR_OVRCF_Pos;
pub const I2C_ICR_OVRCF: u32 = I2C_ICR_OVRCF_Msk;
pub const I2C_ICR_PECCF_Pos: u32 = 11;
pub const I2C_ICR_PECCF_Msk: u32 = 0x1 << I2C_ICR_PECCF_Pos;
pub const I2C_ICR_PECCF: u32 = I2C_ICR_PECCF_Msk;
pub const I2C_ICR_TIMOUTCF_Pos: u32 = 12;
pub const I2C_ICR_TIMOUTCF_Msk: u32 = 0x1 << I2C_ICR_TIMOUTCF_Pos;
pub const I2C_ICR_TIMOUTCF: u32 = I2C_ICR_TIMOUTCF_Msk;
pub const I2C_ICR_ALERTCF_Pos: u32 = 13;
pub const I2C_ICR_ALERTCF_Msk: u32 = 0x1 << I2C_ICR_ALERTCF_Pos;
pub const I2C_ICR_ALERTCF: u32 = I2C_ICR_ALERTCF_Msk;
pub const I2C_PECR_PEC_Pos: u32 = 0;
pub const I2C_PECR_PEC_Msk: u32 = 0xFF << I2C_PECR_PEC_Pos;
pub const I2C_PECR_PEC: u32 = I2C_PECR_PEC_Msk;
pub const I2C_RXDR_RXDATA_Pos: u32 = 0;
pub const I2C_RXDR_RXDATA_Msk: u32 = 0xFF << I2C_RXDR_RXDATA_Pos;
pub const I2C_RXDR_RXDATA: u32 = I2C_RXDR_RXDATA_Msk;
pub const I2C_TXDR_TXDATA_Pos: u32 = 0;
pub const I2C_TXDR_TXDATA_Msk: u32 = 0xFF << I2C_TXDR_TXDATA_Pos;
pub const I2C_TXDR_TXDATA: u32 = I2C_TXDR_TXDATA_Msk;
pub const IWDG_KR_KEY_Pos: u32 = 0;
pub const IWDG_KR_KEY_Msk: u32 = 0xFFFF << IWDG_KR_KEY_Pos;
pub const IWDG_KR_KEY: u32 = IWDG_KR_KEY_Msk;
pub const IWDG_PR_PR_Pos: u32 = 0;
pub const IWDG_PR_PR_Msk: u32 = 0x7 << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR: u32 = IWDG_PR_PR_Msk;
pub const IWDG_PR_PR_0: u32 = 0x1 << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR_1: u32 = 0x2 << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR_2: u32 = 0x4 << IWDG_PR_PR_Pos;
pub const IWDG_RLR_RL_Pos: u32 = 0;
pub const IWDG_RLR_RL_Msk: u32 = 0xFFF << IWDG_RLR_RL_Pos;
pub const IWDG_RLR_RL: u32 = IWDG_RLR_RL_Msk;
pub const IWDG_SR_PVU_Pos: u32 = 0;
pub const IWDG_SR_PVU_Msk: u32 = 0x1 << IWDG_SR_PVU_Pos;
pub const IWDG_SR_PVU: u32 = IWDG_SR_PVU_Msk;
pub const IWDG_SR_RVU_Pos: u32 = 1;
pub const IWDG_SR_RVU_Msk: u32 = 0x1 << IWDG_SR_RVU_Pos;
pub const IWDG_SR_RVU: u32 = IWDG_SR_RVU_Msk;
pub const IWDG_SR_WVU_Pos: u32 = 2;
pub const IWDG_SR_WVU_Msk: u32 = 0x1 << IWDG_SR_WVU_Pos;
pub const IWDG_SR_WVU: u32 = IWDG_SR_WVU_Msk;
pub const IWDG_WINR_WIN_Pos: u32 = 0;
pub const IWDG_WINR_WIN_Msk: u32 = 0xFFF << IWDG_WINR_WIN_Pos;
pub const IWDG_WINR_WIN: u32 = IWDG_WINR_WIN_Msk;
pub const OPAMP_CSR_OPAMPxEN_Pos: u32 = 0;
pub const OPAMP_CSR_OPAMPxEN_Msk: u32 = 0x1 << OPAMP_CSR_OPAMPxEN_Pos;
pub const OPAMP_CSR_OPAMPxEN: u32 = OPAMP_CSR_OPAMPxEN_Msk;
pub const OPAMP_CSR_FORCEVP_Pos: u32 = 1;
pub const OPAMP_CSR_FORCEVP_Msk: u32 = 0x1 << OPAMP_CSR_FORCEVP_Pos;
pub const OPAMP_CSR_FORCEVP: u32 = OPAMP_CSR_FORCEVP_Msk;
pub const OPAMP_CSR_VPSEL_Pos: u32 = 2;
pub const OPAMP_CSR_VPSEL_Msk: u32 = 0x3 << OPAMP_CSR_VPSEL_Pos;
pub const OPAMP_CSR_VPSEL: u32 = OPAMP_CSR_VPSEL_Msk;
pub const OPAMP_CSR_VPSEL_0: u32 = 0x1 << OPAMP_CSR_VPSEL_Pos;
pub const OPAMP_CSR_VPSEL_1: u32 = 0x2 << OPAMP_CSR_VPSEL_Pos;
pub const OPAMP_CSR_USERTRIM_Pos: u32 = 4;
pub const OPAMP_CSR_USERTRIM_Msk: u32 = 0x1 << OPAMP_CSR_USERTRIM_Pos;
pub const OPAMP_CSR_USERTRIM: u32 = OPAMP_CSR_USERTRIM_Msk;
pub const OPAMP_CSR_VMSEL_Pos: u32 = 5;
pub const OPAMP_CSR_VMSEL_Msk: u32 = 0x3 << OPAMP_CSR_VMSEL_Pos;
pub const OPAMP_CSR_VMSEL: u32 = OPAMP_CSR_VMSEL_Msk;
pub const OPAMP_CSR_VMSEL_0: u32 = 0x1 << OPAMP_CSR_VMSEL_Pos;
pub const OPAMP_CSR_VMSEL_1: u32 = 0x2 << OPAMP_CSR_VMSEL_Pos;
pub const OPAMP_CSR_HIGHSPEEDEN_Pos: u32 = 7;
pub const OPAMP_CSR_HIGHSPEEDEN_Msk: u32 = 0x1 << OPAMP_CSR_HIGHSPEEDEN_Pos;
pub const OPAMP_CSR_HIGHSPEEDEN: u32 = OPAMP_CSR_HIGHSPEEDEN_Msk;
pub const OPAMP_CSR_OPAMPINTEN_Pos: u32 = 8;
pub const OPAMP_CSR_OPAMPINTEN_Msk: u32 = 0x1 << OPAMP_CSR_OPAMPINTEN_Pos;
pub const OPAMP_CSR_OPAMPINTEN: u32 = OPAMP_CSR_OPAMPINTEN_Msk;
pub const OPAMP_CSR_CALON_Pos: u32 = 11;
pub const OPAMP_CSR_CALON_Msk: u32 = 0x1 << OPAMP_CSR_CALON_Pos;
pub const OPAMP_CSR_CALON: u32 = OPAMP_CSR_CALON_Msk;
pub const OPAMP_CSR_CALSEL_Pos: u32 = 12;
pub const OPAMP_CSR_CALSEL_Msk: u32 = 0x3 << OPAMP_CSR_CALSEL_Pos;
pub const OPAMP_CSR_CALSEL: u32 = OPAMP_CSR_CALSEL_Msk;
pub const OPAMP_CSR_CALSEL_0: u32 = 0x1 << OPAMP_CSR_CALSEL_Pos;
pub const OPAMP_CSR_CALSEL_1: u32 = 0x2 << OPAMP_CSR_CALSEL_Pos;
pub const OPAMP_CSR_PGGAIN_Pos: u32 = 14;
pub const OPAMP_CSR_PGGAIN_Msk: u32 = 0x1F << OPAMP_CSR_PGGAIN_Pos;
pub const OPAMP_CSR_PGGAIN: u32 = OPAMP_CSR_PGGAIN_Msk;
pub const OPAMP_CSR_PGGAIN_0: u32 = 0x1 << OPAMP_CSR_PGGAIN_Pos;
pub const OPAMP_CSR_PGGAIN_1: u32 = 0x2 << OPAMP_CSR_PGGAIN_Pos;
pub const OPAMP_CSR_PGGAIN_2: u32 = 0x4 << OPAMP_CSR_PGGAIN_Pos;
pub const OPAMP_CSR_PGGAIN_3: u32 = 0x8 << OPAMP_CSR_PGGAIN_Pos;
pub const OPAMP_CSR_PGGAIN_4: u32 = 0x10 << OPAMP_CSR_PGGAIN_Pos;
pub const OPAMP_CSR_TRIMOFFSETP_Pos: u32 = 19;
pub const OPAMP_CSR_TRIMOFFSETP_Msk: u32 = 0x1F << OPAMP_CSR_TRIMOFFSETP_Pos;
pub const OPAMP_CSR_TRIMOFFSETP: u32 = OPAMP_CSR_TRIMOFFSETP_Msk;
pub const OPAMP_CSR_TRIMOFFSETN_Pos: u32 = 24;
pub const OPAMP_CSR_TRIMOFFSETN_Msk: u32 = 0x1F << OPAMP_CSR_TRIMOFFSETN_Pos;
pub const OPAMP_CSR_TRIMOFFSETN: u32 = OPAMP_CSR_TRIMOFFSETN_Msk;
pub const OPAMP_CSR_OUTCAL_Pos: u32 = 30;
pub const OPAMP_CSR_OUTCAL_Msk: u32 = 0x1 << OPAMP_CSR_OUTCAL_Pos;
pub const OPAMP_CSR_OUTCAL: u32 = OPAMP_CSR_OUTCAL_Msk;
pub const OPAMP_CSR_LOCK_Pos: u32 = 31;
pub const OPAMP_CSR_LOCK_Msk: u32 = 0x1 << OPAMP_CSR_LOCK_Pos;
pub const OPAMP_CSR_LOCK: u32 = OPAMP_CSR_LOCK_Msk;
pub const OPAMP_TCMR_VMSSEL_Pos: u32 = 0;
pub const OPAMP_TCMR_VMSSEL_Msk: u32 = 0x1 << OPAMP_TCMR_VMSSEL_Pos;
pub const OPAMP_TCMR_VMSSEL: u32 = OPAMP_TCMR_VMSSEL_Msk;
pub const OPAMP_TCMR_VPSSEL_Pos: u32 = 1;
pub const OPAMP_TCMR_VPSSEL_Msk: u32 = 0x3 << OPAMP_TCMR_VPSSEL_Pos;
pub const OPAMP_TCMR_VPSSEL: u32 = OPAMP_TCMR_VPSSEL_Msk;
pub const OPAMP_TCMR_VPSSEL_0: u32 = 0x1 << OPAMP_TCMR_VPSSEL_Pos;
pub const OPAMP_TCMR_VPSSEL_1: u32 = 0x2 << OPAMP_TCMR_VPSSEL_Pos;
pub const OPAMP_TCMR_T1CMEN_Pos: u32 = 3;
pub const OPAMP_TCMR_T1CMEN_Msk: u32 = 0x1 << OPAMP_TCMR_T1CMEN_Pos;
pub const OPAMP_TCMR_T1CMEN: u32 = OPAMP_TCMR_T1CMEN_Msk;
pub const OPAMP_TCMR_T8CMEN_Pos: u32 = 4;
pub const OPAMP_TCMR_T8CMEN_Msk: u32 = 0x1 << OPAMP_TCMR_T8CMEN_Pos;
pub const OPAMP_TCMR_T8CMEN: u32 = OPAMP_TCMR_T8CMEN_Msk;
pub const OPAMP_TCMR_T20CMEN_Pos: u32 = 5;
pub const OPAMP_TCMR_T20CMEN_Msk: u32 = 0x1 << OPAMP_TCMR_T20CMEN_Pos;
pub const OPAMP_TCMR_T20CMEN: u32 = OPAMP_TCMR_T20CMEN_Msk;
pub const OPAMP_TCMR_LOCK_Pos: u32 = 31;
pub const OPAMP_TCMR_LOCK_Msk: u32 = 0x1 << OPAMP_TCMR_LOCK_Pos;
pub const OPAMP_TCMR_LOCK: u32 = OPAMP_TCMR_LOCK_Msk;
pub const PWR_CR1_LPR_Pos: u32 = 14;
pub const PWR_CR1_LPR_Msk: u32 = 0x1 << PWR_CR1_LPR_Pos;
pub const PWR_CR1_LPR: u32 = PWR_CR1_LPR_Msk;
pub const PWR_CR1_VOS_Pos: u32 = 9;
pub const PWR_CR1_VOS_Msk: u32 = 0x3 << PWR_CR1_VOS_Pos;
pub const PWR_CR1_VOS: u32 = PWR_CR1_VOS_Msk;
pub const PWR_CR1_VOS_0: u32 = 0x1 << PWR_CR1_VOS_Pos;
pub const PWR_CR1_VOS_1: u32 = 0x2 << PWR_CR1_VOS_Pos;
pub const PWR_CR1_DBP_Pos: u32 = 8;
pub const PWR_CR1_DBP_Msk: u32 = 0x1 << PWR_CR1_DBP_Pos;
pub const PWR_CR1_DBP: u32 = PWR_CR1_DBP_Msk;
pub const PWR_CR1_LPMS_Pos: u32 = 0;
pub const PWR_CR1_LPMS_Msk: u32 = 0x7 << PWR_CR1_LPMS_Pos;
pub const PWR_CR1_LPMS: u32 = PWR_CR1_LPMS_Msk;
pub const PWR_CR1_LPMS_STOP0: u32 = 0x00000000;
pub const PWR_CR1_LPMS_STOP1_Pos: u32 = 0;
pub const PWR_CR1_LPMS_STOP1_Msk: u32 = 0x1 << PWR_CR1_LPMS_STOP1_Pos;
pub const PWR_CR1_LPMS_STOP1: u32 = PWR_CR1_LPMS_STOP1_Msk;
pub const PWR_CR1_LPMS_STANDBY_Pos: u32 = 0;
pub const PWR_CR1_LPMS_STANDBY_Msk: u32 = 0x3 << PWR_CR1_LPMS_STANDBY_Pos;
pub const PWR_CR1_LPMS_STANDBY: u32 = PWR_CR1_LPMS_STANDBY_Msk;
pub const PWR_CR1_LPMS_SHUTDOWN_Pos: u32 = 2;
pub const PWR_CR1_LPMS_SHUTDOWN_Msk: u32 = 0x1 << PWR_CR1_LPMS_SHUTDOWN_Pos;
pub const PWR_CR1_LPMS_SHUTDOWN: u32 = PWR_CR1_LPMS_SHUTDOWN_Msk;
pub const PWR_CR2_PVME_Pos: u32 = 4;
pub const PWR_CR2_PVME_Msk: u32 = 0xF << PWR_CR2_PVME_Pos;
pub const PWR_CR2_PVME: u32 = PWR_CR2_PVME_Msk;
pub const PWR_CR2_PVME4_Pos: u32 = 7;
pub const PWR_CR2_PVME4_Msk: u32 = 0x1 << PWR_CR2_PVME4_Pos;
pub const PWR_CR2_PVME4: u32 = PWR_CR2_PVME4_Msk;
pub const PWR_CR2_PVME3_Pos: u32 = 6;
pub const PWR_CR2_PVME3_Msk: u32 = 0x1 << PWR_CR2_PVME3_Pos;
pub const PWR_CR2_PVME3: u32 = PWR_CR2_PVME3_Msk;
pub const PWR_CR2_PVME2_Pos: u32 = 5;
pub const PWR_CR2_PVME2_Msk: u32 = 0x1 << PWR_CR2_PVME2_Pos;
pub const PWR_CR2_PVME2: u32 = PWR_CR2_PVME2_Msk;
pub const PWR_CR2_PVME1_Pos: u32 = 4;
pub const PWR_CR2_PVME1_Msk: u32 = 0x1 << PWR_CR2_PVME1_Pos;
pub const PWR_CR2_PVME1: u32 = PWR_CR2_PVME1_Msk;
pub const PWR_CR2_PLS_Pos: u32 = 1;
pub const PWR_CR2_PLS_Msk: u32 = 0x7 << PWR_CR2_PLS_Pos;
pub const PWR_CR2_PLS: u32 = PWR_CR2_PLS_Msk;
pub const PWR_CR2_PLS_LEV0: u32 = 0x00000000;
pub const PWR_CR2_PLS_LEV1_Pos: u32 = 1;
pub const PWR_CR2_PLS_LEV1_Msk: u32 = 0x1 << PWR_CR2_PLS_LEV1_Pos;
pub const PWR_CR2_PLS_LEV1: u32 = PWR_CR2_PLS_LEV1_Msk;
pub const PWR_CR2_PLS_LEV2_Pos: u32 = 2;
pub const PWR_CR2_PLS_LEV2_Msk: u32 = 0x1 << PWR_CR2_PLS_LEV2_Pos;
pub const PWR_CR2_PLS_LEV2: u32 = PWR_CR2_PLS_LEV2_Msk;
pub const PWR_CR2_PLS_LEV3_Pos: u32 = 1;
pub const PWR_CR2_PLS_LEV3_Msk: u32 = 0x3 << PWR_CR2_PLS_LEV3_Pos;
pub const PWR_CR2_PLS_LEV3: u32 = PWR_CR2_PLS_LEV3_Msk;
pub const PWR_CR2_PLS_LEV4_Pos: u32 = 3;
pub const PWR_CR2_PLS_LEV4_Msk: u32 = 0x1 << PWR_CR2_PLS_LEV4_Pos;
pub const PWR_CR2_PLS_LEV4: u32 = PWR_CR2_PLS_LEV4_Msk;
pub const PWR_CR2_PLS_LEV5_Pos: u32 = 1;
pub const PWR_CR2_PLS_LEV5_Msk: u32 = 0x5 << PWR_CR2_PLS_LEV5_Pos;
pub const PWR_CR2_PLS_LEV5: u32 = PWR_CR2_PLS_LEV5_Msk;
pub const PWR_CR2_PLS_LEV6_Pos: u32 = 2;
pub const PWR_CR2_PLS_LEV6_Msk: u32 = 0x3 << PWR_CR2_PLS_LEV6_Pos;
pub const PWR_CR2_PLS_LEV6: u32 = PWR_CR2_PLS_LEV6_Msk;
pub const PWR_CR2_PLS_LEV7_Pos: u32 = 1;
pub const PWR_CR2_PLS_LEV7_Msk: u32 = 0x7 << PWR_CR2_PLS_LEV7_Pos;
pub const PWR_CR2_PLS_LEV7: u32 = PWR_CR2_PLS_LEV7_Msk;
pub const PWR_CR2_PVDE_Pos: u32 = 0;
pub const PWR_CR2_PVDE_Msk: u32 = 0x1 << PWR_CR2_PVDE_Pos;
pub const PWR_CR2_PVDE: u32 = PWR_CR2_PVDE_Msk;
pub const PWR_CR3_EIWF_Pos: u32 = 15;
pub const PWR_CR3_EIWF_Msk: u32 = 0x1 << PWR_CR3_EIWF_Pos;
pub const PWR_CR3_EIWF: u32 = PWR_CR3_EIWF_Msk;
pub const PWR_CR3_UCPD_DBDIS_Pos: u32 = 14;
pub const PWR_CR3_UCPD_DBDIS_Msk: u32 = 0x1 << PWR_CR3_UCPD_DBDIS_Pos;
pub const PWR_CR3_UCPD_DBDIS: u32 = PWR_CR3_UCPD_DBDIS_Msk;
pub const PWR_CR3_UCPD_STDBY_Pos: u32 = 13;
pub const PWR_CR3_UCPD_STDBY_Msk: u32 = 0x1 << PWR_CR3_UCPD_STDBY_Pos;
pub const PWR_CR3_UCPD_STDBY: u32 = PWR_CR3_UCPD_STDBY_Msk;
pub const PWR_CR3_APC_Pos: u32 = 10;
pub const PWR_CR3_APC_Msk: u32 = 0x1 << PWR_CR3_APC_Pos;
pub const PWR_CR3_APC: u32 = PWR_CR3_APC_Msk;
pub const PWR_CR3_RRS_Pos: u32 = 8;
pub const PWR_CR3_RRS_Msk: u32 = 0x1 << PWR_CR3_RRS_Pos;
pub const PWR_CR3_RRS: u32 = PWR_CR3_RRS_Msk;
pub const PWR_CR3_EWUP5_Pos: u32 = 4;
pub const PWR_CR3_EWUP5_Msk: u32 = 0x1 << PWR_CR3_EWUP5_Pos;
pub const PWR_CR3_EWUP5: u32 = PWR_CR3_EWUP5_Msk;
pub const PWR_CR3_EWUP4_Pos: u32 = 3;
pub const PWR_CR3_EWUP4_Msk: u32 = 0x1 << PWR_CR3_EWUP4_Pos;
pub const PWR_CR3_EWUP4: u32 = PWR_CR3_EWUP4_Msk;
pub const PWR_CR3_EWUP3_Pos: u32 = 2;
pub const PWR_CR3_EWUP3_Msk: u32 = 0x1 << PWR_CR3_EWUP3_Pos;
pub const PWR_CR3_EWUP3: u32 = PWR_CR3_EWUP3_Msk;
pub const PWR_CR3_EWUP2_Pos: u32 = 1;
pub const PWR_CR3_EWUP2_Msk: u32 = 0x1 << PWR_CR3_EWUP2_Pos;
pub const PWR_CR3_EWUP2: u32 = PWR_CR3_EWUP2_Msk;
pub const PWR_CR3_EWUP1_Pos: u32 = 0;
pub const PWR_CR3_EWUP1_Msk: u32 = 0x1 << PWR_CR3_EWUP1_Pos;
pub const PWR_CR3_EWUP1: u32 = PWR_CR3_EWUP1_Msk;
pub const PWR_CR3_EWUP_Pos: u32 = 0;
pub const PWR_CR3_EWUP_Msk: u32 = 0x1F << PWR_CR3_EWUP_Pos;
pub const PWR_CR3_EWUP: u32 = PWR_CR3_EWUP_Msk;
pub const PWR_CR4_VBRS_Pos: u32 = 9;
pub const PWR_CR4_VBRS_Msk: u32 = 0x1 << PWR_CR4_VBRS_Pos;
pub const PWR_CR4_VBRS: u32 = PWR_CR4_VBRS_Msk;
pub const PWR_CR4_VBE_Pos: u32 = 8;
pub const PWR_CR4_VBE_Msk: u32 = 0x1 << PWR_CR4_VBE_Pos;
pub const PWR_CR4_VBE: u32 = PWR_CR4_VBE_Msk;
pub const PWR_CR4_WP5_Pos: u32 = 4;
pub const PWR_CR4_WP5_Msk: u32 = 0x1 << PWR_CR4_WP5_Pos;
pub const PWR_CR4_WP5: u32 = PWR_CR4_WP5_Msk;
pub const PWR_CR4_WP4_Pos: u32 = 3;
pub const PWR_CR4_WP4_Msk: u32 = 0x1 << PWR_CR4_WP4_Pos;
pub const PWR_CR4_WP4: u32 = PWR_CR4_WP4_Msk;
pub const PWR_CR4_WP3_Pos: u32 = 2;
pub const PWR_CR4_WP3_Msk: u32 = 0x1 << PWR_CR4_WP3_Pos;
pub const PWR_CR4_WP3: u32 = PWR_CR4_WP3_Msk;
pub const PWR_CR4_WP2_Pos: u32 = 1;
pub const PWR_CR4_WP2_Msk: u32 = 0x1 << PWR_CR4_WP2_Pos;
pub const PWR_CR4_WP2: u32 = PWR_CR4_WP2_Msk;
pub const PWR_CR4_WP1_Pos: u32 = 0;
pub const PWR_CR4_WP1_Msk: u32 = 0x1 << PWR_CR4_WP1_Pos;
pub const PWR_CR4_WP1: u32 = PWR_CR4_WP1_Msk;
pub const PWR_SR1_WUFI_Pos: u32 = 15;
pub const PWR_SR1_WUFI_Msk: u32 = 0x1 << PWR_SR1_WUFI_Pos;
pub const PWR_SR1_WUFI: u32 = PWR_SR1_WUFI_Msk;
pub const PWR_SR1_SBF_Pos: u32 = 8;
pub const PWR_SR1_SBF_Msk: u32 = 0x1 << PWR_SR1_SBF_Pos;
pub const PWR_SR1_SBF: u32 = PWR_SR1_SBF_Msk;
pub const PWR_SR1_WUF_Pos: u32 = 0;
pub const PWR_SR1_WUF_Msk: u32 = 0x1F << PWR_SR1_WUF_Pos;
pub const PWR_SR1_WUF: u32 = PWR_SR1_WUF_Msk;
pub const PWR_SR1_WUF5_Pos: u32 = 4;
pub const PWR_SR1_WUF5_Msk: u32 = 0x1 << PWR_SR1_WUF5_Pos;
pub const PWR_SR1_WUF5: u32 = PWR_SR1_WUF5_Msk;
pub const PWR_SR1_WUF4_Pos: u32 = 3;
pub const PWR_SR1_WUF4_Msk: u32 = 0x1 << PWR_SR1_WUF4_Pos;
pub const PWR_SR1_WUF4: u32 = PWR_SR1_WUF4_Msk;
pub const PWR_SR1_WUF3_Pos: u32 = 2;
pub const PWR_SR1_WUF3_Msk: u32 = 0x1 << PWR_SR1_WUF3_Pos;
pub const PWR_SR1_WUF3: u32 = PWR_SR1_WUF3_Msk;
pub const PWR_SR1_WUF2_Pos: u32 = 1;
pub const PWR_SR1_WUF2_Msk: u32 = 0x1 << PWR_SR1_WUF2_Pos;
pub const PWR_SR1_WUF2: u32 = PWR_SR1_WUF2_Msk;
pub const PWR_SR1_WUF1_Pos: u32 = 0;
pub const PWR_SR1_WUF1_Msk: u32 = 0x1 << PWR_SR1_WUF1_Pos;
pub const PWR_SR1_WUF1: u32 = PWR_SR1_WUF1_Msk;
pub const PWR_SR2_PVMO4_Pos: u32 = 15;
pub const PWR_SR2_PVMO4_Msk: u32 = 0x1 << PWR_SR2_PVMO4_Pos;
pub const PWR_SR2_PVMO4: u32 = PWR_SR2_PVMO4_Msk;
pub const PWR_SR2_PVMO3_Pos: u32 = 14;
pub const PWR_SR2_PVMO3_Msk: u32 = 0x1 << PWR_SR2_PVMO3_Pos;
pub const PWR_SR2_PVMO3: u32 = PWR_SR2_PVMO3_Msk;
pub const PWR_SR2_PVMO2_Pos: u32 = 13;
pub const PWR_SR2_PVMO2_Msk: u32 = 0x1 << PWR_SR2_PVMO2_Pos;
pub const PWR_SR2_PVMO2: u32 = PWR_SR2_PVMO2_Msk;
pub const PWR_SR2_PVMO1_Pos: u32 = 12;
pub const PWR_SR2_PVMO1_Msk: u32 = 0x1 << PWR_SR2_PVMO1_Pos;
pub const PWR_SR2_PVMO1: u32 = PWR_SR2_PVMO1_Msk;
pub const PWR_SR2_PVDO_Pos: u32 = 11;
pub const PWR_SR2_PVDO_Msk: u32 = 0x1 << PWR_SR2_PVDO_Pos;
pub const PWR_SR2_PVDO: u32 = PWR_SR2_PVDO_Msk;
pub const PWR_SR2_VOSF_Pos: u32 = 10;
pub const PWR_SR2_VOSF_Msk: u32 = 0x1 << PWR_SR2_VOSF_Pos;
pub const PWR_SR2_VOSF: u32 = PWR_SR2_VOSF_Msk;
pub const PWR_SR2_REGLPF_Pos: u32 = 9;
pub const PWR_SR2_REGLPF_Msk: u32 = 0x1 << PWR_SR2_REGLPF_Pos;
pub const PWR_SR2_REGLPF: u32 = PWR_SR2_REGLPF_Msk;
pub const PWR_SR2_REGLPS_Pos: u32 = 8;
pub const PWR_SR2_REGLPS_Msk: u32 = 0x1 << PWR_SR2_REGLPS_Pos;
pub const PWR_SR2_REGLPS: u32 = PWR_SR2_REGLPS_Msk;
pub const PWR_SCR_CSBF_Pos: u32 = 8;
pub const PWR_SCR_CSBF_Msk: u32 = 0x1 << PWR_SCR_CSBF_Pos;
pub const PWR_SCR_CSBF: u32 = PWR_SCR_CSBF_Msk;
pub const PWR_SCR_CWUF_Pos: u32 = 0;
pub const PWR_SCR_CWUF_Msk: u32 = 0x1F << PWR_SCR_CWUF_Pos;
pub const PWR_SCR_CWUF: u32 = PWR_SCR_CWUF_Msk;
pub const PWR_SCR_CWUF5_Pos: u32 = 4;
pub const PWR_SCR_CWUF5_Msk: u32 = 0x1 << PWR_SCR_CWUF5_Pos;
pub const PWR_SCR_CWUF5: u32 = PWR_SCR_CWUF5_Msk;
pub const PWR_SCR_CWUF4_Pos: u32 = 3;
pub const PWR_SCR_CWUF4_Msk: u32 = 0x1 << PWR_SCR_CWUF4_Pos;
pub const PWR_SCR_CWUF4: u32 = PWR_SCR_CWUF4_Msk;
pub const PWR_SCR_CWUF3_Pos: u32 = 2;
pub const PWR_SCR_CWUF3_Msk: u32 = 0x1 << PWR_SCR_CWUF3_Pos;
pub const PWR_SCR_CWUF3: u32 = PWR_SCR_CWUF3_Msk;
pub const PWR_SCR_CWUF2_Pos: u32 = 1;
pub const PWR_SCR_CWUF2_Msk: u32 = 0x1 << PWR_SCR_CWUF2_Pos;
pub const PWR_SCR_CWUF2: u32 = PWR_SCR_CWUF2_Msk;
pub const PWR_SCR_CWUF1_Pos: u32 = 0;
pub const PWR_SCR_CWUF1_Msk: u32 = 0x1 << PWR_SCR_CWUF1_Pos;
pub const PWR_SCR_CWUF1: u32 = PWR_SCR_CWUF1_Msk;
pub const PWR_PUCRA_PA15_Pos: u32 = 15;
pub const PWR_PUCRA_PA15_Msk: u32 = 0x1 << PWR_PUCRA_PA15_Pos;
pub const PWR_PUCRA_PA15: u32 = PWR_PUCRA_PA15_Msk;
pub const PWR_PUCRA_PA13_Pos: u32 = 13;
pub const PWR_PUCRA_PA13_Msk: u32 = 0x1 << PWR_PUCRA_PA13_Pos;
pub const PWR_PUCRA_PA13: u32 = PWR_PUCRA_PA13_Msk;
pub const PWR_PUCRA_PA12_Pos: u32 = 12;
pub const PWR_PUCRA_PA12_Msk: u32 = 0x1 << PWR_PUCRA_PA12_Pos;
pub const PWR_PUCRA_PA12: u32 = PWR_PUCRA_PA12_Msk;
pub const PWR_PUCRA_PA11_Pos: u32 = 11;
pub const PWR_PUCRA_PA11_Msk: u32 = 0x1 << PWR_PUCRA_PA11_Pos;
pub const PWR_PUCRA_PA11: u32 = PWR_PUCRA_PA11_Msk;
pub const PWR_PUCRA_PA10_Pos: u32 = 10;
pub const PWR_PUCRA_PA10_Msk: u32 = 0x1 << PWR_PUCRA_PA10_Pos;
pub const PWR_PUCRA_PA10: u32 = PWR_PUCRA_PA10_Msk;
pub const PWR_PUCRA_PA9_Pos: u32 = 9;
pub const PWR_PUCRA_PA9_Msk: u32 = 0x1 << PWR_PUCRA_PA9_Pos;
pub const PWR_PUCRA_PA9: u32 = PWR_PUCRA_PA9_Msk;
pub const PWR_PUCRA_PA8_Pos: u32 = 8;
pub const PWR_PUCRA_PA8_Msk: u32 = 0x1 << PWR_PUCRA_PA8_Pos;
pub const PWR_PUCRA_PA8: u32 = PWR_PUCRA_PA8_Msk;
pub const PWR_PUCRA_PA7_Pos: u32 = 7;
pub const PWR_PUCRA_PA7_Msk: u32 = 0x1 << PWR_PUCRA_PA7_Pos;
pub const PWR_PUCRA_PA7: u32 = PWR_PUCRA_PA7_Msk;
pub const PWR_PUCRA_PA6_Pos: u32 = 6;
pub const PWR_PUCRA_PA6_Msk: u32 = 0x1 << PWR_PUCRA_PA6_Pos;
pub const PWR_PUCRA_PA6: u32 = PWR_PUCRA_PA6_Msk;
pub const PWR_PUCRA_PA5_Pos: u32 = 5;
pub const PWR_PUCRA_PA5_Msk: u32 = 0x1 << PWR_PUCRA_PA5_Pos;
pub const PWR_PUCRA_PA5: u32 = PWR_PUCRA_PA5_Msk;
pub const PWR_PUCRA_PA4_Pos: u32 = 4;
pub const PWR_PUCRA_PA4_Msk: u32 = 0x1 << PWR_PUCRA_PA4_Pos;
pub const PWR_PUCRA_PA4: u32 = PWR_PUCRA_PA4_Msk;
pub const PWR_PUCRA_PA3_Pos: u32 = 3;
pub const PWR_PUCRA_PA3_Msk: u32 = 0x1 << PWR_PUCRA_PA3_Pos;
pub const PWR_PUCRA_PA3: u32 = PWR_PUCRA_PA3_Msk;
pub const PWR_PUCRA_PA2_Pos: u32 = 2;
pub const PWR_PUCRA_PA2_Msk: u32 = 0x1 << PWR_PUCRA_PA2_Pos;
pub const PWR_PUCRA_PA2: u32 = PWR_PUCRA_PA2_Msk;
pub const PWR_PUCRA_PA1_Pos: u32 = 1;
pub const PWR_PUCRA_PA1_Msk: u32 = 0x1 << PWR_PUCRA_PA1_Pos;
pub const PWR_PUCRA_PA1: u32 = PWR_PUCRA_PA1_Msk;
pub const PWR_PUCRA_PA0_Pos: u32 = 0;
pub const PWR_PUCRA_PA0_Msk: u32 = 0x1 << PWR_PUCRA_PA0_Pos;
pub const PWR_PUCRA_PA0: u32 = PWR_PUCRA_PA0_Msk;
pub const PWR_PDCRA_PA14_Pos: u32 = 14;
pub const PWR_PDCRA_PA14_Msk: u32 = 0x1 << PWR_PDCRA_PA14_Pos;
pub const PWR_PDCRA_PA14: u32 = PWR_PDCRA_PA14_Msk;
pub const PWR_PDCRA_PA12_Pos: u32 = 12;
pub const PWR_PDCRA_PA12_Msk: u32 = 0x1 << PWR_PDCRA_PA12_Pos;
pub const PWR_PDCRA_PA12: u32 = PWR_PDCRA_PA12_Msk;
pub const PWR_PDCRA_PA11_Pos: u32 = 11;
pub const PWR_PDCRA_PA11_Msk: u32 = 0x1 << PWR_PDCRA_PA11_Pos;
pub const PWR_PDCRA_PA11: u32 = PWR_PDCRA_PA11_Msk;
pub const PWR_PDCRA_PA10_Pos: u32 = 10;
pub const PWR_PDCRA_PA10_Msk: u32 = 0x1 << PWR_PDCRA_PA10_Pos;
pub const PWR_PDCRA_PA10: u32 = PWR_PDCRA_PA10_Msk;
pub const PWR_PDCRA_PA9_Pos: u32 = 9;
pub const PWR_PDCRA_PA9_Msk: u32 = 0x1 << PWR_PDCRA_PA9_Pos;
pub const PWR_PDCRA_PA9: u32 = PWR_PDCRA_PA9_Msk;
pub const PWR_PDCRA_PA8_Pos: u32 = 8;
pub const PWR_PDCRA_PA8_Msk: u32 = 0x1 << PWR_PDCRA_PA8_Pos;
pub const PWR_PDCRA_PA8: u32 = PWR_PDCRA_PA8_Msk;
pub const PWR_PDCRA_PA7_Pos: u32 = 7;
pub const PWR_PDCRA_PA7_Msk: u32 = 0x1 << PWR_PDCRA_PA7_Pos;
pub const PWR_PDCRA_PA7: u32 = PWR_PDCRA_PA7_Msk;
pub const PWR_PDCRA_PA6_Pos: u32 = 6;
pub const PWR_PDCRA_PA6_Msk: u32 = 0x1 << PWR_PDCRA_PA6_Pos;
pub const PWR_PDCRA_PA6: u32 = PWR_PDCRA_PA6_Msk;
pub const PWR_PDCRA_PA5_Pos: u32 = 5;
pub const PWR_PDCRA_PA5_Msk: u32 = 0x1 << PWR_PDCRA_PA5_Pos;
pub const PWR_PDCRA_PA5: u32 = PWR_PDCRA_PA5_Msk;
pub const PWR_PDCRA_PA4_Pos: u32 = 4;
pub const PWR_PDCRA_PA4_Msk: u32 = 0x1 << PWR_PDCRA_PA4_Pos;
pub const PWR_PDCRA_PA4: u32 = PWR_PDCRA_PA4_Msk;
pub const PWR_PDCRA_PA3_Pos: u32 = 3;
pub const PWR_PDCRA_PA3_Msk: u32 = 0x1 << PWR_PDCRA_PA3_Pos;
pub const PWR_PDCRA_PA3: u32 = PWR_PDCRA_PA3_Msk;
pub const PWR_PDCRA_PA2_Pos: u32 = 2;
pub const PWR_PDCRA_PA2_Msk: u32 = 0x1 << PWR_PDCRA_PA2_Pos;
pub const PWR_PDCRA_PA2: u32 = PWR_PDCRA_PA2_Msk;
pub const PWR_PDCRA_PA1_Pos: u32 = 1;
pub const PWR_PDCRA_PA1_Msk: u32 = 0x1 << PWR_PDCRA_PA1_Pos;
pub const PWR_PDCRA_PA1: u32 = PWR_PDCRA_PA1_Msk;
pub const PWR_PDCRA_PA0_Pos: u32 = 0;
pub const PWR_PDCRA_PA0_Msk: u32 = 0x1 << PWR_PDCRA_PA0_Pos;
pub const PWR_PDCRA_PA0: u32 = PWR_PDCRA_PA0_Msk;
pub const PWR_PUCRB_PB15_Pos: u32 = 15;
pub const PWR_PUCRB_PB15_Msk: u32 = 0x1 << PWR_PUCRB_PB15_Pos;
pub const PWR_PUCRB_PB15: u32 = PWR_PUCRB_PB15_Msk;
pub const PWR_PUCRB_PB14_Pos: u32 = 14;
pub const PWR_PUCRB_PB14_Msk: u32 = 0x1 << PWR_PUCRB_PB14_Pos;
pub const PWR_PUCRB_PB14: u32 = PWR_PUCRB_PB14_Msk;
pub const PWR_PUCRB_PB13_Pos: u32 = 13;
pub const PWR_PUCRB_PB13_Msk: u32 = 0x1 << PWR_PUCRB_PB13_Pos;
pub const PWR_PUCRB_PB13: u32 = PWR_PUCRB_PB13_Msk;
pub const PWR_PUCRB_PB12_Pos: u32 = 12;
pub const PWR_PUCRB_PB12_Msk: u32 = 0x1 << PWR_PUCRB_PB12_Pos;
pub const PWR_PUCRB_PB12: u32 = PWR_PUCRB_PB12_Msk;
pub const PWR_PUCRB_PB11_Pos: u32 = 11;
pub const PWR_PUCRB_PB11_Msk: u32 = 0x1 << PWR_PUCRB_PB11_Pos;
pub const PWR_PUCRB_PB11: u32 = PWR_PUCRB_PB11_Msk;
pub const PWR_PUCRB_PB10_Pos: u32 = 10;
pub const PWR_PUCRB_PB10_Msk: u32 = 0x1 << PWR_PUCRB_PB10_Pos;
pub const PWR_PUCRB_PB10: u32 = PWR_PUCRB_PB10_Msk;
pub const PWR_PUCRB_PB9_Pos: u32 = 9;
pub const PWR_PUCRB_PB9_Msk: u32 = 0x1 << PWR_PUCRB_PB9_Pos;
pub const PWR_PUCRB_PB9: u32 = PWR_PUCRB_PB9_Msk;
pub const PWR_PUCRB_PB8_Pos: u32 = 8;
pub const PWR_PUCRB_PB8_Msk: u32 = 0x1 << PWR_PUCRB_PB8_Pos;
pub const PWR_PUCRB_PB8: u32 = PWR_PUCRB_PB8_Msk;
pub const PWR_PUCRB_PB7_Pos: u32 = 7;
pub const PWR_PUCRB_PB7_Msk: u32 = 0x1 << PWR_PUCRB_PB7_Pos;
pub const PWR_PUCRB_PB7: u32 = PWR_PUCRB_PB7_Msk;
pub const PWR_PUCRB_PB6_Pos: u32 = 6;
pub const PWR_PUCRB_PB6_Msk: u32 = 0x1 << PWR_PUCRB_PB6_Pos;
pub const PWR_PUCRB_PB6: u32 = PWR_PUCRB_PB6_Msk;
pub const PWR_PUCRB_PB5_Pos: u32 = 5;
pub const PWR_PUCRB_PB5_Msk: u32 = 0x1 << PWR_PUCRB_PB5_Pos;
pub const PWR_PUCRB_PB5: u32 = PWR_PUCRB_PB5_Msk;
pub const PWR_PUCRB_PB4_Pos: u32 = 4;
pub const PWR_PUCRB_PB4_Msk: u32 = 0x1 << PWR_PUCRB_PB4_Pos;
pub const PWR_PUCRB_PB4: u32 = PWR_PUCRB_PB4_Msk;
pub const PWR_PUCRB_PB3_Pos: u32 = 3;
pub const PWR_PUCRB_PB3_Msk: u32 = 0x1 << PWR_PUCRB_PB3_Pos;
pub const PWR_PUCRB_PB3: u32 = PWR_PUCRB_PB3_Msk;
pub const PWR_PUCRB_PB2_Pos: u32 = 2;
pub const PWR_PUCRB_PB2_Msk: u32 = 0x1 << PWR_PUCRB_PB2_Pos;
pub const PWR_PUCRB_PB2: u32 = PWR_PUCRB_PB2_Msk;
pub const PWR_PUCRB_PB1_Pos: u32 = 1;
pub const PWR_PUCRB_PB1_Msk: u32 = 0x1 << PWR_PUCRB_PB1_Pos;
pub const PWR_PUCRB_PB1: u32 = PWR_PUCRB_PB1_Msk;
pub const PWR_PUCRB_PB0_Pos: u32 = 0;
pub const PWR_PUCRB_PB0_Msk: u32 = 0x1 << PWR_PUCRB_PB0_Pos;
pub const PWR_PUCRB_PB0: u32 = PWR_PUCRB_PB0_Msk;
pub const PWR_PDCRB_PB15_Pos: u32 = 15;
pub const PWR_PDCRB_PB15_Msk: u32 = 0x1 << PWR_PDCRB_PB15_Pos;
pub const PWR_PDCRB_PB15: u32 = PWR_PDCRB_PB15_Msk;
pub const PWR_PDCRB_PB14_Pos: u32 = 14;
pub const PWR_PDCRB_PB14_Msk: u32 = 0x1 << PWR_PDCRB_PB14_Pos;
pub const PWR_PDCRB_PB14: u32 = PWR_PDCRB_PB14_Msk;
pub const PWR_PDCRB_PB13_Pos: u32 = 13;
pub const PWR_PDCRB_PB13_Msk: u32 = 0x1 << PWR_PDCRB_PB13_Pos;
pub const PWR_PDCRB_PB13: u32 = PWR_PDCRB_PB13_Msk;
pub const PWR_PDCRB_PB12_Pos: u32 = 12;
pub const PWR_PDCRB_PB12_Msk: u32 = 0x1 << PWR_PDCRB_PB12_Pos;
pub const PWR_PDCRB_PB12: u32 = PWR_PDCRB_PB12_Msk;
pub const PWR_PDCRB_PB11_Pos: u32 = 11;
pub const PWR_PDCRB_PB11_Msk: u32 = 0x1 << PWR_PDCRB_PB11_Pos;
pub const PWR_PDCRB_PB11: u32 = PWR_PDCRB_PB11_Msk;
pub const PWR_PDCRB_PB10_Pos: u32 = 10;
pub const PWR_PDCRB_PB10_Msk: u32 = 0x1 << PWR_PDCRB_PB10_Pos;
pub const PWR_PDCRB_PB10: u32 = PWR_PDCRB_PB10_Msk;
pub const PWR_PDCRB_PB9_Pos: u32 = 9;
pub const PWR_PDCRB_PB9_Msk: u32 = 0x1 << PWR_PDCRB_PB9_Pos;
pub const PWR_PDCRB_PB9: u32 = PWR_PDCRB_PB9_Msk;
pub const PWR_PDCRB_PB8_Pos: u32 = 8;
pub const PWR_PDCRB_PB8_Msk: u32 = 0x1 << PWR_PDCRB_PB8_Pos;
pub const PWR_PDCRB_PB8: u32 = PWR_PDCRB_PB8_Msk;
pub const PWR_PDCRB_PB7_Pos: u32 = 7;
pub const PWR_PDCRB_PB7_Msk: u32 = 0x1 << PWR_PDCRB_PB7_Pos;
pub const PWR_PDCRB_PB7: u32 = PWR_PDCRB_PB7_Msk;
pub const PWR_PDCRB_PB6_Pos: u32 = 6;
pub const PWR_PDCRB_PB6_Msk: u32 = 0x1 << PWR_PDCRB_PB6_Pos;
pub const PWR_PDCRB_PB6: u32 = PWR_PDCRB_PB6_Msk;
pub const PWR_PDCRB_PB5_Pos: u32 = 5;
pub const PWR_PDCRB_PB5_Msk: u32 = 0x1 << PWR_PDCRB_PB5_Pos;
pub const PWR_PDCRB_PB5: u32 = PWR_PDCRB_PB5_Msk;
pub const PWR_PDCRB_PB3_Pos: u32 = 3;
pub const PWR_PDCRB_PB3_Msk: u32 = 0x1 << PWR_PDCRB_PB3_Pos;
pub const PWR_PDCRB_PB3: u32 = PWR_PDCRB_PB3_Msk;
pub const PWR_PDCRB_PB2_Pos: u32 = 2;
pub const PWR_PDCRB_PB2_Msk: u32 = 0x1 << PWR_PDCRB_PB2_Pos;
pub const PWR_PDCRB_PB2: u32 = PWR_PDCRB_PB2_Msk;
pub const PWR_PDCRB_PB1_Pos: u32 = 1;
pub const PWR_PDCRB_PB1_Msk: u32 = 0x1 << PWR_PDCRB_PB1_Pos;
pub const PWR_PDCRB_PB1: u32 = PWR_PDCRB_PB1_Msk;
pub const PWR_PDCRB_PB0_Pos: u32 = 0;
pub const PWR_PDCRB_PB0_Msk: u32 = 0x1 << PWR_PDCRB_PB0_Pos;
pub const PWR_PDCRB_PB0: u32 = PWR_PDCRB_PB0_Msk;
pub const PWR_PUCRC_PC15_Pos: u32 = 15;
pub const PWR_PUCRC_PC15_Msk: u32 = 0x1 << PWR_PUCRC_PC15_Pos;
pub const PWR_PUCRC_PC15: u32 = PWR_PUCRC_PC15_Msk;
pub const PWR_PUCRC_PC14_Pos: u32 = 14;
pub const PWR_PUCRC_PC14_Msk: u32 = 0x1 << PWR_PUCRC_PC14_Pos;
pub const PWR_PUCRC_PC14: u32 = PWR_PUCRC_PC14_Msk;
pub const PWR_PUCRC_PC13_Pos: u32 = 13;
pub const PWR_PUCRC_PC13_Msk: u32 = 0x1 << PWR_PUCRC_PC13_Pos;
pub const PWR_PUCRC_PC13: u32 = PWR_PUCRC_PC13_Msk;
pub const PWR_PUCRC_PC12_Pos: u32 = 12;
pub const PWR_PUCRC_PC12_Msk: u32 = 0x1 << PWR_PUCRC_PC12_Pos;
pub const PWR_PUCRC_PC12: u32 = PWR_PUCRC_PC12_Msk;
pub const PWR_PUCRC_PC11_Pos: u32 = 11;
pub const PWR_PUCRC_PC11_Msk: u32 = 0x1 << PWR_PUCRC_PC11_Pos;
pub const PWR_PUCRC_PC11: u32 = PWR_PUCRC_PC11_Msk;
pub const PWR_PUCRC_PC10_Pos: u32 = 10;
pub const PWR_PUCRC_PC10_Msk: u32 = 0x1 << PWR_PUCRC_PC10_Pos;
pub const PWR_PUCRC_PC10: u32 = PWR_PUCRC_PC10_Msk;
pub const PWR_PUCRC_PC9_Pos: u32 = 9;
pub const PWR_PUCRC_PC9_Msk: u32 = 0x1 << PWR_PUCRC_PC9_Pos;
pub const PWR_PUCRC_PC9: u32 = PWR_PUCRC_PC9_Msk;
pub const PWR_PUCRC_PC8_Pos: u32 = 8;
pub const PWR_PUCRC_PC8_Msk: u32 = 0x1 << PWR_PUCRC_PC8_Pos;
pub const PWR_PUCRC_PC8: u32 = PWR_PUCRC_PC8_Msk;
pub const PWR_PUCRC_PC7_Pos: u32 = 7;
pub const PWR_PUCRC_PC7_Msk: u32 = 0x1 << PWR_PUCRC_PC7_Pos;
pub const PWR_PUCRC_PC7: u32 = PWR_PUCRC_PC7_Msk;
pub const PWR_PUCRC_PC6_Pos: u32 = 6;
pub const PWR_PUCRC_PC6_Msk: u32 = 0x1 << PWR_PUCRC_PC6_Pos;
pub const PWR_PUCRC_PC6: u32 = PWR_PUCRC_PC6_Msk;
pub const PWR_PUCRC_PC5_Pos: u32 = 5;
pub const PWR_PUCRC_PC5_Msk: u32 = 0x1 << PWR_PUCRC_PC5_Pos;
pub const PWR_PUCRC_PC5: u32 = PWR_PUCRC_PC5_Msk;
pub const PWR_PUCRC_PC4_Pos: u32 = 4;
pub const PWR_PUCRC_PC4_Msk: u32 = 0x1 << PWR_PUCRC_PC4_Pos;
pub const PWR_PUCRC_PC4: u32 = PWR_PUCRC_PC4_Msk;
pub const PWR_PUCRC_PC3_Pos: u32 = 3;
pub const PWR_PUCRC_PC3_Msk: u32 = 0x1 << PWR_PUCRC_PC3_Pos;
pub const PWR_PUCRC_PC3: u32 = PWR_PUCRC_PC3_Msk;
pub const PWR_PUCRC_PC2_Pos: u32 = 2;
pub const PWR_PUCRC_PC2_Msk: u32 = 0x1 << PWR_PUCRC_PC2_Pos;
pub const PWR_PUCRC_PC2: u32 = PWR_PUCRC_PC2_Msk;
pub const PWR_PUCRC_PC1_Pos: u32 = 1;
pub const PWR_PUCRC_PC1_Msk: u32 = 0x1 << PWR_PUCRC_PC1_Pos;
pub const PWR_PUCRC_PC1: u32 = PWR_PUCRC_PC1_Msk;
pub const PWR_PUCRC_PC0_Pos: u32 = 0;
pub const PWR_PUCRC_PC0_Msk: u32 = 0x1 << PWR_PUCRC_PC0_Pos;
pub const PWR_PUCRC_PC0: u32 = PWR_PUCRC_PC0_Msk;
pub const PWR_PDCRC_PC15_Pos: u32 = 15;
pub const PWR_PDCRC_PC15_Msk: u32 = 0x1 << PWR_PDCRC_PC15_Pos;
pub const PWR_PDCRC_PC15: u32 = PWR_PDCRC_PC15_Msk;
pub const PWR_PDCRC_PC14_Pos: u32 = 14;
pub const PWR_PDCRC_PC14_Msk: u32 = 0x1 << PWR_PDCRC_PC14_Pos;
pub const PWR_PDCRC_PC14: u32 = PWR_PDCRC_PC14_Msk;
pub const PWR_PDCRC_PC13_Pos: u32 = 13;
pub const PWR_PDCRC_PC13_Msk: u32 = 0x1 << PWR_PDCRC_PC13_Pos;
pub const PWR_PDCRC_PC13: u32 = PWR_PDCRC_PC13_Msk;
pub const PWR_PDCRC_PC12_Pos: u32 = 12;
pub const PWR_PDCRC_PC12_Msk: u32 = 0x1 << PWR_PDCRC_PC12_Pos;
pub const PWR_PDCRC_PC12: u32 = PWR_PDCRC_PC12_Msk;
pub const PWR_PDCRC_PC11_Pos: u32 = 11;
pub const PWR_PDCRC_PC11_Msk: u32 = 0x1 << PWR_PDCRC_PC11_Pos;
pub const PWR_PDCRC_PC11: u32 = PWR_PDCRC_PC11_Msk;
pub const PWR_PDCRC_PC10_Pos: u32 = 10;
pub const PWR_PDCRC_PC10_Msk: u32 = 0x1 << PWR_PDCRC_PC10_Pos;
pub const PWR_PDCRC_PC10: u32 = PWR_PDCRC_PC10_Msk;
pub const PWR_PDCRC_PC9_Pos: u32 = 9;
pub const PWR_PDCRC_PC9_Msk: u32 = 0x1 << PWR_PDCRC_PC9_Pos;
pub const PWR_PDCRC_PC9: u32 = PWR_PDCRC_PC9_Msk;
pub const PWR_PDCRC_PC8_Pos: u32 = 8;
pub const PWR_PDCRC_PC8_Msk: u32 = 0x1 << PWR_PDCRC_PC8_Pos;
pub const PWR_PDCRC_PC8: u32 = PWR_PDCRC_PC8_Msk;
pub const PWR_PDCRC_PC7_Pos: u32 = 7;
pub const PWR_PDCRC_PC7_Msk: u32 = 0x1 << PWR_PDCRC_PC7_Pos;
pub const PWR_PDCRC_PC7: u32 = PWR_PDCRC_PC7_Msk;
pub const PWR_PDCRC_PC6_Pos: u32 = 6;
pub const PWR_PDCRC_PC6_Msk: u32 = 0x1 << PWR_PDCRC_PC6_Pos;
pub const PWR_PDCRC_PC6: u32 = PWR_PDCRC_PC6_Msk;
pub const PWR_PDCRC_PC5_Pos: u32 = 5;
pub const PWR_PDCRC_PC5_Msk: u32 = 0x1 << PWR_PDCRC_PC5_Pos;
pub const PWR_PDCRC_PC5: u32 = PWR_PDCRC_PC5_Msk;
pub const PWR_PDCRC_PC4_Pos: u32 = 4;
pub const PWR_PDCRC_PC4_Msk: u32 = 0x1 << PWR_PDCRC_PC4_Pos;
pub const PWR_PDCRC_PC4: u32 = PWR_PDCRC_PC4_Msk;
pub const PWR_PDCRC_PC3_Pos: u32 = 3;
pub const PWR_PDCRC_PC3_Msk: u32 = 0x1 << PWR_PDCRC_PC3_Pos;
pub const PWR_PDCRC_PC3: u32 = PWR_PDCRC_PC3_Msk;
pub const PWR_PDCRC_PC2_Pos: u32 = 2;
pub const PWR_PDCRC_PC2_Msk: u32 = 0x1 << PWR_PDCRC_PC2_Pos;
pub const PWR_PDCRC_PC2: u32 = PWR_PDCRC_PC2_Msk;
pub const PWR_PDCRC_PC1_Pos: u32 = 1;
pub const PWR_PDCRC_PC1_Msk: u32 = 0x1 << PWR_PDCRC_PC1_Pos;
pub const PWR_PDCRC_PC1: u32 = PWR_PDCRC_PC1_Msk;
pub const PWR_PDCRC_PC0_Pos: u32 = 0;
pub const PWR_PDCRC_PC0_Msk: u32 = 0x1 << PWR_PDCRC_PC0_Pos;
pub const PWR_PDCRC_PC0: u32 = PWR_PDCRC_PC0_Msk;
pub const PWR_PUCRD_PD15_Pos: u32 = 15;
pub const PWR_PUCRD_PD15_Msk: u32 = 0x1 << PWR_PUCRD_PD15_Pos;
pub const PWR_PUCRD_PD15: u32 = PWR_PUCRD_PD15_Msk;
pub const PWR_PUCRD_PD14_Pos: u32 = 14;
pub const PWR_PUCRD_PD14_Msk: u32 = 0x1 << PWR_PUCRD_PD14_Pos;
pub const PWR_PUCRD_PD14: u32 = PWR_PUCRD_PD14_Msk;
pub const PWR_PUCRD_PD13_Pos: u32 = 13;
pub const PWR_PUCRD_PD13_Msk: u32 = 0x1 << PWR_PUCRD_PD13_Pos;
pub const PWR_PUCRD_PD13: u32 = PWR_PUCRD_PD13_Msk;
pub const PWR_PUCRD_PD12_Pos: u32 = 12;
pub const PWR_PUCRD_PD12_Msk: u32 = 0x1 << PWR_PUCRD_PD12_Pos;
pub const PWR_PUCRD_PD12: u32 = PWR_PUCRD_PD12_Msk;
pub const PWR_PUCRD_PD11_Pos: u32 = 11;
pub const PWR_PUCRD_PD11_Msk: u32 = 0x1 << PWR_PUCRD_PD11_Pos;
pub const PWR_PUCRD_PD11: u32 = PWR_PUCRD_PD11_Msk;
pub const PWR_PUCRD_PD10_Pos: u32 = 10;
pub const PWR_PUCRD_PD10_Msk: u32 = 0x1 << PWR_PUCRD_PD10_Pos;
pub const PWR_PUCRD_PD10: u32 = PWR_PUCRD_PD10_Msk;
pub const PWR_PUCRD_PD9_Pos: u32 = 9;
pub const PWR_PUCRD_PD9_Msk: u32 = 0x1 << PWR_PUCRD_PD9_Pos;
pub const PWR_PUCRD_PD9: u32 = PWR_PUCRD_PD9_Msk;
pub const PWR_PUCRD_PD8_Pos: u32 = 8;
pub const PWR_PUCRD_PD8_Msk: u32 = 0x1 << PWR_PUCRD_PD8_Pos;
pub const PWR_PUCRD_PD8: u32 = PWR_PUCRD_PD8_Msk;
pub const PWR_PUCRD_PD7_Pos: u32 = 7;
pub const PWR_PUCRD_PD7_Msk: u32 = 0x1 << PWR_PUCRD_PD7_Pos;
pub const PWR_PUCRD_PD7: u32 = PWR_PUCRD_PD7_Msk;
pub const PWR_PUCRD_PD6_Pos: u32 = 6;
pub const PWR_PUCRD_PD6_Msk: u32 = 0x1 << PWR_PUCRD_PD6_Pos;
pub const PWR_PUCRD_PD6: u32 = PWR_PUCRD_PD6_Msk;
pub const PWR_PUCRD_PD5_Pos: u32 = 5;
pub const PWR_PUCRD_PD5_Msk: u32 = 0x1 << PWR_PUCRD_PD5_Pos;
pub const PWR_PUCRD_PD5: u32 = PWR_PUCRD_PD5_Msk;
pub const PWR_PUCRD_PD4_Pos: u32 = 4;
pub const PWR_PUCRD_PD4_Msk: u32 = 0x1 << PWR_PUCRD_PD4_Pos;
pub const PWR_PUCRD_PD4: u32 = PWR_PUCRD_PD4_Msk;
pub const PWR_PUCRD_PD3_Pos: u32 = 3;
pub const PWR_PUCRD_PD3_Msk: u32 = 0x1 << PWR_PUCRD_PD3_Pos;
pub const PWR_PUCRD_PD3: u32 = PWR_PUCRD_PD3_Msk;
pub const PWR_PUCRD_PD2_Pos: u32 = 2;
pub const PWR_PUCRD_PD2_Msk: u32 = 0x1 << PWR_PUCRD_PD2_Pos;
pub const PWR_PUCRD_PD2: u32 = PWR_PUCRD_PD2_Msk;
pub const PWR_PUCRD_PD1_Pos: u32 = 1;
pub const PWR_PUCRD_PD1_Msk: u32 = 0x1 << PWR_PUCRD_PD1_Pos;
pub const PWR_PUCRD_PD1: u32 = PWR_PUCRD_PD1_Msk;
pub const PWR_PUCRD_PD0_Pos: u32 = 0;
pub const PWR_PUCRD_PD0_Msk: u32 = 0x1 << PWR_PUCRD_PD0_Pos;
pub const PWR_PUCRD_PD0: u32 = PWR_PUCRD_PD0_Msk;
pub const PWR_PDCRD_PD15_Pos: u32 = 15;
pub const PWR_PDCRD_PD15_Msk: u32 = 0x1 << PWR_PDCRD_PD15_Pos;
pub const PWR_PDCRD_PD15: u32 = PWR_PDCRD_PD15_Msk;
pub const PWR_PDCRD_PD14_Pos: u32 = 14;
pub const PWR_PDCRD_PD14_Msk: u32 = 0x1 << PWR_PDCRD_PD14_Pos;
pub const PWR_PDCRD_PD14: u32 = PWR_PDCRD_PD14_Msk;
pub const PWR_PDCRD_PD13_Pos: u32 = 13;
pub const PWR_PDCRD_PD13_Msk: u32 = 0x1 << PWR_PDCRD_PD13_Pos;
pub const PWR_PDCRD_PD13: u32 = PWR_PDCRD_PD13_Msk;
pub const PWR_PDCRD_PD12_Pos: u32 = 12;
pub const PWR_PDCRD_PD12_Msk: u32 = 0x1 << PWR_PDCRD_PD12_Pos;
pub const PWR_PDCRD_PD12: u32 = PWR_PDCRD_PD12_Msk;
pub const PWR_PDCRD_PD11_Pos: u32 = 11;
pub const PWR_PDCRD_PD11_Msk: u32 = 0x1 << PWR_PDCRD_PD11_Pos;
pub const PWR_PDCRD_PD11: u32 = PWR_PDCRD_PD11_Msk;
pub const PWR_PDCRD_PD10_Pos: u32 = 10;
pub const PWR_PDCRD_PD10_Msk: u32 = 0x1 << PWR_PDCRD_PD10_Pos;
pub const PWR_PDCRD_PD10: u32 = PWR_PDCRD_PD10_Msk;
pub const PWR_PDCRD_PD9_Pos: u32 = 9;
pub const PWR_PDCRD_PD9_Msk: u32 = 0x1 << PWR_PDCRD_PD9_Pos;
pub const PWR_PDCRD_PD9: u32 = PWR_PDCRD_PD9_Msk;
pub const PWR_PDCRD_PD8_Pos: u32 = 8;
pub const PWR_PDCRD_PD8_Msk: u32 = 0x1 << PWR_PDCRD_PD8_Pos;
pub const PWR_PDCRD_PD8: u32 = PWR_PDCRD_PD8_Msk;
pub const PWR_PDCRD_PD7_Pos: u32 = 7;
pub const PWR_PDCRD_PD7_Msk: u32 = 0x1 << PWR_PDCRD_PD7_Pos;
pub const PWR_PDCRD_PD7: u32 = PWR_PDCRD_PD7_Msk;
pub const PWR_PDCRD_PD6_Pos: u32 = 6;
pub const PWR_PDCRD_PD6_Msk: u32 = 0x1 << PWR_PDCRD_PD6_Pos;
pub const PWR_PDCRD_PD6: u32 = PWR_PDCRD_PD6_Msk;
pub const PWR_PDCRD_PD5_Pos: u32 = 5;
pub const PWR_PDCRD_PD5_Msk: u32 = 0x1 << PWR_PDCRD_PD5_Pos;
pub const PWR_PDCRD_PD5: u32 = PWR_PDCRD_PD5_Msk;
pub const PWR_PDCRD_PD4_Pos: u32 = 4;
pub const PWR_PDCRD_PD4_Msk: u32 = 0x1 << PWR_PDCRD_PD4_Pos;
pub const PWR_PDCRD_PD4: u32 = PWR_PDCRD_PD4_Msk;
pub const PWR_PDCRD_PD3_Pos: u32 = 3;
pub const PWR_PDCRD_PD3_Msk: u32 = 0x1 << PWR_PDCRD_PD3_Pos;
pub const PWR_PDCRD_PD3: u32 = PWR_PDCRD_PD3_Msk;
pub const PWR_PDCRD_PD2_Pos: u32 = 2;
pub const PWR_PDCRD_PD2_Msk: u32 = 0x1 << PWR_PDCRD_PD2_Pos;
pub const PWR_PDCRD_PD2: u32 = PWR_PDCRD_PD2_Msk;
pub const PWR_PDCRD_PD1_Pos: u32 = 1;
pub const PWR_PDCRD_PD1_Msk: u32 = 0x1 << PWR_PDCRD_PD1_Pos;
pub const PWR_PDCRD_PD1: u32 = PWR_PDCRD_PD1_Msk;
pub const PWR_PDCRD_PD0_Pos: u32 = 0;
pub const PWR_PDCRD_PD0_Msk: u32 = 0x1 << PWR_PDCRD_PD0_Pos;
pub const PWR_PDCRD_PD0: u32 = PWR_PDCRD_PD0_Msk;
pub const PWR_PUCRE_PE15_Pos: u32 = 15;
pub const PWR_PUCRE_PE15_Msk: u32 = 0x1 << PWR_PUCRE_PE15_Pos;
pub const PWR_PUCRE_PE15: u32 = PWR_PUCRE_PE15_Msk;
pub const PWR_PUCRE_PE14_Pos: u32 = 14;
pub const PWR_PUCRE_PE14_Msk: u32 = 0x1 << PWR_PUCRE_PE14_Pos;
pub const PWR_PUCRE_PE14: u32 = PWR_PUCRE_PE14_Msk;
pub const PWR_PUCRE_PE13_Pos: u32 = 13;
pub const PWR_PUCRE_PE13_Msk: u32 = 0x1 << PWR_PUCRE_PE13_Pos;
pub const PWR_PUCRE_PE13: u32 = PWR_PUCRE_PE13_Msk;
pub const PWR_PUCRE_PE12_Pos: u32 = 12;
pub const PWR_PUCRE_PE12_Msk: u32 = 0x1 << PWR_PUCRE_PE12_Pos;
pub const PWR_PUCRE_PE12: u32 = PWR_PUCRE_PE12_Msk;
pub const PWR_PUCRE_PE11_Pos: u32 = 11;
pub const PWR_PUCRE_PE11_Msk: u32 = 0x1 << PWR_PUCRE_PE11_Pos;
pub const PWR_PUCRE_PE11: u32 = PWR_PUCRE_PE11_Msk;
pub const PWR_PUCRE_PE10_Pos: u32 = 10;
pub const PWR_PUCRE_PE10_Msk: u32 = 0x1 << PWR_PUCRE_PE10_Pos;
pub const PWR_PUCRE_PE10: u32 = PWR_PUCRE_PE10_Msk;
pub const PWR_PUCRE_PE9_Pos: u32 = 9;
pub const PWR_PUCRE_PE9_Msk: u32 = 0x1 << PWR_PUCRE_PE9_Pos;
pub const PWR_PUCRE_PE9: u32 = PWR_PUCRE_PE9_Msk;
pub const PWR_PUCRE_PE8_Pos: u32 = 8;
pub const PWR_PUCRE_PE8_Msk: u32 = 0x1 << PWR_PUCRE_PE8_Pos;
pub const PWR_PUCRE_PE8: u32 = PWR_PUCRE_PE8_Msk;
pub const PWR_PUCRE_PE7_Pos: u32 = 7;
pub const PWR_PUCRE_PE7_Msk: u32 = 0x1 << PWR_PUCRE_PE7_Pos;
pub const PWR_PUCRE_PE7: u32 = PWR_PUCRE_PE7_Msk;
pub const PWR_PUCRE_PE6_Pos: u32 = 6;
pub const PWR_PUCRE_PE6_Msk: u32 = 0x1 << PWR_PUCRE_PE6_Pos;
pub const PWR_PUCRE_PE6: u32 = PWR_PUCRE_PE6_Msk;
pub const PWR_PUCRE_PE5_Pos: u32 = 5;
pub const PWR_PUCRE_PE5_Msk: u32 = 0x1 << PWR_PUCRE_PE5_Pos;
pub const PWR_PUCRE_PE5: u32 = PWR_PUCRE_PE5_Msk;
pub const PWR_PUCRE_PE4_Pos: u32 = 4;
pub const PWR_PUCRE_PE4_Msk: u32 = 0x1 << PWR_PUCRE_PE4_Pos;
pub const PWR_PUCRE_PE4: u32 = PWR_PUCRE_PE4_Msk;
pub const PWR_PUCRE_PE3_Pos: u32 = 3;
pub const PWR_PUCRE_PE3_Msk: u32 = 0x1 << PWR_PUCRE_PE3_Pos;
pub const PWR_PUCRE_PE3: u32 = PWR_PUCRE_PE3_Msk;
pub const PWR_PUCRE_PE2_Pos: u32 = 2;
pub const PWR_PUCRE_PE2_Msk: u32 = 0x1 << PWR_PUCRE_PE2_Pos;
pub const PWR_PUCRE_PE2: u32 = PWR_PUCRE_PE2_Msk;
pub const PWR_PUCRE_PE1_Pos: u32 = 1;
pub const PWR_PUCRE_PE1_Msk: u32 = 0x1 << PWR_PUCRE_PE1_Pos;
pub const PWR_PUCRE_PE1: u32 = PWR_PUCRE_PE1_Msk;
pub const PWR_PUCRE_PE0_Pos: u32 = 0;
pub const PWR_PUCRE_PE0_Msk: u32 = 0x1 << PWR_PUCRE_PE0_Pos;
pub const PWR_PUCRE_PE0: u32 = PWR_PUCRE_PE0_Msk;
pub const PWR_PDCRE_PE15_Pos: u32 = 15;
pub const PWR_PDCRE_PE15_Msk: u32 = 0x1 << PWR_PDCRE_PE15_Pos;
pub const PWR_PDCRE_PE15: u32 = PWR_PDCRE_PE15_Msk;
pub const PWR_PDCRE_PE14_Pos: u32 = 14;
pub const PWR_PDCRE_PE14_Msk: u32 = 0x1 << PWR_PDCRE_PE14_Pos;
pub const PWR_PDCRE_PE14: u32 = PWR_PDCRE_PE14_Msk;
pub const PWR_PDCRE_PE13_Pos: u32 = 13;
pub const PWR_PDCRE_PE13_Msk: u32 = 0x1 << PWR_PDCRE_PE13_Pos;
pub const PWR_PDCRE_PE13: u32 = PWR_PDCRE_PE13_Msk;
pub const PWR_PDCRE_PE12_Pos: u32 = 12;
pub const PWR_PDCRE_PE12_Msk: u32 = 0x1 << PWR_PDCRE_PE12_Pos;
pub const PWR_PDCRE_PE12: u32 = PWR_PDCRE_PE12_Msk;
pub const PWR_PDCRE_PE11_Pos: u32 = 11;
pub const PWR_PDCRE_PE11_Msk: u32 = 0x1 << PWR_PDCRE_PE11_Pos;
pub const PWR_PDCRE_PE11: u32 = PWR_PDCRE_PE11_Msk;
pub const PWR_PDCRE_PE10_Pos: u32 = 10;
pub const PWR_PDCRE_PE10_Msk: u32 = 0x1 << PWR_PDCRE_PE10_Pos;
pub const PWR_PDCRE_PE10: u32 = PWR_PDCRE_PE10_Msk;
pub const PWR_PDCRE_PE9_Pos: u32 = 9;
pub const PWR_PDCRE_PE9_Msk: u32 = 0x1 << PWR_PDCRE_PE9_Pos;
pub const PWR_PDCRE_PE9: u32 = PWR_PDCRE_PE9_Msk;
pub const PWR_PDCRE_PE8_Pos: u32 = 8;
pub const PWR_PDCRE_PE8_Msk: u32 = 0x1 << PWR_PDCRE_PE8_Pos;
pub const PWR_PDCRE_PE8: u32 = PWR_PDCRE_PE8_Msk;
pub const PWR_PDCRE_PE7_Pos: u32 = 7;
pub const PWR_PDCRE_PE7_Msk: u32 = 0x1 << PWR_PDCRE_PE7_Pos;
pub const PWR_PDCRE_PE7: u32 = PWR_PDCRE_PE7_Msk;
pub const PWR_PDCRE_PE6_Pos: u32 = 6;
pub const PWR_PDCRE_PE6_Msk: u32 = 0x1 << PWR_PDCRE_PE6_Pos;
pub const PWR_PDCRE_PE6: u32 = PWR_PDCRE_PE6_Msk;
pub const PWR_PDCRE_PE5_Pos: u32 = 5;
pub const PWR_PDCRE_PE5_Msk: u32 = 0x1 << PWR_PDCRE_PE5_Pos;
pub const PWR_PDCRE_PE5: u32 = PWR_PDCRE_PE5_Msk;
pub const PWR_PDCRE_PE4_Pos: u32 = 4;
pub const PWR_PDCRE_PE4_Msk: u32 = 0x1 << PWR_PDCRE_PE4_Pos;
pub const PWR_PDCRE_PE4: u32 = PWR_PDCRE_PE4_Msk;
pub const PWR_PDCRE_PE3_Pos: u32 = 3;
pub const PWR_PDCRE_PE3_Msk: u32 = 0x1 << PWR_PDCRE_PE3_Pos;
pub const PWR_PDCRE_PE3: u32 = PWR_PDCRE_PE3_Msk;
pub const PWR_PDCRE_PE2_Pos: u32 = 2;
pub const PWR_PDCRE_PE2_Msk: u32 = 0x1 << PWR_PDCRE_PE2_Pos;
pub const PWR_PDCRE_PE2: u32 = PWR_PDCRE_PE2_Msk;
pub const PWR_PDCRE_PE1_Pos: u32 = 1;
pub const PWR_PDCRE_PE1_Msk: u32 = 0x1 << PWR_PDCRE_PE1_Pos;
pub const PWR_PDCRE_PE1: u32 = PWR_PDCRE_PE1_Msk;
pub const PWR_PDCRE_PE0_Pos: u32 = 0;
pub const PWR_PDCRE_PE0_Msk: u32 = 0x1 << PWR_PDCRE_PE0_Pos;
pub const PWR_PDCRE_PE0: u32 = PWR_PDCRE_PE0_Msk;
pub const PWR_PUCRF_PF15_Pos: u32 = 15;
pub const PWR_PUCRF_PF15_Msk: u32 = 0x1 << PWR_PUCRF_PF15_Pos;
pub const PWR_PUCRF_PF15: u32 = PWR_PUCRF_PF15_Msk;
pub const PWR_PUCRF_PF14_Pos: u32 = 14;
pub const PWR_PUCRF_PF14_Msk: u32 = 0x1 << PWR_PUCRF_PF14_Pos;
pub const PWR_PUCRF_PF14: u32 = PWR_PUCRF_PF14_Msk;
pub const PWR_PUCRF_PF13_Pos: u32 = 13;
pub const PWR_PUCRF_PF13_Msk: u32 = 0x1 << PWR_PUCRF_PF13_Pos;
pub const PWR_PUCRF_PF13: u32 = PWR_PUCRF_PF13_Msk;
pub const PWR_PUCRF_PF12_Pos: u32 = 12;
pub const PWR_PUCRF_PF12_Msk: u32 = 0x1 << PWR_PUCRF_PF12_Pos;
pub const PWR_PUCRF_PF12: u32 = PWR_PUCRF_PF12_Msk;
pub const PWR_PUCRF_PF11_Pos: u32 = 11;
pub const PWR_PUCRF_PF11_Msk: u32 = 0x1 << PWR_PUCRF_PF11_Pos;
pub const PWR_PUCRF_PF11: u32 = PWR_PUCRF_PF11_Msk;
pub const PWR_PUCRF_PF10_Pos: u32 = 10;
pub const PWR_PUCRF_PF10_Msk: u32 = 0x1 << PWR_PUCRF_PF10_Pos;
pub const PWR_PUCRF_PF10: u32 = PWR_PUCRF_PF10_Msk;
pub const PWR_PUCRF_PF9_Pos: u32 = 9;
pub const PWR_PUCRF_PF9_Msk: u32 = 0x1 << PWR_PUCRF_PF9_Pos;
pub const PWR_PUCRF_PF9: u32 = PWR_PUCRF_PF9_Msk;
pub const PWR_PUCRF_PF8_Pos: u32 = 8;
pub const PWR_PUCRF_PF8_Msk: u32 = 0x1 << PWR_PUCRF_PF8_Pos;
pub const PWR_PUCRF_PF8: u32 = PWR_PUCRF_PF8_Msk;
pub const PWR_PUCRF_PF7_Pos: u32 = 7;
pub const PWR_PUCRF_PF7_Msk: u32 = 0x1 << PWR_PUCRF_PF7_Pos;
pub const PWR_PUCRF_PF7: u32 = PWR_PUCRF_PF7_Msk;
pub const PWR_PUCRF_PF6_Pos: u32 = 6;
pub const PWR_PUCRF_PF6_Msk: u32 = 0x1 << PWR_PUCRF_PF6_Pos;
pub const PWR_PUCRF_PF6: u32 = PWR_PUCRF_PF6_Msk;
pub const PWR_PUCRF_PF5_Pos: u32 = 5;
pub const PWR_PUCRF_PF5_Msk: u32 = 0x1 << PWR_PUCRF_PF5_Pos;
pub const PWR_PUCRF_PF5: u32 = PWR_PUCRF_PF5_Msk;
pub const PWR_PUCRF_PF4_Pos: u32 = 4;
pub const PWR_PUCRF_PF4_Msk: u32 = 0x1 << PWR_PUCRF_PF4_Pos;
pub const PWR_PUCRF_PF4: u32 = PWR_PUCRF_PF4_Msk;
pub const PWR_PUCRF_PF3_Pos: u32 = 3;
pub const PWR_PUCRF_PF3_Msk: u32 = 0x1 << PWR_PUCRF_PF3_Pos;
pub const PWR_PUCRF_PF3: u32 = PWR_PUCRF_PF3_Msk;
pub const PWR_PUCRF_PF2_Pos: u32 = 2;
pub const PWR_PUCRF_PF2_Msk: u32 = 0x1 << PWR_PUCRF_PF2_Pos;
pub const PWR_PUCRF_PF2: u32 = PWR_PUCRF_PF2_Msk;
pub const PWR_PUCRF_PF1_Pos: u32 = 1;
pub const PWR_PUCRF_PF1_Msk: u32 = 0x1 << PWR_PUCRF_PF1_Pos;
pub const PWR_PUCRF_PF1: u32 = PWR_PUCRF_PF1_Msk;
pub const PWR_PUCRF_PF0_Pos: u32 = 0;
pub const PWR_PUCRF_PF0_Msk: u32 = 0x1 << PWR_PUCRF_PF0_Pos;
pub const PWR_PUCRF_PF0: u32 = PWR_PUCRF_PF0_Msk;
pub const PWR_PDCRF_PF10_Pos: u32 = 10;
pub const PWR_PDCRF_PF10_Msk: u32 = 0x1 << PWR_PDCRF_PF10_Pos;
pub const PWR_PDCRF_PF10: u32 = PWR_PDCRF_PF10_Msk;
pub const PWR_PDCRF_PF9_Pos: u32 = 9;
pub const PWR_PDCRF_PF9_Msk: u32 = 0x1 << PWR_PDCRF_PF9_Pos;
pub const PWR_PDCRF_PF9: u32 = PWR_PDCRF_PF9_Msk;
pub const PWR_PDCRF_PF2_Pos: u32 = 2;
pub const PWR_PDCRF_PF2_Msk: u32 = 0x1 << PWR_PDCRF_PF2_Pos;
pub const PWR_PDCRF_PF2: u32 = PWR_PDCRF_PF2_Msk;
pub const PWR_PDCRF_PF1_Pos: u32 = 1;
pub const PWR_PDCRF_PF1_Msk: u32 = 0x1 << PWR_PDCRF_PF1_Pos;
pub const PWR_PDCRF_PF1: u32 = PWR_PDCRF_PF1_Msk;
pub const PWR_PDCRF_PF0_Pos: u32 = 0;
pub const PWR_PDCRF_PF0_Msk: u32 = 0x1 << PWR_PDCRF_PF0_Pos;
pub const PWR_PDCRF_PF0: u32 = PWR_PDCRF_PF0_Msk;
pub const PWR_PUCRG_PG10_Pos: u32 = 10;
pub const PWR_PUCRG_PG10_Msk: u32 = 0x1 << PWR_PUCRG_PG10_Pos;
pub const PWR_PUCRG_PG10: u32 = PWR_PUCRG_PG10_Msk;
pub const PWR_PDCRG_PG10_Pos: u32 = 10;
pub const PWR_PDCRG_PG10_Msk: u32 = 0x1 << PWR_PDCRG_PG10_Pos;
pub const PWR_PDCRG_PG10: u32 = PWR_PDCRG_PG10_Msk;
pub const PWR_PDCRG_PG9_Pos: u32 = 9;
pub const PWR_PDCRG_PG9_Msk: u32 = 0x1 << PWR_PDCRG_PG9_Pos;
pub const PWR_PDCRG_PG9: u32 = PWR_PDCRG_PG9_Msk;
pub const PWR_PDCRG_PG8_Pos: u32 = 8;
pub const PWR_PDCRG_PG8_Msk: u32 = 0x1 << PWR_PDCRG_PG8_Pos;
pub const PWR_PDCRG_PG8: u32 = PWR_PDCRG_PG8_Msk;
pub const PWR_PDCRG_PG7_Pos: u32 = 7;
pub const PWR_PDCRG_PG7_Msk: u32 = 0x1 << PWR_PDCRG_PG7_Pos;
pub const PWR_PDCRG_PG7: u32 = PWR_PDCRG_PG7_Msk;
pub const PWR_PDCRG_PG6_Pos: u32 = 6;
pub const PWR_PDCRG_PG6_Msk: u32 = 0x1 << PWR_PDCRG_PG6_Pos;
pub const PWR_PDCRG_PG6: u32 = PWR_PDCRG_PG6_Msk;
pub const PWR_PDCRG_PG5_Pos: u32 = 5;
pub const PWR_PDCRG_PG5_Msk: u32 = 0x1 << PWR_PDCRG_PG5_Pos;
pub const PWR_PDCRG_PG5: u32 = PWR_PDCRG_PG5_Msk;
pub const PWR_PDCRG_PG4_Pos: u32 = 4;
pub const PWR_PDCRG_PG4_Msk: u32 = 0x1 << PWR_PDCRG_PG4_Pos;
pub const PWR_PDCRG_PG4: u32 = PWR_PDCRG_PG4_Msk;
pub const PWR_PDCRG_PG3_Pos: u32 = 3;
pub const PWR_PDCRG_PG3_Msk: u32 = 0x1 << PWR_PDCRG_PG3_Pos;
pub const PWR_PDCRG_PG3: u32 = PWR_PDCRG_PG3_Msk;
pub const PWR_PDCRG_PG2_Pos: u32 = 2;
pub const PWR_PDCRG_PG2_Msk: u32 = 0x1 << PWR_PDCRG_PG2_Pos;
pub const PWR_PDCRG_PG2: u32 = PWR_PDCRG_PG2_Msk;
pub const PWR_PDCRG_PG1_Pos: u32 = 1;
pub const PWR_PDCRG_PG1_Msk: u32 = 0x1 << PWR_PDCRG_PG1_Pos;
pub const PWR_PDCRG_PG1: u32 = PWR_PDCRG_PG1_Msk;
pub const PWR_PDCRG_PG0_Pos: u32 = 0;
pub const PWR_PDCRG_PG0_Msk: u32 = 0x1 << PWR_PDCRG_PG0_Pos;
pub const PWR_PDCRG_PG0: u32 = PWR_PDCRG_PG0_Msk;
pub const PWR_CR5_R1MODE_Pos: u32 = 8;
pub const PWR_CR5_R1MODE_Msk: u32 = 0x1 << PWR_CR5_R1MODE_Pos;
pub const PWR_CR5_R1MODE: u32 = PWR_CR5_R1MODE_Msk;
pub const QUADSPI_CR_EN_Pos: u32 = 0;
pub const QUADSPI_CR_EN_Msk: u32 = 0x1 << QUADSPI_CR_EN_Pos;
pub const QUADSPI_CR_EN: u32 = QUADSPI_CR_EN_Msk;
pub const QUADSPI_CR_ABORT_Pos: u32 = 1;
pub const QUADSPI_CR_ABORT_Msk: u32 = 0x1 << QUADSPI_CR_ABORT_Pos;
pub const QUADSPI_CR_ABORT: u32 = QUADSPI_CR_ABORT_Msk;
pub const QUADSPI_CR_DMAEN_Pos: u32 = 2;
pub const QUADSPI_CR_DMAEN_Msk: u32 = 0x1 << QUADSPI_CR_DMAEN_Pos;
pub const QUADSPI_CR_DMAEN: u32 = QUADSPI_CR_DMAEN_Msk;
pub const QUADSPI_CR_TCEN_Pos: u32 = 3;
pub const QUADSPI_CR_TCEN_Msk: u32 = 0x1 << QUADSPI_CR_TCEN_Pos;
pub const QUADSPI_CR_TCEN: u32 = QUADSPI_CR_TCEN_Msk;
pub const QUADSPI_CR_SSHIFT_Pos: u32 = 4;
pub const QUADSPI_CR_SSHIFT_Msk: u32 = 0x1 << QUADSPI_CR_SSHIFT_Pos;
pub const QUADSPI_CR_SSHIFT: u32 = QUADSPI_CR_SSHIFT_Msk;
pub const QUADSPI_CR_DFM_Pos: u32 = 6;
pub const QUADSPI_CR_DFM_Msk: u32 = 0x1 << QUADSPI_CR_DFM_Pos;
pub const QUADSPI_CR_DFM: u32 = QUADSPI_CR_DFM_Msk;
pub const QUADSPI_CR_FSEL_Pos: u32 = 7;
pub const QUADSPI_CR_FSEL_Msk: u32 = 0x1 << QUADSPI_CR_FSEL_Pos;
pub const QUADSPI_CR_FSEL: u32 = QUADSPI_CR_FSEL_Msk;
pub const QUADSPI_CR_FTHRES_Pos: u32 = 8;
pub const QUADSPI_CR_FTHRES_Msk: u32 = 0xF << QUADSPI_CR_FTHRES_Pos;
pub const QUADSPI_CR_FTHRES: u32 = QUADSPI_CR_FTHRES_Msk;
pub const QUADSPI_CR_TEIE_Pos: u32 = 16;
pub const QUADSPI_CR_TEIE_Msk: u32 = 0x1 << QUADSPI_CR_TEIE_Pos;
pub const QUADSPI_CR_TEIE: u32 = QUADSPI_CR_TEIE_Msk;
pub const QUADSPI_CR_TCIE_Pos: u32 = 17;
pub const QUADSPI_CR_TCIE_Msk: u32 = 0x1 << QUADSPI_CR_TCIE_Pos;
pub const QUADSPI_CR_TCIE: u32 = QUADSPI_CR_TCIE_Msk;
pub const QUADSPI_CR_FTIE_Pos: u32 = 18;
pub const QUADSPI_CR_FTIE_Msk: u32 = 0x1 << QUADSPI_CR_FTIE_Pos;
pub const QUADSPI_CR_FTIE: u32 = QUADSPI_CR_FTIE_Msk;
pub const QUADSPI_CR_SMIE_Pos: u32 = 19;
pub const QUADSPI_CR_SMIE_Msk: u32 = 0x1 << QUADSPI_CR_SMIE_Pos;
pub const QUADSPI_CR_SMIE: u32 = QUADSPI_CR_SMIE_Msk;
pub const QUADSPI_CR_TOIE_Pos: u32 = 20;
pub const QUADSPI_CR_TOIE_Msk: u32 = 0x1 << QUADSPI_CR_TOIE_Pos;
pub const QUADSPI_CR_TOIE: u32 = QUADSPI_CR_TOIE_Msk;
pub const QUADSPI_CR_APMS_Pos: u32 = 22;
pub const QUADSPI_CR_APMS_Msk: u32 = 0x1 << QUADSPI_CR_APMS_Pos;
pub const QUADSPI_CR_APMS: u32 = QUADSPI_CR_APMS_Msk;
pub const QUADSPI_CR_PMM_Pos: u32 = 23;
pub const QUADSPI_CR_PMM_Msk: u32 = 0x1 << QUADSPI_CR_PMM_Pos;
pub const QUADSPI_CR_PMM: u32 = QUADSPI_CR_PMM_Msk;
pub const QUADSPI_CR_PRESCALER_Pos: u32 = 24;
pub const QUADSPI_CR_PRESCALER_Msk: u32 = 0xFF << QUADSPI_CR_PRESCALER_Pos;
pub const QUADSPI_CR_PRESCALER: u32 = QUADSPI_CR_PRESCALER_Msk;
pub const QUADSPI_DCR_CKMODE_Pos: u32 = 0;
pub const QUADSPI_DCR_CKMODE_Msk: u32 = 0x1 << QUADSPI_DCR_CKMODE_Pos;
pub const QUADSPI_DCR_CKMODE: u32 = QUADSPI_DCR_CKMODE_Msk;
pub const QUADSPI_DCR_CSHT_Pos: u32 = 8;
pub const QUADSPI_DCR_CSHT_Msk: u32 = 0x7 << QUADSPI_DCR_CSHT_Pos;
pub const QUADSPI_DCR_CSHT: u32 = QUADSPI_DCR_CSHT_Msk;
pub const QUADSPI_DCR_CSHT_0: u32 = 0x1 << QUADSPI_DCR_CSHT_Pos;
pub const QUADSPI_DCR_CSHT_1: u32 = 0x2 << QUADSPI_DCR_CSHT_Pos;
pub const QUADSPI_DCR_CSHT_2: u32 = 0x4 << QUADSPI_DCR_CSHT_Pos;
pub const QUADSPI_DCR_FSIZE_Pos: u32 = 16;
pub const QUADSPI_DCR_FSIZE_Msk: u32 = 0x1F << QUADSPI_DCR_FSIZE_Pos;
pub const QUADSPI_DCR_FSIZE: u32 = QUADSPI_DCR_FSIZE_Msk;
pub const QUADSPI_SR_TEF_Pos: u32 = 0;
pub const QUADSPI_SR_TEF_Msk: u32 = 0x1 << QUADSPI_SR_TEF_Pos;
pub const QUADSPI_SR_TEF: u32 = QUADSPI_SR_TEF_Msk;
pub const QUADSPI_SR_TCF_Pos: u32 = 1;
pub const QUADSPI_SR_TCF_Msk: u32 = 0x1 << QUADSPI_SR_TCF_Pos;
pub const QUADSPI_SR_TCF: u32 = QUADSPI_SR_TCF_Msk;
pub const QUADSPI_SR_FTF_Pos: u32 = 2;
pub const QUADSPI_SR_FTF_Msk: u32 = 0x1 << QUADSPI_SR_FTF_Pos;
pub const QUADSPI_SR_FTF: u32 = QUADSPI_SR_FTF_Msk;
pub const QUADSPI_SR_SMF_Pos: u32 = 3;
pub const QUADSPI_SR_SMF_Msk: u32 = 0x1 << QUADSPI_SR_SMF_Pos;
pub const QUADSPI_SR_SMF: u32 = QUADSPI_SR_SMF_Msk;
pub const QUADSPI_SR_TOF_Pos: u32 = 4;
pub const QUADSPI_SR_TOF_Msk: u32 = 0x1 << QUADSPI_SR_TOF_Pos;
pub const QUADSPI_SR_TOF: u32 = QUADSPI_SR_TOF_Msk;
pub const QUADSPI_SR_BUSY_Pos: u32 = 5;
pub const QUADSPI_SR_BUSY_Msk: u32 = 0x1 << QUADSPI_SR_BUSY_Pos;
pub const QUADSPI_SR_BUSY: u32 = QUADSPI_SR_BUSY_Msk;
pub const QUADSPI_SR_FLEVEL_Pos: u32 = 8;
pub const QUADSPI_SR_FLEVEL_Msk: u32 = 0x1F << QUADSPI_SR_FLEVEL_Pos;
pub const QUADSPI_SR_FLEVEL: u32 = QUADSPI_SR_FLEVEL_Msk;
pub const QUADSPI_FCR_CTEF_Pos: u32 = 0;
pub const QUADSPI_FCR_CTEF_Msk: u32 = 0x1 << QUADSPI_FCR_CTEF_Pos;
pub const QUADSPI_FCR_CTEF: u32 = QUADSPI_FCR_CTEF_Msk;
pub const QUADSPI_FCR_CTCF_Pos: u32 = 1;
pub const QUADSPI_FCR_CTCF_Msk: u32 = 0x1 << QUADSPI_FCR_CTCF_Pos;
pub const QUADSPI_FCR_CTCF: u32 = QUADSPI_FCR_CTCF_Msk;
pub const QUADSPI_FCR_CSMF_Pos: u32 = 3;
pub const QUADSPI_FCR_CSMF_Msk: u32 = 0x1 << QUADSPI_FCR_CSMF_Pos;
pub const QUADSPI_FCR_CSMF: u32 = QUADSPI_FCR_CSMF_Msk;
pub const QUADSPI_FCR_CTOF_Pos: u32 = 4;
pub const QUADSPI_FCR_CTOF_Msk: u32 = 0x1 << QUADSPI_FCR_CTOF_Pos;
pub const QUADSPI_FCR_CTOF: u32 = QUADSPI_FCR_CTOF_Msk;
pub const QUADSPI_DLR_DL_Pos: u32 = 0;
pub const QUADSPI_DLR_DL_Msk: u32 = 0xFFFFFFFF << QUADSPI_DLR_DL_Pos;
pub const QUADSPI_DLR_DL: u32 = QUADSPI_DLR_DL_Msk;
pub const QUADSPI_CCR_INSTRUCTION_Pos: u32 = 0;
pub const QUADSPI_CCR_INSTRUCTION_Msk: u32 = 0xFF << QUADSPI_CCR_INSTRUCTION_Pos;
pub const QUADSPI_CCR_INSTRUCTION: u32 = QUADSPI_CCR_INSTRUCTION_Msk;
pub const QUADSPI_CCR_IMODE_Pos: u32 = 8;
pub const QUADSPI_CCR_IMODE_Msk: u32 = 0x3 << QUADSPI_CCR_IMODE_Pos;
pub const QUADSPI_CCR_IMODE: u32 = QUADSPI_CCR_IMODE_Msk;
pub const QUADSPI_CCR_IMODE_0: u32 = 0x1 << QUADSPI_CCR_IMODE_Pos;
pub const QUADSPI_CCR_IMODE_1: u32 = 0x2 << QUADSPI_CCR_IMODE_Pos;
pub const QUADSPI_CCR_ADMODE_Pos: u32 = 10;
pub const QUADSPI_CCR_ADMODE_Msk: u32 = 0x3 << QUADSPI_CCR_ADMODE_Pos;
pub const QUADSPI_CCR_ADMODE: u32 = QUADSPI_CCR_ADMODE_Msk;
pub const QUADSPI_CCR_ADMODE_0: u32 = 0x1 << QUADSPI_CCR_ADMODE_Pos;
pub const QUADSPI_CCR_ADMODE_1: u32 = 0x2 << QUADSPI_CCR_ADMODE_Pos;
pub const QUADSPI_CCR_ADSIZE_Pos: u32 = 12;
pub const QUADSPI_CCR_ADSIZE_Msk: u32 = 0x3 << QUADSPI_CCR_ADSIZE_Pos;
pub const QUADSPI_CCR_ADSIZE: u32 = QUADSPI_CCR_ADSIZE_Msk;
pub const QUADSPI_CCR_ADSIZE_0: u32 = 0x1 << QUADSPI_CCR_ADSIZE_Pos;
pub const QUADSPI_CCR_ADSIZE_1: u32 = 0x2 << QUADSPI_CCR_ADSIZE_Pos;
pub const QUADSPI_CCR_ABMODE_Pos: u32 = 14;
pub const QUADSPI_CCR_ABMODE_Msk: u32 = 0x3 << QUADSPI_CCR_ABMODE_Pos;
pub const QUADSPI_CCR_ABMODE: u32 = QUADSPI_CCR_ABMODE_Msk;
pub const QUADSPI_CCR_ABMODE_0: u32 = 0x1 << QUADSPI_CCR_ABMODE_Pos;
pub const QUADSPI_CCR_ABMODE_1: u32 = 0x2 << QUADSPI_CCR_ABMODE_Pos;
pub const QUADSPI_CCR_ABSIZE_Pos: u32 = 16;
pub const QUADSPI_CCR_ABSIZE_Msk: u32 = 0x3 << QUADSPI_CCR_ABSIZE_Pos;
pub const QUADSPI_CCR_ABSIZE: u32 = QUADSPI_CCR_ABSIZE_Msk;
pub const QUADSPI_CCR_ABSIZE_0: u32 = 0x1 << QUADSPI_CCR_ABSIZE_Pos;
pub const QUADSPI_CCR_ABSIZE_1: u32 = 0x2 << QUADSPI_CCR_ABSIZE_Pos;
pub const QUADSPI_CCR_DCYC_Pos: u32 = 18;
pub const QUADSPI_CCR_DCYC_Msk: u32 = 0x1F << QUADSPI_CCR_DCYC_Pos;
pub const QUADSPI_CCR_DCYC: u32 = QUADSPI_CCR_DCYC_Msk;
pub const QUADSPI_CCR_DMODE_Pos: u32 = 24;
pub const QUADSPI_CCR_DMODE_Msk: u32 = 0x3 << QUADSPI_CCR_DMODE_Pos;
pub const QUADSPI_CCR_DMODE: u32 = QUADSPI_CCR_DMODE_Msk;
pub const QUADSPI_CCR_DMODE_0: u32 = 0x1 << QUADSPI_CCR_DMODE_Pos;
pub const QUADSPI_CCR_DMODE_1: u32 = 0x2 << QUADSPI_CCR_DMODE_Pos;
pub const QUADSPI_CCR_FMODE_Pos: u32 = 26;
pub const QUADSPI_CCR_FMODE_Msk: u32 = 0x3 << QUADSPI_CCR_FMODE_Pos;
pub const QUADSPI_CCR_FMODE: u32 = QUADSPI_CCR_FMODE_Msk;
pub const QUADSPI_CCR_FMODE_0: u32 = 0x1 << QUADSPI_CCR_FMODE_Pos;
pub const QUADSPI_CCR_FMODE_1: u32 = 0x2 << QUADSPI_CCR_FMODE_Pos;
pub const QUADSPI_CCR_SIOO_Pos: u32 = 28;
pub const QUADSPI_CCR_SIOO_Msk: u32 = 0x1 << QUADSPI_CCR_SIOO_Pos;
pub const QUADSPI_CCR_SIOO: u32 = QUADSPI_CCR_SIOO_Msk;
pub const QUADSPI_CCR_DHHC_Pos: u32 = 30;
pub const QUADSPI_CCR_DHHC_Msk: u32 = 0x1 << QUADSPI_CCR_DHHC_Pos;
pub const QUADSPI_CCR_DHHC: u32 = QUADSPI_CCR_DHHC_Msk;
pub const QUADSPI_CCR_DDRM_Pos: u32 = 31;
pub const QUADSPI_CCR_DDRM_Msk: u32 = 0x1 << QUADSPI_CCR_DDRM_Pos;
pub const QUADSPI_CCR_DDRM: u32 = QUADSPI_CCR_DDRM_Msk;
pub const QUADSPI_AR_ADDRESS_Pos: u32 = 0;
pub const QUADSPI_AR_ADDRESS_Msk: u32 = 0xFFFFFFFF << QUADSPI_AR_ADDRESS_Pos;
pub const QUADSPI_AR_ADDRESS: u32 = QUADSPI_AR_ADDRESS_Msk;
pub const QUADSPI_ABR_ALTERNATE_Pos: u32 = 0;
pub const QUADSPI_ABR_ALTERNATE_Msk: u32 = 0xFFFFFFFF << QUADSPI_ABR_ALTERNATE_Pos;
pub const QUADSPI_ABR_ALTERNATE: u32 = QUADSPI_ABR_ALTERNATE_Msk;
pub const QUADSPI_DR_DATA_Pos: u32 = 0;
pub const QUADSPI_DR_DATA_Msk: u32 = 0xFFFFFFFF << QUADSPI_DR_DATA_Pos;
pub const QUADSPI_DR_DATA: u32 = QUADSPI_DR_DATA_Msk;
pub const QUADSPI_PSMKR_MASK_Pos: u32 = 0;
pub const QUADSPI_PSMKR_MASK_Msk: u32 = 0xFFFFFFFF << QUADSPI_PSMKR_MASK_Pos;
pub const QUADSPI_PSMKR_MASK: u32 = QUADSPI_PSMKR_MASK_Msk;
pub const QUADSPI_PSMAR_MATCH_Pos: u32 = 0;
pub const QUADSPI_PSMAR_MATCH_Msk: u32 = 0xFFFFFFFF << QUADSPI_PSMAR_MATCH_Pos;
pub const QUADSPI_PSMAR_MATCH: u32 = QUADSPI_PSMAR_MATCH_Msk;
pub const QUADSPI_PIR_INTERVAL_Pos: u32 = 0;
pub const QUADSPI_PIR_INTERVAL_Msk: u32 = 0xFFFF << QUADSPI_PIR_INTERVAL_Pos;
pub const QUADSPI_PIR_INTERVAL: u32 = QUADSPI_PIR_INTERVAL_Msk;
pub const QUADSPI_LPTR_TIMEOUT_Pos: u32 = 0;
pub const QUADSPI_LPTR_TIMEOUT_Msk: u32 = 0xFFFF << QUADSPI_LPTR_TIMEOUT_Pos;
pub const QUADSPI_LPTR_TIMEOUT: u32 = QUADSPI_LPTR_TIMEOUT_Msk;
pub const RCC_CR_HSION_Pos: u32 = 8;
pub const RCC_CR_HSION_Msk: u32 = 0x1 << RCC_CR_HSION_Pos;
pub const RCC_CR_HSION: u32 = RCC_CR_HSION_Msk;
pub const RCC_CR_HSIKERON_Pos: u32 = 9;
pub const RCC_CR_HSIKERON_Msk: u32 = 0x1 << RCC_CR_HSIKERON_Pos;
pub const RCC_CR_HSIKERON: u32 = RCC_CR_HSIKERON_Msk;
pub const RCC_CR_HSIRDY_Pos: u32 = 10;
pub const RCC_CR_HSIRDY_Msk: u32 = 0x1 << RCC_CR_HSIRDY_Pos;
pub const RCC_CR_HSIRDY: u32 = RCC_CR_HSIRDY_Msk;
pub const RCC_CR_HSEON_Pos: u32 = 16;
pub const RCC_CR_HSEON_Msk: u32 = 0x1 << RCC_CR_HSEON_Pos;
pub const RCC_CR_HSEON: u32 = RCC_CR_HSEON_Msk;
pub const RCC_CR_HSERDY_Pos: u32 = 17;
pub const RCC_CR_HSERDY_Msk: u32 = 0x1 << RCC_CR_HSERDY_Pos;
pub const RCC_CR_HSERDY: u32 = RCC_CR_HSERDY_Msk;
pub const RCC_CR_HSEBYP_Pos: u32 = 18;
pub const RCC_CR_HSEBYP_Msk: u32 = 0x1 << RCC_CR_HSEBYP_Pos;
pub const RCC_CR_HSEBYP: u32 = RCC_CR_HSEBYP_Msk;
pub const RCC_CR_CSSON_Pos: u32 = 19;
pub const RCC_CR_CSSON_Msk: u32 = 0x1 << RCC_CR_CSSON_Pos;
pub const RCC_CR_CSSON: u32 = RCC_CR_CSSON_Msk;
pub const RCC_CR_PLLON_Pos: u32 = 24;
pub const RCC_CR_PLLON_Msk: u32 = 0x1 << RCC_CR_PLLON_Pos;
pub const RCC_CR_PLLON: u32 = RCC_CR_PLLON_Msk;
pub const RCC_CR_PLLRDY_Pos: u32 = 25;
pub const RCC_CR_PLLRDY_Msk: u32 = 0x1 << RCC_CR_PLLRDY_Pos;
pub const RCC_CR_PLLRDY: u32 = RCC_CR_PLLRDY_Msk;
pub const RCC_ICSCR_HSICAL_Pos: u32 = 16;
pub const RCC_ICSCR_HSICAL_Msk: u32 = 0xFF << RCC_ICSCR_HSICAL_Pos;
pub const RCC_ICSCR_HSICAL: u32 = RCC_ICSCR_HSICAL_Msk;
pub const RCC_ICSCR_HSICAL_0: u32 = 0x01 << RCC_ICSCR_HSICAL_Pos;
pub const RCC_ICSCR_HSICAL_1: u32 = 0x02 << RCC_ICSCR_HSICAL_Pos;
pub const RCC_ICSCR_HSICAL_2: u32 = 0x04 << RCC_ICSCR_HSICAL_Pos;
pub const RCC_ICSCR_HSICAL_3: u32 = 0x08 << RCC_ICSCR_HSICAL_Pos;
pub const RCC_ICSCR_HSICAL_4: u32 = 0x10 << RCC_ICSCR_HSICAL_Pos;
pub const RCC_ICSCR_HSICAL_5: u32 = 0x20 << RCC_ICSCR_HSICAL_Pos;
pub const RCC_ICSCR_HSICAL_6: u32 = 0x40 << RCC_ICSCR_HSICAL_Pos;
pub const RCC_ICSCR_HSICAL_7: u32 = 0x80 << RCC_ICSCR_HSICAL_Pos;
pub const RCC_ICSCR_HSITRIM_Pos: u32 = 24;
pub const RCC_ICSCR_HSITRIM_Msk: u32 = 0x7F << RCC_ICSCR_HSITRIM_Pos;
pub const RCC_ICSCR_HSITRIM: u32 = RCC_ICSCR_HSITRIM_Msk;
pub const RCC_ICSCR_HSITRIM_0: u32 = 0x01 << RCC_ICSCR_HSITRIM_Pos;
pub const RCC_ICSCR_HSITRIM_1: u32 = 0x02 << RCC_ICSCR_HSITRIM_Pos;
pub const RCC_ICSCR_HSITRIM_2: u32 = 0x04 << RCC_ICSCR_HSITRIM_Pos;
pub const RCC_ICSCR_HSITRIM_3: u32 = 0x08 << RCC_ICSCR_HSITRIM_Pos;
pub const RCC_ICSCR_HSITRIM_4: u32 = 0x10 << RCC_ICSCR_HSITRIM_Pos;
pub const RCC_ICSCR_HSITRIM_5: u32 = 0x20 << RCC_ICSCR_HSITRIM_Pos;
pub const RCC_ICSCR_HSITRIM_6: u32 = 0x40 << RCC_ICSCR_HSITRIM_Pos;
pub const RCC_CFGR_SW_Pos: u32 = 0;
pub const RCC_CFGR_SW_Msk: u32 = 0x3 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SW: u32 = RCC_CFGR_SW_Msk;
pub const RCC_CFGR_SW_0: u32 = 0x1 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SW_1: u32 = 0x2 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SW_HSI: u32 = 0x00000001;
pub const RCC_CFGR_SW_HSE: u32 = 0x00000002;
pub const RCC_CFGR_SW_PLL: u32 = 0x00000003;
pub const RCC_CFGR_SWS_Pos: u32 = 2;
pub const RCC_CFGR_SWS_Msk: u32 = 0x3 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_SWS: u32 = RCC_CFGR_SWS_Msk;
pub const RCC_CFGR_SWS_0: u32 = 0x1 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_SWS_1: u32 = 0x2 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_SWS_HSI: u32 = 0x00000004;
pub const RCC_CFGR_SWS_HSE: u32 = 0x00000008;
pub const RCC_CFGR_SWS_PLL: u32 = 0x0000000C;
pub const RCC_CFGR_HPRE_Pos: u32 = 4;
pub const RCC_CFGR_HPRE_Msk: u32 = 0xF << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE: u32 = RCC_CFGR_HPRE_Msk;
pub const RCC_CFGR_HPRE_0: u32 = 0x1 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_1: u32 = 0x2 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_2: u32 = 0x4 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_3: u32 = 0x8 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_DIV1: u32 = 0x00000000;
pub const RCC_CFGR_HPRE_DIV2: u32 = 0x00000080;
pub const RCC_CFGR_HPRE_DIV4: u32 = 0x00000090;
pub const RCC_CFGR_HPRE_DIV8: u32 = 0x000000A0;
pub const RCC_CFGR_HPRE_DIV16: u32 = 0x000000B0;
pub const RCC_CFGR_HPRE_DIV64: u32 = 0x000000C0;
pub const RCC_CFGR_HPRE_DIV128: u32 = 0x000000D0;
pub const RCC_CFGR_HPRE_DIV256: u32 = 0x000000E0;
pub const RCC_CFGR_HPRE_DIV512: u32 = 0x000000F0;
pub const RCC_CFGR_PPRE1_Pos: u32 = 8;
pub const RCC_CFGR_PPRE1_Msk: u32 = 0x7 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1: u32 = RCC_CFGR_PPRE1_Msk;
pub const RCC_CFGR_PPRE1_0: u32 = 0x1 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1_1: u32 = 0x2 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1_2: u32 = 0x4 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1_DIV1: u32 = 0x00000000;
pub const RCC_CFGR_PPRE1_DIV2: u32 = 0x00000400;
pub const RCC_CFGR_PPRE1_DIV4: u32 = 0x00000500;
pub const RCC_CFGR_PPRE1_DIV8: u32 = 0x00000600;
pub const RCC_CFGR_PPRE1_DIV16: u32 = 0x00000700;
pub const RCC_CFGR_PPRE2_Pos: u32 = 11;
pub const RCC_CFGR_PPRE2_Msk: u32 = 0x7 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2: u32 = RCC_CFGR_PPRE2_Msk;
pub const RCC_CFGR_PPRE2_0: u32 = 0x1 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2_1: u32 = 0x2 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2_2: u32 = 0x4 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2_DIV1: u32 = 0x00000000;
pub const RCC_CFGR_PPRE2_DIV2: u32 = 0x00002000;
pub const RCC_CFGR_PPRE2_DIV4: u32 = 0x00002800;
pub const RCC_CFGR_PPRE2_DIV8: u32 = 0x00003000;
pub const RCC_CFGR_PPRE2_DIV16: u32 = 0x00003800;
pub const RCC_CFGR_MCOSEL_Pos: u32 = 24;
pub const RCC_CFGR_MCOSEL_Msk: u32 = 0xF << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOSEL: u32 = RCC_CFGR_MCOSEL_Msk;
pub const RCC_CFGR_MCOSEL_0: u32 = 0x1 << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOSEL_1: u32 = 0x2 << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOSEL_2: u32 = 0x4 << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOSEL_3: u32 = 0x8 << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOPRE_Pos: u32 = 28;
pub const RCC_CFGR_MCOPRE_Msk: u32 = 0x7 << RCC_CFGR_MCOPRE_Pos;
pub const RCC_CFGR_MCOPRE: u32 = RCC_CFGR_MCOPRE_Msk;
pub const RCC_CFGR_MCOPRE_0: u32 = 0x1 << RCC_CFGR_MCOPRE_Pos;
pub const RCC_CFGR_MCOPRE_1: u32 = 0x2 << RCC_CFGR_MCOPRE_Pos;
pub const RCC_CFGR_MCOPRE_2: u32 = 0x4 << RCC_CFGR_MCOPRE_Pos;
pub const RCC_CFGR_MCOPRE_DIV1: u32 = 0x00000000;
pub const RCC_CFGR_MCOPRE_DIV2: u32 = 0x10000000;
pub const RCC_CFGR_MCOPRE_DIV4: u32 = 0x20000000;
pub const RCC_CFGR_MCOPRE_DIV8: u32 = 0x30000000;
pub const RCC_CFGR_MCOPRE_DIV16: u32 = 0x40000000;
pub const RCC_CFGR_MCO_PRE: u32 = RCC_CFGR_MCOPRE;
pub const RCC_CFGR_MCO_PRE_1: u32 = RCC_CFGR_MCOPRE_DIV1;
pub const RCC_CFGR_MCO_PRE_2: u32 = RCC_CFGR_MCOPRE_DIV2;
pub const RCC_CFGR_MCO_PRE_4: u32 = RCC_CFGR_MCOPRE_DIV4;
pub const RCC_CFGR_MCO_PRE_8: u32 = RCC_CFGR_MCOPRE_DIV8;
pub const RCC_CFGR_MCO_PRE_16: u32 = RCC_CFGR_MCOPRE_DIV16;
pub const RCC_PLLCFGR_PLLSRC_Pos: u32 = 0;
pub const RCC_PLLCFGR_PLLSRC_Msk: u32 = 0x3 << RCC_PLLCFGR_PLLSRC_Pos;
pub const RCC_PLLCFGR_PLLSRC: u32 = RCC_PLLCFGR_PLLSRC_Msk;
pub const RCC_PLLCFGR_PLLSRC_0: u32 = 0x1 << RCC_PLLCFGR_PLLSRC_Pos;
pub const RCC_PLLCFGR_PLLSRC_1: u32 = 0x2 << RCC_PLLCFGR_PLLSRC_Pos;
pub const RCC_PLLCFGR_PLLSRC_HSI_Pos: u32 = 1;
pub const RCC_PLLCFGR_PLLSRC_HSI_Msk: u32 = 0x1 << RCC_PLLCFGR_PLLSRC_HSI_Pos;
pub const RCC_PLLCFGR_PLLSRC_HSI: u32 = RCC_PLLCFGR_PLLSRC_HSI_Msk;
pub const RCC_PLLCFGR_PLLSRC_HSE_Pos: u32 = 0;
pub const RCC_PLLCFGR_PLLSRC_HSE_Msk: u32 = 0x3 << RCC_PLLCFGR_PLLSRC_HSE_Pos;
pub const RCC_PLLCFGR_PLLSRC_HSE: u32 = RCC_PLLCFGR_PLLSRC_HSE_Msk;
pub const RCC_PLLCFGR_PLLM_Pos: u32 = 4;
pub const RCC_PLLCFGR_PLLM_Msk: u32 = 0xF << RCC_PLLCFGR_PLLM_Pos;
pub const RCC_PLLCFGR_PLLM: u32 = RCC_PLLCFGR_PLLM_Msk;
pub const RCC_PLLCFGR_PLLM_0: u32 = 0x1 << RCC_PLLCFGR_PLLM_Pos;
pub const RCC_PLLCFGR_PLLM_1: u32 = 0x2 << RCC_PLLCFGR_PLLM_Pos;
pub const RCC_PLLCFGR_PLLM_2: u32 = 0x4 << RCC_PLLCFGR_PLLM_Pos;
pub const RCC_PLLCFGR_PLLM_3: u32 = 0x8 << RCC_PLLCFGR_PLLM_Pos;
pub const RCC_PLLCFGR_PLLN_Pos: u32 = 8;
pub const RCC_PLLCFGR_PLLN_Msk: u32 = 0x7F << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN: u32 = RCC_PLLCFGR_PLLN_Msk;
pub const RCC_PLLCFGR_PLLN_0: u32 = 0x01 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_1: u32 = 0x02 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_2: u32 = 0x04 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_3: u32 = 0x08 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_4: u32 = 0x10 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_5: u32 = 0x20 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLN_6: u32 = 0x40 << RCC_PLLCFGR_PLLN_Pos;
pub const RCC_PLLCFGR_PLLPEN_Pos: u32 = 16;
pub const RCC_PLLCFGR_PLLPEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLLPEN_Pos;
pub const RCC_PLLCFGR_PLLPEN: u32 = RCC_PLLCFGR_PLLPEN_Msk;
pub const RCC_PLLCFGR_PLLP_Pos: u32 = 17;
pub const RCC_PLLCFGR_PLLP_Msk: u32 = 0x1 << RCC_PLLCFGR_PLLP_Pos;
pub const RCC_PLLCFGR_PLLP: u32 = RCC_PLLCFGR_PLLP_Msk;
pub const RCC_PLLCFGR_PLLQEN_Pos: u32 = 20;
pub const RCC_PLLCFGR_PLLQEN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLLQEN_Pos;
pub const RCC_PLLCFGR_PLLQEN: u32 = RCC_PLLCFGR_PLLQEN_Msk;
pub const RCC_PLLCFGR_PLLQ_Pos: u32 = 21;
pub const RCC_PLLCFGR_PLLQ_Msk: u32 = 0x3 << RCC_PLLCFGR_PLLQ_Pos;
pub const RCC_PLLCFGR_PLLQ: u32 = RCC_PLLCFGR_PLLQ_Msk;
pub const RCC_PLLCFGR_PLLQ_0: u32 = 0x1 << RCC_PLLCFGR_PLLQ_Pos;
pub const RCC_PLLCFGR_PLLQ_1: u32 = 0x2 << RCC_PLLCFGR_PLLQ_Pos;
pub const RCC_PLLCFGR_PLLREN_Pos: u32 = 24;
pub const RCC_PLLCFGR_PLLREN_Msk: u32 = 0x1 << RCC_PLLCFGR_PLLREN_Pos;
pub const RCC_PLLCFGR_PLLREN: u32 = RCC_PLLCFGR_PLLREN_Msk;
pub const RCC_PLLCFGR_PLLR_Pos: u32 = 25;
pub const RCC_PLLCFGR_PLLR_Msk: u32 = 0x3 << RCC_PLLCFGR_PLLR_Pos;
pub const RCC_PLLCFGR_PLLR: u32 = RCC_PLLCFGR_PLLR_Msk;
pub const RCC_PLLCFGR_PLLR_0: u32 = 0x1 << RCC_PLLCFGR_PLLR_Pos;
pub const RCC_PLLCFGR_PLLR_1: u32 = 0x2 << RCC_PLLCFGR_PLLR_Pos;
pub const RCC_PLLCFGR_PLLPDIV_Pos: u32 = 27;
pub const RCC_PLLCFGR_PLLPDIV_Msk: u32 = 0x1F << RCC_PLLCFGR_PLLPDIV_Pos;
pub const RCC_PLLCFGR_PLLPDIV: u32 = RCC_PLLCFGR_PLLPDIV_Msk;
pub const RCC_PLLCFGR_PLLPDIV_0: u32 = 0x01 << RCC_PLLCFGR_PLLPDIV_Pos;
pub const RCC_PLLCFGR_PLLPDIV_1: u32 = 0x02 << RCC_PLLCFGR_PLLPDIV_Pos;
pub const RCC_PLLCFGR_PLLPDIV_2: u32 = 0x04 << RCC_PLLCFGR_PLLPDIV_Pos;
pub const RCC_PLLCFGR_PLLPDIV_3: u32 = 0x08 << RCC_PLLCFGR_PLLPDIV_Pos;
pub const RCC_PLLCFGR_PLLPDIV_4: u32 = 0x10 << RCC_PLLCFGR_PLLPDIV_Pos;
pub const RCC_CIER_LSIRDYIE_Pos: u32 = 0;
pub const RCC_CIER_LSIRDYIE_Msk: u32 = 0x1 << RCC_CIER_LSIRDYIE_Pos;
pub const RCC_CIER_LSIRDYIE: u32 = RCC_CIER_LSIRDYIE_Msk;
pub const RCC_CIER_LSERDYIE_Pos: u32 = 1;
pub const RCC_CIER_LSERDYIE_Msk: u32 = 0x1 << RCC_CIER_LSERDYIE_Pos;
pub const RCC_CIER_LSERDYIE: u32 = RCC_CIER_LSERDYIE_Msk;
pub const RCC_CIER_HSIRDYIE_Pos: u32 = 3;
pub const RCC_CIER_HSIRDYIE_Msk: u32 = 0x1 << RCC_CIER_HSIRDYIE_Pos;
pub const RCC_CIER_HSIRDYIE: u32 = RCC_CIER_HSIRDYIE_Msk;
pub const RCC_CIER_HSERDYIE_Pos: u32 = 4;
pub const RCC_CIER_HSERDYIE_Msk: u32 = 0x1 << RCC_CIER_HSERDYIE_Pos;
pub const RCC_CIER_HSERDYIE: u32 = RCC_CIER_HSERDYIE_Msk;
pub const RCC_CIER_PLLRDYIE_Pos: u32 = 5;
pub const RCC_CIER_PLLRDYIE_Msk: u32 = 0x1 << RCC_CIER_PLLRDYIE_Pos;
pub const RCC_CIER_PLLRDYIE: u32 = RCC_CIER_PLLRDYIE_Msk;
pub const RCC_CIER_LSECSSIE_Pos: u32 = 9;
pub const RCC_CIER_LSECSSIE_Msk: u32 = 0x1 << RCC_CIER_LSECSSIE_Pos;
pub const RCC_CIER_LSECSSIE: u32 = RCC_CIER_LSECSSIE_Msk;
pub const RCC_CIER_HSI48RDYIE_Pos: u32 = 10;
pub const RCC_CIER_HSI48RDYIE_Msk: u32 = 0x1 << RCC_CIER_HSI48RDYIE_Pos;
pub const RCC_CIER_HSI48RDYIE: u32 = RCC_CIER_HSI48RDYIE_Msk;
pub const RCC_CIFR_LSIRDYF_Pos: u32 = 0;
pub const RCC_CIFR_LSIRDYF_Msk: u32 = 0x1 << RCC_CIFR_LSIRDYF_Pos;
pub const RCC_CIFR_LSIRDYF: u32 = RCC_CIFR_LSIRDYF_Msk;
pub const RCC_CIFR_LSERDYF_Pos: u32 = 1;
pub const RCC_CIFR_LSERDYF_Msk: u32 = 0x1 << RCC_CIFR_LSERDYF_Pos;
pub const RCC_CIFR_LSERDYF: u32 = RCC_CIFR_LSERDYF_Msk;
pub const RCC_CIFR_HSIRDYF_Pos: u32 = 3;
pub const RCC_CIFR_HSIRDYF_Msk: u32 = 0x1 << RCC_CIFR_HSIRDYF_Pos;
pub const RCC_CIFR_HSIRDYF: u32 = RCC_CIFR_HSIRDYF_Msk;
pub const RCC_CIFR_HSERDYF_Pos: u32 = 4;
pub const RCC_CIFR_HSERDYF_Msk: u32 = 0x1 << RCC_CIFR_HSERDYF_Pos;
pub const RCC_CIFR_HSERDYF: u32 = RCC_CIFR_HSERDYF_Msk;
pub const RCC_CIFR_PLLRDYF_Pos: u32 = 5;
pub const RCC_CIFR_PLLRDYF_Msk: u32 = 0x1 << RCC_CIFR_PLLRDYF_Pos;
pub const RCC_CIFR_PLLRDYF: u32 = RCC_CIFR_PLLRDYF_Msk;
pub const RCC_CIFR_CSSF_Pos: u32 = 8;
pub const RCC_CIFR_CSSF_Msk: u32 = 0x1 << RCC_CIFR_CSSF_Pos;
pub const RCC_CIFR_CSSF: u32 = RCC_CIFR_CSSF_Msk;
pub const RCC_CIFR_LSECSSF_Pos: u32 = 9;
pub const RCC_CIFR_LSECSSF_Msk: u32 = 0x1 << RCC_CIFR_LSECSSF_Pos;
pub const RCC_CIFR_LSECSSF: u32 = RCC_CIFR_LSECSSF_Msk;
pub const RCC_CIFR_HSI48RDYF_Pos: u32 = 10;
pub const RCC_CIFR_HSI48RDYF_Msk: u32 = 0x1 << RCC_CIFR_HSI48RDYF_Pos;
pub const RCC_CIFR_HSI48RDYF: u32 = RCC_CIFR_HSI48RDYF_Msk;
pub const RCC_CICR_LSIRDYC_Pos: u32 = 0;
pub const RCC_CICR_LSIRDYC_Msk: u32 = 0x1 << RCC_CICR_LSIRDYC_Pos;
pub const RCC_CICR_LSIRDYC: u32 = RCC_CICR_LSIRDYC_Msk;
pub const RCC_CICR_LSERDYC_Pos: u32 = 1;
pub const RCC_CICR_LSERDYC_Msk: u32 = 0x1 << RCC_CICR_LSERDYC_Pos;
pub const RCC_CICR_LSERDYC: u32 = RCC_CICR_LSERDYC_Msk;
pub const RCC_CICR_HSIRDYC_Pos: u32 = 3;
pub const RCC_CICR_HSIRDYC_Msk: u32 = 0x1 << RCC_CICR_HSIRDYC_Pos;
pub const RCC_CICR_HSIRDYC: u32 = RCC_CICR_HSIRDYC_Msk;
pub const RCC_CICR_HSERDYC_Pos: u32 = 4;
pub const RCC_CICR_HSERDYC_Msk: u32 = 0x1 << RCC_CICR_HSERDYC_Pos;
pub const RCC_CICR_HSERDYC: u32 = RCC_CICR_HSERDYC_Msk;
pub const RCC_CICR_PLLRDYC_Pos: u32 = 5;
pub const RCC_CICR_PLLRDYC_Msk: u32 = 0x1 << RCC_CICR_PLLRDYC_Pos;
pub const RCC_CICR_PLLRDYC: u32 = RCC_CICR_PLLRDYC_Msk;
pub const RCC_CICR_CSSC_Pos: u32 = 8;
pub const RCC_CICR_CSSC_Msk: u32 = 0x1 << RCC_CICR_CSSC_Pos;
pub const RCC_CICR_CSSC: u32 = RCC_CICR_CSSC_Msk;
pub const RCC_CICR_LSECSSC_Pos: u32 = 9;
pub const RCC_CICR_LSECSSC_Msk: u32 = 0x1 << RCC_CICR_LSECSSC_Pos;
pub const RCC_CICR_LSECSSC: u32 = RCC_CICR_LSECSSC_Msk;
pub const RCC_CICR_HSI48RDYC_Pos: u32 = 10;
pub const RCC_CICR_HSI48RDYC_Msk: u32 = 0x1 << RCC_CICR_HSI48RDYC_Pos;
pub const RCC_CICR_HSI48RDYC: u32 = RCC_CICR_HSI48RDYC_Msk;
pub const RCC_AHB1RSTR_DMA1RST_Pos: u32 = 0;
pub const RCC_AHB1RSTR_DMA1RST_Msk: u32 = 0x1 << RCC_AHB1RSTR_DMA1RST_Pos;
pub const RCC_AHB1RSTR_DMA1RST: u32 = RCC_AHB1RSTR_DMA1RST_Msk;
pub const RCC_AHB1RSTR_DMA2RST_Pos: u32 = 1;
pub const RCC_AHB1RSTR_DMA2RST_Msk: u32 = 0x1 << RCC_AHB1RSTR_DMA2RST_Pos;
pub const RCC_AHB1RSTR_DMA2RST: u32 = RCC_AHB1RSTR_DMA2RST_Msk;
pub const RCC_AHB1RSTR_DMAMUX1RST_Pos: u32 = 2;
pub const RCC_AHB1RSTR_DMAMUX1RST_Msk: u32 = 0x1 << RCC_AHB1RSTR_DMAMUX1RST_Pos;
pub const RCC_AHB1RSTR_DMAMUX1RST: u32 = RCC_AHB1RSTR_DMAMUX1RST_Msk;
pub const RCC_AHB1RSTR_CORDICRST_Pos: u32 = 3;
pub const RCC_AHB1RSTR_CORDICRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_CORDICRST_Pos;
pub const RCC_AHB1RSTR_CORDICRST: u32 = RCC_AHB1RSTR_CORDICRST_Msk;
pub const RCC_AHB1RSTR_FMACRST_Pos: u32 = 4;
pub const RCC_AHB1RSTR_FMACRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_FMACRST_Pos;
pub const RCC_AHB1RSTR_FMACRST: u32 = RCC_AHB1RSTR_FMACRST_Msk;
pub const RCC_AHB1RSTR_FLASHRST_Pos: u32 = 8;
pub const RCC_AHB1RSTR_FLASHRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_FLASHRST_Pos;
pub const RCC_AHB1RSTR_FLASHRST: u32 = RCC_AHB1RSTR_FLASHRST_Msk;
pub const RCC_AHB1RSTR_CRCRST_Pos: u32 = 12;
pub const RCC_AHB1RSTR_CRCRST_Msk: u32 = 0x1 << RCC_AHB1RSTR_CRCRST_Pos;
pub const RCC_AHB1RSTR_CRCRST: u32 = RCC_AHB1RSTR_CRCRST_Msk;
pub const RCC_AHB2RSTR_GPIOARST_Pos: u32 = 0;
pub const RCC_AHB2RSTR_GPIOARST_Msk: u32 = 0x1 << RCC_AHB2RSTR_GPIOARST_Pos;
pub const RCC_AHB2RSTR_GPIOARST: u32 = RCC_AHB2RSTR_GPIOARST_Msk;
pub const RCC_AHB2RSTR_GPIOBRST_Pos: u32 = 1;
pub const RCC_AHB2RSTR_GPIOBRST_Msk: u32 = 0x1 << RCC_AHB2RSTR_GPIOBRST_Pos;
pub const RCC_AHB2RSTR_GPIOBRST: u32 = RCC_AHB2RSTR_GPIOBRST_Msk;
pub const RCC_AHB2RSTR_GPIOCRST_Pos: u32 = 2;
pub const RCC_AHB2RSTR_GPIOCRST_Msk: u32 = 0x1 << RCC_AHB2RSTR_GPIOCRST_Pos;
pub const RCC_AHB2RSTR_GPIOCRST: u32 = RCC_AHB2RSTR_GPIOCRST_Msk;
pub const RCC_AHB2RSTR_GPIODRST_Pos: u32 = 3;
pub const RCC_AHB2RSTR_GPIODRST_Msk: u32 = 0x1 << RCC_AHB2RSTR_GPIODRST_Pos;
pub const RCC_AHB2RSTR_GPIODRST: u32 = RCC_AHB2RSTR_GPIODRST_Msk;
pub const RCC_AHB2RSTR_GPIOERST_Pos: u32 = 4;
pub const RCC_AHB2RSTR_GPIOERST_Msk: u32 = 0x1 << RCC_AHB2RSTR_GPIOERST_Pos;
pub const RCC_AHB2RSTR_GPIOERST: u32 = RCC_AHB2RSTR_GPIOERST_Msk;
pub const RCC_AHB2RSTR_GPIOFRST_Pos: u32 = 5;
pub const RCC_AHB2RSTR_GPIOFRST_Msk: u32 = 0x1 << RCC_AHB2RSTR_GPIOFRST_Pos;
pub const RCC_AHB2RSTR_GPIOFRST: u32 = RCC_AHB2RSTR_GPIOFRST_Msk;
pub const RCC_AHB2RSTR_GPIOGRST_Pos: u32 = 6;
pub const RCC_AHB2RSTR_GPIOGRST_Msk: u32 = 0x1 << RCC_AHB2RSTR_GPIOGRST_Pos;
pub const RCC_AHB2RSTR_GPIOGRST: u32 = RCC_AHB2RSTR_GPIOGRST_Msk;
pub const RCC_AHB2RSTR_ADC12RST_Pos: u32 = 13;
pub const RCC_AHB2RSTR_ADC12RST_Msk: u32 = 0x1 << RCC_AHB2RSTR_ADC12RST_Pos;
pub const RCC_AHB2RSTR_ADC12RST: u32 = RCC_AHB2RSTR_ADC12RST_Msk;
pub const RCC_AHB2RSTR_ADC345RST_Pos: u32 = 14;
pub const RCC_AHB2RSTR_ADC345RST_Msk: u32 = 0x1 << RCC_AHB2RSTR_ADC345RST_Pos;
pub const RCC_AHB2RSTR_ADC345RST: u32 = RCC_AHB2RSTR_ADC345RST_Msk;
pub const RCC_AHB2RSTR_DAC1RST_Pos: u32 = 16;
pub const RCC_AHB2RSTR_DAC1RST_Msk: u32 = 0x1 << RCC_AHB2RSTR_DAC1RST_Pos;
pub const RCC_AHB2RSTR_DAC1RST: u32 = RCC_AHB2RSTR_DAC1RST_Msk;
pub const RCC_AHB2RSTR_DAC3RST_Pos: u32 = 18;
pub const RCC_AHB2RSTR_DAC3RST_Msk: u32 = 0x1 << RCC_AHB2RSTR_DAC3RST_Pos;
pub const RCC_AHB2RSTR_DAC3RST: u32 = RCC_AHB2RSTR_DAC3RST_Msk;
pub const RCC_AHB2RSTR_AESRST_Pos: u32 = 24;
pub const RCC_AHB2RSTR_AESRST_Msk: u32 = 0x1 << RCC_AHB2RSTR_AESRST_Pos;
pub const RCC_AHB2RSTR_AESRST: u32 = RCC_AHB2RSTR_AESRST_Msk;
pub const RCC_AHB2RSTR_RNGRST_Pos: u32 = 26;
pub const RCC_AHB2RSTR_RNGRST_Msk: u32 = 0x1 << RCC_AHB2RSTR_RNGRST_Pos;
pub const RCC_AHB2RSTR_RNGRST: u32 = RCC_AHB2RSTR_RNGRST_Msk;
pub const RCC_AHB3RSTR_QSPIRST_Pos: u32 = 8;
pub const RCC_AHB3RSTR_QSPIRST_Msk: u32 = 0x1 << RCC_AHB3RSTR_QSPIRST_Pos;
pub const RCC_AHB3RSTR_QSPIRST: u32 = RCC_AHB3RSTR_QSPIRST_Msk;
pub const RCC_APB1RSTR1_TIM2RST_Pos: u32 = 0;
pub const RCC_APB1RSTR1_TIM2RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_TIM2RST_Pos;
pub const RCC_APB1RSTR1_TIM2RST: u32 = RCC_APB1RSTR1_TIM2RST_Msk;
pub const RCC_APB1RSTR1_TIM3RST_Pos: u32 = 1;
pub const RCC_APB1RSTR1_TIM3RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_TIM3RST_Pos;
pub const RCC_APB1RSTR1_TIM3RST: u32 = RCC_APB1RSTR1_TIM3RST_Msk;
pub const RCC_APB1RSTR1_TIM4RST_Pos: u32 = 2;
pub const RCC_APB1RSTR1_TIM4RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_TIM4RST_Pos;
pub const RCC_APB1RSTR1_TIM4RST: u32 = RCC_APB1RSTR1_TIM4RST_Msk;
pub const RCC_APB1RSTR1_TIM6RST_Pos: u32 = 4;
pub const RCC_APB1RSTR1_TIM6RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_TIM6RST_Pos;
pub const RCC_APB1RSTR1_TIM6RST: u32 = RCC_APB1RSTR1_TIM6RST_Msk;
pub const RCC_APB1RSTR1_TIM7RST_Pos: u32 = 5;
pub const RCC_APB1RSTR1_TIM7RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_TIM7RST_Pos;
pub const RCC_APB1RSTR1_TIM7RST: u32 = RCC_APB1RSTR1_TIM7RST_Msk;
pub const RCC_APB1RSTR1_CRSRST_Pos: u32 = 8;
pub const RCC_APB1RSTR1_CRSRST_Msk: u32 = 0x1 << RCC_APB1RSTR1_CRSRST_Pos;
pub const RCC_APB1RSTR1_CRSRST: u32 = RCC_APB1RSTR1_CRSRST_Msk;
pub const RCC_APB1RSTR1_SPI2RST_Pos: u32 = 14;
pub const RCC_APB1RSTR1_SPI2RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_SPI2RST_Pos;
pub const RCC_APB1RSTR1_SPI2RST: u32 = RCC_APB1RSTR1_SPI2RST_Msk;
pub const RCC_APB1RSTR1_SPI3RST_Pos: u32 = 15;
pub const RCC_APB1RSTR1_SPI3RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_SPI3RST_Pos;
pub const RCC_APB1RSTR1_SPI3RST: u32 = RCC_APB1RSTR1_SPI3RST_Msk;
pub const RCC_APB1RSTR1_USART2RST_Pos: u32 = 17;
pub const RCC_APB1RSTR1_USART2RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_USART2RST_Pos;
pub const RCC_APB1RSTR1_USART2RST: u32 = RCC_APB1RSTR1_USART2RST_Msk;
pub const RCC_APB1RSTR1_USART3RST_Pos: u32 = 18;
pub const RCC_APB1RSTR1_USART3RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_USART3RST_Pos;
pub const RCC_APB1RSTR1_USART3RST: u32 = RCC_APB1RSTR1_USART3RST_Msk;
pub const RCC_APB1RSTR1_UART4RST_Pos: u32 = 19;
pub const RCC_APB1RSTR1_UART4RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_UART4RST_Pos;
pub const RCC_APB1RSTR1_UART4RST: u32 = RCC_APB1RSTR1_UART4RST_Msk;
pub const RCC_APB1RSTR1_UART5RST_Pos: u32 = 20;
pub const RCC_APB1RSTR1_UART5RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_UART5RST_Pos;
pub const RCC_APB1RSTR1_UART5RST: u32 = RCC_APB1RSTR1_UART5RST_Msk;
pub const RCC_APB1RSTR1_I2C1RST_Pos: u32 = 21;
pub const RCC_APB1RSTR1_I2C1RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_I2C1RST_Pos;
pub const RCC_APB1RSTR1_I2C1RST: u32 = RCC_APB1RSTR1_I2C1RST_Msk;
pub const RCC_APB1RSTR1_I2C2RST_Pos: u32 = 22;
pub const RCC_APB1RSTR1_I2C2RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_I2C2RST_Pos;
pub const RCC_APB1RSTR1_I2C2RST: u32 = RCC_APB1RSTR1_I2C2RST_Msk;
pub const RCC_APB1RSTR1_USBRST_Pos: u32 = 23;
pub const RCC_APB1RSTR1_USBRST_Msk: u32 = 0x1 << RCC_APB1RSTR1_USBRST_Pos;
pub const RCC_APB1RSTR1_USBRST: u32 = RCC_APB1RSTR1_USBRST_Msk;
pub const RCC_APB1RSTR1_FDCANRST_Pos: u32 = 25;
pub const RCC_APB1RSTR1_FDCANRST_Msk: u32 = 0x1 << RCC_APB1RSTR1_FDCANRST_Pos;
pub const RCC_APB1RSTR1_FDCANRST: u32 = RCC_APB1RSTR1_FDCANRST_Msk;
pub const RCC_APB1RSTR1_PWRRST_Pos: u32 = 28;
pub const RCC_APB1RSTR1_PWRRST_Msk: u32 = 0x1 << RCC_APB1RSTR1_PWRRST_Pos;
pub const RCC_APB1RSTR1_PWRRST: u32 = RCC_APB1RSTR1_PWRRST_Msk;
pub const RCC_APB1RSTR1_I2C3RST_Pos: u32 = 30;
pub const RCC_APB1RSTR1_I2C3RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_I2C3RST_Pos;
pub const RCC_APB1RSTR1_I2C3RST: u32 = RCC_APB1RSTR1_I2C3RST_Msk;
pub const RCC_APB1RSTR1_LPTIM1RST_Pos: u32 = 31;
pub const RCC_APB1RSTR1_LPTIM1RST_Msk: u32 = 0x1 << RCC_APB1RSTR1_LPTIM1RST_Pos;
pub const RCC_APB1RSTR1_LPTIM1RST: u32 = RCC_APB1RSTR1_LPTIM1RST_Msk;
pub const RCC_APB1RSTR2_LPUART1RST_Pos: u32 = 0;
pub const RCC_APB1RSTR2_LPUART1RST_Msk: u32 = 0x1 << RCC_APB1RSTR2_LPUART1RST_Pos;
pub const RCC_APB1RSTR2_LPUART1RST: u32 = RCC_APB1RSTR2_LPUART1RST_Msk;
pub const RCC_APB1RSTR2_UCPD1RST_Pos: u32 = 8;
pub const RCC_APB1RSTR2_UCPD1RST_Msk: u32 = 0x1 << RCC_APB1RSTR2_UCPD1RST_Pos;
pub const RCC_APB1RSTR2_UCPD1RST: u32 = RCC_APB1RSTR2_UCPD1RST_Msk;
pub const RCC_APB2RSTR_SYSCFGRST_Pos: u32 = 0;
pub const RCC_APB2RSTR_SYSCFGRST_Msk: u32 = 0x1 << RCC_APB2RSTR_SYSCFGRST_Pos;
pub const RCC_APB2RSTR_SYSCFGRST: u32 = RCC_APB2RSTR_SYSCFGRST_Msk;
pub const RCC_APB2RSTR_TIM1RST_Pos: u32 = 11;
pub const RCC_APB2RSTR_TIM1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM1RST_Pos;
pub const RCC_APB2RSTR_TIM1RST: u32 = RCC_APB2RSTR_TIM1RST_Msk;
pub const RCC_APB2RSTR_SPI1RST_Pos: u32 = 12;
pub const RCC_APB2RSTR_SPI1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_SPI1RST_Pos;
pub const RCC_APB2RSTR_SPI1RST: u32 = RCC_APB2RSTR_SPI1RST_Msk;
pub const RCC_APB2RSTR_TIM8RST_Pos: u32 = 13;
pub const RCC_APB2RSTR_TIM8RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM8RST_Pos;
pub const RCC_APB2RSTR_TIM8RST: u32 = RCC_APB2RSTR_TIM8RST_Msk;
pub const RCC_APB2RSTR_USART1RST_Pos: u32 = 14;
pub const RCC_APB2RSTR_USART1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_USART1RST_Pos;
pub const RCC_APB2RSTR_USART1RST: u32 = RCC_APB2RSTR_USART1RST_Msk;
pub const RCC_APB2RSTR_TIM15RST_Pos: u32 = 16;
pub const RCC_APB2RSTR_TIM15RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM15RST_Pos;
pub const RCC_APB2RSTR_TIM15RST: u32 = RCC_APB2RSTR_TIM15RST_Msk;
pub const RCC_APB2RSTR_TIM16RST_Pos: u32 = 17;
pub const RCC_APB2RSTR_TIM16RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM16RST_Pos;
pub const RCC_APB2RSTR_TIM16RST: u32 = RCC_APB2RSTR_TIM16RST_Msk;
pub const RCC_APB2RSTR_TIM17RST_Pos: u32 = 18;
pub const RCC_APB2RSTR_TIM17RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM17RST_Pos;
pub const RCC_APB2RSTR_TIM17RST: u32 = RCC_APB2RSTR_TIM17RST_Msk;
pub const RCC_APB2RSTR_TIM20RST_Pos: u32 = 20;
pub const RCC_APB2RSTR_TIM20RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM20RST_Pos;
pub const RCC_APB2RSTR_TIM20RST: u32 = RCC_APB2RSTR_TIM20RST_Msk;
pub const RCC_APB2RSTR_SAI1RST_Pos: u32 = 21;
pub const RCC_APB2RSTR_SAI1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_SAI1RST_Pos;
pub const RCC_APB2RSTR_SAI1RST: u32 = RCC_APB2RSTR_SAI1RST_Msk;
pub const RCC_AHB1ENR_DMA1EN_Pos: u32 = 0;
pub const RCC_AHB1ENR_DMA1EN_Msk: u32 = 0x1 << RCC_AHB1ENR_DMA1EN_Pos;
pub const RCC_AHB1ENR_DMA1EN: u32 = RCC_AHB1ENR_DMA1EN_Msk;
pub const RCC_AHB1ENR_DMA2EN_Pos: u32 = 1;
pub const RCC_AHB1ENR_DMA2EN_Msk: u32 = 0x1 << RCC_AHB1ENR_DMA2EN_Pos;
pub const RCC_AHB1ENR_DMA2EN: u32 = RCC_AHB1ENR_DMA2EN_Msk;
pub const RCC_AHB1ENR_DMAMUX1EN_Pos: u32 = 2;
pub const RCC_AHB1ENR_DMAMUX1EN_Msk: u32 = 0x1 << RCC_AHB1ENR_DMAMUX1EN_Pos;
pub const RCC_AHB1ENR_DMAMUX1EN: u32 = RCC_AHB1ENR_DMAMUX1EN_Msk;
pub const RCC_AHB1ENR_CORDICEN_Pos: u32 = 3;
pub const RCC_AHB1ENR_CORDICEN_Msk: u32 = 0x1 << RCC_AHB1ENR_CORDICEN_Pos;
pub const RCC_AHB1ENR_CORDICEN: u32 = RCC_AHB1ENR_CORDICEN_Msk;
pub const RCC_AHB1ENR_FMACEN_Pos: u32 = 4;
pub const RCC_AHB1ENR_FMACEN_Msk: u32 = 0x1 << RCC_AHB1ENR_FMACEN_Pos;
pub const RCC_AHB1ENR_FMACEN: u32 = RCC_AHB1ENR_FMACEN_Msk;
pub const RCC_AHB1ENR_FLASHEN_Pos: u32 = 8;
pub const RCC_AHB1ENR_FLASHEN_Msk: u32 = 0x1 << RCC_AHB1ENR_FLASHEN_Pos;
pub const RCC_AHB1ENR_FLASHEN: u32 = RCC_AHB1ENR_FLASHEN_Msk;
pub const RCC_AHB1ENR_CRCEN_Pos: u32 = 12;
pub const RCC_AHB1ENR_CRCEN_Msk: u32 = 0x1 << RCC_AHB1ENR_CRCEN_Pos;
pub const RCC_AHB1ENR_CRCEN: u32 = RCC_AHB1ENR_CRCEN_Msk;
pub const RCC_AHB2ENR_GPIOAEN_Pos: u32 = 0;
pub const RCC_AHB2ENR_GPIOAEN_Msk: u32 = 0x1 << RCC_AHB2ENR_GPIOAEN_Pos;
pub const RCC_AHB2ENR_GPIOAEN: u32 = RCC_AHB2ENR_GPIOAEN_Msk;
pub const RCC_AHB2ENR_GPIOBEN_Pos: u32 = 1;
pub const RCC_AHB2ENR_GPIOBEN_Msk: u32 = 0x1 << RCC_AHB2ENR_GPIOBEN_Pos;
pub const RCC_AHB2ENR_GPIOBEN: u32 = RCC_AHB2ENR_GPIOBEN_Msk;
pub const RCC_AHB2ENR_GPIOCEN_Pos: u32 = 2;
pub const RCC_AHB2ENR_GPIOCEN_Msk: u32 = 0x1 << RCC_AHB2ENR_GPIOCEN_Pos;
pub const RCC_AHB2ENR_GPIOCEN: u32 = RCC_AHB2ENR_GPIOCEN_Msk;
pub const RCC_AHB2ENR_GPIODEN_Pos: u32 = 3;
pub const RCC_AHB2ENR_GPIODEN_Msk: u32 = 0x1 << RCC_AHB2ENR_GPIODEN_Pos;
pub const RCC_AHB2ENR_GPIODEN: u32 = RCC_AHB2ENR_GPIODEN_Msk;
pub const RCC_AHB2ENR_GPIOEEN_Pos: u32 = 4;
pub const RCC_AHB2ENR_GPIOEEN_Msk: u32 = 0x1 << RCC_AHB2ENR_GPIOEEN_Pos;
pub const RCC_AHB2ENR_GPIOEEN: u32 = RCC_AHB2ENR_GPIOEEN_Msk;
pub const RCC_AHB2ENR_GPIOFEN_Pos: u32 = 5;
pub const RCC_AHB2ENR_GPIOFEN_Msk: u32 = 0x1 << RCC_AHB2ENR_GPIOFEN_Pos;
pub const RCC_AHB2ENR_GPIOFEN: u32 = RCC_AHB2ENR_GPIOFEN_Msk;
pub const RCC_AHB2ENR_GPIOGEN_Pos: u32 = 6;
pub const RCC_AHB2ENR_GPIOGEN_Msk: u32 = 0x1 << RCC_AHB2ENR_GPIOGEN_Pos;
pub const RCC_AHB2ENR_GPIOGEN: u32 = RCC_AHB2ENR_GPIOGEN_Msk;
pub const RCC_AHB2ENR_ADC12EN_Pos: u32 = 13;
pub const RCC_AHB2ENR_ADC12EN_Msk: u32 = 0x1 << RCC_AHB2ENR_ADC12EN_Pos;
pub const RCC_AHB2ENR_ADC12EN: u32 = RCC_AHB2ENR_ADC12EN_Msk;
pub const RCC_AHB2ENR_ADC345EN_Pos: u32 = 14;
pub const RCC_AHB2ENR_ADC345EN_Msk: u32 = 0x1 << RCC_AHB2ENR_ADC345EN_Pos;
pub const RCC_AHB2ENR_ADC345EN: u32 = RCC_AHB2ENR_ADC345EN_Msk;
pub const RCC_AHB2ENR_DAC1EN_Pos: u32 = 16;
pub const RCC_AHB2ENR_DAC1EN_Msk: u32 = 0x1 << RCC_AHB2ENR_DAC1EN_Pos;
pub const RCC_AHB2ENR_DAC1EN: u32 = RCC_AHB2ENR_DAC1EN_Msk;
pub const RCC_AHB2ENR_DAC3EN_Pos: u32 = 18;
pub const RCC_AHB2ENR_DAC3EN_Msk: u32 = 0x1 << RCC_AHB2ENR_DAC3EN_Pos;
pub const RCC_AHB2ENR_DAC3EN: u32 = RCC_AHB2ENR_DAC3EN_Msk;
pub const RCC_AHB2ENR_AESEN_Pos: u32 = 24;
pub const RCC_AHB2ENR_AESEN_Msk: u32 = 0x1 << RCC_AHB2ENR_AESEN_Pos;
pub const RCC_AHB2ENR_AESEN: u32 = RCC_AHB2ENR_AESEN_Msk;
pub const RCC_AHB2ENR_RNGEN_Pos: u32 = 26;
pub const RCC_AHB2ENR_RNGEN_Msk: u32 = 0x1 << RCC_AHB2ENR_RNGEN_Pos;
pub const RCC_AHB2ENR_RNGEN: u32 = RCC_AHB2ENR_RNGEN_Msk;
pub const RCC_AHB3ENR_QSPIEN_Pos: u32 = 8;
pub const RCC_AHB3ENR_QSPIEN_Msk: u32 = 0x1 << RCC_AHB3ENR_QSPIEN_Pos;
pub const RCC_AHB3ENR_QSPIEN: u32 = RCC_AHB3ENR_QSPIEN_Msk;
pub const RCC_APB1ENR1_TIM2EN_Pos: u32 = 0;
pub const RCC_APB1ENR1_TIM2EN_Msk: u32 = 0x1 << RCC_APB1ENR1_TIM2EN_Pos;
pub const RCC_APB1ENR1_TIM2EN: u32 = RCC_APB1ENR1_TIM2EN_Msk;
pub const RCC_APB1ENR1_TIM3EN_Pos: u32 = 1;
pub const RCC_APB1ENR1_TIM3EN_Msk: u32 = 0x1 << RCC_APB1ENR1_TIM3EN_Pos;
pub const RCC_APB1ENR1_TIM3EN: u32 = RCC_APB1ENR1_TIM3EN_Msk;
pub const RCC_APB1ENR1_TIM4EN_Pos: u32 = 2;
pub const RCC_APB1ENR1_TIM4EN_Msk: u32 = 0x1 << RCC_APB1ENR1_TIM4EN_Pos;
pub const RCC_APB1ENR1_TIM4EN: u32 = RCC_APB1ENR1_TIM4EN_Msk;
pub const RCC_APB1ENR1_TIM6EN_Pos: u32 = 4;
pub const RCC_APB1ENR1_TIM6EN_Msk: u32 = 0x1 << RCC_APB1ENR1_TIM6EN_Pos;
pub const RCC_APB1ENR1_TIM6EN: u32 = RCC_APB1ENR1_TIM6EN_Msk;
pub const RCC_APB1ENR1_TIM7EN_Pos: u32 = 5;
pub const RCC_APB1ENR1_TIM7EN_Msk: u32 = 0x1 << RCC_APB1ENR1_TIM7EN_Pos;
pub const RCC_APB1ENR1_TIM7EN: u32 = RCC_APB1ENR1_TIM7EN_Msk;
pub const RCC_APB1ENR1_CRSEN_Pos: u32 = 8;
pub const RCC_APB1ENR1_CRSEN_Msk: u32 = 0x1 << RCC_APB1ENR1_CRSEN_Pos;
pub const RCC_APB1ENR1_CRSEN: u32 = RCC_APB1ENR1_CRSEN_Msk;
pub const RCC_APB1ENR1_RTCAPBEN_Pos: u32 = 10;
pub const RCC_APB1ENR1_RTCAPBEN_Msk: u32 = 0x1 << RCC_APB1ENR1_RTCAPBEN_Pos;
pub const RCC_APB1ENR1_RTCAPBEN: u32 = RCC_APB1ENR1_RTCAPBEN_Msk;
pub const RCC_APB1ENR1_WWDGEN_Pos: u32 = 11;
pub const RCC_APB1ENR1_WWDGEN_Msk: u32 = 0x1 << RCC_APB1ENR1_WWDGEN_Pos;
pub const RCC_APB1ENR1_WWDGEN: u32 = RCC_APB1ENR1_WWDGEN_Msk;
pub const RCC_APB1ENR1_SPI2EN_Pos: u32 = 14;
pub const RCC_APB1ENR1_SPI2EN_Msk: u32 = 0x1 << RCC_APB1ENR1_SPI2EN_Pos;
pub const RCC_APB1ENR1_SPI2EN: u32 = RCC_APB1ENR1_SPI2EN_Msk;
pub const RCC_APB1ENR1_SPI3EN_Pos: u32 = 15;
pub const RCC_APB1ENR1_SPI3EN_Msk: u32 = 0x1 << RCC_APB1ENR1_SPI3EN_Pos;
pub const RCC_APB1ENR1_SPI3EN: u32 = RCC_APB1ENR1_SPI3EN_Msk;
pub const RCC_APB1ENR1_USART2EN_Pos: u32 = 17;
pub const RCC_APB1ENR1_USART2EN_Msk: u32 = 0x1 << RCC_APB1ENR1_USART2EN_Pos;
pub const RCC_APB1ENR1_USART2EN: u32 = RCC_APB1ENR1_USART2EN_Msk;
pub const RCC_APB1ENR1_USART3EN_Pos: u32 = 18;
pub const RCC_APB1ENR1_USART3EN_Msk: u32 = 0x1 << RCC_APB1ENR1_USART3EN_Pos;
pub const RCC_APB1ENR1_USART3EN: u32 = RCC_APB1ENR1_USART3EN_Msk;
pub const RCC_APB1ENR1_UART4EN_Pos: u32 = 19;
pub const RCC_APB1ENR1_UART4EN_Msk: u32 = 0x1 << RCC_APB1ENR1_UART4EN_Pos;
pub const RCC_APB1ENR1_UART4EN: u32 = RCC_APB1ENR1_UART4EN_Msk;
pub const RCC_APB1ENR1_UART5EN_Pos: u32 = 20;
pub const RCC_APB1ENR1_UART5EN_Msk: u32 = 0x1 << RCC_APB1ENR1_UART5EN_Pos;
pub const RCC_APB1ENR1_UART5EN: u32 = RCC_APB1ENR1_UART5EN_Msk;
pub const RCC_APB1ENR1_I2C1EN_Pos: u32 = 21;
pub const RCC_APB1ENR1_I2C1EN_Msk: u32 = 0x1 << RCC_APB1ENR1_I2C1EN_Pos;
pub const RCC_APB1ENR1_I2C1EN: u32 = RCC_APB1ENR1_I2C1EN_Msk;
pub const RCC_APB1ENR1_I2C2EN_Pos: u32 = 22;
pub const RCC_APB1ENR1_I2C2EN_Msk: u32 = 0x1 << RCC_APB1ENR1_I2C2EN_Pos;
pub const RCC_APB1ENR1_I2C2EN: u32 = RCC_APB1ENR1_I2C2EN_Msk;
pub const RCC_APB1ENR1_USBEN_Pos: u32 = 23;
pub const RCC_APB1ENR1_USBEN_Msk: u32 = 0x1 << RCC_APB1ENR1_USBEN_Pos;
pub const RCC_APB1ENR1_USBEN: u32 = RCC_APB1ENR1_USBEN_Msk;
pub const RCC_APB1ENR1_FDCANEN_Pos: u32 = 25;
pub const RCC_APB1ENR1_FDCANEN_Msk: u32 = 0x1 << RCC_APB1ENR1_FDCANEN_Pos;
pub const RCC_APB1ENR1_FDCANEN: u32 = RCC_APB1ENR1_FDCANEN_Msk;
pub const RCC_APB1ENR1_PWREN_Pos: u32 = 28;
pub const RCC_APB1ENR1_PWREN_Msk: u32 = 0x1 << RCC_APB1ENR1_PWREN_Pos;
pub const RCC_APB1ENR1_PWREN: u32 = RCC_APB1ENR1_PWREN_Msk;
pub const RCC_APB1ENR1_I2C3EN_Pos: u32 = 30;
pub const RCC_APB1ENR1_I2C3EN_Msk: u32 = 0x1 << RCC_APB1ENR1_I2C3EN_Pos;
pub const RCC_APB1ENR1_I2C3EN: u32 = RCC_APB1ENR1_I2C3EN_Msk;
pub const RCC_APB1ENR1_LPTIM1EN_Pos: u32 = 31;
pub const RCC_APB1ENR1_LPTIM1EN_Msk: u32 = 0x1 << RCC_APB1ENR1_LPTIM1EN_Pos;
pub const RCC_APB1ENR1_LPTIM1EN: u32 = RCC_APB1ENR1_LPTIM1EN_Msk;
pub const RCC_APB1ENR2_LPUART1EN_Pos: u32 = 0;
pub const RCC_APB1ENR2_LPUART1EN_Msk: u32 = 0x1 << RCC_APB1ENR2_LPUART1EN_Pos;
pub const RCC_APB1ENR2_LPUART1EN: u32 = RCC_APB1ENR2_LPUART1EN_Msk;
pub const RCC_APB1ENR2_UCPD1EN_Pos: u32 = 8;
pub const RCC_APB1ENR2_UCPD1EN_Msk: u32 = 0x1 << RCC_APB1ENR2_UCPD1EN_Pos;
pub const RCC_APB1ENR2_UCPD1EN: u32 = RCC_APB1ENR2_UCPD1EN_Msk;
pub const RCC_APB2ENR_SYSCFGEN_Pos: u32 = 0;
pub const RCC_APB2ENR_SYSCFGEN_Msk: u32 = 0x1 << RCC_APB2ENR_SYSCFGEN_Pos;
pub const RCC_APB2ENR_SYSCFGEN: u32 = RCC_APB2ENR_SYSCFGEN_Msk;
pub const RCC_APB2ENR_TIM1EN_Pos: u32 = 11;
pub const RCC_APB2ENR_TIM1EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM1EN_Pos;
pub const RCC_APB2ENR_TIM1EN: u32 = RCC_APB2ENR_TIM1EN_Msk;
pub const RCC_APB2ENR_SPI1EN_Pos: u32 = 12;
pub const RCC_APB2ENR_SPI1EN_Msk: u32 = 0x1 << RCC_APB2ENR_SPI1EN_Pos;
pub const RCC_APB2ENR_SPI1EN: u32 = RCC_APB2ENR_SPI1EN_Msk;
pub const RCC_APB2ENR_TIM8EN_Pos: u32 = 13;
pub const RCC_APB2ENR_TIM8EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM8EN_Pos;
pub const RCC_APB2ENR_TIM8EN: u32 = RCC_APB2ENR_TIM8EN_Msk;
pub const RCC_APB2ENR_USART1EN_Pos: u32 = 14;
pub const RCC_APB2ENR_USART1EN_Msk: u32 = 0x1 << RCC_APB2ENR_USART1EN_Pos;
pub const RCC_APB2ENR_USART1EN: u32 = RCC_APB2ENR_USART1EN_Msk;
pub const RCC_APB2ENR_TIM15EN_Pos: u32 = 16;
pub const RCC_APB2ENR_TIM15EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM15EN_Pos;
pub const RCC_APB2ENR_TIM15EN: u32 = RCC_APB2ENR_TIM15EN_Msk;
pub const RCC_APB2ENR_TIM16EN_Pos: u32 = 17;
pub const RCC_APB2ENR_TIM16EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM16EN_Pos;
pub const RCC_APB2ENR_TIM16EN: u32 = RCC_APB2ENR_TIM16EN_Msk;
pub const RCC_APB2ENR_TIM17EN_Pos: u32 = 18;
pub const RCC_APB2ENR_TIM17EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM17EN_Pos;
pub const RCC_APB2ENR_TIM17EN: u32 = RCC_APB2ENR_TIM17EN_Msk;
pub const RCC_APB2ENR_TIM20EN_Pos: u32 = 20;
pub const RCC_APB2ENR_TIM20EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM20EN_Pos;
pub const RCC_APB2ENR_TIM20EN: u32 = RCC_APB2ENR_TIM20EN_Msk;
pub const RCC_APB2ENR_SAI1EN_Pos: u32 = 21;
pub const RCC_APB2ENR_SAI1EN_Msk: u32 = 0x1 << RCC_APB2ENR_SAI1EN_Pos;
pub const RCC_APB2ENR_SAI1EN: u32 = RCC_APB2ENR_SAI1EN_Msk;
pub const RCC_AHB1SMENR_DMA1SMEN_Pos: u32 = 0;
pub const RCC_AHB1SMENR_DMA1SMEN_Msk: u32 = 0x1 << RCC_AHB1SMENR_DMA1SMEN_Pos;
pub const RCC_AHB1SMENR_DMA1SMEN: u32 = RCC_AHB1SMENR_DMA1SMEN_Msk;
pub const RCC_AHB1SMENR_DMA2SMEN_Pos: u32 = 1;
pub const RCC_AHB1SMENR_DMA2SMEN_Msk: u32 = 0x1 << RCC_AHB1SMENR_DMA2SMEN_Pos;
pub const RCC_AHB1SMENR_DMA2SMEN: u32 = RCC_AHB1SMENR_DMA2SMEN_Msk;
pub const RCC_AHB1SMENR_DMAMUX1SMEN_Pos: u32 = 2;
pub const RCC_AHB1SMENR_DMAMUX1SMEN_Msk: u32 = 0x1 << RCC_AHB1SMENR_DMAMUX1SMEN_Pos;
pub const RCC_AHB1SMENR_DMAMUX1SMEN: u32 = RCC_AHB1SMENR_DMAMUX1SMEN_Msk;
pub const RCC_AHB1SMENR_CORDICSMEN_Pos: u32 = 3;
pub const RCC_AHB1SMENR_CORDICSMEN_Msk: u32 = 0x1 << RCC_AHB1SMENR_CORDICSMEN_Pos;
pub const RCC_AHB1SMENR_CORDICSMEN: u32 = RCC_AHB1SMENR_CORDICSMEN_Msk;
pub const RCC_AHB1SMENR_FMACSMEN_Pos: u32 = 4;
pub const RCC_AHB1SMENR_FMACSMEN_Msk: u32 = 0x1 << RCC_AHB1SMENR_FMACSMEN_Pos;
pub const RCC_AHB1SMENR_FMACSMEN: u32 = RCC_AHB1SMENR_FMACSMEN_Msk;
pub const RCC_AHB1SMENR_FLASHSMEN_Pos: u32 = 8;
pub const RCC_AHB1SMENR_FLASHSMEN_Msk: u32 = 0x1 << RCC_AHB1SMENR_FLASHSMEN_Pos;
pub const RCC_AHB1SMENR_FLASHSMEN: u32 = RCC_AHB1SMENR_FLASHSMEN_Msk;
pub const RCC_AHB1SMENR_SRAM1SMEN_Pos: u32 = 9;
pub const RCC_AHB1SMENR_SRAM1SMEN_Msk: u32 = 0x1 << RCC_AHB1SMENR_SRAM1SMEN_Pos;
pub const RCC_AHB1SMENR_SRAM1SMEN: u32 = RCC_AHB1SMENR_SRAM1SMEN_Msk;
pub const RCC_AHB1SMENR_CRCSMEN_Pos: u32 = 12;
pub const RCC_AHB1SMENR_CRCSMEN_Msk: u32 = 0x1 << RCC_AHB1SMENR_CRCSMEN_Pos;
pub const RCC_AHB1SMENR_CRCSMEN: u32 = RCC_AHB1SMENR_CRCSMEN_Msk;
pub const RCC_AHB2SMENR_GPIOASMEN_Pos: u32 = 0;
pub const RCC_AHB2SMENR_GPIOASMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_GPIOASMEN_Pos;
pub const RCC_AHB2SMENR_GPIOASMEN: u32 = RCC_AHB2SMENR_GPIOASMEN_Msk;
pub const RCC_AHB2SMENR_GPIOBSMEN_Pos: u32 = 1;
pub const RCC_AHB2SMENR_GPIOBSMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_GPIOBSMEN_Pos;
pub const RCC_AHB2SMENR_GPIOBSMEN: u32 = RCC_AHB2SMENR_GPIOBSMEN_Msk;
pub const RCC_AHB2SMENR_GPIOCSMEN_Pos: u32 = 2;
pub const RCC_AHB2SMENR_GPIOCSMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_GPIOCSMEN_Pos;
pub const RCC_AHB2SMENR_GPIOCSMEN: u32 = RCC_AHB2SMENR_GPIOCSMEN_Msk;
pub const RCC_AHB2SMENR_GPIODSMEN_Pos: u32 = 3;
pub const RCC_AHB2SMENR_GPIODSMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_GPIODSMEN_Pos;
pub const RCC_AHB2SMENR_GPIODSMEN: u32 = RCC_AHB2SMENR_GPIODSMEN_Msk;
pub const RCC_AHB2SMENR_GPIOESMEN_Pos: u32 = 4;
pub const RCC_AHB2SMENR_GPIOESMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_GPIOESMEN_Pos;
pub const RCC_AHB2SMENR_GPIOESMEN: u32 = RCC_AHB2SMENR_GPIOESMEN_Msk;
pub const RCC_AHB2SMENR_GPIOFSMEN_Pos: u32 = 5;
pub const RCC_AHB2SMENR_GPIOFSMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_GPIOFSMEN_Pos;
pub const RCC_AHB2SMENR_GPIOFSMEN: u32 = RCC_AHB2SMENR_GPIOFSMEN_Msk;
pub const RCC_AHB2SMENR_GPIOGSMEN_Pos: u32 = 6;
pub const RCC_AHB2SMENR_GPIOGSMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_GPIOGSMEN_Pos;
pub const RCC_AHB2SMENR_GPIOGSMEN: u32 = RCC_AHB2SMENR_GPIOGSMEN_Msk;
pub const RCC_AHB2SMENR_CCMSRAMSMEN_Pos: u32 = 9;
pub const RCC_AHB2SMENR_CCMSRAMSMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_CCMSRAMSMEN_Pos;
pub const RCC_AHB2SMENR_CCMSRAMSMEN: u32 = RCC_AHB2SMENR_CCMSRAMSMEN_Msk;
pub const RCC_AHB2SMENR_SRAM2SMEN_Pos: u32 = 10;
pub const RCC_AHB2SMENR_SRAM2SMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_SRAM2SMEN_Pos;
pub const RCC_AHB2SMENR_SRAM2SMEN: u32 = RCC_AHB2SMENR_SRAM2SMEN_Msk;
pub const RCC_AHB2SMENR_ADC12SMEN_Pos: u32 = 13;
pub const RCC_AHB2SMENR_ADC12SMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_ADC12SMEN_Pos;
pub const RCC_AHB2SMENR_ADC12SMEN: u32 = RCC_AHB2SMENR_ADC12SMEN_Msk;
pub const RCC_AHB2SMENR_ADC345SMEN_Pos: u32 = 14;
pub const RCC_AHB2SMENR_ADC345SMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_ADC345SMEN_Pos;
pub const RCC_AHB2SMENR_ADC345SMEN: u32 = RCC_AHB2SMENR_ADC345SMEN_Msk;
pub const RCC_AHB2SMENR_DAC1SMEN_Pos: u32 = 16;
pub const RCC_AHB2SMENR_DAC1SMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_DAC1SMEN_Pos;
pub const RCC_AHB2SMENR_DAC1SMEN: u32 = RCC_AHB2SMENR_DAC1SMEN_Msk;
pub const RCC_AHB2SMENR_DAC3SMEN_Pos: u32 = 18;
pub const RCC_AHB2SMENR_DAC3SMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_DAC3SMEN_Pos;
pub const RCC_AHB2SMENR_DAC3SMEN: u32 = RCC_AHB2SMENR_DAC3SMEN_Msk;
pub const RCC_AHB2SMENR_AESSMEN_Pos: u32 = 24;
pub const RCC_AHB2SMENR_AESSMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_AESSMEN_Pos;
pub const RCC_AHB2SMENR_AESSMEN: u32 = RCC_AHB2SMENR_AESSMEN_Msk;
pub const RCC_AHB2SMENR_RNGSMEN_Pos: u32 = 26;
pub const RCC_AHB2SMENR_RNGSMEN_Msk: u32 = 0x1 << RCC_AHB2SMENR_RNGSMEN_Pos;
pub const RCC_AHB2SMENR_RNGSMEN: u32 = RCC_AHB2SMENR_RNGSMEN_Msk;
pub const RCC_AHB3SMENR_QSPISMEN_Pos: u32 = 8;
pub const RCC_AHB3SMENR_QSPISMEN_Msk: u32 = 0x1 << RCC_AHB3SMENR_QSPISMEN_Pos;
pub const RCC_AHB3SMENR_QSPISMEN: u32 = RCC_AHB3SMENR_QSPISMEN_Msk;
pub const RCC_APB1SMENR1_TIM2SMEN_Pos: u32 = 0;
pub const RCC_APB1SMENR1_TIM2SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_TIM2SMEN_Pos;
pub const RCC_APB1SMENR1_TIM2SMEN: u32 = RCC_APB1SMENR1_TIM2SMEN_Msk;
pub const RCC_APB1SMENR1_TIM3SMEN_Pos: u32 = 1;
pub const RCC_APB1SMENR1_TIM3SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_TIM3SMEN_Pos;
pub const RCC_APB1SMENR1_TIM3SMEN: u32 = RCC_APB1SMENR1_TIM3SMEN_Msk;
pub const RCC_APB1SMENR1_TIM4SMEN_Pos: u32 = 2;
pub const RCC_APB1SMENR1_TIM4SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_TIM4SMEN_Pos;
pub const RCC_APB1SMENR1_TIM4SMEN: u32 = RCC_APB1SMENR1_TIM4SMEN_Msk;
pub const RCC_APB1SMENR1_TIM6SMEN_Pos: u32 = 4;
pub const RCC_APB1SMENR1_TIM6SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_TIM6SMEN_Pos;
pub const RCC_APB1SMENR1_TIM6SMEN: u32 = RCC_APB1SMENR1_TIM6SMEN_Msk;
pub const RCC_APB1SMENR1_TIM7SMEN_Pos: u32 = 5;
pub const RCC_APB1SMENR1_TIM7SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_TIM7SMEN_Pos;
pub const RCC_APB1SMENR1_TIM7SMEN: u32 = RCC_APB1SMENR1_TIM7SMEN_Msk;
pub const RCC_APB1SMENR1_CRSSMEN_Pos: u32 = 8;
pub const RCC_APB1SMENR1_CRSSMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_CRSSMEN_Pos;
pub const RCC_APB1SMENR1_CRSSMEN: u32 = RCC_APB1SMENR1_CRSSMEN_Msk;
pub const RCC_APB1SMENR1_RTCAPBSMEN_Pos: u32 = 10;
pub const RCC_APB1SMENR1_RTCAPBSMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_RTCAPBSMEN_Pos;
pub const RCC_APB1SMENR1_RTCAPBSMEN: u32 = RCC_APB1SMENR1_RTCAPBSMEN_Msk;
pub const RCC_APB1SMENR1_WWDGSMEN_Pos: u32 = 11;
pub const RCC_APB1SMENR1_WWDGSMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_WWDGSMEN_Pos;
pub const RCC_APB1SMENR1_WWDGSMEN: u32 = RCC_APB1SMENR1_WWDGSMEN_Msk;
pub const RCC_APB1SMENR1_SPI2SMEN_Pos: u32 = 14;
pub const RCC_APB1SMENR1_SPI2SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_SPI2SMEN_Pos;
pub const RCC_APB1SMENR1_SPI2SMEN: u32 = RCC_APB1SMENR1_SPI2SMEN_Msk;
pub const RCC_APB1SMENR1_SPI3SMEN_Pos: u32 = 15;
pub const RCC_APB1SMENR1_SPI3SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_SPI3SMEN_Pos;
pub const RCC_APB1SMENR1_SPI3SMEN: u32 = RCC_APB1SMENR1_SPI3SMEN_Msk;
pub const RCC_APB1SMENR1_USART2SMEN_Pos: u32 = 17;
pub const RCC_APB1SMENR1_USART2SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_USART2SMEN_Pos;
pub const RCC_APB1SMENR1_USART2SMEN: u32 = RCC_APB1SMENR1_USART2SMEN_Msk;
pub const RCC_APB1SMENR1_USART3SMEN_Pos: u32 = 18;
pub const RCC_APB1SMENR1_USART3SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_USART3SMEN_Pos;
pub const RCC_APB1SMENR1_USART3SMEN: u32 = RCC_APB1SMENR1_USART3SMEN_Msk;
pub const RCC_APB1SMENR1_UART4SMEN_Pos: u32 = 19;
pub const RCC_APB1SMENR1_UART4SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_UART4SMEN_Pos;
pub const RCC_APB1SMENR1_UART4SMEN: u32 = RCC_APB1SMENR1_UART4SMEN_Msk;
pub const RCC_APB1SMENR1_UART5SMEN_Pos: u32 = 20;
pub const RCC_APB1SMENR1_UART5SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_UART5SMEN_Pos;
pub const RCC_APB1SMENR1_UART5SMEN: u32 = RCC_APB1SMENR1_UART5SMEN_Msk;
pub const RCC_APB1SMENR1_I2C1SMEN_Pos: u32 = 21;
pub const RCC_APB1SMENR1_I2C1SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_I2C1SMEN_Pos;
pub const RCC_APB1SMENR1_I2C1SMEN: u32 = RCC_APB1SMENR1_I2C1SMEN_Msk;
pub const RCC_APB1SMENR1_I2C2SMEN_Pos: u32 = 22;
pub const RCC_APB1SMENR1_I2C2SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_I2C2SMEN_Pos;
pub const RCC_APB1SMENR1_I2C2SMEN: u32 = RCC_APB1SMENR1_I2C2SMEN_Msk;
pub const RCC_APB1SMENR1_USBSMEN_Pos: u32 = 23;
pub const RCC_APB1SMENR1_USBSMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_USBSMEN_Pos;
pub const RCC_APB1SMENR1_USBSMEN: u32 = RCC_APB1SMENR1_USBSMEN_Msk;
pub const RCC_APB1SMENR1_FDCANSMEN_Pos: u32 = 25;
pub const RCC_APB1SMENR1_FDCANSMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_FDCANSMEN_Pos;
pub const RCC_APB1SMENR1_FDCANSMEN: u32 = RCC_APB1SMENR1_FDCANSMEN_Msk;
pub const RCC_APB1SMENR1_PWRSMEN_Pos: u32 = 28;
pub const RCC_APB1SMENR1_PWRSMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_PWRSMEN_Pos;
pub const RCC_APB1SMENR1_PWRSMEN: u32 = RCC_APB1SMENR1_PWRSMEN_Msk;
pub const RCC_APB1SMENR1_I2C3SMEN_Pos: u32 = 30;
pub const RCC_APB1SMENR1_I2C3SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_I2C3SMEN_Pos;
pub const RCC_APB1SMENR1_I2C3SMEN: u32 = RCC_APB1SMENR1_I2C3SMEN_Msk;
pub const RCC_APB1SMENR1_LPTIM1SMEN_Pos: u32 = 31;
pub const RCC_APB1SMENR1_LPTIM1SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR1_LPTIM1SMEN_Pos;
pub const RCC_APB1SMENR1_LPTIM1SMEN: u32 = RCC_APB1SMENR1_LPTIM1SMEN_Msk;
pub const RCC_APB1SMENR2_LPUART1SMEN_Pos: u32 = 0;
pub const RCC_APB1SMENR2_LPUART1SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR2_LPUART1SMEN_Pos;
pub const RCC_APB1SMENR2_LPUART1SMEN: u32 = RCC_APB1SMENR2_LPUART1SMEN_Msk;
pub const RCC_APB1SMENR2_UCPD1SMEN_Pos: u32 = 8;
pub const RCC_APB1SMENR2_UCPD1SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR2_UCPD1SMEN_Pos;
pub const RCC_APB1SMENR2_UCPD1SMEN: u32 = RCC_APB1SMENR2_UCPD1SMEN_Msk;
pub const RCC_APB2SMENR_SYSCFGSMEN_Pos: u32 = 0;
pub const RCC_APB2SMENR_SYSCFGSMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_SYSCFGSMEN_Pos;
pub const RCC_APB2SMENR_SYSCFGSMEN: u32 = RCC_APB2SMENR_SYSCFGSMEN_Msk;
pub const RCC_APB2SMENR_TIM1SMEN_Pos: u32 = 11;
pub const RCC_APB2SMENR_TIM1SMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_TIM1SMEN_Pos;
pub const RCC_APB2SMENR_TIM1SMEN: u32 = RCC_APB2SMENR_TIM1SMEN_Msk;
pub const RCC_APB2SMENR_SPI1SMEN_Pos: u32 = 12;
pub const RCC_APB2SMENR_SPI1SMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_SPI1SMEN_Pos;
pub const RCC_APB2SMENR_SPI1SMEN: u32 = RCC_APB2SMENR_SPI1SMEN_Msk;
pub const RCC_APB2SMENR_TIM8SMEN_Pos: u32 = 13;
pub const RCC_APB2SMENR_TIM8SMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_TIM8SMEN_Pos;
pub const RCC_APB2SMENR_TIM8SMEN: u32 = RCC_APB2SMENR_TIM8SMEN_Msk;
pub const RCC_APB2SMENR_USART1SMEN_Pos: u32 = 14;
pub const RCC_APB2SMENR_USART1SMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_USART1SMEN_Pos;
pub const RCC_APB2SMENR_USART1SMEN: u32 = RCC_APB2SMENR_USART1SMEN_Msk;
pub const RCC_APB2SMENR_TIM15SMEN_Pos: u32 = 16;
pub const RCC_APB2SMENR_TIM15SMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_TIM15SMEN_Pos;
pub const RCC_APB2SMENR_TIM15SMEN: u32 = RCC_APB2SMENR_TIM15SMEN_Msk;
pub const RCC_APB2SMENR_TIM16SMEN_Pos: u32 = 17;
pub const RCC_APB2SMENR_TIM16SMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_TIM16SMEN_Pos;
pub const RCC_APB2SMENR_TIM16SMEN: u32 = RCC_APB2SMENR_TIM16SMEN_Msk;
pub const RCC_APB2SMENR_TIM17SMEN_Pos: u32 = 18;
pub const RCC_APB2SMENR_TIM17SMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_TIM17SMEN_Pos;
pub const RCC_APB2SMENR_TIM17SMEN: u32 = RCC_APB2SMENR_TIM17SMEN_Msk;
pub const RCC_APB2SMENR_TIM20SMEN_Pos: u32 = 20;
pub const RCC_APB2SMENR_TIM20SMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_TIM20SMEN_Pos;
pub const RCC_APB2SMENR_TIM20SMEN: u32 = RCC_APB2SMENR_TIM20SMEN_Msk;
pub const RCC_APB2SMENR_SAI1SMEN_Pos: u32 = 21;
pub const RCC_APB2SMENR_SAI1SMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_SAI1SMEN_Pos;
pub const RCC_APB2SMENR_SAI1SMEN: u32 = RCC_APB2SMENR_SAI1SMEN_Msk;
pub const RCC_CCIPR_USART1SEL_Pos: u32 = 0;
pub const RCC_CCIPR_USART1SEL_Msk: u32 = 0x3 << RCC_CCIPR_USART1SEL_Pos;
pub const RCC_CCIPR_USART1SEL: u32 = RCC_CCIPR_USART1SEL_Msk;
pub const RCC_CCIPR_USART1SEL_0: u32 = 0x1 << RCC_CCIPR_USART1SEL_Pos;
pub const RCC_CCIPR_USART1SEL_1: u32 = 0x2 << RCC_CCIPR_USART1SEL_Pos;
pub const RCC_CCIPR_USART2SEL_Pos: u32 = 2;
pub const RCC_CCIPR_USART2SEL_Msk: u32 = 0x3 << RCC_CCIPR_USART2SEL_Pos;
pub const RCC_CCIPR_USART2SEL: u32 = RCC_CCIPR_USART2SEL_Msk;
pub const RCC_CCIPR_USART2SEL_0: u32 = 0x1 << RCC_CCIPR_USART2SEL_Pos;
pub const RCC_CCIPR_USART2SEL_1: u32 = 0x2 << RCC_CCIPR_USART2SEL_Pos;
pub const RCC_CCIPR_USART3SEL_Pos: u32 = 4;
pub const RCC_CCIPR_USART3SEL_Msk: u32 = 0x3 << RCC_CCIPR_USART3SEL_Pos;
pub const RCC_CCIPR_USART3SEL: u32 = RCC_CCIPR_USART3SEL_Msk;
pub const RCC_CCIPR_USART3SEL_0: u32 = 0x1 << RCC_CCIPR_USART3SEL_Pos;
pub const RCC_CCIPR_USART3SEL_1: u32 = 0x2 << RCC_CCIPR_USART3SEL_Pos;
pub const RCC_CCIPR_UART4SEL_Pos: u32 = 6;
pub const RCC_CCIPR_UART4SEL_Msk: u32 = 0x3 << RCC_CCIPR_UART4SEL_Pos;
pub const RCC_CCIPR_UART4SEL: u32 = RCC_CCIPR_UART4SEL_Msk;
pub const RCC_CCIPR_UART4SEL_0: u32 = 0x1 << RCC_CCIPR_UART4SEL_Pos;
pub const RCC_CCIPR_UART4SEL_1: u32 = 0x2 << RCC_CCIPR_UART4SEL_Pos;
pub const RCC_CCIPR_UART5SEL_Pos: u32 = 8;
pub const RCC_CCIPR_UART5SEL_Msk: u32 = 0x3 << RCC_CCIPR_UART5SEL_Pos;
pub const RCC_CCIPR_UART5SEL: u32 = RCC_CCIPR_UART5SEL_Msk;
pub const RCC_CCIPR_UART5SEL_0: u32 = 0x1 << RCC_CCIPR_UART5SEL_Pos;
pub const RCC_CCIPR_UART5SEL_1: u32 = 0x2 << RCC_CCIPR_UART5SEL_Pos;
pub const RCC_CCIPR_LPUART1SEL_Pos: u32 = 10;
pub const RCC_CCIPR_LPUART1SEL_Msk: u32 = 0x3 << RCC_CCIPR_LPUART1SEL_Pos;
pub const RCC_CCIPR_LPUART1SEL: u32 = RCC_CCIPR_LPUART1SEL_Msk;
pub const RCC_CCIPR_LPUART1SEL_0: u32 = 0x1 << RCC_CCIPR_LPUART1SEL_Pos;
pub const RCC_CCIPR_LPUART1SEL_1: u32 = 0x2 << RCC_CCIPR_LPUART1SEL_Pos;
pub const RCC_CCIPR_I2C1SEL_Pos: u32 = 12;
pub const RCC_CCIPR_I2C1SEL_Msk: u32 = 0x3 << RCC_CCIPR_I2C1SEL_Pos;
pub const RCC_CCIPR_I2C1SEL: u32 = RCC_CCIPR_I2C1SEL_Msk;
pub const RCC_CCIPR_I2C1SEL_0: u32 = 0x1 << RCC_CCIPR_I2C1SEL_Pos;
pub const RCC_CCIPR_I2C1SEL_1: u32 = 0x2 << RCC_CCIPR_I2C1SEL_Pos;
pub const RCC_CCIPR_I2C2SEL_Pos: u32 = 14;
pub const RCC_CCIPR_I2C2SEL_Msk: u32 = 0x3 << RCC_CCIPR_I2C2SEL_Pos;
pub const RCC_CCIPR_I2C2SEL: u32 = RCC_CCIPR_I2C2SEL_Msk;
pub const RCC_CCIPR_I2C2SEL_0: u32 = 0x1 << RCC_CCIPR_I2C2SEL_Pos;
pub const RCC_CCIPR_I2C2SEL_1: u32 = 0x2 << RCC_CCIPR_I2C2SEL_Pos;
pub const RCC_CCIPR_I2C3SEL_Pos: u32 = 16;
pub const RCC_CCIPR_I2C3SEL_Msk: u32 = 0x3 << RCC_CCIPR_I2C3SEL_Pos;
pub const RCC_CCIPR_I2C3SEL: u32 = RCC_CCIPR_I2C3SEL_Msk;
pub const RCC_CCIPR_I2C3SEL_0: u32 = 0x1 << RCC_CCIPR_I2C3SEL_Pos;
pub const RCC_CCIPR_I2C3SEL_1: u32 = 0x2 << RCC_CCIPR_I2C3SEL_Pos;
pub const RCC_CCIPR_LPTIM1SEL_Pos: u32 = 18;
pub const RCC_CCIPR_LPTIM1SEL_Msk: u32 = 0x3 << RCC_CCIPR_LPTIM1SEL_Pos;
pub const RCC_CCIPR_LPTIM1SEL: u32 = RCC_CCIPR_LPTIM1SEL_Msk;
pub const RCC_CCIPR_LPTIM1SEL_0: u32 = 0x1 << RCC_CCIPR_LPTIM1SEL_Pos;
pub const RCC_CCIPR_LPTIM1SEL_1: u32 = 0x2 << RCC_CCIPR_LPTIM1SEL_Pos;
pub const RCC_CCIPR_SAI1SEL_Pos: u32 = 20;
pub const RCC_CCIPR_SAI1SEL_Msk: u32 = 0x3 << RCC_CCIPR_SAI1SEL_Pos;
pub const RCC_CCIPR_SAI1SEL: u32 = RCC_CCIPR_SAI1SEL_Msk;
pub const RCC_CCIPR_SAI1SEL_0: u32 = 0x1 << RCC_CCIPR_SAI1SEL_Pos;
pub const RCC_CCIPR_SAI1SEL_1: u32 = 0x2 << RCC_CCIPR_SAI1SEL_Pos;
pub const RCC_CCIPR_I2S23SEL_Pos: u32 = 22;
pub const RCC_CCIPR_I2S23SEL_Msk: u32 = 0x3 << RCC_CCIPR_I2S23SEL_Pos;
pub const RCC_CCIPR_I2S23SEL: u32 = RCC_CCIPR_I2S23SEL_Msk;
pub const RCC_CCIPR_I2S23SEL_0: u32 = 0x1 << RCC_CCIPR_I2S23SEL_Pos;
pub const RCC_CCIPR_I2S23SEL_1: u32 = 0x2 << RCC_CCIPR_I2S23SEL_Pos;
pub const RCC_CCIPR_FDCANSEL_Pos: u32 = 24;
pub const RCC_CCIPR_FDCANSEL_Msk: u32 = 0x3 << RCC_CCIPR_FDCANSEL_Pos;
pub const RCC_CCIPR_FDCANSEL: u32 = RCC_CCIPR_FDCANSEL_Msk;
pub const RCC_CCIPR_FDCANSEL_0: u32 = 0x1 << RCC_CCIPR_FDCANSEL_Pos;
pub const RCC_CCIPR_FDCANSEL_1: u32 = 0x2 << RCC_CCIPR_FDCANSEL_Pos;
pub const RCC_CCIPR_CLK48SEL_Pos: u32 = 26;
pub const RCC_CCIPR_CLK48SEL_Msk: u32 = 0x3 << RCC_CCIPR_CLK48SEL_Pos;
pub const RCC_CCIPR_CLK48SEL: u32 = RCC_CCIPR_CLK48SEL_Msk;
pub const RCC_CCIPR_CLK48SEL_0: u32 = 0x1 << RCC_CCIPR_CLK48SEL_Pos;
pub const RCC_CCIPR_CLK48SEL_1: u32 = 0x2 << RCC_CCIPR_CLK48SEL_Pos;
pub const RCC_CCIPR_ADC12SEL_Pos: u32 = 28;
pub const RCC_CCIPR_ADC12SEL_Msk: u32 = 0x3 << RCC_CCIPR_ADC12SEL_Pos;
pub const RCC_CCIPR_ADC12SEL: u32 = RCC_CCIPR_ADC12SEL_Msk;
pub const RCC_CCIPR_ADC12SEL_0: u32 = 0x1 << RCC_CCIPR_ADC12SEL_Pos;
pub const RCC_CCIPR_ADC12SEL_1: u32 = 0x2 << RCC_CCIPR_ADC12SEL_Pos;
pub const RCC_CCIPR_ADC345SEL_Pos: u32 = 30;
pub const RCC_CCIPR_ADC345SEL_Msk: u32 = 0x3 << RCC_CCIPR_ADC345SEL_Pos;
pub const RCC_CCIPR_ADC345SEL: u32 = RCC_CCIPR_ADC345SEL_Msk;
pub const RCC_CCIPR_ADC345SEL_0: u32 = 0x1 << RCC_CCIPR_ADC345SEL_Pos;
pub const RCC_CCIPR_ADC345SEL_1: u32 = 0x2 << RCC_CCIPR_ADC345SEL_Pos;
pub const RCC_BDCR_LSEON_Pos: u32 = 0;
pub const RCC_BDCR_LSEON_Msk: u32 = 0x1 << RCC_BDCR_LSEON_Pos;
pub const RCC_BDCR_LSEON: u32 = RCC_BDCR_LSEON_Msk;
pub const RCC_BDCR_LSERDY_Pos: u32 = 1;
pub const RCC_BDCR_LSERDY_Msk: u32 = 0x1 << RCC_BDCR_LSERDY_Pos;
pub const RCC_BDCR_LSERDY: u32 = RCC_BDCR_LSERDY_Msk;
pub const RCC_BDCR_LSEBYP_Pos: u32 = 2;
pub const RCC_BDCR_LSEBYP_Msk: u32 = 0x1 << RCC_BDCR_LSEBYP_Pos;
pub const RCC_BDCR_LSEBYP: u32 = RCC_BDCR_LSEBYP_Msk;
pub const RCC_BDCR_LSEDRV_Pos: u32 = 3;
pub const RCC_BDCR_LSEDRV_Msk: u32 = 0x3 << RCC_BDCR_LSEDRV_Pos;
pub const RCC_BDCR_LSEDRV: u32 = RCC_BDCR_LSEDRV_Msk;
pub const RCC_BDCR_LSEDRV_0: u32 = 0x1 << RCC_BDCR_LSEDRV_Pos;
pub const RCC_BDCR_LSEDRV_1: u32 = 0x2 << RCC_BDCR_LSEDRV_Pos;
pub const RCC_BDCR_LSECSSON_Pos: u32 = 5;
pub const RCC_BDCR_LSECSSON_Msk: u32 = 0x1 << RCC_BDCR_LSECSSON_Pos;
pub const RCC_BDCR_LSECSSON: u32 = RCC_BDCR_LSECSSON_Msk;
pub const RCC_BDCR_LSECSSD_Pos: u32 = 6;
pub const RCC_BDCR_LSECSSD_Msk: u32 = 0x1 << RCC_BDCR_LSECSSD_Pos;
pub const RCC_BDCR_LSECSSD: u32 = RCC_BDCR_LSECSSD_Msk;
pub const RCC_BDCR_RTCSEL_Pos: u32 = 8;
pub const RCC_BDCR_RTCSEL_Msk: u32 = 0x3 << RCC_BDCR_RTCSEL_Pos;
pub const RCC_BDCR_RTCSEL: u32 = RCC_BDCR_RTCSEL_Msk;
pub const RCC_BDCR_RTCSEL_0: u32 = 0x1 << RCC_BDCR_RTCSEL_Pos;
pub const RCC_BDCR_RTCSEL_1: u32 = 0x2 << RCC_BDCR_RTCSEL_Pos;
pub const RCC_BDCR_RTCEN_Pos: u32 = 15;
pub const RCC_BDCR_RTCEN_Msk: u32 = 0x1 << RCC_BDCR_RTCEN_Pos;
pub const RCC_BDCR_RTCEN: u32 = RCC_BDCR_RTCEN_Msk;
pub const RCC_BDCR_BDRST_Pos: u32 = 16;
pub const RCC_BDCR_BDRST_Msk: u32 = 0x1 << RCC_BDCR_BDRST_Pos;
pub const RCC_BDCR_BDRST: u32 = RCC_BDCR_BDRST_Msk;
pub const RCC_BDCR_LSCOEN_Pos: u32 = 24;
pub const RCC_BDCR_LSCOEN_Msk: u32 = 0x1 << RCC_BDCR_LSCOEN_Pos;
pub const RCC_BDCR_LSCOEN: u32 = RCC_BDCR_LSCOEN_Msk;
pub const RCC_BDCR_LSCOSEL_Pos: u32 = 25;
pub const RCC_BDCR_LSCOSEL_Msk: u32 = 0x1 << RCC_BDCR_LSCOSEL_Pos;
pub const RCC_BDCR_LSCOSEL: u32 = RCC_BDCR_LSCOSEL_Msk;
pub const RCC_CSR_LSION_Pos: u32 = 0;
pub const RCC_CSR_LSION_Msk: u32 = 0x1 << RCC_CSR_LSION_Pos;
pub const RCC_CSR_LSION: u32 = RCC_CSR_LSION_Msk;
pub const RCC_CSR_LSIRDY_Pos: u32 = 1;
pub const RCC_CSR_LSIRDY_Msk: u32 = 0x1 << RCC_CSR_LSIRDY_Pos;
pub const RCC_CSR_LSIRDY: u32 = RCC_CSR_LSIRDY_Msk;
pub const RCC_CSR_RMVF_Pos: u32 = 23;
pub const RCC_CSR_RMVF_Msk: u32 = 0x1 << RCC_CSR_RMVF_Pos;
pub const RCC_CSR_RMVF: u32 = RCC_CSR_RMVF_Msk;
pub const RCC_CSR_OBLRSTF_Pos: u32 = 25;
pub const RCC_CSR_OBLRSTF_Msk: u32 = 0x1 << RCC_CSR_OBLRSTF_Pos;
pub const RCC_CSR_OBLRSTF: u32 = RCC_CSR_OBLRSTF_Msk;
pub const RCC_CSR_PINRSTF_Pos: u32 = 26;
pub const RCC_CSR_PINRSTF_Msk: u32 = 0x1 << RCC_CSR_PINRSTF_Pos;
pub const RCC_CSR_PINRSTF: u32 = RCC_CSR_PINRSTF_Msk;
pub const RCC_CSR_BORRSTF_Pos: u32 = 27;
pub const RCC_CSR_BORRSTF_Msk: u32 = 0x1 << RCC_CSR_BORRSTF_Pos;
pub const RCC_CSR_BORRSTF: u32 = RCC_CSR_BORRSTF_Msk;
pub const RCC_CSR_SFTRSTF_Pos: u32 = 28;
pub const RCC_CSR_SFTRSTF_Msk: u32 = 0x1 << RCC_CSR_SFTRSTF_Pos;
pub const RCC_CSR_SFTRSTF: u32 = RCC_CSR_SFTRSTF_Msk;
pub const RCC_CSR_IWDGRSTF_Pos: u32 = 29;
pub const RCC_CSR_IWDGRSTF_Msk: u32 = 0x1 << RCC_CSR_IWDGRSTF_Pos;
pub const RCC_CSR_IWDGRSTF: u32 = RCC_CSR_IWDGRSTF_Msk;
pub const RCC_CSR_WWDGRSTF_Pos: u32 = 30;
pub const RCC_CSR_WWDGRSTF_Msk: u32 = 0x1 << RCC_CSR_WWDGRSTF_Pos;
pub const RCC_CSR_WWDGRSTF: u32 = RCC_CSR_WWDGRSTF_Msk;
pub const RCC_CSR_LPWRRSTF_Pos: u32 = 31;
pub const RCC_CSR_LPWRRSTF_Msk: u32 = 0x1 << RCC_CSR_LPWRRSTF_Pos;
pub const RCC_CSR_LPWRRSTF: u32 = RCC_CSR_LPWRRSTF_Msk;
pub const RCC_CRRCR_HSI48ON_Pos: u32 = 0;
pub const RCC_CRRCR_HSI48ON_Msk: u32 = 0x1 << RCC_CRRCR_HSI48ON_Pos;
pub const RCC_CRRCR_HSI48ON: u32 = RCC_CRRCR_HSI48ON_Msk;
pub const RCC_CRRCR_HSI48RDY_Pos: u32 = 1;
pub const RCC_CRRCR_HSI48RDY_Msk: u32 = 0x1 << RCC_CRRCR_HSI48RDY_Pos;
pub const RCC_CRRCR_HSI48RDY: u32 = RCC_CRRCR_HSI48RDY_Msk;
pub const RCC_CRRCR_HSI48CAL_Pos: u32 = 7;
pub const RCC_CRRCR_HSI48CAL_Msk: u32 = 0x1FF << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL: u32 = RCC_CRRCR_HSI48CAL_Msk;
pub const RCC_CRRCR_HSI48CAL_0: u32 = 0x001 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL_1: u32 = 0x002 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL_2: u32 = 0x004 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL_3: u32 = 0x008 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL_4: u32 = 0x010 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL_5: u32 = 0x020 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL_6: u32 = 0x040 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL_7: u32 = 0x080 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL_8: u32 = 0x100 << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CCIPR2_QSPISEL_Pos: u32 = 20;
pub const RCC_CCIPR2_QSPISEL_Msk: u32 = 0x3 << RCC_CCIPR2_QSPISEL_Pos;
pub const RCC_CCIPR2_QSPISEL: u32 = RCC_CCIPR2_QSPISEL_Msk;
pub const RCC_CCIPR2_QSPISEL_0: u32 = 0x1 << RCC_CCIPR2_QSPISEL_Pos;
pub const RCC_CCIPR2_QSPISEL_1: u32 = 0x2 << RCC_CCIPR2_QSPISEL_Pos;
pub const RNG_CR_RNGEN_Pos: u32 = 2;
pub const RNG_CR_RNGEN_Msk: u32 = 0x1 << RNG_CR_RNGEN_Pos;
pub const RNG_CR_RNGEN: u32 = RNG_CR_RNGEN_Msk;
pub const RNG_CR_IE_Pos: u32 = 3;
pub const RNG_CR_IE_Msk: u32 = 0x1 << RNG_CR_IE_Pos;
pub const RNG_CR_IE: u32 = RNG_CR_IE_Msk;
pub const RNG_CR_CED_Pos: u32 = 5;
pub const RNG_CR_CED_Msk: u32 = 0x1 << RNG_CR_IE_Pos;
pub const RNG_CR_CED: u32 = RNG_CR_IE_Msk;
pub const RNG_SR_DRDY_Pos: u32 = 0;
pub const RNG_SR_DRDY_Msk: u32 = 0x1 << RNG_SR_DRDY_Pos;
pub const RNG_SR_DRDY: u32 = RNG_SR_DRDY_Msk;
pub const RNG_SR_CECS_Pos: u32 = 1;
pub const RNG_SR_CECS_Msk: u32 = 0x1 << RNG_SR_CECS_Pos;
pub const RNG_SR_CECS: u32 = RNG_SR_CECS_Msk;
pub const RNG_SR_SECS_Pos: u32 = 2;
pub const RNG_SR_SECS_Msk: u32 = 0x1 << RNG_SR_SECS_Pos;
pub const RNG_SR_SECS: u32 = RNG_SR_SECS_Msk;
pub const RNG_SR_CEIS_Pos: u32 = 5;
pub const RNG_SR_CEIS_Msk: u32 = 0x1 << RNG_SR_CEIS_Pos;
pub const RNG_SR_CEIS: u32 = RNG_SR_CEIS_Msk;
pub const RNG_SR_SEIS_Pos: u32 = 6;
pub const RNG_SR_SEIS_Msk: u32 = 0x1 << RNG_SR_SEIS_Pos;
pub const RNG_SR_SEIS: u32 = RNG_SR_SEIS_Msk;
pub const RTC_TR_PM_Pos: u32 = 22;
pub const RTC_TR_PM_Msk: u32 = 0x1 << RTC_TR_PM_Pos;
pub const RTC_TR_PM: u32 = RTC_TR_PM_Msk;
pub const RTC_TR_HT_Pos: u32 = 20;
pub const RTC_TR_HT_Msk: u32 = 0x3 << RTC_TR_HT_Pos;
pub const RTC_TR_HT: u32 = RTC_TR_HT_Msk;
pub const RTC_TR_HT_0: u32 = 0x1 << RTC_TR_HT_Pos;
pub const RTC_TR_HT_1: u32 = 0x2 << RTC_TR_HT_Pos;
pub const RTC_TR_HU_Pos: u32 = 16;
pub const RTC_TR_HU_Msk: u32 = 0xF << RTC_TR_HU_Pos;
pub const RTC_TR_HU: u32 = RTC_TR_HU_Msk;
pub const RTC_TR_HU_0: u32 = 0x1 << RTC_TR_HU_Pos;
pub const RTC_TR_HU_1: u32 = 0x2 << RTC_TR_HU_Pos;
pub const RTC_TR_HU_2: u32 = 0x4 << RTC_TR_HU_Pos;
pub const RTC_TR_HU_3: u32 = 0x8 << RTC_TR_HU_Pos;
pub const RTC_TR_MNT_Pos: u32 = 12;
pub const RTC_TR_MNT_Msk: u32 = 0x7 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNT: u32 = RTC_TR_MNT_Msk;
pub const RTC_TR_MNT_0: u32 = 0x1 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNT_1: u32 = 0x2 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNT_2: u32 = 0x4 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNU_Pos: u32 = 8;
pub const RTC_TR_MNU_Msk: u32 = 0xF << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU: u32 = RTC_TR_MNU_Msk;
pub const RTC_TR_MNU_0: u32 = 0x1 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU_1: u32 = 0x2 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU_2: u32 = 0x4 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU_3: u32 = 0x8 << RTC_TR_MNU_Pos;
pub const RTC_TR_ST_Pos: u32 = 4;
pub const RTC_TR_ST_Msk: u32 = 0x7 << RTC_TR_ST_Pos;
pub const RTC_TR_ST: u32 = RTC_TR_ST_Msk;
pub const RTC_TR_ST_0: u32 = 0x1 << RTC_TR_ST_Pos;
pub const RTC_TR_ST_1: u32 = 0x2 << RTC_TR_ST_Pos;
pub const RTC_TR_ST_2: u32 = 0x4 << RTC_TR_ST_Pos;
pub const RTC_TR_SU_Pos: u32 = 0;
pub const RTC_TR_SU_Msk: u32 = 0xF << RTC_TR_SU_Pos;
pub const RTC_TR_SU: u32 = RTC_TR_SU_Msk;
pub const RTC_TR_SU_0: u32 = 0x1 << RTC_TR_SU_Pos;
pub const RTC_TR_SU_1: u32 = 0x2 << RTC_TR_SU_Pos;
pub const RTC_TR_SU_2: u32 = 0x4 << RTC_TR_SU_Pos;
pub const RTC_TR_SU_3: u32 = 0x8 << RTC_TR_SU_Pos;
pub const RTC_DR_YT_Pos: u32 = 20;
pub const RTC_DR_YT_Msk: u32 = 0xF << RTC_DR_YT_Pos;
pub const RTC_DR_YT: u32 = RTC_DR_YT_Msk;
pub const RTC_DR_YT_0: u32 = 0x1 << RTC_DR_YT_Pos;
pub const RTC_DR_YT_1: u32 = 0x2 << RTC_DR_YT_Pos;
pub const RTC_DR_YT_2: u32 = 0x4 << RTC_DR_YT_Pos;
pub const RTC_DR_YT_3: u32 = 0x8 << RTC_DR_YT_Pos;
pub const RTC_DR_YU_Pos: u32 = 16;
pub const RTC_DR_YU_Msk: u32 = 0xF << RTC_DR_YU_Pos;
pub const RTC_DR_YU: u32 = RTC_DR_YU_Msk;
pub const RTC_DR_YU_0: u32 = 0x1 << RTC_DR_YU_Pos;
pub const RTC_DR_YU_1: u32 = 0x2 << RTC_DR_YU_Pos;
pub const RTC_DR_YU_2: u32 = 0x4 << RTC_DR_YU_Pos;
pub const RTC_DR_YU_3: u32 = 0x8 << RTC_DR_YU_Pos;
pub const RTC_DR_WDU_Pos: u32 = 13;
pub const RTC_DR_WDU_Msk: u32 = 0x7 << RTC_DR_WDU_Pos;
pub const RTC_DR_WDU: u32 = RTC_DR_WDU_Msk;
pub const RTC_DR_WDU_0: u32 = 0x1 << RTC_DR_WDU_Pos;
pub const RTC_DR_WDU_1: u32 = 0x2 << RTC_DR_WDU_Pos;
pub const RTC_DR_WDU_2: u32 = 0x4 << RTC_DR_WDU_Pos;
pub const RTC_DR_MT_Pos: u32 = 12;
pub const RTC_DR_MT_Msk: u32 = 0x1 << RTC_DR_MT_Pos;
pub const RTC_DR_MT: u32 = RTC_DR_MT_Msk;
pub const RTC_DR_MU_Pos: u32 = 8;
pub const RTC_DR_MU_Msk: u32 = 0xF << RTC_DR_MU_Pos;
pub const RTC_DR_MU: u32 = RTC_DR_MU_Msk;
pub const RTC_DR_MU_0: u32 = 0x1 << RTC_DR_MU_Pos;
pub const RTC_DR_MU_1: u32 = 0x2 << RTC_DR_MU_Pos;
pub const RTC_DR_MU_2: u32 = 0x4 << RTC_DR_MU_Pos;
pub const RTC_DR_MU_3: u32 = 0x8 << RTC_DR_MU_Pos;
pub const RTC_DR_DT_Pos: u32 = 4;
pub const RTC_DR_DT_Msk: u32 = 0x3 << RTC_DR_DT_Pos;
pub const RTC_DR_DT: u32 = RTC_DR_DT_Msk;
pub const RTC_DR_DT_0: u32 = 0x1 << RTC_DR_DT_Pos;
pub const RTC_DR_DT_1: u32 = 0x2 << RTC_DR_DT_Pos;
pub const RTC_DR_DU_Pos: u32 = 0;
pub const RTC_DR_DU_Msk: u32 = 0xF << RTC_DR_DU_Pos;
pub const RTC_DR_DU: u32 = RTC_DR_DU_Msk;
pub const RTC_DR_DU_0: u32 = 0x1 << RTC_DR_DU_Pos;
pub const RTC_DR_DU_1: u32 = 0x2 << RTC_DR_DU_Pos;
pub const RTC_DR_DU_2: u32 = 0x4 << RTC_DR_DU_Pos;
pub const RTC_DR_DU_3: u32 = 0x8 << RTC_DR_DU_Pos;
pub const RTC_SSR_SS_Pos: u32 = 0;
pub const RTC_SSR_SS_Msk: u32 = 0xFFFF << RTC_SSR_SS_Pos;
pub const RTC_SSR_SS: u32 = RTC_SSR_SS_Msk;
pub const RTC_ICSR_RECALPF_Pos: u32 = 16;
pub const RTC_ICSR_RECALPF_Msk: u32 = 0x1 << RTC_ICSR_RECALPF_Pos;
pub const RTC_ICSR_RECALPF: u32 = RTC_ICSR_RECALPF_Msk;
pub const RTC_ICSR_INIT_Pos: u32 = 7;
pub const RTC_ICSR_INIT_Msk: u32 = 0x1 << RTC_ICSR_INIT_Pos;
pub const RTC_ICSR_INIT: u32 = RTC_ICSR_INIT_Msk;
pub const RTC_ICSR_INITF_Pos: u32 = 6;
pub const RTC_ICSR_INITF_Msk: u32 = 0x1 << RTC_ICSR_INITF_Pos;
pub const RTC_ICSR_INITF: u32 = RTC_ICSR_INITF_Msk;
pub const RTC_ICSR_RSF_Pos: u32 = 5;
pub const RTC_ICSR_RSF_Msk: u32 = 0x1 << RTC_ICSR_RSF_Pos;
pub const RTC_ICSR_RSF: u32 = RTC_ICSR_RSF_Msk;
pub const RTC_ICSR_INITS_Pos: u32 = 4;
pub const RTC_ICSR_INITS_Msk: u32 = 0x1 << RTC_ICSR_INITS_Pos;
pub const RTC_ICSR_INITS: u32 = RTC_ICSR_INITS_Msk;
pub const RTC_ICSR_SHPF_Pos: u32 = 3;
pub const RTC_ICSR_SHPF_Msk: u32 = 0x1 << RTC_ICSR_SHPF_Pos;
pub const RTC_ICSR_SHPF: u32 = RTC_ICSR_SHPF_Msk;
pub const RTC_ICSR_WUTWF_Pos: u32 = 2;
pub const RTC_ICSR_WUTWF_Msk: u32 = 0x1 << RTC_ICSR_WUTWF_Pos;
pub const RTC_ICSR_WUTWF: u32 = RTC_ICSR_WUTWF_Msk;
pub const RTC_ICSR_ALRBWF_Pos: u32 = 1;
pub const RTC_ICSR_ALRBWF_Msk: u32 = 0x1 << RTC_ICSR_ALRBWF_Pos;
pub const RTC_ICSR_ALRBWF: u32 = RTC_ICSR_ALRBWF_Msk;
pub const RTC_ICSR_ALRAWF_Pos: u32 = 0;
pub const RTC_ICSR_ALRAWF_Msk: u32 = 0x1 << RTC_ICSR_ALRAWF_Pos;
pub const RTC_ICSR_ALRAWF: u32 = RTC_ICSR_ALRAWF_Msk;
pub const RTC_PRER_PREDIV_A_Pos: u32 = 16;
pub const RTC_PRER_PREDIV_A_Msk: u32 = 0x7F << RTC_PRER_PREDIV_A_Pos;
pub const RTC_PRER_PREDIV_A: u32 = RTC_PRER_PREDIV_A_Msk;
pub const RTC_PRER_PREDIV_S_Pos: u32 = 0;
pub const RTC_PRER_PREDIV_S_Msk: u32 = 0x7FFF << RTC_PRER_PREDIV_S_Pos;
pub const RTC_PRER_PREDIV_S: u32 = RTC_PRER_PREDIV_S_Msk;
pub const RTC_WUTR_WUT_Pos: u32 = 0;
pub const RTC_WUTR_WUT_Msk: u32 = 0xFFFF << RTC_WUTR_WUT_Pos;
pub const RTC_WUTR_WUT: u32 = RTC_WUTR_WUT_Msk;
pub const RTC_CR_OUT2EN_Pos: u32 = 31;
pub const RTC_CR_OUT2EN_Msk: u32 = 0x1 << RTC_CR_OUT2EN_Pos;
pub const RTC_CR_OUT2EN: u32 = RTC_CR_OUT2EN_Msk;
pub const RTC_CR_TAMPALRM_TYPE_Pos: u32 = 30;
pub const RTC_CR_TAMPALRM_TYPE_Msk: u32 = 0x1 << RTC_CR_TAMPALRM_TYPE_Pos;
pub const RTC_CR_TAMPALRM_TYPE: u32 = RTC_CR_TAMPALRM_TYPE_Msk;
pub const RTC_CR_TAMPALRM_PU_Pos: u32 = 29;
pub const RTC_CR_TAMPALRM_PU_Msk: u32 = 0x1 << RTC_CR_TAMPALRM_PU_Pos;
pub const RTC_CR_TAMPALRM_PU: u32 = RTC_CR_TAMPALRM_PU_Msk;
pub const RTC_CR_TAMPOE_Pos: u32 = 26;
pub const RTC_CR_TAMPOE_Msk: u32 = 0x1 << RTC_CR_TAMPOE_Pos;
pub const RTC_CR_TAMPOE: u32 = RTC_CR_TAMPOE_Msk;
pub const RTC_CR_TAMPTS_Pos: u32 = 25;
pub const RTC_CR_TAMPTS_Msk: u32 = 0x1 << RTC_CR_TAMPTS_Pos;
pub const RTC_CR_TAMPTS: u32 = RTC_CR_TAMPTS_Msk;
pub const RTC_CR_ITSE_Pos: u32 = 24;
pub const RTC_CR_ITSE_Msk: u32 = 0x1 << RTC_CR_ITSE_Pos;
pub const RTC_CR_ITSE: u32 = RTC_CR_ITSE_Msk;
pub const RTC_CR_COE_Pos: u32 = 23;
pub const RTC_CR_COE_Msk: u32 = 0x1 << RTC_CR_COE_Pos;
pub const RTC_CR_COE: u32 = RTC_CR_COE_Msk;
pub const RTC_CR_OSEL_Pos: u32 = 21;
pub const RTC_CR_OSEL_Msk: u32 = 0x3 << RTC_CR_OSEL_Pos;
pub const RTC_CR_OSEL: u32 = RTC_CR_OSEL_Msk;
pub const RTC_CR_OSEL_0: u32 = 0x1 << RTC_CR_OSEL_Pos;
pub const RTC_CR_OSEL_1: u32 = 0x2 << RTC_CR_OSEL_Pos;
pub const RTC_CR_POL_Pos: u32 = 20;
pub const RTC_CR_POL_Msk: u32 = 0x1 << RTC_CR_POL_Pos;
pub const RTC_CR_POL: u32 = RTC_CR_POL_Msk;
pub const RTC_CR_COSEL_Pos: u32 = 19;
pub const RTC_CR_COSEL_Msk: u32 = 0x1 << RTC_CR_COSEL_Pos;
pub const RTC_CR_COSEL: u32 = RTC_CR_COSEL_Msk;
pub const RTC_CR_BKP_Pos: u32 = 18;
pub const RTC_CR_BKP_Msk: u32 = 0x1 << RTC_CR_BKP_Pos;
pub const RTC_CR_BKP: u32 = RTC_CR_BKP_Msk;
pub const RTC_CR_SUB1H_Pos: u32 = 17;
pub const RTC_CR_SUB1H_Msk: u32 = 0x1 << RTC_CR_SUB1H_Pos;
pub const RTC_CR_SUB1H: u32 = RTC_CR_SUB1H_Msk;
pub const RTC_CR_ADD1H_Pos: u32 = 16;
pub const RTC_CR_ADD1H_Msk: u32 = 0x1 << RTC_CR_ADD1H_Pos;
pub const RTC_CR_ADD1H: u32 = RTC_CR_ADD1H_Msk;
pub const RTC_CR_TSIE_Pos: u32 = 15;
pub const RTC_CR_TSIE_Msk: u32 = 0x1 << RTC_CR_TSIE_Pos;
pub const RTC_CR_TSIE: u32 = RTC_CR_TSIE_Msk;
pub const RTC_CR_WUTIE_Pos: u32 = 14;
pub const RTC_CR_WUTIE_Msk: u32 = 0x1 << RTC_CR_WUTIE_Pos;
pub const RTC_CR_WUTIE: u32 = RTC_CR_WUTIE_Msk;
pub const RTC_CR_ALRBIE_Pos: u32 = 13;
pub const RTC_CR_ALRBIE_Msk: u32 = 0x1 << RTC_CR_ALRBIE_Pos;
pub const RTC_CR_ALRBIE: u32 = RTC_CR_ALRBIE_Msk;
pub const RTC_CR_ALRAIE_Pos: u32 = 12;
pub const RTC_CR_ALRAIE_Msk: u32 = 0x1 << RTC_CR_ALRAIE_Pos;
pub const RTC_CR_ALRAIE: u32 = RTC_CR_ALRAIE_Msk;
pub const RTC_CR_TSE_Pos: u32 = 11;
pub const RTC_CR_TSE_Msk: u32 = 0x1 << RTC_CR_TSE_Pos;
pub const RTC_CR_TSE: u32 = RTC_CR_TSE_Msk;
pub const RTC_CR_WUTE_Pos: u32 = 10;
pub const RTC_CR_WUTE_Msk: u32 = 0x1 << RTC_CR_WUTE_Pos;
pub const RTC_CR_WUTE: u32 = RTC_CR_WUTE_Msk;
pub const RTC_CR_ALRBE_Pos: u32 = 9;
pub const RTC_CR_ALRBE_Msk: u32 = 0x1 << RTC_CR_ALRBE_Pos;
pub const RTC_CR_ALRBE: u32 = RTC_CR_ALRBE_Msk;
pub const RTC_CR_ALRAE_Pos: u32 = 8;
pub const RTC_CR_ALRAE_Msk: u32 = 0x1 << RTC_CR_ALRAE_Pos;
pub const RTC_CR_ALRAE: u32 = RTC_CR_ALRAE_Msk;
pub const RTC_CR_FMT_Pos: u32 = 6;
pub const RTC_CR_FMT_Msk: u32 = 0x1 << RTC_CR_FMT_Pos;
pub const RTC_CR_FMT: u32 = RTC_CR_FMT_Msk;
pub const RTC_CR_BYPSHAD_Pos: u32 = 5;
pub const RTC_CR_BYPSHAD_Msk: u32 = 0x1 << RTC_CR_BYPSHAD_Pos;
pub const RTC_CR_BYPSHAD: u32 = RTC_CR_BYPSHAD_Msk;
pub const RTC_CR_REFCKON_Pos: u32 = 4;
pub const RTC_CR_REFCKON_Msk: u32 = 0x1 << RTC_CR_REFCKON_Pos;
pub const RTC_CR_REFCKON: u32 = RTC_CR_REFCKON_Msk;
pub const RTC_CR_TSEDGE_Pos: u32 = 3;
pub const RTC_CR_TSEDGE_Msk: u32 = 0x1 << RTC_CR_TSEDGE_Pos;
pub const RTC_CR_TSEDGE: u32 = RTC_CR_TSEDGE_Msk;
pub const RTC_CR_WUCKSEL_Pos: u32 = 0;
pub const RTC_CR_WUCKSEL_Msk: u32 = 0x7 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_WUCKSEL: u32 = RTC_CR_WUCKSEL_Msk;
pub const RTC_CR_WUCKSEL_0: u32 = 0x1 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_WUCKSEL_1: u32 = 0x2 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_WUCKSEL_2: u32 = 0x4 << RTC_CR_WUCKSEL_Pos;
pub const RTC_WPR_KEY_Pos: u32 = 0;
pub const RTC_WPR_KEY_Msk: u32 = 0xFF << RTC_WPR_KEY_Pos;
pub const RTC_WPR_KEY: u32 = RTC_WPR_KEY_Msk;
pub const RTC_CALR_CALP_Pos: u32 = 15;
pub const RTC_CALR_CALP_Msk: u32 = 0x1 << RTC_CALR_CALP_Pos;
pub const RTC_CALR_CALP: u32 = RTC_CALR_CALP_Msk;
pub const RTC_CALR_CALW8_Pos: u32 = 14;
pub const RTC_CALR_CALW8_Msk: u32 = 0x1 << RTC_CALR_CALW8_Pos;
pub const RTC_CALR_CALW8: u32 = RTC_CALR_CALW8_Msk;
pub const RTC_CALR_CALW16_Pos: u32 = 13;
pub const RTC_CALR_CALW16_Msk: u32 = 0x1 << RTC_CALR_CALW16_Pos;
pub const RTC_CALR_CALW16: u32 = RTC_CALR_CALW16_Msk;
pub const RTC_CALR_CALM_Pos: u32 = 0;
pub const RTC_CALR_CALM_Msk: u32 = 0x1FF << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM: u32 = RTC_CALR_CALM_Msk;
pub const RTC_CALR_CALM_0: u32 = 0x001 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_1: u32 = 0x002 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_2: u32 = 0x004 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_3: u32 = 0x008 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_4: u32 = 0x010 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_5: u32 = 0x020 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_6: u32 = 0x040 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_7: u32 = 0x080 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_8: u32 = 0x100 << RTC_CALR_CALM_Pos;
pub const RTC_SHIFTR_SUBFS_Pos: u32 = 0;
pub const RTC_SHIFTR_SUBFS_Msk: u32 = 0x7FFF << RTC_SHIFTR_SUBFS_Pos;
pub const RTC_SHIFTR_SUBFS: u32 = RTC_SHIFTR_SUBFS_Msk;
pub const RTC_SHIFTR_ADD1S_Pos: u32 = 31;
pub const RTC_SHIFTR_ADD1S_Msk: u32 = 0x1 << RTC_SHIFTR_ADD1S_Pos;
pub const RTC_SHIFTR_ADD1S: u32 = RTC_SHIFTR_ADD1S_Msk;
pub const RTC_TSTR_PM_Pos: u32 = 22;
pub const RTC_TSTR_PM_Msk: u32 = 0x1 << RTC_TSTR_PM_Pos;
pub const RTC_TSTR_PM: u32 = RTC_TSTR_PM_Msk;
pub const RTC_TSTR_HT_Pos: u32 = 20;
pub const RTC_TSTR_HT_Msk: u32 = 0x3 << RTC_TSTR_HT_Pos;
pub const RTC_TSTR_HT: u32 = RTC_TSTR_HT_Msk;
pub const RTC_TSTR_HT_0: u32 = 0x1 << RTC_TSTR_HT_Pos;
pub const RTC_TSTR_HT_1: u32 = 0x2 << RTC_TSTR_HT_Pos;
pub const RTC_TSTR_HU_Pos: u32 = 16;
pub const RTC_TSTR_HU_Msk: u32 = 0xF << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU: u32 = RTC_TSTR_HU_Msk;
pub const RTC_TSTR_HU_0: u32 = 0x1 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU_1: u32 = 0x2 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU_2: u32 = 0x4 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU_3: u32 = 0x8 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_MNT_Pos: u32 = 12;
pub const RTC_TSTR_MNT_Msk: u32 = 0x7 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNT: u32 = RTC_TSTR_MNT_Msk;
pub const RTC_TSTR_MNT_0: u32 = 0x1 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNT_1: u32 = 0x2 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNT_2: u32 = 0x4 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNU_Pos: u32 = 8;
pub const RTC_TSTR_MNU_Msk: u32 = 0xF << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU: u32 = RTC_TSTR_MNU_Msk;
pub const RTC_TSTR_MNU_0: u32 = 0x1 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU_1: u32 = 0x2 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU_2: u32 = 0x4 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU_3: u32 = 0x8 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_ST_Pos: u32 = 4;
pub const RTC_TSTR_ST_Msk: u32 = 0x7 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_ST: u32 = RTC_TSTR_ST_Msk;
pub const RTC_TSTR_ST_0: u32 = 0x1 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_ST_1: u32 = 0x2 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_ST_2: u32 = 0x4 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_SU_Pos: u32 = 0;
pub const RTC_TSTR_SU_Msk: u32 = 0xF << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU: u32 = RTC_TSTR_SU_Msk;
pub const RTC_TSTR_SU_0: u32 = 0x1 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU_1: u32 = 0x2 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU_2: u32 = 0x4 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU_3: u32 = 0x8 << RTC_TSTR_SU_Pos;
pub const RTC_TSDR_WDU_Pos: u32 = 13;
pub const RTC_TSDR_WDU_Msk: u32 = 0x7 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_WDU: u32 = RTC_TSDR_WDU_Msk;
pub const RTC_TSDR_WDU_0: u32 = 0x1 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_WDU_1: u32 = 0x2 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_WDU_2: u32 = 0x4 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_MT_Pos: u32 = 12;
pub const RTC_TSDR_MT_Msk: u32 = 0x1 << RTC_TSDR_MT_Pos;
pub const RTC_TSDR_MT: u32 = RTC_TSDR_MT_Msk;
pub const RTC_TSDR_MU_Pos: u32 = 8;
pub const RTC_TSDR_MU_Msk: u32 = 0xF << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU: u32 = RTC_TSDR_MU_Msk;
pub const RTC_TSDR_MU_0: u32 = 0x1 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU_1: u32 = 0x2 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU_2: u32 = 0x4 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU_3: u32 = 0x8 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_DT_Pos: u32 = 4;
pub const RTC_TSDR_DT_Msk: u32 = 0x3 << RTC_TSDR_DT_Pos;
pub const RTC_TSDR_DT: u32 = RTC_TSDR_DT_Msk;
pub const RTC_TSDR_DT_0: u32 = 0x1 << RTC_TSDR_DT_Pos;
pub const RTC_TSDR_DT_1: u32 = 0x2 << RTC_TSDR_DT_Pos;
pub const RTC_TSDR_DU_Pos: u32 = 0;
pub const RTC_TSDR_DU_Msk: u32 = 0xF << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU: u32 = RTC_TSDR_DU_Msk;
pub const RTC_TSDR_DU_0: u32 = 0x1 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU_1: u32 = 0x2 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU_2: u32 = 0x4 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU_3: u32 = 0x8 << RTC_TSDR_DU_Pos;
pub const RTC_TSSSR_SS_Pos: u32 = 0;
pub const RTC_TSSSR_SS_Msk: u32 = 0xFFFF << RTC_TSSSR_SS_Pos;
pub const RTC_TSSSR_SS: u32 = RTC_TSSSR_SS_Msk;
pub const RTC_ALRMAR_MSK4_Pos: u32 = 31;
pub const RTC_ALRMAR_MSK4_Msk: u32 = 0x1 << RTC_ALRMAR_MSK4_Pos;
pub const RTC_ALRMAR_MSK4: u32 = RTC_ALRMAR_MSK4_Msk;
pub const RTC_ALRMAR_WDSEL_Pos: u32 = 30;
pub const RTC_ALRMAR_WDSEL_Msk: u32 = 0x1 << RTC_ALRMAR_WDSEL_Pos;
pub const RTC_ALRMAR_WDSEL: u32 = RTC_ALRMAR_WDSEL_Msk;
pub const RTC_ALRMAR_DT_Pos: u32 = 28;
pub const RTC_ALRMAR_DT_Msk: u32 = 0x3 << RTC_ALRMAR_DT_Pos;
pub const RTC_ALRMAR_DT: u32 = RTC_ALRMAR_DT_Msk;
pub const RTC_ALRMAR_DT_0: u32 = 0x1 << RTC_ALRMAR_DT_Pos;
pub const RTC_ALRMAR_DT_1: u32 = 0x2 << RTC_ALRMAR_DT_Pos;
pub const RTC_ALRMAR_DU_Pos: u32 = 24;
pub const RTC_ALRMAR_DU_Msk: u32 = 0xF << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU: u32 = RTC_ALRMAR_DU_Msk;
pub const RTC_ALRMAR_DU_0: u32 = 0x1 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU_1: u32 = 0x2 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU_2: u32 = 0x4 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU_3: u32 = 0x8 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_MSK3_Pos: u32 = 23;
pub const RTC_ALRMAR_MSK3_Msk: u32 = 0x1 << RTC_ALRMAR_MSK3_Pos;
pub const RTC_ALRMAR_MSK3: u32 = RTC_ALRMAR_MSK3_Msk;
pub const RTC_ALRMAR_PM_Pos: u32 = 22;
pub const RTC_ALRMAR_PM_Msk: u32 = 0x1 << RTC_ALRMAR_PM_Pos;
pub const RTC_ALRMAR_PM: u32 = RTC_ALRMAR_PM_Msk;
pub const RTC_ALRMAR_HT_Pos: u32 = 20;
pub const RTC_ALRMAR_HT_Msk: u32 = 0x3 << RTC_ALRMAR_HT_Pos;
pub const RTC_ALRMAR_HT: u32 = RTC_ALRMAR_HT_Msk;
pub const RTC_ALRMAR_HT_0: u32 = 0x1 << RTC_ALRMAR_HT_Pos;
pub const RTC_ALRMAR_HT_1: u32 = 0x2 << RTC_ALRMAR_HT_Pos;
pub const RTC_ALRMAR_HU_Pos: u32 = 16;
pub const RTC_ALRMAR_HU_Msk: u32 = 0xF << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU: u32 = RTC_ALRMAR_HU_Msk;
pub const RTC_ALRMAR_HU_0: u32 = 0x1 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU_1: u32 = 0x2 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU_2: u32 = 0x4 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU_3: u32 = 0x8 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_MSK2_Pos: u32 = 15;
pub const RTC_ALRMAR_MSK2_Msk: u32 = 0x1 << RTC_ALRMAR_MSK2_Pos;
pub const RTC_ALRMAR_MSK2: u32 = RTC_ALRMAR_MSK2_Msk;
pub const RTC_ALRMAR_MNT_Pos: u32 = 12;
pub const RTC_ALRMAR_MNT_Msk: u32 = 0x7 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNT: u32 = RTC_ALRMAR_MNT_Msk;
pub const RTC_ALRMAR_MNT_0: u32 = 0x1 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNT_1: u32 = 0x2 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNT_2: u32 = 0x4 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNU_Pos: u32 = 8;
pub const RTC_ALRMAR_MNU_Msk: u32 = 0xF << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU: u32 = RTC_ALRMAR_MNU_Msk;
pub const RTC_ALRMAR_MNU_0: u32 = 0x1 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU_1: u32 = 0x2 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU_2: u32 = 0x4 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU_3: u32 = 0x8 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MSK1_Pos: u32 = 7;
pub const RTC_ALRMAR_MSK1_Msk: u32 = 0x1 << RTC_ALRMAR_MSK1_Pos;
pub const RTC_ALRMAR_MSK1: u32 = RTC_ALRMAR_MSK1_Msk;
pub const RTC_ALRMAR_ST_Pos: u32 = 4;
pub const RTC_ALRMAR_ST_Msk: u32 = 0x7 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_ST: u32 = RTC_ALRMAR_ST_Msk;
pub const RTC_ALRMAR_ST_0: u32 = 0x1 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_ST_1: u32 = 0x2 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_ST_2: u32 = 0x4 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_SU_Pos: u32 = 0;
pub const RTC_ALRMAR_SU_Msk: u32 = 0xF << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU: u32 = RTC_ALRMAR_SU_Msk;
pub const RTC_ALRMAR_SU_0: u32 = 0x1 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU_1: u32 = 0x2 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU_2: u32 = 0x4 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU_3: u32 = 0x8 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMASSR_MASKSS_Pos: u32 = 24;
pub const RTC_ALRMASSR_MASKSS_Msk: u32 = 0xF << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS: u32 = RTC_ALRMASSR_MASKSS_Msk;
pub const RTC_ALRMASSR_MASKSS_0: u32 = 0x1 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_1: u32 = 0x2 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_2: u32 = 0x4 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_3: u32 = 0x8 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_SS_Pos: u32 = 0;
pub const RTC_ALRMASSR_SS_Msk: u32 = 0x7FFF << RTC_ALRMASSR_SS_Pos;
pub const RTC_ALRMASSR_SS: u32 = RTC_ALRMASSR_SS_Msk;
pub const RTC_ALRMBR_MSK4_Pos: u32 = 31;
pub const RTC_ALRMBR_MSK4_Msk: u32 = 0x1 << RTC_ALRMBR_MSK4_Pos;
pub const RTC_ALRMBR_MSK4: u32 = RTC_ALRMBR_MSK4_Msk;
pub const RTC_ALRMBR_WDSEL_Pos: u32 = 30;
pub const RTC_ALRMBR_WDSEL_Msk: u32 = 0x1 << RTC_ALRMBR_WDSEL_Pos;
pub const RTC_ALRMBR_WDSEL: u32 = RTC_ALRMBR_WDSEL_Msk;
pub const RTC_ALRMBR_DT_Pos: u32 = 28;
pub const RTC_ALRMBR_DT_Msk: u32 = 0x3 << RTC_ALRMBR_DT_Pos;
pub const RTC_ALRMBR_DT: u32 = RTC_ALRMBR_DT_Msk;
pub const RTC_ALRMBR_DT_0: u32 = 0x1 << RTC_ALRMBR_DT_Pos;
pub const RTC_ALRMBR_DT_1: u32 = 0x2 << RTC_ALRMBR_DT_Pos;
pub const RTC_ALRMBR_DU_Pos: u32 = 24;
pub const RTC_ALRMBR_DU_Msk: u32 = 0xF << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU: u32 = RTC_ALRMBR_DU_Msk;
pub const RTC_ALRMBR_DU_0: u32 = 0x1 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU_1: u32 = 0x2 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU_2: u32 = 0x4 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU_3: u32 = 0x8 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_MSK3_Pos: u32 = 23;
pub const RTC_ALRMBR_MSK3_Msk: u32 = 0x1 << RTC_ALRMBR_MSK3_Pos;
pub const RTC_ALRMBR_MSK3: u32 = RTC_ALRMBR_MSK3_Msk;
pub const RTC_ALRMBR_PM_Pos: u32 = 22;
pub const RTC_ALRMBR_PM_Msk: u32 = 0x1 << RTC_ALRMBR_PM_Pos;
pub const RTC_ALRMBR_PM: u32 = RTC_ALRMBR_PM_Msk;
pub const RTC_ALRMBR_HT_Pos: u32 = 20;
pub const RTC_ALRMBR_HT_Msk: u32 = 0x3 << RTC_ALRMBR_HT_Pos;
pub const RTC_ALRMBR_HT: u32 = RTC_ALRMBR_HT_Msk;
pub const RTC_ALRMBR_HT_0: u32 = 0x1 << RTC_ALRMBR_HT_Pos;
pub const RTC_ALRMBR_HT_1: u32 = 0x2 << RTC_ALRMBR_HT_Pos;
pub const RTC_ALRMBR_HU_Pos: u32 = 16;
pub const RTC_ALRMBR_HU_Msk: u32 = 0xF << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU: u32 = RTC_ALRMBR_HU_Msk;
pub const RTC_ALRMBR_HU_0: u32 = 0x1 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU_1: u32 = 0x2 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU_2: u32 = 0x4 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU_3: u32 = 0x8 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_MSK2_Pos: u32 = 15;
pub const RTC_ALRMBR_MSK2_Msk: u32 = 0x1 << RTC_ALRMBR_MSK2_Pos;
pub const RTC_ALRMBR_MSK2: u32 = RTC_ALRMBR_MSK2_Msk;
pub const RTC_ALRMBR_MNT_Pos: u32 = 12;
pub const RTC_ALRMBR_MNT_Msk: u32 = 0x7 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNT: u32 = RTC_ALRMBR_MNT_Msk;
pub const RTC_ALRMBR_MNT_0: u32 = 0x1 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNT_1: u32 = 0x2 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNT_2: u32 = 0x4 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNU_Pos: u32 = 8;
pub const RTC_ALRMBR_MNU_Msk: u32 = 0xF << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU: u32 = RTC_ALRMBR_MNU_Msk;
pub const RTC_ALRMBR_MNU_0: u32 = 0x1 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU_1: u32 = 0x2 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU_2: u32 = 0x4 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU_3: u32 = 0x8 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MSK1_Pos: u32 = 7;
pub const RTC_ALRMBR_MSK1_Msk: u32 = 0x1 << RTC_ALRMBR_MSK1_Pos;
pub const RTC_ALRMBR_MSK1: u32 = RTC_ALRMBR_MSK1_Msk;
pub const RTC_ALRMBR_ST_Pos: u32 = 4;
pub const RTC_ALRMBR_ST_Msk: u32 = 0x7 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_ST: u32 = RTC_ALRMBR_ST_Msk;
pub const RTC_ALRMBR_ST_0: u32 = 0x1 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_ST_1: u32 = 0x2 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_ST_2: u32 = 0x4 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_SU_Pos: u32 = 0;
pub const RTC_ALRMBR_SU_Msk: u32 = 0xF << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU: u32 = RTC_ALRMBR_SU_Msk;
pub const RTC_ALRMBR_SU_0: u32 = 0x1 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU_1: u32 = 0x2 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU_2: u32 = 0x4 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU_3: u32 = 0x8 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBSSR_MASKSS_Pos: u32 = 24;
pub const RTC_ALRMBSSR_MASKSS_Msk: u32 = 0xF << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS: u32 = RTC_ALRMBSSR_MASKSS_Msk;
pub const RTC_ALRMBSSR_MASKSS_0: u32 = 0x1 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_1: u32 = 0x2 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_2: u32 = 0x4 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_3: u32 = 0x8 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_SS_Pos: u32 = 0;
pub const RTC_ALRMBSSR_SS_Msk: u32 = 0x7FFF << RTC_ALRMBSSR_SS_Pos;
pub const RTC_ALRMBSSR_SS: u32 = RTC_ALRMBSSR_SS_Msk;
pub const RTC_SR_ITSF_Pos: u32 = 5;
pub const RTC_SR_ITSF_Msk: u32 = 0x1 << RTC_SR_ITSF_Pos;
pub const RTC_SR_ITSF: u32 = RTC_SR_ITSF_Msk;
pub const RTC_SR_TSOVF_Pos: u32 = 4;
pub const RTC_SR_TSOVF_Msk: u32 = 0x1 << RTC_SR_TSOVF_Pos;
pub const RTC_SR_TSOVF: u32 = RTC_SR_TSOVF_Msk;
pub const RTC_SR_TSF_Pos: u32 = 3;
pub const RTC_SR_TSF_Msk: u32 = 0x1 << RTC_SR_TSF_Pos;
pub const RTC_SR_TSF: u32 = RTC_SR_TSF_Msk;
pub const RTC_SR_WUTF_Pos: u32 = 2;
pub const RTC_SR_WUTF_Msk: u32 = 0x1 << RTC_SR_WUTF_Pos;
pub const RTC_SR_WUTF: u32 = RTC_SR_WUTF_Msk;
pub const RTC_SR_ALRBF_Pos: u32 = 1;
pub const RTC_SR_ALRBF_Msk: u32 = 0x1 << RTC_SR_ALRBF_Pos;
pub const RTC_SR_ALRBF: u32 = RTC_SR_ALRBF_Msk;
pub const RTC_SR_ALRAF_Pos: u32 = 0;
pub const RTC_SR_ALRAF_Msk: u32 = 0x1 << RTC_SR_ALRAF_Pos;
pub const RTC_SR_ALRAF: u32 = RTC_SR_ALRAF_Msk;
pub const RTC_MISR_ITSMF_Pos: u32 = 5;
pub const RTC_MISR_ITSMF_Msk: u32 = 0x1 << RTC_MISR_ITSMF_Pos;
pub const RTC_MISR_ITSMF: u32 = RTC_MISR_ITSMF_Msk;
pub const RTC_MISR_TSOVMF_Pos: u32 = 4;
pub const RTC_MISR_TSOVMF_Msk: u32 = 0x1 << RTC_MISR_TSOVMF_Pos;
pub const RTC_MISR_TSOVMF: u32 = RTC_MISR_TSOVMF_Msk;
pub const RTC_MISR_TSMF_Pos: u32 = 3;
pub const RTC_MISR_TSMF_Msk: u32 = 0x1 << RTC_MISR_TSMF_Pos;
pub const RTC_MISR_TSMF: u32 = RTC_MISR_TSMF_Msk;
pub const RTC_MISR_WUTMF_Pos: u32 = 2;
pub const RTC_MISR_WUTMF_Msk: u32 = 0x1 << RTC_MISR_WUTMF_Pos;
pub const RTC_MISR_WUTMF: u32 = RTC_MISR_WUTMF_Msk;
pub const RTC_MISR_ALRBMF_Pos: u32 = 1;
pub const RTC_MISR_ALRBMF_Msk: u32 = 0x1 << RTC_MISR_ALRBMF_Pos;
pub const RTC_MISR_ALRBMF: u32 = RTC_MISR_ALRBMF_Msk;
pub const RTC_MISR_ALRAMF_Pos: u32 = 0;
pub const RTC_MISR_ALRAMF_Msk: u32 = 0x1 << RTC_MISR_ALRAMF_Pos;
pub const RTC_MISR_ALRAMF: u32 = RTC_MISR_ALRAMF_Msk;
pub const RTC_SCR_CITSF_Pos: u32 = 5;
pub const RTC_SCR_CITSF_Msk: u32 = 0x1 << RTC_SCR_CITSF_Pos;
pub const RTC_SCR_CITSF: u32 = RTC_SCR_CITSF_Msk;
pub const RTC_SCR_CTSOVF_Pos: u32 = 4;
pub const RTC_SCR_CTSOVF_Msk: u32 = 0x1 << RTC_SCR_CTSOVF_Pos;
pub const RTC_SCR_CTSOVF: u32 = RTC_SCR_CTSOVF_Msk;
pub const RTC_SCR_CTSF_Pos: u32 = 3;
pub const RTC_SCR_CTSF_Msk: u32 = 0x1 << RTC_SCR_CTSF_Pos;
pub const RTC_SCR_CTSF: u32 = RTC_SCR_CTSF_Msk;
pub const RTC_SCR_CWUTF_Pos: u32 = 2;
pub const RTC_SCR_CWUTF_Msk: u32 = 0x1 << RTC_SCR_CWUTF_Pos;
pub const RTC_SCR_CWUTF: u32 = RTC_SCR_CWUTF_Msk;
pub const RTC_SCR_CALRBF_Pos: u32 = 1;
pub const RTC_SCR_CALRBF_Msk: u32 = 0x1 << RTC_SCR_CALRBF_Pos;
pub const RTC_SCR_CALRBF: u32 = RTC_SCR_CALRBF_Msk;
pub const RTC_SCR_CALRAF_Pos: u32 = 0;
pub const RTC_SCR_CALRAF_Msk: u32 = 0x1 << RTC_SCR_CALRAF_Pos;
pub const RTC_SCR_CALRAF: u32 = RTC_SCR_CALRAF_Msk;
pub const TAMP_CR1_TAMP1E_Pos: u32 = 0;
pub const TAMP_CR1_TAMP1E_Msk: u32 = 0x1 << TAMP_CR1_TAMP1E_Pos;
pub const TAMP_CR1_TAMP1E: u32 = TAMP_CR1_TAMP1E_Msk;
pub const TAMP_CR1_TAMP2E_Pos: u32 = 1;
pub const TAMP_CR1_TAMP2E_Msk: u32 = 0x1 << TAMP_CR1_TAMP2E_Pos;
pub const TAMP_CR1_TAMP2E: u32 = TAMP_CR1_TAMP2E_Msk;
pub const TAMP_CR1_TAMP3E_Pos: u32 = 2;
pub const TAMP_CR1_TAMP3E_Msk: u32 = 0x1 << TAMP_CR1_TAMP3E_Pos;
pub const TAMP_CR1_TAMP3E: u32 = TAMP_CR1_TAMP3E_Msk;
pub const TAMP_CR1_ITAMP3E_Pos: u32 = 18;
pub const TAMP_CR1_ITAMP3E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP3E_Pos;
pub const TAMP_CR1_ITAMP3E: u32 = TAMP_CR1_ITAMP3E_Msk;
pub const TAMP_CR1_ITAMP4E_Pos: u32 = 19;
pub const TAMP_CR1_ITAMP4E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP4E_Pos;
pub const TAMP_CR1_ITAMP4E: u32 = TAMP_CR1_ITAMP4E_Msk;
pub const TAMP_CR1_ITAMP5E_Pos: u32 = 20;
pub const TAMP_CR1_ITAMP5E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP5E_Pos;
pub const TAMP_CR1_ITAMP5E: u32 = TAMP_CR1_ITAMP5E_Msk;
pub const TAMP_CR1_ITAMP6E_Pos: u32 = 21;
pub const TAMP_CR1_ITAMP6E_Msk: u32 = 0x1 << TAMP_CR1_ITAMP6E_Pos;
pub const TAMP_CR1_ITAMP6E: u32 = TAMP_CR1_ITAMP6E_Msk;
pub const TAMP_CR2_TAMP1NOERASE_Pos: u32 = 0;
pub const TAMP_CR2_TAMP1NOERASE_Msk: u32 = 0x1 << TAMP_CR2_TAMP1NOERASE_Pos;
pub const TAMP_CR2_TAMP1NOERASE: u32 = TAMP_CR2_TAMP1NOERASE_Msk;
pub const TAMP_CR2_TAMP2NOERASE_Pos: u32 = 1;
pub const TAMP_CR2_TAMP2NOERASE_Msk: u32 = 0x1 << TAMP_CR2_TAMP2NOERASE_Pos;
pub const TAMP_CR2_TAMP2NOERASE: u32 = TAMP_CR2_TAMP2NOERASE_Msk;
pub const TAMP_CR2_TAMP3NOERASE_Pos: u32 = 2;
pub const TAMP_CR2_TAMP3NOERASE_Msk: u32 = 0x1 << TAMP_CR2_TAMP3NOERASE_Pos;
pub const TAMP_CR2_TAMP3NOERASE: u32 = TAMP_CR2_TAMP3NOERASE_Msk;
pub const TAMP_CR2_TAMP1MF_Pos: u32 = 16;
pub const TAMP_CR2_TAMP1MF_Msk: u32 = 0x1 << TAMP_CR2_TAMP1MF_Pos;
pub const TAMP_CR2_TAMP1MF: u32 = TAMP_CR2_TAMP1MF_Msk;
pub const TAMP_CR2_TAMP2MF_Pos: u32 = 17;
pub const TAMP_CR2_TAMP2MF_Msk: u32 = 0x1 << TAMP_CR2_TAMP2MF_Pos;
pub const TAMP_CR2_TAMP2MF: u32 = TAMP_CR2_TAMP2MF_Msk;
pub const TAMP_CR2_TAMP3MF_Pos: u32 = 18;
pub const TAMP_CR2_TAMP3MF_Msk: u32 = 0x1 << TAMP_CR2_TAMP3MF_Pos;
pub const TAMP_CR2_TAMP3MF: u32 = TAMP_CR2_TAMP3MF_Msk;
pub const TAMP_CR2_TAMP1TRG_Pos: u32 = 24;
pub const TAMP_CR2_TAMP1TRG_Msk: u32 = 0x1 << TAMP_CR2_TAMP1TRG_Pos;
pub const TAMP_CR2_TAMP1TRG: u32 = TAMP_CR2_TAMP1TRG_Msk;
pub const TAMP_CR2_TAMP2TRG_Pos: u32 = 25;
pub const TAMP_CR2_TAMP2TRG_Msk: u32 = 0x1 << TAMP_CR2_TAMP2TRG_Pos;
pub const TAMP_CR2_TAMP2TRG: u32 = TAMP_CR2_TAMP2TRG_Msk;
pub const TAMP_CR2_TAMP3TRG_Pos: u32 = 26;
pub const TAMP_CR2_TAMP3TRG_Msk: u32 = 0x1 << TAMP_CR2_TAMP3TRG_Pos;
pub const TAMP_CR2_TAMP3TRG: u32 = TAMP_CR2_TAMP3TRG_Msk;
pub const TAMP_FLTCR_TAMPFREQ_0: u32 = 0x00000001;
pub const TAMP_FLTCR_TAMPFREQ_1: u32 = 0x00000002;
pub const TAMP_FLTCR_TAMPFREQ_2: u32 = 0x00000004;
pub const TAMP_FLTCR_TAMPFREQ_Pos: u32 = 0;
pub const TAMP_FLTCR_TAMPFREQ_Msk: u32 = 0x7 << TAMP_FLTCR_TAMPFREQ_Pos;
pub const TAMP_FLTCR_TAMPFREQ: u32 = TAMP_FLTCR_TAMPFREQ_Msk;
pub const TAMP_FLTCR_TAMPFLT_0: u32 = 0x00000008;
pub const TAMP_FLTCR_TAMPFLT_1: u32 = 0x00000010;
pub const TAMP_FLTCR_TAMPFLT_Pos: u32 = 3;
pub const TAMP_FLTCR_TAMPFLT_Msk: u32 = 0x3 << TAMP_FLTCR_TAMPFLT_Pos;
pub const TAMP_FLTCR_TAMPFLT: u32 = TAMP_FLTCR_TAMPFLT_Msk;
pub const TAMP_FLTCR_TAMPPRCH_0: u32 = 0x00000020;
pub const TAMP_FLTCR_TAMPPRCH_1: u32 = 0x00000040;
pub const TAMP_FLTCR_TAMPPRCH_Pos: u32 = 5;
pub const TAMP_FLTCR_TAMPPRCH_Msk: u32 = 0x3 << TAMP_FLTCR_TAMPPRCH_Pos;
pub const TAMP_FLTCR_TAMPPRCH: u32 = TAMP_FLTCR_TAMPPRCH_Msk;
pub const TAMP_FLTCR_TAMPPUDIS_Pos: u32 = 7;
pub const TAMP_FLTCR_TAMPPUDIS_Msk: u32 = 0x1 << TAMP_FLTCR_TAMPPUDIS_Pos;
pub const TAMP_FLTCR_TAMPPUDIS: u32 = TAMP_FLTCR_TAMPPUDIS_Msk;
pub const TAMP_IER_TAMP1IE_Pos: u32 = 0;
pub const TAMP_IER_TAMP1IE_Msk: u32 = 0x1 << TAMP_IER_TAMP1IE_Pos;
pub const TAMP_IER_TAMP1IE: u32 = TAMP_IER_TAMP1IE_Msk;
pub const TAMP_IER_TAMP2IE_Pos: u32 = 1;
pub const TAMP_IER_TAMP2IE_Msk: u32 = 0x1 << TAMP_IER_TAMP2IE_Pos;
pub const TAMP_IER_TAMP2IE: u32 = TAMP_IER_TAMP2IE_Msk;
pub const TAMP_IER_TAMP3IE_Pos: u32 = 2;
pub const TAMP_IER_TAMP3IE_Msk: u32 = 0x1 << TAMP_IER_TAMP3IE_Pos;
pub const TAMP_IER_TAMP3IE: u32 = TAMP_IER_TAMP3IE_Msk;
pub const TAMP_IER_ITAMP3IE_Pos: u32 = 18;
pub const TAMP_IER_ITAMP3IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP3IE_Pos;
pub const TAMP_IER_ITAMP3IE: u32 = TAMP_IER_ITAMP3IE_Msk;
pub const TAMP_IER_ITAMP4IE_Pos: u32 = 19;
pub const TAMP_IER_ITAMP4IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP4IE_Pos;
pub const TAMP_IER_ITAMP4IE: u32 = TAMP_IER_ITAMP4IE_Msk;
pub const TAMP_IER_ITAMP5IE_Pos: u32 = 20;
pub const TAMP_IER_ITAMP5IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP5IE_Pos;
pub const TAMP_IER_ITAMP5IE: u32 = TAMP_IER_ITAMP5IE_Msk;
pub const TAMP_IER_ITAMP6IE_Pos: u32 = 21;
pub const TAMP_IER_ITAMP6IE_Msk: u32 = 0x1 << TAMP_IER_ITAMP6IE_Pos;
pub const TAMP_IER_ITAMP6IE: u32 = TAMP_IER_ITAMP6IE_Msk;
pub const TAMP_SR_TAMP1F_Pos: u32 = 0;
pub const TAMP_SR_TAMP1F_Msk: u32 = 0x1 << TAMP_SR_TAMP1F_Pos;
pub const TAMP_SR_TAMP1F: u32 = TAMP_SR_TAMP1F_Msk;
pub const TAMP_SR_TAMP2F_Pos: u32 = 1;
pub const TAMP_SR_TAMP2F_Msk: u32 = 0x1 << TAMP_SR_TAMP2F_Pos;
pub const TAMP_SR_TAMP2F: u32 = TAMP_SR_TAMP2F_Msk;
pub const TAMP_SR_TAMP3F_Pos: u32 = 2;
pub const TAMP_SR_TAMP3F_Msk: u32 = 0x1 << TAMP_SR_TAMP3F_Pos;
pub const TAMP_SR_TAMP3F: u32 = TAMP_SR_TAMP3F_Msk;
pub const TAMP_SR_ITAMP3F_Pos: u32 = 18;
pub const TAMP_SR_ITAMP3F_Msk: u32 = 0x1 << TAMP_SR_ITAMP3F_Pos;
pub const TAMP_SR_ITAMP3F: u32 = TAMP_SR_ITAMP3F_Msk;
pub const TAMP_SR_ITAMP4F_Pos: u32 = 19;
pub const TAMP_SR_ITAMP4F_Msk: u32 = 0x1 << TAMP_SR_ITAMP4F_Pos;
pub const TAMP_SR_ITAMP4F: u32 = TAMP_SR_ITAMP4F_Msk;
pub const TAMP_SR_ITAMP5F_Pos: u32 = 20;
pub const TAMP_SR_ITAMP5F_Msk: u32 = 0x1 << TAMP_SR_ITAMP5F_Pos;
pub const TAMP_SR_ITAMP5F: u32 = TAMP_SR_ITAMP5F_Msk;
pub const TAMP_SR_ITAMP6F_Pos: u32 = 21;
pub const TAMP_SR_ITAMP6F_Msk: u32 = 0x1 << TAMP_SR_ITAMP6F_Pos;
pub const TAMP_SR_ITAMP6F: u32 = TAMP_SR_ITAMP6F_Msk;
pub const TAMP_MISR_TAMP1MF_Pos: u32 = 0;
pub const TAMP_MISR_TAMP1MF_Msk: u32 = 0x1 << TAMP_MISR_TAMP1MF_Pos;
pub const TAMP_MISR_TAMP1MF: u32 = TAMP_MISR_TAMP1MF_Msk;
pub const TAMP_MISR_TAMP2MF_Pos: u32 = 1;
pub const TAMP_MISR_TAMP2MF_Msk: u32 = 0x1 << TAMP_MISR_TAMP2MF_Pos;
pub const TAMP_MISR_TAMP2MF: u32 = TAMP_MISR_TAMP2MF_Msk;
pub const TAMP_MISR_TAMP3MF_Pos: u32 = 2;
pub const TAMP_MISR_TAMP3MF_Msk: u32 = 0x1 << TAMP_MISR_TAMP3MF_Pos;
pub const TAMP_MISR_TAMP3MF: u32 = TAMP_MISR_TAMP3MF_Msk;
pub const TAMP_MISR_ITAMP3MF_Pos: u32 = 18;
pub const TAMP_MISR_ITAMP3MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP3MF_Pos;
pub const TAMP_MISR_ITAMP3MF: u32 = TAMP_MISR_ITAMP3MF_Msk;
pub const TAMP_MISR_ITAMP4MF_Pos: u32 = 19;
pub const TAMP_MISR_ITAMP4MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP4MF_Pos;
pub const TAMP_MISR_ITAMP4MF: u32 = TAMP_MISR_ITAMP4MF_Msk;
pub const TAMP_MISR_ITAMP5MF_Pos: u32 = 20;
pub const TAMP_MISR_ITAMP5MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP5MF_Pos;
pub const TAMP_MISR_ITAMP5MF: u32 = TAMP_MISR_ITAMP5MF_Msk;
pub const TAMP_MISR_ITAMP6MF_Pos: u32 = 21;
pub const TAMP_MISR_ITAMP6MF_Msk: u32 = 0x1 << TAMP_MISR_ITAMP6MF_Pos;
pub const TAMP_MISR_ITAMP6MF: u32 = TAMP_MISR_ITAMP6MF_Msk;
pub const TAMP_SCR_CTAMP1F_Pos: u32 = 0;
pub const TAMP_SCR_CTAMP1F_Msk: u32 = 0x1 << TAMP_SCR_CTAMP1F_Pos;
pub const TAMP_SCR_CTAMP1F: u32 = TAMP_SCR_CTAMP1F_Msk;
pub const TAMP_SCR_CTAMP2F_Pos: u32 = 1;
pub const TAMP_SCR_CTAMP2F_Msk: u32 = 0x1 << TAMP_SCR_CTAMP2F_Pos;
pub const TAMP_SCR_CTAMP2F: u32 = TAMP_SCR_CTAMP2F_Msk;
pub const TAMP_SCR_CTAMP3F_Pos: u32 = 2;
pub const TAMP_SCR_CTAMP3F_Msk: u32 = 0x1 << TAMP_SCR_CTAMP3F_Pos;
pub const TAMP_SCR_CTAMP3F: u32 = TAMP_SCR_CTAMP3F_Msk;
pub const TAMP_SCR_CITAMP3F_Pos: u32 = 18;
pub const TAMP_SCR_CITAMP3F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP3F_Pos;
pub const TAMP_SCR_CITAMP3F: u32 = TAMP_SCR_CITAMP3F_Msk;
pub const TAMP_SCR_CITAMP4F_Pos: u32 = 19;
pub const TAMP_SCR_CITAMP4F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP4F_Pos;
pub const TAMP_SCR_CITAMP4F: u32 = TAMP_SCR_CITAMP4F_Msk;
pub const TAMP_SCR_CITAMP5F_Pos: u32 = 20;
pub const TAMP_SCR_CITAMP5F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP5F_Pos;
pub const TAMP_SCR_CITAMP5F: u32 = TAMP_SCR_CITAMP5F_Msk;
pub const TAMP_SCR_CITAMP6F_Pos: u32 = 21;
pub const TAMP_SCR_CITAMP6F_Msk: u32 = 0x1 << TAMP_SCR_CITAMP6F_Pos;
pub const TAMP_SCR_CITAMP6F: u32 = TAMP_SCR_CITAMP6F_Msk;
pub const TAMP_BKP0R_Pos: u32 = 0;
pub const TAMP_BKP0R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP0R_Pos;
pub const TAMP_BKP0R: u32 = TAMP_BKP0R_Msk;
pub const TAMP_BKP1R_Pos: u32 = 0;
pub const TAMP_BKP1R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP1R_Pos;
pub const TAMP_BKP1R: u32 = TAMP_BKP1R_Msk;
pub const TAMP_BKP2R_Pos: u32 = 0;
pub const TAMP_BKP2R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP2R_Pos;
pub const TAMP_BKP2R: u32 = TAMP_BKP2R_Msk;
pub const TAMP_BKP3R_Pos: u32 = 0;
pub const TAMP_BKP3R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP3R_Pos;
pub const TAMP_BKP3R: u32 = TAMP_BKP3R_Msk;
pub const TAMP_BKP4R_Pos: u32 = 0;
pub const TAMP_BKP4R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP4R_Pos;
pub const TAMP_BKP4R: u32 = TAMP_BKP4R_Msk;
pub const TAMP_BKP5R_Pos: u32 = 0;
pub const TAMP_BKP5R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP5R_Pos;
pub const TAMP_BKP5R: u32 = TAMP_BKP5R_Msk;
pub const TAMP_BKP6R_Pos: u32 = 0;
pub const TAMP_BKP6R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP6R_Pos;
pub const TAMP_BKP6R: u32 = TAMP_BKP6R_Msk;
pub const TAMP_BKP7R_Pos: u32 = 0;
pub const TAMP_BKP7R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP7R_Pos;
pub const TAMP_BKP7R: u32 = TAMP_BKP7R_Msk;
pub const TAMP_BKP8R_Pos: u32 = 0;
pub const TAMP_BKP8R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP8R_Pos;
pub const TAMP_BKP8R: u32 = TAMP_BKP8R_Msk;
pub const TAMP_BKP9R_Pos: u32 = 0;
pub const TAMP_BKP9R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP9R_Pos;
pub const TAMP_BKP9R: u32 = TAMP_BKP9R_Msk;
pub const TAMP_BKP10R_Pos: u32 = 0;
pub const TAMP_BKP10R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP10R_Pos;
pub const TAMP_BKP10R: u32 = TAMP_BKP10R_Msk;
pub const TAMP_BKP11R_Pos: u32 = 0;
pub const TAMP_BKP11R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP11R_Pos;
pub const TAMP_BKP11R: u32 = TAMP_BKP11R_Msk;
pub const TAMP_BKP12R_Pos: u32 = 0;
pub const TAMP_BKP12R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP12R_Pos;
pub const TAMP_BKP12R: u32 = TAMP_BKP12R_Msk;
pub const TAMP_BKP13R_Pos: u32 = 0;
pub const TAMP_BKP13R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP13R_Pos;
pub const TAMP_BKP13R: u32 = TAMP_BKP13R_Msk;
pub const TAMP_BKP14R_Pos: u32 = 0;
pub const TAMP_BKP14R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP14R_Pos;
pub const TAMP_BKP14R: u32 = TAMP_BKP14R_Msk;
pub const TAMP_BKP15R_Pos: u32 = 0;
pub const TAMP_BKP15R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP15R_Pos;
pub const TAMP_BKP15R: u32 = TAMP_BKP15R_Msk;
pub const TAMP_BKP16R_Pos: u32 = 0;
pub const TAMP_BKP16R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP16R_Pos;
pub const TAMP_BKP16R: u32 = TAMP_BKP16R_Msk;
pub const TAMP_BKP17R_Pos: u32 = 0;
pub const TAMP_BKP17R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP17R_Pos;
pub const TAMP_BKP17R: u32 = TAMP_BKP17R_Msk;
pub const TAMP_BKP18R_Pos: u32 = 0;
pub const TAMP_BKP18R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP18R_Pos;
pub const TAMP_BKP18R: u32 = TAMP_BKP18R_Msk;
pub const TAMP_BKP19R_Pos: u32 = 0;
pub const TAMP_BKP19R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP19R_Pos;
pub const TAMP_BKP19R: u32 = TAMP_BKP19R_Msk;
pub const TAMP_BKP20R_Pos: u32 = 0;
pub const TAMP_BKP20R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP20R_Pos;
pub const TAMP_BKP20R: u32 = TAMP_BKP20R_Msk;
pub const TAMP_BKP21R_Pos: u32 = 0;
pub const TAMP_BKP21R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP21R_Pos;
pub const TAMP_BKP21R: u32 = TAMP_BKP21R_Msk;
pub const TAMP_BKP22R_Pos: u32 = 0;
pub const TAMP_BKP22R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP22R_Pos;
pub const TAMP_BKP22R: u32 = TAMP_BKP22R_Msk;
pub const TAMP_BKP23R_Pos: u32 = 0;
pub const TAMP_BKP23R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP23R_Pos;
pub const TAMP_BKP23R: u32 = TAMP_BKP23R_Msk;
pub const TAMP_BKP24R_Pos: u32 = 0;
pub const TAMP_BKP24R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP24R_Pos;
pub const TAMP_BKP24R: u32 = TAMP_BKP24R_Msk;
pub const TAMP_BKP25R_Pos: u32 = 0;
pub const TAMP_BKP25R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP25R_Pos;
pub const TAMP_BKP25R: u32 = TAMP_BKP25R_Msk;
pub const TAMP_BKP26R_Pos: u32 = 0;
pub const TAMP_BKP26R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP26R_Pos;
pub const TAMP_BKP26R: u32 = TAMP_BKP26R_Msk;
pub const TAMP_BKP27R_Pos: u32 = 0;
pub const TAMP_BKP27R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP27R_Pos;
pub const TAMP_BKP27R: u32 = TAMP_BKP27R_Msk;
pub const TAMP_BKP28R_Pos: u32 = 0;
pub const TAMP_BKP28R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP28R_Pos;
pub const TAMP_BKP28R: u32 = TAMP_BKP28R_Msk;
pub const TAMP_BKP29R_Pos: u32 = 0;
pub const TAMP_BKP29R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP29R_Pos;
pub const TAMP_BKP29R: u32 = TAMP_BKP29R_Msk;
pub const TAMP_BKP30R_Pos: u32 = 0;
pub const TAMP_BKP30R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP30R_Pos;
pub const TAMP_BKP30R: u32 = TAMP_BKP30R_Msk;
pub const TAMP_BKP31R_Pos: u32 = 0;
pub const TAMP_BKP31R_Msk: u32 = 0xFFFFFFFF << TAMP_BKP31R_Pos;
pub const TAMP_BKP31R: u32 = TAMP_BKP31R_Msk;
pub const SAI_xCR1_MODE_Pos: u32 = 0;
pub const SAI_xCR1_MODE_Msk: u32 = 0x3 << SAI_xCR1_MODE_Pos;
pub const SAI_xCR1_MODE: u32 = SAI_xCR1_MODE_Msk;
pub const SAI_xCR1_MODE_0: u32 = 0x1 << SAI_xCR1_MODE_Pos;
pub const SAI_xCR1_MODE_1: u32 = 0x2 << SAI_xCR1_MODE_Pos;
pub const SAI_xCR1_PRTCFG_Pos: u32 = 2;
pub const SAI_xCR1_PRTCFG_Msk: u32 = 0x3 << SAI_xCR1_PRTCFG_Pos;
pub const SAI_xCR1_PRTCFG: u32 = SAI_xCR1_PRTCFG_Msk;
pub const SAI_xCR1_PRTCFG_0: u32 = 0x1 << SAI_xCR1_PRTCFG_Pos;
pub const SAI_xCR1_PRTCFG_1: u32 = 0x2 << SAI_xCR1_PRTCFG_Pos;
pub const SAI_xCR1_DS_Pos: u32 = 5;
pub const SAI_xCR1_DS_Msk: u32 = 0x7 << SAI_xCR1_DS_Pos;
pub const SAI_xCR1_DS: u32 = SAI_xCR1_DS_Msk;
pub const SAI_xCR1_DS_0: u32 = 0x1 << SAI_xCR1_DS_Pos;
pub const SAI_xCR1_DS_1: u32 = 0x2 << SAI_xCR1_DS_Pos;
pub const SAI_xCR1_DS_2: u32 = 0x4 << SAI_xCR1_DS_Pos;
pub const SAI_xCR1_LSBFIRST_Pos: u32 = 8;
pub const SAI_xCR1_LSBFIRST_Msk: u32 = 0x1 << SAI_xCR1_LSBFIRST_Pos;
pub const SAI_xCR1_LSBFIRST: u32 = SAI_xCR1_LSBFIRST_Msk;
pub const SAI_xCR1_CKSTR_Pos: u32 = 9;
pub const SAI_xCR1_CKSTR_Msk: u32 = 0x1 << SAI_xCR1_CKSTR_Pos;
pub const SAI_xCR1_CKSTR: u32 = SAI_xCR1_CKSTR_Msk;
pub const SAI_xCR1_SYNCEN_Pos: u32 = 10;
pub const SAI_xCR1_SYNCEN_Msk: u32 = 0x3 << SAI_xCR1_SYNCEN_Pos;
pub const SAI_xCR1_SYNCEN: u32 = SAI_xCR1_SYNCEN_Msk;
pub const SAI_xCR1_SYNCEN_0: u32 = 0x1 << SAI_xCR1_SYNCEN_Pos;
pub const SAI_xCR1_SYNCEN_1: u32 = 0x2 << SAI_xCR1_SYNCEN_Pos;
pub const SAI_xCR1_MONO_Pos: u32 = 12;
pub const SAI_xCR1_MONO_Msk: u32 = 0x1 << SAI_xCR1_MONO_Pos;
pub const SAI_xCR1_MONO: u32 = SAI_xCR1_MONO_Msk;
pub const SAI_xCR1_OUTDRIV_Pos: u32 = 13;
pub const SAI_xCR1_OUTDRIV_Msk: u32 = 0x1 << SAI_xCR1_OUTDRIV_Pos;
pub const SAI_xCR1_OUTDRIV: u32 = SAI_xCR1_OUTDRIV_Msk;
pub const SAI_xCR1_SAIEN_Pos: u32 = 16;
pub const SAI_xCR1_SAIEN_Msk: u32 = 0x1 << SAI_xCR1_SAIEN_Pos;
pub const SAI_xCR1_SAIEN: u32 = SAI_xCR1_SAIEN_Msk;
pub const SAI_xCR1_DMAEN_Pos: u32 = 17;
pub const SAI_xCR1_DMAEN_Msk: u32 = 0x1 << SAI_xCR1_DMAEN_Pos;
pub const SAI_xCR1_DMAEN: u32 = SAI_xCR1_DMAEN_Msk;
pub const SAI_xCR1_NODIV_Pos: u32 = 19;
pub const SAI_xCR1_NODIV_Msk: u32 = 0x1 << SAI_xCR1_NODIV_Pos;
pub const SAI_xCR1_NODIV: u32 = SAI_xCR1_NODIV_Msk;
pub const SAI_xCR1_MCKDIV_Pos: u32 = 20;
pub const SAI_xCR1_MCKDIV_Msk: u32 = 0x3F << SAI_xCR1_MCKDIV_Pos;
pub const SAI_xCR1_MCKDIV: u32 = SAI_xCR1_MCKDIV_Msk;
pub const SAI_xCR1_MCKDIV_0: u32 = 0x00100000;
pub const SAI_xCR1_MCKDIV_1: u32 = 0x00200000;
pub const SAI_xCR1_MCKDIV_2: u32 = 0x00400000;
pub const SAI_xCR1_MCKDIV_3: u32 = 0x00800000;
pub const SAI_xCR1_MCKDIV_4: u32 = 0x01000000;
pub const SAI_xCR1_MCKDIV_5: u32 = 0x02000000;
pub const SAI_xCR1_OSR_Pos: u32 = 26;
pub const SAI_xCR1_OSR_Msk: u32 = 0x1 << SAI_xCR1_OSR_Pos;
pub const SAI_xCR1_OSR: u32 = SAI_xCR1_OSR_Msk;
pub const SAI_xCR1_MCKEN_Pos: u32 = 27;
pub const SAI_xCR1_MCKEN_Msk: u32 = 0x1 << SAI_xCR1_MCKEN_Pos;
pub const SAI_xCR1_MCKEN: u32 = SAI_xCR1_MCKEN_Msk;
pub const SAI_xCR2_FTH_Pos: u32 = 0;
pub const SAI_xCR2_FTH_Msk: u32 = 0x7 << SAI_xCR2_FTH_Pos;
pub const SAI_xCR2_FTH: u32 = SAI_xCR2_FTH_Msk;
pub const SAI_xCR2_FTH_0: u32 = 0x1 << SAI_xCR2_FTH_Pos;
pub const SAI_xCR2_FTH_1: u32 = 0x2 << SAI_xCR2_FTH_Pos;
pub const SAI_xCR2_FTH_2: u32 = 0x4 << SAI_xCR2_FTH_Pos;
pub const SAI_xCR2_FFLUSH_Pos: u32 = 3;
pub const SAI_xCR2_FFLUSH_Msk: u32 = 0x1 << SAI_xCR2_FFLUSH_Pos;
pub const SAI_xCR2_FFLUSH: u32 = SAI_xCR2_FFLUSH_Msk;
pub const SAI_xCR2_TRIS_Pos: u32 = 4;
pub const SAI_xCR2_TRIS_Msk: u32 = 0x1 << SAI_xCR2_TRIS_Pos;
pub const SAI_xCR2_TRIS: u32 = SAI_xCR2_TRIS_Msk;
pub const SAI_xCR2_MUTE_Pos: u32 = 5;
pub const SAI_xCR2_MUTE_Msk: u32 = 0x1 << SAI_xCR2_MUTE_Pos;
pub const SAI_xCR2_MUTE: u32 = SAI_xCR2_MUTE_Msk;
pub const SAI_xCR2_MUTEVAL_Pos: u32 = 6;
pub const SAI_xCR2_MUTEVAL_Msk: u32 = 0x1 << SAI_xCR2_MUTEVAL_Pos;
pub const SAI_xCR2_MUTEVAL: u32 = SAI_xCR2_MUTEVAL_Msk;
pub const SAI_xCR2_MUTECNT_Pos: u32 = 7;
pub const SAI_xCR2_MUTECNT_Msk: u32 = 0x3F << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_MUTECNT: u32 = SAI_xCR2_MUTECNT_Msk;
pub const SAI_xCR2_MUTECNT_0: u32 = 0x01 << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_MUTECNT_1: u32 = 0x02 << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_MUTECNT_2: u32 = 0x04 << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_MUTECNT_3: u32 = 0x08 << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_MUTECNT_4: u32 = 0x10 << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_MUTECNT_5: u32 = 0x20 << SAI_xCR2_MUTECNT_Pos;
pub const SAI_xCR2_CPL_Pos: u32 = 13;
pub const SAI_xCR2_CPL_Msk: u32 = 0x1 << SAI_xCR2_CPL_Pos;
pub const SAI_xCR2_CPL: u32 = SAI_xCR2_CPL_Msk;
pub const SAI_xCR2_COMP_Pos: u32 = 14;
pub const SAI_xCR2_COMP_Msk: u32 = 0x3 << SAI_xCR2_COMP_Pos;
pub const SAI_xCR2_COMP: u32 = SAI_xCR2_COMP_Msk;
pub const SAI_xCR2_COMP_0: u32 = 0x1 << SAI_xCR2_COMP_Pos;
pub const SAI_xCR2_COMP_1: u32 = 0x2 << SAI_xCR2_COMP_Pos;
pub const SAI_xFRCR_FRL_Pos: u32 = 0;
pub const SAI_xFRCR_FRL_Msk: u32 = 0xFF << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL: u32 = SAI_xFRCR_FRL_Msk;
pub const SAI_xFRCR_FRL_0: u32 = 0x01 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_1: u32 = 0x02 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_2: u32 = 0x04 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_3: u32 = 0x08 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_4: u32 = 0x10 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_5: u32 = 0x20 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_6: u32 = 0x40 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FRL_7: u32 = 0x80 << SAI_xFRCR_FRL_Pos;
pub const SAI_xFRCR_FSALL_Pos: u32 = 8;
pub const SAI_xFRCR_FSALL_Msk: u32 = 0x7F << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL: u32 = SAI_xFRCR_FSALL_Msk;
pub const SAI_xFRCR_FSALL_0: u32 = 0x01 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL_1: u32 = 0x02 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL_2: u32 = 0x04 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL_3: u32 = 0x08 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL_4: u32 = 0x10 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL_5: u32 = 0x20 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSALL_6: u32 = 0x40 << SAI_xFRCR_FSALL_Pos;
pub const SAI_xFRCR_FSDEF_Pos: u32 = 16;
pub const SAI_xFRCR_FSDEF_Msk: u32 = 0x1 << SAI_xFRCR_FSDEF_Pos;
pub const SAI_xFRCR_FSDEF: u32 = SAI_xFRCR_FSDEF_Msk;
pub const SAI_xFRCR_FSPOL_Pos: u32 = 17;
pub const SAI_xFRCR_FSPOL_Msk: u32 = 0x1 << SAI_xFRCR_FSPOL_Pos;
pub const SAI_xFRCR_FSPOL: u32 = SAI_xFRCR_FSPOL_Msk;
pub const SAI_xFRCR_FSOFF_Pos: u32 = 18;
pub const SAI_xFRCR_FSOFF_Msk: u32 = 0x1 << SAI_xFRCR_FSOFF_Pos;
pub const SAI_xFRCR_FSOFF: u32 = SAI_xFRCR_FSOFF_Msk;
pub const SAI_xSLOTR_FBOFF_Pos: u32 = 0;
pub const SAI_xSLOTR_FBOFF_Msk: u32 = 0x1F << SAI_xSLOTR_FBOFF_Pos;
pub const SAI_xSLOTR_FBOFF: u32 = SAI_xSLOTR_FBOFF_Msk;
pub const SAI_xSLOTR_FBOFF_0: u32 = 0x01 << SAI_xSLOTR_FBOFF_Pos;
pub const SAI_xSLOTR_FBOFF_1: u32 = 0x02 << SAI_xSLOTR_FBOFF_Pos;
pub const SAI_xSLOTR_FBOFF_2: u32 = 0x04 << SAI_xSLOTR_FBOFF_Pos;
pub const SAI_xSLOTR_FBOFF_3: u32 = 0x08 << SAI_xSLOTR_FBOFF_Pos;
pub const SAI_xSLOTR_FBOFF_4: u32 = 0x10 << SAI_xSLOTR_FBOFF_Pos;
pub const SAI_xSLOTR_SLOTSZ_Pos: u32 = 6;
pub const SAI_xSLOTR_SLOTSZ_Msk: u32 = 0x3 << SAI_xSLOTR_SLOTSZ_Pos;
pub const SAI_xSLOTR_SLOTSZ: u32 = SAI_xSLOTR_SLOTSZ_Msk;
pub const SAI_xSLOTR_SLOTSZ_0: u32 = 0x1 << SAI_xSLOTR_SLOTSZ_Pos;
pub const SAI_xSLOTR_SLOTSZ_1: u32 = 0x2 << SAI_xSLOTR_SLOTSZ_Pos;
pub const SAI_xSLOTR_NBSLOT_Pos: u32 = 8;
pub const SAI_xSLOTR_NBSLOT_Msk: u32 = 0xF << SAI_xSLOTR_NBSLOT_Pos;
pub const SAI_xSLOTR_NBSLOT: u32 = SAI_xSLOTR_NBSLOT_Msk;
pub const SAI_xSLOTR_NBSLOT_0: u32 = 0x1 << SAI_xSLOTR_NBSLOT_Pos;
pub const SAI_xSLOTR_NBSLOT_1: u32 = 0x2 << SAI_xSLOTR_NBSLOT_Pos;
pub const SAI_xSLOTR_NBSLOT_2: u32 = 0x4 << SAI_xSLOTR_NBSLOT_Pos;
pub const SAI_xSLOTR_NBSLOT_3: u32 = 0x8 << SAI_xSLOTR_NBSLOT_Pos;
pub const SAI_xSLOTR_SLOTEN_Pos: u32 = 16;
pub const SAI_xSLOTR_SLOTEN_Msk: u32 = 0xFFFF << SAI_xSLOTR_SLOTEN_Pos;
pub const SAI_xSLOTR_SLOTEN: u32 = SAI_xSLOTR_SLOTEN_Msk;
pub const SAI_xIMR_OVRUDRIE_Pos: u32 = 0;
pub const SAI_xIMR_OVRUDRIE_Msk: u32 = 0x1 << SAI_xIMR_OVRUDRIE_Pos;
pub const SAI_xIMR_OVRUDRIE: u32 = SAI_xIMR_OVRUDRIE_Msk;
pub const SAI_xIMR_MUTEDETIE_Pos: u32 = 1;
pub const SAI_xIMR_MUTEDETIE_Msk: u32 = 0x1 << SAI_xIMR_MUTEDETIE_Pos;
pub const SAI_xIMR_MUTEDETIE: u32 = SAI_xIMR_MUTEDETIE_Msk;
pub const SAI_xIMR_WCKCFGIE_Pos: u32 = 2;
pub const SAI_xIMR_WCKCFGIE_Msk: u32 = 0x1 << SAI_xIMR_WCKCFGIE_Pos;
pub const SAI_xIMR_WCKCFGIE: u32 = SAI_xIMR_WCKCFGIE_Msk;
pub const SAI_xIMR_FREQIE_Pos: u32 = 3;
pub const SAI_xIMR_FREQIE_Msk: u32 = 0x1 << SAI_xIMR_FREQIE_Pos;
pub const SAI_xIMR_FREQIE: u32 = SAI_xIMR_FREQIE_Msk;
pub const SAI_xIMR_CNRDYIE_Pos: u32 = 4;
pub const SAI_xIMR_CNRDYIE_Msk: u32 = 0x1 << SAI_xIMR_CNRDYIE_Pos;
pub const SAI_xIMR_CNRDYIE: u32 = SAI_xIMR_CNRDYIE_Msk;
pub const SAI_xIMR_AFSDETIE_Pos: u32 = 5;
pub const SAI_xIMR_AFSDETIE_Msk: u32 = 0x1 << SAI_xIMR_AFSDETIE_Pos;
pub const SAI_xIMR_AFSDETIE: u32 = SAI_xIMR_AFSDETIE_Msk;
pub const SAI_xIMR_LFSDETIE_Pos: u32 = 6;
pub const SAI_xIMR_LFSDETIE_Msk: u32 = 0x1 << SAI_xIMR_LFSDETIE_Pos;
pub const SAI_xIMR_LFSDETIE: u32 = SAI_xIMR_LFSDETIE_Msk;
pub const SAI_xSR_OVRUDR_Pos: u32 = 0;
pub const SAI_xSR_OVRUDR_Msk: u32 = 0x1 << SAI_xSR_OVRUDR_Pos;
pub const SAI_xSR_OVRUDR: u32 = SAI_xSR_OVRUDR_Msk;
pub const SAI_xSR_MUTEDET_Pos: u32 = 1;
pub const SAI_xSR_MUTEDET_Msk: u32 = 0x1 << SAI_xSR_MUTEDET_Pos;
pub const SAI_xSR_MUTEDET: u32 = SAI_xSR_MUTEDET_Msk;
pub const SAI_xSR_WCKCFG_Pos: u32 = 2;
pub const SAI_xSR_WCKCFG_Msk: u32 = 0x1 << SAI_xSR_WCKCFG_Pos;
pub const SAI_xSR_WCKCFG: u32 = SAI_xSR_WCKCFG_Msk;
pub const SAI_xSR_FREQ_Pos: u32 = 3;
pub const SAI_xSR_FREQ_Msk: u32 = 0x1 << SAI_xSR_FREQ_Pos;
pub const SAI_xSR_FREQ: u32 = SAI_xSR_FREQ_Msk;
pub const SAI_xSR_CNRDY_Pos: u32 = 4;
pub const SAI_xSR_CNRDY_Msk: u32 = 0x1 << SAI_xSR_CNRDY_Pos;
pub const SAI_xSR_CNRDY: u32 = SAI_xSR_CNRDY_Msk;
pub const SAI_xSR_AFSDET_Pos: u32 = 5;
pub const SAI_xSR_AFSDET_Msk: u32 = 0x1 << SAI_xSR_AFSDET_Pos;
pub const SAI_xSR_AFSDET: u32 = SAI_xSR_AFSDET_Msk;
pub const SAI_xSR_LFSDET_Pos: u32 = 6;
pub const SAI_xSR_LFSDET_Msk: u32 = 0x1 << SAI_xSR_LFSDET_Pos;
pub const SAI_xSR_LFSDET: u32 = SAI_xSR_LFSDET_Msk;
pub const SAI_xSR_FLVL_Pos: u32 = 16;
pub const SAI_xSR_FLVL_Msk: u32 = 0x7 << SAI_xSR_FLVL_Pos;
pub const SAI_xSR_FLVL: u32 = SAI_xSR_FLVL_Msk;
pub const SAI_xSR_FLVL_0: u32 = 0x1 << SAI_xSR_FLVL_Pos;
pub const SAI_xSR_FLVL_1: u32 = 0x2 << SAI_xSR_FLVL_Pos;
pub const SAI_xSR_FLVL_2: u32 = 0x4 << SAI_xSR_FLVL_Pos;
pub const SAI_xCLRFR_COVRUDR_Pos: u32 = 0;
pub const SAI_xCLRFR_COVRUDR_Msk: u32 = 0x1 << SAI_xCLRFR_COVRUDR_Pos;
pub const SAI_xCLRFR_COVRUDR: u32 = SAI_xCLRFR_COVRUDR_Msk;
pub const SAI_xCLRFR_CMUTEDET_Pos: u32 = 1;
pub const SAI_xCLRFR_CMUTEDET_Msk: u32 = 0x1 << SAI_xCLRFR_CMUTEDET_Pos;
pub const SAI_xCLRFR_CMUTEDET: u32 = SAI_xCLRFR_CMUTEDET_Msk;
pub const SAI_xCLRFR_CWCKCFG_Pos: u32 = 2;
pub const SAI_xCLRFR_CWCKCFG_Msk: u32 = 0x1 << SAI_xCLRFR_CWCKCFG_Pos;
pub const SAI_xCLRFR_CWCKCFG: u32 = SAI_xCLRFR_CWCKCFG_Msk;
pub const SAI_xCLRFR_CFREQ_Pos: u32 = 3;
pub const SAI_xCLRFR_CFREQ_Msk: u32 = 0x1 << SAI_xCLRFR_CFREQ_Pos;
pub const SAI_xCLRFR_CFREQ: u32 = SAI_xCLRFR_CFREQ_Msk;
pub const SAI_xCLRFR_CCNRDY_Pos: u32 = 4;
pub const SAI_xCLRFR_CCNRDY_Msk: u32 = 0x1 << SAI_xCLRFR_CCNRDY_Pos;
pub const SAI_xCLRFR_CCNRDY: u32 = SAI_xCLRFR_CCNRDY_Msk;
pub const SAI_xCLRFR_CAFSDET_Pos: u32 = 5;
pub const SAI_xCLRFR_CAFSDET_Msk: u32 = 0x1 << SAI_xCLRFR_CAFSDET_Pos;
pub const SAI_xCLRFR_CAFSDET: u32 = SAI_xCLRFR_CAFSDET_Msk;
pub const SAI_xCLRFR_CLFSDET_Pos: u32 = 6;
pub const SAI_xCLRFR_CLFSDET_Msk: u32 = 0x1 << SAI_xCLRFR_CLFSDET_Pos;
pub const SAI_xCLRFR_CLFSDET: u32 = SAI_xCLRFR_CLFSDET_Msk;
pub const SAI_xDR_DATA_Pos: u32 = 0;
pub const SAI_xDR_DATA_Msk: u32 = 0xFFFFFFFF << SAI_xDR_DATA_Pos;
pub const SAI_xDR_DATA: u32 = SAI_xDR_DATA_Msk;
pub const SAI_PDMCR_PDMEN_Pos: u32 = 0;
pub const SAI_PDMCR_PDMEN_Msk: u32 = 0x1 << SAI_PDMCR_PDMEN_Pos;
pub const SAI_PDMCR_PDMEN: u32 = SAI_PDMCR_PDMEN_Msk;
pub const SAI_PDMCR_MICNBR_Pos: u32 = 4;
pub const SAI_PDMCR_MICNBR_Msk: u32 = 0x3 << SAI_PDMCR_MICNBR_Pos;
pub const SAI_PDMCR_MICNBR: u32 = SAI_PDMCR_MICNBR_Msk;
pub const SAI_PDMCR_MICNBR_0: u32 = 0x1 << SAI_PDMCR_MICNBR_Pos;
pub const SAI_PDMCR_MICNBR_1: u32 = 0x2 << SAI_PDMCR_MICNBR_Pos;
pub const SAI_PDMCR_CKEN1_Pos: u32 = 8;
pub const SAI_PDMCR_CKEN1_Msk: u32 = 0x1 << SAI_PDMCR_CKEN1_Pos;
pub const SAI_PDMCR_CKEN1: u32 = SAI_PDMCR_CKEN1_Msk;
pub const SAI_PDMCR_CKEN2_Pos: u32 = 9;
pub const SAI_PDMCR_CKEN2_Msk: u32 = 0x1 << SAI_PDMCR_CKEN2_Pos;
pub const SAI_PDMCR_CKEN2: u32 = SAI_PDMCR_CKEN2_Msk;
pub const SAI_PDMCR_CKEN3_Pos: u32 = 10;
pub const SAI_PDMCR_CKEN3_Msk: u32 = 0x1 << SAI_PDMCR_CKEN3_Pos;
pub const SAI_PDMCR_CKEN3: u32 = SAI_PDMCR_CKEN3_Msk;
pub const SAI_PDMCR_CKEN4_Pos: u32 = 11;
pub const SAI_PDMCR_CKEN4_Msk: u32 = 0x1 << SAI_PDMCR_CKEN4_Pos;
pub const SAI_PDMCR_CKEN4: u32 = SAI_PDMCR_CKEN4_Msk;
pub const SAI_PDMDLY_DLYM1L_Pos: u32 = 0;
pub const SAI_PDMDLY_DLYM1L_Msk: u32 = 0x7 << SAI_PDMDLY_DLYM1L_Pos;
pub const SAI_PDMDLY_DLYM1L: u32 = SAI_PDMDLY_DLYM1L_Msk;
pub const SAI_PDMDLY_DLYM1L_0: u32 = 0x1 << SAI_PDMDLY_DLYM1L_Pos;
pub const SAI_PDMDLY_DLYM1L_1: u32 = 0x2 << SAI_PDMDLY_DLYM1L_Pos;
pub const SAI_PDMDLY_DLYM1L_2: u32 = 0x4 << SAI_PDMDLY_DLYM1L_Pos;
pub const SAI_PDMDLY_DLYM1R_Pos: u32 = 4;
pub const SAI_PDMDLY_DLYM1R_Msk: u32 = 0x7 << SAI_PDMDLY_DLYM1R_Pos;
pub const SAI_PDMDLY_DLYM1R: u32 = SAI_PDMDLY_DLYM1R_Msk;
pub const SAI_PDMDLY_DLYM1R_0: u32 = 0x1 << SAI_PDMDLY_DLYM1R_Pos;
pub const SAI_PDMDLY_DLYM1R_1: u32 = 0x2 << SAI_PDMDLY_DLYM1R_Pos;
pub const SAI_PDMDLY_DLYM1R_2: u32 = 0x4 << SAI_PDMDLY_DLYM1R_Pos;
pub const SAI_PDMDLY_DLYM2L_Pos: u32 = 8;
pub const SAI_PDMDLY_DLYM2L_Msk: u32 = 0x7 << SAI_PDMDLY_DLYM2L_Pos;
pub const SAI_PDMDLY_DLYM2L: u32 = SAI_PDMDLY_DLYM2L_Msk;
pub const SAI_PDMDLY_DLYM2L_0: u32 = 0x1 << SAI_PDMDLY_DLYM2L_Pos;
pub const SAI_PDMDLY_DLYM2L_1: u32 = 0x2 << SAI_PDMDLY_DLYM2L_Pos;
pub const SAI_PDMDLY_DLYM2L_2: u32 = 0x4 << SAI_PDMDLY_DLYM2L_Pos;
pub const SAI_PDMDLY_DLYM2R_Pos: u32 = 12;
pub const SAI_PDMDLY_DLYM2R_Msk: u32 = 0x7 << SAI_PDMDLY_DLYM2R_Pos;
pub const SAI_PDMDLY_DLYM2R: u32 = SAI_PDMDLY_DLYM2R_Msk;
pub const SAI_PDMDLY_DLYM2R_0: u32 = 0x1 << SAI_PDMDLY_DLYM2R_Pos;
pub const SAI_PDMDLY_DLYM2R_1: u32 = 0x2 << SAI_PDMDLY_DLYM2R_Pos;
pub const SAI_PDMDLY_DLYM2R_2: u32 = 0x4 << SAI_PDMDLY_DLYM2R_Pos;
pub const SAI_PDMDLY_DLYM3L_Pos: u32 = 16;
pub const SAI_PDMDLY_DLYM3L_Msk: u32 = 0x7 << SAI_PDMDLY_DLYM3L_Pos;
pub const SAI_PDMDLY_DLYM3L: u32 = SAI_PDMDLY_DLYM3L_Msk;
pub const SAI_PDMDLY_DLYM3L_0: u32 = 0x1 << SAI_PDMDLY_DLYM3L_Pos;
pub const SAI_PDMDLY_DLYM3L_1: u32 = 0x2 << SAI_PDMDLY_DLYM3L_Pos;
pub const SAI_PDMDLY_DLYM3L_2: u32 = 0x4 << SAI_PDMDLY_DLYM3L_Pos;
pub const SAI_PDMDLY_DLYM3R_Pos: u32 = 20;
pub const SAI_PDMDLY_DLYM3R_Msk: u32 = 0x7 << SAI_PDMDLY_DLYM3R_Pos;
pub const SAI_PDMDLY_DLYM3R: u32 = SAI_PDMDLY_DLYM3R_Msk;
pub const SAI_PDMDLY_DLYM3R_0: u32 = 0x1 << SAI_PDMDLY_DLYM3R_Pos;
pub const SAI_PDMDLY_DLYM3R_1: u32 = 0x2 << SAI_PDMDLY_DLYM3R_Pos;
pub const SAI_PDMDLY_DLYM3R_2: u32 = 0x4 << SAI_PDMDLY_DLYM3R_Pos;
pub const SAI_PDMDLY_DLYM4L_Pos: u32 = 24;
pub const SAI_PDMDLY_DLYM4L_Msk: u32 = 0x7 << SAI_PDMDLY_DLYM4L_Pos;
pub const SAI_PDMDLY_DLYM4L: u32 = SAI_PDMDLY_DLYM4L_Msk;
pub const SAI_PDMDLY_DLYM4L_0: u32 = 0x1 << SAI_PDMDLY_DLYM4L_Pos;
pub const SAI_PDMDLY_DLYM4L_1: u32 = 0x2 << SAI_PDMDLY_DLYM4L_Pos;
pub const SAI_PDMDLY_DLYM4L_2: u32 = 0x4 << SAI_PDMDLY_DLYM4L_Pos;
pub const SAI_PDMDLY_DLYM4R_Pos: u32 = 28;
pub const SAI_PDMDLY_DLYM4R_Msk: u32 = 0x7 << SAI_PDMDLY_DLYM4R_Pos;
pub const SAI_PDMDLY_DLYM4R: u32 = SAI_PDMDLY_DLYM4R_Msk;
pub const SAI_PDMDLY_DLYM4R_0: u32 = 0x1 << SAI_PDMDLY_DLYM4R_Pos;
pub const SAI_PDMDLY_DLYM4R_1: u32 = 0x2 << SAI_PDMDLY_DLYM4R_Pos;
pub const SAI_PDMDLY_DLYM4R_2: u32 = 0x4 << SAI_PDMDLY_DLYM4R_Pos;
pub const SPI_CR1_CPHA_Pos: u32 = 0;
pub const SPI_CR1_CPHA_Msk: u32 = 0x1 << SPI_CR1_CPHA_Pos;
pub const SPI_CR1_CPHA: u32 = SPI_CR1_CPHA_Msk;
pub const SPI_CR1_CPOL_Pos: u32 = 1;
pub const SPI_CR1_CPOL_Msk: u32 = 0x1 << SPI_CR1_CPOL_Pos;
pub const SPI_CR1_CPOL: u32 = SPI_CR1_CPOL_Msk;
pub const SPI_CR1_MSTR_Pos: u32 = 2;
pub const SPI_CR1_MSTR_Msk: u32 = 0x1 << SPI_CR1_MSTR_Pos;
pub const SPI_CR1_MSTR: u32 = SPI_CR1_MSTR_Msk;
pub const SPI_CR1_BR_Pos: u32 = 3;
pub const SPI_CR1_BR_Msk: u32 = 0x7 << SPI_CR1_BR_Pos;
pub const SPI_CR1_BR: u32 = SPI_CR1_BR_Msk;
pub const SPI_CR1_BR_0: u32 = 0x1 << SPI_CR1_BR_Pos;
pub const SPI_CR1_BR_1: u32 = 0x2 << SPI_CR1_BR_Pos;
pub const SPI_CR1_BR_2: u32 = 0x4 << SPI_CR1_BR_Pos;
pub const SPI_CR1_SPE_Pos: u32 = 6;
pub const SPI_CR1_SPE_Msk: u32 = 0x1 << SPI_CR1_SPE_Pos;
pub const SPI_CR1_SPE: u32 = SPI_CR1_SPE_Msk;
pub const SPI_CR1_LSBFIRST_Pos: u32 = 7;
pub const SPI_CR1_LSBFIRST_Msk: u32 = 0x1 << SPI_CR1_LSBFIRST_Pos;
pub const SPI_CR1_LSBFIRST: u32 = SPI_CR1_LSBFIRST_Msk;
pub const SPI_CR1_SSI_Pos: u32 = 8;
pub const SPI_CR1_SSI_Msk: u32 = 0x1 << SPI_CR1_SSI_Pos;
pub const SPI_CR1_SSI: u32 = SPI_CR1_SSI_Msk;
pub const SPI_CR1_SSM_Pos: u32 = 9;
pub const SPI_CR1_SSM_Msk: u32 = 0x1 << SPI_CR1_SSM_Pos;
pub const SPI_CR1_SSM: u32 = SPI_CR1_SSM_Msk;
pub const SPI_CR1_RXONLY_Pos: u32 = 10;
pub const SPI_CR1_RXONLY_Msk: u32 = 0x1 << SPI_CR1_RXONLY_Pos;
pub const SPI_CR1_RXONLY: u32 = SPI_CR1_RXONLY_Msk;
pub const SPI_CR1_CRCL_Pos: u32 = 11;
pub const SPI_CR1_CRCL_Msk: u32 = 0x1 << SPI_CR1_CRCL_Pos;
pub const SPI_CR1_CRCL: u32 = SPI_CR1_CRCL_Msk;
pub const SPI_CR1_CRCNEXT_Pos: u32 = 12;
pub const SPI_CR1_CRCNEXT_Msk: u32 = 0x1 << SPI_CR1_CRCNEXT_Pos;
pub const SPI_CR1_CRCNEXT: u32 = SPI_CR1_CRCNEXT_Msk;
pub const SPI_CR1_CRCEN_Pos: u32 = 13;
pub const SPI_CR1_CRCEN_Msk: u32 = 0x1 << SPI_CR1_CRCEN_Pos;
pub const SPI_CR1_CRCEN: u32 = SPI_CR1_CRCEN_Msk;
pub const SPI_CR1_BIDIOE_Pos: u32 = 14;
pub const SPI_CR1_BIDIOE_Msk: u32 = 0x1 << SPI_CR1_BIDIOE_Pos;
pub const SPI_CR1_BIDIOE: u32 = SPI_CR1_BIDIOE_Msk;
pub const SPI_CR1_BIDIMODE_Pos: u32 = 15;
pub const SPI_CR1_BIDIMODE_Msk: u32 = 0x1 << SPI_CR1_BIDIMODE_Pos;
pub const SPI_CR1_BIDIMODE: u32 = SPI_CR1_BIDIMODE_Msk;
pub const SPI_CR2_RXDMAEN_Pos: u32 = 0;
pub const SPI_CR2_RXDMAEN_Msk: u32 = 0x1 << SPI_CR2_RXDMAEN_Pos;
pub const SPI_CR2_RXDMAEN: u32 = SPI_CR2_RXDMAEN_Msk;
pub const SPI_CR2_TXDMAEN_Pos: u32 = 1;
pub const SPI_CR2_TXDMAEN_Msk: u32 = 0x1 << SPI_CR2_TXDMAEN_Pos;
pub const SPI_CR2_TXDMAEN: u32 = SPI_CR2_TXDMAEN_Msk;
pub const SPI_CR2_SSOE_Pos: u32 = 2;
pub const SPI_CR2_SSOE_Msk: u32 = 0x1 << SPI_CR2_SSOE_Pos;
pub const SPI_CR2_SSOE: u32 = SPI_CR2_SSOE_Msk;
pub const SPI_CR2_NSSP_Pos: u32 = 3;
pub const SPI_CR2_NSSP_Msk: u32 = 0x1 << SPI_CR2_NSSP_Pos;
pub const SPI_CR2_NSSP: u32 = SPI_CR2_NSSP_Msk;
pub const SPI_CR2_FRF_Pos: u32 = 4;
pub const SPI_CR2_FRF_Msk: u32 = 0x1 << SPI_CR2_FRF_Pos;
pub const SPI_CR2_FRF: u32 = SPI_CR2_FRF_Msk;
pub const SPI_CR2_ERRIE_Pos: u32 = 5;
pub const SPI_CR2_ERRIE_Msk: u32 = 0x1 << SPI_CR2_ERRIE_Pos;
pub const SPI_CR2_ERRIE: u32 = SPI_CR2_ERRIE_Msk;
pub const SPI_CR2_RXNEIE_Pos: u32 = 6;
pub const SPI_CR2_RXNEIE_Msk: u32 = 0x1 << SPI_CR2_RXNEIE_Pos;
pub const SPI_CR2_RXNEIE: u32 = SPI_CR2_RXNEIE_Msk;
pub const SPI_CR2_TXEIE_Pos: u32 = 7;
pub const SPI_CR2_TXEIE_Msk: u32 = 0x1 << SPI_CR2_TXEIE_Pos;
pub const SPI_CR2_TXEIE: u32 = SPI_CR2_TXEIE_Msk;
pub const SPI_CR2_DS_Pos: u32 = 8;
pub const SPI_CR2_DS_Msk: u32 = 0xF << SPI_CR2_DS_Pos;
pub const SPI_CR2_DS: u32 = SPI_CR2_DS_Msk;
pub const SPI_CR2_DS_0: u32 = 0x1 << SPI_CR2_DS_Pos;
pub const SPI_CR2_DS_1: u32 = 0x2 << SPI_CR2_DS_Pos;
pub const SPI_CR2_DS_2: u32 = 0x4 << SPI_CR2_DS_Pos;
pub const SPI_CR2_DS_3: u32 = 0x8 << SPI_CR2_DS_Pos;
pub const SPI_CR2_FRXTH_Pos: u32 = 12;
pub const SPI_CR2_FRXTH_Msk: u32 = 0x1 << SPI_CR2_FRXTH_Pos;
pub const SPI_CR2_FRXTH: u32 = SPI_CR2_FRXTH_Msk;
pub const SPI_CR2_LDMARX_Pos: u32 = 13;
pub const SPI_CR2_LDMARX_Msk: u32 = 0x1 << SPI_CR2_LDMARX_Pos;
pub const SPI_CR2_LDMARX: u32 = SPI_CR2_LDMARX_Msk;
pub const SPI_CR2_LDMATX_Pos: u32 = 14;
pub const SPI_CR2_LDMATX_Msk: u32 = 0x1 << SPI_CR2_LDMATX_Pos;
pub const SPI_CR2_LDMATX: u32 = SPI_CR2_LDMATX_Msk;
pub const SPI_SR_RXNE_Pos: u32 = 0;
pub const SPI_SR_RXNE_Msk: u32 = 0x1 << SPI_SR_RXNE_Pos;
pub const SPI_SR_RXNE: u32 = SPI_SR_RXNE_Msk;
pub const SPI_SR_TXE_Pos: u32 = 1;
pub const SPI_SR_TXE_Msk: u32 = 0x1 << SPI_SR_TXE_Pos;
pub const SPI_SR_TXE: u32 = SPI_SR_TXE_Msk;
pub const SPI_SR_CHSIDE_Pos: u32 = 2;
pub const SPI_SR_CHSIDE_Msk: u32 = 0x1 << SPI_SR_CHSIDE_Pos;
pub const SPI_SR_CHSIDE: u32 = SPI_SR_CHSIDE_Msk;
pub const SPI_SR_UDR_Pos: u32 = 3;
pub const SPI_SR_UDR_Msk: u32 = 0x1 << SPI_SR_UDR_Pos;
pub const SPI_SR_UDR: u32 = SPI_SR_UDR_Msk;
pub const SPI_SR_CRCERR_Pos: u32 = 4;
pub const SPI_SR_CRCERR_Msk: u32 = 0x1 << SPI_SR_CRCERR_Pos;
pub const SPI_SR_CRCERR: u32 = SPI_SR_CRCERR_Msk;
pub const SPI_SR_MODF_Pos: u32 = 5;
pub const SPI_SR_MODF_Msk: u32 = 0x1 << SPI_SR_MODF_Pos;
pub const SPI_SR_MODF: u32 = SPI_SR_MODF_Msk;
pub const SPI_SR_OVR_Pos: u32 = 6;
pub const SPI_SR_OVR_Msk: u32 = 0x1 << SPI_SR_OVR_Pos;
pub const SPI_SR_OVR: u32 = SPI_SR_OVR_Msk;
pub const SPI_SR_BSY_Pos: u32 = 7;
pub const SPI_SR_BSY_Msk: u32 = 0x1 << SPI_SR_BSY_Pos;
pub const SPI_SR_BSY: u32 = SPI_SR_BSY_Msk;
pub const SPI_SR_FRE_Pos: u32 = 8;
pub const SPI_SR_FRE_Msk: u32 = 0x1 << SPI_SR_FRE_Pos;
pub const SPI_SR_FRE: u32 = SPI_SR_FRE_Msk;
pub const SPI_SR_FRLVL_Pos: u32 = 9;
pub const SPI_SR_FRLVL_Msk: u32 = 0x3 << SPI_SR_FRLVL_Pos;
pub const SPI_SR_FRLVL: u32 = SPI_SR_FRLVL_Msk;
pub const SPI_SR_FRLVL_0: u32 = 0x1 << SPI_SR_FRLVL_Pos;
pub const SPI_SR_FRLVL_1: u32 = 0x2 << SPI_SR_FRLVL_Pos;
pub const SPI_SR_FTLVL_Pos: u32 = 11;
pub const SPI_SR_FTLVL_Msk: u32 = 0x3 << SPI_SR_FTLVL_Pos;
pub const SPI_SR_FTLVL: u32 = SPI_SR_FTLVL_Msk;
pub const SPI_SR_FTLVL_0: u32 = 0x1 << SPI_SR_FTLVL_Pos;
pub const SPI_SR_FTLVL_1: u32 = 0x2 << SPI_SR_FTLVL_Pos;
pub const SPI_DR_DR_Pos: u32 = 0;
pub const SPI_DR_DR_Msk: u32 = 0xFFFF << SPI_DR_DR_Pos;
pub const SPI_DR_DR: u32 = SPI_DR_DR_Msk;
pub const SPI_CRCPR_CRCPOLY_Pos: u32 = 0;
pub const SPI_CRCPR_CRCPOLY_Msk: u32 = 0xFFFF << SPI_CRCPR_CRCPOLY_Pos;
pub const SPI_CRCPR_CRCPOLY: u32 = SPI_CRCPR_CRCPOLY_Msk;
pub const SPI_RXCRCR_RXCRC_Pos: u32 = 0;
pub const SPI_RXCRCR_RXCRC_Msk: u32 = 0xFFFF << SPI_RXCRCR_RXCRC_Pos;
pub const SPI_RXCRCR_RXCRC: u32 = SPI_RXCRCR_RXCRC_Msk;
pub const SPI_TXCRCR_TXCRC_Pos: u32 = 0;
pub const SPI_TXCRCR_TXCRC_Msk: u32 = 0xFFFF << SPI_TXCRCR_TXCRC_Pos;
pub const SPI_TXCRCR_TXCRC: u32 = SPI_TXCRCR_TXCRC_Msk;
pub const SPI_I2SCFGR_CHLEN_Pos: u32 = 0;
pub const SPI_I2SCFGR_CHLEN_Msk: u32 = 0x1 << SPI_I2SCFGR_CHLEN_Pos;
pub const SPI_I2SCFGR_CHLEN: u32 = SPI_I2SCFGR_CHLEN_Msk;
pub const SPI_I2SCFGR_DATLEN_Pos: u32 = 1;
pub const SPI_I2SCFGR_DATLEN_Msk: u32 = 0x3 << SPI_I2SCFGR_DATLEN_Pos;
pub const SPI_I2SCFGR_DATLEN: u32 = SPI_I2SCFGR_DATLEN_Msk;
pub const SPI_I2SCFGR_DATLEN_0: u32 = 0x1 << SPI_I2SCFGR_DATLEN_Pos;
pub const SPI_I2SCFGR_DATLEN_1: u32 = 0x2 << SPI_I2SCFGR_DATLEN_Pos;
pub const SPI_I2SCFGR_CKPOL_Pos: u32 = 3;
pub const SPI_I2SCFGR_CKPOL_Msk: u32 = 0x1 << SPI_I2SCFGR_CKPOL_Pos;
pub const SPI_I2SCFGR_CKPOL: u32 = SPI_I2SCFGR_CKPOL_Msk;
pub const SPI_I2SCFGR_I2SSTD_Pos: u32 = 4;
pub const SPI_I2SCFGR_I2SSTD_Msk: u32 = 0x3 << SPI_I2SCFGR_I2SSTD_Pos;
pub const SPI_I2SCFGR_I2SSTD: u32 = SPI_I2SCFGR_I2SSTD_Msk;
pub const SPI_I2SCFGR_I2SSTD_0: u32 = 0x1 << SPI_I2SCFGR_I2SSTD_Pos;
pub const SPI_I2SCFGR_I2SSTD_1: u32 = 0x2 << SPI_I2SCFGR_I2SSTD_Pos;
pub const SPI_I2SCFGR_PCMSYNC_Pos: u32 = 7;
pub const SPI_I2SCFGR_PCMSYNC_Msk: u32 = 0x1 << SPI_I2SCFGR_PCMSYNC_Pos;
pub const SPI_I2SCFGR_PCMSYNC: u32 = SPI_I2SCFGR_PCMSYNC_Msk;
pub const SPI_I2SCFGR_I2SCFG_Pos: u32 = 8;
pub const SPI_I2SCFGR_I2SCFG_Msk: u32 = 0x3 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SCFG: u32 = SPI_I2SCFGR_I2SCFG_Msk;
pub const SPI_I2SCFGR_I2SCFG_0: u32 = 0x1 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SCFG_1: u32 = 0x2 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SE_Pos: u32 = 10;
pub const SPI_I2SCFGR_I2SE_Msk: u32 = 0x1 << SPI_I2SCFGR_I2SE_Pos;
pub const SPI_I2SCFGR_I2SE: u32 = SPI_I2SCFGR_I2SE_Msk;
pub const SPI_I2SCFGR_I2SMOD_Pos: u32 = 11;
pub const SPI_I2SCFGR_I2SMOD_Msk: u32 = 0x1 << SPI_I2SCFGR_I2SMOD_Pos;
pub const SPI_I2SCFGR_I2SMOD: u32 = SPI_I2SCFGR_I2SMOD_Msk;
pub const SPI_I2SCFGR_ASTRTEN_Pos: u32 = 12;
pub const SPI_I2SCFGR_ASTRTEN_Msk: u32 = 0x1 << SPI_I2SCFGR_ASTRTEN_Pos;
pub const SPI_I2SCFGR_ASTRTEN: u32 = SPI_I2SCFGR_ASTRTEN_Msk;
pub const SPI_I2SPR_I2SDIV_Pos: u32 = 0;
pub const SPI_I2SPR_I2SDIV_Msk: u32 = 0xFF << SPI_I2SPR_I2SDIV_Pos;
pub const SPI_I2SPR_I2SDIV: u32 = SPI_I2SPR_I2SDIV_Msk;
pub const SPI_I2SPR_ODD_Pos: u32 = 8;
pub const SPI_I2SPR_ODD_Msk: u32 = 0x1 << SPI_I2SPR_ODD_Pos;
pub const SPI_I2SPR_ODD: u32 = SPI_I2SPR_ODD_Msk;
pub const SPI_I2SPR_MCKOE_Pos: u32 = 9;
pub const SPI_I2SPR_MCKOE_Msk: u32 = 0x1 << SPI_I2SPR_MCKOE_Pos;
pub const SPI_I2SPR_MCKOE: u32 = SPI_I2SPR_MCKOE_Msk;
pub const SYSCFG_MEMRMP_MEM_MODE_Pos: u32 = 0;
pub const SYSCFG_MEMRMP_MEM_MODE_Msk: u32 = 0x7 << SYSCFG_MEMRMP_MEM_MODE_Pos;
pub const SYSCFG_MEMRMP_MEM_MODE: u32 = SYSCFG_MEMRMP_MEM_MODE_Msk;
pub const SYSCFG_MEMRMP_MEM_MODE_0: u32 = 0x1 << SYSCFG_MEMRMP_MEM_MODE_Pos;
pub const SYSCFG_MEMRMP_MEM_MODE_1: u32 = 0x2 << SYSCFG_MEMRMP_MEM_MODE_Pos;
pub const SYSCFG_MEMRMP_MEM_MODE_2: u32 = 0x4 << SYSCFG_MEMRMP_MEM_MODE_Pos;
pub const SYSCFG_MEMRMP_FB_MODE_Pos: u32 = 8;
pub const SYSCFG_MEMRMP_FB_MODE_Msk: u32 = 0x1 << SYSCFG_MEMRMP_FB_MODE_Pos;
pub const SYSCFG_MEMRMP_FB_MODE: u32 = SYSCFG_MEMRMP_FB_MODE_Msk;
pub const SYSCFG_CFGR1_BOOSTEN_Pos: u32 = 8;
pub const SYSCFG_CFGR1_BOOSTEN_Msk: u32 = 0x1 << SYSCFG_CFGR1_BOOSTEN_Pos;
pub const SYSCFG_CFGR1_BOOSTEN: u32 = SYSCFG_CFGR1_BOOSTEN_Msk;
pub const SYSCFG_CFGR1_ANASWVDD_Pos: u32 = 9;
pub const SYSCFG_CFGR1_ANASWVDD_Msk: u32 = 0x1 << SYSCFG_CFGR1_ANASWVDD_Pos;
pub const SYSCFG_CFGR1_ANASWVDD: u32 = SYSCFG_CFGR1_ANASWVDD_Msk;
pub const SYSCFG_CFGR1_I2C_PB6_FMP_Pos: u32 = 16;
pub const SYSCFG_CFGR1_I2C_PB6_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR1_I2C_PB6_FMP_Pos;
pub const SYSCFG_CFGR1_I2C_PB6_FMP: u32 = SYSCFG_CFGR1_I2C_PB6_FMP_Msk;
pub const SYSCFG_CFGR1_I2C_PB7_FMP_Pos: u32 = 17;
pub const SYSCFG_CFGR1_I2C_PB7_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR1_I2C_PB7_FMP_Pos;
pub const SYSCFG_CFGR1_I2C_PB7_FMP: u32 = SYSCFG_CFGR1_I2C_PB7_FMP_Msk;
pub const SYSCFG_CFGR1_I2C_PB8_FMP_Pos: u32 = 18;
pub const SYSCFG_CFGR1_I2C_PB8_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR1_I2C_PB8_FMP_Pos;
pub const SYSCFG_CFGR1_I2C_PB8_FMP: u32 = SYSCFG_CFGR1_I2C_PB8_FMP_Msk;
pub const SYSCFG_CFGR1_I2C_PB9_FMP_Pos: u32 = 19;
pub const SYSCFG_CFGR1_I2C_PB9_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR1_I2C_PB9_FMP_Pos;
pub const SYSCFG_CFGR1_I2C_PB9_FMP: u32 = SYSCFG_CFGR1_I2C_PB9_FMP_Msk;
pub const SYSCFG_CFGR1_I2C1_FMP_Pos: u32 = 20;
pub const SYSCFG_CFGR1_I2C1_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR1_I2C1_FMP_Pos;
pub const SYSCFG_CFGR1_I2C1_FMP: u32 = SYSCFG_CFGR1_I2C1_FMP_Msk;
pub const SYSCFG_CFGR1_I2C2_FMP_Pos: u32 = 21;
pub const SYSCFG_CFGR1_I2C2_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR1_I2C2_FMP_Pos;
pub const SYSCFG_CFGR1_I2C2_FMP: u32 = SYSCFG_CFGR1_I2C2_FMP_Msk;
pub const SYSCFG_CFGR1_I2C3_FMP_Pos: u32 = 22;
pub const SYSCFG_CFGR1_I2C3_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR1_I2C3_FMP_Pos;
pub const SYSCFG_CFGR1_I2C3_FMP: u32 = SYSCFG_CFGR1_I2C3_FMP_Msk;
pub const SYSCFG_CFGR1_FPU_IE_0: u32 = 0x04000000;
pub const SYSCFG_CFGR1_FPU_IE_1: u32 = 0x08000000;
pub const SYSCFG_CFGR1_FPU_IE_2: u32 = 0x10000000;
pub const SYSCFG_CFGR1_FPU_IE_3: u32 = 0x20000000;
pub const SYSCFG_CFGR1_FPU_IE_4: u32 = 0x40000000;
pub const SYSCFG_CFGR1_FPU_IE_5: u32 = 0x80000000;
pub const SYSCFG_EXTICR1_EXTI0_Pos: u32 = 0;
pub const SYSCFG_EXTICR1_EXTI0_Msk: u32 = 0x7 << SYSCFG_EXTICR1_EXTI0_Pos;
pub const SYSCFG_EXTICR1_EXTI0: u32 = SYSCFG_EXTICR1_EXTI0_Msk;
pub const SYSCFG_EXTICR1_EXTI1_Pos: u32 = 4;
pub const SYSCFG_EXTICR1_EXTI1_Msk: u32 = 0x7 << SYSCFG_EXTICR1_EXTI1_Pos;
pub const SYSCFG_EXTICR1_EXTI1: u32 = SYSCFG_EXTICR1_EXTI1_Msk;
pub const SYSCFG_EXTICR1_EXTI2_Pos: u32 = 8;
pub const SYSCFG_EXTICR1_EXTI2_Msk: u32 = 0x7 << SYSCFG_EXTICR1_EXTI2_Pos;
pub const SYSCFG_EXTICR1_EXTI2: u32 = SYSCFG_EXTICR1_EXTI2_Msk;
pub const SYSCFG_EXTICR1_EXTI3_Pos: u32 = 12;
pub const SYSCFG_EXTICR1_EXTI3_Msk: u32 = 0x7 << SYSCFG_EXTICR1_EXTI3_Pos;
pub const SYSCFG_EXTICR1_EXTI3: u32 = SYSCFG_EXTICR1_EXTI3_Msk;
pub const SYSCFG_EXTICR1_EXTI0_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR1_EXTI0_PB: u32 = 0x00000001;
pub const SYSCFG_EXTICR1_EXTI0_PC: u32 = 0x00000002;
pub const SYSCFG_EXTICR1_EXTI0_PD: u32 = 0x00000003;
pub const SYSCFG_EXTICR1_EXTI0_PE: u32 = 0x00000004;
pub const SYSCFG_EXTICR1_EXTI0_PF: u32 = 0x00000005;
pub const SYSCFG_EXTICR1_EXTI0_PG: u32 = 0x00000006;
pub const SYSCFG_EXTICR1_EXTI1_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR1_EXTI1_PB: u32 = 0x00000010;
pub const SYSCFG_EXTICR1_EXTI1_PC: u32 = 0x00000020;
pub const SYSCFG_EXTICR1_EXTI1_PD: u32 = 0x00000030;
pub const SYSCFG_EXTICR1_EXTI1_PE: u32 = 0x00000040;
pub const SYSCFG_EXTICR1_EXTI1_PF: u32 = 0x00000050;
pub const SYSCFG_EXTICR1_EXTI1_PG: u32 = 0x00000060;
pub const SYSCFG_EXTICR1_EXTI2_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR1_EXTI2_PB: u32 = 0x00000100;
pub const SYSCFG_EXTICR1_EXTI2_PC: u32 = 0x00000200;
pub const SYSCFG_EXTICR1_EXTI2_PD: u32 = 0x00000300;
pub const SYSCFG_EXTICR1_EXTI2_PE: u32 = 0x00000400;
pub const SYSCFG_EXTICR1_EXTI2_PF: u32 = 0x00000500;
pub const SYSCFG_EXTICR1_EXTI2_PG: u32 = 0x00000600;
pub const SYSCFG_EXTICR1_EXTI3_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR1_EXTI3_PB: u32 = 0x00001000;
pub const SYSCFG_EXTICR1_EXTI3_PC: u32 = 0x00002000;
pub const SYSCFG_EXTICR1_EXTI3_PD: u32 = 0x00003000;
pub const SYSCFG_EXTICR1_EXTI3_PE: u32 = 0x00004000;
pub const SYSCFG_EXTICR1_EXTI3_PF: u32 = 0x00005000;
pub const SYSCFG_EXTICR1_EXTI3_PG: u32 = 0x00006000;
pub const SYSCFG_EXTICR2_EXTI4_Pos: u32 = 0;
pub const SYSCFG_EXTICR2_EXTI4_Msk: u32 = 0x7 << SYSCFG_EXTICR2_EXTI4_Pos;
pub const SYSCFG_EXTICR2_EXTI4: u32 = SYSCFG_EXTICR2_EXTI4_Msk;
pub const SYSCFG_EXTICR2_EXTI5_Pos: u32 = 4;
pub const SYSCFG_EXTICR2_EXTI5_Msk: u32 = 0x7 << SYSCFG_EXTICR2_EXTI5_Pos;
pub const SYSCFG_EXTICR2_EXTI5: u32 = SYSCFG_EXTICR2_EXTI5_Msk;
pub const SYSCFG_EXTICR2_EXTI6_Pos: u32 = 8;
pub const SYSCFG_EXTICR2_EXTI6_Msk: u32 = 0x7 << SYSCFG_EXTICR2_EXTI6_Pos;
pub const SYSCFG_EXTICR2_EXTI6: u32 = SYSCFG_EXTICR2_EXTI6_Msk;
pub const SYSCFG_EXTICR2_EXTI7_Pos: u32 = 12;
pub const SYSCFG_EXTICR2_EXTI7_Msk: u32 = 0x7 << SYSCFG_EXTICR2_EXTI7_Pos;
pub const SYSCFG_EXTICR2_EXTI7: u32 = SYSCFG_EXTICR2_EXTI7_Msk;
pub const SYSCFG_EXTICR2_EXTI4_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR2_EXTI4_PB: u32 = 0x00000001;
pub const SYSCFG_EXTICR2_EXTI4_PC: u32 = 0x00000002;
pub const SYSCFG_EXTICR2_EXTI4_PD: u32 = 0x00000003;
pub const SYSCFG_EXTICR2_EXTI4_PE: u32 = 0x00000004;
pub const SYSCFG_EXTICR2_EXTI4_PF: u32 = 0x00000005;
pub const SYSCFG_EXTICR2_EXTI4_PG: u32 = 0x00000006;
pub const SYSCFG_EXTICR2_EXTI5_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR2_EXTI5_PB: u32 = 0x00000010;
pub const SYSCFG_EXTICR2_EXTI5_PC: u32 = 0x00000020;
pub const SYSCFG_EXTICR2_EXTI5_PD: u32 = 0x00000030;
pub const SYSCFG_EXTICR2_EXTI5_PE: u32 = 0x00000040;
pub const SYSCFG_EXTICR2_EXTI5_PF: u32 = 0x00000050;
pub const SYSCFG_EXTICR2_EXTI5_PG: u32 = 0x00000060;
pub const SYSCFG_EXTICR2_EXTI6_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR2_EXTI6_PB: u32 = 0x00000100;
pub const SYSCFG_EXTICR2_EXTI6_PC: u32 = 0x00000200;
pub const SYSCFG_EXTICR2_EXTI6_PD: u32 = 0x00000300;
pub const SYSCFG_EXTICR2_EXTI6_PE: u32 = 0x00000400;
pub const SYSCFG_EXTICR2_EXTI6_PF: u32 = 0x00000500;
pub const SYSCFG_EXTICR2_EXTI6_PG: u32 = 0x00000600;
pub const SYSCFG_EXTICR2_EXTI7_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR2_EXTI7_PB: u32 = 0x00001000;
pub const SYSCFG_EXTICR2_EXTI7_PC: u32 = 0x00002000;
pub const SYSCFG_EXTICR2_EXTI7_PD: u32 = 0x00003000;
pub const SYSCFG_EXTICR2_EXTI7_PE: u32 = 0x00004000;
pub const SYSCFG_EXTICR2_EXTI7_PF: u32 = 0x00005000;
pub const SYSCFG_EXTICR2_EXTI7_PG: u32 = 0x00006000;
pub const SYSCFG_EXTICR3_EXTI8_Pos: u32 = 0;
pub const SYSCFG_EXTICR3_EXTI8_Msk: u32 = 0x7 << SYSCFG_EXTICR3_EXTI8_Pos;
pub const SYSCFG_EXTICR3_EXTI8: u32 = SYSCFG_EXTICR3_EXTI8_Msk;
pub const SYSCFG_EXTICR3_EXTI9_Pos: u32 = 4;
pub const SYSCFG_EXTICR3_EXTI9_Msk: u32 = 0x7 << SYSCFG_EXTICR3_EXTI9_Pos;
pub const SYSCFG_EXTICR3_EXTI9: u32 = SYSCFG_EXTICR3_EXTI9_Msk;
pub const SYSCFG_EXTICR3_EXTI10_Pos: u32 = 8;
pub const SYSCFG_EXTICR3_EXTI10_Msk: u32 = 0x7 << SYSCFG_EXTICR3_EXTI10_Pos;
pub const SYSCFG_EXTICR3_EXTI10: u32 = SYSCFG_EXTICR3_EXTI10_Msk;
pub const SYSCFG_EXTICR3_EXTI11_Pos: u32 = 12;
pub const SYSCFG_EXTICR3_EXTI11_Msk: u32 = 0x7 << SYSCFG_EXTICR3_EXTI11_Pos;
pub const SYSCFG_EXTICR3_EXTI11: u32 = SYSCFG_EXTICR3_EXTI11_Msk;
pub const SYSCFG_EXTICR3_EXTI8_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR3_EXTI8_PB: u32 = 0x00000001;
pub const SYSCFG_EXTICR3_EXTI8_PC: u32 = 0x00000002;
pub const SYSCFG_EXTICR3_EXTI8_PD: u32 = 0x00000003;
pub const SYSCFG_EXTICR3_EXTI8_PE: u32 = 0x00000004;
pub const SYSCFG_EXTICR3_EXTI8_PF: u32 = 0x00000005;
pub const SYSCFG_EXTICR3_EXTI8_PG: u32 = 0x00000006;
pub const SYSCFG_EXTICR3_EXTI9_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR3_EXTI9_PB: u32 = 0x00000010;
pub const SYSCFG_EXTICR3_EXTI9_PC: u32 = 0x00000020;
pub const SYSCFG_EXTICR3_EXTI9_PD: u32 = 0x00000030;
pub const SYSCFG_EXTICR3_EXTI9_PE: u32 = 0x00000040;
pub const SYSCFG_EXTICR3_EXTI9_PF: u32 = 0x00000050;
pub const SYSCFG_EXTICR3_EXTI9_PG: u32 = 0x00000060;
pub const SYSCFG_EXTICR3_EXTI10_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR3_EXTI10_PB: u32 = 0x00000100;
pub const SYSCFG_EXTICR3_EXTI10_PC: u32 = 0x00000200;
pub const SYSCFG_EXTICR3_EXTI10_PD: u32 = 0x00000300;
pub const SYSCFG_EXTICR3_EXTI10_PE: u32 = 0x00000400;
pub const SYSCFG_EXTICR3_EXTI10_PF: u32 = 0x00000500;
pub const SYSCFG_EXTICR3_EXTI11_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR3_EXTI11_PB: u32 = 0x00001000;
pub const SYSCFG_EXTICR3_EXTI11_PC: u32 = 0x00002000;
pub const SYSCFG_EXTICR3_EXTI11_PD: u32 = 0x00003000;
pub const SYSCFG_EXTICR3_EXTI11_PE: u32 = 0x00004000;
pub const SYSCFG_EXTICR3_EXTI11_PF: u32 = 0x00005000;
pub const SYSCFG_EXTICR4_EXTI12_Pos: u32 = 0;
pub const SYSCFG_EXTICR4_EXTI12_Msk: u32 = 0x7 << SYSCFG_EXTICR4_EXTI12_Pos;
pub const SYSCFG_EXTICR4_EXTI12: u32 = SYSCFG_EXTICR4_EXTI12_Msk;
pub const SYSCFG_EXTICR4_EXTI13_Pos: u32 = 4;
pub const SYSCFG_EXTICR4_EXTI13_Msk: u32 = 0x7 << SYSCFG_EXTICR4_EXTI13_Pos;
pub const SYSCFG_EXTICR4_EXTI13: u32 = SYSCFG_EXTICR4_EXTI13_Msk;
pub const SYSCFG_EXTICR4_EXTI14_Pos: u32 = 8;
pub const SYSCFG_EXTICR4_EXTI14_Msk: u32 = 0x7 << SYSCFG_EXTICR4_EXTI14_Pos;
pub const SYSCFG_EXTICR4_EXTI14: u32 = SYSCFG_EXTICR4_EXTI14_Msk;
pub const SYSCFG_EXTICR4_EXTI15_Pos: u32 = 12;
pub const SYSCFG_EXTICR4_EXTI15_Msk: u32 = 0x7 << SYSCFG_EXTICR4_EXTI15_Pos;
pub const SYSCFG_EXTICR4_EXTI15: u32 = SYSCFG_EXTICR4_EXTI15_Msk;
pub const SYSCFG_EXTICR4_EXTI12_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR4_EXTI12_PB: u32 = 0x00000001;
pub const SYSCFG_EXTICR4_EXTI12_PC: u32 = 0x00000002;
pub const SYSCFG_EXTICR4_EXTI12_PD: u32 = 0x00000003;
pub const SYSCFG_EXTICR4_EXTI12_PE: u32 = 0x00000004;
pub const SYSCFG_EXTICR4_EXTI12_PF: u32 = 0x00000005;
pub const SYSCFG_EXTICR4_EXTI13_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR4_EXTI13_PB: u32 = 0x00000010;
pub const SYSCFG_EXTICR4_EXTI13_PC: u32 = 0x00000020;
pub const SYSCFG_EXTICR4_EXTI13_PD: u32 = 0x00000030;
pub const SYSCFG_EXTICR4_EXTI13_PE: u32 = 0x00000040;
pub const SYSCFG_EXTICR4_EXTI13_PF: u32 = 0x00000050;
pub const SYSCFG_EXTICR4_EXTI14_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR4_EXTI14_PB: u32 = 0x00000100;
pub const SYSCFG_EXTICR4_EXTI14_PC: u32 = 0x00000200;
pub const SYSCFG_EXTICR4_EXTI14_PD: u32 = 0x00000300;
pub const SYSCFG_EXTICR4_EXTI14_PE: u32 = 0x00000400;
pub const SYSCFG_EXTICR4_EXTI14_PF: u32 = 0x00000500;
pub const SYSCFG_EXTICR4_EXTI15_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR4_EXTI15_PB: u32 = 0x00001000;
pub const SYSCFG_EXTICR4_EXTI15_PC: u32 = 0x00002000;
pub const SYSCFG_EXTICR4_EXTI15_PD: u32 = 0x00003000;
pub const SYSCFG_EXTICR4_EXTI15_PE: u32 = 0x00004000;
pub const SYSCFG_EXTICR4_EXTI15_PF: u32 = 0x00005000;
pub const SYSCFG_SCSR_CCMER_Pos: u32 = 0;
pub const SYSCFG_SCSR_CCMER_Msk: u32 = 0x1 << SYSCFG_SCSR_CCMER_Pos;
pub const SYSCFG_SCSR_CCMER: u32 = SYSCFG_SCSR_CCMER_Msk;
pub const SYSCFG_SCSR_CCMBSY_Pos: u32 = 1;
pub const SYSCFG_SCSR_CCMBSY_Msk: u32 = 0x1 << SYSCFG_SCSR_CCMBSY_Pos;
pub const SYSCFG_SCSR_CCMBSY: u32 = SYSCFG_SCSR_CCMBSY_Msk;
pub const SYSCFG_CFGR2_CLL_Pos: u32 = 0;
pub const SYSCFG_CFGR2_CLL_Msk: u32 = 0x1 << SYSCFG_CFGR2_CLL_Pos;
pub const SYSCFG_CFGR2_CLL: u32 = SYSCFG_CFGR2_CLL_Msk;
pub const SYSCFG_CFGR2_SPL_Pos: u32 = 1;
pub const SYSCFG_CFGR2_SPL_Msk: u32 = 0x1 << SYSCFG_CFGR2_SPL_Pos;
pub const SYSCFG_CFGR2_SPL: u32 = SYSCFG_CFGR2_SPL_Msk;
pub const SYSCFG_CFGR2_PVDL_Pos: u32 = 2;
pub const SYSCFG_CFGR2_PVDL_Msk: u32 = 0x1 << SYSCFG_CFGR2_PVDL_Pos;
pub const SYSCFG_CFGR2_PVDL: u32 = SYSCFG_CFGR2_PVDL_Msk;
pub const SYSCFG_CFGR2_ECCL_Pos: u32 = 3;
pub const SYSCFG_CFGR2_ECCL_Msk: u32 = 0x1 << SYSCFG_CFGR2_ECCL_Pos;
pub const SYSCFG_CFGR2_ECCL: u32 = SYSCFG_CFGR2_ECCL_Msk;
pub const SYSCFG_CFGR2_SPF_Pos: u32 = 8;
pub const SYSCFG_CFGR2_SPF_Msk: u32 = 0x1 << SYSCFG_CFGR2_SPF_Pos;
pub const SYSCFG_CFGR2_SPF: u32 = SYSCFG_CFGR2_SPF_Msk;
pub const SYSCFG_SWPR_PAGE0_Pos: u32 = 0;
pub const SYSCFG_SWPR_PAGE0_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE0_Pos;
pub const SYSCFG_SWPR_PAGE0: u32 = SYSCFG_SWPR_PAGE0_Msk;
pub const SYSCFG_SWPR_PAGE1_Pos: u32 = 1;
pub const SYSCFG_SWPR_PAGE1_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE1_Pos;
pub const SYSCFG_SWPR_PAGE1: u32 = SYSCFG_SWPR_PAGE1_Msk;
pub const SYSCFG_SWPR_PAGE2_Pos: u32 = 2;
pub const SYSCFG_SWPR_PAGE2_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE2_Pos;
pub const SYSCFG_SWPR_PAGE2: u32 = SYSCFG_SWPR_PAGE2_Msk;
pub const SYSCFG_SWPR_PAGE3_Pos: u32 = 3;
pub const SYSCFG_SWPR_PAGE3_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE3_Pos;
pub const SYSCFG_SWPR_PAGE3: u32 = SYSCFG_SWPR_PAGE3_Msk;
pub const SYSCFG_SWPR_PAGE4_Pos: u32 = 4;
pub const SYSCFG_SWPR_PAGE4_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE4_Pos;
pub const SYSCFG_SWPR_PAGE4: u32 = SYSCFG_SWPR_PAGE4_Msk;
pub const SYSCFG_SWPR_PAGE5_Pos: u32 = 5;
pub const SYSCFG_SWPR_PAGE5_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE5_Pos;
pub const SYSCFG_SWPR_PAGE5: u32 = SYSCFG_SWPR_PAGE5_Msk;
pub const SYSCFG_SWPR_PAGE6_Pos: u32 = 6;
pub const SYSCFG_SWPR_PAGE6_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE6_Pos;
pub const SYSCFG_SWPR_PAGE6: u32 = SYSCFG_SWPR_PAGE6_Msk;
pub const SYSCFG_SWPR_PAGE7_Pos: u32 = 7;
pub const SYSCFG_SWPR_PAGE7_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE7_Pos;
pub const SYSCFG_SWPR_PAGE7: u32 = SYSCFG_SWPR_PAGE7_Msk;
pub const SYSCFG_SWPR_PAGE8_Pos: u32 = 8;
pub const SYSCFG_SWPR_PAGE8_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE8_Pos;
pub const SYSCFG_SWPR_PAGE8: u32 = SYSCFG_SWPR_PAGE8_Msk;
pub const SYSCFG_SWPR_PAGE9_Pos: u32 = 9;
pub const SYSCFG_SWPR_PAGE9_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE9_Pos;
pub const SYSCFG_SWPR_PAGE9: u32 = SYSCFG_SWPR_PAGE9_Msk;
pub const SYSCFG_SWPR_PAGE10_Pos: u32 = 10;
pub const SYSCFG_SWPR_PAGE10_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE10_Pos;
pub const SYSCFG_SWPR_PAGE10: u32 = SYSCFG_SWPR_PAGE10_Msk;
pub const SYSCFG_SWPR_PAGE11_Pos: u32 = 11;
pub const SYSCFG_SWPR_PAGE11_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE11_Pos;
pub const SYSCFG_SWPR_PAGE11: u32 = SYSCFG_SWPR_PAGE11_Msk;
pub const SYSCFG_SWPR_PAGE12_Pos: u32 = 12;
pub const SYSCFG_SWPR_PAGE12_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE12_Pos;
pub const SYSCFG_SWPR_PAGE12: u32 = SYSCFG_SWPR_PAGE12_Msk;
pub const SYSCFG_SWPR_PAGE13_Pos: u32 = 13;
pub const SYSCFG_SWPR_PAGE13_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE13_Pos;
pub const SYSCFG_SWPR_PAGE13: u32 = SYSCFG_SWPR_PAGE13_Msk;
pub const SYSCFG_SWPR_PAGE14_Pos: u32 = 14;
pub const SYSCFG_SWPR_PAGE14_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE14_Pos;
pub const SYSCFG_SWPR_PAGE14: u32 = SYSCFG_SWPR_PAGE14_Msk;
pub const SYSCFG_SWPR_PAGE15_Pos: u32 = 15;
pub const SYSCFG_SWPR_PAGE15_Msk: u32 = 0x1 << SYSCFG_SWPR_PAGE15_Pos;
pub const SYSCFG_SWPR_PAGE15: u32 = SYSCFG_SWPR_PAGE15_Msk;
pub const SYSCFG_SKR_KEY_Pos: u32 = 0;
pub const SYSCFG_SKR_KEY_Msk: u32 = 0xFF << SYSCFG_SKR_KEY_Pos;
pub const SYSCFG_SKR_KEY: u32 = SYSCFG_SKR_KEY_Msk;
pub const TIM_CR1_CEN_Pos: u32 = 0;
pub const TIM_CR1_CEN_Msk: u32 = 0x1 << TIM_CR1_CEN_Pos;
pub const TIM_CR1_CEN: u32 = TIM_CR1_CEN_Msk;
pub const TIM_CR1_UDIS_Pos: u32 = 1;
pub const TIM_CR1_UDIS_Msk: u32 = 0x1 << TIM_CR1_UDIS_Pos;
pub const TIM_CR1_UDIS: u32 = TIM_CR1_UDIS_Msk;
pub const TIM_CR1_URS_Pos: u32 = 2;
pub const TIM_CR1_URS_Msk: u32 = 0x1 << TIM_CR1_URS_Pos;
pub const TIM_CR1_URS: u32 = TIM_CR1_URS_Msk;
pub const TIM_CR1_OPM_Pos: u32 = 3;
pub const TIM_CR1_OPM_Msk: u32 = 0x1 << TIM_CR1_OPM_Pos;
pub const TIM_CR1_OPM: u32 = TIM_CR1_OPM_Msk;
pub const TIM_CR1_DIR_Pos: u32 = 4;
pub const TIM_CR1_DIR_Msk: u32 = 0x1 << TIM_CR1_DIR_Pos;
pub const TIM_CR1_DIR: u32 = TIM_CR1_DIR_Msk;
pub const TIM_CR1_CMS_Pos: u32 = 5;
pub const TIM_CR1_CMS_Msk: u32 = 0x3 << TIM_CR1_CMS_Pos;
pub const TIM_CR1_CMS: u32 = TIM_CR1_CMS_Msk;
pub const TIM_CR1_CMS_0: u32 = 0x1 << TIM_CR1_CMS_Pos;
pub const TIM_CR1_CMS_1: u32 = 0x2 << TIM_CR1_CMS_Pos;
pub const TIM_CR1_ARPE_Pos: u32 = 7;
pub const TIM_CR1_ARPE_Msk: u32 = 0x1 << TIM_CR1_ARPE_Pos;
pub const TIM_CR1_ARPE: u32 = TIM_CR1_ARPE_Msk;
pub const TIM_CR1_CKD_Pos: u32 = 8;
pub const TIM_CR1_CKD_Msk: u32 = 0x3 << TIM_CR1_CKD_Pos;
pub const TIM_CR1_CKD: u32 = TIM_CR1_CKD_Msk;
pub const TIM_CR1_CKD_0: u32 = 0x1 << TIM_CR1_CKD_Pos;
pub const TIM_CR1_CKD_1: u32 = 0x2 << TIM_CR1_CKD_Pos;
pub const TIM_CR1_UIFREMAP_Pos: u32 = 11;
pub const TIM_CR1_UIFREMAP_Msk: u32 = 0x1 << TIM_CR1_UIFREMAP_Pos;
pub const TIM_CR1_UIFREMAP: u32 = TIM_CR1_UIFREMAP_Msk;
pub const TIM_CR1_DITHEN_Pos: u32 = 12;
pub const TIM_CR1_DITHEN_Msk: u32 = 0x1 << TIM_CR1_DITHEN_Pos;
pub const TIM_CR1_DITHEN: u32 = TIM_CR1_DITHEN_Msk;
pub const TIM_CR2_CCPC_Pos: u32 = 0;
pub const TIM_CR2_CCPC_Msk: u32 = 0x1 << TIM_CR2_CCPC_Pos;
pub const TIM_CR2_CCPC: u32 = TIM_CR2_CCPC_Msk;
pub const TIM_CR2_CCUS_Pos: u32 = 2;
pub const TIM_CR2_CCUS_Msk: u32 = 0x1 << TIM_CR2_CCUS_Pos;
pub const TIM_CR2_CCUS: u32 = TIM_CR2_CCUS_Msk;
pub const TIM_CR2_CCDS_Pos: u32 = 3;
pub const TIM_CR2_CCDS_Msk: u32 = 0x1 << TIM_CR2_CCDS_Pos;
pub const TIM_CR2_CCDS: u32 = TIM_CR2_CCDS_Msk;
pub const TIM_CR2_MMS_Pos: u32 = 4;
pub const TIM_CR2_MMS_Msk: u32 = 0x200007 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS: u32 = TIM_CR2_MMS_Msk;
pub const TIM_CR2_MMS_0: u32 = 0x000001 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS_1: u32 = 0x000002 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS_2: u32 = 0x000004 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS_3: u32 = 0x200000 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_TI1S_Pos: u32 = 7;
pub const TIM_CR2_TI1S_Msk: u32 = 0x1 << TIM_CR2_TI1S_Pos;
pub const TIM_CR2_TI1S: u32 = TIM_CR2_TI1S_Msk;
pub const TIM_CR2_OIS1_Pos: u32 = 8;
pub const TIM_CR2_OIS1_Msk: u32 = 0x1 << TIM_CR2_OIS1_Pos;
pub const TIM_CR2_OIS1: u32 = TIM_CR2_OIS1_Msk;
pub const TIM_CR2_OIS1N_Pos: u32 = 9;
pub const TIM_CR2_OIS1N_Msk: u32 = 0x1 << TIM_CR2_OIS1N_Pos;
pub const TIM_CR2_OIS1N: u32 = TIM_CR2_OIS1N_Msk;
pub const TIM_CR2_OIS2_Pos: u32 = 10;
pub const TIM_CR2_OIS2_Msk: u32 = 0x1 << TIM_CR2_OIS2_Pos;
pub const TIM_CR2_OIS2: u32 = TIM_CR2_OIS2_Msk;
pub const TIM_CR2_OIS2N_Pos: u32 = 11;
pub const TIM_CR2_OIS2N_Msk: u32 = 0x1 << TIM_CR2_OIS2N_Pos;
pub const TIM_CR2_OIS2N: u32 = TIM_CR2_OIS2N_Msk;
pub const TIM_CR2_OIS3_Pos: u32 = 12;
pub const TIM_CR2_OIS3_Msk: u32 = 0x1 << TIM_CR2_OIS3_Pos;
pub const TIM_CR2_OIS3: u32 = TIM_CR2_OIS3_Msk;
pub const TIM_CR2_OIS3N_Pos: u32 = 13;
pub const TIM_CR2_OIS3N_Msk: u32 = 0x1 << TIM_CR2_OIS3N_Pos;
pub const TIM_CR2_OIS3N: u32 = TIM_CR2_OIS3N_Msk;
pub const TIM_CR2_OIS4_Pos: u32 = 14;
pub const TIM_CR2_OIS4_Msk: u32 = 0x1 << TIM_CR2_OIS4_Pos;
pub const TIM_CR2_OIS4: u32 = TIM_CR2_OIS4_Msk;
pub const TIM_CR2_OIS4N_Pos: u32 = 15;
pub const TIM_CR2_OIS4N_Msk: u32 = 0x1 << TIM_CR2_OIS4N_Pos;
pub const TIM_CR2_OIS4N: u32 = TIM_CR2_OIS4N_Msk;
pub const TIM_CR2_OIS5_Pos: u32 = 16;
pub const TIM_CR2_OIS5_Msk: u32 = 0x1 << TIM_CR2_OIS5_Pos;
pub const TIM_CR2_OIS5: u32 = TIM_CR2_OIS5_Msk;
pub const TIM_CR2_OIS6_Pos: u32 = 18;
pub const TIM_CR2_OIS6_Msk: u32 = 0x1 << TIM_CR2_OIS6_Pos;
pub const TIM_CR2_OIS6: u32 = TIM_CR2_OIS6_Msk;
pub const TIM_CR2_MMS2_Pos: u32 = 20;
pub const TIM_CR2_MMS2_Msk: u32 = 0xF << TIM_CR2_MMS2_Pos;
pub const TIM_CR2_MMS2: u32 = TIM_CR2_MMS2_Msk;
pub const TIM_CR2_MMS2_0: u32 = 0x1 << TIM_CR2_MMS2_Pos;
pub const TIM_CR2_MMS2_1: u32 = 0x2 << TIM_CR2_MMS2_Pos;
pub const TIM_CR2_MMS2_2: u32 = 0x4 << TIM_CR2_MMS2_Pos;
pub const TIM_CR2_MMS2_3: u32 = 0x8 << TIM_CR2_MMS2_Pos;
pub const TIM_SMCR_SMS_Pos: u32 = 0;
pub const TIM_SMCR_SMS_Msk: u32 = 0x10007 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS: u32 = TIM_SMCR_SMS_Msk;
pub const TIM_SMCR_SMS_0: u32 = 0x00001 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS_1: u32 = 0x00002 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS_2: u32 = 0x00004 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS_3: u32 = 0x10000 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_OCCS_Pos: u32 = 3;
pub const TIM_SMCR_OCCS_Msk: u32 = 0x1 << TIM_SMCR_OCCS_Pos;
pub const TIM_SMCR_OCCS: u32 = TIM_SMCR_OCCS_Msk;
pub const TIM_SMCR_TS_Pos: u32 = 4;
pub const TIM_SMCR_TS_Msk: u32 = 0x30007 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS: u32 = TIM_SMCR_TS_Msk;
pub const TIM_SMCR_TS_0: u32 = 0x00001 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS_1: u32 = 0x00002 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS_2: u32 = 0x00004 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS_3: u32 = 0x10000 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS_4: u32 = 0x20000 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_MSM_Pos: u32 = 7;
pub const TIM_SMCR_MSM_Msk: u32 = 0x1 << TIM_SMCR_MSM_Pos;
pub const TIM_SMCR_MSM: u32 = TIM_SMCR_MSM_Msk;
pub const TIM_SMCR_ETF_Pos: u32 = 8;
pub const TIM_SMCR_ETF_Msk: u32 = 0xF << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF: u32 = TIM_SMCR_ETF_Msk;
pub const TIM_SMCR_ETF_0: u32 = 0x1 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF_1: u32 = 0x2 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF_2: u32 = 0x4 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF_3: u32 = 0x8 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETPS_Pos: u32 = 12;
pub const TIM_SMCR_ETPS_Msk: u32 = 0x3 << TIM_SMCR_ETPS_Pos;
pub const TIM_SMCR_ETPS: u32 = TIM_SMCR_ETPS_Msk;
pub const TIM_SMCR_ETPS_0: u32 = 0x1 << TIM_SMCR_ETPS_Pos;
pub const TIM_SMCR_ETPS_1: u32 = 0x2 << TIM_SMCR_ETPS_Pos;
pub const TIM_SMCR_ECE_Pos: u32 = 14;
pub const TIM_SMCR_ECE_Msk: u32 = 0x1 << TIM_SMCR_ECE_Pos;
pub const TIM_SMCR_ECE: u32 = TIM_SMCR_ECE_Msk;
pub const TIM_SMCR_ETP_Pos: u32 = 15;
pub const TIM_SMCR_ETP_Msk: u32 = 0x1 << TIM_SMCR_ETP_Pos;
pub const TIM_SMCR_ETP: u32 = TIM_SMCR_ETP_Msk;
pub const TIM_SMCR_SMSPE_Pos: u32 = 24;
pub const TIM_SMCR_SMSPE_Msk: u32 = 0x1 << TIM_SMCR_SMSPE_Pos;
pub const TIM_SMCR_SMSPE: u32 = TIM_SMCR_SMSPE_Msk;
pub const TIM_SMCR_SMSPS_Pos: u32 = 25;
pub const TIM_SMCR_SMSPS_Msk: u32 = 0x1 << TIM_SMCR_SMSPS_Pos;
pub const TIM_SMCR_SMSPS: u32 = TIM_SMCR_SMSPS_Msk;
pub const TIM_DIER_UIE_Pos: u32 = 0;
pub const TIM_DIER_UIE_Msk: u32 = 0x1 << TIM_DIER_UIE_Pos;
pub const TIM_DIER_UIE: u32 = TIM_DIER_UIE_Msk;
pub const TIM_DIER_CC1IE_Pos: u32 = 1;
pub const TIM_DIER_CC1IE_Msk: u32 = 0x1 << TIM_DIER_CC1IE_Pos;
pub const TIM_DIER_CC1IE: u32 = TIM_DIER_CC1IE_Msk;
pub const TIM_DIER_CC2IE_Pos: u32 = 2;
pub const TIM_DIER_CC2IE_Msk: u32 = 0x1 << TIM_DIER_CC2IE_Pos;
pub const TIM_DIER_CC2IE: u32 = TIM_DIER_CC2IE_Msk;
pub const TIM_DIER_CC3IE_Pos: u32 = 3;
pub const TIM_DIER_CC3IE_Msk: u32 = 0x1 << TIM_DIER_CC3IE_Pos;
pub const TIM_DIER_CC3IE: u32 = TIM_DIER_CC3IE_Msk;
pub const TIM_DIER_CC4IE_Pos: u32 = 4;
pub const TIM_DIER_CC4IE_Msk: u32 = 0x1 << TIM_DIER_CC4IE_Pos;
pub const TIM_DIER_CC4IE: u32 = TIM_DIER_CC4IE_Msk;
pub const TIM_DIER_COMIE_Pos: u32 = 5;
pub const TIM_DIER_COMIE_Msk: u32 = 0x1 << TIM_DIER_COMIE_Pos;
pub const TIM_DIER_COMIE: u32 = TIM_DIER_COMIE_Msk;
pub const TIM_DIER_TIE_Pos: u32 = 6;
pub const TIM_DIER_TIE_Msk: u32 = 0x1 << TIM_DIER_TIE_Pos;
pub const TIM_DIER_TIE: u32 = TIM_DIER_TIE_Msk;
pub const TIM_DIER_BIE_Pos: u32 = 7;
pub const TIM_DIER_BIE_Msk: u32 = 0x1 << TIM_DIER_BIE_Pos;
pub const TIM_DIER_BIE: u32 = TIM_DIER_BIE_Msk;
pub const TIM_DIER_UDE_Pos: u32 = 8;
pub const TIM_DIER_UDE_Msk: u32 = 0x1 << TIM_DIER_UDE_Pos;
pub const TIM_DIER_UDE: u32 = TIM_DIER_UDE_Msk;
pub const TIM_DIER_CC1DE_Pos: u32 = 9;
pub const TIM_DIER_CC1DE_Msk: u32 = 0x1 << TIM_DIER_CC1DE_Pos;
pub const TIM_DIER_CC1DE: u32 = TIM_DIER_CC1DE_Msk;
pub const TIM_DIER_CC2DE_Pos: u32 = 10;
pub const TIM_DIER_CC2DE_Msk: u32 = 0x1 << TIM_DIER_CC2DE_Pos;
pub const TIM_DIER_CC2DE: u32 = TIM_DIER_CC2DE_Msk;
pub const TIM_DIER_CC3DE_Pos: u32 = 11;
pub const TIM_DIER_CC3DE_Msk: u32 = 0x1 << TIM_DIER_CC3DE_Pos;
pub const TIM_DIER_CC3DE: u32 = TIM_DIER_CC3DE_Msk;
pub const TIM_DIER_CC4DE_Pos: u32 = 12;
pub const TIM_DIER_CC4DE_Msk: u32 = 0x1 << TIM_DIER_CC4DE_Pos;
pub const TIM_DIER_CC4DE: u32 = TIM_DIER_CC4DE_Msk;
pub const TIM_DIER_COMDE_Pos: u32 = 13;
pub const TIM_DIER_COMDE_Msk: u32 = 0x1 << TIM_DIER_COMDE_Pos;
pub const TIM_DIER_COMDE: u32 = TIM_DIER_COMDE_Msk;
pub const TIM_DIER_TDE_Pos: u32 = 14;
pub const TIM_DIER_TDE_Msk: u32 = 0x1 << TIM_DIER_TDE_Pos;
pub const TIM_DIER_TDE: u32 = TIM_DIER_TDE_Msk;
pub const TIM_DIER_IDXIE_Pos: u32 = 20;
pub const TIM_DIER_IDXIE_Msk: u32 = 0x1 << TIM_DIER_IDXIE_Pos;
pub const TIM_DIER_IDXIE: u32 = TIM_DIER_IDXIE_Msk;
pub const TIM_DIER_DIRIE_Pos: u32 = 21;
pub const TIM_DIER_DIRIE_Msk: u32 = 0x1 << TIM_DIER_DIRIE_Pos;
pub const TIM_DIER_DIRIE: u32 = TIM_DIER_DIRIE_Msk;
pub const TIM_DIER_IERRIE_Pos: u32 = 22;
pub const TIM_DIER_IERRIE_Msk: u32 = 0x1 << TIM_DIER_IERRIE_Pos;
pub const TIM_DIER_IERRIE: u32 = TIM_DIER_IERRIE_Msk;
pub const TIM_DIER_TERRIE_Pos: u32 = 23;
pub const TIM_DIER_TERRIE_Msk: u32 = 0x1 << TIM_DIER_TERRIE_Pos;
pub const TIM_DIER_TERRIE: u32 = TIM_DIER_TERRIE_Msk;
pub const TIM_SR_UIF_Pos: u32 = 0;
pub const TIM_SR_UIF_Msk: u32 = 0x1 << TIM_SR_UIF_Pos;
pub const TIM_SR_UIF: u32 = TIM_SR_UIF_Msk;
pub const TIM_SR_CC1IF_Pos: u32 = 1;
pub const TIM_SR_CC1IF_Msk: u32 = 0x1 << TIM_SR_CC1IF_Pos;
pub const TIM_SR_CC1IF: u32 = TIM_SR_CC1IF_Msk;
pub const TIM_SR_CC2IF_Pos: u32 = 2;
pub const TIM_SR_CC2IF_Msk: u32 = 0x1 << TIM_SR_CC2IF_Pos;
pub const TIM_SR_CC2IF: u32 = TIM_SR_CC2IF_Msk;
pub const TIM_SR_CC3IF_Pos: u32 = 3;
pub const TIM_SR_CC3IF_Msk: u32 = 0x1 << TIM_SR_CC3IF_Pos;
pub const TIM_SR_CC3IF: u32 = TIM_SR_CC3IF_Msk;
pub const TIM_SR_CC4IF_Pos: u32 = 4;
pub const TIM_SR_CC4IF_Msk: u32 = 0x1 << TIM_SR_CC4IF_Pos;
pub const TIM_SR_CC4IF: u32 = TIM_SR_CC4IF_Msk;
pub const TIM_SR_COMIF_Pos: u32 = 5;
pub const TIM_SR_COMIF_Msk: u32 = 0x1 << TIM_SR_COMIF_Pos;
pub const TIM_SR_COMIF: u32 = TIM_SR_COMIF_Msk;
pub const TIM_SR_TIF_Pos: u32 = 6;
pub const TIM_SR_TIF_Msk: u32 = 0x1 << TIM_SR_TIF_Pos;
pub const TIM_SR_TIF: u32 = TIM_SR_TIF_Msk;
pub const TIM_SR_BIF_Pos: u32 = 7;
pub const TIM_SR_BIF_Msk: u32 = 0x1 << TIM_SR_BIF_Pos;
pub const TIM_SR_BIF: u32 = TIM_SR_BIF_Msk;
pub const TIM_SR_B2IF_Pos: u32 = 8;
pub const TIM_SR_B2IF_Msk: u32 = 0x1 << TIM_SR_B2IF_Pos;
pub const TIM_SR_B2IF: u32 = TIM_SR_B2IF_Msk;
pub const TIM_SR_CC1OF_Pos: u32 = 9;
pub const TIM_SR_CC1OF_Msk: u32 = 0x1 << TIM_SR_CC1OF_Pos;
pub const TIM_SR_CC1OF: u32 = TIM_SR_CC1OF_Msk;
pub const TIM_SR_CC2OF_Pos: u32 = 10;
pub const TIM_SR_CC2OF_Msk: u32 = 0x1 << TIM_SR_CC2OF_Pos;
pub const TIM_SR_CC2OF: u32 = TIM_SR_CC2OF_Msk;
pub const TIM_SR_CC3OF_Pos: u32 = 11;
pub const TIM_SR_CC3OF_Msk: u32 = 0x1 << TIM_SR_CC3OF_Pos;
pub const TIM_SR_CC3OF: u32 = TIM_SR_CC3OF_Msk;
pub const TIM_SR_CC4OF_Pos: u32 = 12;
pub const TIM_SR_CC4OF_Msk: u32 = 0x1 << TIM_SR_CC4OF_Pos;
pub const TIM_SR_CC4OF: u32 = TIM_SR_CC4OF_Msk;
pub const TIM_SR_SBIF_Pos: u32 = 13;
pub const TIM_SR_SBIF_Msk: u32 = 0x1 << TIM_SR_SBIF_Pos;
pub const TIM_SR_SBIF: u32 = TIM_SR_SBIF_Msk;
pub const TIM_SR_CC5IF_Pos: u32 = 16;
pub const TIM_SR_CC5IF_Msk: u32 = 0x1 << TIM_SR_CC5IF_Pos;
pub const TIM_SR_CC5IF: u32 = TIM_SR_CC5IF_Msk;
pub const TIM_SR_CC6IF_Pos: u32 = 17;
pub const TIM_SR_CC6IF_Msk: u32 = 0x1 << TIM_SR_CC6IF_Pos;
pub const TIM_SR_CC6IF: u32 = TIM_SR_CC6IF_Msk;
pub const TIM_SR_IDXF_Pos: u32 = 20;
pub const TIM_SR_IDXF_Msk: u32 = 0x1 << TIM_SR_IDXF_Pos;
pub const TIM_SR_IDXF: u32 = TIM_SR_IDXF_Msk;
pub const TIM_SR_DIRF_Pos: u32 = 21;
pub const TIM_SR_DIRF_Msk: u32 = 0x1 << TIM_SR_DIRF_Pos;
pub const TIM_SR_DIRF: u32 = TIM_SR_DIRF_Msk;
pub const TIM_SR_IERRF_Pos: u32 = 22;
pub const TIM_SR_IERRF_Msk: u32 = 0x1 << TIM_SR_IERRF_Pos;
pub const TIM_SR_IERRF: u32 = TIM_SR_IERRF_Msk;
pub const TIM_SR_TERRF_Pos: u32 = 23;
pub const TIM_SR_TERRF_Msk: u32 = 0x1 << TIM_SR_TERRF_Pos;
pub const TIM_SR_TERRF: u32 = TIM_SR_TERRF_Msk;
pub const TIM_EGR_UG_Pos: u32 = 0;
pub const TIM_EGR_UG_Msk: u32 = 0x1 << TIM_EGR_UG_Pos;
pub const TIM_EGR_UG: u32 = TIM_EGR_UG_Msk;
pub const TIM_EGR_CC1G_Pos: u32 = 1;
pub const TIM_EGR_CC1G_Msk: u32 = 0x1 << TIM_EGR_CC1G_Pos;
pub const TIM_EGR_CC1G: u32 = TIM_EGR_CC1G_Msk;
pub const TIM_EGR_CC2G_Pos: u32 = 2;
pub const TIM_EGR_CC2G_Msk: u32 = 0x1 << TIM_EGR_CC2G_Pos;
pub const TIM_EGR_CC2G: u32 = TIM_EGR_CC2G_Msk;
pub const TIM_EGR_CC3G_Pos: u32 = 3;
pub const TIM_EGR_CC3G_Msk: u32 = 0x1 << TIM_EGR_CC3G_Pos;
pub const TIM_EGR_CC3G: u32 = TIM_EGR_CC3G_Msk;
pub const TIM_EGR_CC4G_Pos: u32 = 4;
pub const TIM_EGR_CC4G_Msk: u32 = 0x1 << TIM_EGR_CC4G_Pos;
pub const TIM_EGR_CC4G: u32 = TIM_EGR_CC4G_Msk;
pub const TIM_EGR_COMG_Pos: u32 = 5;
pub const TIM_EGR_COMG_Msk: u32 = 0x1 << TIM_EGR_COMG_Pos;
pub const TIM_EGR_COMG: u32 = TIM_EGR_COMG_Msk;
pub const TIM_EGR_TG_Pos: u32 = 6;
pub const TIM_EGR_TG_Msk: u32 = 0x1 << TIM_EGR_TG_Pos;
pub const TIM_EGR_TG: u32 = TIM_EGR_TG_Msk;
pub const TIM_EGR_BG_Pos: u32 = 7;
pub const TIM_EGR_BG_Msk: u32 = 0x1 << TIM_EGR_BG_Pos;
pub const TIM_EGR_BG: u32 = TIM_EGR_BG_Msk;
pub const TIM_EGR_B2G_Pos: u32 = 8;
pub const TIM_EGR_B2G_Msk: u32 = 0x1 << TIM_EGR_B2G_Pos;
pub const TIM_EGR_B2G: u32 = TIM_EGR_B2G_Msk;
pub const TIM_CCMR1_CC1S_Pos: u32 = 0;
pub const TIM_CCMR1_CC1S_Msk: u32 = 0x3 << TIM_CCMR1_CC1S_Pos;
pub const TIM_CCMR1_CC1S: u32 = TIM_CCMR1_CC1S_Msk;
pub const TIM_CCMR1_CC1S_0: u32 = 0x1 << TIM_CCMR1_CC1S_Pos;
pub const TIM_CCMR1_CC1S_1: u32 = 0x2 << TIM_CCMR1_CC1S_Pos;
pub const TIM_CCMR1_OC1FE_Pos: u32 = 2;
pub const TIM_CCMR1_OC1FE_Msk: u32 = 0x1 << TIM_CCMR1_OC1FE_Pos;
pub const TIM_CCMR1_OC1FE: u32 = TIM_CCMR1_OC1FE_Msk;
pub const TIM_CCMR1_OC1PE_Pos: u32 = 3;
pub const TIM_CCMR1_OC1PE_Msk: u32 = 0x1 << TIM_CCMR1_OC1PE_Pos;
pub const TIM_CCMR1_OC1PE: u32 = TIM_CCMR1_OC1PE_Msk;
pub const TIM_CCMR1_OC1M_Pos: u32 = 4;
pub const TIM_CCMR1_OC1M_Msk: u32 = 0x1007 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M: u32 = TIM_CCMR1_OC1M_Msk;
pub const TIM_CCMR1_OC1M_0: u32 = 0x0001 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M_1: u32 = 0x0002 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M_2: u32 = 0x0004 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M_3: u32 = 0x1000 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1CE_Pos: u32 = 7;
pub const TIM_CCMR1_OC1CE_Msk: u32 = 0x1 << TIM_CCMR1_OC1CE_Pos;
pub const TIM_CCMR1_OC1CE: u32 = TIM_CCMR1_OC1CE_Msk;
pub const TIM_CCMR1_CC2S_Pos: u32 = 8;
pub const TIM_CCMR1_CC2S_Msk: u32 = 0x3 << TIM_CCMR1_CC2S_Pos;
pub const TIM_CCMR1_CC2S: u32 = TIM_CCMR1_CC2S_Msk;
pub const TIM_CCMR1_CC2S_0: u32 = 0x1 << TIM_CCMR1_CC2S_Pos;
pub const TIM_CCMR1_CC2S_1: u32 = 0x2 << TIM_CCMR1_CC2S_Pos;
pub const TIM_CCMR1_OC2FE_Pos: u32 = 10;
pub const TIM_CCMR1_OC2FE_Msk: u32 = 0x1 << TIM_CCMR1_OC2FE_Pos;
pub const TIM_CCMR1_OC2FE: u32 = TIM_CCMR1_OC2FE_Msk;
pub const TIM_CCMR1_OC2PE_Pos: u32 = 11;
pub const TIM_CCMR1_OC2PE_Msk: u32 = 0x1 << TIM_CCMR1_OC2PE_Pos;
pub const TIM_CCMR1_OC2PE: u32 = TIM_CCMR1_OC2PE_Msk;
pub const TIM_CCMR1_OC2M_Pos: u32 = 12;
pub const TIM_CCMR1_OC2M_Msk: u32 = 0x1007 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M: u32 = TIM_CCMR1_OC2M_Msk;
pub const TIM_CCMR1_OC2M_0: u32 = 0x0001 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M_1: u32 = 0x0002 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M_2: u32 = 0x0004 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M_3: u32 = 0x1000 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2CE_Pos: u32 = 15;
pub const TIM_CCMR1_OC2CE_Msk: u32 = 0x1 << TIM_CCMR1_OC2CE_Pos;
pub const TIM_CCMR1_OC2CE: u32 = TIM_CCMR1_OC2CE_Msk;
pub const TIM_CCMR1_IC1PSC_Pos: u32 = 2;
pub const TIM_CCMR1_IC1PSC_Msk: u32 = 0x3 << TIM_CCMR1_IC1PSC_Pos;
pub const TIM_CCMR1_IC1PSC: u32 = TIM_CCMR1_IC1PSC_Msk;
pub const TIM_CCMR1_IC1PSC_0: u32 = 0x1 << TIM_CCMR1_IC1PSC_Pos;
pub const TIM_CCMR1_IC1PSC_1: u32 = 0x2 << TIM_CCMR1_IC1PSC_Pos;
pub const TIM_CCMR1_IC1F_Pos: u32 = 4;
pub const TIM_CCMR1_IC1F_Msk: u32 = 0xF << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F: u32 = TIM_CCMR1_IC1F_Msk;
pub const TIM_CCMR1_IC1F_0: u32 = 0x1 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F_1: u32 = 0x2 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F_2: u32 = 0x4 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F_3: u32 = 0x8 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC2PSC_Pos: u32 = 10;
pub const TIM_CCMR1_IC2PSC_Msk: u32 = 0x3 << TIM_CCMR1_IC2PSC_Pos;
pub const TIM_CCMR1_IC2PSC: u32 = TIM_CCMR1_IC2PSC_Msk;
pub const TIM_CCMR1_IC2PSC_0: u32 = 0x1 << TIM_CCMR1_IC2PSC_Pos;
pub const TIM_CCMR1_IC2PSC_1: u32 = 0x2 << TIM_CCMR1_IC2PSC_Pos;
pub const TIM_CCMR1_IC2F_Pos: u32 = 12;
pub const TIM_CCMR1_IC2F_Msk: u32 = 0xF << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F: u32 = TIM_CCMR1_IC2F_Msk;
pub const TIM_CCMR1_IC2F_0: u32 = 0x1 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F_1: u32 = 0x2 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F_2: u32 = 0x4 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F_3: u32 = 0x8 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR2_CC3S_Pos: u32 = 0;
pub const TIM_CCMR2_CC3S_Msk: u32 = 0x3 << TIM_CCMR2_CC3S_Pos;
pub const TIM_CCMR2_CC3S: u32 = TIM_CCMR2_CC3S_Msk;
pub const TIM_CCMR2_CC3S_0: u32 = 0x1 << TIM_CCMR2_CC3S_Pos;
pub const TIM_CCMR2_CC3S_1: u32 = 0x2 << TIM_CCMR2_CC3S_Pos;
pub const TIM_CCMR2_OC3FE_Pos: u32 = 2;
pub const TIM_CCMR2_OC3FE_Msk: u32 = 0x1 << TIM_CCMR2_OC3FE_Pos;
pub const TIM_CCMR2_OC3FE: u32 = TIM_CCMR2_OC3FE_Msk;
pub const TIM_CCMR2_OC3PE_Pos: u32 = 3;
pub const TIM_CCMR2_OC3PE_Msk: u32 = 0x1 << TIM_CCMR2_OC3PE_Pos;
pub const TIM_CCMR2_OC3PE: u32 = TIM_CCMR2_OC3PE_Msk;
pub const TIM_CCMR2_OC3M_Pos: u32 = 4;
pub const TIM_CCMR2_OC3M_Msk: u32 = 0x1007 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M: u32 = TIM_CCMR2_OC3M_Msk;
pub const TIM_CCMR2_OC3M_0: u32 = 0x0001 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M_1: u32 = 0x0002 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M_2: u32 = 0x0004 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M_3: u32 = 0x1000 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3CE_Pos: u32 = 7;
pub const TIM_CCMR2_OC3CE_Msk: u32 = 0x1 << TIM_CCMR2_OC3CE_Pos;
pub const TIM_CCMR2_OC3CE: u32 = TIM_CCMR2_OC3CE_Msk;
pub const TIM_CCMR2_CC4S_Pos: u32 = 8;
pub const TIM_CCMR2_CC4S_Msk: u32 = 0x3 << TIM_CCMR2_CC4S_Pos;
pub const TIM_CCMR2_CC4S: u32 = TIM_CCMR2_CC4S_Msk;
pub const TIM_CCMR2_CC4S_0: u32 = 0x1 << TIM_CCMR2_CC4S_Pos;
pub const TIM_CCMR2_CC4S_1: u32 = 0x2 << TIM_CCMR2_CC4S_Pos;
pub const TIM_CCMR2_OC4FE_Pos: u32 = 10;
pub const TIM_CCMR2_OC4FE_Msk: u32 = 0x1 << TIM_CCMR2_OC4FE_Pos;
pub const TIM_CCMR2_OC4FE: u32 = TIM_CCMR2_OC4FE_Msk;
pub const TIM_CCMR2_OC4PE_Pos: u32 = 11;
pub const TIM_CCMR2_OC4PE_Msk: u32 = 0x1 << TIM_CCMR2_OC4PE_Pos;
pub const TIM_CCMR2_OC4PE: u32 = TIM_CCMR2_OC4PE_Msk;
pub const TIM_CCMR2_OC4M_Pos: u32 = 12;
pub const TIM_CCMR2_OC4M_Msk: u32 = 0x1007 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M: u32 = TIM_CCMR2_OC4M_Msk;
pub const TIM_CCMR2_OC4M_0: u32 = 0x0001 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M_1: u32 = 0x0002 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M_2: u32 = 0x0004 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M_3: u32 = 0x1000 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4CE_Pos: u32 = 15;
pub const TIM_CCMR2_OC4CE_Msk: u32 = 0x1 << TIM_CCMR2_OC4CE_Pos;
pub const TIM_CCMR2_OC4CE: u32 = TIM_CCMR2_OC4CE_Msk;
pub const TIM_CCMR2_IC3PSC_Pos: u32 = 2;
pub const TIM_CCMR2_IC3PSC_Msk: u32 = 0x3 << TIM_CCMR2_IC3PSC_Pos;
pub const TIM_CCMR2_IC3PSC: u32 = TIM_CCMR2_IC3PSC_Msk;
pub const TIM_CCMR2_IC3PSC_0: u32 = 0x1 << TIM_CCMR2_IC3PSC_Pos;
pub const TIM_CCMR2_IC3PSC_1: u32 = 0x2 << TIM_CCMR2_IC3PSC_Pos;
pub const TIM_CCMR2_IC3F_Pos: u32 = 4;
pub const TIM_CCMR2_IC3F_Msk: u32 = 0xF << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F: u32 = TIM_CCMR2_IC3F_Msk;
pub const TIM_CCMR2_IC3F_0: u32 = 0x1 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F_1: u32 = 0x2 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F_2: u32 = 0x4 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F_3: u32 = 0x8 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC4PSC_Pos: u32 = 10;
pub const TIM_CCMR2_IC4PSC_Msk: u32 = 0x3 << TIM_CCMR2_IC4PSC_Pos;
pub const TIM_CCMR2_IC4PSC: u32 = TIM_CCMR2_IC4PSC_Msk;
pub const TIM_CCMR2_IC4PSC_0: u32 = 0x1 << TIM_CCMR2_IC4PSC_Pos;
pub const TIM_CCMR2_IC4PSC_1: u32 = 0x2 << TIM_CCMR2_IC4PSC_Pos;
pub const TIM_CCMR2_IC4F_Pos: u32 = 12;
pub const TIM_CCMR2_IC4F_Msk: u32 = 0xF << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F: u32 = TIM_CCMR2_IC4F_Msk;
pub const TIM_CCMR2_IC4F_0: u32 = 0x1 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F_1: u32 = 0x2 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F_2: u32 = 0x4 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F_3: u32 = 0x8 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR3_OC5FE_Pos: u32 = 2;
pub const TIM_CCMR3_OC5FE_Msk: u32 = 0x1 << TIM_CCMR3_OC5FE_Pos;
pub const TIM_CCMR3_OC5FE: u32 = TIM_CCMR3_OC5FE_Msk;
pub const TIM_CCMR3_OC5PE_Pos: u32 = 3;
pub const TIM_CCMR3_OC5PE_Msk: u32 = 0x1 << TIM_CCMR3_OC5PE_Pos;
pub const TIM_CCMR3_OC5PE: u32 = TIM_CCMR3_OC5PE_Msk;
pub const TIM_CCMR3_OC5M_Pos: u32 = 4;
pub const TIM_CCMR3_OC5M_Msk: u32 = 0x1007 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5M: u32 = TIM_CCMR3_OC5M_Msk;
pub const TIM_CCMR3_OC5M_0: u32 = 0x0001 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5M_1: u32 = 0x0002 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5M_2: u32 = 0x0004 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5M_3: u32 = 0x1000 << TIM_CCMR3_OC5M_Pos;
pub const TIM_CCMR3_OC5CE_Pos: u32 = 7;
pub const TIM_CCMR3_OC5CE_Msk: u32 = 0x1 << TIM_CCMR3_OC5CE_Pos;
pub const TIM_CCMR3_OC5CE: u32 = TIM_CCMR3_OC5CE_Msk;
pub const TIM_CCMR3_OC6FE_Pos: u32 = 10;
pub const TIM_CCMR3_OC6FE_Msk: u32 = 0x1 << TIM_CCMR3_OC6FE_Pos;
pub const TIM_CCMR3_OC6FE: u32 = TIM_CCMR3_OC6FE_Msk;
pub const TIM_CCMR3_OC6PE_Pos: u32 = 11;
pub const TIM_CCMR3_OC6PE_Msk: u32 = 0x1 << TIM_CCMR3_OC6PE_Pos;
pub const TIM_CCMR3_OC6PE: u32 = TIM_CCMR3_OC6PE_Msk;
pub const TIM_CCMR3_OC6M_Pos: u32 = 12;
pub const TIM_CCMR3_OC6M_Msk: u32 = 0x1007 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6M: u32 = TIM_CCMR3_OC6M_Msk;
pub const TIM_CCMR3_OC6M_0: u32 = 0x0001 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6M_1: u32 = 0x0002 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6M_2: u32 = 0x0004 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6M_3: u32 = 0x1000 << TIM_CCMR3_OC6M_Pos;
pub const TIM_CCMR3_OC6CE_Pos: u32 = 15;
pub const TIM_CCMR3_OC6CE_Msk: u32 = 0x1 << TIM_CCMR3_OC6CE_Pos;
pub const TIM_CCMR3_OC6CE: u32 = TIM_CCMR3_OC6CE_Msk;
pub const TIM_CCER_CC1E_Pos: u32 = 0;
pub const TIM_CCER_CC1E_Msk: u32 = 0x1 << TIM_CCER_CC1E_Pos;
pub const TIM_CCER_CC1E: u32 = TIM_CCER_CC1E_Msk;
pub const TIM_CCER_CC1P_Pos: u32 = 1;
pub const TIM_CCER_CC1P_Msk: u32 = 0x1 << TIM_CCER_CC1P_Pos;
pub const TIM_CCER_CC1P: u32 = TIM_CCER_CC1P_Msk;
pub const TIM_CCER_CC1NE_Pos: u32 = 2;
pub const TIM_CCER_CC1NE_Msk: u32 = 0x1 << TIM_CCER_CC1NE_Pos;
pub const TIM_CCER_CC1NE: u32 = TIM_CCER_CC1NE_Msk;
pub const TIM_CCER_CC1NP_Pos: u32 = 3;
pub const TIM_CCER_CC1NP_Msk: u32 = 0x1 << TIM_CCER_CC1NP_Pos;
pub const TIM_CCER_CC1NP: u32 = TIM_CCER_CC1NP_Msk;
pub const TIM_CCER_CC2E_Pos: u32 = 4;
pub const TIM_CCER_CC2E_Msk: u32 = 0x1 << TIM_CCER_CC2E_Pos;
pub const TIM_CCER_CC2E: u32 = TIM_CCER_CC2E_Msk;
pub const TIM_CCER_CC2P_Pos: u32 = 5;
pub const TIM_CCER_CC2P_Msk: u32 = 0x1 << TIM_CCER_CC2P_Pos;
pub const TIM_CCER_CC2P: u32 = TIM_CCER_CC2P_Msk;
pub const TIM_CCER_CC2NE_Pos: u32 = 6;
pub const TIM_CCER_CC2NE_Msk: u32 = 0x1 << TIM_CCER_CC2NE_Pos;
pub const TIM_CCER_CC2NE: u32 = TIM_CCER_CC2NE_Msk;
pub const TIM_CCER_CC2NP_Pos: u32 = 7;
pub const TIM_CCER_CC2NP_Msk: u32 = 0x1 << TIM_CCER_CC2NP_Pos;
pub const TIM_CCER_CC2NP: u32 = TIM_CCER_CC2NP_Msk;
pub const TIM_CCER_CC3E_Pos: u32 = 8;
pub const TIM_CCER_CC3E_Msk: u32 = 0x1 << TIM_CCER_CC3E_Pos;
pub const TIM_CCER_CC3E: u32 = TIM_CCER_CC3E_Msk;
pub const TIM_CCER_CC3P_Pos: u32 = 9;
pub const TIM_CCER_CC3P_Msk: u32 = 0x1 << TIM_CCER_CC3P_Pos;
pub const TIM_CCER_CC3P: u32 = TIM_CCER_CC3P_Msk;
pub const TIM_CCER_CC3NE_Pos: u32 = 10;
pub const TIM_CCER_CC3NE_Msk: u32 = 0x1 << TIM_CCER_CC3NE_Pos;
pub const TIM_CCER_CC3NE: u32 = TIM_CCER_CC3NE_Msk;
pub const TIM_CCER_CC3NP_Pos: u32 = 11;
pub const TIM_CCER_CC3NP_Msk: u32 = 0x1 << TIM_CCER_CC3NP_Pos;
pub const TIM_CCER_CC3NP: u32 = TIM_CCER_CC3NP_Msk;
pub const TIM_CCER_CC4E_Pos: u32 = 12;
pub const TIM_CCER_CC4E_Msk: u32 = 0x1 << TIM_CCER_CC4E_Pos;
pub const TIM_CCER_CC4E: u32 = TIM_CCER_CC4E_Msk;
pub const TIM_CCER_CC4P_Pos: u32 = 13;
pub const TIM_CCER_CC4P_Msk: u32 = 0x1 << TIM_CCER_CC4P_Pos;
pub const TIM_CCER_CC4P: u32 = TIM_CCER_CC4P_Msk;
pub const TIM_CCER_CC4NE_Pos: u32 = 14;
pub const TIM_CCER_CC4NE_Msk: u32 = 0x1 << TIM_CCER_CC4NE_Pos;
pub const TIM_CCER_CC4NE: u32 = TIM_CCER_CC4NE_Msk;
pub const TIM_CCER_CC4NP_Pos: u32 = 15;
pub const TIM_CCER_CC4NP_Msk: u32 = 0x1 << TIM_CCER_CC4NP_Pos;
pub const TIM_CCER_CC4NP: u32 = TIM_CCER_CC4NP_Msk;
pub const TIM_CCER_CC5E_Pos: u32 = 16;
pub const TIM_CCER_CC5E_Msk: u32 = 0x1 << TIM_CCER_CC5E_Pos;
pub const TIM_CCER_CC5E: u32 = TIM_CCER_CC5E_Msk;
pub const TIM_CCER_CC5P_Pos: u32 = 17;
pub const TIM_CCER_CC5P_Msk: u32 = 0x1 << TIM_CCER_CC5P_Pos;
pub const TIM_CCER_CC5P: u32 = TIM_CCER_CC5P_Msk;
pub const TIM_CCER_CC6E_Pos: u32 = 20;
pub const TIM_CCER_CC6E_Msk: u32 = 0x1 << TIM_CCER_CC6E_Pos;
pub const TIM_CCER_CC6E: u32 = TIM_CCER_CC6E_Msk;
pub const TIM_CCER_CC6P_Pos: u32 = 21;
pub const TIM_CCER_CC6P_Msk: u32 = 0x1 << TIM_CCER_CC6P_Pos;
pub const TIM_CCER_CC6P: u32 = TIM_CCER_CC6P_Msk;
pub const TIM_CNT_CNT_Pos: u32 = 0;
pub const TIM_CNT_CNT_Msk: u32 = 0xFFFFFFFF << TIM_CNT_CNT_Pos;
pub const TIM_CNT_CNT: u32 = TIM_CNT_CNT_Msk;
pub const TIM_CNT_UIFCPY_Pos: u32 = 31;
pub const TIM_CNT_UIFCPY_Msk: u32 = 0x1 << TIM_CNT_UIFCPY_Pos;
pub const TIM_CNT_UIFCPY: u32 = TIM_CNT_UIFCPY_Msk;
pub const TIM_PSC_PSC_Pos: u32 = 0;
pub const TIM_PSC_PSC_Msk: u32 = 0xFFFF << TIM_PSC_PSC_Pos;
pub const TIM_PSC_PSC: u32 = TIM_PSC_PSC_Msk;
pub const TIM_ARR_ARR_Pos: u32 = 0;
pub const TIM_ARR_ARR_Msk: u32 = 0xFFFFFFFF << TIM_ARR_ARR_Pos;
pub const TIM_ARR_ARR: u32 = TIM_ARR_ARR_Msk;
pub const TIM_RCR_REP_Pos: u32 = 0;
pub const TIM_RCR_REP_Msk: u32 = 0xFFFF << TIM_RCR_REP_Pos;
pub const TIM_RCR_REP: u32 = TIM_RCR_REP_Msk;
pub const TIM_CCR1_CCR1_Pos: u32 = 0;
pub const TIM_CCR1_CCR1_Msk: u32 = 0xFFFF << TIM_CCR1_CCR1_Pos;
pub const TIM_CCR1_CCR1: u32 = TIM_CCR1_CCR1_Msk;
pub const TIM_CCR2_CCR2_Pos: u32 = 0;
pub const TIM_CCR2_CCR2_Msk: u32 = 0xFFFF << TIM_CCR2_CCR2_Pos;
pub const TIM_CCR2_CCR2: u32 = TIM_CCR2_CCR2_Msk;
pub const TIM_CCR3_CCR3_Pos: u32 = 0;
pub const TIM_CCR3_CCR3_Msk: u32 = 0xFFFF << TIM_CCR3_CCR3_Pos;
pub const TIM_CCR3_CCR3: u32 = TIM_CCR3_CCR3_Msk;
pub const TIM_CCR4_CCR4_Pos: u32 = 0;
pub const TIM_CCR4_CCR4_Msk: u32 = 0xFFFF << TIM_CCR4_CCR4_Pos;
pub const TIM_CCR4_CCR4: u32 = TIM_CCR4_CCR4_Msk;
pub const TIM_CCR5_CCR5_Pos: u32 = 0;
pub const TIM_CCR5_CCR5_Msk: u32 = 0xFFFFFFFF << TIM_CCR5_CCR5_Pos;
pub const TIM_CCR5_CCR5: u32 = TIM_CCR5_CCR5_Msk;
pub const TIM_CCR5_GC5C1_Pos: u32 = 29;
pub const TIM_CCR5_GC5C1_Msk: u32 = 0x1 << TIM_CCR5_GC5C1_Pos;
pub const TIM_CCR5_GC5C1: u32 = TIM_CCR5_GC5C1_Msk;
pub const TIM_CCR5_GC5C2_Pos: u32 = 30;
pub const TIM_CCR5_GC5C2_Msk: u32 = 0x1 << TIM_CCR5_GC5C2_Pos;
pub const TIM_CCR5_GC5C2: u32 = TIM_CCR5_GC5C2_Msk;
pub const TIM_CCR5_GC5C3_Pos: u32 = 31;
pub const TIM_CCR5_GC5C3_Msk: u32 = 0x1 << TIM_CCR5_GC5C3_Pos;
pub const TIM_CCR5_GC5C3: u32 = TIM_CCR5_GC5C3_Msk;
pub const TIM_CCR6_CCR6_Pos: u32 = 0;
pub const TIM_CCR6_CCR6_Msk: u32 = 0xFFFF << TIM_CCR6_CCR6_Pos;
pub const TIM_CCR6_CCR6: u32 = TIM_CCR6_CCR6_Msk;
pub const TIM_BDTR_DTG_Pos: u32 = 0;
pub const TIM_BDTR_DTG_Msk: u32 = 0xFF << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG: u32 = TIM_BDTR_DTG_Msk;
pub const TIM_BDTR_DTG_0: u32 = 0x01 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_1: u32 = 0x02 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_2: u32 = 0x04 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_3: u32 = 0x08 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_4: u32 = 0x10 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_5: u32 = 0x20 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_6: u32 = 0x40 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_DTG_7: u32 = 0x80 << TIM_BDTR_DTG_Pos;
pub const TIM_BDTR_LOCK_Pos: u32 = 8;
pub const TIM_BDTR_LOCK_Msk: u32 = 0x3 << TIM_BDTR_LOCK_Pos;
pub const TIM_BDTR_LOCK: u32 = TIM_BDTR_LOCK_Msk;
pub const TIM_BDTR_LOCK_0: u32 = 0x1 << TIM_BDTR_LOCK_Pos;
pub const TIM_BDTR_LOCK_1: u32 = 0x2 << TIM_BDTR_LOCK_Pos;
pub const TIM_BDTR_OSSI_Pos: u32 = 10;
pub const TIM_BDTR_OSSI_Msk: u32 = 0x1 << TIM_BDTR_OSSI_Pos;
pub const TIM_BDTR_OSSI: u32 = TIM_BDTR_OSSI_Msk;
pub const TIM_BDTR_OSSR_Pos: u32 = 11;
pub const TIM_BDTR_OSSR_Msk: u32 = 0x1 << TIM_BDTR_OSSR_Pos;
pub const TIM_BDTR_OSSR: u32 = TIM_BDTR_OSSR_Msk;
pub const TIM_BDTR_BKE_Pos: u32 = 12;
pub const TIM_BDTR_BKE_Msk: u32 = 0x1 << TIM_BDTR_BKE_Pos;
pub const TIM_BDTR_BKE: u32 = TIM_BDTR_BKE_Msk;
pub const TIM_BDTR_BKP_Pos: u32 = 13;
pub const TIM_BDTR_BKP_Msk: u32 = 0x1 << TIM_BDTR_BKP_Pos;
pub const TIM_BDTR_BKP: u32 = TIM_BDTR_BKP_Msk;
pub const TIM_BDTR_AOE_Pos: u32 = 14;
pub const TIM_BDTR_AOE_Msk: u32 = 0x1 << TIM_BDTR_AOE_Pos;
pub const TIM_BDTR_AOE: u32 = TIM_BDTR_AOE_Msk;
pub const TIM_BDTR_MOE_Pos: u32 = 15;
pub const TIM_BDTR_MOE_Msk: u32 = 0x1 << TIM_BDTR_MOE_Pos;
pub const TIM_BDTR_MOE: u32 = TIM_BDTR_MOE_Msk;
pub const TIM_BDTR_BKF_Pos: u32 = 16;
pub const TIM_BDTR_BKF_Msk: u32 = 0xF << TIM_BDTR_BKF_Pos;
pub const TIM_BDTR_BKF: u32 = TIM_BDTR_BKF_Msk;
pub const TIM_BDTR_BK2F_Pos: u32 = 20;
pub const TIM_BDTR_BK2F_Msk: u32 = 0xF << TIM_BDTR_BK2F_Pos;
pub const TIM_BDTR_BK2F: u32 = TIM_BDTR_BK2F_Msk;
pub const TIM_BDTR_BK2E_Pos: u32 = 24;
pub const TIM_BDTR_BK2E_Msk: u32 = 0x1 << TIM_BDTR_BK2E_Pos;
pub const TIM_BDTR_BK2E: u32 = TIM_BDTR_BK2E_Msk;
pub const TIM_BDTR_BK2P_Pos: u32 = 25;
pub const TIM_BDTR_BK2P_Msk: u32 = 0x1 << TIM_BDTR_BK2P_Pos;
pub const TIM_BDTR_BK2P: u32 = TIM_BDTR_BK2P_Msk;
pub const TIM_BDTR_BKDSRM_Pos: u32 = 26;
pub const TIM_BDTR_BKDSRM_Msk: u32 = 0x1 << TIM_BDTR_BKDSRM_Pos;
pub const TIM_BDTR_BKDSRM: u32 = TIM_BDTR_BKDSRM_Msk;
pub const TIM_BDTR_BK2DSRM_Pos: u32 = 27;
pub const TIM_BDTR_BK2DSRM_Msk: u32 = 0x1 << TIM_BDTR_BK2DSRM_Pos;
pub const TIM_BDTR_BK2DSRM: u32 = TIM_BDTR_BK2DSRM_Msk;
pub const TIM_BDTR_BKBID_Pos: u32 = 28;
pub const TIM_BDTR_BKBID_Msk: u32 = 0x1 << TIM_BDTR_BKBID_Pos;
pub const TIM_BDTR_BKBID: u32 = TIM_BDTR_BKBID_Msk;
pub const TIM_BDTR_BK2BID_Pos: u32 = 29;
pub const TIM_BDTR_BK2BID_Msk: u32 = 0x1 << TIM_BDTR_BK2BID_Pos;
pub const TIM_BDTR_BK2BID: u32 = TIM_BDTR_BK2BID_Msk;
pub const TIM_DCR_DBA_Pos: u32 = 0;
pub const TIM_DCR_DBA_Msk: u32 = 0x1F << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA: u32 = TIM_DCR_DBA_Msk;
pub const TIM_DCR_DBA_0: u32 = 0x01 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_1: u32 = 0x02 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_2: u32 = 0x04 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_3: u32 = 0x08 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_4: u32 = 0x10 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBL_Pos: u32 = 8;
pub const TIM_DCR_DBL_Msk: u32 = 0x1F << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL: u32 = TIM_DCR_DBL_Msk;
pub const TIM_DCR_DBL_0: u32 = 0x01 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_1: u32 = 0x02 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_2: u32 = 0x04 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_3: u32 = 0x08 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_4: u32 = 0x10 << TIM_DCR_DBL_Pos;
pub const TIM1_AF1_BKINE_Pos: u32 = 0;
pub const TIM1_AF1_BKINE_Msk: u32 = 0x1 << TIM1_AF1_BKINE_Pos;
pub const TIM1_AF1_BKINE: u32 = TIM1_AF1_BKINE_Msk;
pub const TIM1_AF1_BKCMP1E_Pos: u32 = 1;
pub const TIM1_AF1_BKCMP1E_Msk: u32 = 0x1 << TIM1_AF1_BKCMP1E_Pos;
pub const TIM1_AF1_BKCMP1E: u32 = TIM1_AF1_BKCMP1E_Msk;
pub const TIM1_AF1_BKCMP2E_Pos: u32 = 2;
pub const TIM1_AF1_BKCMP2E_Msk: u32 = 0x1 << TIM1_AF1_BKCMP2E_Pos;
pub const TIM1_AF1_BKCMP2E: u32 = TIM1_AF1_BKCMP2E_Msk;
pub const TIM1_AF1_BKCMP3E_Pos: u32 = 3;
pub const TIM1_AF1_BKCMP3E_Msk: u32 = 0x1 << TIM1_AF1_BKCMP3E_Pos;
pub const TIM1_AF1_BKCMP3E: u32 = TIM1_AF1_BKCMP3E_Msk;
pub const TIM1_AF1_BKCMP4E_Pos: u32 = 4;
pub const TIM1_AF1_BKCMP4E_Msk: u32 = 0x1 << TIM1_AF1_BKCMP4E_Pos;
pub const TIM1_AF1_BKCMP4E: u32 = TIM1_AF1_BKCMP4E_Msk;
pub const TIM1_AF1_BKINP_Pos: u32 = 9;
pub const TIM1_AF1_BKINP_Msk: u32 = 0x1 << TIM1_AF1_BKINP_Pos;
pub const TIM1_AF1_BKINP: u32 = TIM1_AF1_BKINP_Msk;
pub const TIM1_AF1_BKCMP1P_Pos: u32 = 10;
pub const TIM1_AF1_BKCMP1P_Msk: u32 = 0x1 << TIM1_AF1_BKCMP1P_Pos;
pub const TIM1_AF1_BKCMP1P: u32 = TIM1_AF1_BKCMP1P_Msk;
pub const TIM1_AF1_BKCMP2P_Pos: u32 = 11;
pub const TIM1_AF1_BKCMP2P_Msk: u32 = 0x1 << TIM1_AF1_BKCMP2P_Pos;
pub const TIM1_AF1_BKCMP2P: u32 = TIM1_AF1_BKCMP2P_Msk;
pub const TIM1_AF1_BKCMP3P_Pos: u32 = 12;
pub const TIM1_AF1_BKCMP3P_Msk: u32 = 0x1 << TIM1_AF1_BKCMP3P_Pos;
pub const TIM1_AF1_BKCMP3P: u32 = TIM1_AF1_BKCMP3P_Msk;
pub const TIM1_AF1_BKCMP4P_Pos: u32 = 13;
pub const TIM1_AF1_BKCMP4P_Msk: u32 = 0x1 << TIM1_AF1_BKCMP4P_Pos;
pub const TIM1_AF1_BKCMP4P: u32 = TIM1_AF1_BKCMP4P_Msk;
pub const TIM1_AF1_ETRSEL_Pos: u32 = 14;
pub const TIM1_AF1_ETRSEL_Msk: u32 = 0xF << TIM1_AF1_ETRSEL_Pos;
pub const TIM1_AF1_ETRSEL: u32 = TIM1_AF1_ETRSEL_Msk;
pub const TIM1_AF1_ETRSEL_0: u32 = 0x1 << TIM1_AF1_ETRSEL_Pos;
pub const TIM1_AF1_ETRSEL_1: u32 = 0x2 << TIM1_AF1_ETRSEL_Pos;
pub const TIM1_AF1_ETRSEL_2: u32 = 0x4 << TIM1_AF1_ETRSEL_Pos;
pub const TIM1_AF1_ETRSEL_3: u32 = 0x8 << TIM1_AF1_ETRSEL_Pos;
pub const TIM1_AF2_BK2INE_Pos: u32 = 0;
pub const TIM1_AF2_BK2INE_Msk: u32 = 0x1 << TIM1_AF2_BK2INE_Pos;
pub const TIM1_AF2_BK2INE: u32 = TIM1_AF2_BK2INE_Msk;
pub const TIM1_AF2_BK2CMP1E_Pos: u32 = 1;
pub const TIM1_AF2_BK2CMP1E_Msk: u32 = 0x1 << TIM1_AF2_BK2CMP1E_Pos;
pub const TIM1_AF2_BK2CMP1E: u32 = TIM1_AF2_BK2CMP1E_Msk;
pub const TIM1_AF2_BK2CMP2E_Pos: u32 = 2;
pub const TIM1_AF2_BK2CMP2E_Msk: u32 = 0x1 << TIM1_AF2_BK2CMP2E_Pos;
pub const TIM1_AF2_BK2CMP2E: u32 = TIM1_AF2_BK2CMP2E_Msk;
pub const TIM1_AF2_BK2CMP3E_Pos: u32 = 3;
pub const TIM1_AF2_BK2CMP3E_Msk: u32 = 0x1 << TIM1_AF2_BK2CMP3E_Pos;
pub const TIM1_AF2_BK2CMP3E: u32 = TIM1_AF2_BK2CMP3E_Msk;
pub const TIM1_AF2_BK2CMP4E_Pos: u32 = 4;
pub const TIM1_AF2_BK2CMP4E_Msk: u32 = 0x1 << TIM1_AF2_BK2CMP4E_Pos;
pub const TIM1_AF2_BK2CMP4E: u32 = TIM1_AF2_BK2CMP4E_Msk;
pub const TIM1_AF2_BK2INP_Pos: u32 = 9;
pub const TIM1_AF2_BK2INP_Msk: u32 = 0x1 << TIM1_AF2_BK2INP_Pos;
pub const TIM1_AF2_BK2INP: u32 = TIM1_AF2_BK2INP_Msk;
pub const TIM1_AF2_BK2CMP1P_Pos: u32 = 10;
pub const TIM1_AF2_BK2CMP1P_Msk: u32 = 0x1 << TIM1_AF2_BK2CMP1P_Pos;
pub const TIM1_AF2_BK2CMP1P: u32 = TIM1_AF2_BK2CMP1P_Msk;
pub const TIM1_AF2_BK2CMP2P_Pos: u32 = 11;
pub const TIM1_AF2_BK2CMP2P_Msk: u32 = 0x1 << TIM1_AF2_BK2CMP2P_Pos;
pub const TIM1_AF2_BK2CMP2P: u32 = TIM1_AF2_BK2CMP2P_Msk;
pub const TIM1_AF2_BK2CMP3P_Pos: u32 = 12;
pub const TIM1_AF2_BK2CMP3P_Msk: u32 = 0x1 << TIM1_AF2_BK2CMP3P_Pos;
pub const TIM1_AF2_BK2CMP3P: u32 = TIM1_AF2_BK2CMP3P_Msk;
pub const TIM1_AF2_BK2CMP4P_Pos: u32 = 13;
pub const TIM1_AF2_BK2CMP4P_Msk: u32 = 0x1 << TIM1_AF2_BK2CMP4P_Pos;
pub const TIM1_AF2_BK2CMP4P: u32 = TIM1_AF2_BK2CMP4P_Msk;
pub const TIM1_AF2_OCRSEL_Pos: u32 = 16;
pub const TIM1_AF2_OCRSEL_Msk: u32 = 0x7 << TIM1_AF2_OCRSEL_Pos;
pub const TIM1_AF2_OCRSEL: u32 = TIM1_AF2_OCRSEL_Msk;
pub const TIM1_AF2_OCRSEL_0: u32 = 0x1 << TIM1_AF2_OCRSEL_Pos;
pub const TIM1_AF2_OCRSEL_1: u32 = 0x2 << TIM1_AF2_OCRSEL_Pos;
pub const TIM1_AF2_OCRSEL_2: u32 = 0x4 << TIM1_AF2_OCRSEL_Pos;
pub const TIM_OR_HSE32EN_Pos: u32 = 0;
pub const TIM_OR_HSE32EN_Msk: u32 = 0x1 << TIM_OR_HSE32EN_Pos;
pub const TIM_OR_HSE32EN: u32 = TIM_OR_HSE32EN_Msk;
pub const TIM_TISEL_TI1SEL_Pos: u32 = 0;
pub const TIM_TISEL_TI1SEL_Msk: u32 = 0xF << TIM_TISEL_TI1SEL_Pos;
pub const TIM_TISEL_TI1SEL: u32 = TIM_TISEL_TI1SEL_Msk;
pub const TIM_TISEL_TI1SEL_0: u32 = 0x1 << TIM_TISEL_TI1SEL_Pos;
pub const TIM_TISEL_TI1SEL_1: u32 = 0x2 << TIM_TISEL_TI1SEL_Pos;
pub const TIM_TISEL_TI1SEL_2: u32 = 0x4 << TIM_TISEL_TI1SEL_Pos;
pub const TIM_TISEL_TI1SEL_3: u32 = 0x8 << TIM_TISEL_TI1SEL_Pos;
pub const TIM_TISEL_TI2SEL_Pos: u32 = 8;
pub const TIM_TISEL_TI2SEL_Msk: u32 = 0xF << TIM_TISEL_TI2SEL_Pos;
pub const TIM_TISEL_TI2SEL: u32 = TIM_TISEL_TI2SEL_Msk;
pub const TIM_TISEL_TI2SEL_0: u32 = 0x1 << TIM_TISEL_TI2SEL_Pos;
pub const TIM_TISEL_TI2SEL_1: u32 = 0x2 << TIM_TISEL_TI2SEL_Pos;
pub const TIM_TISEL_TI2SEL_2: u32 = 0x4 << TIM_TISEL_TI2SEL_Pos;
pub const TIM_TISEL_TI2SEL_3: u32 = 0x8 << TIM_TISEL_TI2SEL_Pos;
pub const TIM_TISEL_TI3SEL_Pos: u32 = 16;
pub const TIM_TISEL_TI3SEL_Msk: u32 = 0xF << TIM_TISEL_TI3SEL_Pos;
pub const TIM_TISEL_TI3SEL: u32 = TIM_TISEL_TI3SEL_Msk;
pub const TIM_TISEL_TI3SEL_0: u32 = 0x1 << TIM_TISEL_TI3SEL_Pos;
pub const TIM_TISEL_TI3SEL_1: u32 = 0x2 << TIM_TISEL_TI3SEL_Pos;
pub const TIM_TISEL_TI3SEL_2: u32 = 0x4 << TIM_TISEL_TI3SEL_Pos;
pub const TIM_TISEL_TI3SEL_3: u32 = 0x8 << TIM_TISEL_TI3SEL_Pos;
pub const TIM_TISEL_TI4SEL_Pos: u32 = 24;
pub const TIM_TISEL_TI4SEL_Msk: u32 = 0xF << TIM_TISEL_TI4SEL_Pos;
pub const TIM_TISEL_TI4SEL: u32 = TIM_TISEL_TI4SEL_Msk;
pub const TIM_TISEL_TI4SEL_0: u32 = 0x1 << TIM_TISEL_TI4SEL_Pos;
pub const TIM_TISEL_TI4SEL_1: u32 = 0x2 << TIM_TISEL_TI4SEL_Pos;
pub const TIM_TISEL_TI4SEL_2: u32 = 0x4 << TIM_TISEL_TI4SEL_Pos;
pub const TIM_TISEL_TI4SEL_3: u32 = 0x8 << TIM_TISEL_TI4SEL_Pos;
pub const TIM_DTR2_DTGF_Pos: u32 = 0;
pub const TIM_DTR2_DTGF_Msk: u32 = 0xFF << TIM_DTR2_DTGF_Pos;
pub const TIM_DTR2_DTGF: u32 = TIM_DTR2_DTGF_Msk;
pub const TIM_DTR2_DTGF_0: u32 = 0x01 << TIM_DTR2_DTGF_Pos;
pub const TIM_DTR2_DTGF_1: u32 = 0x02 << TIM_DTR2_DTGF_Pos;
pub const TIM_DTR2_DTGF_2: u32 = 0x04 << TIM_DTR2_DTGF_Pos;
pub const TIM_DTR2_DTGF_3: u32 = 0x08 << TIM_DTR2_DTGF_Pos;
pub const TIM_DTR2_DTGF_4: u32 = 0x10 << TIM_DTR2_DTGF_Pos;
pub const TIM_DTR2_DTGF_5: u32 = 0x20 << TIM_DTR2_DTGF_Pos;
pub const TIM_DTR2_DTGF_6: u32 = 0x40 << TIM_DTR2_DTGF_Pos;
pub const TIM_DTR2_DTGF_7: u32 = 0x80 << TIM_DTR2_DTGF_Pos;
pub const TIM_DTR2_DTAE_Pos: u32 = 16;
pub const TIM_DTR2_DTAE_Msk: u32 = 0x1 << TIM_DTR2_DTAE_Pos;
pub const TIM_DTR2_DTAE: u32 = TIM_DTR2_DTAE_Msk;
pub const TIM_DTR2_DTPE_Pos: u32 = 17;
pub const TIM_DTR2_DTPE_Msk: u32 = 0x1 << TIM_DTR2_DTPE_Pos;
pub const TIM_DTR2_DTPE: u32 = TIM_DTR2_DTPE_Msk;
pub const TIM_ECR_IE_Pos: u32 = 0;
pub const TIM_ECR_IE_Msk: u32 = 0x1 << TIM_ECR_IE_Pos;
pub const TIM_ECR_IE: u32 = TIM_ECR_IE_Msk;
pub const TIM_ECR_IDIR_Pos: u32 = 1;
pub const TIM_ECR_IDIR_Msk: u32 = 0x3 << TIM_ECR_IDIR_Pos;
pub const TIM_ECR_IDIR: u32 = TIM_ECR_IDIR_Msk;
pub const TIM_ECR_IDIR_0: u32 = 0x01 << TIM_ECR_IDIR_Pos;
pub const TIM_ECR_IDIR_1: u32 = 0x02 << TIM_ECR_IDIR_Pos;
pub const TIM_ECR_FIDX_Pos: u32 = 5;
pub const TIM_ECR_FIDX_Msk: u32 = 0x1 << TIM_ECR_FIDX_Pos;
pub const TIM_ECR_FIDX: u32 = TIM_ECR_FIDX_Msk;
pub const TIM_ECR_IPOS_Pos: u32 = 6;
pub const TIM_ECR_IPOS_Msk: u32 = 0x3 << TIM_ECR_IPOS_Pos;
pub const TIM_ECR_IPOS: u32 = TIM_ECR_IPOS_Msk;
pub const TIM_ECR_IPOS_0: u32 = 0x01 << TIM_ECR_IPOS_Pos;
pub const TIM_ECR_IPOS_1: u32 = 0x02 << TIM_ECR_IPOS_Pos;
pub const TIM_ECR_PW_Pos: u32 = 16;
pub const TIM_ECR_PW_Msk: u32 = 0xFF << TIM_ECR_PW_Pos;
pub const TIM_ECR_PW: u32 = TIM_ECR_PW_Msk;
pub const TIM_ECR_PW_0: u32 = 0x01 << TIM_ECR_PW_Pos;
pub const TIM_ECR_PW_1: u32 = 0x02 << TIM_ECR_PW_Pos;
pub const TIM_ECR_PW_2: u32 = 0x04 << TIM_ECR_PW_Pos;
pub const TIM_ECR_PW_3: u32 = 0x08 << TIM_ECR_PW_Pos;
pub const TIM_ECR_PW_4: u32 = 0x10 << TIM_ECR_PW_Pos;
pub const TIM_ECR_PW_5: u32 = 0x20 << TIM_ECR_PW_Pos;
pub const TIM_ECR_PW_6: u32 = 0x40 << TIM_ECR_PW_Pos;
pub const TIM_ECR_PW_7: u32 = 0x80 << TIM_ECR_PW_Pos;
pub const TIM_ECR_PWPRSC_Pos: u32 = 24;
pub const TIM_ECR_PWPRSC_Msk: u32 = 0x7 << TIM_ECR_PWPRSC_Pos;
pub const TIM_ECR_PWPRSC: u32 = TIM_ECR_PWPRSC_Msk;
pub const TIM_ECR_PWPRSC_0: u32 = 0x01 << TIM_ECR_PWPRSC_Pos;
pub const TIM_ECR_PWPRSC_1: u32 = 0x02 << TIM_ECR_PWPRSC_Pos;
pub const TIM_ECR_PWPRSC_2: u32 = 0x04 << TIM_ECR_PWPRSC_Pos;
pub const TIM_DMAR_DMAB_Pos: u32 = 0;
pub const TIM_DMAR_DMAB_Msk: u32 = 0xFFFFFFFF << TIM_DMAR_DMAB_Pos;
pub const TIM_DMAR_DMAB: u32 = TIM_DMAR_DMAB_Msk;
pub const LPTIM_ISR_CMPM_Pos: u32 = 0;
pub const LPTIM_ISR_CMPM_Msk: u32 = 0x1 << LPTIM_ISR_CMPM_Pos;
pub const LPTIM_ISR_CMPM: u32 = LPTIM_ISR_CMPM_Msk;
pub const LPTIM_ISR_ARRM_Pos: u32 = 1;
pub const LPTIM_ISR_ARRM_Msk: u32 = 0x1 << LPTIM_ISR_ARRM_Pos;
pub const LPTIM_ISR_ARRM: u32 = LPTIM_ISR_ARRM_Msk;
pub const LPTIM_ISR_EXTTRIG_Pos: u32 = 2;
pub const LPTIM_ISR_EXTTRIG_Msk: u32 = 0x1 << LPTIM_ISR_EXTTRIG_Pos;
pub const LPTIM_ISR_EXTTRIG: u32 = LPTIM_ISR_EXTTRIG_Msk;
pub const LPTIM_ISR_CMPOK_Pos: u32 = 3;
pub const LPTIM_ISR_CMPOK_Msk: u32 = 0x1 << LPTIM_ISR_CMPOK_Pos;
pub const LPTIM_ISR_CMPOK: u32 = LPTIM_ISR_CMPOK_Msk;
pub const LPTIM_ISR_ARROK_Pos: u32 = 4;
pub const LPTIM_ISR_ARROK_Msk: u32 = 0x1 << LPTIM_ISR_ARROK_Pos;
pub const LPTIM_ISR_ARROK: u32 = LPTIM_ISR_ARROK_Msk;
pub const LPTIM_ISR_UP_Pos: u32 = 5;
pub const LPTIM_ISR_UP_Msk: u32 = 0x1 << LPTIM_ISR_UP_Pos;
pub const LPTIM_ISR_UP: u32 = LPTIM_ISR_UP_Msk;
pub const LPTIM_ISR_DOWN_Pos: u32 = 6;
pub const LPTIM_ISR_DOWN_Msk: u32 = 0x1 << LPTIM_ISR_DOWN_Pos;
pub const LPTIM_ISR_DOWN: u32 = LPTIM_ISR_DOWN_Msk;
pub const LPTIM_ICR_CMPMCF_Pos: u32 = 0;
pub const LPTIM_ICR_CMPMCF_Msk: u32 = 0x1 << LPTIM_ICR_CMPMCF_Pos;
pub const LPTIM_ICR_CMPMCF: u32 = LPTIM_ICR_CMPMCF_Msk;
pub const LPTIM_ICR_ARRMCF_Pos: u32 = 1;
pub const LPTIM_ICR_ARRMCF_Msk: u32 = 0x1 << LPTIM_ICR_ARRMCF_Pos;
pub const LPTIM_ICR_ARRMCF: u32 = LPTIM_ICR_ARRMCF_Msk;
pub const LPTIM_ICR_EXTTRIGCF_Pos: u32 = 2;
pub const LPTIM_ICR_EXTTRIGCF_Msk: u32 = 0x1 << LPTIM_ICR_EXTTRIGCF_Pos;
pub const LPTIM_ICR_EXTTRIGCF: u32 = LPTIM_ICR_EXTTRIGCF_Msk;
pub const LPTIM_ICR_CMPOKCF_Pos: u32 = 3;
pub const LPTIM_ICR_CMPOKCF_Msk: u32 = 0x1 << LPTIM_ICR_CMPOKCF_Pos;
pub const LPTIM_ICR_CMPOKCF: u32 = LPTIM_ICR_CMPOKCF_Msk;
pub const LPTIM_ICR_ARROKCF_Pos: u32 = 4;
pub const LPTIM_ICR_ARROKCF_Msk: u32 = 0x1 << LPTIM_ICR_ARROKCF_Pos;
pub const LPTIM_ICR_ARROKCF: u32 = LPTIM_ICR_ARROKCF_Msk;
pub const LPTIM_ICR_UPCF_Pos: u32 = 5;
pub const LPTIM_ICR_UPCF_Msk: u32 = 0x1 << LPTIM_ICR_UPCF_Pos;
pub const LPTIM_ICR_UPCF: u32 = LPTIM_ICR_UPCF_Msk;
pub const LPTIM_ICR_DOWNCF_Pos: u32 = 6;
pub const LPTIM_ICR_DOWNCF_Msk: u32 = 0x1 << LPTIM_ICR_DOWNCF_Pos;
pub const LPTIM_ICR_DOWNCF: u32 = LPTIM_ICR_DOWNCF_Msk;
pub const LPTIM_IER_CMPMIE_Pos: u32 = 0;
pub const LPTIM_IER_CMPMIE_Msk: u32 = 0x1 << LPTIM_IER_CMPMIE_Pos;
pub const LPTIM_IER_CMPMIE: u32 = LPTIM_IER_CMPMIE_Msk;
pub const LPTIM_IER_ARRMIE_Pos: u32 = 1;
pub const LPTIM_IER_ARRMIE_Msk: u32 = 0x1 << LPTIM_IER_ARRMIE_Pos;
pub const LPTIM_IER_ARRMIE: u32 = LPTIM_IER_ARRMIE_Msk;
pub const LPTIM_IER_EXTTRIGIE_Pos: u32 = 2;
pub const LPTIM_IER_EXTTRIGIE_Msk: u32 = 0x1 << LPTIM_IER_EXTTRIGIE_Pos;
pub const LPTIM_IER_EXTTRIGIE: u32 = LPTIM_IER_EXTTRIGIE_Msk;
pub const LPTIM_IER_CMPOKIE_Pos: u32 = 3;
pub const LPTIM_IER_CMPOKIE_Msk: u32 = 0x1 << LPTIM_IER_CMPOKIE_Pos;
pub const LPTIM_IER_CMPOKIE: u32 = LPTIM_IER_CMPOKIE_Msk;
pub const LPTIM_IER_ARROKIE_Pos: u32 = 4;
pub const LPTIM_IER_ARROKIE_Msk: u32 = 0x1 << LPTIM_IER_ARROKIE_Pos;
pub const LPTIM_IER_ARROKIE: u32 = LPTIM_IER_ARROKIE_Msk;
pub const LPTIM_IER_UPIE_Pos: u32 = 5;
pub const LPTIM_IER_UPIE_Msk: u32 = 0x1 << LPTIM_IER_UPIE_Pos;
pub const LPTIM_IER_UPIE: u32 = LPTIM_IER_UPIE_Msk;
pub const LPTIM_IER_DOWNIE_Pos: u32 = 6;
pub const LPTIM_IER_DOWNIE_Msk: u32 = 0x1 << LPTIM_IER_DOWNIE_Pos;
pub const LPTIM_IER_DOWNIE: u32 = LPTIM_IER_DOWNIE_Msk;
pub const LPTIM_CFGR_CKSEL_Pos: u32 = 0;
pub const LPTIM_CFGR_CKSEL_Msk: u32 = 0x1 << LPTIM_CFGR_CKSEL_Pos;
pub const LPTIM_CFGR_CKSEL: u32 = LPTIM_CFGR_CKSEL_Msk;
pub const LPTIM_CFGR_CKPOL_Pos: u32 = 1;
pub const LPTIM_CFGR_CKPOL_Msk: u32 = 0x3 << LPTIM_CFGR_CKPOL_Pos;
pub const LPTIM_CFGR_CKPOL: u32 = LPTIM_CFGR_CKPOL_Msk;
pub const LPTIM_CFGR_CKPOL_0: u32 = 0x1 << LPTIM_CFGR_CKPOL_Pos;
pub const LPTIM_CFGR_CKPOL_1: u32 = 0x2 << LPTIM_CFGR_CKPOL_Pos;
pub const LPTIM_CFGR_CKFLT_Pos: u32 = 3;
pub const LPTIM_CFGR_CKFLT_Msk: u32 = 0x3 << LPTIM_CFGR_CKFLT_Pos;
pub const LPTIM_CFGR_CKFLT: u32 = LPTIM_CFGR_CKFLT_Msk;
pub const LPTIM_CFGR_CKFLT_0: u32 = 0x1 << LPTIM_CFGR_CKFLT_Pos;
pub const LPTIM_CFGR_CKFLT_1: u32 = 0x2 << LPTIM_CFGR_CKFLT_Pos;
pub const LPTIM_CFGR_TRGFLT_Pos: u32 = 6;
pub const LPTIM_CFGR_TRGFLT_Msk: u32 = 0x3 << LPTIM_CFGR_TRGFLT_Pos;
pub const LPTIM_CFGR_TRGFLT: u32 = LPTIM_CFGR_TRGFLT_Msk;
pub const LPTIM_CFGR_TRGFLT_0: u32 = 0x1 << LPTIM_CFGR_TRGFLT_Pos;
pub const LPTIM_CFGR_TRGFLT_1: u32 = 0x2 << LPTIM_CFGR_TRGFLT_Pos;
pub const LPTIM_CFGR_PRESC_Pos: u32 = 9;
pub const LPTIM_CFGR_PRESC_Msk: u32 = 0x7 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_PRESC: u32 = LPTIM_CFGR_PRESC_Msk;
pub const LPTIM_CFGR_PRESC_0: u32 = 0x1 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_PRESC_1: u32 = 0x2 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_PRESC_2: u32 = 0x4 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_TRIGSEL_Pos: u32 = 13;
pub const LPTIM_CFGR_TRIGSEL_Msk: u32 = 0x10007 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGSEL: u32 = LPTIM_CFGR_TRIGSEL_Msk;
pub const LPTIM_CFGR_TRIGSEL_0: u32 = 0x00001 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGSEL_1: u32 = 0x00002 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGSEL_2: u32 = 0x00004 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGSEL_3: u32 = 0x10000 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGEN_Pos: u32 = 17;
pub const LPTIM_CFGR_TRIGEN_Msk: u32 = 0x3 << LPTIM_CFGR_TRIGEN_Pos;
pub const LPTIM_CFGR_TRIGEN: u32 = LPTIM_CFGR_TRIGEN_Msk;
pub const LPTIM_CFGR_TRIGEN_0: u32 = 0x1 << LPTIM_CFGR_TRIGEN_Pos;
pub const LPTIM_CFGR_TRIGEN_1: u32 = 0x2 << LPTIM_CFGR_TRIGEN_Pos;
pub const LPTIM_CFGR_TIMOUT_Pos: u32 = 19;
pub const LPTIM_CFGR_TIMOUT_Msk: u32 = 0x1 << LPTIM_CFGR_TIMOUT_Pos;
pub const LPTIM_CFGR_TIMOUT: u32 = LPTIM_CFGR_TIMOUT_Msk;
pub const LPTIM_CFGR_WAVE_Pos: u32 = 20;
pub const LPTIM_CFGR_WAVE_Msk: u32 = 0x1 << LPTIM_CFGR_WAVE_Pos;
pub const LPTIM_CFGR_WAVE: u32 = LPTIM_CFGR_WAVE_Msk;
pub const LPTIM_CFGR_WAVPOL_Pos: u32 = 21;
pub const LPTIM_CFGR_WAVPOL_Msk: u32 = 0x1 << LPTIM_CFGR_WAVPOL_Pos;
pub const LPTIM_CFGR_WAVPOL: u32 = LPTIM_CFGR_WAVPOL_Msk;
pub const LPTIM_CFGR_PRELOAD_Pos: u32 = 22;
pub const LPTIM_CFGR_PRELOAD_Msk: u32 = 0x1 << LPTIM_CFGR_PRELOAD_Pos;
pub const LPTIM_CFGR_PRELOAD: u32 = LPTIM_CFGR_PRELOAD_Msk;
pub const LPTIM_CFGR_COUNTMODE_Pos: u32 = 23;
pub const LPTIM_CFGR_COUNTMODE_Msk: u32 = 0x1 << LPTIM_CFGR_COUNTMODE_Pos;
pub const LPTIM_CFGR_COUNTMODE: u32 = LPTIM_CFGR_COUNTMODE_Msk;
pub const LPTIM_CFGR_ENC_Pos: u32 = 24;
pub const LPTIM_CFGR_ENC_Msk: u32 = 0x1 << LPTIM_CFGR_ENC_Pos;
pub const LPTIM_CFGR_ENC: u32 = LPTIM_CFGR_ENC_Msk;
pub const LPTIM_CR_ENABLE_Pos: u32 = 0;
pub const LPTIM_CR_ENABLE_Msk: u32 = 0x1 << LPTIM_CR_ENABLE_Pos;
pub const LPTIM_CR_ENABLE: u32 = LPTIM_CR_ENABLE_Msk;
pub const LPTIM_CR_SNGSTRT_Pos: u32 = 1;
pub const LPTIM_CR_SNGSTRT_Msk: u32 = 0x1 << LPTIM_CR_SNGSTRT_Pos;
pub const LPTIM_CR_SNGSTRT: u32 = LPTIM_CR_SNGSTRT_Msk;
pub const LPTIM_CR_CNTSTRT_Pos: u32 = 2;
pub const LPTIM_CR_CNTSTRT_Msk: u32 = 0x1 << LPTIM_CR_CNTSTRT_Pos;
pub const LPTIM_CR_CNTSTRT: u32 = LPTIM_CR_CNTSTRT_Msk;
pub const LPTIM_CR_COUNTRST_Pos: u32 = 3;
pub const LPTIM_CR_COUNTRST_Msk: u32 = 0x1 << LPTIM_CR_COUNTRST_Pos;
pub const LPTIM_CR_COUNTRST: u32 = LPTIM_CR_COUNTRST_Msk;
pub const LPTIM_CR_RSTARE_Pos: u32 = 4;
pub const LPTIM_CR_RSTARE_Msk: u32 = 0x1 << LPTIM_CR_RSTARE_Pos;
pub const LPTIM_CR_RSTARE: u32 = LPTIM_CR_RSTARE_Msk;
pub const LPTIM_CMP_CMP_Pos: u32 = 0;
pub const LPTIM_CMP_CMP_Msk: u32 = 0xFFFF << LPTIM_CMP_CMP_Pos;
pub const LPTIM_CMP_CMP: u32 = LPTIM_CMP_CMP_Msk;
pub const LPTIM_ARR_ARR_Pos: u32 = 0;
pub const LPTIM_ARR_ARR_Msk: u32 = 0xFFFF << LPTIM_ARR_ARR_Pos;
pub const LPTIM_ARR_ARR: u32 = LPTIM_ARR_ARR_Msk;
pub const LPTIM_CNT_CNT_Pos: u32 = 0;
pub const LPTIM_CNT_CNT_Msk: u32 = 0xFFFF << LPTIM_CNT_CNT_Pos;
pub const LPTIM_CNT_CNT: u32 = LPTIM_CNT_CNT_Msk;
pub const LPTIM_OR_IN1_Pos: u32 = 0;
pub const LPTIM_OR_IN1_Msk: u32 = 0xD << LPTIM_OR_IN1_Pos;
pub const LPTIM_OR_IN1: u32 = LPTIM_OR_IN1_Msk;
pub const LPTIM_OR_IN1_0: u32 = 0x1 << LPTIM_OR_IN1_Pos;
pub const LPTIM_OR_IN1_1: u32 = 0x4 << LPTIM_OR_IN1_Pos;
pub const LPTIM_OR_IN1_2: u32 = 0x8 << LPTIM_OR_IN1_Pos;
pub const LPTIM_OR_IN2_Pos: u32 = 1;
pub const LPTIM_OR_IN2_Msk: u32 = 0x19 << LPTIM_OR_IN2_Pos;
pub const LPTIM_OR_IN2: u32 = LPTIM_OR_IN2_Msk;
pub const LPTIM_OR_IN2_0: u32 = 0x1 << LPTIM_OR_IN2_Pos;
pub const LPTIM_OR_IN2_1: u32 = 0x8 << LPTIM_OR_IN2_Pos;
pub const LPTIM_OR_IN2_2: u32 = 0x10 << LPTIM_OR_IN2_Pos;
pub const USART_CR1_UE_Pos: u32 = 0;
pub const USART_CR1_UE_Msk: u32 = 0x1 << USART_CR1_UE_Pos;
pub const USART_CR1_UE: u32 = USART_CR1_UE_Msk;
pub const USART_CR1_UESM_Pos: u32 = 1;
pub const USART_CR1_UESM_Msk: u32 = 0x1 << USART_CR1_UESM_Pos;
pub const USART_CR1_UESM: u32 = USART_CR1_UESM_Msk;
pub const USART_CR1_RE_Pos: u32 = 2;
pub const USART_CR1_RE_Msk: u32 = 0x1 << USART_CR1_RE_Pos;
pub const USART_CR1_RE: u32 = USART_CR1_RE_Msk;
pub const USART_CR1_TE_Pos: u32 = 3;
pub const USART_CR1_TE_Msk: u32 = 0x1 << USART_CR1_TE_Pos;
pub const USART_CR1_TE: u32 = USART_CR1_TE_Msk;
pub const USART_CR1_IDLEIE_Pos: u32 = 4;
pub const USART_CR1_IDLEIE_Msk: u32 = 0x1 << USART_CR1_IDLEIE_Pos;
pub const USART_CR1_IDLEIE: u32 = USART_CR1_IDLEIE_Msk;
pub const USART_CR1_RXNEIE_Pos: u32 = 5;
pub const USART_CR1_RXNEIE_Msk: u32 = 0x1 << USART_CR1_RXNEIE_Pos;
pub const USART_CR1_RXNEIE: u32 = USART_CR1_RXNEIE_Msk;
pub const USART_CR1_RXNEIE_RXFNEIE_Pos: u32 = USART_CR1_RXNEIE_Pos;
pub const USART_CR1_RXNEIE_RXFNEIE_Msk: u32 = USART_CR1_RXNEIE_Msk;
pub const USART_CR1_RXNEIE_RXFNEIE: u32 = USART_CR1_RXNEIE_Msk;
pub const USART_CR1_TCIE_Pos: u32 = 6;
pub const USART_CR1_TCIE_Msk: u32 = 0x1 << USART_CR1_TCIE_Pos;
pub const USART_CR1_TCIE: u32 = USART_CR1_TCIE_Msk;
pub const USART_CR1_TXEIE_Pos: u32 = 7;
pub const USART_CR1_TXEIE_Msk: u32 = 0x1 << USART_CR1_TXEIE_Pos;
pub const USART_CR1_TXEIE: u32 = USART_CR1_TXEIE_Msk;
pub const USART_CR1_TXEIE_TXFNFIE_Pos: u32 = USART_CR1_TXEIE_Pos;
pub const USART_CR1_TXEIE_TXFNFIE_Msk: u32 = USART_CR1_TXEIE_Msk;
pub const USART_CR1_TXEIE_TXFNFIE: u32 = USART_CR1_TXEIE_Msk;
pub const USART_CR1_PEIE_Pos: u32 = 8;
pub const USART_CR1_PEIE_Msk: u32 = 0x1 << USART_CR1_PEIE_Pos;
pub const USART_CR1_PEIE: u32 = USART_CR1_PEIE_Msk;
pub const USART_CR1_PS_Pos: u32 = 9;
pub const USART_CR1_PS_Msk: u32 = 0x1 << USART_CR1_PS_Pos;
pub const USART_CR1_PS: u32 = USART_CR1_PS_Msk;
pub const USART_CR1_PCE_Pos: u32 = 10;
pub const USART_CR1_PCE_Msk: u32 = 0x1 << USART_CR1_PCE_Pos;
pub const USART_CR1_PCE: u32 = USART_CR1_PCE_Msk;
pub const USART_CR1_WAKE_Pos: u32 = 11;
pub const USART_CR1_WAKE_Msk: u32 = 0x1 << USART_CR1_WAKE_Pos;
pub const USART_CR1_WAKE: u32 = USART_CR1_WAKE_Msk;
pub const USART_CR1_M_Pos: u32 = 12;
pub const USART_CR1_M_Msk: u32 = 0x10001 << USART_CR1_M_Pos;
pub const USART_CR1_M: u32 = USART_CR1_M_Msk;
pub const USART_CR1_M0_Pos: u32 = 12;
pub const USART_CR1_M0_Msk: u32 = 0x1 << USART_CR1_M0_Pos;
pub const USART_CR1_M0: u32 = USART_CR1_M0_Msk;
pub const USART_CR1_MME_Pos: u32 = 13;
pub const USART_CR1_MME_Msk: u32 = 0x1 << USART_CR1_MME_Pos;
pub const USART_CR1_MME: u32 = USART_CR1_MME_Msk;
pub const USART_CR1_CMIE_Pos: u32 = 14;
pub const USART_CR1_CMIE_Msk: u32 = 0x1 << USART_CR1_CMIE_Pos;
pub const USART_CR1_CMIE: u32 = USART_CR1_CMIE_Msk;
pub const USART_CR1_OVER8_Pos: u32 = 15;
pub const USART_CR1_OVER8_Msk: u32 = 0x1 << USART_CR1_OVER8_Pos;
pub const USART_CR1_OVER8: u32 = USART_CR1_OVER8_Msk;
pub const USART_CR1_DEDT_Pos: u32 = 16;
pub const USART_CR1_DEDT_Msk: u32 = 0x1F << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT: u32 = USART_CR1_DEDT_Msk;
pub const USART_CR1_DEDT_0: u32 = 0x01 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_1: u32 = 0x02 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_2: u32 = 0x04 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_3: u32 = 0x08 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_4: u32 = 0x10 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEAT_Pos: u32 = 21;
pub const USART_CR1_DEAT_Msk: u32 = 0x1F << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT: u32 = USART_CR1_DEAT_Msk;
pub const USART_CR1_DEAT_0: u32 = 0x01 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_1: u32 = 0x02 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_2: u32 = 0x04 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_3: u32 = 0x08 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_4: u32 = 0x10 << USART_CR1_DEAT_Pos;
pub const USART_CR1_RTOIE_Pos: u32 = 26;
pub const USART_CR1_RTOIE_Msk: u32 = 0x1 << USART_CR1_RTOIE_Pos;
pub const USART_CR1_RTOIE: u32 = USART_CR1_RTOIE_Msk;
pub const USART_CR1_EOBIE_Pos: u32 = 27;
pub const USART_CR1_EOBIE_Msk: u32 = 0x1 << USART_CR1_EOBIE_Pos;
pub const USART_CR1_EOBIE: u32 = USART_CR1_EOBIE_Msk;
pub const USART_CR1_M1_Pos: u32 = 28;
pub const USART_CR1_M1_Msk: u32 = 0x1 << USART_CR1_M1_Pos;
pub const USART_CR1_M1: u32 = USART_CR1_M1_Msk;
pub const USART_CR1_FIFOEN_Pos: u32 = 29;
pub const USART_CR1_FIFOEN_Msk: u32 = 0x1 << USART_CR1_FIFOEN_Pos;
pub const USART_CR1_FIFOEN: u32 = USART_CR1_FIFOEN_Msk;
pub const USART_CR1_TXFEIE_Pos: u32 = 30;
pub const USART_CR1_TXFEIE_Msk: u32 = 0x1 << USART_CR1_TXFEIE_Pos;
pub const USART_CR1_TXFEIE: u32 = USART_CR1_TXFEIE_Msk;
pub const USART_CR1_RXFFIE_Pos: u32 = 31;
pub const USART_CR1_RXFFIE_Msk: u32 = 0x1 << USART_CR1_RXFFIE_Pos;
pub const USART_CR1_RXFFIE: u32 = USART_CR1_RXFFIE_Msk;
pub const USART_CR2_SLVEN_Pos: u32 = 0;
pub const USART_CR2_SLVEN_Msk: u32 = 0x1 << USART_CR2_SLVEN_Pos;
pub const USART_CR2_SLVEN: u32 = USART_CR2_SLVEN_Msk;
pub const USART_CR2_DIS_NSS_Pos: u32 = 3;
pub const USART_CR2_DIS_NSS_Msk: u32 = 0x1 << USART_CR2_DIS_NSS_Pos;
pub const USART_CR2_DIS_NSS: u32 = USART_CR2_DIS_NSS_Msk;
pub const USART_CR2_ADDM7_Pos: u32 = 4;
pub const USART_CR2_ADDM7_Msk: u32 = 0x1 << USART_CR2_ADDM7_Pos;
pub const USART_CR2_ADDM7: u32 = USART_CR2_ADDM7_Msk;
pub const USART_CR2_LBDL_Pos: u32 = 5;
pub const USART_CR2_LBDL_Msk: u32 = 0x1 << USART_CR2_LBDL_Pos;
pub const USART_CR2_LBDL: u32 = USART_CR2_LBDL_Msk;
pub const USART_CR2_LBDIE_Pos: u32 = 6;
pub const USART_CR2_LBDIE_Msk: u32 = 0x1 << USART_CR2_LBDIE_Pos;
pub const USART_CR2_LBDIE: u32 = USART_CR2_LBDIE_Msk;
pub const USART_CR2_LBCL_Pos: u32 = 8;
pub const USART_CR2_LBCL_Msk: u32 = 0x1 << USART_CR2_LBCL_Pos;
pub const USART_CR2_LBCL: u32 = USART_CR2_LBCL_Msk;
pub const USART_CR2_CPHA_Pos: u32 = 9;
pub const USART_CR2_CPHA_Msk: u32 = 0x1 << USART_CR2_CPHA_Pos;
pub const USART_CR2_CPHA: u32 = USART_CR2_CPHA_Msk;
pub const USART_CR2_CPOL_Pos: u32 = 10;
pub const USART_CR2_CPOL_Msk: u32 = 0x1 << USART_CR2_CPOL_Pos;
pub const USART_CR2_CPOL: u32 = USART_CR2_CPOL_Msk;
pub const USART_CR2_CLKEN_Pos: u32 = 11;
pub const USART_CR2_CLKEN_Msk: u32 = 0x1 << USART_CR2_CLKEN_Pos;
pub const USART_CR2_CLKEN: u32 = USART_CR2_CLKEN_Msk;
pub const USART_CR2_STOP_Pos: u32 = 12;
pub const USART_CR2_STOP_Msk: u32 = 0x3 << USART_CR2_STOP_Pos;
pub const USART_CR2_STOP: u32 = USART_CR2_STOP_Msk;
pub const USART_CR2_STOP_0: u32 = 0x1 << USART_CR2_STOP_Pos;
pub const USART_CR2_STOP_1: u32 = 0x2 << USART_CR2_STOP_Pos;
pub const USART_CR2_LINEN_Pos: u32 = 14;
pub const USART_CR2_LINEN_Msk: u32 = 0x1 << USART_CR2_LINEN_Pos;
pub const USART_CR2_LINEN: u32 = USART_CR2_LINEN_Msk;
pub const USART_CR2_SWAP_Pos: u32 = 15;
pub const USART_CR2_SWAP_Msk: u32 = 0x1 << USART_CR2_SWAP_Pos;
pub const USART_CR2_SWAP: u32 = USART_CR2_SWAP_Msk;
pub const USART_CR2_RXINV_Pos: u32 = 16;
pub const USART_CR2_RXINV_Msk: u32 = 0x1 << USART_CR2_RXINV_Pos;
pub const USART_CR2_RXINV: u32 = USART_CR2_RXINV_Msk;
pub const USART_CR2_TXINV_Pos: u32 = 17;
pub const USART_CR2_TXINV_Msk: u32 = 0x1 << USART_CR2_TXINV_Pos;
pub const USART_CR2_TXINV: u32 = USART_CR2_TXINV_Msk;
pub const USART_CR2_DATAINV_Pos: u32 = 18;
pub const USART_CR2_DATAINV_Msk: u32 = 0x1 << USART_CR2_DATAINV_Pos;
pub const USART_CR2_DATAINV: u32 = USART_CR2_DATAINV_Msk;
pub const USART_CR2_MSBFIRST_Pos: u32 = 19;
pub const USART_CR2_MSBFIRST_Msk: u32 = 0x1 << USART_CR2_MSBFIRST_Pos;
pub const USART_CR2_MSBFIRST: u32 = USART_CR2_MSBFIRST_Msk;
pub const USART_CR2_ABREN_Pos: u32 = 20;
pub const USART_CR2_ABREN_Msk: u32 = 0x1 << USART_CR2_ABREN_Pos;
pub const USART_CR2_ABREN: u32 = USART_CR2_ABREN_Msk;
pub const USART_CR2_ABRMODE_Pos: u32 = 21;
pub const USART_CR2_ABRMODE_Msk: u32 = 0x3 << USART_CR2_ABRMODE_Pos;
pub const USART_CR2_ABRMODE: u32 = USART_CR2_ABRMODE_Msk;
pub const USART_CR2_ABRMODE_0: u32 = 0x1 << USART_CR2_ABRMODE_Pos;
pub const USART_CR2_ABRMODE_1: u32 = 0x2 << USART_CR2_ABRMODE_Pos;
pub const USART_CR2_RTOEN_Pos: u32 = 23;
pub const USART_CR2_RTOEN_Msk: u32 = 0x1 << USART_CR2_RTOEN_Pos;
pub const USART_CR2_RTOEN: u32 = USART_CR2_RTOEN_Msk;
pub const USART_CR2_ADD_Pos: u32 = 24;
pub const USART_CR2_ADD_Msk: u32 = 0xFF << USART_CR2_ADD_Pos;
pub const USART_CR2_ADD: u32 = USART_CR2_ADD_Msk;
pub const USART_CR3_EIE_Pos: u32 = 0;
pub const USART_CR3_EIE_Msk: u32 = 0x1 << USART_CR3_EIE_Pos;
pub const USART_CR3_EIE: u32 = USART_CR3_EIE_Msk;
pub const USART_CR3_IREN_Pos: u32 = 1;
pub const USART_CR3_IREN_Msk: u32 = 0x1 << USART_CR3_IREN_Pos;
pub const USART_CR3_IREN: u32 = USART_CR3_IREN_Msk;
pub const USART_CR3_IRLP_Pos: u32 = 2;
pub const USART_CR3_IRLP_Msk: u32 = 0x1 << USART_CR3_IRLP_Pos;
pub const USART_CR3_IRLP: u32 = USART_CR3_IRLP_Msk;
pub const USART_CR3_HDSEL_Pos: u32 = 3;
pub const USART_CR3_HDSEL_Msk: u32 = 0x1 << USART_CR3_HDSEL_Pos;
pub const USART_CR3_HDSEL: u32 = USART_CR3_HDSEL_Msk;
pub const USART_CR3_NACK_Pos: u32 = 4;
pub const USART_CR3_NACK_Msk: u32 = 0x1 << USART_CR3_NACK_Pos;
pub const USART_CR3_NACK: u32 = USART_CR3_NACK_Msk;
pub const USART_CR3_SCEN_Pos: u32 = 5;
pub const USART_CR3_SCEN_Msk: u32 = 0x1 << USART_CR3_SCEN_Pos;
pub const USART_CR3_SCEN: u32 = USART_CR3_SCEN_Msk;
pub const USART_CR3_DMAR_Pos: u32 = 6;
pub const USART_CR3_DMAR_Msk: u32 = 0x1 << USART_CR3_DMAR_Pos;
pub const USART_CR3_DMAR: u32 = USART_CR3_DMAR_Msk;
pub const USART_CR3_DMAT_Pos: u32 = 7;
pub const USART_CR3_DMAT_Msk: u32 = 0x1 << USART_CR3_DMAT_Pos;
pub const USART_CR3_DMAT: u32 = USART_CR3_DMAT_Msk;
pub const USART_CR3_RTSE_Pos: u32 = 8;
pub const USART_CR3_RTSE_Msk: u32 = 0x1 << USART_CR3_RTSE_Pos;
pub const USART_CR3_RTSE: u32 = USART_CR3_RTSE_Msk;
pub const USART_CR3_CTSE_Pos: u32 = 9;
pub const USART_CR3_CTSE_Msk: u32 = 0x1 << USART_CR3_CTSE_Pos;
pub const USART_CR3_CTSE: u32 = USART_CR3_CTSE_Msk;
pub const USART_CR3_CTSIE_Pos: u32 = 10;
pub const USART_CR3_CTSIE_Msk: u32 = 0x1 << USART_CR3_CTSIE_Pos;
pub const USART_CR3_CTSIE: u32 = USART_CR3_CTSIE_Msk;
pub const USART_CR3_ONEBIT_Pos: u32 = 11;
pub const USART_CR3_ONEBIT_Msk: u32 = 0x1 << USART_CR3_ONEBIT_Pos;
pub const USART_CR3_ONEBIT: u32 = USART_CR3_ONEBIT_Msk;
pub const USART_CR3_OVRDIS_Pos: u32 = 12;
pub const USART_CR3_OVRDIS_Msk: u32 = 0x1 << USART_CR3_OVRDIS_Pos;
pub const USART_CR3_OVRDIS: u32 = USART_CR3_OVRDIS_Msk;
pub const USART_CR3_DDRE_Pos: u32 = 13;
pub const USART_CR3_DDRE_Msk: u32 = 0x1 << USART_CR3_DDRE_Pos;
pub const USART_CR3_DDRE: u32 = USART_CR3_DDRE_Msk;
pub const USART_CR3_DEM_Pos: u32 = 14;
pub const USART_CR3_DEM_Msk: u32 = 0x1 << USART_CR3_DEM_Pos;
pub const USART_CR3_DEM: u32 = USART_CR3_DEM_Msk;
pub const USART_CR3_DEP_Pos: u32 = 15;
pub const USART_CR3_DEP_Msk: u32 = 0x1 << USART_CR3_DEP_Pos;
pub const USART_CR3_DEP: u32 = USART_CR3_DEP_Msk;
pub const USART_CR3_SCARCNT_Pos: u32 = 17;
pub const USART_CR3_SCARCNT_Msk: u32 = 0x7 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_SCARCNT: u32 = USART_CR3_SCARCNT_Msk;
pub const USART_CR3_SCARCNT_0: u32 = 0x1 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_SCARCNT_1: u32 = 0x2 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_SCARCNT_2: u32 = 0x4 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_WUS_Pos: u32 = 20;
pub const USART_CR3_WUS_Msk: u32 = 0x3 << USART_CR3_WUS_Pos;
pub const USART_CR3_WUS: u32 = USART_CR3_WUS_Msk;
pub const USART_CR3_WUS_0: u32 = 0x1 << USART_CR3_WUS_Pos;
pub const USART_CR3_WUS_1: u32 = 0x2 << USART_CR3_WUS_Pos;
pub const USART_CR3_WUFIE_Pos: u32 = 22;
pub const USART_CR3_WUFIE_Msk: u32 = 0x1 << USART_CR3_WUFIE_Pos;
pub const USART_CR3_WUFIE: u32 = USART_CR3_WUFIE_Msk;
pub const USART_CR3_TXFTIE_Pos: u32 = 23;
pub const USART_CR3_TXFTIE_Msk: u32 = 0x1 << USART_CR3_TXFTIE_Pos;
pub const USART_CR3_TXFTIE: u32 = USART_CR3_TXFTIE_Msk;
pub const USART_CR3_TCBGTIE_Pos: u32 = 24;
pub const USART_CR3_TCBGTIE_Msk: u32 = 0x1 << USART_CR3_TCBGTIE_Pos;
pub const USART_CR3_TCBGTIE: u32 = USART_CR3_TCBGTIE_Msk;
pub const USART_CR3_RXFTCFG_Pos: u32 = 25;
pub const USART_CR3_RXFTCFG_Msk: u32 = 0x7 << USART_CR3_RXFTCFG_Pos;
pub const USART_CR3_RXFTCFG: u32 = USART_CR3_RXFTCFG_Msk;
pub const USART_CR3_RXFTCFG_0: u32 = 0x1 << USART_CR3_RXFTCFG_Pos;
pub const USART_CR3_RXFTCFG_1: u32 = 0x2 << USART_CR3_RXFTCFG_Pos;
pub const USART_CR3_RXFTCFG_2: u32 = 0x4 << USART_CR3_RXFTCFG_Pos;
pub const USART_CR3_RXFTIE_Pos: u32 = 28;
pub const USART_CR3_RXFTIE_Msk: u32 = 0x1 << USART_CR3_RXFTIE_Pos;
pub const USART_CR3_RXFTIE: u32 = USART_CR3_RXFTIE_Msk;
pub const USART_CR3_TXFTCFG_Pos: u32 = 29;
pub const USART_CR3_TXFTCFG_Msk: u32 = 0x7 << USART_CR3_TXFTCFG_Pos;
pub const USART_CR3_TXFTCFG: u32 = USART_CR3_TXFTCFG_Msk;
pub const USART_CR3_TXFTCFG_0: u32 = 0x1 << USART_CR3_TXFTCFG_Pos;
pub const USART_CR3_TXFTCFG_1: u32 = 0x2 << USART_CR3_TXFTCFG_Pos;
pub const USART_CR3_TXFTCFG_2: u32 = 0x4 << USART_CR3_TXFTCFG_Pos;
pub const USART_BRR_LPUART_Pos: u32 = 0;
pub const USART_BRR_LPUART_Msk: u32 = 0xFFFFF << USART_BRR_LPUART_Pos;
pub const USART_BRR_LPUART: u32 = USART_BRR_LPUART_Msk;
pub const USART_BRR_BRR_Pos: u32 = 0;
pub const USART_BRR_BRR_Msk: u32 = 0xFFFF << USART_BRR_BRR_Pos;
pub const USART_BRR_BRR: u32 = USART_BRR_BRR_Msk;
pub const USART_GTPR_PSC_Pos: u32 = 0;
pub const USART_GTPR_PSC_Msk: u32 = 0xFF << USART_GTPR_PSC_Pos;
pub const USART_GTPR_PSC: u32 = USART_GTPR_PSC_Msk;
pub const USART_GTPR_GT_Pos: u32 = 8;
pub const USART_GTPR_GT_Msk: u32 = 0xFF << USART_GTPR_GT_Pos;
pub const USART_GTPR_GT: u32 = USART_GTPR_GT_Msk;
pub const USART_RTOR_RTO_Pos: u32 = 0;
pub const USART_RTOR_RTO_Msk: u32 = 0xFFFFFF << USART_RTOR_RTO_Pos;
pub const USART_RTOR_RTO: u32 = USART_RTOR_RTO_Msk;
pub const USART_RTOR_BLEN_Pos: u32 = 24;
pub const USART_RTOR_BLEN_Msk: u32 = 0xFF << USART_RTOR_BLEN_Pos;
pub const USART_RTOR_BLEN: u32 = USART_RTOR_BLEN_Msk;
pub const USART_RQR_ABRRQ_Pos: u32 = 0;
pub const USART_RQR_ABRRQ_Msk: u32 = 0x1 << USART_RQR_ABRRQ_Pos;
pub const USART_RQR_ABRRQ: u32 = USART_RQR_ABRRQ_Msk;
pub const USART_RQR_SBKRQ_Pos: u32 = 1;
pub const USART_RQR_SBKRQ_Msk: u32 = 0x1 << USART_RQR_SBKRQ_Pos;
pub const USART_RQR_SBKRQ: u32 = USART_RQR_SBKRQ_Msk;
pub const USART_RQR_MMRQ_Pos: u32 = 2;
pub const USART_RQR_MMRQ_Msk: u32 = 0x1 << USART_RQR_MMRQ_Pos;
pub const USART_RQR_MMRQ: u32 = USART_RQR_MMRQ_Msk;
pub const USART_RQR_RXFRQ_Pos: u32 = 3;
pub const USART_RQR_RXFRQ_Msk: u32 = 0x1 << USART_RQR_RXFRQ_Pos;
pub const USART_RQR_RXFRQ: u32 = USART_RQR_RXFRQ_Msk;
pub const USART_RQR_TXFRQ_Pos: u32 = 4;
pub const USART_RQR_TXFRQ_Msk: u32 = 0x1 << USART_RQR_TXFRQ_Pos;
pub const USART_RQR_TXFRQ: u32 = USART_RQR_TXFRQ_Msk;
pub const USART_ISR_PE_Pos: u32 = 0;
pub const USART_ISR_PE_Msk: u32 = 0x1 << USART_ISR_PE_Pos;
pub const USART_ISR_PE: u32 = USART_ISR_PE_Msk;
pub const USART_ISR_FE_Pos: u32 = 1;
pub const USART_ISR_FE_Msk: u32 = 0x1 << USART_ISR_FE_Pos;
pub const USART_ISR_FE: u32 = USART_ISR_FE_Msk;
pub const USART_ISR_NE_Pos: u32 = 2;
pub const USART_ISR_NE_Msk: u32 = 0x1 << USART_ISR_NE_Pos;
pub const USART_ISR_NE: u32 = USART_ISR_NE_Msk;
pub const USART_ISR_ORE_Pos: u32 = 3;
pub const USART_ISR_ORE_Msk: u32 = 0x1 << USART_ISR_ORE_Pos;
pub const USART_ISR_ORE: u32 = USART_ISR_ORE_Msk;
pub const USART_ISR_IDLE_Pos: u32 = 4;
pub const USART_ISR_IDLE_Msk: u32 = 0x1 << USART_ISR_IDLE_Pos;
pub const USART_ISR_IDLE: u32 = USART_ISR_IDLE_Msk;
pub const USART_ISR_RXNE_Pos: u32 = 5;
pub const USART_ISR_RXNE_Msk: u32 = 0x1 << USART_ISR_RXNE_Pos;
pub const USART_ISR_RXNE: u32 = USART_ISR_RXNE_Msk;
pub const USART_ISR_RXNE_RXFNE_Pos: u32 = USART_ISR_RXNE_Pos;
pub const USART_ISR_RXNE_RXFNE_Msk: u32 = USART_ISR_RXNE_Msk;
pub const USART_ISR_RXNE_RXFNE: u32 = USART_ISR_RXNE_Msk;
pub const USART_ISR_TC_Pos: u32 = 6;
pub const USART_ISR_TC_Msk: u32 = 0x1 << USART_ISR_TC_Pos;
pub const USART_ISR_TC: u32 = USART_ISR_TC_Msk;
pub const USART_ISR_TXE_Pos: u32 = 7;
pub const USART_ISR_TXE_Msk: u32 = 0x1 << USART_ISR_TXE_Pos;
pub const USART_ISR_TXE: u32 = USART_ISR_TXE_Msk;
pub const USART_ISR_TXE_TXFNF_Pos: u32 = USART_ISR_TXE_Pos;
pub const USART_ISR_TXE_TXFNF_Msk: u32 = USART_ISR_TXE_Msk;
pub const USART_ISR_TXE_TXFNF: u32 = USART_ISR_TXE_Msk;
pub const USART_ISR_LBDF_Pos: u32 = 8;
pub const USART_ISR_LBDF_Msk: u32 = 0x1 << USART_ISR_LBDF_Pos;
pub const USART_ISR_LBDF: u32 = USART_ISR_LBDF_Msk;
pub const USART_ISR_CTSIF_Pos: u32 = 9;
pub const USART_ISR_CTSIF_Msk: u32 = 0x1 << USART_ISR_CTSIF_Pos;
pub const USART_ISR_CTSIF: u32 = USART_ISR_CTSIF_Msk;
pub const USART_ISR_CTS_Pos: u32 = 10;
pub const USART_ISR_CTS_Msk: u32 = 0x1 << USART_ISR_CTS_Pos;
pub const USART_ISR_CTS: u32 = USART_ISR_CTS_Msk;
pub const USART_ISR_RTOF_Pos: u32 = 11;
pub const USART_ISR_RTOF_Msk: u32 = 0x1 << USART_ISR_RTOF_Pos;
pub const USART_ISR_RTOF: u32 = USART_ISR_RTOF_Msk;
pub const USART_ISR_EOBF_Pos: u32 = 12;
pub const USART_ISR_EOBF_Msk: u32 = 0x1 << USART_ISR_EOBF_Pos;
pub const USART_ISR_EOBF: u32 = USART_ISR_EOBF_Msk;
pub const USART_ISR_UDR_Pos: u32 = 13;
pub const USART_ISR_UDR_Msk: u32 = 0x1 << USART_ISR_UDR_Pos;
pub const USART_ISR_UDR: u32 = USART_ISR_UDR_Msk;
pub const USART_ISR_ABRE_Pos: u32 = 14;
pub const USART_ISR_ABRE_Msk: u32 = 0x1 << USART_ISR_ABRE_Pos;
pub const USART_ISR_ABRE: u32 = USART_ISR_ABRE_Msk;
pub const USART_ISR_ABRF_Pos: u32 = 15;
pub const USART_ISR_ABRF_Msk: u32 = 0x1 << USART_ISR_ABRF_Pos;
pub const USART_ISR_ABRF: u32 = USART_ISR_ABRF_Msk;
pub const USART_ISR_BUSY_Pos: u32 = 16;
pub const USART_ISR_BUSY_Msk: u32 = 0x1 << USART_ISR_BUSY_Pos;
pub const USART_ISR_BUSY: u32 = USART_ISR_BUSY_Msk;
pub const USART_ISR_CMF_Pos: u32 = 17;
pub const USART_ISR_CMF_Msk: u32 = 0x1 << USART_ISR_CMF_Pos;
pub const USART_ISR_CMF: u32 = USART_ISR_CMF_Msk;
pub const USART_ISR_SBKF_Pos: u32 = 18;
pub const USART_ISR_SBKF_Msk: u32 = 0x1 << USART_ISR_SBKF_Pos;
pub const USART_ISR_SBKF: u32 = USART_ISR_SBKF_Msk;
pub const USART_ISR_RWU_Pos: u32 = 19;
pub const USART_ISR_RWU_Msk: u32 = 0x1 << USART_ISR_RWU_Pos;
pub const USART_ISR_RWU: u32 = USART_ISR_RWU_Msk;
pub const USART_ISR_WUF_Pos: u32 = 20;
pub const USART_ISR_WUF_Msk: u32 = 0x1 << USART_ISR_WUF_Pos;
pub const USART_ISR_WUF: u32 = USART_ISR_WUF_Msk;
pub const USART_ISR_TEACK_Pos: u32 = 21;
pub const USART_ISR_TEACK_Msk: u32 = 0x1 << USART_ISR_TEACK_Pos;
pub const USART_ISR_TEACK: u32 = USART_ISR_TEACK_Msk;
pub const USART_ISR_REACK_Pos: u32 = 22;
pub const USART_ISR_REACK_Msk: u32 = 0x1 << USART_ISR_REACK_Pos;
pub const USART_ISR_REACK: u32 = USART_ISR_REACK_Msk;
pub const USART_ISR_TXFE_Pos: u32 = 23;
pub const USART_ISR_TXFE_Msk: u32 = 0x1 << USART_ISR_TXFE_Pos;
pub const USART_ISR_TXFE: u32 = USART_ISR_TXFE_Msk;
pub const USART_ISR_RXFF_Pos: u32 = 24;
pub const USART_ISR_RXFF_Msk: u32 = 0x1 << USART_ISR_RXFF_Pos;
pub const USART_ISR_RXFF: u32 = USART_ISR_RXFF_Msk;
pub const USART_ISR_TCBGT_Pos: u32 = 25;
pub const USART_ISR_TCBGT_Msk: u32 = 0x1 << USART_ISR_TCBGT_Pos;
pub const USART_ISR_TCBGT: u32 = USART_ISR_TCBGT_Msk;
pub const USART_ISR_RXFT_Pos: u32 = 26;
pub const USART_ISR_RXFT_Msk: u32 = 0x1 << USART_ISR_RXFT_Pos;
pub const USART_ISR_RXFT: u32 = USART_ISR_RXFT_Msk;
pub const USART_ISR_TXFT_Pos: u32 = 27;
pub const USART_ISR_TXFT_Msk: u32 = 0x1 << USART_ISR_TXFT_Pos;
pub const USART_ISR_TXFT: u32 = USART_ISR_TXFT_Msk;
pub const USART_ICR_PECF_Pos: u32 = 0;
pub const USART_ICR_PECF_Msk: u32 = 0x1 << USART_ICR_PECF_Pos;
pub const USART_ICR_PECF: u32 = USART_ICR_PECF_Msk;
pub const USART_ICR_FECF_Pos: u32 = 1;
pub const USART_ICR_FECF_Msk: u32 = 0x1 << USART_ICR_FECF_Pos;
pub const USART_ICR_FECF: u32 = USART_ICR_FECF_Msk;
pub const USART_ICR_NECF_Pos: u32 = 2;
pub const USART_ICR_NECF_Msk: u32 = 0x1 << USART_ICR_NECF_Pos;
pub const USART_ICR_NECF: u32 = USART_ICR_NECF_Msk;
pub const USART_ICR_ORECF_Pos: u32 = 3;
pub const USART_ICR_ORECF_Msk: u32 = 0x1 << USART_ICR_ORECF_Pos;
pub const USART_ICR_ORECF: u32 = USART_ICR_ORECF_Msk;
pub const USART_ICR_IDLECF_Pos: u32 = 4;
pub const USART_ICR_IDLECF_Msk: u32 = 0x1 << USART_ICR_IDLECF_Pos;
pub const USART_ICR_IDLECF: u32 = USART_ICR_IDLECF_Msk;
pub const USART_ICR_TXFECF_Pos: u32 = 5;
pub const USART_ICR_TXFECF_Msk: u32 = 0x1 << USART_ICR_TXFECF_Pos;
pub const USART_ICR_TXFECF: u32 = USART_ICR_TXFECF_Msk;
pub const USART_ICR_TCCF_Pos: u32 = 6;
pub const USART_ICR_TCCF_Msk: u32 = 0x1 << USART_ICR_TCCF_Pos;
pub const USART_ICR_TCCF: u32 = USART_ICR_TCCF_Msk;
pub const USART_ICR_TCBGTCF_Pos: u32 = 7;
pub const USART_ICR_TCBGTCF_Msk: u32 = 0x1 << USART_ICR_TCBGTCF_Pos;
pub const USART_ICR_TCBGTCF: u32 = USART_ICR_TCBGTCF_Msk;
pub const USART_ICR_LBDCF_Pos: u32 = 8;
pub const USART_ICR_LBDCF_Msk: u32 = 0x1 << USART_ICR_LBDCF_Pos;
pub const USART_ICR_LBDCF: u32 = USART_ICR_LBDCF_Msk;
pub const USART_ICR_CTSCF_Pos: u32 = 9;
pub const USART_ICR_CTSCF_Msk: u32 = 0x1 << USART_ICR_CTSCF_Pos;
pub const USART_ICR_CTSCF: u32 = USART_ICR_CTSCF_Msk;
pub const USART_ICR_RTOCF_Pos: u32 = 11;
pub const USART_ICR_RTOCF_Msk: u32 = 0x1 << USART_ICR_RTOCF_Pos;
pub const USART_ICR_RTOCF: u32 = USART_ICR_RTOCF_Msk;
pub const USART_ICR_EOBCF_Pos: u32 = 12;
pub const USART_ICR_EOBCF_Msk: u32 = 0x1 << USART_ICR_EOBCF_Pos;
pub const USART_ICR_EOBCF: u32 = USART_ICR_EOBCF_Msk;
pub const USART_ICR_UDRCF_Pos: u32 = 13;
pub const USART_ICR_UDRCF_Msk: u32 = 0x1 << USART_ICR_UDRCF_Pos;
pub const USART_ICR_UDRCF: u32 = USART_ICR_UDRCF_Msk;
pub const USART_ICR_CMCF_Pos: u32 = 17;
pub const USART_ICR_CMCF_Msk: u32 = 0x1 << USART_ICR_CMCF_Pos;
pub const USART_ICR_CMCF: u32 = USART_ICR_CMCF_Msk;
pub const USART_ICR_WUCF_Pos: u32 = 20;
pub const USART_ICR_WUCF_Msk: u32 = 0x1 << USART_ICR_WUCF_Pos;
pub const USART_ICR_WUCF: u32 = USART_ICR_WUCF_Msk;
pub const USART_RDR_RDR_Pos: u32 = 0;
pub const USART_RDR_RDR_Msk: u32 = 0x1FF << USART_RDR_RDR_Pos;
pub const USART_RDR_RDR: u32 = USART_RDR_RDR_Msk;
pub const USART_TDR_TDR_Pos: u32 = 0;
pub const USART_TDR_TDR_Msk: u32 = 0x1FF << USART_TDR_TDR_Pos;
pub const USART_TDR_TDR: u32 = USART_TDR_TDR_Msk;
pub const USART_PRESC_PRESCALER_Pos: u32 = 0;
pub const USART_PRESC_PRESCALER_Msk: u32 = 0xF << USART_PRESC_PRESCALER_Pos;
pub const USART_PRESC_PRESCALER: u32 = USART_PRESC_PRESCALER_Msk;
pub const USART_PRESC_PRESCALER_0: u32 = 0x1 << USART_PRESC_PRESCALER_Pos;
pub const USART_PRESC_PRESCALER_1: u32 = 0x2 << USART_PRESC_PRESCALER_Pos;
pub const USART_PRESC_PRESCALER_2: u32 = 0x4 << USART_PRESC_PRESCALER_Pos;
pub const USART_PRESC_PRESCALER_3: u32 = 0x8 << USART_PRESC_PRESCALER_Pos;
pub const VREFBUF_CSR_ENVR_Pos: u32 = 0;
pub const VREFBUF_CSR_ENVR_Msk: u32 = 0x1 << VREFBUF_CSR_ENVR_Pos;
pub const VREFBUF_CSR_ENVR: u32 = VREFBUF_CSR_ENVR_Msk;
pub const VREFBUF_CSR_HIZ_Pos: u32 = 1;
pub const VREFBUF_CSR_HIZ_Msk: u32 = 0x1 << VREFBUF_CSR_HIZ_Pos;
pub const VREFBUF_CSR_HIZ: u32 = VREFBUF_CSR_HIZ_Msk;
pub const VREFBUF_CSR_VRR_Pos: u32 = 3;
pub const VREFBUF_CSR_VRR_Msk: u32 = 0x1 << VREFBUF_CSR_VRR_Pos;
pub const VREFBUF_CSR_VRR: u32 = VREFBUF_CSR_VRR_Msk;
pub const VREFBUF_CSR_VRS_Pos: u32 = 4;
pub const VREFBUF_CSR_VRS_Msk: u32 = 0x3 << VREFBUF_CSR_VRS_Pos;
pub const VREFBUF_CSR_VRS: u32 = VREFBUF_CSR_VRS_Msk;
pub const VREFBUF_CSR_VRS_0: u32 = 0x1 << VREFBUF_CSR_VRS_Pos;
pub const VREFBUF_CSR_VRS_1: u32 = 0x2 << VREFBUF_CSR_VRS_Pos;
pub const VREFBUF_CCR_TRIM_Pos: u32 = 0;
pub const VREFBUF_CCR_TRIM_Msk: u32 = 0x3F << VREFBUF_CCR_TRIM_Pos;
pub const VREFBUF_CCR_TRIM: u32 = VREFBUF_CCR_TRIM_Msk;
pub const USB_EP0R: u32 = USB_BASE;
pub const USB_EP1R: u32 = USB_BASE + 0x0x00000004;
pub const USB_EP2R: u32 = USB_BASE + 0x0x00000008;
pub const USB_EP3R: u32 = USB_BASE + 0x0x0000000C;
pub const USB_EP4R: u32 = USB_BASE + 0x0x00000010;
pub const USB_EP5R: u32 = USB_BASE + 0x0x00000014;
pub const USB_EP6R: u32 = USB_BASE + 0x0x00000018;
pub const USB_EP7R: u32 = USB_BASE + 0x0x0000001C;
pub const USB_EP_CTR_RX: u32 = 0x8000;
pub const USB_EP_DTOG_RX: u32 = 0x4000;
pub const USB_EPRX_STAT: u32 = 0x3000;
pub const USB_EP_SETUP: u32 = 0x0800;
pub const USB_EP_T_FIELD: u32 = 0x0600;
pub const USB_EP_KIND: u32 = 0x0100;
pub const USB_EP_CTR_TX: u32 = 0x0080;
pub const USB_EP_DTOG_TX: u32 = 0x0040;
pub const USB_EPTX_STAT: u32 = 0x0030;
pub const USB_EPADDR_FIELD: u32 = 0x000F;
pub const USB_EPREG_MASK: u32 =
    USB_EP_CTR_RX | USB_EP_SETUP | USB_EP_T_FIELD | USB_EP_KIND | USB_EP_CTR_TX | USB_EPADDR_FIELD;
pub const USB_EP_TYPE_MASK: u32 = 0x0600;
pub const USB_EP_BULK: u32 = 0x0000;
pub const USB_EP_CONTROL: u32 = 0x0200;
pub const USB_EP_ISOCHRONOUS: u32 = 0x0400;
pub const USB_EP_INTERRUPT: u32 = 0x0600;
pub const USB_EP_T_MASK: u32 = !USB_EP_T_FIELD & USB_EPREG_MASK;
pub const USB_EPKIND_MASK: u32 = !USB_EP_KIND & USB_EPREG_MASK;
pub const USB_EP_TX_DIS: u32 = 0x0000;
pub const USB_EP_TX_STALL: u32 = 0x0010;
pub const USB_EP_TX_NAK: u32 = 0x0020;
pub const USB_EP_TX_VALID: u32 = 0x0030;
pub const USB_EPTX_DTOG1: u32 = 0x0010;
pub const USB_EPTX_DTOG2: u32 = 0x0020;
pub const USB_EPTX_DTOGMASK: u32 = USB_EPTX_STAT | USB_EPREG_MASK;
pub const USB_EP_RX_DIS: u32 = 0x0000;
pub const USB_EP_RX_STALL: u32 = 0x1000;
pub const USB_EP_RX_NAK: u32 = 0x2000;
pub const USB_EP_RX_VALID: u32 = 0x3000;
pub const USB_EPRX_DTOG1: u32 = 0x1000;
pub const USB_EPRX_DTOG2: u32 = 0x2000;
pub const USB_EPRX_DTOGMASK: u32 = USB_EPRX_STAT | USB_EPREG_MASK;
pub const USB_CNTR: u32 = USB_BASE + 0x00000040;
pub const USB_ISTR: u32 = USB_BASE + 0x00000044;
pub const USB_FNR: u32 = USB_BASE + 0x00000048;
pub const USB_DADDR: u32 = USB_BASE + 0x0000004C;
pub const USB_BTABLE: u32 = USB_BASE + 0x00000050;
pub const USB_LPMCSR: u32 = USB_BASE + 0x00000054;
pub const USB_BCDR: u32 = USB_BASE + 0x00000058;
pub const USB_CNTR_CTRM: u32 = 0x8000;
pub const USB_CNTR_PMAOVRM: u32 = 0x4000;
pub const USB_CNTR_ERRM: u32 = 0x2000;
pub const USB_CNTR_WKUPM: u32 = 0x1000;
pub const USB_CNTR_SUSPM: u32 = 0x0800;
pub const USB_CNTR_RESETM: u32 = 0x0400;
pub const USB_CNTR_SOFM: u32 = 0x0200;
pub const USB_CNTR_ESOFM: u32 = 0x0100;
pub const USB_CNTR_L1REQM: u32 = 0x0080;
pub const USB_CNTR_L1RESUME: u32 = 0x0020;
pub const USB_CNTR_RESUME: u32 = 0x0010;
pub const USB_CNTR_FSUSP: u32 = 0x0008;
pub const USB_CNTR_LPMODE: u32 = 0x0004;
pub const USB_CNTR_PDWN: u32 = 0x0002;
pub const USB_CNTR_FRES: u32 = 0x0001;
pub const USB_ISTR_EP_ID: u32 = 0x000F;
pub const USB_ISTR_DIR: u32 = 0x0010;
pub const USB_ISTR_L1REQ: u32 = 0x0080;
pub const USB_ISTR_ESOF: u32 = 0x0100;
pub const USB_ISTR_SOF: u32 = 0x0200;
pub const USB_ISTR_RESET: u32 = 0x0400;
pub const USB_ISTR_SUSP: u32 = 0x0800;
pub const USB_ISTR_WKUP: u32 = 0x1000;
pub const USB_ISTR_ERR: u32 = 0x2000;
pub const USB_ISTR_PMAOVR: u32 = 0x4000;
pub const USB_ISTR_CTR: u32 = 0x8000;
pub const USB_CLR_L1REQ: u32 = !USB_ISTR_L1REQ;
pub const USB_CLR_ESOF: u32 = !USB_ISTR_ESOF;
pub const USB_CLR_SOF: u32 = !USB_ISTR_SOF;
pub const USB_CLR_RESET: u32 = !USB_ISTR_RESET;
pub const USB_CLR_SUSP: u32 = !USB_ISTR_SUSP;
pub const USB_CLR_WKUP: u32 = !USB_ISTR_WKUP;
pub const USB_CLR_ERR: u32 = !USB_ISTR_ERR;
pub const USB_CLR_PMAOVR: u32 = !USB_ISTR_PMAOVR;
pub const USB_CLR_CTR: u32 = !USB_ISTR_CTR;
pub const USB_FNR_FN: u32 = 0x07FF;
pub const USB_FNR_LSOF: u32 = 0x1800;
pub const USB_FNR_LCK: u32 = 0x2000;
pub const USB_FNR_RXDM: u32 = 0x4000;
pub const USB_FNR_RXDP: u32 = 0x8000;
pub const USB_DADDR_ADD: u32 = 0x7F;
pub const USB_DADDR_ADD0: u32 = 0x01;
pub const USB_DADDR_ADD1: u32 = 0x02;
pub const USB_DADDR_ADD2: u32 = 0x04;
pub const USB_DADDR_ADD3: u32 = 0x08;
pub const USB_DADDR_ADD4: u32 = 0x10;
pub const USB_DADDR_ADD5: u32 = 0x20;
pub const USB_DADDR_ADD6: u32 = 0x40;
pub const USB_DADDR_EF: u32 = 0x80;
pub const USB_BTABLE_BTABLE: u32 = 0xFFF8;
pub const USB_BCDR_BCDEN: u32 = 0x0001;
pub const USB_BCDR_DCDEN: u32 = 0x0002;
pub const USB_BCDR_PDEN: u32 = 0x0004;
pub const USB_BCDR_SDEN: u32 = 0x0008;
pub const USB_BCDR_DCDET: u32 = 0x0010;
pub const USB_BCDR_PDET: u32 = 0x0020;
pub const USB_BCDR_SDET: u32 = 0x0040;
pub const USB_BCDR_PS2DET: u32 = 0x0080;
pub const USB_BCDR_DPPU: u32 = 0x8000;
pub const USB_LPMCSR_LMPEN: u32 = 0x0001;
pub const USB_LPMCSR_LPMACK: u32 = 0x0002;
pub const USB_LPMCSR_REMWAKE: u32 = 0x0008;
pub const USB_LPMCSR_BESL: u32 = 0x00F0;
pub const USB_ADDR0_TX_ADDR0_TX_Pos: u32 = 1;
pub const USB_ADDR0_TX_ADDR0_TX_Msk: u32 = 0x7FFF << USB_ADDR0_TX_ADDR0_TX_Pos;
pub const USB_ADDR0_TX_ADDR0_TX: u32 = USB_ADDR0_TX_ADDR0_TX_Msk;
pub const USB_ADDR1_TX_ADDR1_TX_Pos: u32 = 1;
pub const USB_ADDR1_TX_ADDR1_TX_Msk: u32 = 0x7FFF << USB_ADDR1_TX_ADDR1_TX_Pos;
pub const USB_ADDR1_TX_ADDR1_TX: u32 = USB_ADDR1_TX_ADDR1_TX_Msk;
pub const USB_ADDR2_TX_ADDR2_TX_Pos: u32 = 1;
pub const USB_ADDR2_TX_ADDR2_TX_Msk: u32 = 0x7FFF << USB_ADDR2_TX_ADDR2_TX_Pos;
pub const USB_ADDR2_TX_ADDR2_TX: u32 = USB_ADDR2_TX_ADDR2_TX_Msk;
pub const USB_ADDR3_TX_ADDR3_TX_Pos: u32 = 1;
pub const USB_ADDR3_TX_ADDR3_TX_Msk: u32 = 0x7FFF << USB_ADDR3_TX_ADDR3_TX_Pos;
pub const USB_ADDR3_TX_ADDR3_TX: u32 = USB_ADDR3_TX_ADDR3_TX_Msk;
pub const USB_ADDR4_TX_ADDR4_TX_Pos: u32 = 1;
pub const USB_ADDR4_TX_ADDR4_TX_Msk: u32 = 0x7FFF << USB_ADDR4_TX_ADDR4_TX_Pos;
pub const USB_ADDR4_TX_ADDR4_TX: u32 = USB_ADDR4_TX_ADDR4_TX_Msk;
pub const USB_ADDR5_TX_ADDR5_TX_Pos: u32 = 1;
pub const USB_ADDR5_TX_ADDR5_TX_Msk: u32 = 0x7FFF << USB_ADDR5_TX_ADDR5_TX_Pos;
pub const USB_ADDR5_TX_ADDR5_TX: u32 = USB_ADDR5_TX_ADDR5_TX_Msk;
pub const USB_ADDR6_TX_ADDR6_TX_Pos: u32 = 1;
pub const USB_ADDR6_TX_ADDR6_TX_Msk: u32 = 0x7FFF << USB_ADDR6_TX_ADDR6_TX_Pos;
pub const USB_ADDR6_TX_ADDR6_TX: u32 = USB_ADDR6_TX_ADDR6_TX_Msk;
pub const USB_ADDR7_TX_ADDR7_TX_Pos: u32 = 1;
pub const USB_ADDR7_TX_ADDR7_TX_Msk: u32 = 0x7FFF << USB_ADDR7_TX_ADDR7_TX_Pos;
pub const USB_ADDR7_TX_ADDR7_TX: u32 = USB_ADDR7_TX_ADDR7_TX_Msk;
pub const USB_COUNT0_TX_COUNT0_TX_Pos: u32 = 0;
pub const USB_COUNT0_TX_COUNT0_TX_Msk: u32 = 0x3FF << USB_COUNT0_TX_COUNT0_TX_Pos;
pub const USB_COUNT0_TX_COUNT0_TX: u32 = USB_COUNT0_TX_COUNT0_TX_Msk;
pub const USB_COUNT1_TX_COUNT1_TX_Pos: u32 = 0;
pub const USB_COUNT1_TX_COUNT1_TX_Msk: u32 = 0x3FF << USB_COUNT1_TX_COUNT1_TX_Pos;
pub const USB_COUNT1_TX_COUNT1_TX: u32 = USB_COUNT1_TX_COUNT1_TX_Msk;
pub const USB_COUNT2_TX_COUNT2_TX_Pos: u32 = 0;
pub const USB_COUNT2_TX_COUNT2_TX_Msk: u32 = 0x3FF << USB_COUNT2_TX_COUNT2_TX_Pos;
pub const USB_COUNT2_TX_COUNT2_TX: u32 = USB_COUNT2_TX_COUNT2_TX_Msk;
pub const USB_COUNT3_TX_COUNT3_TX_Pos: u32 = 0;
pub const USB_COUNT3_TX_COUNT3_TX_Msk: u32 = 0x3FF << USB_COUNT3_TX_COUNT3_TX_Pos;
pub const USB_COUNT3_TX_COUNT3_TX: u32 = USB_COUNT3_TX_COUNT3_TX_Msk;
pub const USB_COUNT4_TX_COUNT4_TX_Pos: u32 = 0;
pub const USB_COUNT4_TX_COUNT4_TX_Msk: u32 = 0x3FF << USB_COUNT4_TX_COUNT4_TX_Pos;
pub const USB_COUNT4_TX_COUNT4_TX: u32 = USB_COUNT4_TX_COUNT4_TX_Msk;
pub const USB_COUNT5_TX_COUNT5_TX_Pos: u32 = 0;
pub const USB_COUNT5_TX_COUNT5_TX_Msk: u32 = 0x3FF << USB_COUNT5_TX_COUNT5_TX_Pos;
pub const USB_COUNT5_TX_COUNT5_TX: u32 = USB_COUNT5_TX_COUNT5_TX_Msk;
pub const USB_COUNT6_TX_COUNT6_TX_Pos: u32 = 0;
pub const USB_COUNT6_TX_COUNT6_TX_Msk: u32 = 0x3FF << USB_COUNT6_TX_COUNT6_TX_Pos;
pub const USB_COUNT6_TX_COUNT6_TX: u32 = USB_COUNT6_TX_COUNT6_TX_Msk;
pub const USB_COUNT7_TX_COUNT7_TX_Pos: u32 = 0;
pub const USB_COUNT7_TX_COUNT7_TX_Msk: u32 = 0x3FF << USB_COUNT7_TX_COUNT7_TX_Pos;
pub const USB_COUNT7_TX_COUNT7_TX: u32 = USB_COUNT7_TX_COUNT7_TX_Msk;
pub const USB_COUNT0_TX_0_COUNT0_TX_0: u32 = 0x000003FF;
pub const USB_COUNT0_TX_1_COUNT0_TX_1: u32 = 0x03FF0000;
pub const USB_COUNT1_TX_0_COUNT1_TX_0: u32 = 0x000003FF;
pub const USB_COUNT1_TX_1_COUNT1_TX_1: u32 = 0x03FF0000;
pub const USB_COUNT2_TX_0_COUNT2_TX_0: u32 = 0x000003FF;
pub const USB_COUNT2_TX_1_COUNT2_TX_1: u32 = 0x03FF0000;
pub const USB_COUNT3_TX_0_COUNT3_TX_0: u32 = 0x000003FF;
pub const USB_COUNT3_TX_1_COUNT3_TX_1: u32 = 0x03FF0000;
pub const USB_COUNT4_TX_0_COUNT4_TX_0: u32 = 0x000003FF;
pub const USB_COUNT4_TX_1_COUNT4_TX_1: u32 = 0x03FF0000;
pub const USB_COUNT5_TX_0_COUNT5_TX_0: u32 = 0x000003FF;
pub const USB_COUNT5_TX_1_COUNT5_TX_1: u32 = 0x03FF0000;
pub const USB_COUNT6_TX_0_COUNT6_TX_0: u32 = 0x000003FF;
pub const USB_COUNT6_TX_1_COUNT6_TX_1: u32 = 0x03FF0000;
pub const USB_COUNT7_TX_0_COUNT7_TX_0: u32 = 0x000003FF;
pub const USB_COUNT7_TX_1_COUNT7_TX_1: u32 = 0x03FF0000;
pub const USB_ADDR0_RX_ADDR0_RX_Pos: u32 = 1;
pub const USB_ADDR0_RX_ADDR0_RX_Msk: u32 = 0x7FFF << USB_ADDR0_RX_ADDR0_RX_Pos;
pub const USB_ADDR0_RX_ADDR0_RX: u32 = USB_ADDR0_RX_ADDR0_RX_Msk;
pub const USB_ADDR1_RX_ADDR1_RX_Pos: u32 = 1;
pub const USB_ADDR1_RX_ADDR1_RX_Msk: u32 = 0x7FFF << USB_ADDR1_RX_ADDR1_RX_Pos;
pub const USB_ADDR1_RX_ADDR1_RX: u32 = USB_ADDR1_RX_ADDR1_RX_Msk;
pub const USB_ADDR2_RX_ADDR2_RX_Pos: u32 = 1;
pub const USB_ADDR2_RX_ADDR2_RX_Msk: u32 = 0x7FFF << USB_ADDR2_RX_ADDR2_RX_Pos;
pub const USB_ADDR2_RX_ADDR2_RX: u32 = USB_ADDR2_RX_ADDR2_RX_Msk;
pub const USB_ADDR3_RX_ADDR3_RX_Pos: u32 = 1;
pub const USB_ADDR3_RX_ADDR3_RX_Msk: u32 = 0x7FFF << USB_ADDR3_RX_ADDR3_RX_Pos;
pub const USB_ADDR3_RX_ADDR3_RX: u32 = USB_ADDR3_RX_ADDR3_RX_Msk;
pub const USB_ADDR4_RX_ADDR4_RX_Pos: u32 = 1;
pub const USB_ADDR4_RX_ADDR4_RX_Msk: u32 = 0x7FFF << USB_ADDR4_RX_ADDR4_RX_Pos;
pub const USB_ADDR4_RX_ADDR4_RX: u32 = USB_ADDR4_RX_ADDR4_RX_Msk;
pub const USB_ADDR5_RX_ADDR5_RX_Pos: u32 = 1;
pub const USB_ADDR5_RX_ADDR5_RX_Msk: u32 = 0x7FFF << USB_ADDR5_RX_ADDR5_RX_Pos;
pub const USB_ADDR5_RX_ADDR5_RX: u32 = USB_ADDR5_RX_ADDR5_RX_Msk;
pub const USB_ADDR6_RX_ADDR6_RX_Pos: u32 = 1;
pub const USB_ADDR6_RX_ADDR6_RX_Msk: u32 = 0x7FFF << USB_ADDR6_RX_ADDR6_RX_Pos;
pub const USB_ADDR6_RX_ADDR6_RX: u32 = USB_ADDR6_RX_ADDR6_RX_Msk;
pub const USB_ADDR7_RX_ADDR7_RX_Pos: u32 = 1;
pub const USB_ADDR7_RX_ADDR7_RX_Msk: u32 = 0x7FFF << USB_ADDR7_RX_ADDR7_RX_Pos;
pub const USB_ADDR7_RX_ADDR7_RX: u32 = USB_ADDR7_RX_ADDR7_RX_Msk;
pub const USB_COUNT0_RX_COUNT0_RX_Pos: u32 = 0;
pub const USB_COUNT0_RX_COUNT0_RX_Msk: u32 = 0x3FF << USB_COUNT0_RX_COUNT0_RX_Pos;
pub const USB_COUNT0_RX_COUNT0_RX: u32 = USB_COUNT0_RX_COUNT0_RX_Msk;
pub const USB_COUNT0_RX_NUM_BLOCK_Pos: u32 = 10;
pub const USB_COUNT0_RX_NUM_BLOCK_Msk: u32 = 0x1F << USB_COUNT0_RX_NUM_BLOCK_Pos;
pub const USB_COUNT0_RX_NUM_BLOCK: u32 = USB_COUNT0_RX_NUM_BLOCK_Msk;
pub const USB_COUNT0_RX_NUM_BLOCK_0: u32 = 0x01 << USB_COUNT0_RX_NUM_BLOCK_Pos;
pub const USB_COUNT0_RX_NUM_BLOCK_1: u32 = 0x02 << USB_COUNT0_RX_NUM_BLOCK_Pos;
pub const USB_COUNT0_RX_NUM_BLOCK_2: u32 = 0x04 << USB_COUNT0_RX_NUM_BLOCK_Pos;
pub const USB_COUNT0_RX_NUM_BLOCK_3: u32 = 0x08 << USB_COUNT0_RX_NUM_BLOCK_Pos;
pub const USB_COUNT0_RX_NUM_BLOCK_4: u32 = 0x10 << USB_COUNT0_RX_NUM_BLOCK_Pos;
pub const USB_COUNT0_RX_BLSIZE_Pos: u32 = 15;
pub const USB_COUNT0_RX_BLSIZE_Msk: u32 = 0x1 << USB_COUNT0_RX_BLSIZE_Pos;
pub const USB_COUNT0_RX_BLSIZE: u32 = USB_COUNT0_RX_BLSIZE_Msk;
pub const USB_COUNT1_RX_COUNT1_RX_Pos: u32 = 0;
pub const USB_COUNT1_RX_COUNT1_RX_Msk: u32 = 0x3FF << USB_COUNT1_RX_COUNT1_RX_Pos;
pub const USB_COUNT1_RX_COUNT1_RX: u32 = USB_COUNT1_RX_COUNT1_RX_Msk;
pub const USB_COUNT1_RX_NUM_BLOCK_Pos: u32 = 10;
pub const USB_COUNT1_RX_NUM_BLOCK_Msk: u32 = 0x1F << USB_COUNT1_RX_NUM_BLOCK_Pos;
pub const USB_COUNT1_RX_NUM_BLOCK: u32 = USB_COUNT1_RX_NUM_BLOCK_Msk;
pub const USB_COUNT1_RX_NUM_BLOCK_0: u32 = 0x01 << USB_COUNT1_RX_NUM_BLOCK_Pos;
pub const USB_COUNT1_RX_NUM_BLOCK_1: u32 = 0x02 << USB_COUNT1_RX_NUM_BLOCK_Pos;
pub const USB_COUNT1_RX_NUM_BLOCK_2: u32 = 0x04 << USB_COUNT1_RX_NUM_BLOCK_Pos;
pub const USB_COUNT1_RX_NUM_BLOCK_3: u32 = 0x08 << USB_COUNT1_RX_NUM_BLOCK_Pos;
pub const USB_COUNT1_RX_NUM_BLOCK_4: u32 = 0x10 << USB_COUNT1_RX_NUM_BLOCK_Pos;
pub const USB_COUNT1_RX_BLSIZE_Pos: u32 = 15;
pub const USB_COUNT1_RX_BLSIZE_Msk: u32 = 0x1 << USB_COUNT1_RX_BLSIZE_Pos;
pub const USB_COUNT1_RX_BLSIZE: u32 = USB_COUNT1_RX_BLSIZE_Msk;
pub const USB_COUNT2_RX_COUNT2_RX_Pos: u32 = 0;
pub const USB_COUNT2_RX_COUNT2_RX_Msk: u32 = 0x3FF << USB_COUNT2_RX_COUNT2_RX_Pos;
pub const USB_COUNT2_RX_COUNT2_RX: u32 = USB_COUNT2_RX_COUNT2_RX_Msk;
pub const USB_COUNT2_RX_NUM_BLOCK_Pos: u32 = 10;
pub const USB_COUNT2_RX_NUM_BLOCK_Msk: u32 = 0x1F << USB_COUNT2_RX_NUM_BLOCK_Pos;
pub const USB_COUNT2_RX_NUM_BLOCK: u32 = USB_COUNT2_RX_NUM_BLOCK_Msk;
pub const USB_COUNT2_RX_NUM_BLOCK_0: u32 = 0x01 << USB_COUNT2_RX_NUM_BLOCK_Pos;
pub const USB_COUNT2_RX_NUM_BLOCK_1: u32 = 0x02 << USB_COUNT2_RX_NUM_BLOCK_Pos;
pub const USB_COUNT2_RX_NUM_BLOCK_2: u32 = 0x04 << USB_COUNT2_RX_NUM_BLOCK_Pos;
pub const USB_COUNT2_RX_NUM_BLOCK_3: u32 = 0x08 << USB_COUNT2_RX_NUM_BLOCK_Pos;
pub const USB_COUNT2_RX_NUM_BLOCK_4: u32 = 0x10 << USB_COUNT2_RX_NUM_BLOCK_Pos;
pub const USB_COUNT2_RX_BLSIZE_Pos: u32 = 15;
pub const USB_COUNT2_RX_BLSIZE_Msk: u32 = 0x1 << USB_COUNT2_RX_BLSIZE_Pos;
pub const USB_COUNT2_RX_BLSIZE: u32 = USB_COUNT2_RX_BLSIZE_Msk;
pub const USB_COUNT3_RX_COUNT3_RX_Pos: u32 = 0;
pub const USB_COUNT3_RX_COUNT3_RX_Msk: u32 = 0x3FF << USB_COUNT3_RX_COUNT3_RX_Pos;
pub const USB_COUNT3_RX_COUNT3_RX: u32 = USB_COUNT3_RX_COUNT3_RX_Msk;
pub const USB_COUNT3_RX_NUM_BLOCK_Pos: u32 = 10;
pub const USB_COUNT3_RX_NUM_BLOCK_Msk: u32 = 0x1F << USB_COUNT3_RX_NUM_BLOCK_Pos;
pub const USB_COUNT3_RX_NUM_BLOCK: u32 = USB_COUNT3_RX_NUM_BLOCK_Msk;
pub const USB_COUNT3_RX_NUM_BLOCK_0: u32 = 0x01 << USB_COUNT3_RX_NUM_BLOCK_Pos;
pub const USB_COUNT3_RX_NUM_BLOCK_1: u32 = 0x02 << USB_COUNT3_RX_NUM_BLOCK_Pos;
pub const USB_COUNT3_RX_NUM_BLOCK_2: u32 = 0x04 << USB_COUNT3_RX_NUM_BLOCK_Pos;
pub const USB_COUNT3_RX_NUM_BLOCK_3: u32 = 0x08 << USB_COUNT3_RX_NUM_BLOCK_Pos;
pub const USB_COUNT3_RX_NUM_BLOCK_4: u32 = 0x10 << USB_COUNT3_RX_NUM_BLOCK_Pos;
pub const USB_COUNT3_RX_BLSIZE_Pos: u32 = 15;
pub const USB_COUNT3_RX_BLSIZE_Msk: u32 = 0x1 << USB_COUNT3_RX_BLSIZE_Pos;
pub const USB_COUNT3_RX_BLSIZE: u32 = USB_COUNT3_RX_BLSIZE_Msk;
pub const USB_COUNT4_RX_COUNT4_RX_Pos: u32 = 0;
pub const USB_COUNT4_RX_COUNT4_RX_Msk: u32 = 0x3FF << USB_COUNT4_RX_COUNT4_RX_Pos;
pub const USB_COUNT4_RX_COUNT4_RX: u32 = USB_COUNT4_RX_COUNT4_RX_Msk;
pub const USB_COUNT4_RX_NUM_BLOCK_Pos: u32 = 10;
pub const USB_COUNT4_RX_NUM_BLOCK_Msk: u32 = 0x1F << USB_COUNT4_RX_NUM_BLOCK_Pos;
pub const USB_COUNT4_RX_NUM_BLOCK: u32 = USB_COUNT4_RX_NUM_BLOCK_Msk;
pub const USB_COUNT4_RX_NUM_BLOCK_0: u32 = 0x01 << USB_COUNT4_RX_NUM_BLOCK_Pos;
pub const USB_COUNT4_RX_NUM_BLOCK_1: u32 = 0x02 << USB_COUNT4_RX_NUM_BLOCK_Pos;
pub const USB_COUNT4_RX_NUM_BLOCK_2: u32 = 0x04 << USB_COUNT4_RX_NUM_BLOCK_Pos;
pub const USB_COUNT4_RX_NUM_BLOCK_3: u32 = 0x08 << USB_COUNT4_RX_NUM_BLOCK_Pos;
pub const USB_COUNT4_RX_NUM_BLOCK_4: u32 = 0x10 << USB_COUNT4_RX_NUM_BLOCK_Pos;
pub const USB_COUNT4_RX_BLSIZE_Pos: u32 = 15;
pub const USB_COUNT4_RX_BLSIZE_Msk: u32 = 0x1 << USB_COUNT4_RX_BLSIZE_Pos;
pub const USB_COUNT4_RX_BLSIZE: u32 = USB_COUNT4_RX_BLSIZE_Msk;
pub const USB_COUNT5_RX_COUNT5_RX_Pos: u32 = 0;
pub const USB_COUNT5_RX_COUNT5_RX_Msk: u32 = 0x3FF << USB_COUNT5_RX_COUNT5_RX_Pos;
pub const USB_COUNT5_RX_COUNT5_RX: u32 = USB_COUNT5_RX_COUNT5_RX_Msk;
pub const USB_COUNT5_RX_NUM_BLOCK_Pos: u32 = 10;
pub const USB_COUNT5_RX_NUM_BLOCK_Msk: u32 = 0x1F << USB_COUNT5_RX_NUM_BLOCK_Pos;
pub const USB_COUNT5_RX_NUM_BLOCK: u32 = USB_COUNT5_RX_NUM_BLOCK_Msk;
pub const USB_COUNT5_RX_NUM_BLOCK_0: u32 = 0x01 << USB_COUNT5_RX_NUM_BLOCK_Pos;
pub const USB_COUNT5_RX_NUM_BLOCK_1: u32 = 0x02 << USB_COUNT5_RX_NUM_BLOCK_Pos;
pub const USB_COUNT5_RX_NUM_BLOCK_2: u32 = 0x04 << USB_COUNT5_RX_NUM_BLOCK_Pos;
pub const USB_COUNT5_RX_NUM_BLOCK_3: u32 = 0x08 << USB_COUNT5_RX_NUM_BLOCK_Pos;
pub const USB_COUNT5_RX_NUM_BLOCK_4: u32 = 0x10 << USB_COUNT5_RX_NUM_BLOCK_Pos;
pub const USB_COUNT5_RX_BLSIZE_Pos: u32 = 15;
pub const USB_COUNT5_RX_BLSIZE_Msk: u32 = 0x1 << USB_COUNT5_RX_BLSIZE_Pos;
pub const USB_COUNT5_RX_BLSIZE: u32 = USB_COUNT5_RX_BLSIZE_Msk;
pub const USB_COUNT6_RX_COUNT6_RX_Pos: u32 = 0;
pub const USB_COUNT6_RX_COUNT6_RX_Msk: u32 = 0x3FF << USB_COUNT6_RX_COUNT6_RX_Pos;
pub const USB_COUNT6_RX_COUNT6_RX: u32 = USB_COUNT6_RX_COUNT6_RX_Msk;
pub const USB_COUNT6_RX_NUM_BLOCK_Pos: u32 = 10;
pub const USB_COUNT6_RX_NUM_BLOCK_Msk: u32 = 0x1F << USB_COUNT6_RX_NUM_BLOCK_Pos;
pub const USB_COUNT6_RX_NUM_BLOCK: u32 = USB_COUNT6_RX_NUM_BLOCK_Msk;
pub const USB_COUNT6_RX_NUM_BLOCK_0: u32 = 0x01 << USB_COUNT6_RX_NUM_BLOCK_Pos;
pub const USB_COUNT6_RX_NUM_BLOCK_1: u32 = 0x02 << USB_COUNT6_RX_NUM_BLOCK_Pos;
pub const USB_COUNT6_RX_NUM_BLOCK_2: u32 = 0x04 << USB_COUNT6_RX_NUM_BLOCK_Pos;
pub const USB_COUNT6_RX_NUM_BLOCK_3: u32 = 0x08 << USB_COUNT6_RX_NUM_BLOCK_Pos;
pub const USB_COUNT6_RX_NUM_BLOCK_4: u32 = 0x10 << USB_COUNT6_RX_NUM_BLOCK_Pos;
pub const USB_COUNT6_RX_BLSIZE_Pos: u32 = 15;
pub const USB_COUNT6_RX_BLSIZE_Msk: u32 = 0x1 << USB_COUNT6_RX_BLSIZE_Pos;
pub const USB_COUNT6_RX_BLSIZE: u32 = USB_COUNT6_RX_BLSIZE_Msk;
pub const USB_COUNT7_RX_COUNT7_RX_Pos: u32 = 0;
pub const USB_COUNT7_RX_COUNT7_RX_Msk: u32 = 0x3FF << USB_COUNT7_RX_COUNT7_RX_Pos;
pub const USB_COUNT7_RX_COUNT7_RX: u32 = USB_COUNT7_RX_COUNT7_RX_Msk;
pub const USB_COUNT7_RX_NUM_BLOCK_Pos: u32 = 10;
pub const USB_COUNT7_RX_NUM_BLOCK_Msk: u32 = 0x1F << USB_COUNT7_RX_NUM_BLOCK_Pos;
pub const USB_COUNT7_RX_NUM_BLOCK: u32 = USB_COUNT7_RX_NUM_BLOCK_Msk;
pub const USB_COUNT7_RX_NUM_BLOCK_0: u32 = 0x01 << USB_COUNT7_RX_NUM_BLOCK_Pos;
pub const USB_COUNT7_RX_NUM_BLOCK_1: u32 = 0x02 << USB_COUNT7_RX_NUM_BLOCK_Pos;
pub const USB_COUNT7_RX_NUM_BLOCK_2: u32 = 0x04 << USB_COUNT7_RX_NUM_BLOCK_Pos;
pub const USB_COUNT7_RX_NUM_BLOCK_3: u32 = 0x08 << USB_COUNT7_RX_NUM_BLOCK_Pos;
pub const USB_COUNT7_RX_NUM_BLOCK_4: u32 = 0x10 << USB_COUNT7_RX_NUM_BLOCK_Pos;
pub const USB_COUNT7_RX_BLSIZE_Pos: u32 = 15;
pub const USB_COUNT7_RX_BLSIZE_Msk: u32 = 0x1 << USB_COUNT7_RX_BLSIZE_Pos;
pub const USB_COUNT7_RX_BLSIZE: u32 = USB_COUNT7_RX_BLSIZE_Msk;
pub const USB_COUNT0_RX_0_COUNT0_RX_0: u32 = 0x000003FF;
pub const USB_COUNT0_RX_0_NUM_BLOCK_0: u32 = 0x00007C00;
pub const USB_COUNT0_RX_0_NUM_BLOCK_0_0: u32 = 0x00000400;
pub const USB_COUNT0_RX_0_NUM_BLOCK_0_1: u32 = 0x00000800;
pub const USB_COUNT0_RX_0_NUM_BLOCK_0_2: u32 = 0x00001000;
pub const USB_COUNT0_RX_0_NUM_BLOCK_0_3: u32 = 0x00002000;
pub const USB_COUNT0_RX_0_NUM_BLOCK_0_4: u32 = 0x00004000;
pub const USB_COUNT0_RX_0_BLSIZE_0: u32 = 0x00008000;
pub const USB_COUNT0_RX_1_COUNT0_RX_1: u32 = 0x03FF0000;
pub const USB_COUNT0_RX_1_NUM_BLOCK_1: u32 = 0x7C000000;
pub const USB_COUNT0_RX_1_NUM_BLOCK_1_0: u32 = 0x04000000;
pub const USB_COUNT0_RX_1_NUM_BLOCK_1_1: u32 = 0x08000000;
pub const USB_COUNT0_RX_1_NUM_BLOCK_1_2: u32 = 0x10000000;
pub const USB_COUNT0_RX_1_NUM_BLOCK_1_3: u32 = 0x20000000;
pub const USB_COUNT0_RX_1_NUM_BLOCK_1_4: u32 = 0x40000000;
pub const USB_COUNT0_RX_1_BLSIZE_1: u32 = 0x80000000;
pub const USB_COUNT1_RX_0_COUNT1_RX_0: u32 = 0x000003FF;
pub const USB_COUNT1_RX_0_NUM_BLOCK_0: u32 = 0x00007C00;
pub const USB_COUNT1_RX_0_NUM_BLOCK_0_0: u32 = 0x00000400;
pub const USB_COUNT1_RX_0_NUM_BLOCK_0_1: u32 = 0x00000800;
pub const USB_COUNT1_RX_0_NUM_BLOCK_0_2: u32 = 0x00001000;
pub const USB_COUNT1_RX_0_NUM_BLOCK_0_3: u32 = 0x00002000;
pub const USB_COUNT1_RX_0_NUM_BLOCK_0_4: u32 = 0x00004000;
pub const USB_COUNT1_RX_0_BLSIZE_0: u32 = 0x00008000;
pub const USB_COUNT1_RX_1_COUNT1_RX_1: u32 = 0x03FF0000;
pub const USB_COUNT1_RX_1_NUM_BLOCK_1: u32 = 0x7C000000;
pub const USB_COUNT1_RX_1_NUM_BLOCK_1_0: u32 = 0x04000000;
pub const USB_COUNT1_RX_1_NUM_BLOCK_1_1: u32 = 0x08000000;
pub const USB_COUNT1_RX_1_NUM_BLOCK_1_2: u32 = 0x10000000;
pub const USB_COUNT1_RX_1_NUM_BLOCK_1_3: u32 = 0x20000000;
pub const USB_COUNT1_RX_1_NUM_BLOCK_1_4: u32 = 0x40000000;
pub const USB_COUNT1_RX_1_BLSIZE_1: u32 = 0x80000000;
pub const USB_COUNT2_RX_0_COUNT2_RX_0: u32 = 0x000003FF;
pub const USB_COUNT2_RX_0_NUM_BLOCK_0: u32 = 0x00007C00;
pub const USB_COUNT2_RX_0_NUM_BLOCK_0_0: u32 = 0x00000400;
pub const USB_COUNT2_RX_0_NUM_BLOCK_0_1: u32 = 0x00000800;
pub const USB_COUNT2_RX_0_NUM_BLOCK_0_2: u32 = 0x00001000;
pub const USB_COUNT2_RX_0_NUM_BLOCK_0_3: u32 = 0x00002000;
pub const USB_COUNT2_RX_0_NUM_BLOCK_0_4: u32 = 0x00004000;
pub const USB_COUNT2_RX_0_BLSIZE_0: u32 = 0x00008000;
pub const USB_COUNT2_RX_1_COUNT2_RX_1: u32 = 0x03FF0000;
pub const USB_COUNT2_RX_1_NUM_BLOCK_1: u32 = 0x7C000000;
pub const USB_COUNT2_RX_1_NUM_BLOCK_1_0: u32 = 0x04000000;
pub const USB_COUNT2_RX_1_NUM_BLOCK_1_1: u32 = 0x08000000;
pub const USB_COUNT2_RX_1_NUM_BLOCK_1_2: u32 = 0x10000000;
pub const USB_COUNT2_RX_1_NUM_BLOCK_1_3: u32 = 0x20000000;
pub const USB_COUNT2_RX_1_NUM_BLOCK_1_4: u32 = 0x40000000;
pub const USB_COUNT2_RX_1_BLSIZE_1: u32 = 0x80000000;
pub const USB_COUNT3_RX_0_COUNT3_RX_0: u32 = 0x000003FF;
pub const USB_COUNT3_RX_0_NUM_BLOCK_0: u32 = 0x00007C00;
pub const USB_COUNT3_RX_0_NUM_BLOCK_0_0: u32 = 0x00000400;
pub const USB_COUNT3_RX_0_NUM_BLOCK_0_1: u32 = 0x00000800;
pub const USB_COUNT3_RX_0_NUM_BLOCK_0_2: u32 = 0x00001000;
pub const USB_COUNT3_RX_0_NUM_BLOCK_0_3: u32 = 0x00002000;
pub const USB_COUNT3_RX_0_NUM_BLOCK_0_4: u32 = 0x00004000;
pub const USB_COUNT3_RX_0_BLSIZE_0: u32 = 0x00008000;
pub const USB_COUNT3_RX_1_COUNT3_RX_1: u32 = 0x03FF0000;
pub const USB_COUNT3_RX_1_NUM_BLOCK_1: u32 = 0x7C000000;
pub const USB_COUNT3_RX_1_NUM_BLOCK_1_0: u32 = 0x04000000;
pub const USB_COUNT3_RX_1_NUM_BLOCK_1_1: u32 = 0x08000000;
pub const USB_COUNT3_RX_1_NUM_BLOCK_1_2: u32 = 0x10000000;
pub const USB_COUNT3_RX_1_NUM_BLOCK_1_3: u32 = 0x20000000;
pub const USB_COUNT3_RX_1_NUM_BLOCK_1_4: u32 = 0x40000000;
pub const USB_COUNT3_RX_1_BLSIZE_1: u32 = 0x80000000;
pub const USB_COUNT4_RX_0_COUNT4_RX_0: u32 = 0x000003FF;
pub const USB_COUNT4_RX_0_NUM_BLOCK_0: u32 = 0x00007C00;
pub const USB_COUNT4_RX_0_NUM_BLOCK_0_0: u32 = 0x00000400;
pub const USB_COUNT4_RX_0_NUM_BLOCK_0_1: u32 = 0x00000800;
pub const USB_COUNT4_RX_0_NUM_BLOCK_0_2: u32 = 0x00001000;
pub const USB_COUNT4_RX_0_NUM_BLOCK_0_3: u32 = 0x00002000;
pub const USB_COUNT4_RX_0_NUM_BLOCK_0_4: u32 = 0x00004000;
pub const USB_COUNT4_RX_0_BLSIZE_0: u32 = 0x00008000;
pub const USB_COUNT4_RX_1_COUNT4_RX_1: u32 = 0x03FF0000;
pub const USB_COUNT4_RX_1_NUM_BLOCK_1: u32 = 0x7C000000;
pub const USB_COUNT4_RX_1_NUM_BLOCK_1_0: u32 = 0x04000000;
pub const USB_COUNT4_RX_1_NUM_BLOCK_1_1: u32 = 0x08000000;
pub const USB_COUNT4_RX_1_NUM_BLOCK_1_2: u32 = 0x10000000;
pub const USB_COUNT4_RX_1_NUM_BLOCK_1_3: u32 = 0x20000000;
pub const USB_COUNT4_RX_1_NUM_BLOCK_1_4: u32 = 0x40000000;
pub const USB_COUNT4_RX_1_BLSIZE_1: u32 = 0x80000000;
pub const USB_COUNT5_RX_0_COUNT5_RX_0: u32 = 0x000003FF;
pub const USB_COUNT5_RX_0_NUM_BLOCK_0: u32 = 0x00007C00;
pub const USB_COUNT5_RX_0_NUM_BLOCK_0_0: u32 = 0x00000400;
pub const USB_COUNT5_RX_0_NUM_BLOCK_0_1: u32 = 0x00000800;
pub const USB_COUNT5_RX_0_NUM_BLOCK_0_2: u32 = 0x00001000;
pub const USB_COUNT5_RX_0_NUM_BLOCK_0_3: u32 = 0x00002000;
pub const USB_COUNT5_RX_0_NUM_BLOCK_0_4: u32 = 0x00004000;
pub const USB_COUNT5_RX_0_BLSIZE_0: u32 = 0x00008000;
pub const USB_COUNT5_RX_1_COUNT5_RX_1: u32 = 0x03FF0000;
pub const USB_COUNT5_RX_1_NUM_BLOCK_1: u32 = 0x7C000000;
pub const USB_COUNT5_RX_1_NUM_BLOCK_1_0: u32 = 0x04000000;
pub const USB_COUNT5_RX_1_NUM_BLOCK_1_1: u32 = 0x08000000;
pub const USB_COUNT5_RX_1_NUM_BLOCK_1_2: u32 = 0x10000000;
pub const USB_COUNT5_RX_1_NUM_BLOCK_1_3: u32 = 0x20000000;
pub const USB_COUNT5_RX_1_NUM_BLOCK_1_4: u32 = 0x40000000;
pub const USB_COUNT5_RX_1_BLSIZE_1: u32 = 0x80000000;
pub const USB_COUNT6_RX_0_COUNT6_RX_0: u32 = 0x000003FF;
pub const USB_COUNT6_RX_0_NUM_BLOCK_0: u32 = 0x00007C00;
pub const USB_COUNT6_RX_0_NUM_BLOCK_0_0: u32 = 0x00000400;
pub const USB_COUNT6_RX_0_NUM_BLOCK_0_1: u32 = 0x00000800;
pub const USB_COUNT6_RX_0_NUM_BLOCK_0_2: u32 = 0x00001000;
pub const USB_COUNT6_RX_0_NUM_BLOCK_0_3: u32 = 0x00002000;
pub const USB_COUNT6_RX_0_NUM_BLOCK_0_4: u32 = 0x00004000;
pub const USB_COUNT6_RX_0_BLSIZE_0: u32 = 0x00008000;
pub const USB_COUNT6_RX_1_COUNT6_RX_1: u32 = 0x03FF0000;
pub const USB_COUNT6_RX_1_NUM_BLOCK_1: u32 = 0x7C000000;
pub const USB_COUNT6_RX_1_NUM_BLOCK_1_0: u32 = 0x04000000;
pub const USB_COUNT6_RX_1_NUM_BLOCK_1_1: u32 = 0x08000000;
pub const USB_COUNT6_RX_1_NUM_BLOCK_1_2: u32 = 0x10000000;
pub const USB_COUNT6_RX_1_NUM_BLOCK_1_3: u32 = 0x20000000;
pub const USB_COUNT6_RX_1_NUM_BLOCK_1_4: u32 = 0x40000000;
pub const USB_COUNT6_RX_1_BLSIZE_1: u32 = 0x80000000;
pub const USB_COUNT7_RX_0_COUNT7_RX_0: u32 = 0x000003FF;
pub const USB_COUNT7_RX_0_NUM_BLOCK_0: u32 = 0x00007C00;
pub const USB_COUNT7_RX_0_NUM_BLOCK_0_0: u32 = 0x00000400;
pub const USB_COUNT7_RX_0_NUM_BLOCK_0_1: u32 = 0x00000800;
pub const USB_COUNT7_RX_0_NUM_BLOCK_0_2: u32 = 0x00001000;
pub const USB_COUNT7_RX_0_NUM_BLOCK_0_3: u32 = 0x00002000;
pub const USB_COUNT7_RX_0_NUM_BLOCK_0_4: u32 = 0x00004000;
pub const USB_COUNT7_RX_0_BLSIZE_0: u32 = 0x00008000;
pub const USB_COUNT7_RX_1_COUNT7_RX_1: u32 = 0x03FF0000;
pub const USB_COUNT7_RX_1_NUM_BLOCK_1: u32 = 0x7C000000;
pub const USB_COUNT7_RX_1_NUM_BLOCK_1_0: u32 = 0x04000000;
pub const USB_COUNT7_RX_1_NUM_BLOCK_1_1: u32 = 0x08000000;
pub const USB_COUNT7_RX_1_NUM_BLOCK_1_2: u32 = 0x10000000;
pub const USB_COUNT7_RX_1_NUM_BLOCK_1_3: u32 = 0x20000000;
pub const USB_COUNT7_RX_1_NUM_BLOCK_1_4: u32 = 0x40000000;
pub const USB_COUNT7_RX_1_BLSIZE_1: u32 = 0x80000000;
pub const UCPD_CFG1_HBITCLKDIV_Pos: u32 = 0;
pub const UCPD_CFG1_HBITCLKDIV_Msk: u32 = 0x3F << UCPD_CFG1_HBITCLKDIV_Pos;
pub const UCPD_CFG1_HBITCLKDIV: u32 = UCPD_CFG1_HBITCLKDIV_Msk;
pub const UCPD_CFG1_HBITCLKDIV_0: u32 = 0x01 << UCPD_CFG1_HBITCLKDIV_Pos;
pub const UCPD_CFG1_HBITCLKDIV_1: u32 = 0x02 << UCPD_CFG1_HBITCLKDIV_Pos;
pub const UCPD_CFG1_HBITCLKDIV_2: u32 = 0x04 << UCPD_CFG1_HBITCLKDIV_Pos;
pub const UCPD_CFG1_HBITCLKDIV_3: u32 = 0x08 << UCPD_CFG1_HBITCLKDIV_Pos;
pub const UCPD_CFG1_HBITCLKDIV_4: u32 = 0x10 << UCPD_CFG1_HBITCLKDIV_Pos;
pub const UCPD_CFG1_HBITCLKDIV_5: u32 = 0x20 << UCPD_CFG1_HBITCLKDIV_Pos;
pub const UCPD_CFG1_IFRGAP_Pos: u32 = 6;
pub const UCPD_CFG1_IFRGAP_Msk: u32 = 0x1F << UCPD_CFG1_IFRGAP_Pos;
pub const UCPD_CFG1_IFRGAP: u32 = UCPD_CFG1_IFRGAP_Msk;
pub const UCPD_CFG1_IFRGAP_0: u32 = 0x01 << UCPD_CFG1_IFRGAP_Pos;
pub const UCPD_CFG1_IFRGAP_1: u32 = 0x02 << UCPD_CFG1_IFRGAP_Pos;
pub const UCPD_CFG1_IFRGAP_2: u32 = 0x04 << UCPD_CFG1_IFRGAP_Pos;
pub const UCPD_CFG1_IFRGAP_3: u32 = 0x08 << UCPD_CFG1_IFRGAP_Pos;
pub const UCPD_CFG1_IFRGAP_4: u32 = 0x10 << UCPD_CFG1_IFRGAP_Pos;
pub const UCPD_CFG1_TRANSWIN_Pos: u32 = 11;
pub const UCPD_CFG1_TRANSWIN_Msk: u32 = 0x1F << UCPD_CFG1_TRANSWIN_Pos;
pub const UCPD_CFG1_TRANSWIN: u32 = UCPD_CFG1_TRANSWIN_Msk;
pub const UCPD_CFG1_TRANSWIN_0: u32 = 0x01 << UCPD_CFG1_TRANSWIN_Pos;
pub const UCPD_CFG1_TRANSWIN_1: u32 = 0x02 << UCPD_CFG1_TRANSWIN_Pos;
pub const UCPD_CFG1_TRANSWIN_2: u32 = 0x04 << UCPD_CFG1_TRANSWIN_Pos;
pub const UCPD_CFG1_TRANSWIN_3: u32 = 0x08 << UCPD_CFG1_TRANSWIN_Pos;
pub const UCPD_CFG1_TRANSWIN_4: u32 = 0x10 << UCPD_CFG1_TRANSWIN_Pos;
pub const UCPD_CFG1_PSC_UCPDCLK_Pos: u32 = 17;
pub const UCPD_CFG1_PSC_UCPDCLK_Msk: u32 = 0x7 << UCPD_CFG1_PSC_UCPDCLK_Pos;
pub const UCPD_CFG1_PSC_UCPDCLK: u32 = UCPD_CFG1_PSC_UCPDCLK_Msk;
pub const UCPD_CFG1_PSC_UCPDCLK_0: u32 = 0x1 << UCPD_CFG1_PSC_UCPDCLK_Pos;
pub const UCPD_CFG1_PSC_UCPDCLK_1: u32 = 0x2 << UCPD_CFG1_PSC_UCPDCLK_Pos;
pub const UCPD_CFG1_PSC_UCPDCLK_2: u32 = 0x4 << UCPD_CFG1_PSC_UCPDCLK_Pos;
pub const UCPD_CFG1_RXORDSETEN_Pos: u32 = 20;
pub const UCPD_CFG1_RXORDSETEN_Msk: u32 = 0x1FF << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_RXORDSETEN: u32 = UCPD_CFG1_RXORDSETEN_Msk;
pub const UCPD_CFG1_RXORDSETEN_0: u32 = 0x001 << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_RXORDSETEN_1: u32 = 0x002 << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_RXORDSETEN_2: u32 = 0x004 << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_RXORDSETEN_3: u32 = 0x008 << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_RXORDSETEN_4: u32 = 0x010 << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_RXORDSETEN_5: u32 = 0x020 << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_RXORDSETEN_6: u32 = 0x040 << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_RXORDSETEN_7: u32 = 0x080 << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_RXORDSETEN_8: u32 = 0x100 << UCPD_CFG1_RXORDSETEN_Pos;
pub const UCPD_CFG1_TXDMAEN_Pos: u32 = 29;
pub const UCPD_CFG1_TXDMAEN_Msk: u32 = 0x1 << UCPD_CFG1_TXDMAEN_Pos;
pub const UCPD_CFG1_TXDMAEN: u32 = UCPD_CFG1_TXDMAEN_Msk;
pub const UCPD_CFG1_RXDMAEN_Pos: u32 = 30;
pub const UCPD_CFG1_RXDMAEN_Msk: u32 = 0x1 << UCPD_CFG1_RXDMAEN_Pos;
pub const UCPD_CFG1_RXDMAEN: u32 = UCPD_CFG1_RXDMAEN_Msk;
pub const UCPD_CFG1_UCPDEN_Pos: u32 = 31;
pub const UCPD_CFG1_UCPDEN_Msk: u32 = 0x1 << UCPD_CFG1_UCPDEN_Pos;
pub const UCPD_CFG1_UCPDEN: u32 = UCPD_CFG1_UCPDEN_Msk;
pub const UCPD_CFG2_RXFILTDIS_Pos: u32 = 0;
pub const UCPD_CFG2_RXFILTDIS_Msk: u32 = 0x1 << UCPD_CFG2_RXFILTDIS_Pos;
pub const UCPD_CFG2_RXFILTDIS: u32 = UCPD_CFG2_RXFILTDIS_Msk;
pub const UCPD_CFG2_RXFILT2N3_Pos: u32 = 1;
pub const UCPD_CFG2_RXFILT2N3_Msk: u32 = 0x1 << UCPD_CFG2_RXFILT2N3_Pos;
pub const UCPD_CFG2_RXFILT2N3: u32 = UCPD_CFG2_RXFILT2N3_Msk;
pub const UCPD_CFG2_FORCECLK_Pos: u32 = 2;
pub const UCPD_CFG2_FORCECLK_Msk: u32 = 0x1 << UCPD_CFG2_FORCECLK_Pos;
pub const UCPD_CFG2_FORCECLK: u32 = UCPD_CFG2_FORCECLK_Msk;
pub const UCPD_CFG2_WUPEN_Pos: u32 = 3;
pub const UCPD_CFG2_WUPEN_Msk: u32 = 0x1 << UCPD_CFG2_WUPEN_Pos;
pub const UCPD_CFG2_WUPEN: u32 = UCPD_CFG2_WUPEN_Msk;
pub const UCPD_CR_TXMODE_Pos: u32 = 0;
pub const UCPD_CR_TXMODE_Msk: u32 = 0x3 << UCPD_CR_TXMODE_Pos;
pub const UCPD_CR_TXMODE: u32 = UCPD_CR_TXMODE_Msk;
pub const UCPD_CR_TXMODE_0: u32 = 0x1 << UCPD_CR_TXMODE_Pos;
pub const UCPD_CR_TXMODE_1: u32 = 0x2 << UCPD_CR_TXMODE_Pos;
pub const UCPD_CR_TXSEND_Pos: u32 = 2;
pub const UCPD_CR_TXSEND_Msk: u32 = 0x1 << UCPD_CR_TXSEND_Pos;
pub const UCPD_CR_TXSEND: u32 = UCPD_CR_TXSEND_Msk;
pub const UCPD_CR_TXHRST_Pos: u32 = 3;
pub const UCPD_CR_TXHRST_Msk: u32 = 0x1 << UCPD_CR_TXHRST_Pos;
pub const UCPD_CR_TXHRST: u32 = UCPD_CR_TXHRST_Msk;
pub const UCPD_CR_RXMODE_Pos: u32 = 4;
pub const UCPD_CR_RXMODE_Msk: u32 = 0x1 << UCPD_CR_RXMODE_Pos;
pub const UCPD_CR_RXMODE: u32 = UCPD_CR_RXMODE_Msk;
pub const UCPD_CR_PHYRXEN_Pos: u32 = 5;
pub const UCPD_CR_PHYRXEN_Msk: u32 = 0x1 << UCPD_CR_PHYRXEN_Pos;
pub const UCPD_CR_PHYRXEN: u32 = UCPD_CR_PHYRXEN_Msk;
pub const UCPD_CR_PHYCCSEL_Pos: u32 = 6;
pub const UCPD_CR_PHYCCSEL_Msk: u32 = 0x1 << UCPD_CR_PHYCCSEL_Pos;
pub const UCPD_CR_PHYCCSEL: u32 = UCPD_CR_PHYCCSEL_Msk;
pub const UCPD_CR_ANASUBMODE_Pos: u32 = 7;
pub const UCPD_CR_ANASUBMODE_Msk: u32 = 0x3 << UCPD_CR_ANASUBMODE_Pos;
pub const UCPD_CR_ANASUBMODE: u32 = UCPD_CR_ANASUBMODE_Msk;
pub const UCPD_CR_ANASUBMODE_0: u32 = 0x1 << UCPD_CR_ANASUBMODE_Pos;
pub const UCPD_CR_ANASUBMODE_1: u32 = 0x2 << UCPD_CR_ANASUBMODE_Pos;
pub const UCPD_CR_ANAMODE_Pos: u32 = 9;
pub const UCPD_CR_ANAMODE_Msk: u32 = 0x1 << UCPD_CR_ANAMODE_Pos;
pub const UCPD_CR_ANAMODE: u32 = UCPD_CR_ANAMODE_Msk;
pub const UCPD_CR_CCENABLE_Pos: u32 = 10;
pub const UCPD_CR_CCENABLE_Msk: u32 = 0x3 << UCPD_CR_CCENABLE_Pos;
pub const UCPD_CR_CCENABLE: u32 = UCPD_CR_CCENABLE_Msk;
pub const UCPD_CR_CCENABLE_0: u32 = 0x1 << UCPD_CR_CCENABLE_Pos;
pub const UCPD_CR_CCENABLE_1: u32 = 0x2 << UCPD_CR_CCENABLE_Pos;
pub const UCPD_CR_FRSRXEN_Pos: u32 = 16;
pub const UCPD_CR_FRSRXEN_Msk: u32 = 0x1 << UCPD_CR_FRSRXEN_Pos;
pub const UCPD_CR_FRSRXEN: u32 = UCPD_CR_FRSRXEN_Msk;
pub const UCPD_CR_FRSTX_Pos: u32 = 17;
pub const UCPD_CR_FRSTX_Msk: u32 = 0x1 << UCPD_CR_FRSTX_Pos;
pub const UCPD_CR_FRSTX: u32 = UCPD_CR_FRSTX_Msk;
pub const UCPD_CR_RDCH_Pos: u32 = 18;
pub const UCPD_CR_RDCH_Msk: u32 = 0x1 << UCPD_CR_RDCH_Pos;
pub const UCPD_CR_RDCH: u32 = UCPD_CR_RDCH_Msk;
pub const UCPD_CR_CC1TCDIS_Pos: u32 = 20;
pub const UCPD_CR_CC1TCDIS_Msk: u32 = 0x1 << UCPD_CR_CC1TCDIS_Pos;
pub const UCPD_CR_CC1TCDIS: u32 = UCPD_CR_CC1TCDIS_Msk;
pub const UCPD_CR_CC2TCDIS_Pos: u32 = 21;
pub const UCPD_CR_CC2TCDIS_Msk: u32 = 0x1 << UCPD_CR_CC2TCDIS_Pos;
pub const UCPD_CR_CC2TCDIS: u32 = UCPD_CR_CC2TCDIS_Msk;
pub const UCPD_IMR_TXISIE_Pos: u32 = 0;
pub const UCPD_IMR_TXISIE_Msk: u32 = 0x1 << UCPD_IMR_TXISIE_Pos;
pub const UCPD_IMR_TXISIE: u32 = UCPD_IMR_TXISIE_Msk;
pub const UCPD_IMR_TXMSGDISCIE_Pos: u32 = 1;
pub const UCPD_IMR_TXMSGDISCIE_Msk: u32 = 0x1 << UCPD_IMR_TXMSGDISCIE_Pos;
pub const UCPD_IMR_TXMSGDISCIE: u32 = UCPD_IMR_TXMSGDISCIE_Msk;
pub const UCPD_IMR_TXMSGSENTIE_Pos: u32 = 2;
pub const UCPD_IMR_TXMSGSENTIE_Msk: u32 = 0x1 << UCPD_IMR_TXMSGSENTIE_Pos;
pub const UCPD_IMR_TXMSGSENTIE: u32 = UCPD_IMR_TXMSGSENTIE_Msk;
pub const UCPD_IMR_TXMSGABTIE_Pos: u32 = 3;
pub const UCPD_IMR_TXMSGABTIE_Msk: u32 = 0x1 << UCPD_IMR_TXMSGABTIE_Pos;
pub const UCPD_IMR_TXMSGABTIE: u32 = UCPD_IMR_TXMSGABTIE_Msk;
pub const UCPD_IMR_HRSTDISCIE_Pos: u32 = 4;
pub const UCPD_IMR_HRSTDISCIE_Msk: u32 = 0x1 << UCPD_IMR_HRSTDISCIE_Pos;
pub const UCPD_IMR_HRSTDISCIE: u32 = UCPD_IMR_HRSTDISCIE_Msk;
pub const UCPD_IMR_HRSTSENTIE_Pos: u32 = 5;
pub const UCPD_IMR_HRSTSENTIE_Msk: u32 = 0x1 << UCPD_IMR_HRSTSENTIE_Pos;
pub const UCPD_IMR_HRSTSENTIE: u32 = UCPD_IMR_HRSTSENTIE_Msk;
pub const UCPD_IMR_TXUNDIE_Pos: u32 = 6;
pub const UCPD_IMR_TXUNDIE_Msk: u32 = 0x1 << UCPD_IMR_TXUNDIE_Pos;
pub const UCPD_IMR_TXUNDIE: u32 = UCPD_IMR_TXUNDIE_Msk;
pub const UCPD_IMR_RXNEIE_Pos: u32 = 8;
pub const UCPD_IMR_RXNEIE_Msk: u32 = 0x1 << UCPD_IMR_RXNEIE_Pos;
pub const UCPD_IMR_RXNEIE: u32 = UCPD_IMR_RXNEIE_Msk;
pub const UCPD_IMR_RXORDDETIE_Pos: u32 = 9;
pub const UCPD_IMR_RXORDDETIE_Msk: u32 = 0x1 << UCPD_IMR_RXORDDETIE_Pos;
pub const UCPD_IMR_RXORDDETIE: u32 = UCPD_IMR_RXORDDETIE_Msk;
pub const UCPD_IMR_RXHRSTDETIE_Pos: u32 = 10;
pub const UCPD_IMR_RXHRSTDETIE_Msk: u32 = 0x1 << UCPD_IMR_RXHRSTDETIE_Pos;
pub const UCPD_IMR_RXHRSTDETIE: u32 = UCPD_IMR_RXHRSTDETIE_Msk;
pub const UCPD_IMR_RXOVRIE_Pos: u32 = 11;
pub const UCPD_IMR_RXOVRIE_Msk: u32 = 0x1 << UCPD_IMR_RXOVRIE_Pos;
pub const UCPD_IMR_RXOVRIE: u32 = UCPD_IMR_RXOVRIE_Msk;
pub const UCPD_IMR_RXMSGENDIE_Pos: u32 = 12;
pub const UCPD_IMR_RXMSGENDIE_Msk: u32 = 0x1 << UCPD_IMR_RXMSGENDIE_Pos;
pub const UCPD_IMR_RXMSGENDIE: u32 = UCPD_IMR_RXMSGENDIE_Msk;
pub const UCPD_IMR_TYPECEVT1IE_Pos: u32 = 14;
pub const UCPD_IMR_TYPECEVT1IE_Msk: u32 = 0x1 << UCPD_IMR_TYPECEVT1IE_Pos;
pub const UCPD_IMR_TYPECEVT1IE: u32 = UCPD_IMR_TYPECEVT1IE_Msk;
pub const UCPD_IMR_TYPECEVT2IE_Pos: u32 = 15;
pub const UCPD_IMR_TYPECEVT2IE_Msk: u32 = 0x1 << UCPD_IMR_TYPECEVT2IE_Pos;
pub const UCPD_IMR_TYPECEVT2IE: u32 = UCPD_IMR_TYPECEVT2IE_Msk;
pub const UCPD_IMR_FRSEVTIE_Pos: u32 = 20;
pub const UCPD_IMR_FRSEVTIE_Msk: u32 = 0x1 << UCPD_IMR_FRSEVTIE_Pos;
pub const UCPD_IMR_FRSEVTIE: u32 = UCPD_IMR_FRSEVTIE_Msk;
pub const UCPD_SR_TXIS_Pos: u32 = 0;
pub const UCPD_SR_TXIS_Msk: u32 = 0x1 << UCPD_SR_TXIS_Pos;
pub const UCPD_SR_TXIS: u32 = UCPD_SR_TXIS_Msk;
pub const UCPD_SR_TXMSGDISC_Pos: u32 = 1;
pub const UCPD_SR_TXMSGDISC_Msk: u32 = 0x1 << UCPD_SR_TXMSGDISC_Pos;
pub const UCPD_SR_TXMSGDISC: u32 = UCPD_SR_TXMSGDISC_Msk;
pub const UCPD_SR_TXMSGSENT_Pos: u32 = 2;
pub const UCPD_SR_TXMSGSENT_Msk: u32 = 0x1 << UCPD_SR_TXMSGSENT_Pos;
pub const UCPD_SR_TXMSGSENT: u32 = UCPD_SR_TXMSGSENT_Msk;
pub const UCPD_SR_TXMSGABT_Pos: u32 = 3;
pub const UCPD_SR_TXMSGABT_Msk: u32 = 0x1 << UCPD_SR_TXMSGABT_Pos;
pub const UCPD_SR_TXMSGABT: u32 = UCPD_SR_TXMSGABT_Msk;
pub const UCPD_SR_HRSTDISC_Pos: u32 = 4;
pub const UCPD_SR_HRSTDISC_Msk: u32 = 0x1 << UCPD_SR_HRSTDISC_Pos;
pub const UCPD_SR_HRSTDISC: u32 = UCPD_SR_HRSTDISC_Msk;
pub const UCPD_SR_HRSTSENT_Pos: u32 = 5;
pub const UCPD_SR_HRSTSENT_Msk: u32 = 0x1 << UCPD_SR_HRSTSENT_Pos;
pub const UCPD_SR_HRSTSENT: u32 = UCPD_SR_HRSTSENT_Msk;
pub const UCPD_SR_TXUND_Pos: u32 = 6;
pub const UCPD_SR_TXUND_Msk: u32 = 0x1 << UCPD_SR_TXUND_Pos;
pub const UCPD_SR_TXUND: u32 = UCPD_SR_TXUND_Msk;
pub const UCPD_SR_RXNE_Pos: u32 = 8;
pub const UCPD_SR_RXNE_Msk: u32 = 0x1 << UCPD_SR_RXNE_Pos;
pub const UCPD_SR_RXNE: u32 = UCPD_SR_RXNE_Msk;
pub const UCPD_SR_RXORDDET_Pos: u32 = 9;
pub const UCPD_SR_RXORDDET_Msk: u32 = 0x1 << UCPD_SR_RXORDDET_Pos;
pub const UCPD_SR_RXORDDET: u32 = UCPD_SR_RXORDDET_Msk;
pub const UCPD_SR_RXHRSTDET_Pos: u32 = 10;
pub const UCPD_SR_RXHRSTDET_Msk: u32 = 0x1 << UCPD_SR_RXHRSTDET_Pos;
pub const UCPD_SR_RXHRSTDET: u32 = UCPD_SR_RXHRSTDET_Msk;
pub const UCPD_SR_RXOVR_Pos: u32 = 11;
pub const UCPD_SR_RXOVR_Msk: u32 = 0x1 << UCPD_SR_RXOVR_Pos;
pub const UCPD_SR_RXOVR: u32 = UCPD_SR_RXOVR_Msk;
pub const UCPD_SR_RXMSGEND_Pos: u32 = 12;
pub const UCPD_SR_RXMSGEND_Msk: u32 = 0x1 << UCPD_SR_RXMSGEND_Pos;
pub const UCPD_SR_RXMSGEND: u32 = UCPD_SR_RXMSGEND_Msk;
pub const UCPD_SR_RXERR_Pos: u32 = 13;
pub const UCPD_SR_RXERR_Msk: u32 = 0x1 << UCPD_SR_RXERR_Pos;
pub const UCPD_SR_RXERR: u32 = UCPD_SR_RXERR_Msk;
pub const UCPD_SR_TYPECEVT1_Pos: u32 = 14;
pub const UCPD_SR_TYPECEVT1_Msk: u32 = 0x1 << UCPD_SR_TYPECEVT1_Pos;
pub const UCPD_SR_TYPECEVT1: u32 = UCPD_SR_TYPECEVT1_Msk;
pub const UCPD_SR_TYPECEVT2_Pos: u32 = 15;
pub const UCPD_SR_TYPECEVT2_Msk: u32 = 0x1 << UCPD_SR_TYPECEVT2_Pos;
pub const UCPD_SR_TYPECEVT2: u32 = UCPD_SR_TYPECEVT2_Msk;
pub const UCPD_SR_TYPEC_VSTATE_CC1_Pos: u32 = 16;
pub const UCPD_SR_TYPEC_VSTATE_CC1_Msk: u32 = 0x3 << UCPD_SR_TYPEC_VSTATE_CC1_Pos;
pub const UCPD_SR_TYPEC_VSTATE_CC1: u32 = UCPD_SR_TYPEC_VSTATE_CC1_Msk;
pub const UCPD_SR_TYPEC_VSTATE_CC1_0: u32 = 0x1 << UCPD_SR_TYPEC_VSTATE_CC1_Pos;
pub const UCPD_SR_TYPEC_VSTATE_CC1_1: u32 = 0x2 << UCPD_SR_TYPEC_VSTATE_CC1_Pos;
pub const UCPD_SR_TYPEC_VSTATE_CC2_Pos: u32 = 18;
pub const UCPD_SR_TYPEC_VSTATE_CC2_Msk: u32 = 0x3 << UCPD_SR_TYPEC_VSTATE_CC2_Pos;
pub const UCPD_SR_TYPEC_VSTATE_CC2: u32 = UCPD_SR_TYPEC_VSTATE_CC2_Msk;
pub const UCPD_SR_TYPEC_VSTATE_CC2_0: u32 = 0x1 << UCPD_SR_TYPEC_VSTATE_CC2_Pos;
pub const UCPD_SR_TYPEC_VSTATE_CC2_1: u32 = 0x2 << UCPD_SR_TYPEC_VSTATE_CC2_Pos;
pub const UCPD_SR_FRSEVT_Pos: u32 = 20;
pub const UCPD_SR_FRSEVT_Msk: u32 = 0x1 << UCPD_SR_FRSEVT_Pos;
pub const UCPD_SR_FRSEVT: u32 = UCPD_SR_FRSEVT_Msk;
pub const UCPD_ICR_TXMSGDISCCF_Pos: u32 = 1;
pub const UCPD_ICR_TXMSGDISCCF_Msk: u32 = 0x1 << UCPD_ICR_TXMSGDISCCF_Pos;
pub const UCPD_ICR_TXMSGDISCCF: u32 = UCPD_ICR_TXMSGDISCCF_Msk;
pub const UCPD_ICR_TXMSGSENTCF_Pos: u32 = 2;
pub const UCPD_ICR_TXMSGSENTCF_Msk: u32 = 0x1 << UCPD_ICR_TXMSGSENTCF_Pos;
pub const UCPD_ICR_TXMSGSENTCF: u32 = UCPD_ICR_TXMSGSENTCF_Msk;
pub const UCPD_ICR_TXMSGABTCF_Pos: u32 = 3;
pub const UCPD_ICR_TXMSGABTCF_Msk: u32 = 0x1 << UCPD_ICR_TXMSGABTCF_Pos;
pub const UCPD_ICR_TXMSGABTCF: u32 = UCPD_ICR_TXMSGABTCF_Msk;
pub const UCPD_ICR_HRSTDISCCF_Pos: u32 = 4;
pub const UCPD_ICR_HRSTDISCCF_Msk: u32 = 0x1 << UCPD_ICR_HRSTDISCCF_Pos;
pub const UCPD_ICR_HRSTDISCCF: u32 = UCPD_ICR_HRSTDISCCF_Msk;
pub const UCPD_ICR_HRSTSENTCF_Pos: u32 = 5;
pub const UCPD_ICR_HRSTSENTCF_Msk: u32 = 0x1 << UCPD_ICR_HRSTSENTCF_Pos;
pub const UCPD_ICR_HRSTSENTCF: u32 = UCPD_ICR_HRSTSENTCF_Msk;
pub const UCPD_ICR_TXUNDCF_Pos: u32 = 6;
pub const UCPD_ICR_TXUNDCF_Msk: u32 = 0x1 << UCPD_ICR_TXUNDCF_Pos;
pub const UCPD_ICR_TXUNDCF: u32 = UCPD_ICR_TXUNDCF_Msk;
pub const UCPD_ICR_RXORDDETCF_Pos: u32 = 9;
pub const UCPD_ICR_RXORDDETCF_Msk: u32 = 0x1 << UCPD_ICR_RXORDDETCF_Pos;
pub const UCPD_ICR_RXORDDETCF: u32 = UCPD_ICR_RXORDDETCF_Msk;
pub const UCPD_ICR_RXHRSTDETCF_Pos: u32 = 10;
pub const UCPD_ICR_RXHRSTDETCF_Msk: u32 = 0x1 << UCPD_ICR_RXHRSTDETCF_Pos;
pub const UCPD_ICR_RXHRSTDETCF: u32 = UCPD_ICR_RXHRSTDETCF_Msk;
pub const UCPD_ICR_RXOVRCF_Pos: u32 = 11;
pub const UCPD_ICR_RXOVRCF_Msk: u32 = 0x1 << UCPD_ICR_RXOVRCF_Pos;
pub const UCPD_ICR_RXOVRCF: u32 = UCPD_ICR_RXOVRCF_Msk;
pub const UCPD_ICR_RXMSGENDCF_Pos: u32 = 12;
pub const UCPD_ICR_RXMSGENDCF_Msk: u32 = 0x1 << UCPD_ICR_RXMSGENDCF_Pos;
pub const UCPD_ICR_RXMSGENDCF: u32 = UCPD_ICR_RXMSGENDCF_Msk;
pub const UCPD_ICR_TYPECEVT1CF_Pos: u32 = 14;
pub const UCPD_ICR_TYPECEVT1CF_Msk: u32 = 0x1 << UCPD_ICR_TYPECEVT1CF_Pos;
pub const UCPD_ICR_TYPECEVT1CF: u32 = UCPD_ICR_TYPECEVT1CF_Msk;
pub const UCPD_ICR_TYPECEVT2CF_Pos: u32 = 15;
pub const UCPD_ICR_TYPECEVT2CF_Msk: u32 = 0x1 << UCPD_ICR_TYPECEVT2CF_Pos;
pub const UCPD_ICR_TYPECEVT2CF: u32 = UCPD_ICR_TYPECEVT2CF_Msk;
pub const UCPD_ICR_FRSEVTCF_Pos: u32 = 20;
pub const UCPD_ICR_FRSEVTCF_Msk: u32 = 0x1 << UCPD_ICR_FRSEVTCF_Pos;
pub const UCPD_ICR_FRSEVTCF: u32 = UCPD_ICR_FRSEVTCF_Msk;
pub const UCPD_TX_ORDSET_TXORDSET_Pos: u32 = 0;
pub const UCPD_TX_ORDSET_TXORDSET_Msk: u32 = 0xFFFFF << UCPD_TX_ORDSET_TXORDSET_Pos;
pub const UCPD_TX_ORDSET_TXORDSET: u32 = UCPD_TX_ORDSET_TXORDSET_Msk;
pub const UCPD_TX_PAYSZ_TXPAYSZ_Pos: u32 = 0;
pub const UCPD_TX_PAYSZ_TXPAYSZ_Msk: u32 = 0x3FF << UCPD_TX_PAYSZ_TXPAYSZ_Pos;
pub const UCPD_TX_PAYSZ_TXPAYSZ: u32 = UCPD_TX_PAYSZ_TXPAYSZ_Msk;
pub const UCPD_TXDR_TXDATA_Pos: u32 = 0;
pub const UCPD_TXDR_TXDATA_Msk: u32 = 0xFF << UCPD_TXDR_TXDATA_Pos;
pub const UCPD_TXDR_TXDATA: u32 = UCPD_TXDR_TXDATA_Msk;
pub const UCPD_RX_ORDSET_RXORDSET_Pos: u32 = 0;
pub const UCPD_RX_ORDSET_RXORDSET_Msk: u32 = 0x7 << UCPD_RX_ORDSET_RXORDSET_Pos;
pub const UCPD_RX_ORDSET_RXORDSET: u32 = UCPD_RX_ORDSET_RXORDSET_Msk;
pub const UCPD_RX_ORDSET_RXORDSET_0: u32 = 0x1 << UCPD_RX_ORDSET_RXORDSET_Pos;
pub const UCPD_RX_ORDSET_RXORDSET_1: u32 = 0x2 << UCPD_RX_ORDSET_RXORDSET_Pos;
pub const UCPD_RX_ORDSET_RXORDSET_2: u32 = 0x4 << UCPD_RX_ORDSET_RXORDSET_Pos;
pub const UCPD_RX_ORDSET_RXSOP3OF4_Pos: u32 = 3;
pub const UCPD_RX_ORDSET_RXSOP3OF4_Msk: u32 = 0x1 << UCPD_RX_ORDSET_RXSOP3OF4_Pos;
pub const UCPD_RX_ORDSET_RXSOP3OF4: u32 = UCPD_RX_ORDSET_RXSOP3OF4_Msk;
pub const UCPD_RX_ORDSET_RXSOPKINVALID_Pos: u32 = 4;
pub const UCPD_RX_ORDSET_RXSOPKINVALID_Msk: u32 = 0x7 << UCPD_RX_ORDSET_RXSOPKINVALID_Pos;
pub const UCPD_RX_ORDSET_RXSOPKINVALID: u32 = UCPD_RX_ORDSET_RXSOPKINVALID_Msk;
pub const UCPD_RX_PAYSZ_RXPAYSZ_Pos: u32 = 0;
pub const UCPD_RX_PAYSZ_RXPAYSZ_Msk: u32 = 0x3FF << UCPD_RX_PAYSZ_RXPAYSZ_Pos;
pub const UCPD_RX_PAYSZ_RXPAYSZ: u32 = UCPD_RX_PAYSZ_RXPAYSZ_Msk;
pub const UCPD_RXDR_RXDATA_Pos: u32 = 0;
pub const UCPD_RXDR_RXDATA_Msk: u32 = 0xFF << UCPD_RXDR_RXDATA_Pos;
pub const UCPD_RXDR_RXDATA: u32 = UCPD_RXDR_RXDATA_Msk;
pub const UCPD_RX_ORDEXT1_RXSOPX1_Pos: u32 = 0;
pub const UCPD_RX_ORDEXT1_RXSOPX1_Msk: u32 = 0xFFFFF << UCPD_RX_ORDEXT1_RXSOPX1_Pos;
pub const UCPD_RX_ORDEXT1_RXSOPX1: u32 = UCPD_RX_ORDEXT1_RXSOPX1_Msk;
pub const UCPD_RX_ORDEXT2_RXSOPX2_Pos: u32 = 0;
pub const UCPD_RX_ORDEXT2_RXSOPX2_Msk: u32 = 0xFFFFF << UCPD_RX_ORDEXT2_RXSOPX2_Pos;
pub const UCPD_RX_ORDEXT2_RXSOPX2: u32 = UCPD_RX_ORDEXT2_RXSOPX2_Msk;
pub const WWDG_CR_T_Pos: u32 = 0;
pub const WWDG_CR_T_Msk: u32 = 0x7F << WWDG_CR_T_Pos;
pub const WWDG_CR_T: u32 = WWDG_CR_T_Msk;
pub const WWDG_CR_T_0: u32 = 0x01 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_1: u32 = 0x02 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_2: u32 = 0x04 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_3: u32 = 0x08 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_4: u32 = 0x10 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_5: u32 = 0x20 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_6: u32 = 0x40 << WWDG_CR_T_Pos;
pub const WWDG_CR_WDGA_Pos: u32 = 7;
pub const WWDG_CR_WDGA_Msk: u32 = 0x1 << WWDG_CR_WDGA_Pos;
pub const WWDG_CR_WDGA: u32 = WWDG_CR_WDGA_Msk;
pub const WWDG_CFR_W_Pos: u32 = 0;
pub const WWDG_CFR_W_Msk: u32 = 0x7F << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W: u32 = WWDG_CFR_W_Msk;
pub const WWDG_CFR_W_0: u32 = 0x01 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_1: u32 = 0x02 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_2: u32 = 0x04 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_3: u32 = 0x08 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_4: u32 = 0x10 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_5: u32 = 0x20 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_6: u32 = 0x40 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_WDGTB_Pos: u32 = 11;
pub const WWDG_CFR_WDGTB_Msk: u32 = 0x7 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_WDGTB: u32 = WWDG_CFR_WDGTB_Msk;
pub const WWDG_CFR_WDGTB_0: u32 = 0x1 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_WDGTB_1: u32 = 0x2 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_WDGTB_2: u32 = 0x4 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_EWI_Pos: u32 = 9;
pub const WWDG_CFR_EWI_Msk: u32 = 0x1 << WWDG_CFR_EWI_Pos;
pub const WWDG_CFR_EWI: u32 = WWDG_CFR_EWI_Msk;
pub const WWDG_SR_EWIF_Pos: u32 = 0;
pub const WWDG_SR_EWIF_Msk: u32 = 0x1 << WWDG_SR_EWIF_Pos;
pub const WWDG_SR_EWIF: u32 = WWDG_SR_EWIF_Msk;
