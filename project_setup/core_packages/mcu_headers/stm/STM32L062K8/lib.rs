#![no_std]
#![allow(non_camel_case_types, non_snake_case, non_upper_case_globals)]
#[repr(i32)]
pub enum IRQn_Type {
    NonMaskableInt_IRQn = -14,
    HardFault_IRQn = -13,
    SVCall_IRQn = -5,
    PendSV_IRQn = -2,
    SysTick_IRQn = -1,
    WWDG_IRQn = 0,
    PVD_IRQn = 1,
    RTC_IRQn = 2,
    FLASH_IRQn = 3,
    RCC_CRS_IRQn = 4,
    EXTI0_1_IRQn = 5,
    EXTI2_3_IRQn = 6,
    EXTI4_15_IRQn = 7,
    TSC_IRQn = 8,
    DMA1_Channel1_IRQn = 9,
    DMA1_Channel2_3_IRQn = 10,
    DMA1_Channel4_5_6_7_IRQn = 11,
    ADC1_COMP_IRQn = 12,
    LPTIM1_IRQn = 13,
    TIM2_IRQn = 15,
    TIM6_DAC_IRQn = 17,
    TIM21_IRQn = 20,
    TIM22_IRQn = 22,
    I2C1_IRQn = 23,
    I2C2_IRQn = 24,
    SPI1_IRQn = 25,
    SPI2_IRQn = 26,
    USART1_IRQn = 27,
    USART2_IRQn = 28,
    AES_RNG_LPUART1_IRQn = 29,
    USB_IRQn = 31,
}
#[repr(C)]
pub struct ADC_TypeDef {
    pub ISR: u32,
    pub IER: u32,
    pub CR: u32,
    pub CFGR1: u32,
    pub CFGR2: u32,
    pub SMPR: u32,
    pub RESERVED1: u32,
    pub RESERVED2: u32,
    pub TR: u32,
    pub RESERVED3: u32,
    pub CHSELR: u32,
    pub RESERVED4: [u32; 5],
    pub DR: u32,
    pub RESERVED5: [u32; 28],
    pub CALFACT: u32,
}
#[repr(C)]
pub struct ADC_Common_TypeDef {
    pub CCR: u32,
}
#[repr(C)]
pub struct AES_TypeDef {
    pub CR: u32,
    pub SR: u32,
    pub DINR: u32,
    pub DOUTR: u32,
    pub KEYR0: u32,
    pub KEYR1: u32,
    pub KEYR2: u32,
    pub KEYR3: u32,
    pub IVR0: u32,
    pub IVR1: u32,
    pub IVR2: u32,
    pub IVR3: u32,
}
#[repr(C)]
pub struct COMP_TypeDef {
    pub CSR: u32,
}
#[repr(C)]
pub struct COMP_Common_TypeDef {
    pub CSR: u32,
}
#[repr(C)]
pub struct CRC_TypeDef {
    pub DR: u32,
    pub IDR: u32,
    pub RESERVED0: u32,
    pub RESERVED1: u32,
    pub CR: u32,
    pub RESERVED2: u32,
    pub INIT: u32,
    pub POL: u32,
}
#[repr(C)]
pub struct CRS_TypeDef {
    pub CR: u32,
    pub CFGR: u32,
    pub ISR: u32,
    pub ICR: u32,
}
#[repr(C)]
pub struct DAC_TypeDef {
    pub CR: u32,
    pub SWTRIGR: u32,
    pub DHR12R1: u32,
    pub DHR12L1: u32,
    pub DHR8R1: u32,
    pub RESERVED0: [u32; 6],
    pub DOR1: u32,
    pub RESERVED1: u32,
    pub SR: u32,
}
#[repr(C)]
pub struct DBGMCU_TypeDef {
    pub IDCODE: u32,
    pub CR: u32,
    pub APB1FZ: u32,
    pub APB2FZ: u32,
}
#[repr(C)]
pub struct DMA_Channel_TypeDef {
    pub CCR: u32,
    pub CNDTR: u32,
    pub CPAR: u32,
    pub CMAR: u32,
}
#[repr(C)]
pub struct DMA_TypeDef {
    pub ISR: u32,
    pub IFCR: u32,
}
#[repr(C)]
pub struct DMA_Request_TypeDef {
    pub CSELR: u32,
}
#[repr(C)]
pub struct EXTI_TypeDef {
    pub IMR: u32,
    pub EMR: u32,
    pub RTSR: u32,
    pub FTSR: u32,
    pub SWIER: u32,
    pub PR: u32,
}
#[repr(C)]
pub struct FLASH_TypeDef {
    pub ACR: u32,
    pub PECR: u32,
    pub PDKEYR: u32,
    pub PEKEYR: u32,
    pub PRGKEYR: u32,
    pub OPTKEYR: u32,
    pub SR: u32,
    pub OPTR: u32,
    pub WRPR: u32,
}
#[repr(C)]
pub struct OB_TypeDef {
    pub RDP: u32,
    pub USER: u32,
    pub WRP01: u32,
}
#[repr(C)]
pub struct GPIO_TypeDef {
    pub MODER: u32,
    pub OTYPER: u32,
    pub OSPEEDR: u32,
    pub PUPDR: u32,
    pub IDR: u32,
    pub ODR: u32,
    pub BSRR: u32,
    pub LCKR: u32,
    pub AFR: [u32; 2],
    pub BRR: u32,
}
#[repr(C)]
pub struct LPTIM_TypeDef {
    pub ISR: u32,
    pub ICR: u32,
    pub IER: u32,
    pub CFGR: u32,
    pub CR: u32,
    pub CMP: u32,
    pub ARR: u32,
    pub CNT: u32,
}
#[repr(C)]
pub struct SYSCFG_TypeDef {
    pub CFGR1: u32,
    pub CFGR2: u32,
    pub EXTICR: [u32; 4],
    pub RESERVED: [u32; 2],
    pub CFGR3: u32,
}
#[repr(C)]
pub struct I2C_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub OAR1: u32,
    pub OAR2: u32,
    pub TIMINGR: u32,
    pub TIMEOUTR: u32,
    pub ISR: u32,
    pub ICR: u32,
    pub PECR: u32,
    pub RXDR: u32,
    pub TXDR: u32,
}
#[repr(C)]
pub struct IWDG_TypeDef {
    pub KR: u32,
    pub PR: u32,
    pub RLR: u32,
    pub SR: u32,
    pub WINR: u32,
}
#[repr(C)]
pub struct FIREWALL_TypeDef {
    pub CSSA: u32,
    pub CSL: u32,
    pub NVDSSA: u32,
    pub NVDSL: u32,
    pub VDSSA: u32,
    pub VDSL: u32,
    pub LSSA: u32,
    pub LSL: u32,
    pub CR: u32,
}
#[repr(C)]
pub struct PWR_TypeDef {
    pub CR: u32,
    pub CSR: u32,
}
#[repr(C)]
pub struct RCC_TypeDef {
    pub CR: u32,
    pub ICSCR: u32,
    pub CRRCR: u32,
    pub CFGR: u32,
    pub CIER: u32,
    pub CIFR: u32,
    pub CICR: u32,
    pub IOPRSTR: u32,
    pub AHBRSTR: u32,
    pub APB2RSTR: u32,
    pub APB1RSTR: u32,
    pub IOPENR: u32,
    pub AHBENR: u32,
    pub APB2ENR: u32,
    pub APB1ENR: u32,
    pub IOPSMENR: u32,
    pub AHBSMENR: u32,
    pub APB2SMENR: u32,
    pub APB1SMENR: u32,
    pub CCIPR: u32,
    pub CSR: u32,
}
#[repr(C)]
pub struct RNG_TypeDef {
    pub CR: u32,
    pub SR: u32,
    pub DR: u32,
}
#[repr(C)]
pub struct RTC_TypeDef {
    pub TR: u32,
    pub DR: u32,
    pub CR: u32,
    pub ISR: u32,
    pub PRER: u32,
    pub WUTR: u32,
    pub RESERVED: u32,
    pub ALRMAR: u32,
    pub ALRMBR: u32,
    pub WPR: u32,
    pub SSR: u32,
    pub SHIFTR: u32,
    pub TSTR: u32,
    pub TSDR: u32,
    pub TSSSR: u32,
    pub CALR: u32,
    pub TAMPCR: u32,
    pub ALRMASSR: u32,
    pub ALRMBSSR: u32,
    pub OR: u32,
    pub BKP0R: u32,
    pub BKP1R: u32,
    pub BKP2R: u32,
    pub BKP3R: u32,
    pub BKP4R: u32,
}
#[repr(C)]
pub struct SPI_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub SR: u32,
    pub DR: u32,
    pub CRCPR: u32,
    pub RXCRCR: u32,
    pub TXCRCR: u32,
    pub I2SCFGR: u32,
    pub I2SPR: u32,
}
#[repr(C)]
pub struct TIM_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub SMCR: u32,
    pub DIER: u32,
    pub SR: u32,
    pub EGR: u32,
    pub CCMR1: u32,
    pub CCMR2: u32,
    pub CCER: u32,
    pub CNT: u32,
    pub PSC: u32,
    pub ARR: u32,
    pub RESERVED12: u32,
    pub CCR1: u32,
    pub CCR2: u32,
    pub CCR3: u32,
    pub CCR4: u32,
    pub RESERVED17: u32,
    pub DCR: u32,
    pub DMAR: u32,
    pub OR: u32,
}
#[repr(C)]
pub struct TSC_TypeDef {
    pub CR: u32,
    pub IER: u32,
    pub ICR: u32,
    pub ISR: u32,
    pub IOHCR: u32,
    pub RESERVED1: u32,
    pub IOASCR: u32,
    pub RESERVED2: u32,
    pub IOSCR: u32,
    pub RESERVED3: u32,
    pub IOCCR: u32,
    pub RESERVED4: u32,
    pub IOGCSR: u32,
    pub IOGXCR: [u32; 8],
}
#[repr(C)]
pub struct USART_TypeDef {
    pub CR1: u32,
    pub CR2: u32,
    pub CR3: u32,
    pub BRR: u32,
    pub GTPR: u32,
    pub RTOR: u32,
    pub RQR: u32,
    pub ISR: u32,
    pub ICR: u32,
    pub RDR: u32,
    pub TDR: u32,
}
#[repr(C)]
pub struct WWDG_TypeDef {
    pub CR: u32,
    pub CFR: u32,
    pub SR: u32,
}
#[repr(C)]
pub struct USB_TypeDef {
    pub EP0R: u32,
    pub RESERVED0: u32,
    pub EP1R: u32,
    pub RESERVED1: u32,
    pub EP2R: u32,
    pub RESERVED2: u32,
    pub EP3R: u32,
    pub RESERVED3: u32,
    pub EP4R: u32,
    pub RESERVED4: u32,
    pub EP5R: u32,
    pub RESERVED5: u32,
    pub EP6R: u32,
    pub RESERVED6: u32,
    pub EP7R: u32,
    pub RESERVED7: [u32; 17],
    pub CNTR: u32,
    pub RESERVED8: u32,
    pub ISTR: u32,
    pub RESERVED9: u32,
    pub FNR: u32,
    pub RESERVEDA: u32,
    pub DADDR: u32,
    pub RESERVEDB: u32,
    pub BTABLE: u32,
    pub RESERVEDC: u32,
    pub LPMCSR: u32,
    pub RESERVEDD: u32,
    pub BCDR: u32,
    pub RESERVEDE: u32,
}
pub const __CM0PLUS_REV: u32 = 0;
pub const __MPU_PRESENT: u32 = 1;
pub const __VTOR_PRESENT: u32 = 1;
pub const __NVIC_PRIO_BITS: u32 = 2;
pub const __Vendor_SysTickConfig: u32 = 0;
pub const FLASH_BASE: u32 = 0x08000000;
pub const DATA_EEPROM_BASE: u32 = 0x08080000;
pub const DATA_EEPROM_END: u32 = 0x080807FF;
pub const SRAM_BASE: u32 = 0x20000000;
pub const SRAM_SIZE_MAX: u32 = 0x00002000;
pub const PERIPH_BASE: u32 = 0x40000000;
pub const APBPERIPH_BASE: u32 = PERIPH_BASE;
pub const AHBPERIPH_BASE: u32 = PERIPH_BASE + 0x00020000;
pub const IOPPERIPH_BASE: u32 = PERIPH_BASE + 0x10000000;
pub const TIM2_BASE: u32 = APBPERIPH_BASE + 0x00000000;
pub const TIM6_BASE: u32 = APBPERIPH_BASE + 0x00001000;
pub const RTC_BASE: u32 = APBPERIPH_BASE + 0x00002800;
pub const WWDG_BASE: u32 = APBPERIPH_BASE + 0x00002C00;
pub const IWDG_BASE: u32 = APBPERIPH_BASE + 0x00003000;
pub const SPI2_BASE: u32 = APBPERIPH_BASE + 0x00003800;
pub const USART2_BASE: u32 = APBPERIPH_BASE + 0x00004400;
pub const LPUART1_BASE: u32 = APBPERIPH_BASE + 0x00004800;
pub const I2C1_BASE: u32 = APBPERIPH_BASE + 0x00005400;
pub const I2C2_BASE: u32 = APBPERIPH_BASE + 0x00005800;
pub const CRS_BASE: u32 = APBPERIPH_BASE + 0x00006C00;
pub const PWR_BASE: u32 = APBPERIPH_BASE + 0x00007000;
pub const DAC_BASE: u32 = APBPERIPH_BASE + 0x00007400;
pub const LPTIM1_BASE: u32 = APBPERIPH_BASE + 0x00007C00;
pub const SYSCFG_BASE: u32 = APBPERIPH_BASE + 0x00010000;
pub const COMP1_BASE: u32 = APBPERIPH_BASE + 0x00010018;
pub const COMP2_BASE: u32 = APBPERIPH_BASE + 0x0001001C;
pub const EXTI_BASE: u32 = APBPERIPH_BASE + 0x00010400;
pub const TIM21_BASE: u32 = APBPERIPH_BASE + 0x00010800;
pub const TIM22_BASE: u32 = APBPERIPH_BASE + 0x00011400;
pub const FIREWALL_BASE: u32 = APBPERIPH_BASE + 0x00011C00;
pub const ADC1_BASE: u32 = APBPERIPH_BASE + 0x00012400;
pub const ADC_BASE: u32 = APBPERIPH_BASE + 0x00012708;
pub const SPI1_BASE: u32 = APBPERIPH_BASE + 0x00013000;
pub const USART1_BASE: u32 = APBPERIPH_BASE + 0x00013800;
pub const DBGMCU_BASE: u32 = APBPERIPH_BASE + 0x00015800;
pub const DMA1_BASE: u32 = AHBPERIPH_BASE + 0x00000000;
pub const DMA1_Channel1_BASE: u32 = DMA1_BASE + 0x00000008;
pub const DMA1_Channel2_BASE: u32 = DMA1_BASE + 0x0000001C;
pub const DMA1_Channel3_BASE: u32 = DMA1_BASE + 0x00000030;
pub const DMA1_Channel4_BASE: u32 = DMA1_BASE + 0x00000044;
pub const DMA1_Channel5_BASE: u32 = DMA1_BASE + 0x00000058;
pub const DMA1_Channel6_BASE: u32 = DMA1_BASE + 0x0000006C;
pub const DMA1_Channel7_BASE: u32 = DMA1_BASE + 0x00000080;
pub const DMA1_CSELR_BASE: u32 = DMA1_BASE + 0x000000A8;
pub const RCC_BASE: u32 = AHBPERIPH_BASE + 0x00001000;
pub const FLASH_R_BASE: u32 = AHBPERIPH_BASE + 0x00002000;
pub const OB_BASE: u32 = 0x1FF80000;
pub const FLASHSIZE_BASE: u32 = 0x1FF8007C;
pub const UID_BASE: u32 = 0x1FF80050;
pub const CRC_BASE: u32 = AHBPERIPH_BASE + 0x00003000;
pub const TSC_BASE: u32 = AHBPERIPH_BASE + 0x00004000;
pub const RNG_BASE: u32 = AHBPERIPH_BASE + 0x00005000;
pub const AES_BASE: u32 = AHBPERIPH_BASE + 0x00006000;
pub const GPIOA_BASE: u32 = IOPPERIPH_BASE + 0x00000000;
pub const GPIOB_BASE: u32 = IOPPERIPH_BASE + 0x00000400;
pub const GPIOC_BASE: u32 = IOPPERIPH_BASE + 0x00000800;
pub const GPIOD_BASE: u32 = IOPPERIPH_BASE + 0x00000C00;
pub const GPIOH_BASE: u32 = IOPPERIPH_BASE + 0x00001C00;
pub const LSI_STARTUP_TIME: u32 = 200;
pub const ADC_ISR_EOCAL_Pos: u32 = 11;
pub const ADC_ISR_EOCAL_Msk: u32 = 0x1 << ADC_ISR_EOCAL_Pos;
pub const ADC_ISR_EOCAL: u32 = ADC_ISR_EOCAL_Msk;
pub const ADC_ISR_AWD_Pos: u32 = 7;
pub const ADC_ISR_AWD_Msk: u32 = 0x1 << ADC_ISR_AWD_Pos;
pub const ADC_ISR_AWD: u32 = ADC_ISR_AWD_Msk;
pub const ADC_ISR_OVR_Pos: u32 = 4;
pub const ADC_ISR_OVR_Msk: u32 = 0x1 << ADC_ISR_OVR_Pos;
pub const ADC_ISR_OVR: u32 = ADC_ISR_OVR_Msk;
pub const ADC_ISR_EOSEQ_Pos: u32 = 3;
pub const ADC_ISR_EOSEQ_Msk: u32 = 0x1 << ADC_ISR_EOSEQ_Pos;
pub const ADC_ISR_EOSEQ: u32 = ADC_ISR_EOSEQ_Msk;
pub const ADC_ISR_EOC_Pos: u32 = 2;
pub const ADC_ISR_EOC_Msk: u32 = 0x1 << ADC_ISR_EOC_Pos;
pub const ADC_ISR_EOC: u32 = ADC_ISR_EOC_Msk;
pub const ADC_ISR_EOSMP_Pos: u32 = 1;
pub const ADC_ISR_EOSMP_Msk: u32 = 0x1 << ADC_ISR_EOSMP_Pos;
pub const ADC_ISR_EOSMP: u32 = ADC_ISR_EOSMP_Msk;
pub const ADC_ISR_ADRDY_Pos: u32 = 0;
pub const ADC_ISR_ADRDY_Msk: u32 = 0x1 << ADC_ISR_ADRDY_Pos;
pub const ADC_ISR_ADRDY: u32 = ADC_ISR_ADRDY_Msk;
pub const ADC_ISR_EOS: u32 = ADC_ISR_EOSEQ;
pub const ADC_IER_EOCALIE_Pos: u32 = 11;
pub const ADC_IER_EOCALIE_Msk: u32 = 0x1 << ADC_IER_EOCALIE_Pos;
pub const ADC_IER_EOCALIE: u32 = ADC_IER_EOCALIE_Msk;
pub const ADC_IER_AWDIE_Pos: u32 = 7;
pub const ADC_IER_AWDIE_Msk: u32 = 0x1 << ADC_IER_AWDIE_Pos;
pub const ADC_IER_AWDIE: u32 = ADC_IER_AWDIE_Msk;
pub const ADC_IER_OVRIE_Pos: u32 = 4;
pub const ADC_IER_OVRIE_Msk: u32 = 0x1 << ADC_IER_OVRIE_Pos;
pub const ADC_IER_OVRIE: u32 = ADC_IER_OVRIE_Msk;
pub const ADC_IER_EOSEQIE_Pos: u32 = 3;
pub const ADC_IER_EOSEQIE_Msk: u32 = 0x1 << ADC_IER_EOSEQIE_Pos;
pub const ADC_IER_EOSEQIE: u32 = ADC_IER_EOSEQIE_Msk;
pub const ADC_IER_EOCIE_Pos: u32 = 2;
pub const ADC_IER_EOCIE_Msk: u32 = 0x1 << ADC_IER_EOCIE_Pos;
pub const ADC_IER_EOCIE: u32 = ADC_IER_EOCIE_Msk;
pub const ADC_IER_EOSMPIE_Pos: u32 = 1;
pub const ADC_IER_EOSMPIE_Msk: u32 = 0x1 << ADC_IER_EOSMPIE_Pos;
pub const ADC_IER_EOSMPIE: u32 = ADC_IER_EOSMPIE_Msk;
pub const ADC_IER_ADRDYIE_Pos: u32 = 0;
pub const ADC_IER_ADRDYIE_Msk: u32 = 0x1 << ADC_IER_ADRDYIE_Pos;
pub const ADC_IER_ADRDYIE: u32 = ADC_IER_ADRDYIE_Msk;
pub const ADC_IER_EOSIE: u32 = ADC_IER_EOSEQIE;
pub const ADC_CR_ADCAL_Pos: u32 = 31;
pub const ADC_CR_ADCAL_Msk: u32 = 0x1 << ADC_CR_ADCAL_Pos;
pub const ADC_CR_ADCAL: u32 = ADC_CR_ADCAL_Msk;
pub const ADC_CR_ADVREGEN_Pos: u32 = 28;
pub const ADC_CR_ADVREGEN_Msk: u32 = 0x1 << ADC_CR_ADVREGEN_Pos;
pub const ADC_CR_ADVREGEN: u32 = ADC_CR_ADVREGEN_Msk;
pub const ADC_CR_ADSTP_Pos: u32 = 4;
pub const ADC_CR_ADSTP_Msk: u32 = 0x1 << ADC_CR_ADSTP_Pos;
pub const ADC_CR_ADSTP: u32 = ADC_CR_ADSTP_Msk;
pub const ADC_CR_ADSTART_Pos: u32 = 2;
pub const ADC_CR_ADSTART_Msk: u32 = 0x1 << ADC_CR_ADSTART_Pos;
pub const ADC_CR_ADSTART: u32 = ADC_CR_ADSTART_Msk;
pub const ADC_CR_ADDIS_Pos: u32 = 1;
pub const ADC_CR_ADDIS_Msk: u32 = 0x1 << ADC_CR_ADDIS_Pos;
pub const ADC_CR_ADDIS: u32 = ADC_CR_ADDIS_Msk;
pub const ADC_CR_ADEN_Pos: u32 = 0;
pub const ADC_CR_ADEN_Msk: u32 = 0x1 << ADC_CR_ADEN_Pos;
pub const ADC_CR_ADEN: u32 = ADC_CR_ADEN_Msk;
pub const ADC_CFGR1_AWDCH_Pos: u32 = 26;
pub const ADC_CFGR1_AWDCH_Msk: u32 = 0x1F << ADC_CFGR1_AWDCH_Pos;
pub const ADC_CFGR1_AWDCH: u32 = ADC_CFGR1_AWDCH_Msk;
pub const ADC_CFGR1_AWDCH_0: u32 = 0x01 << ADC_CFGR1_AWDCH_Pos;
pub const ADC_CFGR1_AWDCH_1: u32 = 0x02 << ADC_CFGR1_AWDCH_Pos;
pub const ADC_CFGR1_AWDCH_2: u32 = 0x04 << ADC_CFGR1_AWDCH_Pos;
pub const ADC_CFGR1_AWDCH_3: u32 = 0x08 << ADC_CFGR1_AWDCH_Pos;
pub const ADC_CFGR1_AWDCH_4: u32 = 0x10 << ADC_CFGR1_AWDCH_Pos;
pub const ADC_CFGR1_AWDEN_Pos: u32 = 23;
pub const ADC_CFGR1_AWDEN_Msk: u32 = 0x1 << ADC_CFGR1_AWDEN_Pos;
pub const ADC_CFGR1_AWDEN: u32 = ADC_CFGR1_AWDEN_Msk;
pub const ADC_CFGR1_AWDSGL_Pos: u32 = 22;
pub const ADC_CFGR1_AWDSGL_Msk: u32 = 0x1 << ADC_CFGR1_AWDSGL_Pos;
pub const ADC_CFGR1_AWDSGL: u32 = ADC_CFGR1_AWDSGL_Msk;
pub const ADC_CFGR1_DISCEN_Pos: u32 = 16;
pub const ADC_CFGR1_DISCEN_Msk: u32 = 0x1 << ADC_CFGR1_DISCEN_Pos;
pub const ADC_CFGR1_DISCEN: u32 = ADC_CFGR1_DISCEN_Msk;
pub const ADC_CFGR1_AUTOFF_Pos: u32 = 15;
pub const ADC_CFGR1_AUTOFF_Msk: u32 = 0x1 << ADC_CFGR1_AUTOFF_Pos;
pub const ADC_CFGR1_AUTOFF: u32 = ADC_CFGR1_AUTOFF_Msk;
pub const ADC_CFGR1_WAIT_Pos: u32 = 14;
pub const ADC_CFGR1_WAIT_Msk: u32 = 0x1 << ADC_CFGR1_WAIT_Pos;
pub const ADC_CFGR1_WAIT: u32 = ADC_CFGR1_WAIT_Msk;
pub const ADC_CFGR1_CONT_Pos: u32 = 13;
pub const ADC_CFGR1_CONT_Msk: u32 = 0x1 << ADC_CFGR1_CONT_Pos;
pub const ADC_CFGR1_CONT: u32 = ADC_CFGR1_CONT_Msk;
pub const ADC_CFGR1_OVRMOD_Pos: u32 = 12;
pub const ADC_CFGR1_OVRMOD_Msk: u32 = 0x1 << ADC_CFGR1_OVRMOD_Pos;
pub const ADC_CFGR1_OVRMOD: u32 = ADC_CFGR1_OVRMOD_Msk;
pub const ADC_CFGR1_EXTEN_Pos: u32 = 10;
pub const ADC_CFGR1_EXTEN_Msk: u32 = 0x3 << ADC_CFGR1_EXTEN_Pos;
pub const ADC_CFGR1_EXTEN: u32 = ADC_CFGR1_EXTEN_Msk;
pub const ADC_CFGR1_EXTEN_0: u32 = 0x1 << ADC_CFGR1_EXTEN_Pos;
pub const ADC_CFGR1_EXTEN_1: u32 = 0x2 << ADC_CFGR1_EXTEN_Pos;
pub const ADC_CFGR1_EXTSEL_Pos: u32 = 6;
pub const ADC_CFGR1_EXTSEL_Msk: u32 = 0x7 << ADC_CFGR1_EXTSEL_Pos;
pub const ADC_CFGR1_EXTSEL: u32 = ADC_CFGR1_EXTSEL_Msk;
pub const ADC_CFGR1_EXTSEL_0: u32 = 0x1 << ADC_CFGR1_EXTSEL_Pos;
pub const ADC_CFGR1_EXTSEL_1: u32 = 0x2 << ADC_CFGR1_EXTSEL_Pos;
pub const ADC_CFGR1_EXTSEL_2: u32 = 0x4 << ADC_CFGR1_EXTSEL_Pos;
pub const ADC_CFGR1_ALIGN_Pos: u32 = 5;
pub const ADC_CFGR1_ALIGN_Msk: u32 = 0x1 << ADC_CFGR1_ALIGN_Pos;
pub const ADC_CFGR1_ALIGN: u32 = ADC_CFGR1_ALIGN_Msk;
pub const ADC_CFGR1_RES_Pos: u32 = 3;
pub const ADC_CFGR1_RES_Msk: u32 = 0x3 << ADC_CFGR1_RES_Pos;
pub const ADC_CFGR1_RES: u32 = ADC_CFGR1_RES_Msk;
pub const ADC_CFGR1_RES_0: u32 = 0x1 << ADC_CFGR1_RES_Pos;
pub const ADC_CFGR1_RES_1: u32 = 0x2 << ADC_CFGR1_RES_Pos;
pub const ADC_CFGR1_SCANDIR_Pos: u32 = 2;
pub const ADC_CFGR1_SCANDIR_Msk: u32 = 0x1 << ADC_CFGR1_SCANDIR_Pos;
pub const ADC_CFGR1_SCANDIR: u32 = ADC_CFGR1_SCANDIR_Msk;
pub const ADC_CFGR1_DMACFG_Pos: u32 = 1;
pub const ADC_CFGR1_DMACFG_Msk: u32 = 0x1 << ADC_CFGR1_DMACFG_Pos;
pub const ADC_CFGR1_DMACFG: u32 = ADC_CFGR1_DMACFG_Msk;
pub const ADC_CFGR1_DMAEN_Pos: u32 = 0;
pub const ADC_CFGR1_DMAEN_Msk: u32 = 0x1 << ADC_CFGR1_DMAEN_Pos;
pub const ADC_CFGR1_DMAEN: u32 = ADC_CFGR1_DMAEN_Msk;
pub const ADC_CFGR1_AUTDLY: u32 = ADC_CFGR1_WAIT;
pub const ADC_CFGR2_TOVS_Pos: u32 = 9;
pub const ADC_CFGR2_TOVS_Msk: u32 = 0x1 << ADC_CFGR2_TOVS_Pos;
pub const ADC_CFGR2_TOVS: u32 = ADC_CFGR2_TOVS_Msk;
pub const ADC_CFGR2_OVSS_Pos: u32 = 5;
pub const ADC_CFGR2_OVSS_Msk: u32 = 0xF << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_OVSS: u32 = ADC_CFGR2_OVSS_Msk;
pub const ADC_CFGR2_OVSS_0: u32 = 0x1 << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_OVSS_1: u32 = 0x2 << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_OVSS_2: u32 = 0x4 << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_OVSS_3: u32 = 0x8 << ADC_CFGR2_OVSS_Pos;
pub const ADC_CFGR2_OVSR_Pos: u32 = 2;
pub const ADC_CFGR2_OVSR_Msk: u32 = 0x7 << ADC_CFGR2_OVSR_Pos;
pub const ADC_CFGR2_OVSR: u32 = ADC_CFGR2_OVSR_Msk;
pub const ADC_CFGR2_OVSR_0: u32 = 0x1 << ADC_CFGR2_OVSR_Pos;
pub const ADC_CFGR2_OVSR_1: u32 = 0x2 << ADC_CFGR2_OVSR_Pos;
pub const ADC_CFGR2_OVSR_2: u32 = 0x4 << ADC_CFGR2_OVSR_Pos;
pub const ADC_CFGR2_OVSE_Pos: u32 = 0;
pub const ADC_CFGR2_OVSE_Msk: u32 = 0x1 << ADC_CFGR2_OVSE_Pos;
pub const ADC_CFGR2_OVSE: u32 = ADC_CFGR2_OVSE_Msk;
pub const ADC_CFGR2_CKMODE_Pos: u32 = 30;
pub const ADC_CFGR2_CKMODE_Msk: u32 = 0x3 << ADC_CFGR2_CKMODE_Pos;
pub const ADC_CFGR2_CKMODE: u32 = ADC_CFGR2_CKMODE_Msk;
pub const ADC_CFGR2_CKMODE_0: u32 = 0x1 << ADC_CFGR2_CKMODE_Pos;
pub const ADC_CFGR2_CKMODE_1: u32 = 0x2 << ADC_CFGR2_CKMODE_Pos;
pub const ADC_SMPR_SMP_Pos: u32 = 0;
pub const ADC_SMPR_SMP_Msk: u32 = 0x7 << ADC_SMPR_SMP_Pos;
pub const ADC_SMPR_SMP: u32 = ADC_SMPR_SMP_Msk;
pub const ADC_SMPR_SMP_0: u32 = 0x1 << ADC_SMPR_SMP_Pos;
pub const ADC_SMPR_SMP_1: u32 = 0x2 << ADC_SMPR_SMP_Pos;
pub const ADC_SMPR_SMP_2: u32 = 0x4 << ADC_SMPR_SMP_Pos;
pub const ADC_SMPR_SMPR: u32 = ADC_SMPR_SMP;
pub const ADC_SMPR_SMPR_0: u32 = ADC_SMPR_SMP_0;
pub const ADC_SMPR_SMPR_1: u32 = ADC_SMPR_SMP_1;
pub const ADC_SMPR_SMPR_2: u32 = ADC_SMPR_SMP_2;
pub const ADC_TR_HT_Pos: u32 = 16;
pub const ADC_TR_HT_Msk: u32 = 0xFFF << ADC_TR_HT_Pos;
pub const ADC_TR_HT: u32 = ADC_TR_HT_Msk;
pub const ADC_TR_LT_Pos: u32 = 0;
pub const ADC_TR_LT_Msk: u32 = 0xFFF << ADC_TR_LT_Pos;
pub const ADC_TR_LT: u32 = ADC_TR_LT_Msk;
pub const ADC_CHSELR_CHSEL_Pos: u32 = 0;
pub const ADC_CHSELR_CHSEL_Msk: u32 = 0x7FFFF << ADC_CHSELR_CHSEL_Pos;
pub const ADC_CHSELR_CHSEL: u32 = ADC_CHSELR_CHSEL_Msk;
pub const ADC_CHSELR_CHSEL18_Pos: u32 = 18;
pub const ADC_CHSELR_CHSEL18_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL18_Pos;
pub const ADC_CHSELR_CHSEL18: u32 = ADC_CHSELR_CHSEL18_Msk;
pub const ADC_CHSELR_CHSEL17_Pos: u32 = 17;
pub const ADC_CHSELR_CHSEL17_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL17_Pos;
pub const ADC_CHSELR_CHSEL17: u32 = ADC_CHSELR_CHSEL17_Msk;
pub const ADC_CHSELR_CHSEL15_Pos: u32 = 15;
pub const ADC_CHSELR_CHSEL15_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL15_Pos;
pub const ADC_CHSELR_CHSEL15: u32 = ADC_CHSELR_CHSEL15_Msk;
pub const ADC_CHSELR_CHSEL14_Pos: u32 = 14;
pub const ADC_CHSELR_CHSEL14_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL14_Pos;
pub const ADC_CHSELR_CHSEL14: u32 = ADC_CHSELR_CHSEL14_Msk;
pub const ADC_CHSELR_CHSEL13_Pos: u32 = 13;
pub const ADC_CHSELR_CHSEL13_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL13_Pos;
pub const ADC_CHSELR_CHSEL13: u32 = ADC_CHSELR_CHSEL13_Msk;
pub const ADC_CHSELR_CHSEL12_Pos: u32 = 12;
pub const ADC_CHSELR_CHSEL12_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL12_Pos;
pub const ADC_CHSELR_CHSEL12: u32 = ADC_CHSELR_CHSEL12_Msk;
pub const ADC_CHSELR_CHSEL11_Pos: u32 = 11;
pub const ADC_CHSELR_CHSEL11_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL11_Pos;
pub const ADC_CHSELR_CHSEL11: u32 = ADC_CHSELR_CHSEL11_Msk;
pub const ADC_CHSELR_CHSEL10_Pos: u32 = 10;
pub const ADC_CHSELR_CHSEL10_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL10_Pos;
pub const ADC_CHSELR_CHSEL10: u32 = ADC_CHSELR_CHSEL10_Msk;
pub const ADC_CHSELR_CHSEL9_Pos: u32 = 9;
pub const ADC_CHSELR_CHSEL9_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL9_Pos;
pub const ADC_CHSELR_CHSEL9: u32 = ADC_CHSELR_CHSEL9_Msk;
pub const ADC_CHSELR_CHSEL8_Pos: u32 = 8;
pub const ADC_CHSELR_CHSEL8_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL8_Pos;
pub const ADC_CHSELR_CHSEL8: u32 = ADC_CHSELR_CHSEL8_Msk;
pub const ADC_CHSELR_CHSEL7_Pos: u32 = 7;
pub const ADC_CHSELR_CHSEL7_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL7_Pos;
pub const ADC_CHSELR_CHSEL7: u32 = ADC_CHSELR_CHSEL7_Msk;
pub const ADC_CHSELR_CHSEL6_Pos: u32 = 6;
pub const ADC_CHSELR_CHSEL6_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL6_Pos;
pub const ADC_CHSELR_CHSEL6: u32 = ADC_CHSELR_CHSEL6_Msk;
pub const ADC_CHSELR_CHSEL5_Pos: u32 = 5;
pub const ADC_CHSELR_CHSEL5_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL5_Pos;
pub const ADC_CHSELR_CHSEL5: u32 = ADC_CHSELR_CHSEL5_Msk;
pub const ADC_CHSELR_CHSEL4_Pos: u32 = 4;
pub const ADC_CHSELR_CHSEL4_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL4_Pos;
pub const ADC_CHSELR_CHSEL4: u32 = ADC_CHSELR_CHSEL4_Msk;
pub const ADC_CHSELR_CHSEL3_Pos: u32 = 3;
pub const ADC_CHSELR_CHSEL3_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL3_Pos;
pub const ADC_CHSELR_CHSEL3: u32 = ADC_CHSELR_CHSEL3_Msk;
pub const ADC_CHSELR_CHSEL2_Pos: u32 = 2;
pub const ADC_CHSELR_CHSEL2_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL2_Pos;
pub const ADC_CHSELR_CHSEL2: u32 = ADC_CHSELR_CHSEL2_Msk;
pub const ADC_CHSELR_CHSEL1_Pos: u32 = 1;
pub const ADC_CHSELR_CHSEL1_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL1_Pos;
pub const ADC_CHSELR_CHSEL1: u32 = ADC_CHSELR_CHSEL1_Msk;
pub const ADC_CHSELR_CHSEL0_Pos: u32 = 0;
pub const ADC_CHSELR_CHSEL0_Msk: u32 = 0x1 << ADC_CHSELR_CHSEL0_Pos;
pub const ADC_CHSELR_CHSEL0: u32 = ADC_CHSELR_CHSEL0_Msk;
pub const ADC_DR_DATA_Pos: u32 = 0;
pub const ADC_DR_DATA_Msk: u32 = 0xFFFF << ADC_DR_DATA_Pos;
pub const ADC_DR_DATA: u32 = ADC_DR_DATA_Msk;
pub const ADC_CALFACT_CALFACT_Pos: u32 = 0;
pub const ADC_CALFACT_CALFACT_Msk: u32 = 0x7F << ADC_CALFACT_CALFACT_Pos;
pub const ADC_CALFACT_CALFACT: u32 = ADC_CALFACT_CALFACT_Msk;
pub const ADC_CCR_LFMEN_Pos: u32 = 25;
pub const ADC_CCR_LFMEN_Msk: u32 = 0x1 << ADC_CCR_LFMEN_Pos;
pub const ADC_CCR_LFMEN: u32 = ADC_CCR_LFMEN_Msk;
pub const ADC_CCR_TSEN_Pos: u32 = 23;
pub const ADC_CCR_TSEN_Msk: u32 = 0x1 << ADC_CCR_TSEN_Pos;
pub const ADC_CCR_TSEN: u32 = ADC_CCR_TSEN_Msk;
pub const ADC_CCR_VREFEN_Pos: u32 = 22;
pub const ADC_CCR_VREFEN_Msk: u32 = 0x1 << ADC_CCR_VREFEN_Pos;
pub const ADC_CCR_VREFEN: u32 = ADC_CCR_VREFEN_Msk;
pub const ADC_CCR_PRESC_Pos: u32 = 18;
pub const ADC_CCR_PRESC_Msk: u32 = 0xF << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_PRESC: u32 = ADC_CCR_PRESC_Msk;
pub const ADC_CCR_PRESC_0: u32 = 0x1 << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_PRESC_1: u32 = 0x2 << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_PRESC_2: u32 = 0x4 << ADC_CCR_PRESC_Pos;
pub const ADC_CCR_PRESC_3: u32 = 0x8 << ADC_CCR_PRESC_Pos;
pub const AES_CR_EN_Pos: u32 = 0;
pub const AES_CR_EN_Msk: u32 = 0x1 << AES_CR_EN_Pos;
pub const AES_CR_EN: u32 = AES_CR_EN_Msk;
pub const AES_CR_DATATYPE_Pos: u32 = 1;
pub const AES_CR_DATATYPE_Msk: u32 = 0x3 << AES_CR_DATATYPE_Pos;
pub const AES_CR_DATATYPE: u32 = AES_CR_DATATYPE_Msk;
pub const AES_CR_DATATYPE_0: u32 = 0x1 << AES_CR_DATATYPE_Pos;
pub const AES_CR_DATATYPE_1: u32 = 0x2 << AES_CR_DATATYPE_Pos;
pub const AES_CR_MODE_Pos: u32 = 3;
pub const AES_CR_MODE_Msk: u32 = 0x3 << AES_CR_MODE_Pos;
pub const AES_CR_MODE: u32 = AES_CR_MODE_Msk;
pub const AES_CR_MODE_0: u32 = 0x1 << AES_CR_MODE_Pos;
pub const AES_CR_MODE_1: u32 = 0x2 << AES_CR_MODE_Pos;
pub const AES_CR_CHMOD_Pos: u32 = 5;
pub const AES_CR_CHMOD_Msk: u32 = 0x3 << AES_CR_CHMOD_Pos;
pub const AES_CR_CHMOD: u32 = AES_CR_CHMOD_Msk;
pub const AES_CR_CHMOD_0: u32 = 0x1 << AES_CR_CHMOD_Pos;
pub const AES_CR_CHMOD_1: u32 = 0x2 << AES_CR_CHMOD_Pos;
pub const AES_CR_CCFC_Pos: u32 = 7;
pub const AES_CR_CCFC_Msk: u32 = 0x1 << AES_CR_CCFC_Pos;
pub const AES_CR_CCFC: u32 = AES_CR_CCFC_Msk;
pub const AES_CR_ERRC_Pos: u32 = 8;
pub const AES_CR_ERRC_Msk: u32 = 0x1 << AES_CR_ERRC_Pos;
pub const AES_CR_ERRC: u32 = AES_CR_ERRC_Msk;
pub const AES_CR_CCIE_Pos: u32 = 9;
pub const AES_CR_CCIE_Msk: u32 = 0x1 << AES_CR_CCIE_Pos;
pub const AES_CR_CCIE: u32 = AES_CR_CCIE_Msk;
pub const AES_CR_ERRIE_Pos: u32 = 10;
pub const AES_CR_ERRIE_Msk: u32 = 0x1 << AES_CR_ERRIE_Pos;
pub const AES_CR_ERRIE: u32 = AES_CR_ERRIE_Msk;
pub const AES_CR_DMAINEN_Pos: u32 = 11;
pub const AES_CR_DMAINEN_Msk: u32 = 0x1 << AES_CR_DMAINEN_Pos;
pub const AES_CR_DMAINEN: u32 = AES_CR_DMAINEN_Msk;
pub const AES_CR_DMAOUTEN_Pos: u32 = 12;
pub const AES_CR_DMAOUTEN_Msk: u32 = 0x1 << AES_CR_DMAOUTEN_Pos;
pub const AES_CR_DMAOUTEN: u32 = AES_CR_DMAOUTEN_Msk;
pub const AES_SR_CCF_Pos: u32 = 0;
pub const AES_SR_CCF_Msk: u32 = 0x1 << AES_SR_CCF_Pos;
pub const AES_SR_CCF: u32 = AES_SR_CCF_Msk;
pub const AES_SR_RDERR_Pos: u32 = 1;
pub const AES_SR_RDERR_Msk: u32 = 0x1 << AES_SR_RDERR_Pos;
pub const AES_SR_RDERR: u32 = AES_SR_RDERR_Msk;
pub const AES_SR_WRERR_Pos: u32 = 2;
pub const AES_SR_WRERR_Msk: u32 = 0x1 << AES_SR_WRERR_Pos;
pub const AES_SR_WRERR: u32 = AES_SR_WRERR_Msk;
pub const AES_DINR_Pos: u32 = 0;
pub const AES_DINR_Msk: u32 = 0xFFFF << AES_DINR_Pos;
pub const AES_DINR: u32 = AES_DINR_Msk;
pub const AES_DOUTR_Pos: u32 = 0;
pub const AES_DOUTR_Msk: u32 = 0xFFFF << AES_DOUTR_Pos;
pub const AES_DOUTR: u32 = AES_DOUTR_Msk;
pub const AES_KEYR0_Pos: u32 = 0;
pub const AES_KEYR0_Msk: u32 = 0xFFFF << AES_KEYR0_Pos;
pub const AES_KEYR0: u32 = AES_KEYR0_Msk;
pub const AES_KEYR1_Pos: u32 = 0;
pub const AES_KEYR1_Msk: u32 = 0xFFFF << AES_KEYR1_Pos;
pub const AES_KEYR1: u32 = AES_KEYR1_Msk;
pub const AES_KEYR2_Pos: u32 = 0;
pub const AES_KEYR2_Msk: u32 = 0xFFFF << AES_KEYR2_Pos;
pub const AES_KEYR2: u32 = AES_KEYR2_Msk;
pub const AES_KEYR3_Pos: u32 = 0;
pub const AES_KEYR3_Msk: u32 = 0xFFFF << AES_KEYR3_Pos;
pub const AES_KEYR3: u32 = AES_KEYR3_Msk;
pub const AES_IVR0_Pos: u32 = 0;
pub const AES_IVR0_Msk: u32 = 0xFFFF << AES_IVR0_Pos;
pub const AES_IVR0: u32 = AES_IVR0_Msk;
pub const AES_IVR1_Pos: u32 = 0;
pub const AES_IVR1_Msk: u32 = 0xFFFF << AES_IVR1_Pos;
pub const AES_IVR1: u32 = AES_IVR1_Msk;
pub const AES_IVR2_Pos: u32 = 0;
pub const AES_IVR2_Msk: u32 = 0xFFFF << AES_IVR2_Pos;
pub const AES_IVR2: u32 = AES_IVR2_Msk;
pub const AES_IVR3_Pos: u32 = 0;
pub const AES_IVR3_Msk: u32 = 0xFFFF << AES_IVR3_Pos;
pub const AES_IVR3: u32 = AES_IVR3_Msk;
pub const COMP_CSR_COMP1EN_Pos: u32 = 0;
pub const COMP_CSR_COMP1EN_Msk: u32 = 0x1 << COMP_CSR_COMP1EN_Pos;
pub const COMP_CSR_COMP1EN: u32 = COMP_CSR_COMP1EN_Msk;
pub const COMP_CSR_COMP1INNSEL_Pos: u32 = 4;
pub const COMP_CSR_COMP1INNSEL_Msk: u32 = 0x3 << COMP_CSR_COMP1INNSEL_Pos;
pub const COMP_CSR_COMP1INNSEL: u32 = COMP_CSR_COMP1INNSEL_Msk;
pub const COMP_CSR_COMP1INNSEL_0: u32 = 0x1 << COMP_CSR_COMP1INNSEL_Pos;
pub const COMP_CSR_COMP1INNSEL_1: u32 = 0x2 << COMP_CSR_COMP1INNSEL_Pos;
pub const COMP_CSR_COMP1WM_Pos: u32 = 8;
pub const COMP_CSR_COMP1WM_Msk: u32 = 0x1 << COMP_CSR_COMP1WM_Pos;
pub const COMP_CSR_COMP1WM: u32 = COMP_CSR_COMP1WM_Msk;
pub const COMP_CSR_COMP1LPTIM1IN1_Pos: u32 = 12;
pub const COMP_CSR_COMP1LPTIM1IN1_Msk: u32 = 0x1 << COMP_CSR_COMP1LPTIM1IN1_Pos;
pub const COMP_CSR_COMP1LPTIM1IN1: u32 = COMP_CSR_COMP1LPTIM1IN1_Msk;
pub const COMP_CSR_COMP1POLARITY_Pos: u32 = 15;
pub const COMP_CSR_COMP1POLARITY_Msk: u32 = 0x1 << COMP_CSR_COMP1POLARITY_Pos;
pub const COMP_CSR_COMP1POLARITY: u32 = COMP_CSR_COMP1POLARITY_Msk;
pub const COMP_CSR_COMP1VALUE_Pos: u32 = 30;
pub const COMP_CSR_COMP1VALUE_Msk: u32 = 0x1 << COMP_CSR_COMP1VALUE_Pos;
pub const COMP_CSR_COMP1VALUE: u32 = COMP_CSR_COMP1VALUE_Msk;
pub const COMP_CSR_COMP1LOCK_Pos: u32 = 31;
pub const COMP_CSR_COMP1LOCK_Msk: u32 = 0x1 << COMP_CSR_COMP1LOCK_Pos;
pub const COMP_CSR_COMP1LOCK: u32 = COMP_CSR_COMP1LOCK_Msk;
pub const COMP_CSR_COMP2EN_Pos: u32 = 0;
pub const COMP_CSR_COMP2EN_Msk: u32 = 0x1 << COMP_CSR_COMP2EN_Pos;
pub const COMP_CSR_COMP2EN: u32 = COMP_CSR_COMP2EN_Msk;
pub const COMP_CSR_COMP2SPEED_Pos: u32 = 3;
pub const COMP_CSR_COMP2SPEED_Msk: u32 = 0x1 << COMP_CSR_COMP2SPEED_Pos;
pub const COMP_CSR_COMP2SPEED: u32 = COMP_CSR_COMP2SPEED_Msk;
pub const COMP_CSR_COMP2INNSEL_Pos: u32 = 4;
pub const COMP_CSR_COMP2INNSEL_Msk: u32 = 0x7 << COMP_CSR_COMP2INNSEL_Pos;
pub const COMP_CSR_COMP2INNSEL: u32 = COMP_CSR_COMP2INNSEL_Msk;
pub const COMP_CSR_COMP2INNSEL_0: u32 = 0x1 << COMP_CSR_COMP2INNSEL_Pos;
pub const COMP_CSR_COMP2INNSEL_1: u32 = 0x2 << COMP_CSR_COMP2INNSEL_Pos;
pub const COMP_CSR_COMP2INNSEL_2: u32 = 0x4 << COMP_CSR_COMP2INNSEL_Pos;
pub const COMP_CSR_COMP2INPSEL_Pos: u32 = 8;
pub const COMP_CSR_COMP2INPSEL_Msk: u32 = 0x7 << COMP_CSR_COMP2INPSEL_Pos;
pub const COMP_CSR_COMP2INPSEL: u32 = COMP_CSR_COMP2INPSEL_Msk;
pub const COMP_CSR_COMP2INPSEL_0: u32 = 0x1 << COMP_CSR_COMP2INPSEL_Pos;
pub const COMP_CSR_COMP2INPSEL_1: u32 = 0x2 << COMP_CSR_COMP2INPSEL_Pos;
pub const COMP_CSR_COMP2INPSEL_2: u32 = 0x4 << COMP_CSR_COMP2INPSEL_Pos;
pub const COMP_CSR_COMP2LPTIM1IN2_Pos: u32 = 12;
pub const COMP_CSR_COMP2LPTIM1IN2_Msk: u32 = 0x1 << COMP_CSR_COMP2LPTIM1IN2_Pos;
pub const COMP_CSR_COMP2LPTIM1IN2: u32 = COMP_CSR_COMP2LPTIM1IN2_Msk;
pub const COMP_CSR_COMP2LPTIM1IN1_Pos: u32 = 13;
pub const COMP_CSR_COMP2LPTIM1IN1_Msk: u32 = 0x1 << COMP_CSR_COMP2LPTIM1IN1_Pos;
pub const COMP_CSR_COMP2LPTIM1IN1: u32 = COMP_CSR_COMP2LPTIM1IN1_Msk;
pub const COMP_CSR_COMP2POLARITY_Pos: u32 = 15;
pub const COMP_CSR_COMP2POLARITY_Msk: u32 = 0x1 << COMP_CSR_COMP2POLARITY_Pos;
pub const COMP_CSR_COMP2POLARITY: u32 = COMP_CSR_COMP2POLARITY_Msk;
pub const COMP_CSR_COMP2VALUE_Pos: u32 = 30;
pub const COMP_CSR_COMP2VALUE_Msk: u32 = 0x1 << COMP_CSR_COMP2VALUE_Pos;
pub const COMP_CSR_COMP2VALUE: u32 = COMP_CSR_COMP2VALUE_Msk;
pub const COMP_CSR_COMP2LOCK_Pos: u32 = 31;
pub const COMP_CSR_COMP2LOCK_Msk: u32 = 0x1 << COMP_CSR_COMP2LOCK_Pos;
pub const COMP_CSR_COMP2LOCK: u32 = COMP_CSR_COMP2LOCK_Msk;
pub const COMP_CSR_COMPxEN_Pos: u32 = 0;
pub const COMP_CSR_COMPxEN_Msk: u32 = 0x1 << COMP_CSR_COMPxEN_Pos;
pub const COMP_CSR_COMPxEN: u32 = COMP_CSR_COMPxEN_Msk;
pub const COMP_CSR_COMPxPOLARITY_Pos: u32 = 15;
pub const COMP_CSR_COMPxPOLARITY_Msk: u32 = 0x1 << COMP_CSR_COMPxPOLARITY_Pos;
pub const COMP_CSR_COMPxPOLARITY: u32 = COMP_CSR_COMPxPOLARITY_Msk;
pub const COMP_CSR_COMPxOUTVALUE_Pos: u32 = 30;
pub const COMP_CSR_COMPxOUTVALUE_Msk: u32 = 0x1 << COMP_CSR_COMPxOUTVALUE_Pos;
pub const COMP_CSR_COMPxOUTVALUE: u32 = COMP_CSR_COMPxOUTVALUE_Msk;
pub const COMP_CSR_COMPxLOCK_Pos: u32 = 31;
pub const COMP_CSR_COMPxLOCK_Msk: u32 = 0x1 << COMP_CSR_COMPxLOCK_Pos;
pub const COMP_CSR_COMPxLOCK: u32 = COMP_CSR_COMPxLOCK_Msk;
pub const COMP_CSR_WINMODE: u32 = COMP_CSR_COMP1WM;
pub const CRC_DR_DR_Pos: u32 = 0;
pub const CRC_DR_DR_Msk: u32 = 0xFFFFFFFF << CRC_DR_DR_Pos;
pub const CRC_DR_DR: u32 = CRC_DR_DR_Msk;
pub const CRC_IDR_IDR: u32 = 0xFF;
pub const CRC_CR_RESET_Pos: u32 = 0;
pub const CRC_CR_RESET_Msk: u32 = 0x1 << CRC_CR_RESET_Pos;
pub const CRC_CR_RESET: u32 = CRC_CR_RESET_Msk;
pub const CRC_CR_POLYSIZE_Pos: u32 = 3;
pub const CRC_CR_POLYSIZE_Msk: u32 = 0x3 << CRC_CR_POLYSIZE_Pos;
pub const CRC_CR_POLYSIZE: u32 = CRC_CR_POLYSIZE_Msk;
pub const CRC_CR_POLYSIZE_0: u32 = 0x1 << CRC_CR_POLYSIZE_Pos;
pub const CRC_CR_POLYSIZE_1: u32 = 0x2 << CRC_CR_POLYSIZE_Pos;
pub const CRC_CR_REV_IN_Pos: u32 = 5;
pub const CRC_CR_REV_IN_Msk: u32 = 0x3 << CRC_CR_REV_IN_Pos;
pub const CRC_CR_REV_IN: u32 = CRC_CR_REV_IN_Msk;
pub const CRC_CR_REV_IN_0: u32 = 0x1 << CRC_CR_REV_IN_Pos;
pub const CRC_CR_REV_IN_1: u32 = 0x2 << CRC_CR_REV_IN_Pos;
pub const CRC_CR_REV_OUT_Pos: u32 = 7;
pub const CRC_CR_REV_OUT_Msk: u32 = 0x1 << CRC_CR_REV_OUT_Pos;
pub const CRC_CR_REV_OUT: u32 = CRC_CR_REV_OUT_Msk;
pub const CRC_INIT_INIT_Pos: u32 = 0;
pub const CRC_INIT_INIT_Msk: u32 = 0xFFFFFFFF << CRC_INIT_INIT_Pos;
pub const CRC_INIT_INIT: u32 = CRC_INIT_INIT_Msk;
pub const CRC_POL_POL_Pos: u32 = 0;
pub const CRC_POL_POL_Msk: u32 = 0xFFFFFFFF << CRC_POL_POL_Pos;
pub const CRC_POL_POL: u32 = CRC_POL_POL_Msk;
pub const CRS_CR_SYNCOKIE_Pos: u32 = 0;
pub const CRS_CR_SYNCOKIE_Msk: u32 = 0x1 << CRS_CR_SYNCOKIE_Pos;
pub const CRS_CR_SYNCOKIE: u32 = CRS_CR_SYNCOKIE_Msk;
pub const CRS_CR_SYNCWARNIE_Pos: u32 = 1;
pub const CRS_CR_SYNCWARNIE_Msk: u32 = 0x1 << CRS_CR_SYNCWARNIE_Pos;
pub const CRS_CR_SYNCWARNIE: u32 = CRS_CR_SYNCWARNIE_Msk;
pub const CRS_CR_ERRIE_Pos: u32 = 2;
pub const CRS_CR_ERRIE_Msk: u32 = 0x1 << CRS_CR_ERRIE_Pos;
pub const CRS_CR_ERRIE: u32 = CRS_CR_ERRIE_Msk;
pub const CRS_CR_ESYNCIE_Pos: u32 = 3;
pub const CRS_CR_ESYNCIE_Msk: u32 = 0x1 << CRS_CR_ESYNCIE_Pos;
pub const CRS_CR_ESYNCIE: u32 = CRS_CR_ESYNCIE_Msk;
pub const CRS_CR_CEN_Pos: u32 = 5;
pub const CRS_CR_CEN_Msk: u32 = 0x1 << CRS_CR_CEN_Pos;
pub const CRS_CR_CEN: u32 = CRS_CR_CEN_Msk;
pub const CRS_CR_AUTOTRIMEN_Pos: u32 = 6;
pub const CRS_CR_AUTOTRIMEN_Msk: u32 = 0x1 << CRS_CR_AUTOTRIMEN_Pos;
pub const CRS_CR_AUTOTRIMEN: u32 = CRS_CR_AUTOTRIMEN_Msk;
pub const CRS_CR_SWSYNC_Pos: u32 = 7;
pub const CRS_CR_SWSYNC_Msk: u32 = 0x1 << CRS_CR_SWSYNC_Pos;
pub const CRS_CR_SWSYNC: u32 = CRS_CR_SWSYNC_Msk;
pub const CRS_CR_TRIM_Pos: u32 = 8;
pub const CRS_CR_TRIM_Msk: u32 = 0x3F << CRS_CR_TRIM_Pos;
pub const CRS_CR_TRIM: u32 = CRS_CR_TRIM_Msk;
pub const CRS_CFGR_RELOAD_Pos: u32 = 0;
pub const CRS_CFGR_RELOAD_Msk: u32 = 0xFFFF << CRS_CFGR_RELOAD_Pos;
pub const CRS_CFGR_RELOAD: u32 = CRS_CFGR_RELOAD_Msk;
pub const CRS_CFGR_FELIM_Pos: u32 = 16;
pub const CRS_CFGR_FELIM_Msk: u32 = 0xFF << CRS_CFGR_FELIM_Pos;
pub const CRS_CFGR_FELIM: u32 = CRS_CFGR_FELIM_Msk;
pub const CRS_CFGR_SYNCDIV_Pos: u32 = 24;
pub const CRS_CFGR_SYNCDIV_Msk: u32 = 0x7 << CRS_CFGR_SYNCDIV_Pos;
pub const CRS_CFGR_SYNCDIV: u32 = CRS_CFGR_SYNCDIV_Msk;
pub const CRS_CFGR_SYNCDIV_0: u32 = 0x1 << CRS_CFGR_SYNCDIV_Pos;
pub const CRS_CFGR_SYNCDIV_1: u32 = 0x2 << CRS_CFGR_SYNCDIV_Pos;
pub const CRS_CFGR_SYNCDIV_2: u32 = 0x4 << CRS_CFGR_SYNCDIV_Pos;
pub const CRS_CFGR_SYNCSRC_Pos: u32 = 28;
pub const CRS_CFGR_SYNCSRC_Msk: u32 = 0x3 << CRS_CFGR_SYNCSRC_Pos;
pub const CRS_CFGR_SYNCSRC: u32 = CRS_CFGR_SYNCSRC_Msk;
pub const CRS_CFGR_SYNCSRC_0: u32 = 0x1 << CRS_CFGR_SYNCSRC_Pos;
pub const CRS_CFGR_SYNCSRC_1: u32 = 0x2 << CRS_CFGR_SYNCSRC_Pos;
pub const CRS_CFGR_SYNCPOL_Pos: u32 = 31;
pub const CRS_CFGR_SYNCPOL_Msk: u32 = 0x1 << CRS_CFGR_SYNCPOL_Pos;
pub const CRS_CFGR_SYNCPOL: u32 = CRS_CFGR_SYNCPOL_Msk;
pub const CRS_ISR_SYNCOKF_Pos: u32 = 0;
pub const CRS_ISR_SYNCOKF_Msk: u32 = 0x1 << CRS_ISR_SYNCOKF_Pos;
pub const CRS_ISR_SYNCOKF: u32 = CRS_ISR_SYNCOKF_Msk;
pub const CRS_ISR_SYNCWARNF_Pos: u32 = 1;
pub const CRS_ISR_SYNCWARNF_Msk: u32 = 0x1 << CRS_ISR_SYNCWARNF_Pos;
pub const CRS_ISR_SYNCWARNF: u32 = CRS_ISR_SYNCWARNF_Msk;
pub const CRS_ISR_ERRF_Pos: u32 = 2;
pub const CRS_ISR_ERRF_Msk: u32 = 0x1 << CRS_ISR_ERRF_Pos;
pub const CRS_ISR_ERRF: u32 = CRS_ISR_ERRF_Msk;
pub const CRS_ISR_ESYNCF_Pos: u32 = 3;
pub const CRS_ISR_ESYNCF_Msk: u32 = 0x1 << CRS_ISR_ESYNCF_Pos;
pub const CRS_ISR_ESYNCF: u32 = CRS_ISR_ESYNCF_Msk;
pub const CRS_ISR_SYNCERR_Pos: u32 = 8;
pub const CRS_ISR_SYNCERR_Msk: u32 = 0x1 << CRS_ISR_SYNCERR_Pos;
pub const CRS_ISR_SYNCERR: u32 = CRS_ISR_SYNCERR_Msk;
pub const CRS_ISR_SYNCMISS_Pos: u32 = 9;
pub const CRS_ISR_SYNCMISS_Msk: u32 = 0x1 << CRS_ISR_SYNCMISS_Pos;
pub const CRS_ISR_SYNCMISS: u32 = CRS_ISR_SYNCMISS_Msk;
pub const CRS_ISR_TRIMOVF_Pos: u32 = 10;
pub const CRS_ISR_TRIMOVF_Msk: u32 = 0x1 << CRS_ISR_TRIMOVF_Pos;
pub const CRS_ISR_TRIMOVF: u32 = CRS_ISR_TRIMOVF_Msk;
pub const CRS_ISR_FEDIR_Pos: u32 = 15;
pub const CRS_ISR_FEDIR_Msk: u32 = 0x1 << CRS_ISR_FEDIR_Pos;
pub const CRS_ISR_FEDIR: u32 = CRS_ISR_FEDIR_Msk;
pub const CRS_ISR_FECAP_Pos: u32 = 16;
pub const CRS_ISR_FECAP_Msk: u32 = 0xFFFF << CRS_ISR_FECAP_Pos;
pub const CRS_ISR_FECAP: u32 = CRS_ISR_FECAP_Msk;
pub const CRS_ICR_SYNCOKC_Pos: u32 = 0;
pub const CRS_ICR_SYNCOKC_Msk: u32 = 0x1 << CRS_ICR_SYNCOKC_Pos;
pub const CRS_ICR_SYNCOKC: u32 = CRS_ICR_SYNCOKC_Msk;
pub const CRS_ICR_SYNCWARNC_Pos: u32 = 1;
pub const CRS_ICR_SYNCWARNC_Msk: u32 = 0x1 << CRS_ICR_SYNCWARNC_Pos;
pub const CRS_ICR_SYNCWARNC: u32 = CRS_ICR_SYNCWARNC_Msk;
pub const CRS_ICR_ERRC_Pos: u32 = 2;
pub const CRS_ICR_ERRC_Msk: u32 = 0x1 << CRS_ICR_ERRC_Pos;
pub const CRS_ICR_ERRC: u32 = CRS_ICR_ERRC_Msk;
pub const CRS_ICR_ESYNCC_Pos: u32 = 3;
pub const CRS_ICR_ESYNCC_Msk: u32 = 0x1 << CRS_ICR_ESYNCC_Pos;
pub const CRS_ICR_ESYNCC: u32 = CRS_ICR_ESYNCC_Msk;
pub const DAC_CR_EN1_Pos: u32 = 0;
pub const DAC_CR_EN1_Msk: u32 = 0x1 << DAC_CR_EN1_Pos;
pub const DAC_CR_EN1: u32 = DAC_CR_EN1_Msk;
pub const DAC_CR_BOFF1_Pos: u32 = 1;
pub const DAC_CR_BOFF1_Msk: u32 = 0x1 << DAC_CR_BOFF1_Pos;
pub const DAC_CR_BOFF1: u32 = DAC_CR_BOFF1_Msk;
pub const DAC_CR_TEN1_Pos: u32 = 2;
pub const DAC_CR_TEN1_Msk: u32 = 0x1 << DAC_CR_TEN1_Pos;
pub const DAC_CR_TEN1: u32 = DAC_CR_TEN1_Msk;
pub const DAC_CR_TSEL1_Pos: u32 = 3;
pub const DAC_CR_TSEL1_Msk: u32 = 0x7 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_TSEL1: u32 = DAC_CR_TSEL1_Msk;
pub const DAC_CR_TSEL1_0: u32 = 0x1 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_TSEL1_1: u32 = 0x2 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_TSEL1_2: u32 = 0x4 << DAC_CR_TSEL1_Pos;
pub const DAC_CR_WAVE1_Pos: u32 = 6;
pub const DAC_CR_WAVE1_Msk: u32 = 0x3 << DAC_CR_WAVE1_Pos;
pub const DAC_CR_WAVE1: u32 = DAC_CR_WAVE1_Msk;
pub const DAC_CR_WAVE1_0: u32 = 0x1 << DAC_CR_WAVE1_Pos;
pub const DAC_CR_WAVE1_1: u32 = 0x2 << DAC_CR_WAVE1_Pos;
pub const DAC_CR_MAMP1_Pos: u32 = 8;
pub const DAC_CR_MAMP1_Msk: u32 = 0xF << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1: u32 = DAC_CR_MAMP1_Msk;
pub const DAC_CR_MAMP1_0: u32 = 0x1 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1_1: u32 = 0x2 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1_2: u32 = 0x4 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_MAMP1_3: u32 = 0x8 << DAC_CR_MAMP1_Pos;
pub const DAC_CR_DMAEN1_Pos: u32 = 12;
pub const DAC_CR_DMAEN1_Msk: u32 = 0x1 << DAC_CR_DMAEN1_Pos;
pub const DAC_CR_DMAEN1: u32 = DAC_CR_DMAEN1_Msk;
pub const DAC_CR_DMAUDRIE1_Pos: u32 = 13;
pub const DAC_CR_DMAUDRIE1_Msk: u32 = 0x1 << DAC_CR_DMAUDRIE1_Pos;
pub const DAC_CR_DMAUDRIE1: u32 = DAC_CR_DMAUDRIE1_Msk;
pub const DAC_SWTRIGR_SWTRIG1_Pos: u32 = 0;
pub const DAC_SWTRIGR_SWTRIG1_Msk: u32 = 0x1 << DAC_SWTRIGR_SWTRIG1_Pos;
pub const DAC_SWTRIGR_SWTRIG1: u32 = DAC_SWTRIGR_SWTRIG1_Msk;
pub const DAC_DHR12R1_DACC1DHR_Pos: u32 = 0;
pub const DAC_DHR12R1_DACC1DHR_Msk: u32 = 0xFFF << DAC_DHR12R1_DACC1DHR_Pos;
pub const DAC_DHR12R1_DACC1DHR: u32 = DAC_DHR12R1_DACC1DHR_Msk;
pub const DAC_DHR12L1_DACC1DHR_Pos: u32 = 4;
pub const DAC_DHR12L1_DACC1DHR_Msk: u32 = 0xFFF << DAC_DHR12L1_DACC1DHR_Pos;
pub const DAC_DHR12L1_DACC1DHR: u32 = DAC_DHR12L1_DACC1DHR_Msk;
pub const DAC_DHR8R1_DACC1DHR_Pos: u32 = 0;
pub const DAC_DHR8R1_DACC1DHR_Msk: u32 = 0xFF << DAC_DHR8R1_DACC1DHR_Pos;
pub const DAC_DHR8R1_DACC1DHR: u32 = DAC_DHR8R1_DACC1DHR_Msk;
pub const DAC_DOR1_DACC1DOR_Pos: u32 = 0;
pub const DAC_DOR1_DACC1DOR_Msk: u32 = 0xFFF << DAC_DOR1_DACC1DOR_Pos;
pub const DAC_DOR1_DACC1DOR: u32 = DAC_DOR1_DACC1DOR_Msk;
pub const DAC_SR_DMAUDR1_Pos: u32 = 13;
pub const DAC_SR_DMAUDR1_Msk: u32 = 0x1 << DAC_SR_DMAUDR1_Pos;
pub const DAC_SR_DMAUDR1: u32 = DAC_SR_DMAUDR1_Msk;
pub const DBGMCU_IDCODE_DEV_ID_Pos: u32 = 0;
pub const DBGMCU_IDCODE_DEV_ID_Msk: u32 = 0xFFF << DBGMCU_IDCODE_DEV_ID_Pos;
pub const DBGMCU_IDCODE_DEV_ID: u32 = DBGMCU_IDCODE_DEV_ID_Msk;
pub const DBGMCU_IDCODE_REV_ID_Pos: u32 = 16;
pub const DBGMCU_IDCODE_REV_ID_Msk: u32 = 0xFFFF << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID: u32 = DBGMCU_IDCODE_REV_ID_Msk;
pub const DBGMCU_IDCODE_REV_ID_0: u32 = 0x0001 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_1: u32 = 0x0002 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_2: u32 = 0x0004 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_3: u32 = 0x0008 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_4: u32 = 0x0010 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_5: u32 = 0x0020 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_6: u32 = 0x0040 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_7: u32 = 0x0080 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_8: u32 = 0x0100 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_9: u32 = 0x0200 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_10: u32 = 0x0400 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_11: u32 = 0x0800 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_12: u32 = 0x1000 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_13: u32 = 0x2000 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_14: u32 = 0x4000 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_IDCODE_REV_ID_15: u32 = 0x8000 << DBGMCU_IDCODE_REV_ID_Pos;
pub const DBGMCU_CR_DBG_Pos: u32 = 0;
pub const DBGMCU_CR_DBG_Msk: u32 = 0x7 << DBGMCU_CR_DBG_Pos;
pub const DBGMCU_CR_DBG: u32 = DBGMCU_CR_DBG_Msk;
pub const DBGMCU_CR_DBG_SLEEP_Pos: u32 = 0;
pub const DBGMCU_CR_DBG_SLEEP_Msk: u32 = 0x1 << DBGMCU_CR_DBG_SLEEP_Pos;
pub const DBGMCU_CR_DBG_SLEEP: u32 = DBGMCU_CR_DBG_SLEEP_Msk;
pub const DBGMCU_CR_DBG_STOP_Pos: u32 = 1;
pub const DBGMCU_CR_DBG_STOP_Msk: u32 = 0x1 << DBGMCU_CR_DBG_STOP_Pos;
pub const DBGMCU_CR_DBG_STOP: u32 = DBGMCU_CR_DBG_STOP_Msk;
pub const DBGMCU_CR_DBG_STANDBY_Pos: u32 = 2;
pub const DBGMCU_CR_DBG_STANDBY_Msk: u32 = 0x1 << DBGMCU_CR_DBG_STANDBY_Pos;
pub const DBGMCU_CR_DBG_STANDBY: u32 = DBGMCU_CR_DBG_STANDBY_Msk;
pub const DBGMCU_APB1_FZ_DBG_TIM2_STOP_Pos: u32 = 0;
pub const DBGMCU_APB1_FZ_DBG_TIM2_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_TIM2_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM2_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM2_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_TIM6_STOP_Pos: u32 = 4;
pub const DBGMCU_APB1_FZ_DBG_TIM6_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_TIM6_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_TIM6_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM6_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_RTC_STOP_Pos: u32 = 10;
pub const DBGMCU_APB1_FZ_DBG_RTC_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_RTC_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_RTC_STOP: u32 = DBGMCU_APB1_FZ_DBG_RTC_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_WWDG_STOP_Pos: u32 = 11;
pub const DBGMCU_APB1_FZ_DBG_WWDG_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_WWDG_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_WWDG_STOP: u32 = DBGMCU_APB1_FZ_DBG_WWDG_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_IWDG_STOP_Pos: u32 = 12;
pub const DBGMCU_APB1_FZ_DBG_IWDG_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_IWDG_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_IWDG_STOP: u32 = DBGMCU_APB1_FZ_DBG_IWDG_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_I2C1_STOP_Pos: u32 = 21;
pub const DBGMCU_APB1_FZ_DBG_I2C1_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_I2C1_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_I2C1_STOP: u32 = DBGMCU_APB1_FZ_DBG_I2C1_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_I2C2_STOP_Pos: u32 = 22;
pub const DBGMCU_APB1_FZ_DBG_I2C2_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_I2C2_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_I2C2_STOP: u32 = DBGMCU_APB1_FZ_DBG_I2C2_STOP_Msk;
pub const DBGMCU_APB1_FZ_DBG_LPTIMER_STOP_Pos: u32 = 31;
pub const DBGMCU_APB1_FZ_DBG_LPTIMER_STOP_Msk: u32 = 0x1 << DBGMCU_APB1_FZ_DBG_LPTIMER_STOP_Pos;
pub const DBGMCU_APB1_FZ_DBG_LPTIMER_STOP: u32 = DBGMCU_APB1_FZ_DBG_LPTIMER_STOP_Msk;
pub const DBGMCU_APB2_FZ_DBG_TIM22_STOP_Pos: u32 = 5;
pub const DBGMCU_APB2_FZ_DBG_TIM22_STOP_Msk: u32 = 0x1 << DBGMCU_APB2_FZ_DBG_TIM22_STOP_Pos;
pub const DBGMCU_APB2_FZ_DBG_TIM22_STOP: u32 = DBGMCU_APB2_FZ_DBG_TIM22_STOP_Msk;
pub const DBGMCU_APB2_FZ_DBG_TIM21_STOP_Pos: u32 = 2;
pub const DBGMCU_APB2_FZ_DBG_TIM21_STOP_Msk: u32 = 0x1 << DBGMCU_APB2_FZ_DBG_TIM21_STOP_Pos;
pub const DBGMCU_APB2_FZ_DBG_TIM21_STOP: u32 = DBGMCU_APB2_FZ_DBG_TIM21_STOP_Msk;
pub const DMA_ISR_GIF1_Pos: u32 = 0;
pub const DMA_ISR_GIF1_Msk: u32 = 0x1 << DMA_ISR_GIF1_Pos;
pub const DMA_ISR_GIF1: u32 = DMA_ISR_GIF1_Msk;
pub const DMA_ISR_TCIF1_Pos: u32 = 1;
pub const DMA_ISR_TCIF1_Msk: u32 = 0x1 << DMA_ISR_TCIF1_Pos;
pub const DMA_ISR_TCIF1: u32 = DMA_ISR_TCIF1_Msk;
pub const DMA_ISR_HTIF1_Pos: u32 = 2;
pub const DMA_ISR_HTIF1_Msk: u32 = 0x1 << DMA_ISR_HTIF1_Pos;
pub const DMA_ISR_HTIF1: u32 = DMA_ISR_HTIF1_Msk;
pub const DMA_ISR_TEIF1_Pos: u32 = 3;
pub const DMA_ISR_TEIF1_Msk: u32 = 0x1 << DMA_ISR_TEIF1_Pos;
pub const DMA_ISR_TEIF1: u32 = DMA_ISR_TEIF1_Msk;
pub const DMA_ISR_GIF2_Pos: u32 = 4;
pub const DMA_ISR_GIF2_Msk: u32 = 0x1 << DMA_ISR_GIF2_Pos;
pub const DMA_ISR_GIF2: u32 = DMA_ISR_GIF2_Msk;
pub const DMA_ISR_TCIF2_Pos: u32 = 5;
pub const DMA_ISR_TCIF2_Msk: u32 = 0x1 << DMA_ISR_TCIF2_Pos;
pub const DMA_ISR_TCIF2: u32 = DMA_ISR_TCIF2_Msk;
pub const DMA_ISR_HTIF2_Pos: u32 = 6;
pub const DMA_ISR_HTIF2_Msk: u32 = 0x1 << DMA_ISR_HTIF2_Pos;
pub const DMA_ISR_HTIF2: u32 = DMA_ISR_HTIF2_Msk;
pub const DMA_ISR_TEIF2_Pos: u32 = 7;
pub const DMA_ISR_TEIF2_Msk: u32 = 0x1 << DMA_ISR_TEIF2_Pos;
pub const DMA_ISR_TEIF2: u32 = DMA_ISR_TEIF2_Msk;
pub const DMA_ISR_GIF3_Pos: u32 = 8;
pub const DMA_ISR_GIF3_Msk: u32 = 0x1 << DMA_ISR_GIF3_Pos;
pub const DMA_ISR_GIF3: u32 = DMA_ISR_GIF3_Msk;
pub const DMA_ISR_TCIF3_Pos: u32 = 9;
pub const DMA_ISR_TCIF3_Msk: u32 = 0x1 << DMA_ISR_TCIF3_Pos;
pub const DMA_ISR_TCIF3: u32 = DMA_ISR_TCIF3_Msk;
pub const DMA_ISR_HTIF3_Pos: u32 = 10;
pub const DMA_ISR_HTIF3_Msk: u32 = 0x1 << DMA_ISR_HTIF3_Pos;
pub const DMA_ISR_HTIF3: u32 = DMA_ISR_HTIF3_Msk;
pub const DMA_ISR_TEIF3_Pos: u32 = 11;
pub const DMA_ISR_TEIF3_Msk: u32 = 0x1 << DMA_ISR_TEIF3_Pos;
pub const DMA_ISR_TEIF3: u32 = DMA_ISR_TEIF3_Msk;
pub const DMA_ISR_GIF4_Pos: u32 = 12;
pub const DMA_ISR_GIF4_Msk: u32 = 0x1 << DMA_ISR_GIF4_Pos;
pub const DMA_ISR_GIF4: u32 = DMA_ISR_GIF4_Msk;
pub const DMA_ISR_TCIF4_Pos: u32 = 13;
pub const DMA_ISR_TCIF4_Msk: u32 = 0x1 << DMA_ISR_TCIF4_Pos;
pub const DMA_ISR_TCIF4: u32 = DMA_ISR_TCIF4_Msk;
pub const DMA_ISR_HTIF4_Pos: u32 = 14;
pub const DMA_ISR_HTIF4_Msk: u32 = 0x1 << DMA_ISR_HTIF4_Pos;
pub const DMA_ISR_HTIF4: u32 = DMA_ISR_HTIF4_Msk;
pub const DMA_ISR_TEIF4_Pos: u32 = 15;
pub const DMA_ISR_TEIF4_Msk: u32 = 0x1 << DMA_ISR_TEIF4_Pos;
pub const DMA_ISR_TEIF4: u32 = DMA_ISR_TEIF4_Msk;
pub const DMA_ISR_GIF5_Pos: u32 = 16;
pub const DMA_ISR_GIF5_Msk: u32 = 0x1 << DMA_ISR_GIF5_Pos;
pub const DMA_ISR_GIF5: u32 = DMA_ISR_GIF5_Msk;
pub const DMA_ISR_TCIF5_Pos: u32 = 17;
pub const DMA_ISR_TCIF5_Msk: u32 = 0x1 << DMA_ISR_TCIF5_Pos;
pub const DMA_ISR_TCIF5: u32 = DMA_ISR_TCIF5_Msk;
pub const DMA_ISR_HTIF5_Pos: u32 = 18;
pub const DMA_ISR_HTIF5_Msk: u32 = 0x1 << DMA_ISR_HTIF5_Pos;
pub const DMA_ISR_HTIF5: u32 = DMA_ISR_HTIF5_Msk;
pub const DMA_ISR_TEIF5_Pos: u32 = 19;
pub const DMA_ISR_TEIF5_Msk: u32 = 0x1 << DMA_ISR_TEIF5_Pos;
pub const DMA_ISR_TEIF5: u32 = DMA_ISR_TEIF5_Msk;
pub const DMA_ISR_GIF6_Pos: u32 = 20;
pub const DMA_ISR_GIF6_Msk: u32 = 0x1 << DMA_ISR_GIF6_Pos;
pub const DMA_ISR_GIF6: u32 = DMA_ISR_GIF6_Msk;
pub const DMA_ISR_TCIF6_Pos: u32 = 21;
pub const DMA_ISR_TCIF6_Msk: u32 = 0x1 << DMA_ISR_TCIF6_Pos;
pub const DMA_ISR_TCIF6: u32 = DMA_ISR_TCIF6_Msk;
pub const DMA_ISR_HTIF6_Pos: u32 = 22;
pub const DMA_ISR_HTIF6_Msk: u32 = 0x1 << DMA_ISR_HTIF6_Pos;
pub const DMA_ISR_HTIF6: u32 = DMA_ISR_HTIF6_Msk;
pub const DMA_ISR_TEIF6_Pos: u32 = 23;
pub const DMA_ISR_TEIF6_Msk: u32 = 0x1 << DMA_ISR_TEIF6_Pos;
pub const DMA_ISR_TEIF6: u32 = DMA_ISR_TEIF6_Msk;
pub const DMA_ISR_GIF7_Pos: u32 = 24;
pub const DMA_ISR_GIF7_Msk: u32 = 0x1 << DMA_ISR_GIF7_Pos;
pub const DMA_ISR_GIF7: u32 = DMA_ISR_GIF7_Msk;
pub const DMA_ISR_TCIF7_Pos: u32 = 25;
pub const DMA_ISR_TCIF7_Msk: u32 = 0x1 << DMA_ISR_TCIF7_Pos;
pub const DMA_ISR_TCIF7: u32 = DMA_ISR_TCIF7_Msk;
pub const DMA_ISR_HTIF7_Pos: u32 = 26;
pub const DMA_ISR_HTIF7_Msk: u32 = 0x1 << DMA_ISR_HTIF7_Pos;
pub const DMA_ISR_HTIF7: u32 = DMA_ISR_HTIF7_Msk;
pub const DMA_ISR_TEIF7_Pos: u32 = 27;
pub const DMA_ISR_TEIF7_Msk: u32 = 0x1 << DMA_ISR_TEIF7_Pos;
pub const DMA_ISR_TEIF7: u32 = DMA_ISR_TEIF7_Msk;
pub const DMA_IFCR_CGIF1_Pos: u32 = 0;
pub const DMA_IFCR_CGIF1_Msk: u32 = 0x1 << DMA_IFCR_CGIF1_Pos;
pub const DMA_IFCR_CGIF1: u32 = DMA_IFCR_CGIF1_Msk;
pub const DMA_IFCR_CTCIF1_Pos: u32 = 1;
pub const DMA_IFCR_CTCIF1_Msk: u32 = 0x1 << DMA_IFCR_CTCIF1_Pos;
pub const DMA_IFCR_CTCIF1: u32 = DMA_IFCR_CTCIF1_Msk;
pub const DMA_IFCR_CHTIF1_Pos: u32 = 2;
pub const DMA_IFCR_CHTIF1_Msk: u32 = 0x1 << DMA_IFCR_CHTIF1_Pos;
pub const DMA_IFCR_CHTIF1: u32 = DMA_IFCR_CHTIF1_Msk;
pub const DMA_IFCR_CTEIF1_Pos: u32 = 3;
pub const DMA_IFCR_CTEIF1_Msk: u32 = 0x1 << DMA_IFCR_CTEIF1_Pos;
pub const DMA_IFCR_CTEIF1: u32 = DMA_IFCR_CTEIF1_Msk;
pub const DMA_IFCR_CGIF2_Pos: u32 = 4;
pub const DMA_IFCR_CGIF2_Msk: u32 = 0x1 << DMA_IFCR_CGIF2_Pos;
pub const DMA_IFCR_CGIF2: u32 = DMA_IFCR_CGIF2_Msk;
pub const DMA_IFCR_CTCIF2_Pos: u32 = 5;
pub const DMA_IFCR_CTCIF2_Msk: u32 = 0x1 << DMA_IFCR_CTCIF2_Pos;
pub const DMA_IFCR_CTCIF2: u32 = DMA_IFCR_CTCIF2_Msk;
pub const DMA_IFCR_CHTIF2_Pos: u32 = 6;
pub const DMA_IFCR_CHTIF2_Msk: u32 = 0x1 << DMA_IFCR_CHTIF2_Pos;
pub const DMA_IFCR_CHTIF2: u32 = DMA_IFCR_CHTIF2_Msk;
pub const DMA_IFCR_CTEIF2_Pos: u32 = 7;
pub const DMA_IFCR_CTEIF2_Msk: u32 = 0x1 << DMA_IFCR_CTEIF2_Pos;
pub const DMA_IFCR_CTEIF2: u32 = DMA_IFCR_CTEIF2_Msk;
pub const DMA_IFCR_CGIF3_Pos: u32 = 8;
pub const DMA_IFCR_CGIF3_Msk: u32 = 0x1 << DMA_IFCR_CGIF3_Pos;
pub const DMA_IFCR_CGIF3: u32 = DMA_IFCR_CGIF3_Msk;
pub const DMA_IFCR_CTCIF3_Pos: u32 = 9;
pub const DMA_IFCR_CTCIF3_Msk: u32 = 0x1 << DMA_IFCR_CTCIF3_Pos;
pub const DMA_IFCR_CTCIF3: u32 = DMA_IFCR_CTCIF3_Msk;
pub const DMA_IFCR_CHTIF3_Pos: u32 = 10;
pub const DMA_IFCR_CHTIF3_Msk: u32 = 0x1 << DMA_IFCR_CHTIF3_Pos;
pub const DMA_IFCR_CHTIF3: u32 = DMA_IFCR_CHTIF3_Msk;
pub const DMA_IFCR_CTEIF3_Pos: u32 = 11;
pub const DMA_IFCR_CTEIF3_Msk: u32 = 0x1 << DMA_IFCR_CTEIF3_Pos;
pub const DMA_IFCR_CTEIF3: u32 = DMA_IFCR_CTEIF3_Msk;
pub const DMA_IFCR_CGIF4_Pos: u32 = 12;
pub const DMA_IFCR_CGIF4_Msk: u32 = 0x1 << DMA_IFCR_CGIF4_Pos;
pub const DMA_IFCR_CGIF4: u32 = DMA_IFCR_CGIF4_Msk;
pub const DMA_IFCR_CTCIF4_Pos: u32 = 13;
pub const DMA_IFCR_CTCIF4_Msk: u32 = 0x1 << DMA_IFCR_CTCIF4_Pos;
pub const DMA_IFCR_CTCIF4: u32 = DMA_IFCR_CTCIF4_Msk;
pub const DMA_IFCR_CHTIF4_Pos: u32 = 14;
pub const DMA_IFCR_CHTIF4_Msk: u32 = 0x1 << DMA_IFCR_CHTIF4_Pos;
pub const DMA_IFCR_CHTIF4: u32 = DMA_IFCR_CHTIF4_Msk;
pub const DMA_IFCR_CTEIF4_Pos: u32 = 15;
pub const DMA_IFCR_CTEIF4_Msk: u32 = 0x1 << DMA_IFCR_CTEIF4_Pos;
pub const DMA_IFCR_CTEIF4: u32 = DMA_IFCR_CTEIF4_Msk;
pub const DMA_IFCR_CGIF5_Pos: u32 = 16;
pub const DMA_IFCR_CGIF5_Msk: u32 = 0x1 << DMA_IFCR_CGIF5_Pos;
pub const DMA_IFCR_CGIF5: u32 = DMA_IFCR_CGIF5_Msk;
pub const DMA_IFCR_CTCIF5_Pos: u32 = 17;
pub const DMA_IFCR_CTCIF5_Msk: u32 = 0x1 << DMA_IFCR_CTCIF5_Pos;
pub const DMA_IFCR_CTCIF5: u32 = DMA_IFCR_CTCIF5_Msk;
pub const DMA_IFCR_CHTIF5_Pos: u32 = 18;
pub const DMA_IFCR_CHTIF5_Msk: u32 = 0x1 << DMA_IFCR_CHTIF5_Pos;
pub const DMA_IFCR_CHTIF5: u32 = DMA_IFCR_CHTIF5_Msk;
pub const DMA_IFCR_CTEIF5_Pos: u32 = 19;
pub const DMA_IFCR_CTEIF5_Msk: u32 = 0x1 << DMA_IFCR_CTEIF5_Pos;
pub const DMA_IFCR_CTEIF5: u32 = DMA_IFCR_CTEIF5_Msk;
pub const DMA_IFCR_CGIF6_Pos: u32 = 20;
pub const DMA_IFCR_CGIF6_Msk: u32 = 0x1 << DMA_IFCR_CGIF6_Pos;
pub const DMA_IFCR_CGIF6: u32 = DMA_IFCR_CGIF6_Msk;
pub const DMA_IFCR_CTCIF6_Pos: u32 = 21;
pub const DMA_IFCR_CTCIF6_Msk: u32 = 0x1 << DMA_IFCR_CTCIF6_Pos;
pub const DMA_IFCR_CTCIF6: u32 = DMA_IFCR_CTCIF6_Msk;
pub const DMA_IFCR_CHTIF6_Pos: u32 = 22;
pub const DMA_IFCR_CHTIF6_Msk: u32 = 0x1 << DMA_IFCR_CHTIF6_Pos;
pub const DMA_IFCR_CHTIF6: u32 = DMA_IFCR_CHTIF6_Msk;
pub const DMA_IFCR_CTEIF6_Pos: u32 = 23;
pub const DMA_IFCR_CTEIF6_Msk: u32 = 0x1 << DMA_IFCR_CTEIF6_Pos;
pub const DMA_IFCR_CTEIF6: u32 = DMA_IFCR_CTEIF6_Msk;
pub const DMA_IFCR_CGIF7_Pos: u32 = 24;
pub const DMA_IFCR_CGIF7_Msk: u32 = 0x1 << DMA_IFCR_CGIF7_Pos;
pub const DMA_IFCR_CGIF7: u32 = DMA_IFCR_CGIF7_Msk;
pub const DMA_IFCR_CTCIF7_Pos: u32 = 25;
pub const DMA_IFCR_CTCIF7_Msk: u32 = 0x1 << DMA_IFCR_CTCIF7_Pos;
pub const DMA_IFCR_CTCIF7: u32 = DMA_IFCR_CTCIF7_Msk;
pub const DMA_IFCR_CHTIF7_Pos: u32 = 26;
pub const DMA_IFCR_CHTIF7_Msk: u32 = 0x1 << DMA_IFCR_CHTIF7_Pos;
pub const DMA_IFCR_CHTIF7: u32 = DMA_IFCR_CHTIF7_Msk;
pub const DMA_IFCR_CTEIF7_Pos: u32 = 27;
pub const DMA_IFCR_CTEIF7_Msk: u32 = 0x1 << DMA_IFCR_CTEIF7_Pos;
pub const DMA_IFCR_CTEIF7: u32 = DMA_IFCR_CTEIF7_Msk;
pub const DMA_CCR_EN_Pos: u32 = 0;
pub const DMA_CCR_EN_Msk: u32 = 0x1 << DMA_CCR_EN_Pos;
pub const DMA_CCR_EN: u32 = DMA_CCR_EN_Msk;
pub const DMA_CCR_TCIE_Pos: u32 = 1;
pub const DMA_CCR_TCIE_Msk: u32 = 0x1 << DMA_CCR_TCIE_Pos;
pub const DMA_CCR_TCIE: u32 = DMA_CCR_TCIE_Msk;
pub const DMA_CCR_HTIE_Pos: u32 = 2;
pub const DMA_CCR_HTIE_Msk: u32 = 0x1 << DMA_CCR_HTIE_Pos;
pub const DMA_CCR_HTIE: u32 = DMA_CCR_HTIE_Msk;
pub const DMA_CCR_TEIE_Pos: u32 = 3;
pub const DMA_CCR_TEIE_Msk: u32 = 0x1 << DMA_CCR_TEIE_Pos;
pub const DMA_CCR_TEIE: u32 = DMA_CCR_TEIE_Msk;
pub const DMA_CCR_DIR_Pos: u32 = 4;
pub const DMA_CCR_DIR_Msk: u32 = 0x1 << DMA_CCR_DIR_Pos;
pub const DMA_CCR_DIR: u32 = DMA_CCR_DIR_Msk;
pub const DMA_CCR_CIRC_Pos: u32 = 5;
pub const DMA_CCR_CIRC_Msk: u32 = 0x1 << DMA_CCR_CIRC_Pos;
pub const DMA_CCR_CIRC: u32 = DMA_CCR_CIRC_Msk;
pub const DMA_CCR_PINC_Pos: u32 = 6;
pub const DMA_CCR_PINC_Msk: u32 = 0x1 << DMA_CCR_PINC_Pos;
pub const DMA_CCR_PINC: u32 = DMA_CCR_PINC_Msk;
pub const DMA_CCR_MINC_Pos: u32 = 7;
pub const DMA_CCR_MINC_Msk: u32 = 0x1 << DMA_CCR_MINC_Pos;
pub const DMA_CCR_MINC: u32 = DMA_CCR_MINC_Msk;
pub const DMA_CCR_PSIZE_Pos: u32 = 8;
pub const DMA_CCR_PSIZE_Msk: u32 = 0x3 << DMA_CCR_PSIZE_Pos;
pub const DMA_CCR_PSIZE: u32 = DMA_CCR_PSIZE_Msk;
pub const DMA_CCR_PSIZE_0: u32 = 0x1 << DMA_CCR_PSIZE_Pos;
pub const DMA_CCR_PSIZE_1: u32 = 0x2 << DMA_CCR_PSIZE_Pos;
pub const DMA_CCR_MSIZE_Pos: u32 = 10;
pub const DMA_CCR_MSIZE_Msk: u32 = 0x3 << DMA_CCR_MSIZE_Pos;
pub const DMA_CCR_MSIZE: u32 = DMA_CCR_MSIZE_Msk;
pub const DMA_CCR_MSIZE_0: u32 = 0x1 << DMA_CCR_MSIZE_Pos;
pub const DMA_CCR_MSIZE_1: u32 = 0x2 << DMA_CCR_MSIZE_Pos;
pub const DMA_CCR_PL_Pos: u32 = 12;
pub const DMA_CCR_PL_Msk: u32 = 0x3 << DMA_CCR_PL_Pos;
pub const DMA_CCR_PL: u32 = DMA_CCR_PL_Msk;
pub const DMA_CCR_PL_0: u32 = 0x1 << DMA_CCR_PL_Pos;
pub const DMA_CCR_PL_1: u32 = 0x2 << DMA_CCR_PL_Pos;
pub const DMA_CCR_MEM2MEM_Pos: u32 = 14;
pub const DMA_CCR_MEM2MEM_Msk: u32 = 0x1 << DMA_CCR_MEM2MEM_Pos;
pub const DMA_CCR_MEM2MEM: u32 = DMA_CCR_MEM2MEM_Msk;
pub const DMA_CNDTR_NDT_Pos: u32 = 0;
pub const DMA_CNDTR_NDT_Msk: u32 = 0xFFFF << DMA_CNDTR_NDT_Pos;
pub const DMA_CNDTR_NDT: u32 = DMA_CNDTR_NDT_Msk;
pub const DMA_CPAR_PA_Pos: u32 = 0;
pub const DMA_CPAR_PA_Msk: u32 = 0xFFFFFFFF << DMA_CPAR_PA_Pos;
pub const DMA_CPAR_PA: u32 = DMA_CPAR_PA_Msk;
pub const DMA_CMAR_MA_Pos: u32 = 0;
pub const DMA_CMAR_MA_Msk: u32 = 0xFFFFFFFF << DMA_CMAR_MA_Pos;
pub const DMA_CMAR_MA: u32 = DMA_CMAR_MA_Msk;
pub const DMA_CSELR_C1S_Pos: u32 = 0;
pub const DMA_CSELR_C1S_Msk: u32 = 0xF << DMA_CSELR_C1S_Pos;
pub const DMA_CSELR_C1S: u32 = DMA_CSELR_C1S_Msk;
pub const DMA_CSELR_C2S_Pos: u32 = 4;
pub const DMA_CSELR_C2S_Msk: u32 = 0xF << DMA_CSELR_C2S_Pos;
pub const DMA_CSELR_C2S: u32 = DMA_CSELR_C2S_Msk;
pub const DMA_CSELR_C3S_Pos: u32 = 8;
pub const DMA_CSELR_C3S_Msk: u32 = 0xF << DMA_CSELR_C3S_Pos;
pub const DMA_CSELR_C3S: u32 = DMA_CSELR_C3S_Msk;
pub const DMA_CSELR_C4S_Pos: u32 = 12;
pub const DMA_CSELR_C4S_Msk: u32 = 0xF << DMA_CSELR_C4S_Pos;
pub const DMA_CSELR_C4S: u32 = DMA_CSELR_C4S_Msk;
pub const DMA_CSELR_C5S_Pos: u32 = 16;
pub const DMA_CSELR_C5S_Msk: u32 = 0xF << DMA_CSELR_C5S_Pos;
pub const DMA_CSELR_C5S: u32 = DMA_CSELR_C5S_Msk;
pub const DMA_CSELR_C6S_Pos: u32 = 20;
pub const DMA_CSELR_C6S_Msk: u32 = 0xF << DMA_CSELR_C6S_Pos;
pub const DMA_CSELR_C6S: u32 = DMA_CSELR_C6S_Msk;
pub const DMA_CSELR_C7S_Pos: u32 = 24;
pub const DMA_CSELR_C7S_Msk: u32 = 0xF << DMA_CSELR_C7S_Pos;
pub const DMA_CSELR_C7S: u32 = DMA_CSELR_C7S_Msk;
pub const EXTI_IMR_IM0_Pos: u32 = 0;
pub const EXTI_IMR_IM0_Msk: u32 = 0x1 << EXTI_IMR_IM0_Pos;
pub const EXTI_IMR_IM0: u32 = EXTI_IMR_IM0_Msk;
pub const EXTI_IMR_IM1_Pos: u32 = 1;
pub const EXTI_IMR_IM1_Msk: u32 = 0x1 << EXTI_IMR_IM1_Pos;
pub const EXTI_IMR_IM1: u32 = EXTI_IMR_IM1_Msk;
pub const EXTI_IMR_IM2_Pos: u32 = 2;
pub const EXTI_IMR_IM2_Msk: u32 = 0x1 << EXTI_IMR_IM2_Pos;
pub const EXTI_IMR_IM2: u32 = EXTI_IMR_IM2_Msk;
pub const EXTI_IMR_IM3_Pos: u32 = 3;
pub const EXTI_IMR_IM3_Msk: u32 = 0x1 << EXTI_IMR_IM3_Pos;
pub const EXTI_IMR_IM3: u32 = EXTI_IMR_IM3_Msk;
pub const EXTI_IMR_IM4_Pos: u32 = 4;
pub const EXTI_IMR_IM4_Msk: u32 = 0x1 << EXTI_IMR_IM4_Pos;
pub const EXTI_IMR_IM4: u32 = EXTI_IMR_IM4_Msk;
pub const EXTI_IMR_IM5_Pos: u32 = 5;
pub const EXTI_IMR_IM5_Msk: u32 = 0x1 << EXTI_IMR_IM5_Pos;
pub const EXTI_IMR_IM5: u32 = EXTI_IMR_IM5_Msk;
pub const EXTI_IMR_IM6_Pos: u32 = 6;
pub const EXTI_IMR_IM6_Msk: u32 = 0x1 << EXTI_IMR_IM6_Pos;
pub const EXTI_IMR_IM6: u32 = EXTI_IMR_IM6_Msk;
pub const EXTI_IMR_IM7_Pos: u32 = 7;
pub const EXTI_IMR_IM7_Msk: u32 = 0x1 << EXTI_IMR_IM7_Pos;
pub const EXTI_IMR_IM7: u32 = EXTI_IMR_IM7_Msk;
pub const EXTI_IMR_IM8_Pos: u32 = 8;
pub const EXTI_IMR_IM8_Msk: u32 = 0x1 << EXTI_IMR_IM8_Pos;
pub const EXTI_IMR_IM8: u32 = EXTI_IMR_IM8_Msk;
pub const EXTI_IMR_IM9_Pos: u32 = 9;
pub const EXTI_IMR_IM9_Msk: u32 = 0x1 << EXTI_IMR_IM9_Pos;
pub const EXTI_IMR_IM9: u32 = EXTI_IMR_IM9_Msk;
pub const EXTI_IMR_IM10_Pos: u32 = 10;
pub const EXTI_IMR_IM10_Msk: u32 = 0x1 << EXTI_IMR_IM10_Pos;
pub const EXTI_IMR_IM10: u32 = EXTI_IMR_IM10_Msk;
pub const EXTI_IMR_IM11_Pos: u32 = 11;
pub const EXTI_IMR_IM11_Msk: u32 = 0x1 << EXTI_IMR_IM11_Pos;
pub const EXTI_IMR_IM11: u32 = EXTI_IMR_IM11_Msk;
pub const EXTI_IMR_IM12_Pos: u32 = 12;
pub const EXTI_IMR_IM12_Msk: u32 = 0x1 << EXTI_IMR_IM12_Pos;
pub const EXTI_IMR_IM12: u32 = EXTI_IMR_IM12_Msk;
pub const EXTI_IMR_IM13_Pos: u32 = 13;
pub const EXTI_IMR_IM13_Msk: u32 = 0x1 << EXTI_IMR_IM13_Pos;
pub const EXTI_IMR_IM13: u32 = EXTI_IMR_IM13_Msk;
pub const EXTI_IMR_IM14_Pos: u32 = 14;
pub const EXTI_IMR_IM14_Msk: u32 = 0x1 << EXTI_IMR_IM14_Pos;
pub const EXTI_IMR_IM14: u32 = EXTI_IMR_IM14_Msk;
pub const EXTI_IMR_IM15_Pos: u32 = 15;
pub const EXTI_IMR_IM15_Msk: u32 = 0x1 << EXTI_IMR_IM15_Pos;
pub const EXTI_IMR_IM15: u32 = EXTI_IMR_IM15_Msk;
pub const EXTI_IMR_IM16_Pos: u32 = 16;
pub const EXTI_IMR_IM16_Msk: u32 = 0x1 << EXTI_IMR_IM16_Pos;
pub const EXTI_IMR_IM16: u32 = EXTI_IMR_IM16_Msk;
pub const EXTI_IMR_IM17_Pos: u32 = 17;
pub const EXTI_IMR_IM17_Msk: u32 = 0x1 << EXTI_IMR_IM17_Pos;
pub const EXTI_IMR_IM17: u32 = EXTI_IMR_IM17_Msk;
pub const EXTI_IMR_IM18_Pos: u32 = 18;
pub const EXTI_IMR_IM18_Msk: u32 = 0x1 << EXTI_IMR_IM18_Pos;
pub const EXTI_IMR_IM18: u32 = EXTI_IMR_IM18_Msk;
pub const EXTI_IMR_IM19_Pos: u32 = 19;
pub const EXTI_IMR_IM19_Msk: u32 = 0x1 << EXTI_IMR_IM19_Pos;
pub const EXTI_IMR_IM19: u32 = EXTI_IMR_IM19_Msk;
pub const EXTI_IMR_IM20_Pos: u32 = 20;
pub const EXTI_IMR_IM20_Msk: u32 = 0x1 << EXTI_IMR_IM20_Pos;
pub const EXTI_IMR_IM20: u32 = EXTI_IMR_IM20_Msk;
pub const EXTI_IMR_IM21_Pos: u32 = 21;
pub const EXTI_IMR_IM21_Msk: u32 = 0x1 << EXTI_IMR_IM21_Pos;
pub const EXTI_IMR_IM21: u32 = EXTI_IMR_IM21_Msk;
pub const EXTI_IMR_IM22_Pos: u32 = 22;
pub const EXTI_IMR_IM22_Msk: u32 = 0x1 << EXTI_IMR_IM22_Pos;
pub const EXTI_IMR_IM22: u32 = EXTI_IMR_IM22_Msk;
pub const EXTI_IMR_IM23_Pos: u32 = 23;
pub const EXTI_IMR_IM23_Msk: u32 = 0x1 << EXTI_IMR_IM23_Pos;
pub const EXTI_IMR_IM23: u32 = EXTI_IMR_IM23_Msk;
pub const EXTI_IMR_IM25_Pos: u32 = 25;
pub const EXTI_IMR_IM25_Msk: u32 = 0x1 << EXTI_IMR_IM25_Pos;
pub const EXTI_IMR_IM25: u32 = EXTI_IMR_IM25_Msk;
pub const EXTI_IMR_IM26_Pos: u32 = 26;
pub const EXTI_IMR_IM26_Msk: u32 = 0x1 << EXTI_IMR_IM26_Pos;
pub const EXTI_IMR_IM26: u32 = EXTI_IMR_IM26_Msk;
pub const EXTI_IMR_IM28_Pos: u32 = 28;
pub const EXTI_IMR_IM28_Msk: u32 = 0x1 << EXTI_IMR_IM28_Pos;
pub const EXTI_IMR_IM28: u32 = EXTI_IMR_IM28_Msk;
pub const EXTI_IMR_IM29_Pos: u32 = 29;
pub const EXTI_IMR_IM29_Msk: u32 = 0x1 << EXTI_IMR_IM29_Pos;
pub const EXTI_IMR_IM29: u32 = EXTI_IMR_IM29_Msk;
pub const EXTI_IMR_IM_Pos: u32 = 0;
pub const EXTI_IMR_IM_Msk: u32 = 0x36FFFFFF << EXTI_IMR_IM_Pos;
pub const EXTI_IMR_IM: u32 = EXTI_IMR_IM_Msk;
pub const EXTI_EMR_EM0_Pos: u32 = 0;
pub const EXTI_EMR_EM0_Msk: u32 = 0x1 << EXTI_EMR_EM0_Pos;
pub const EXTI_EMR_EM0: u32 = EXTI_EMR_EM0_Msk;
pub const EXTI_EMR_EM1_Pos: u32 = 1;
pub const EXTI_EMR_EM1_Msk: u32 = 0x1 << EXTI_EMR_EM1_Pos;
pub const EXTI_EMR_EM1: u32 = EXTI_EMR_EM1_Msk;
pub const EXTI_EMR_EM2_Pos: u32 = 2;
pub const EXTI_EMR_EM2_Msk: u32 = 0x1 << EXTI_EMR_EM2_Pos;
pub const EXTI_EMR_EM2: u32 = EXTI_EMR_EM2_Msk;
pub const EXTI_EMR_EM3_Pos: u32 = 3;
pub const EXTI_EMR_EM3_Msk: u32 = 0x1 << EXTI_EMR_EM3_Pos;
pub const EXTI_EMR_EM3: u32 = EXTI_EMR_EM3_Msk;
pub const EXTI_EMR_EM4_Pos: u32 = 4;
pub const EXTI_EMR_EM4_Msk: u32 = 0x1 << EXTI_EMR_EM4_Pos;
pub const EXTI_EMR_EM4: u32 = EXTI_EMR_EM4_Msk;
pub const EXTI_EMR_EM5_Pos: u32 = 5;
pub const EXTI_EMR_EM5_Msk: u32 = 0x1 << EXTI_EMR_EM5_Pos;
pub const EXTI_EMR_EM5: u32 = EXTI_EMR_EM5_Msk;
pub const EXTI_EMR_EM6_Pos: u32 = 6;
pub const EXTI_EMR_EM6_Msk: u32 = 0x1 << EXTI_EMR_EM6_Pos;
pub const EXTI_EMR_EM6: u32 = EXTI_EMR_EM6_Msk;
pub const EXTI_EMR_EM7_Pos: u32 = 7;
pub const EXTI_EMR_EM7_Msk: u32 = 0x1 << EXTI_EMR_EM7_Pos;
pub const EXTI_EMR_EM7: u32 = EXTI_EMR_EM7_Msk;
pub const EXTI_EMR_EM8_Pos: u32 = 8;
pub const EXTI_EMR_EM8_Msk: u32 = 0x1 << EXTI_EMR_EM8_Pos;
pub const EXTI_EMR_EM8: u32 = EXTI_EMR_EM8_Msk;
pub const EXTI_EMR_EM9_Pos: u32 = 9;
pub const EXTI_EMR_EM9_Msk: u32 = 0x1 << EXTI_EMR_EM9_Pos;
pub const EXTI_EMR_EM9: u32 = EXTI_EMR_EM9_Msk;
pub const EXTI_EMR_EM10_Pos: u32 = 10;
pub const EXTI_EMR_EM10_Msk: u32 = 0x1 << EXTI_EMR_EM10_Pos;
pub const EXTI_EMR_EM10: u32 = EXTI_EMR_EM10_Msk;
pub const EXTI_EMR_EM11_Pos: u32 = 11;
pub const EXTI_EMR_EM11_Msk: u32 = 0x1 << EXTI_EMR_EM11_Pos;
pub const EXTI_EMR_EM11: u32 = EXTI_EMR_EM11_Msk;
pub const EXTI_EMR_EM12_Pos: u32 = 12;
pub const EXTI_EMR_EM12_Msk: u32 = 0x1 << EXTI_EMR_EM12_Pos;
pub const EXTI_EMR_EM12: u32 = EXTI_EMR_EM12_Msk;
pub const EXTI_EMR_EM13_Pos: u32 = 13;
pub const EXTI_EMR_EM13_Msk: u32 = 0x1 << EXTI_EMR_EM13_Pos;
pub const EXTI_EMR_EM13: u32 = EXTI_EMR_EM13_Msk;
pub const EXTI_EMR_EM14_Pos: u32 = 14;
pub const EXTI_EMR_EM14_Msk: u32 = 0x1 << EXTI_EMR_EM14_Pos;
pub const EXTI_EMR_EM14: u32 = EXTI_EMR_EM14_Msk;
pub const EXTI_EMR_EM15_Pos: u32 = 15;
pub const EXTI_EMR_EM15_Msk: u32 = 0x1 << EXTI_EMR_EM15_Pos;
pub const EXTI_EMR_EM15: u32 = EXTI_EMR_EM15_Msk;
pub const EXTI_EMR_EM16_Pos: u32 = 16;
pub const EXTI_EMR_EM16_Msk: u32 = 0x1 << EXTI_EMR_EM16_Pos;
pub const EXTI_EMR_EM16: u32 = EXTI_EMR_EM16_Msk;
pub const EXTI_EMR_EM17_Pos: u32 = 17;
pub const EXTI_EMR_EM17_Msk: u32 = 0x1 << EXTI_EMR_EM17_Pos;
pub const EXTI_EMR_EM17: u32 = EXTI_EMR_EM17_Msk;
pub const EXTI_EMR_EM18_Pos: u32 = 18;
pub const EXTI_EMR_EM18_Msk: u32 = 0x1 << EXTI_EMR_EM18_Pos;
pub const EXTI_EMR_EM18: u32 = EXTI_EMR_EM18_Msk;
pub const EXTI_EMR_EM19_Pos: u32 = 19;
pub const EXTI_EMR_EM19_Msk: u32 = 0x1 << EXTI_EMR_EM19_Pos;
pub const EXTI_EMR_EM19: u32 = EXTI_EMR_EM19_Msk;
pub const EXTI_EMR_EM20_Pos: u32 = 20;
pub const EXTI_EMR_EM20_Msk: u32 = 0x1 << EXTI_EMR_EM20_Pos;
pub const EXTI_EMR_EM20: u32 = EXTI_EMR_EM20_Msk;
pub const EXTI_EMR_EM21_Pos: u32 = 21;
pub const EXTI_EMR_EM21_Msk: u32 = 0x1 << EXTI_EMR_EM21_Pos;
pub const EXTI_EMR_EM21: u32 = EXTI_EMR_EM21_Msk;
pub const EXTI_EMR_EM22_Pos: u32 = 22;
pub const EXTI_EMR_EM22_Msk: u32 = 0x1 << EXTI_EMR_EM22_Pos;
pub const EXTI_EMR_EM22: u32 = EXTI_EMR_EM22_Msk;
pub const EXTI_EMR_EM23_Pos: u32 = 23;
pub const EXTI_EMR_EM23_Msk: u32 = 0x1 << EXTI_EMR_EM23_Pos;
pub const EXTI_EMR_EM23: u32 = EXTI_EMR_EM23_Msk;
pub const EXTI_EMR_EM25_Pos: u32 = 25;
pub const EXTI_EMR_EM25_Msk: u32 = 0x1 << EXTI_EMR_EM25_Pos;
pub const EXTI_EMR_EM25: u32 = EXTI_EMR_EM25_Msk;
pub const EXTI_EMR_EM26_Pos: u32 = 26;
pub const EXTI_EMR_EM26_Msk: u32 = 0x1 << EXTI_EMR_EM26_Pos;
pub const EXTI_EMR_EM26: u32 = EXTI_EMR_EM26_Msk;
pub const EXTI_EMR_EM28_Pos: u32 = 28;
pub const EXTI_EMR_EM28_Msk: u32 = 0x1 << EXTI_EMR_EM28_Pos;
pub const EXTI_EMR_EM28: u32 = EXTI_EMR_EM28_Msk;
pub const EXTI_EMR_EM29_Pos: u32 = 29;
pub const EXTI_EMR_EM29_Msk: u32 = 0x1 << EXTI_EMR_EM29_Pos;
pub const EXTI_EMR_EM29: u32 = EXTI_EMR_EM29_Msk;
pub const EXTI_RTSR_RT0_Pos: u32 = 0;
pub const EXTI_RTSR_RT0_Msk: u32 = 0x1 << EXTI_RTSR_RT0_Pos;
pub const EXTI_RTSR_RT0: u32 = EXTI_RTSR_RT0_Msk;
pub const EXTI_RTSR_RT1_Pos: u32 = 1;
pub const EXTI_RTSR_RT1_Msk: u32 = 0x1 << EXTI_RTSR_RT1_Pos;
pub const EXTI_RTSR_RT1: u32 = EXTI_RTSR_RT1_Msk;
pub const EXTI_RTSR_RT2_Pos: u32 = 2;
pub const EXTI_RTSR_RT2_Msk: u32 = 0x1 << EXTI_RTSR_RT2_Pos;
pub const EXTI_RTSR_RT2: u32 = EXTI_RTSR_RT2_Msk;
pub const EXTI_RTSR_RT3_Pos: u32 = 3;
pub const EXTI_RTSR_RT3_Msk: u32 = 0x1 << EXTI_RTSR_RT3_Pos;
pub const EXTI_RTSR_RT3: u32 = EXTI_RTSR_RT3_Msk;
pub const EXTI_RTSR_RT4_Pos: u32 = 4;
pub const EXTI_RTSR_RT4_Msk: u32 = 0x1 << EXTI_RTSR_RT4_Pos;
pub const EXTI_RTSR_RT4: u32 = EXTI_RTSR_RT4_Msk;
pub const EXTI_RTSR_RT5_Pos: u32 = 5;
pub const EXTI_RTSR_RT5_Msk: u32 = 0x1 << EXTI_RTSR_RT5_Pos;
pub const EXTI_RTSR_RT5: u32 = EXTI_RTSR_RT5_Msk;
pub const EXTI_RTSR_RT6_Pos: u32 = 6;
pub const EXTI_RTSR_RT6_Msk: u32 = 0x1 << EXTI_RTSR_RT6_Pos;
pub const EXTI_RTSR_RT6: u32 = EXTI_RTSR_RT6_Msk;
pub const EXTI_RTSR_RT7_Pos: u32 = 7;
pub const EXTI_RTSR_RT7_Msk: u32 = 0x1 << EXTI_RTSR_RT7_Pos;
pub const EXTI_RTSR_RT7: u32 = EXTI_RTSR_RT7_Msk;
pub const EXTI_RTSR_RT8_Pos: u32 = 8;
pub const EXTI_RTSR_RT8_Msk: u32 = 0x1 << EXTI_RTSR_RT8_Pos;
pub const EXTI_RTSR_RT8: u32 = EXTI_RTSR_RT8_Msk;
pub const EXTI_RTSR_RT9_Pos: u32 = 9;
pub const EXTI_RTSR_RT9_Msk: u32 = 0x1 << EXTI_RTSR_RT9_Pos;
pub const EXTI_RTSR_RT9: u32 = EXTI_RTSR_RT9_Msk;
pub const EXTI_RTSR_RT10_Pos: u32 = 10;
pub const EXTI_RTSR_RT10_Msk: u32 = 0x1 << EXTI_RTSR_RT10_Pos;
pub const EXTI_RTSR_RT10: u32 = EXTI_RTSR_RT10_Msk;
pub const EXTI_RTSR_RT11_Pos: u32 = 11;
pub const EXTI_RTSR_RT11_Msk: u32 = 0x1 << EXTI_RTSR_RT11_Pos;
pub const EXTI_RTSR_RT11: u32 = EXTI_RTSR_RT11_Msk;
pub const EXTI_RTSR_RT12_Pos: u32 = 12;
pub const EXTI_RTSR_RT12_Msk: u32 = 0x1 << EXTI_RTSR_RT12_Pos;
pub const EXTI_RTSR_RT12: u32 = EXTI_RTSR_RT12_Msk;
pub const EXTI_RTSR_RT13_Pos: u32 = 13;
pub const EXTI_RTSR_RT13_Msk: u32 = 0x1 << EXTI_RTSR_RT13_Pos;
pub const EXTI_RTSR_RT13: u32 = EXTI_RTSR_RT13_Msk;
pub const EXTI_RTSR_RT14_Pos: u32 = 14;
pub const EXTI_RTSR_RT14_Msk: u32 = 0x1 << EXTI_RTSR_RT14_Pos;
pub const EXTI_RTSR_RT14: u32 = EXTI_RTSR_RT14_Msk;
pub const EXTI_RTSR_RT15_Pos: u32 = 15;
pub const EXTI_RTSR_RT15_Msk: u32 = 0x1 << EXTI_RTSR_RT15_Pos;
pub const EXTI_RTSR_RT15: u32 = EXTI_RTSR_RT15_Msk;
pub const EXTI_RTSR_RT16_Pos: u32 = 16;
pub const EXTI_RTSR_RT16_Msk: u32 = 0x1 << EXTI_RTSR_RT16_Pos;
pub const EXTI_RTSR_RT16: u32 = EXTI_RTSR_RT16_Msk;
pub const EXTI_RTSR_RT17_Pos: u32 = 17;
pub const EXTI_RTSR_RT17_Msk: u32 = 0x1 << EXTI_RTSR_RT17_Pos;
pub const EXTI_RTSR_RT17: u32 = EXTI_RTSR_RT17_Msk;
pub const EXTI_RTSR_RT19_Pos: u32 = 19;
pub const EXTI_RTSR_RT19_Msk: u32 = 0x1 << EXTI_RTSR_RT19_Pos;
pub const EXTI_RTSR_RT19: u32 = EXTI_RTSR_RT19_Msk;
pub const EXTI_RTSR_RT20_Pos: u32 = 20;
pub const EXTI_RTSR_RT20_Msk: u32 = 0x1 << EXTI_RTSR_RT20_Pos;
pub const EXTI_RTSR_RT20: u32 = EXTI_RTSR_RT20_Msk;
pub const EXTI_RTSR_RT21_Pos: u32 = 21;
pub const EXTI_RTSR_RT21_Msk: u32 = 0x1 << EXTI_RTSR_RT21_Pos;
pub const EXTI_RTSR_RT21: u32 = EXTI_RTSR_RT21_Msk;
pub const EXTI_RTSR_RT22_Pos: u32 = 22;
pub const EXTI_RTSR_RT22_Msk: u32 = 0x1 << EXTI_RTSR_RT22_Pos;
pub const EXTI_RTSR_RT22: u32 = EXTI_RTSR_RT22_Msk;
pub const EXTI_RTSR_TR0: u32 = EXTI_RTSR_RT0;
pub const EXTI_RTSR_TR1: u32 = EXTI_RTSR_RT1;
pub const EXTI_RTSR_TR2: u32 = EXTI_RTSR_RT2;
pub const EXTI_RTSR_TR3: u32 = EXTI_RTSR_RT3;
pub const EXTI_RTSR_TR4: u32 = EXTI_RTSR_RT4;
pub const EXTI_RTSR_TR5: u32 = EXTI_RTSR_RT5;
pub const EXTI_RTSR_TR6: u32 = EXTI_RTSR_RT6;
pub const EXTI_RTSR_TR7: u32 = EXTI_RTSR_RT7;
pub const EXTI_RTSR_TR8: u32 = EXTI_RTSR_RT8;
pub const EXTI_RTSR_TR9: u32 = EXTI_RTSR_RT9;
pub const EXTI_RTSR_TR10: u32 = EXTI_RTSR_RT10;
pub const EXTI_RTSR_TR11: u32 = EXTI_RTSR_RT11;
pub const EXTI_RTSR_TR12: u32 = EXTI_RTSR_RT12;
pub const EXTI_RTSR_TR13: u32 = EXTI_RTSR_RT13;
pub const EXTI_RTSR_TR14: u32 = EXTI_RTSR_RT14;
pub const EXTI_RTSR_TR15: u32 = EXTI_RTSR_RT15;
pub const EXTI_RTSR_TR16: u32 = EXTI_RTSR_RT16;
pub const EXTI_RTSR_TR17: u32 = EXTI_RTSR_RT17;
pub const EXTI_RTSR_TR19: u32 = EXTI_RTSR_RT19;
pub const EXTI_RTSR_TR20: u32 = EXTI_RTSR_RT20;
pub const EXTI_RTSR_TR21: u32 = EXTI_RTSR_RT21;
pub const EXTI_RTSR_TR22: u32 = EXTI_RTSR_RT22;
pub const EXTI_FTSR_FT0_Pos: u32 = 0;
pub const EXTI_FTSR_FT0_Msk: u32 = 0x1 << EXTI_FTSR_FT0_Pos;
pub const EXTI_FTSR_FT0: u32 = EXTI_FTSR_FT0_Msk;
pub const EXTI_FTSR_FT1_Pos: u32 = 1;
pub const EXTI_FTSR_FT1_Msk: u32 = 0x1 << EXTI_FTSR_FT1_Pos;
pub const EXTI_FTSR_FT1: u32 = EXTI_FTSR_FT1_Msk;
pub const EXTI_FTSR_FT2_Pos: u32 = 2;
pub const EXTI_FTSR_FT2_Msk: u32 = 0x1 << EXTI_FTSR_FT2_Pos;
pub const EXTI_FTSR_FT2: u32 = EXTI_FTSR_FT2_Msk;
pub const EXTI_FTSR_FT3_Pos: u32 = 3;
pub const EXTI_FTSR_FT3_Msk: u32 = 0x1 << EXTI_FTSR_FT3_Pos;
pub const EXTI_FTSR_FT3: u32 = EXTI_FTSR_FT3_Msk;
pub const EXTI_FTSR_FT4_Pos: u32 = 4;
pub const EXTI_FTSR_FT4_Msk: u32 = 0x1 << EXTI_FTSR_FT4_Pos;
pub const EXTI_FTSR_FT4: u32 = EXTI_FTSR_FT4_Msk;
pub const EXTI_FTSR_FT5_Pos: u32 = 5;
pub const EXTI_FTSR_FT5_Msk: u32 = 0x1 << EXTI_FTSR_FT5_Pos;
pub const EXTI_FTSR_FT5: u32 = EXTI_FTSR_FT5_Msk;
pub const EXTI_FTSR_FT6_Pos: u32 = 6;
pub const EXTI_FTSR_FT6_Msk: u32 = 0x1 << EXTI_FTSR_FT6_Pos;
pub const EXTI_FTSR_FT6: u32 = EXTI_FTSR_FT6_Msk;
pub const EXTI_FTSR_FT7_Pos: u32 = 7;
pub const EXTI_FTSR_FT7_Msk: u32 = 0x1 << EXTI_FTSR_FT7_Pos;
pub const EXTI_FTSR_FT7: u32 = EXTI_FTSR_FT7_Msk;
pub const EXTI_FTSR_FT8_Pos: u32 = 8;
pub const EXTI_FTSR_FT8_Msk: u32 = 0x1 << EXTI_FTSR_FT8_Pos;
pub const EXTI_FTSR_FT8: u32 = EXTI_FTSR_FT8_Msk;
pub const EXTI_FTSR_FT9_Pos: u32 = 9;
pub const EXTI_FTSR_FT9_Msk: u32 = 0x1 << EXTI_FTSR_FT9_Pos;
pub const EXTI_FTSR_FT9: u32 = EXTI_FTSR_FT9_Msk;
pub const EXTI_FTSR_FT10_Pos: u32 = 10;
pub const EXTI_FTSR_FT10_Msk: u32 = 0x1 << EXTI_FTSR_FT10_Pos;
pub const EXTI_FTSR_FT10: u32 = EXTI_FTSR_FT10_Msk;
pub const EXTI_FTSR_FT11_Pos: u32 = 11;
pub const EXTI_FTSR_FT11_Msk: u32 = 0x1 << EXTI_FTSR_FT11_Pos;
pub const EXTI_FTSR_FT11: u32 = EXTI_FTSR_FT11_Msk;
pub const EXTI_FTSR_FT12_Pos: u32 = 12;
pub const EXTI_FTSR_FT12_Msk: u32 = 0x1 << EXTI_FTSR_FT12_Pos;
pub const EXTI_FTSR_FT12: u32 = EXTI_FTSR_FT12_Msk;
pub const EXTI_FTSR_FT13_Pos: u32 = 13;
pub const EXTI_FTSR_FT13_Msk: u32 = 0x1 << EXTI_FTSR_FT13_Pos;
pub const EXTI_FTSR_FT13: u32 = EXTI_FTSR_FT13_Msk;
pub const EXTI_FTSR_FT14_Pos: u32 = 14;
pub const EXTI_FTSR_FT14_Msk: u32 = 0x1 << EXTI_FTSR_FT14_Pos;
pub const EXTI_FTSR_FT14: u32 = EXTI_FTSR_FT14_Msk;
pub const EXTI_FTSR_FT15_Pos: u32 = 15;
pub const EXTI_FTSR_FT15_Msk: u32 = 0x1 << EXTI_FTSR_FT15_Pos;
pub const EXTI_FTSR_FT15: u32 = EXTI_FTSR_FT15_Msk;
pub const EXTI_FTSR_FT16_Pos: u32 = 16;
pub const EXTI_FTSR_FT16_Msk: u32 = 0x1 << EXTI_FTSR_FT16_Pos;
pub const EXTI_FTSR_FT16: u32 = EXTI_FTSR_FT16_Msk;
pub const EXTI_FTSR_FT17_Pos: u32 = 17;
pub const EXTI_FTSR_FT17_Msk: u32 = 0x1 << EXTI_FTSR_FT17_Pos;
pub const EXTI_FTSR_FT17: u32 = EXTI_FTSR_FT17_Msk;
pub const EXTI_FTSR_FT19_Pos: u32 = 19;
pub const EXTI_FTSR_FT19_Msk: u32 = 0x1 << EXTI_FTSR_FT19_Pos;
pub const EXTI_FTSR_FT19: u32 = EXTI_FTSR_FT19_Msk;
pub const EXTI_FTSR_FT20_Pos: u32 = 20;
pub const EXTI_FTSR_FT20_Msk: u32 = 0x1 << EXTI_FTSR_FT20_Pos;
pub const EXTI_FTSR_FT20: u32 = EXTI_FTSR_FT20_Msk;
pub const EXTI_FTSR_FT21_Pos: u32 = 21;
pub const EXTI_FTSR_FT21_Msk: u32 = 0x1 << EXTI_FTSR_FT21_Pos;
pub const EXTI_FTSR_FT21: u32 = EXTI_FTSR_FT21_Msk;
pub const EXTI_FTSR_FT22_Pos: u32 = 22;
pub const EXTI_FTSR_FT22_Msk: u32 = 0x1 << EXTI_FTSR_FT22_Pos;
pub const EXTI_FTSR_FT22: u32 = EXTI_FTSR_FT22_Msk;
pub const EXTI_FTSR_TR0: u32 = EXTI_FTSR_FT0;
pub const EXTI_FTSR_TR1: u32 = EXTI_FTSR_FT1;
pub const EXTI_FTSR_TR2: u32 = EXTI_FTSR_FT2;
pub const EXTI_FTSR_TR3: u32 = EXTI_FTSR_FT3;
pub const EXTI_FTSR_TR4: u32 = EXTI_FTSR_FT4;
pub const EXTI_FTSR_TR5: u32 = EXTI_FTSR_FT5;
pub const EXTI_FTSR_TR6: u32 = EXTI_FTSR_FT6;
pub const EXTI_FTSR_TR7: u32 = EXTI_FTSR_FT7;
pub const EXTI_FTSR_TR8: u32 = EXTI_FTSR_FT8;
pub const EXTI_FTSR_TR9: u32 = EXTI_FTSR_FT9;
pub const EXTI_FTSR_TR10: u32 = EXTI_FTSR_FT10;
pub const EXTI_FTSR_TR11: u32 = EXTI_FTSR_FT11;
pub const EXTI_FTSR_TR12: u32 = EXTI_FTSR_FT12;
pub const EXTI_FTSR_TR13: u32 = EXTI_FTSR_FT13;
pub const EXTI_FTSR_TR14: u32 = EXTI_FTSR_FT14;
pub const EXTI_FTSR_TR15: u32 = EXTI_FTSR_FT15;
pub const EXTI_FTSR_TR16: u32 = EXTI_FTSR_FT16;
pub const EXTI_FTSR_TR17: u32 = EXTI_FTSR_FT17;
pub const EXTI_FTSR_TR19: u32 = EXTI_FTSR_FT19;
pub const EXTI_FTSR_TR20: u32 = EXTI_FTSR_FT20;
pub const EXTI_FTSR_TR21: u32 = EXTI_FTSR_FT21;
pub const EXTI_FTSR_TR22: u32 = EXTI_FTSR_FT22;
pub const EXTI_SWIER_SWI0_Pos: u32 = 0;
pub const EXTI_SWIER_SWI0_Msk: u32 = 0x1 << EXTI_SWIER_SWI0_Pos;
pub const EXTI_SWIER_SWI0: u32 = EXTI_SWIER_SWI0_Msk;
pub const EXTI_SWIER_SWI1_Pos: u32 = 1;
pub const EXTI_SWIER_SWI1_Msk: u32 = 0x1 << EXTI_SWIER_SWI1_Pos;
pub const EXTI_SWIER_SWI1: u32 = EXTI_SWIER_SWI1_Msk;
pub const EXTI_SWIER_SWI2_Pos: u32 = 2;
pub const EXTI_SWIER_SWI2_Msk: u32 = 0x1 << EXTI_SWIER_SWI2_Pos;
pub const EXTI_SWIER_SWI2: u32 = EXTI_SWIER_SWI2_Msk;
pub const EXTI_SWIER_SWI3_Pos: u32 = 3;
pub const EXTI_SWIER_SWI3_Msk: u32 = 0x1 << EXTI_SWIER_SWI3_Pos;
pub const EXTI_SWIER_SWI3: u32 = EXTI_SWIER_SWI3_Msk;
pub const EXTI_SWIER_SWI4_Pos: u32 = 4;
pub const EXTI_SWIER_SWI4_Msk: u32 = 0x1 << EXTI_SWIER_SWI4_Pos;
pub const EXTI_SWIER_SWI4: u32 = EXTI_SWIER_SWI4_Msk;
pub const EXTI_SWIER_SWI5_Pos: u32 = 5;
pub const EXTI_SWIER_SWI5_Msk: u32 = 0x1 << EXTI_SWIER_SWI5_Pos;
pub const EXTI_SWIER_SWI5: u32 = EXTI_SWIER_SWI5_Msk;
pub const EXTI_SWIER_SWI6_Pos: u32 = 6;
pub const EXTI_SWIER_SWI6_Msk: u32 = 0x1 << EXTI_SWIER_SWI6_Pos;
pub const EXTI_SWIER_SWI6: u32 = EXTI_SWIER_SWI6_Msk;
pub const EXTI_SWIER_SWI7_Pos: u32 = 7;
pub const EXTI_SWIER_SWI7_Msk: u32 = 0x1 << EXTI_SWIER_SWI7_Pos;
pub const EXTI_SWIER_SWI7: u32 = EXTI_SWIER_SWI7_Msk;
pub const EXTI_SWIER_SWI8_Pos: u32 = 8;
pub const EXTI_SWIER_SWI8_Msk: u32 = 0x1 << EXTI_SWIER_SWI8_Pos;
pub const EXTI_SWIER_SWI8: u32 = EXTI_SWIER_SWI8_Msk;
pub const EXTI_SWIER_SWI9_Pos: u32 = 9;
pub const EXTI_SWIER_SWI9_Msk: u32 = 0x1 << EXTI_SWIER_SWI9_Pos;
pub const EXTI_SWIER_SWI9: u32 = EXTI_SWIER_SWI9_Msk;
pub const EXTI_SWIER_SWI10_Pos: u32 = 10;
pub const EXTI_SWIER_SWI10_Msk: u32 = 0x1 << EXTI_SWIER_SWI10_Pos;
pub const EXTI_SWIER_SWI10: u32 = EXTI_SWIER_SWI10_Msk;
pub const EXTI_SWIER_SWI11_Pos: u32 = 11;
pub const EXTI_SWIER_SWI11_Msk: u32 = 0x1 << EXTI_SWIER_SWI11_Pos;
pub const EXTI_SWIER_SWI11: u32 = EXTI_SWIER_SWI11_Msk;
pub const EXTI_SWIER_SWI12_Pos: u32 = 12;
pub const EXTI_SWIER_SWI12_Msk: u32 = 0x1 << EXTI_SWIER_SWI12_Pos;
pub const EXTI_SWIER_SWI12: u32 = EXTI_SWIER_SWI12_Msk;
pub const EXTI_SWIER_SWI13_Pos: u32 = 13;
pub const EXTI_SWIER_SWI13_Msk: u32 = 0x1 << EXTI_SWIER_SWI13_Pos;
pub const EXTI_SWIER_SWI13: u32 = EXTI_SWIER_SWI13_Msk;
pub const EXTI_SWIER_SWI14_Pos: u32 = 14;
pub const EXTI_SWIER_SWI14_Msk: u32 = 0x1 << EXTI_SWIER_SWI14_Pos;
pub const EXTI_SWIER_SWI14: u32 = EXTI_SWIER_SWI14_Msk;
pub const EXTI_SWIER_SWI15_Pos: u32 = 15;
pub const EXTI_SWIER_SWI15_Msk: u32 = 0x1 << EXTI_SWIER_SWI15_Pos;
pub const EXTI_SWIER_SWI15: u32 = EXTI_SWIER_SWI15_Msk;
pub const EXTI_SWIER_SWI16_Pos: u32 = 16;
pub const EXTI_SWIER_SWI16_Msk: u32 = 0x1 << EXTI_SWIER_SWI16_Pos;
pub const EXTI_SWIER_SWI16: u32 = EXTI_SWIER_SWI16_Msk;
pub const EXTI_SWIER_SWI17_Pos: u32 = 17;
pub const EXTI_SWIER_SWI17_Msk: u32 = 0x1 << EXTI_SWIER_SWI17_Pos;
pub const EXTI_SWIER_SWI17: u32 = EXTI_SWIER_SWI17_Msk;
pub const EXTI_SWIER_SWI19_Pos: u32 = 19;
pub const EXTI_SWIER_SWI19_Msk: u32 = 0x1 << EXTI_SWIER_SWI19_Pos;
pub const EXTI_SWIER_SWI19: u32 = EXTI_SWIER_SWI19_Msk;
pub const EXTI_SWIER_SWI20_Pos: u32 = 20;
pub const EXTI_SWIER_SWI20_Msk: u32 = 0x1 << EXTI_SWIER_SWI20_Pos;
pub const EXTI_SWIER_SWI20: u32 = EXTI_SWIER_SWI20_Msk;
pub const EXTI_SWIER_SWI21_Pos: u32 = 21;
pub const EXTI_SWIER_SWI21_Msk: u32 = 0x1 << EXTI_SWIER_SWI21_Pos;
pub const EXTI_SWIER_SWI21: u32 = EXTI_SWIER_SWI21_Msk;
pub const EXTI_SWIER_SWI22_Pos: u32 = 22;
pub const EXTI_SWIER_SWI22_Msk: u32 = 0x1 << EXTI_SWIER_SWI22_Pos;
pub const EXTI_SWIER_SWI22: u32 = EXTI_SWIER_SWI22_Msk;
pub const EXTI_SWIER_SWIER0: u32 = EXTI_SWIER_SWI0;
pub const EXTI_SWIER_SWIER1: u32 = EXTI_SWIER_SWI1;
pub const EXTI_SWIER_SWIER2: u32 = EXTI_SWIER_SWI2;
pub const EXTI_SWIER_SWIER3: u32 = EXTI_SWIER_SWI3;
pub const EXTI_SWIER_SWIER4: u32 = EXTI_SWIER_SWI4;
pub const EXTI_SWIER_SWIER5: u32 = EXTI_SWIER_SWI5;
pub const EXTI_SWIER_SWIER6: u32 = EXTI_SWIER_SWI6;
pub const EXTI_SWIER_SWIER7: u32 = EXTI_SWIER_SWI7;
pub const EXTI_SWIER_SWIER8: u32 = EXTI_SWIER_SWI8;
pub const EXTI_SWIER_SWIER9: u32 = EXTI_SWIER_SWI9;
pub const EXTI_SWIER_SWIER10: u32 = EXTI_SWIER_SWI10;
pub const EXTI_SWIER_SWIER11: u32 = EXTI_SWIER_SWI11;
pub const EXTI_SWIER_SWIER12: u32 = EXTI_SWIER_SWI12;
pub const EXTI_SWIER_SWIER13: u32 = EXTI_SWIER_SWI13;
pub const EXTI_SWIER_SWIER14: u32 = EXTI_SWIER_SWI14;
pub const EXTI_SWIER_SWIER15: u32 = EXTI_SWIER_SWI15;
pub const EXTI_SWIER_SWIER16: u32 = EXTI_SWIER_SWI16;
pub const EXTI_SWIER_SWIER17: u32 = EXTI_SWIER_SWI17;
pub const EXTI_SWIER_SWIER19: u32 = EXTI_SWIER_SWI19;
pub const EXTI_SWIER_SWIER20: u32 = EXTI_SWIER_SWI20;
pub const EXTI_SWIER_SWIER21: u32 = EXTI_SWIER_SWI21;
pub const EXTI_SWIER_SWIER22: u32 = EXTI_SWIER_SWI22;
pub const EXTI_PR_PIF0_Pos: u32 = 0;
pub const EXTI_PR_PIF0_Msk: u32 = 0x1 << EXTI_PR_PIF0_Pos;
pub const EXTI_PR_PIF0: u32 = EXTI_PR_PIF0_Msk;
pub const EXTI_PR_PIF1_Pos: u32 = 1;
pub const EXTI_PR_PIF1_Msk: u32 = 0x1 << EXTI_PR_PIF1_Pos;
pub const EXTI_PR_PIF1: u32 = EXTI_PR_PIF1_Msk;
pub const EXTI_PR_PIF2_Pos: u32 = 2;
pub const EXTI_PR_PIF2_Msk: u32 = 0x1 << EXTI_PR_PIF2_Pos;
pub const EXTI_PR_PIF2: u32 = EXTI_PR_PIF2_Msk;
pub const EXTI_PR_PIF3_Pos: u32 = 3;
pub const EXTI_PR_PIF3_Msk: u32 = 0x1 << EXTI_PR_PIF3_Pos;
pub const EXTI_PR_PIF3: u32 = EXTI_PR_PIF3_Msk;
pub const EXTI_PR_PIF4_Pos: u32 = 4;
pub const EXTI_PR_PIF4_Msk: u32 = 0x1 << EXTI_PR_PIF4_Pos;
pub const EXTI_PR_PIF4: u32 = EXTI_PR_PIF4_Msk;
pub const EXTI_PR_PIF5_Pos: u32 = 5;
pub const EXTI_PR_PIF5_Msk: u32 = 0x1 << EXTI_PR_PIF5_Pos;
pub const EXTI_PR_PIF5: u32 = EXTI_PR_PIF5_Msk;
pub const EXTI_PR_PIF6_Pos: u32 = 6;
pub const EXTI_PR_PIF6_Msk: u32 = 0x1 << EXTI_PR_PIF6_Pos;
pub const EXTI_PR_PIF6: u32 = EXTI_PR_PIF6_Msk;
pub const EXTI_PR_PIF7_Pos: u32 = 7;
pub const EXTI_PR_PIF7_Msk: u32 = 0x1 << EXTI_PR_PIF7_Pos;
pub const EXTI_PR_PIF7: u32 = EXTI_PR_PIF7_Msk;
pub const EXTI_PR_PIF8_Pos: u32 = 8;
pub const EXTI_PR_PIF8_Msk: u32 = 0x1 << EXTI_PR_PIF8_Pos;
pub const EXTI_PR_PIF8: u32 = EXTI_PR_PIF8_Msk;
pub const EXTI_PR_PIF9_Pos: u32 = 9;
pub const EXTI_PR_PIF9_Msk: u32 = 0x1 << EXTI_PR_PIF9_Pos;
pub const EXTI_PR_PIF9: u32 = EXTI_PR_PIF9_Msk;
pub const EXTI_PR_PIF10_Pos: u32 = 10;
pub const EXTI_PR_PIF10_Msk: u32 = 0x1 << EXTI_PR_PIF10_Pos;
pub const EXTI_PR_PIF10: u32 = EXTI_PR_PIF10_Msk;
pub const EXTI_PR_PIF11_Pos: u32 = 11;
pub const EXTI_PR_PIF11_Msk: u32 = 0x1 << EXTI_PR_PIF11_Pos;
pub const EXTI_PR_PIF11: u32 = EXTI_PR_PIF11_Msk;
pub const EXTI_PR_PIF12_Pos: u32 = 12;
pub const EXTI_PR_PIF12_Msk: u32 = 0x1 << EXTI_PR_PIF12_Pos;
pub const EXTI_PR_PIF12: u32 = EXTI_PR_PIF12_Msk;
pub const EXTI_PR_PIF13_Pos: u32 = 13;
pub const EXTI_PR_PIF13_Msk: u32 = 0x1 << EXTI_PR_PIF13_Pos;
pub const EXTI_PR_PIF13: u32 = EXTI_PR_PIF13_Msk;
pub const EXTI_PR_PIF14_Pos: u32 = 14;
pub const EXTI_PR_PIF14_Msk: u32 = 0x1 << EXTI_PR_PIF14_Pos;
pub const EXTI_PR_PIF14: u32 = EXTI_PR_PIF14_Msk;
pub const EXTI_PR_PIF15_Pos: u32 = 15;
pub const EXTI_PR_PIF15_Msk: u32 = 0x1 << EXTI_PR_PIF15_Pos;
pub const EXTI_PR_PIF15: u32 = EXTI_PR_PIF15_Msk;
pub const EXTI_PR_PIF16_Pos: u32 = 16;
pub const EXTI_PR_PIF16_Msk: u32 = 0x1 << EXTI_PR_PIF16_Pos;
pub const EXTI_PR_PIF16: u32 = EXTI_PR_PIF16_Msk;
pub const EXTI_PR_PIF17_Pos: u32 = 17;
pub const EXTI_PR_PIF17_Msk: u32 = 0x1 << EXTI_PR_PIF17_Pos;
pub const EXTI_PR_PIF17: u32 = EXTI_PR_PIF17_Msk;
pub const EXTI_PR_PIF19_Pos: u32 = 19;
pub const EXTI_PR_PIF19_Msk: u32 = 0x1 << EXTI_PR_PIF19_Pos;
pub const EXTI_PR_PIF19: u32 = EXTI_PR_PIF19_Msk;
pub const EXTI_PR_PIF20_Pos: u32 = 20;
pub const EXTI_PR_PIF20_Msk: u32 = 0x1 << EXTI_PR_PIF20_Pos;
pub const EXTI_PR_PIF20: u32 = EXTI_PR_PIF20_Msk;
pub const EXTI_PR_PIF21_Pos: u32 = 21;
pub const EXTI_PR_PIF21_Msk: u32 = 0x1 << EXTI_PR_PIF21_Pos;
pub const EXTI_PR_PIF21: u32 = EXTI_PR_PIF21_Msk;
pub const EXTI_PR_PIF22_Pos: u32 = 22;
pub const EXTI_PR_PIF22_Msk: u32 = 0x1 << EXTI_PR_PIF22_Pos;
pub const EXTI_PR_PIF22: u32 = EXTI_PR_PIF22_Msk;
pub const EXTI_PR_PR0: u32 = EXTI_PR_PIF0;
pub const EXTI_PR_PR1: u32 = EXTI_PR_PIF1;
pub const EXTI_PR_PR2: u32 = EXTI_PR_PIF2;
pub const EXTI_PR_PR3: u32 = EXTI_PR_PIF3;
pub const EXTI_PR_PR4: u32 = EXTI_PR_PIF4;
pub const EXTI_PR_PR5: u32 = EXTI_PR_PIF5;
pub const EXTI_PR_PR6: u32 = EXTI_PR_PIF6;
pub const EXTI_PR_PR7: u32 = EXTI_PR_PIF7;
pub const EXTI_PR_PR8: u32 = EXTI_PR_PIF8;
pub const EXTI_PR_PR9: u32 = EXTI_PR_PIF9;
pub const EXTI_PR_PR10: u32 = EXTI_PR_PIF10;
pub const EXTI_PR_PR11: u32 = EXTI_PR_PIF11;
pub const EXTI_PR_PR12: u32 = EXTI_PR_PIF12;
pub const EXTI_PR_PR13: u32 = EXTI_PR_PIF13;
pub const EXTI_PR_PR14: u32 = EXTI_PR_PIF14;
pub const EXTI_PR_PR15: u32 = EXTI_PR_PIF15;
pub const EXTI_PR_PR16: u32 = EXTI_PR_PIF16;
pub const EXTI_PR_PR17: u32 = EXTI_PR_PIF17;
pub const EXTI_PR_PR19: u32 = EXTI_PR_PIF19;
pub const EXTI_PR_PR20: u32 = EXTI_PR_PIF20;
pub const EXTI_PR_PR21: u32 = EXTI_PR_PIF21;
pub const EXTI_PR_PR22: u32 = EXTI_PR_PIF22;
pub const FLASH_ACR_LATENCY_Pos: u32 = 0;
pub const FLASH_ACR_LATENCY_Msk: u32 = 0x1 << FLASH_ACR_LATENCY_Pos;
pub const FLASH_ACR_LATENCY: u32 = FLASH_ACR_LATENCY_Msk;
pub const FLASH_ACR_PRFTEN_Pos: u32 = 1;
pub const FLASH_ACR_PRFTEN_Msk: u32 = 0x1 << FLASH_ACR_PRFTEN_Pos;
pub const FLASH_ACR_PRFTEN: u32 = FLASH_ACR_PRFTEN_Msk;
pub const FLASH_ACR_SLEEP_PD_Pos: u32 = 3;
pub const FLASH_ACR_SLEEP_PD_Msk: u32 = 0x1 << FLASH_ACR_SLEEP_PD_Pos;
pub const FLASH_ACR_SLEEP_PD: u32 = FLASH_ACR_SLEEP_PD_Msk;
pub const FLASH_ACR_RUN_PD_Pos: u32 = 4;
pub const FLASH_ACR_RUN_PD_Msk: u32 = 0x1 << FLASH_ACR_RUN_PD_Pos;
pub const FLASH_ACR_RUN_PD: u32 = FLASH_ACR_RUN_PD_Msk;
pub const FLASH_ACR_DISAB_BUF_Pos: u32 = 5;
pub const FLASH_ACR_DISAB_BUF_Msk: u32 = 0x1 << FLASH_ACR_DISAB_BUF_Pos;
pub const FLASH_ACR_DISAB_BUF: u32 = FLASH_ACR_DISAB_BUF_Msk;
pub const FLASH_ACR_PRE_READ_Pos: u32 = 6;
pub const FLASH_ACR_PRE_READ_Msk: u32 = 0x1 << FLASH_ACR_PRE_READ_Pos;
pub const FLASH_ACR_PRE_READ: u32 = FLASH_ACR_PRE_READ_Msk;
pub const FLASH_PECR_PELOCK_Pos: u32 = 0;
pub const FLASH_PECR_PELOCK_Msk: u32 = 0x1 << FLASH_PECR_PELOCK_Pos;
pub const FLASH_PECR_PELOCK: u32 = FLASH_PECR_PELOCK_Msk;
pub const FLASH_PECR_PRGLOCK_Pos: u32 = 1;
pub const FLASH_PECR_PRGLOCK_Msk: u32 = 0x1 << FLASH_PECR_PRGLOCK_Pos;
pub const FLASH_PECR_PRGLOCK: u32 = FLASH_PECR_PRGLOCK_Msk;
pub const FLASH_PECR_OPTLOCK_Pos: u32 = 2;
pub const FLASH_PECR_OPTLOCK_Msk: u32 = 0x1 << FLASH_PECR_OPTLOCK_Pos;
pub const FLASH_PECR_OPTLOCK: u32 = FLASH_PECR_OPTLOCK_Msk;
pub const FLASH_PECR_PROG_Pos: u32 = 3;
pub const FLASH_PECR_PROG_Msk: u32 = 0x1 << FLASH_PECR_PROG_Pos;
pub const FLASH_PECR_PROG: u32 = FLASH_PECR_PROG_Msk;
pub const FLASH_PECR_DATA_Pos: u32 = 4;
pub const FLASH_PECR_DATA_Msk: u32 = 0x1 << FLASH_PECR_DATA_Pos;
pub const FLASH_PECR_DATA: u32 = FLASH_PECR_DATA_Msk;
pub const FLASH_PECR_FIX_Pos: u32 = 8;
pub const FLASH_PECR_FIX_Msk: u32 = 0x1 << FLASH_PECR_FIX_Pos;
pub const FLASH_PECR_FIX: u32 = FLASH_PECR_FIX_Msk;
pub const FLASH_PECR_ERASE_Pos: u32 = 9;
pub const FLASH_PECR_ERASE_Msk: u32 = 0x1 << FLASH_PECR_ERASE_Pos;
pub const FLASH_PECR_ERASE: u32 = FLASH_PECR_ERASE_Msk;
pub const FLASH_PECR_FPRG_Pos: u32 = 10;
pub const FLASH_PECR_FPRG_Msk: u32 = 0x1 << FLASH_PECR_FPRG_Pos;
pub const FLASH_PECR_FPRG: u32 = FLASH_PECR_FPRG_Msk;
pub const FLASH_PECR_EOPIE_Pos: u32 = 16;
pub const FLASH_PECR_EOPIE_Msk: u32 = 0x1 << FLASH_PECR_EOPIE_Pos;
pub const FLASH_PECR_EOPIE: u32 = FLASH_PECR_EOPIE_Msk;
pub const FLASH_PECR_ERRIE_Pos: u32 = 17;
pub const FLASH_PECR_ERRIE_Msk: u32 = 0x1 << FLASH_PECR_ERRIE_Pos;
pub const FLASH_PECR_ERRIE: u32 = FLASH_PECR_ERRIE_Msk;
pub const FLASH_PECR_OBL_LAUNCH_Pos: u32 = 18;
pub const FLASH_PECR_OBL_LAUNCH_Msk: u32 = 0x1 << FLASH_PECR_OBL_LAUNCH_Pos;
pub const FLASH_PECR_OBL_LAUNCH: u32 = FLASH_PECR_OBL_LAUNCH_Msk;
pub const FLASH_PECR_HALF_ARRAY_Pos: u32 = 19;
pub const FLASH_PECR_HALF_ARRAY_Msk: u32 = 0x1 << FLASH_PECR_HALF_ARRAY_Pos;
pub const FLASH_PECR_HALF_ARRAY: u32 = FLASH_PECR_HALF_ARRAY_Msk;
pub const FLASH_PDKEYR_PDKEYR_Pos: u32 = 0;
pub const FLASH_PDKEYR_PDKEYR_Msk: u32 = 0xFFFFFFFF << FLASH_PDKEYR_PDKEYR_Pos;
pub const FLASH_PDKEYR_PDKEYR: u32 = FLASH_PDKEYR_PDKEYR_Msk;
pub const FLASH_PEKEYR_PEKEYR_Pos: u32 = 0;
pub const FLASH_PEKEYR_PEKEYR_Msk: u32 = 0xFFFFFFFF << FLASH_PEKEYR_PEKEYR_Pos;
pub const FLASH_PEKEYR_PEKEYR: u32 = FLASH_PEKEYR_PEKEYR_Msk;
pub const FLASH_PRGKEYR_PRGKEYR_Pos: u32 = 0;
pub const FLASH_PRGKEYR_PRGKEYR_Msk: u32 = 0xFFFFFFFF << FLASH_PRGKEYR_PRGKEYR_Pos;
pub const FLASH_PRGKEYR_PRGKEYR: u32 = FLASH_PRGKEYR_PRGKEYR_Msk;
pub const FLASH_OPTKEYR_OPTKEYR_Pos: u32 = 0;
pub const FLASH_OPTKEYR_OPTKEYR_Msk: u32 = 0xFFFFFFFF << FLASH_OPTKEYR_OPTKEYR_Pos;
pub const FLASH_OPTKEYR_OPTKEYR: u32 = FLASH_OPTKEYR_OPTKEYR_Msk;
pub const FLASH_SR_BSY_Pos: u32 = 0;
pub const FLASH_SR_BSY_Msk: u32 = 0x1 << FLASH_SR_BSY_Pos;
pub const FLASH_SR_BSY: u32 = FLASH_SR_BSY_Msk;
pub const FLASH_SR_EOP_Pos: u32 = 1;
pub const FLASH_SR_EOP_Msk: u32 = 0x1 << FLASH_SR_EOP_Pos;
pub const FLASH_SR_EOP: u32 = FLASH_SR_EOP_Msk;
pub const FLASH_SR_HVOFF_Pos: u32 = 2;
pub const FLASH_SR_HVOFF_Msk: u32 = 0x1 << FLASH_SR_HVOFF_Pos;
pub const FLASH_SR_HVOFF: u32 = FLASH_SR_HVOFF_Msk;
pub const FLASH_SR_READY_Pos: u32 = 3;
pub const FLASH_SR_READY_Msk: u32 = 0x1 << FLASH_SR_READY_Pos;
pub const FLASH_SR_READY: u32 = FLASH_SR_READY_Msk;
pub const FLASH_SR_WRPERR_Pos: u32 = 8;
pub const FLASH_SR_WRPERR_Msk: u32 = 0x1 << FLASH_SR_WRPERR_Pos;
pub const FLASH_SR_WRPERR: u32 = FLASH_SR_WRPERR_Msk;
pub const FLASH_SR_PGAERR_Pos: u32 = 9;
pub const FLASH_SR_PGAERR_Msk: u32 = 0x1 << FLASH_SR_PGAERR_Pos;
pub const FLASH_SR_PGAERR: u32 = FLASH_SR_PGAERR_Msk;
pub const FLASH_SR_SIZERR_Pos: u32 = 10;
pub const FLASH_SR_SIZERR_Msk: u32 = 0x1 << FLASH_SR_SIZERR_Pos;
pub const FLASH_SR_SIZERR: u32 = FLASH_SR_SIZERR_Msk;
pub const FLASH_SR_OPTVERR_Pos: u32 = 11;
pub const FLASH_SR_OPTVERR_Msk: u32 = 0x1 << FLASH_SR_OPTVERR_Pos;
pub const FLASH_SR_OPTVERR: u32 = FLASH_SR_OPTVERR_Msk;
pub const FLASH_SR_RDERR_Pos: u32 = 13;
pub const FLASH_SR_RDERR_Msk: u32 = 0x1 << FLASH_SR_RDERR_Pos;
pub const FLASH_SR_RDERR: u32 = FLASH_SR_RDERR_Msk;
pub const FLASH_SR_NOTZEROERR_Pos: u32 = 16;
pub const FLASH_SR_NOTZEROERR_Msk: u32 = 0x1 << FLASH_SR_NOTZEROERR_Pos;
pub const FLASH_SR_NOTZEROERR: u32 = FLASH_SR_NOTZEROERR_Msk;
pub const FLASH_SR_FWWERR_Pos: u32 = 17;
pub const FLASH_SR_FWWERR_Msk: u32 = 0x1 << FLASH_SR_FWWERR_Pos;
pub const FLASH_SR_FWWERR: u32 = FLASH_SR_FWWERR_Msk;
pub const FLASH_SR_FWWER: u32 = FLASH_SR_FWWERR;
pub const FLASH_SR_ENHV: u32 = FLASH_SR_HVOFF;
pub const FLASH_SR_ENDHV: u32 = FLASH_SR_HVOFF;
pub const FLASH_OPTR_RDPROT_Pos: u32 = 0;
pub const FLASH_OPTR_RDPROT_Msk: u32 = 0xFF << FLASH_OPTR_RDPROT_Pos;
pub const FLASH_OPTR_RDPROT: u32 = FLASH_OPTR_RDPROT_Msk;
pub const FLASH_OPTR_WPRMOD_Pos: u32 = 8;
pub const FLASH_OPTR_WPRMOD_Msk: u32 = 0x1 << FLASH_OPTR_WPRMOD_Pos;
pub const FLASH_OPTR_WPRMOD: u32 = FLASH_OPTR_WPRMOD_Msk;
pub const FLASH_OPTR_BOR_LEV_Pos: u32 = 16;
pub const FLASH_OPTR_BOR_LEV_Msk: u32 = 0xF << FLASH_OPTR_BOR_LEV_Pos;
pub const FLASH_OPTR_BOR_LEV: u32 = FLASH_OPTR_BOR_LEV_Msk;
pub const FLASH_OPTR_IWDG_SW_Pos: u32 = 20;
pub const FLASH_OPTR_IWDG_SW_Msk: u32 = 0x1 << FLASH_OPTR_IWDG_SW_Pos;
pub const FLASH_OPTR_IWDG_SW: u32 = FLASH_OPTR_IWDG_SW_Msk;
pub const FLASH_OPTR_nRST_STOP_Pos: u32 = 21;
pub const FLASH_OPTR_nRST_STOP_Msk: u32 = 0x1 << FLASH_OPTR_nRST_STOP_Pos;
pub const FLASH_OPTR_nRST_STOP: u32 = FLASH_OPTR_nRST_STOP_Msk;
pub const FLASH_OPTR_nRST_STDBY_Pos: u32 = 22;
pub const FLASH_OPTR_nRST_STDBY_Msk: u32 = 0x1 << FLASH_OPTR_nRST_STDBY_Pos;
pub const FLASH_OPTR_nRST_STDBY: u32 = FLASH_OPTR_nRST_STDBY_Msk;
pub const FLASH_OPTR_USER_Pos: u32 = 20;
pub const FLASH_OPTR_USER_Msk: u32 = 0x7 << FLASH_OPTR_USER_Pos;
pub const FLASH_OPTR_USER: u32 = FLASH_OPTR_USER_Msk;
pub const FLASH_OPTR_BOOT1_Pos: u32 = 31;
pub const FLASH_OPTR_BOOT1_Msk: u32 = 0x1 << FLASH_OPTR_BOOT1_Pos;
pub const FLASH_OPTR_BOOT1: u32 = FLASH_OPTR_BOOT1_Msk;
pub const FLASH_WRPR_WRP_Pos: u32 = 0;
pub const FLASH_WRPR_WRP_Msk: u32 = 0xFFFF << FLASH_WRPR_WRP_Pos;
pub const FLASH_WRPR_WRP: u32 = FLASH_WRPR_WRP_Msk;
pub const GPIO_MODER_MODE0_Pos: u32 = 0;
pub const GPIO_MODER_MODE0_Msk: u32 = 0x3 << GPIO_MODER_MODE0_Pos;
pub const GPIO_MODER_MODE0: u32 = GPIO_MODER_MODE0_Msk;
pub const GPIO_MODER_MODE0_0: u32 = 0x1 << GPIO_MODER_MODE0_Pos;
pub const GPIO_MODER_MODE0_1: u32 = 0x2 << GPIO_MODER_MODE0_Pos;
pub const GPIO_MODER_MODE1_Pos: u32 = 2;
pub const GPIO_MODER_MODE1_Msk: u32 = 0x3 << GPIO_MODER_MODE1_Pos;
pub const GPIO_MODER_MODE1: u32 = GPIO_MODER_MODE1_Msk;
pub const GPIO_MODER_MODE1_0: u32 = 0x1 << GPIO_MODER_MODE1_Pos;
pub const GPIO_MODER_MODE1_1: u32 = 0x2 << GPIO_MODER_MODE1_Pos;
pub const GPIO_MODER_MODE2_Pos: u32 = 4;
pub const GPIO_MODER_MODE2_Msk: u32 = 0x3 << GPIO_MODER_MODE2_Pos;
pub const GPIO_MODER_MODE2: u32 = GPIO_MODER_MODE2_Msk;
pub const GPIO_MODER_MODE2_0: u32 = 0x1 << GPIO_MODER_MODE2_Pos;
pub const GPIO_MODER_MODE2_1: u32 = 0x2 << GPIO_MODER_MODE2_Pos;
pub const GPIO_MODER_MODE3_Pos: u32 = 6;
pub const GPIO_MODER_MODE3_Msk: u32 = 0x3 << GPIO_MODER_MODE3_Pos;
pub const GPIO_MODER_MODE3: u32 = GPIO_MODER_MODE3_Msk;
pub const GPIO_MODER_MODE3_0: u32 = 0x1 << GPIO_MODER_MODE3_Pos;
pub const GPIO_MODER_MODE3_1: u32 = 0x2 << GPIO_MODER_MODE3_Pos;
pub const GPIO_MODER_MODE4_Pos: u32 = 8;
pub const GPIO_MODER_MODE4_Msk: u32 = 0x3 << GPIO_MODER_MODE4_Pos;
pub const GPIO_MODER_MODE4: u32 = GPIO_MODER_MODE4_Msk;
pub const GPIO_MODER_MODE4_0: u32 = 0x1 << GPIO_MODER_MODE4_Pos;
pub const GPIO_MODER_MODE4_1: u32 = 0x2 << GPIO_MODER_MODE4_Pos;
pub const GPIO_MODER_MODE5_Pos: u32 = 10;
pub const GPIO_MODER_MODE5_Msk: u32 = 0x3 << GPIO_MODER_MODE5_Pos;
pub const GPIO_MODER_MODE5: u32 = GPIO_MODER_MODE5_Msk;
pub const GPIO_MODER_MODE5_0: u32 = 0x1 << GPIO_MODER_MODE5_Pos;
pub const GPIO_MODER_MODE5_1: u32 = 0x2 << GPIO_MODER_MODE5_Pos;
pub const GPIO_MODER_MODE6_Pos: u32 = 12;
pub const GPIO_MODER_MODE6_Msk: u32 = 0x3 << GPIO_MODER_MODE6_Pos;
pub const GPIO_MODER_MODE6: u32 = GPIO_MODER_MODE6_Msk;
pub const GPIO_MODER_MODE6_0: u32 = 0x1 << GPIO_MODER_MODE6_Pos;
pub const GPIO_MODER_MODE6_1: u32 = 0x2 << GPIO_MODER_MODE6_Pos;
pub const GPIO_MODER_MODE7_Pos: u32 = 14;
pub const GPIO_MODER_MODE7_Msk: u32 = 0x3 << GPIO_MODER_MODE7_Pos;
pub const GPIO_MODER_MODE7: u32 = GPIO_MODER_MODE7_Msk;
pub const GPIO_MODER_MODE7_0: u32 = 0x1 << GPIO_MODER_MODE7_Pos;
pub const GPIO_MODER_MODE7_1: u32 = 0x2 << GPIO_MODER_MODE7_Pos;
pub const GPIO_MODER_MODE8_Pos: u32 = 16;
pub const GPIO_MODER_MODE8_Msk: u32 = 0x3 << GPIO_MODER_MODE8_Pos;
pub const GPIO_MODER_MODE8: u32 = GPIO_MODER_MODE8_Msk;
pub const GPIO_MODER_MODE8_0: u32 = 0x1 << GPIO_MODER_MODE8_Pos;
pub const GPIO_MODER_MODE8_1: u32 = 0x2 << GPIO_MODER_MODE8_Pos;
pub const GPIO_MODER_MODE9_Pos: u32 = 18;
pub const GPIO_MODER_MODE9_Msk: u32 = 0x3 << GPIO_MODER_MODE9_Pos;
pub const GPIO_MODER_MODE9: u32 = GPIO_MODER_MODE9_Msk;
pub const GPIO_MODER_MODE9_0: u32 = 0x1 << GPIO_MODER_MODE9_Pos;
pub const GPIO_MODER_MODE9_1: u32 = 0x2 << GPIO_MODER_MODE9_Pos;
pub const GPIO_MODER_MODE10_Pos: u32 = 20;
pub const GPIO_MODER_MODE10_Msk: u32 = 0x3 << GPIO_MODER_MODE10_Pos;
pub const GPIO_MODER_MODE10: u32 = GPIO_MODER_MODE10_Msk;
pub const GPIO_MODER_MODE10_0: u32 = 0x1 << GPIO_MODER_MODE10_Pos;
pub const GPIO_MODER_MODE10_1: u32 = 0x2 << GPIO_MODER_MODE10_Pos;
pub const GPIO_MODER_MODE11_Pos: u32 = 22;
pub const GPIO_MODER_MODE11_Msk: u32 = 0x3 << GPIO_MODER_MODE11_Pos;
pub const GPIO_MODER_MODE11: u32 = GPIO_MODER_MODE11_Msk;
pub const GPIO_MODER_MODE11_0: u32 = 0x1 << GPIO_MODER_MODE11_Pos;
pub const GPIO_MODER_MODE11_1: u32 = 0x2 << GPIO_MODER_MODE11_Pos;
pub const GPIO_MODER_MODE12_Pos: u32 = 24;
pub const GPIO_MODER_MODE12_Msk: u32 = 0x3 << GPIO_MODER_MODE12_Pos;
pub const GPIO_MODER_MODE12: u32 = GPIO_MODER_MODE12_Msk;
pub const GPIO_MODER_MODE12_0: u32 = 0x1 << GPIO_MODER_MODE12_Pos;
pub const GPIO_MODER_MODE12_1: u32 = 0x2 << GPIO_MODER_MODE12_Pos;
pub const GPIO_MODER_MODE13_Pos: u32 = 26;
pub const GPIO_MODER_MODE13_Msk: u32 = 0x3 << GPIO_MODER_MODE13_Pos;
pub const GPIO_MODER_MODE13: u32 = GPIO_MODER_MODE13_Msk;
pub const GPIO_MODER_MODE13_0: u32 = 0x1 << GPIO_MODER_MODE13_Pos;
pub const GPIO_MODER_MODE13_1: u32 = 0x2 << GPIO_MODER_MODE13_Pos;
pub const GPIO_MODER_MODE14_Pos: u32 = 28;
pub const GPIO_MODER_MODE14_Msk: u32 = 0x3 << GPIO_MODER_MODE14_Pos;
pub const GPIO_MODER_MODE14: u32 = GPIO_MODER_MODE14_Msk;
pub const GPIO_MODER_MODE14_0: u32 = 0x1 << GPIO_MODER_MODE14_Pos;
pub const GPIO_MODER_MODE14_1: u32 = 0x2 << GPIO_MODER_MODE14_Pos;
pub const GPIO_MODER_MODE15_Pos: u32 = 30;
pub const GPIO_MODER_MODE15_Msk: u32 = 0x3 << GPIO_MODER_MODE15_Pos;
pub const GPIO_MODER_MODE15: u32 = GPIO_MODER_MODE15_Msk;
pub const GPIO_MODER_MODE15_0: u32 = 0x1 << GPIO_MODER_MODE15_Pos;
pub const GPIO_MODER_MODE15_1: u32 = 0x2 << GPIO_MODER_MODE15_Pos;
pub const GPIO_OTYPER_OT_0: u32 = 0x00000001;
pub const GPIO_OTYPER_OT_1: u32 = 0x00000002;
pub const GPIO_OTYPER_OT_2: u32 = 0x00000004;
pub const GPIO_OTYPER_OT_3: u32 = 0x00000008;
pub const GPIO_OTYPER_OT_4: u32 = 0x00000010;
pub const GPIO_OTYPER_OT_5: u32 = 0x00000020;
pub const GPIO_OTYPER_OT_6: u32 = 0x00000040;
pub const GPIO_OTYPER_OT_7: u32 = 0x00000080;
pub const GPIO_OTYPER_OT_8: u32 = 0x00000100;
pub const GPIO_OTYPER_OT_9: u32 = 0x00000200;
pub const GPIO_OTYPER_OT_10: u32 = 0x00000400;
pub const GPIO_OTYPER_OT_11: u32 = 0x00000800;
pub const GPIO_OTYPER_OT_12: u32 = 0x00001000;
pub const GPIO_OTYPER_OT_13: u32 = 0x00002000;
pub const GPIO_OTYPER_OT_14: u32 = 0x00004000;
pub const GPIO_OTYPER_OT_15: u32 = 0x00008000;
pub const GPIO_OSPEEDER_OSPEED0_Pos: u32 = 0;
pub const GPIO_OSPEEDER_OSPEED0_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEED0_Pos;
pub const GPIO_OSPEEDER_OSPEED0: u32 = GPIO_OSPEEDER_OSPEED0_Msk;
pub const GPIO_OSPEEDER_OSPEED0_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEED0_Pos;
pub const GPIO_OSPEEDER_OSPEED0_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEED0_Pos;
pub const GPIO_OSPEEDER_OSPEED1_Pos: u32 = 2;
pub const GPIO_OSPEEDER_OSPEED1_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEED1_Pos;
pub const GPIO_OSPEEDER_OSPEED1: u32 = GPIO_OSPEEDER_OSPEED1_Msk;
pub const GPIO_OSPEEDER_OSPEED1_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEED1_Pos;
pub const GPIO_OSPEEDER_OSPEED1_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEED1_Pos;
pub const GPIO_OSPEEDER_OSPEED2_Pos: u32 = 4;
pub const GPIO_OSPEEDER_OSPEED2_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEED2_Pos;
pub const GPIO_OSPEEDER_OSPEED2: u32 = GPIO_OSPEEDER_OSPEED2_Msk;
pub const GPIO_OSPEEDER_OSPEED2_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEED2_Pos;
pub const GPIO_OSPEEDER_OSPEED2_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEED2_Pos;
pub const GPIO_OSPEEDER_OSPEED3_Pos: u32 = 6;
pub const GPIO_OSPEEDER_OSPEED3_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEED3_Pos;
pub const GPIO_OSPEEDER_OSPEED3: u32 = GPIO_OSPEEDER_OSPEED3_Msk;
pub const GPIO_OSPEEDER_OSPEED3_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEED3_Pos;
pub const GPIO_OSPEEDER_OSPEED3_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEED3_Pos;
pub const GPIO_OSPEEDER_OSPEED4_Pos: u32 = 8;
pub const GPIO_OSPEEDER_OSPEED4_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEED4_Pos;
pub const GPIO_OSPEEDER_OSPEED4: u32 = GPIO_OSPEEDER_OSPEED4_Msk;
pub const GPIO_OSPEEDER_OSPEED4_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEED4_Pos;
pub const GPIO_OSPEEDER_OSPEED4_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEED4_Pos;
pub const GPIO_OSPEEDER_OSPEED5_Pos: u32 = 10;
pub const GPIO_OSPEEDER_OSPEED5_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEED5_Pos;
pub const GPIO_OSPEEDER_OSPEED5: u32 = GPIO_OSPEEDER_OSPEED5_Msk;
pub const GPIO_OSPEEDER_OSPEED5_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEED5_Pos;
pub const GPIO_OSPEEDER_OSPEED5_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEED5_Pos;
pub const GPIO_OSPEEDER_OSPEED6_Pos: u32 = 12;
pub const GPIO_OSPEEDER_OSPEED6_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEED6_Pos;
pub const GPIO_OSPEEDER_OSPEED6: u32 = GPIO_OSPEEDER_OSPEED6_Msk;
pub const GPIO_OSPEEDER_OSPEED6_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEED6_Pos;
pub const GPIO_OSPEEDER_OSPEED6_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEED6_Pos;
pub const GPIO_OSPEEDER_OSPEED7_Pos: u32 = 14;
pub const GPIO_OSPEEDER_OSPEED7_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEED7_Pos;
pub const GPIO_OSPEEDER_OSPEED7: u32 = GPIO_OSPEEDER_OSPEED7_Msk;
pub const GPIO_OSPEEDER_OSPEED7_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEED7_Pos;
pub const GPIO_OSPEEDER_OSPEED7_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEED7_Pos;
pub const GPIO_OSPEEDER_OSPEED8_Pos: u32 = 16;
pub const GPIO_OSPEEDER_OSPEED8_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEED8_Pos;
pub const GPIO_OSPEEDER_OSPEED8: u32 = GPIO_OSPEEDER_OSPEED8_Msk;
pub const GPIO_OSPEEDER_OSPEED8_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEED8_Pos;
pub const GPIO_OSPEEDER_OSPEED8_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEED8_Pos;
pub const GPIO_OSPEEDER_OSPEED9_Pos: u32 = 18;
pub const GPIO_OSPEEDER_OSPEED9_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEED9_Pos;
pub const GPIO_OSPEEDER_OSPEED9: u32 = GPIO_OSPEEDER_OSPEED9_Msk;
pub const GPIO_OSPEEDER_OSPEED9_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEED9_Pos;
pub const GPIO_OSPEEDER_OSPEED9_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEED9_Pos;
pub const GPIO_OSPEEDER_OSPEED10_Pos: u32 = 20;
pub const GPIO_OSPEEDER_OSPEED10_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEED10_Pos;
pub const GPIO_OSPEEDER_OSPEED10: u32 = GPIO_OSPEEDER_OSPEED10_Msk;
pub const GPIO_OSPEEDER_OSPEED10_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEED10_Pos;
pub const GPIO_OSPEEDER_OSPEED10_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEED10_Pos;
pub const GPIO_OSPEEDER_OSPEED11_Pos: u32 = 22;
pub const GPIO_OSPEEDER_OSPEED11_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEED11_Pos;
pub const GPIO_OSPEEDER_OSPEED11: u32 = GPIO_OSPEEDER_OSPEED11_Msk;
pub const GPIO_OSPEEDER_OSPEED11_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEED11_Pos;
pub const GPIO_OSPEEDER_OSPEED11_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEED11_Pos;
pub const GPIO_OSPEEDER_OSPEED12_Pos: u32 = 24;
pub const GPIO_OSPEEDER_OSPEED12_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEED12_Pos;
pub const GPIO_OSPEEDER_OSPEED12: u32 = GPIO_OSPEEDER_OSPEED12_Msk;
pub const GPIO_OSPEEDER_OSPEED12_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEED12_Pos;
pub const GPIO_OSPEEDER_OSPEED12_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEED12_Pos;
pub const GPIO_OSPEEDER_OSPEED13_Pos: u32 = 26;
pub const GPIO_OSPEEDER_OSPEED13_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEED13_Pos;
pub const GPIO_OSPEEDER_OSPEED13: u32 = GPIO_OSPEEDER_OSPEED13_Msk;
pub const GPIO_OSPEEDER_OSPEED13_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEED13_Pos;
pub const GPIO_OSPEEDER_OSPEED13_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEED13_Pos;
pub const GPIO_OSPEEDER_OSPEED14_Pos: u32 = 28;
pub const GPIO_OSPEEDER_OSPEED14_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEED14_Pos;
pub const GPIO_OSPEEDER_OSPEED14: u32 = GPIO_OSPEEDER_OSPEED14_Msk;
pub const GPIO_OSPEEDER_OSPEED14_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEED14_Pos;
pub const GPIO_OSPEEDER_OSPEED14_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEED14_Pos;
pub const GPIO_OSPEEDER_OSPEED15_Pos: u32 = 30;
pub const GPIO_OSPEEDER_OSPEED15_Msk: u32 = 0x3 << GPIO_OSPEEDER_OSPEED15_Pos;
pub const GPIO_OSPEEDER_OSPEED15: u32 = GPIO_OSPEEDER_OSPEED15_Msk;
pub const GPIO_OSPEEDER_OSPEED15_0: u32 = 0x1 << GPIO_OSPEEDER_OSPEED15_Pos;
pub const GPIO_OSPEEDER_OSPEED15_1: u32 = 0x2 << GPIO_OSPEEDER_OSPEED15_Pos;
pub const GPIO_PUPDR_PUPD0_Pos: u32 = 0;
pub const GPIO_PUPDR_PUPD0_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD0_Pos;
pub const GPIO_PUPDR_PUPD0: u32 = GPIO_PUPDR_PUPD0_Msk;
pub const GPIO_PUPDR_PUPD0_0: u32 = 0x1 << GPIO_PUPDR_PUPD0_Pos;
pub const GPIO_PUPDR_PUPD0_1: u32 = 0x2 << GPIO_PUPDR_PUPD0_Pos;
pub const GPIO_PUPDR_PUPD1_Pos: u32 = 2;
pub const GPIO_PUPDR_PUPD1_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD1_Pos;
pub const GPIO_PUPDR_PUPD1: u32 = GPIO_PUPDR_PUPD1_Msk;
pub const GPIO_PUPDR_PUPD1_0: u32 = 0x1 << GPIO_PUPDR_PUPD1_Pos;
pub const GPIO_PUPDR_PUPD1_1: u32 = 0x2 << GPIO_PUPDR_PUPD1_Pos;
pub const GPIO_PUPDR_PUPD2_Pos: u32 = 4;
pub const GPIO_PUPDR_PUPD2_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD2_Pos;
pub const GPIO_PUPDR_PUPD2: u32 = GPIO_PUPDR_PUPD2_Msk;
pub const GPIO_PUPDR_PUPD2_0: u32 = 0x1 << GPIO_PUPDR_PUPD2_Pos;
pub const GPIO_PUPDR_PUPD2_1: u32 = 0x2 << GPIO_PUPDR_PUPD2_Pos;
pub const GPIO_PUPDR_PUPD3_Pos: u32 = 6;
pub const GPIO_PUPDR_PUPD3_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD3_Pos;
pub const GPIO_PUPDR_PUPD3: u32 = GPIO_PUPDR_PUPD3_Msk;
pub const GPIO_PUPDR_PUPD3_0: u32 = 0x1 << GPIO_PUPDR_PUPD3_Pos;
pub const GPIO_PUPDR_PUPD3_1: u32 = 0x2 << GPIO_PUPDR_PUPD3_Pos;
pub const GPIO_PUPDR_PUPD4_Pos: u32 = 8;
pub const GPIO_PUPDR_PUPD4_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD4_Pos;
pub const GPIO_PUPDR_PUPD4: u32 = GPIO_PUPDR_PUPD4_Msk;
pub const GPIO_PUPDR_PUPD4_0: u32 = 0x1 << GPIO_PUPDR_PUPD4_Pos;
pub const GPIO_PUPDR_PUPD4_1: u32 = 0x2 << GPIO_PUPDR_PUPD4_Pos;
pub const GPIO_PUPDR_PUPD5_Pos: u32 = 10;
pub const GPIO_PUPDR_PUPD5_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD5_Pos;
pub const GPIO_PUPDR_PUPD5: u32 = GPIO_PUPDR_PUPD5_Msk;
pub const GPIO_PUPDR_PUPD5_0: u32 = 0x1 << GPIO_PUPDR_PUPD5_Pos;
pub const GPIO_PUPDR_PUPD5_1: u32 = 0x2 << GPIO_PUPDR_PUPD5_Pos;
pub const GPIO_PUPDR_PUPD6_Pos: u32 = 12;
pub const GPIO_PUPDR_PUPD6_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD6_Pos;
pub const GPIO_PUPDR_PUPD6: u32 = GPIO_PUPDR_PUPD6_Msk;
pub const GPIO_PUPDR_PUPD6_0: u32 = 0x1 << GPIO_PUPDR_PUPD6_Pos;
pub const GPIO_PUPDR_PUPD6_1: u32 = 0x2 << GPIO_PUPDR_PUPD6_Pos;
pub const GPIO_PUPDR_PUPD7_Pos: u32 = 14;
pub const GPIO_PUPDR_PUPD7_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD7_Pos;
pub const GPIO_PUPDR_PUPD7: u32 = GPIO_PUPDR_PUPD7_Msk;
pub const GPIO_PUPDR_PUPD7_0: u32 = 0x1 << GPIO_PUPDR_PUPD7_Pos;
pub const GPIO_PUPDR_PUPD7_1: u32 = 0x2 << GPIO_PUPDR_PUPD7_Pos;
pub const GPIO_PUPDR_PUPD8_Pos: u32 = 16;
pub const GPIO_PUPDR_PUPD8_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD8_Pos;
pub const GPIO_PUPDR_PUPD8: u32 = GPIO_PUPDR_PUPD8_Msk;
pub const GPIO_PUPDR_PUPD8_0: u32 = 0x1 << GPIO_PUPDR_PUPD8_Pos;
pub const GPIO_PUPDR_PUPD8_1: u32 = 0x2 << GPIO_PUPDR_PUPD8_Pos;
pub const GPIO_PUPDR_PUPD9_Pos: u32 = 18;
pub const GPIO_PUPDR_PUPD9_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD9_Pos;
pub const GPIO_PUPDR_PUPD9: u32 = GPIO_PUPDR_PUPD9_Msk;
pub const GPIO_PUPDR_PUPD9_0: u32 = 0x1 << GPIO_PUPDR_PUPD9_Pos;
pub const GPIO_PUPDR_PUPD9_1: u32 = 0x2 << GPIO_PUPDR_PUPD9_Pos;
pub const GPIO_PUPDR_PUPD10_Pos: u32 = 20;
pub const GPIO_PUPDR_PUPD10_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD10_Pos;
pub const GPIO_PUPDR_PUPD10: u32 = GPIO_PUPDR_PUPD10_Msk;
pub const GPIO_PUPDR_PUPD10_0: u32 = 0x1 << GPIO_PUPDR_PUPD10_Pos;
pub const GPIO_PUPDR_PUPD10_1: u32 = 0x2 << GPIO_PUPDR_PUPD10_Pos;
pub const GPIO_PUPDR_PUPD11_Pos: u32 = 22;
pub const GPIO_PUPDR_PUPD11_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD11_Pos;
pub const GPIO_PUPDR_PUPD11: u32 = GPIO_PUPDR_PUPD11_Msk;
pub const GPIO_PUPDR_PUPD11_0: u32 = 0x1 << GPIO_PUPDR_PUPD11_Pos;
pub const GPIO_PUPDR_PUPD11_1: u32 = 0x2 << GPIO_PUPDR_PUPD11_Pos;
pub const GPIO_PUPDR_PUPD12_Pos: u32 = 24;
pub const GPIO_PUPDR_PUPD12_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD12_Pos;
pub const GPIO_PUPDR_PUPD12: u32 = GPIO_PUPDR_PUPD12_Msk;
pub const GPIO_PUPDR_PUPD12_0: u32 = 0x1 << GPIO_PUPDR_PUPD12_Pos;
pub const GPIO_PUPDR_PUPD12_1: u32 = 0x2 << GPIO_PUPDR_PUPD12_Pos;
pub const GPIO_PUPDR_PUPD13_Pos: u32 = 26;
pub const GPIO_PUPDR_PUPD13_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD13_Pos;
pub const GPIO_PUPDR_PUPD13: u32 = GPIO_PUPDR_PUPD13_Msk;
pub const GPIO_PUPDR_PUPD13_0: u32 = 0x1 << GPIO_PUPDR_PUPD13_Pos;
pub const GPIO_PUPDR_PUPD13_1: u32 = 0x2 << GPIO_PUPDR_PUPD13_Pos;
pub const GPIO_PUPDR_PUPD14_Pos: u32 = 28;
pub const GPIO_PUPDR_PUPD14_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD14_Pos;
pub const GPIO_PUPDR_PUPD14: u32 = GPIO_PUPDR_PUPD14_Msk;
pub const GPIO_PUPDR_PUPD14_0: u32 = 0x1 << GPIO_PUPDR_PUPD14_Pos;
pub const GPIO_PUPDR_PUPD14_1: u32 = 0x2 << GPIO_PUPDR_PUPD14_Pos;
pub const GPIO_PUPDR_PUPD15_Pos: u32 = 30;
pub const GPIO_PUPDR_PUPD15_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD15_Pos;
pub const GPIO_PUPDR_PUPD15: u32 = GPIO_PUPDR_PUPD15_Msk;
pub const GPIO_PUPDR_PUPD15_0: u32 = 0x1 << GPIO_PUPDR_PUPD15_Pos;
pub const GPIO_PUPDR_PUPD15_1: u32 = 0x2 << GPIO_PUPDR_PUPD15_Pos;
pub const GPIO_IDR_ID0_Pos: u32 = 0;
pub const GPIO_IDR_ID0_Msk: u32 = 0x1 << GPIO_IDR_ID0_Pos;
pub const GPIO_IDR_ID0: u32 = GPIO_IDR_ID0_Msk;
pub const GPIO_IDR_ID1_Pos: u32 = 1;
pub const GPIO_IDR_ID1_Msk: u32 = 0x1 << GPIO_IDR_ID1_Pos;
pub const GPIO_IDR_ID1: u32 = GPIO_IDR_ID1_Msk;
pub const GPIO_IDR_ID2_Pos: u32 = 2;
pub const GPIO_IDR_ID2_Msk: u32 = 0x1 << GPIO_IDR_ID2_Pos;
pub const GPIO_IDR_ID2: u32 = GPIO_IDR_ID2_Msk;
pub const GPIO_IDR_ID3_Pos: u32 = 3;
pub const GPIO_IDR_ID3_Msk: u32 = 0x1 << GPIO_IDR_ID3_Pos;
pub const GPIO_IDR_ID3: u32 = GPIO_IDR_ID3_Msk;
pub const GPIO_IDR_ID4_Pos: u32 = 4;
pub const GPIO_IDR_ID4_Msk: u32 = 0x1 << GPIO_IDR_ID4_Pos;
pub const GPIO_IDR_ID4: u32 = GPIO_IDR_ID4_Msk;
pub const GPIO_IDR_ID5_Pos: u32 = 5;
pub const GPIO_IDR_ID5_Msk: u32 = 0x1 << GPIO_IDR_ID5_Pos;
pub const GPIO_IDR_ID5: u32 = GPIO_IDR_ID5_Msk;
pub const GPIO_IDR_ID6_Pos: u32 = 6;
pub const GPIO_IDR_ID6_Msk: u32 = 0x1 << GPIO_IDR_ID6_Pos;
pub const GPIO_IDR_ID6: u32 = GPIO_IDR_ID6_Msk;
pub const GPIO_IDR_ID7_Pos: u32 = 7;
pub const GPIO_IDR_ID7_Msk: u32 = 0x1 << GPIO_IDR_ID7_Pos;
pub const GPIO_IDR_ID7: u32 = GPIO_IDR_ID7_Msk;
pub const GPIO_IDR_ID8_Pos: u32 = 8;
pub const GPIO_IDR_ID8_Msk: u32 = 0x1 << GPIO_IDR_ID8_Pos;
pub const GPIO_IDR_ID8: u32 = GPIO_IDR_ID8_Msk;
pub const GPIO_IDR_ID9_Pos: u32 = 9;
pub const GPIO_IDR_ID9_Msk: u32 = 0x1 << GPIO_IDR_ID9_Pos;
pub const GPIO_IDR_ID9: u32 = GPIO_IDR_ID9_Msk;
pub const GPIO_IDR_ID10_Pos: u32 = 10;
pub const GPIO_IDR_ID10_Msk: u32 = 0x1 << GPIO_IDR_ID10_Pos;
pub const GPIO_IDR_ID10: u32 = GPIO_IDR_ID10_Msk;
pub const GPIO_IDR_ID11_Pos: u32 = 11;
pub const GPIO_IDR_ID11_Msk: u32 = 0x1 << GPIO_IDR_ID11_Pos;
pub const GPIO_IDR_ID11: u32 = GPIO_IDR_ID11_Msk;
pub const GPIO_IDR_ID12_Pos: u32 = 12;
pub const GPIO_IDR_ID12_Msk: u32 = 0x1 << GPIO_IDR_ID12_Pos;
pub const GPIO_IDR_ID12: u32 = GPIO_IDR_ID12_Msk;
pub const GPIO_IDR_ID13_Pos: u32 = 13;
pub const GPIO_IDR_ID13_Msk: u32 = 0x1 << GPIO_IDR_ID13_Pos;
pub const GPIO_IDR_ID13: u32 = GPIO_IDR_ID13_Msk;
pub const GPIO_IDR_ID14_Pos: u32 = 14;
pub const GPIO_IDR_ID14_Msk: u32 = 0x1 << GPIO_IDR_ID14_Pos;
pub const GPIO_IDR_ID14: u32 = GPIO_IDR_ID14_Msk;
pub const GPIO_IDR_ID15_Pos: u32 = 15;
pub const GPIO_IDR_ID15_Msk: u32 = 0x1 << GPIO_IDR_ID15_Pos;
pub const GPIO_IDR_ID15: u32 = GPIO_IDR_ID15_Msk;
pub const GPIO_ODR_OD0_Pos: u32 = 0;
pub const GPIO_ODR_OD0_Msk: u32 = 0x1 << GPIO_ODR_OD0_Pos;
pub const GPIO_ODR_OD0: u32 = GPIO_ODR_OD0_Msk;
pub const GPIO_ODR_OD1_Pos: u32 = 1;
pub const GPIO_ODR_OD1_Msk: u32 = 0x1 << GPIO_ODR_OD1_Pos;
pub const GPIO_ODR_OD1: u32 = GPIO_ODR_OD1_Msk;
pub const GPIO_ODR_OD2_Pos: u32 = 2;
pub const GPIO_ODR_OD2_Msk: u32 = 0x1 << GPIO_ODR_OD2_Pos;
pub const GPIO_ODR_OD2: u32 = GPIO_ODR_OD2_Msk;
pub const GPIO_ODR_OD3_Pos: u32 = 3;
pub const GPIO_ODR_OD3_Msk: u32 = 0x1 << GPIO_ODR_OD3_Pos;
pub const GPIO_ODR_OD3: u32 = GPIO_ODR_OD3_Msk;
pub const GPIO_ODR_OD4_Pos: u32 = 4;
pub const GPIO_ODR_OD4_Msk: u32 = 0x1 << GPIO_ODR_OD4_Pos;
pub const GPIO_ODR_OD4: u32 = GPIO_ODR_OD4_Msk;
pub const GPIO_ODR_OD5_Pos: u32 = 5;
pub const GPIO_ODR_OD5_Msk: u32 = 0x1 << GPIO_ODR_OD5_Pos;
pub const GPIO_ODR_OD5: u32 = GPIO_ODR_OD5_Msk;
pub const GPIO_ODR_OD6_Pos: u32 = 6;
pub const GPIO_ODR_OD6_Msk: u32 = 0x1 << GPIO_ODR_OD6_Pos;
pub const GPIO_ODR_OD6: u32 = GPIO_ODR_OD6_Msk;
pub const GPIO_ODR_OD7_Pos: u32 = 7;
pub const GPIO_ODR_OD7_Msk: u32 = 0x1 << GPIO_ODR_OD7_Pos;
pub const GPIO_ODR_OD7: u32 = GPIO_ODR_OD7_Msk;
pub const GPIO_ODR_OD8_Pos: u32 = 8;
pub const GPIO_ODR_OD8_Msk: u32 = 0x1 << GPIO_ODR_OD8_Pos;
pub const GPIO_ODR_OD8: u32 = GPIO_ODR_OD8_Msk;
pub const GPIO_ODR_OD9_Pos: u32 = 9;
pub const GPIO_ODR_OD9_Msk: u32 = 0x1 << GPIO_ODR_OD9_Pos;
pub const GPIO_ODR_OD9: u32 = GPIO_ODR_OD9_Msk;
pub const GPIO_ODR_OD10_Pos: u32 = 10;
pub const GPIO_ODR_OD10_Msk: u32 = 0x1 << GPIO_ODR_OD10_Pos;
pub const GPIO_ODR_OD10: u32 = GPIO_ODR_OD10_Msk;
pub const GPIO_ODR_OD11_Pos: u32 = 11;
pub const GPIO_ODR_OD11_Msk: u32 = 0x1 << GPIO_ODR_OD11_Pos;
pub const GPIO_ODR_OD11: u32 = GPIO_ODR_OD11_Msk;
pub const GPIO_ODR_OD12_Pos: u32 = 12;
pub const GPIO_ODR_OD12_Msk: u32 = 0x1 << GPIO_ODR_OD12_Pos;
pub const GPIO_ODR_OD12: u32 = GPIO_ODR_OD12_Msk;
pub const GPIO_ODR_OD13_Pos: u32 = 13;
pub const GPIO_ODR_OD13_Msk: u32 = 0x1 << GPIO_ODR_OD13_Pos;
pub const GPIO_ODR_OD13: u32 = GPIO_ODR_OD13_Msk;
pub const GPIO_ODR_OD14_Pos: u32 = 14;
pub const GPIO_ODR_OD14_Msk: u32 = 0x1 << GPIO_ODR_OD14_Pos;
pub const GPIO_ODR_OD14: u32 = GPIO_ODR_OD14_Msk;
pub const GPIO_ODR_OD15_Pos: u32 = 15;
pub const GPIO_ODR_OD15_Msk: u32 = 0x1 << GPIO_ODR_OD15_Pos;
pub const GPIO_ODR_OD15: u32 = GPIO_ODR_OD15_Msk;
pub const GPIO_BSRR_BS_0: u32 = 0x00000001;
pub const GPIO_BSRR_BS_1: u32 = 0x00000002;
pub const GPIO_BSRR_BS_2: u32 = 0x00000004;
pub const GPIO_BSRR_BS_3: u32 = 0x00000008;
pub const GPIO_BSRR_BS_4: u32 = 0x00000010;
pub const GPIO_BSRR_BS_5: u32 = 0x00000020;
pub const GPIO_BSRR_BS_6: u32 = 0x00000040;
pub const GPIO_BSRR_BS_7: u32 = 0x00000080;
pub const GPIO_BSRR_BS_8: u32 = 0x00000100;
pub const GPIO_BSRR_BS_9: u32 = 0x00000200;
pub const GPIO_BSRR_BS_10: u32 = 0x00000400;
pub const GPIO_BSRR_BS_11: u32 = 0x00000800;
pub const GPIO_BSRR_BS_12: u32 = 0x00001000;
pub const GPIO_BSRR_BS_13: u32 = 0x00002000;
pub const GPIO_BSRR_BS_14: u32 = 0x00004000;
pub const GPIO_BSRR_BS_15: u32 = 0x00008000;
pub const GPIO_BSRR_BR_0: u32 = 0x00010000;
pub const GPIO_BSRR_BR_1: u32 = 0x00020000;
pub const GPIO_BSRR_BR_2: u32 = 0x00040000;
pub const GPIO_BSRR_BR_3: u32 = 0x00080000;
pub const GPIO_BSRR_BR_4: u32 = 0x00100000;
pub const GPIO_BSRR_BR_5: u32 = 0x00200000;
pub const GPIO_BSRR_BR_6: u32 = 0x00400000;
pub const GPIO_BSRR_BR_7: u32 = 0x00800000;
pub const GPIO_BSRR_BR_8: u32 = 0x01000000;
pub const GPIO_BSRR_BR_9: u32 = 0x02000000;
pub const GPIO_BSRR_BR_10: u32 = 0x04000000;
pub const GPIO_BSRR_BR_11: u32 = 0x08000000;
pub const GPIO_BSRR_BR_12: u32 = 0x10000000;
pub const GPIO_BSRR_BR_13: u32 = 0x20000000;
pub const GPIO_BSRR_BR_14: u32 = 0x40000000;
pub const GPIO_BSRR_BR_15: u32 = 0x80000000;
pub const GPIO_LCKR_LCK0_Pos: u32 = 0;
pub const GPIO_LCKR_LCK0_Msk: u32 = 0x1 << GPIO_LCKR_LCK0_Pos;
pub const GPIO_LCKR_LCK0: u32 = GPIO_LCKR_LCK0_Msk;
pub const GPIO_LCKR_LCK1_Pos: u32 = 1;
pub const GPIO_LCKR_LCK1_Msk: u32 = 0x1 << GPIO_LCKR_LCK1_Pos;
pub const GPIO_LCKR_LCK1: u32 = GPIO_LCKR_LCK1_Msk;
pub const GPIO_LCKR_LCK2_Pos: u32 = 2;
pub const GPIO_LCKR_LCK2_Msk: u32 = 0x1 << GPIO_LCKR_LCK2_Pos;
pub const GPIO_LCKR_LCK2: u32 = GPIO_LCKR_LCK2_Msk;
pub const GPIO_LCKR_LCK3_Pos: u32 = 3;
pub const GPIO_LCKR_LCK3_Msk: u32 = 0x1 << GPIO_LCKR_LCK3_Pos;
pub const GPIO_LCKR_LCK3: u32 = GPIO_LCKR_LCK3_Msk;
pub const GPIO_LCKR_LCK4_Pos: u32 = 4;
pub const GPIO_LCKR_LCK4_Msk: u32 = 0x1 << GPIO_LCKR_LCK4_Pos;
pub const GPIO_LCKR_LCK4: u32 = GPIO_LCKR_LCK4_Msk;
pub const GPIO_LCKR_LCK5_Pos: u32 = 5;
pub const GPIO_LCKR_LCK5_Msk: u32 = 0x1 << GPIO_LCKR_LCK5_Pos;
pub const GPIO_LCKR_LCK5: u32 = GPIO_LCKR_LCK5_Msk;
pub const GPIO_LCKR_LCK6_Pos: u32 = 6;
pub const GPIO_LCKR_LCK6_Msk: u32 = 0x1 << GPIO_LCKR_LCK6_Pos;
pub const GPIO_LCKR_LCK6: u32 = GPIO_LCKR_LCK6_Msk;
pub const GPIO_LCKR_LCK7_Pos: u32 = 7;
pub const GPIO_LCKR_LCK7_Msk: u32 = 0x1 << GPIO_LCKR_LCK7_Pos;
pub const GPIO_LCKR_LCK7: u32 = GPIO_LCKR_LCK7_Msk;
pub const GPIO_LCKR_LCK8_Pos: u32 = 8;
pub const GPIO_LCKR_LCK8_Msk: u32 = 0x1 << GPIO_LCKR_LCK8_Pos;
pub const GPIO_LCKR_LCK8: u32 = GPIO_LCKR_LCK8_Msk;
pub const GPIO_LCKR_LCK9_Pos: u32 = 9;
pub const GPIO_LCKR_LCK9_Msk: u32 = 0x1 << GPIO_LCKR_LCK9_Pos;
pub const GPIO_LCKR_LCK9: u32 = GPIO_LCKR_LCK9_Msk;
pub const GPIO_LCKR_LCK10_Pos: u32 = 10;
pub const GPIO_LCKR_LCK10_Msk: u32 = 0x1 << GPIO_LCKR_LCK10_Pos;
pub const GPIO_LCKR_LCK10: u32 = GPIO_LCKR_LCK10_Msk;
pub const GPIO_LCKR_LCK11_Pos: u32 = 11;
pub const GPIO_LCKR_LCK11_Msk: u32 = 0x1 << GPIO_LCKR_LCK11_Pos;
pub const GPIO_LCKR_LCK11: u32 = GPIO_LCKR_LCK11_Msk;
pub const GPIO_LCKR_LCK12_Pos: u32 = 12;
pub const GPIO_LCKR_LCK12_Msk: u32 = 0x1 << GPIO_LCKR_LCK12_Pos;
pub const GPIO_LCKR_LCK12: u32 = GPIO_LCKR_LCK12_Msk;
pub const GPIO_LCKR_LCK13_Pos: u32 = 13;
pub const GPIO_LCKR_LCK13_Msk: u32 = 0x1 << GPIO_LCKR_LCK13_Pos;
pub const GPIO_LCKR_LCK13: u32 = GPIO_LCKR_LCK13_Msk;
pub const GPIO_LCKR_LCK14_Pos: u32 = 14;
pub const GPIO_LCKR_LCK14_Msk: u32 = 0x1 << GPIO_LCKR_LCK14_Pos;
pub const GPIO_LCKR_LCK14: u32 = GPIO_LCKR_LCK14_Msk;
pub const GPIO_LCKR_LCK15_Pos: u32 = 15;
pub const GPIO_LCKR_LCK15_Msk: u32 = 0x1 << GPIO_LCKR_LCK15_Pos;
pub const GPIO_LCKR_LCK15: u32 = GPIO_LCKR_LCK15_Msk;
pub const GPIO_LCKR_LCKK_Pos: u32 = 16;
pub const GPIO_LCKR_LCKK_Msk: u32 = 0x1 << GPIO_LCKR_LCKK_Pos;
pub const GPIO_LCKR_LCKK: u32 = GPIO_LCKR_LCKK_Msk;
pub const GPIO_AFRL_AFSEL0_Pos: u32 = 0;
pub const GPIO_AFRL_AFSEL0_Msk: u32 = 0xF << GPIO_AFRL_AFSEL0_Pos;
pub const GPIO_AFRL_AFSEL0: u32 = GPIO_AFRL_AFSEL0_Msk;
pub const GPIO_AFRL_AFSEL1_Pos: u32 = 4;
pub const GPIO_AFRL_AFSEL1_Msk: u32 = 0xF << GPIO_AFRL_AFSEL1_Pos;
pub const GPIO_AFRL_AFSEL1: u32 = GPIO_AFRL_AFSEL1_Msk;
pub const GPIO_AFRL_AFSEL2_Pos: u32 = 8;
pub const GPIO_AFRL_AFSEL2_Msk: u32 = 0xF << GPIO_AFRL_AFSEL2_Pos;
pub const GPIO_AFRL_AFSEL2: u32 = GPIO_AFRL_AFSEL2_Msk;
pub const GPIO_AFRL_AFSEL3_Pos: u32 = 12;
pub const GPIO_AFRL_AFSEL3_Msk: u32 = 0xF << GPIO_AFRL_AFSEL3_Pos;
pub const GPIO_AFRL_AFSEL3: u32 = GPIO_AFRL_AFSEL3_Msk;
pub const GPIO_AFRL_AFSEL4_Pos: u32 = 16;
pub const GPIO_AFRL_AFSEL4_Msk: u32 = 0xF << GPIO_AFRL_AFSEL4_Pos;
pub const GPIO_AFRL_AFSEL4: u32 = GPIO_AFRL_AFSEL4_Msk;
pub const GPIO_AFRL_AFSEL5_Pos: u32 = 20;
pub const GPIO_AFRL_AFSEL5_Msk: u32 = 0xF << GPIO_AFRL_AFSEL5_Pos;
pub const GPIO_AFRL_AFSEL5: u32 = GPIO_AFRL_AFSEL5_Msk;
pub const GPIO_AFRL_AFSEL6_Pos: u32 = 24;
pub const GPIO_AFRL_AFSEL6_Msk: u32 = 0xF << GPIO_AFRL_AFSEL6_Pos;
pub const GPIO_AFRL_AFSEL6: u32 = GPIO_AFRL_AFSEL6_Msk;
pub const GPIO_AFRL_AFSEL7_Pos: u32 = 28;
pub const GPIO_AFRL_AFSEL7_Msk: u32 = 0xF << GPIO_AFRL_AFSEL7_Pos;
pub const GPIO_AFRL_AFSEL7: u32 = GPIO_AFRL_AFSEL7_Msk;
pub const GPIO_AFRH_AFSEL8_Pos: u32 = 0;
pub const GPIO_AFRH_AFSEL8_Msk: u32 = 0xF << GPIO_AFRH_AFSEL8_Pos;
pub const GPIO_AFRH_AFSEL8: u32 = GPIO_AFRH_AFSEL8_Msk;
pub const GPIO_AFRH_AFSEL9_Pos: u32 = 4;
pub const GPIO_AFRH_AFSEL9_Msk: u32 = 0xF << GPIO_AFRH_AFSEL9_Pos;
pub const GPIO_AFRH_AFSEL9: u32 = GPIO_AFRH_AFSEL9_Msk;
pub const GPIO_AFRH_AFSEL10_Pos: u32 = 8;
pub const GPIO_AFRH_AFSEL10_Msk: u32 = 0xF << GPIO_AFRH_AFSEL10_Pos;
pub const GPIO_AFRH_AFSEL10: u32 = GPIO_AFRH_AFSEL10_Msk;
pub const GPIO_AFRH_AFSEL11_Pos: u32 = 12;
pub const GPIO_AFRH_AFSEL11_Msk: u32 = 0xF << GPIO_AFRH_AFSEL11_Pos;
pub const GPIO_AFRH_AFSEL11: u32 = GPIO_AFRH_AFSEL11_Msk;
pub const GPIO_AFRH_AFSEL12_Pos: u32 = 16;
pub const GPIO_AFRH_AFSEL12_Msk: u32 = 0xF << GPIO_AFRH_AFSEL12_Pos;
pub const GPIO_AFRH_AFSEL12: u32 = GPIO_AFRH_AFSEL12_Msk;
pub const GPIO_AFRH_AFSEL13_Pos: u32 = 20;
pub const GPIO_AFRH_AFSEL13_Msk: u32 = 0xF << GPIO_AFRH_AFSEL13_Pos;
pub const GPIO_AFRH_AFSEL13: u32 = GPIO_AFRH_AFSEL13_Msk;
pub const GPIO_AFRH_AFSEL14_Pos: u32 = 24;
pub const GPIO_AFRH_AFSEL14_Msk: u32 = 0xF << GPIO_AFRH_AFSEL14_Pos;
pub const GPIO_AFRH_AFSEL14: u32 = GPIO_AFRH_AFSEL14_Msk;
pub const GPIO_AFRH_AFSEL15_Pos: u32 = 28;
pub const GPIO_AFRH_AFSEL15_Msk: u32 = 0xF << GPIO_AFRH_AFSEL15_Pos;
pub const GPIO_AFRH_AFSEL15: u32 = GPIO_AFRH_AFSEL15_Msk;
pub const GPIO_BRR_BR_0: u32 = 0x00000001;
pub const GPIO_BRR_BR_1: u32 = 0x00000002;
pub const GPIO_BRR_BR_2: u32 = 0x00000004;
pub const GPIO_BRR_BR_3: u32 = 0x00000008;
pub const GPIO_BRR_BR_4: u32 = 0x00000010;
pub const GPIO_BRR_BR_5: u32 = 0x00000020;
pub const GPIO_BRR_BR_6: u32 = 0x00000040;
pub const GPIO_BRR_BR_7: u32 = 0x00000080;
pub const GPIO_BRR_BR_8: u32 = 0x00000100;
pub const GPIO_BRR_BR_9: u32 = 0x00000200;
pub const GPIO_BRR_BR_10: u32 = 0x00000400;
pub const GPIO_BRR_BR_11: u32 = 0x00000800;
pub const GPIO_BRR_BR_12: u32 = 0x00001000;
pub const GPIO_BRR_BR_13: u32 = 0x00002000;
pub const GPIO_BRR_BR_14: u32 = 0x00004000;
pub const GPIO_BRR_BR_15: u32 = 0x00008000;
pub const I2C_CR1_PE_Pos: u32 = 0;
pub const I2C_CR1_PE_Msk: u32 = 0x1 << I2C_CR1_PE_Pos;
pub const I2C_CR1_PE: u32 = I2C_CR1_PE_Msk;
pub const I2C_CR1_TXIE_Pos: u32 = 1;
pub const I2C_CR1_TXIE_Msk: u32 = 0x1 << I2C_CR1_TXIE_Pos;
pub const I2C_CR1_TXIE: u32 = I2C_CR1_TXIE_Msk;
pub const I2C_CR1_RXIE_Pos: u32 = 2;
pub const I2C_CR1_RXIE_Msk: u32 = 0x1 << I2C_CR1_RXIE_Pos;
pub const I2C_CR1_RXIE: u32 = I2C_CR1_RXIE_Msk;
pub const I2C_CR1_ADDRIE_Pos: u32 = 3;
pub const I2C_CR1_ADDRIE_Msk: u32 = 0x1 << I2C_CR1_ADDRIE_Pos;
pub const I2C_CR1_ADDRIE: u32 = I2C_CR1_ADDRIE_Msk;
pub const I2C_CR1_NACKIE_Pos: u32 = 4;
pub const I2C_CR1_NACKIE_Msk: u32 = 0x1 << I2C_CR1_NACKIE_Pos;
pub const I2C_CR1_NACKIE: u32 = I2C_CR1_NACKIE_Msk;
pub const I2C_CR1_STOPIE_Pos: u32 = 5;
pub const I2C_CR1_STOPIE_Msk: u32 = 0x1 << I2C_CR1_STOPIE_Pos;
pub const I2C_CR1_STOPIE: u32 = I2C_CR1_STOPIE_Msk;
pub const I2C_CR1_TCIE_Pos: u32 = 6;
pub const I2C_CR1_TCIE_Msk: u32 = 0x1 << I2C_CR1_TCIE_Pos;
pub const I2C_CR1_TCIE: u32 = I2C_CR1_TCIE_Msk;
pub const I2C_CR1_ERRIE_Pos: u32 = 7;
pub const I2C_CR1_ERRIE_Msk: u32 = 0x1 << I2C_CR1_ERRIE_Pos;
pub const I2C_CR1_ERRIE: u32 = I2C_CR1_ERRIE_Msk;
pub const I2C_CR1_DNF_Pos: u32 = 8;
pub const I2C_CR1_DNF_Msk: u32 = 0xF << I2C_CR1_DNF_Pos;
pub const I2C_CR1_DNF: u32 = I2C_CR1_DNF_Msk;
pub const I2C_CR1_ANFOFF_Pos: u32 = 12;
pub const I2C_CR1_ANFOFF_Msk: u32 = 0x1 << I2C_CR1_ANFOFF_Pos;
pub const I2C_CR1_ANFOFF: u32 = I2C_CR1_ANFOFF_Msk;
pub const I2C_CR1_TXDMAEN_Pos: u32 = 14;
pub const I2C_CR1_TXDMAEN_Msk: u32 = 0x1 << I2C_CR1_TXDMAEN_Pos;
pub const I2C_CR1_TXDMAEN: u32 = I2C_CR1_TXDMAEN_Msk;
pub const I2C_CR1_RXDMAEN_Pos: u32 = 15;
pub const I2C_CR1_RXDMAEN_Msk: u32 = 0x1 << I2C_CR1_RXDMAEN_Pos;
pub const I2C_CR1_RXDMAEN: u32 = I2C_CR1_RXDMAEN_Msk;
pub const I2C_CR1_SBC_Pos: u32 = 16;
pub const I2C_CR1_SBC_Msk: u32 = 0x1 << I2C_CR1_SBC_Pos;
pub const I2C_CR1_SBC: u32 = I2C_CR1_SBC_Msk;
pub const I2C_CR1_NOSTRETCH_Pos: u32 = 17;
pub const I2C_CR1_NOSTRETCH_Msk: u32 = 0x1 << I2C_CR1_NOSTRETCH_Pos;
pub const I2C_CR1_NOSTRETCH: u32 = I2C_CR1_NOSTRETCH_Msk;
pub const I2C_CR1_WUPEN_Pos: u32 = 18;
pub const I2C_CR1_WUPEN_Msk: u32 = 0x1 << I2C_CR1_WUPEN_Pos;
pub const I2C_CR1_WUPEN: u32 = I2C_CR1_WUPEN_Msk;
pub const I2C_CR1_GCEN_Pos: u32 = 19;
pub const I2C_CR1_GCEN_Msk: u32 = 0x1 << I2C_CR1_GCEN_Pos;
pub const I2C_CR1_GCEN: u32 = I2C_CR1_GCEN_Msk;
pub const I2C_CR1_SMBHEN_Pos: u32 = 20;
pub const I2C_CR1_SMBHEN_Msk: u32 = 0x1 << I2C_CR1_SMBHEN_Pos;
pub const I2C_CR1_SMBHEN: u32 = I2C_CR1_SMBHEN_Msk;
pub const I2C_CR1_SMBDEN_Pos: u32 = 21;
pub const I2C_CR1_SMBDEN_Msk: u32 = 0x1 << I2C_CR1_SMBDEN_Pos;
pub const I2C_CR1_SMBDEN: u32 = I2C_CR1_SMBDEN_Msk;
pub const I2C_CR1_ALERTEN_Pos: u32 = 22;
pub const I2C_CR1_ALERTEN_Msk: u32 = 0x1 << I2C_CR1_ALERTEN_Pos;
pub const I2C_CR1_ALERTEN: u32 = I2C_CR1_ALERTEN_Msk;
pub const I2C_CR1_PECEN_Pos: u32 = 23;
pub const I2C_CR1_PECEN_Msk: u32 = 0x1 << I2C_CR1_PECEN_Pos;
pub const I2C_CR1_PECEN: u32 = I2C_CR1_PECEN_Msk;
pub const I2C_CR2_SADD_Pos: u32 = 0;
pub const I2C_CR2_SADD_Msk: u32 = 0x3FF << I2C_CR2_SADD_Pos;
pub const I2C_CR2_SADD: u32 = I2C_CR2_SADD_Msk;
pub const I2C_CR2_RD_WRN_Pos: u32 = 10;
pub const I2C_CR2_RD_WRN_Msk: u32 = 0x1 << I2C_CR2_RD_WRN_Pos;
pub const I2C_CR2_RD_WRN: u32 = I2C_CR2_RD_WRN_Msk;
pub const I2C_CR2_ADD10_Pos: u32 = 11;
pub const I2C_CR2_ADD10_Msk: u32 = 0x1 << I2C_CR2_ADD10_Pos;
pub const I2C_CR2_ADD10: u32 = I2C_CR2_ADD10_Msk;
pub const I2C_CR2_HEAD10R_Pos: u32 = 12;
pub const I2C_CR2_HEAD10R_Msk: u32 = 0x1 << I2C_CR2_HEAD10R_Pos;
pub const I2C_CR2_HEAD10R: u32 = I2C_CR2_HEAD10R_Msk;
pub const I2C_CR2_START_Pos: u32 = 13;
pub const I2C_CR2_START_Msk: u32 = 0x1 << I2C_CR2_START_Pos;
pub const I2C_CR2_START: u32 = I2C_CR2_START_Msk;
pub const I2C_CR2_STOP_Pos: u32 = 14;
pub const I2C_CR2_STOP_Msk: u32 = 0x1 << I2C_CR2_STOP_Pos;
pub const I2C_CR2_STOP: u32 = I2C_CR2_STOP_Msk;
pub const I2C_CR2_NACK_Pos: u32 = 15;
pub const I2C_CR2_NACK_Msk: u32 = 0x1 << I2C_CR2_NACK_Pos;
pub const I2C_CR2_NACK: u32 = I2C_CR2_NACK_Msk;
pub const I2C_CR2_NBYTES_Pos: u32 = 16;
pub const I2C_CR2_NBYTES_Msk: u32 = 0xFF << I2C_CR2_NBYTES_Pos;
pub const I2C_CR2_NBYTES: u32 = I2C_CR2_NBYTES_Msk;
pub const I2C_CR2_RELOAD_Pos: u32 = 24;
pub const I2C_CR2_RELOAD_Msk: u32 = 0x1 << I2C_CR2_RELOAD_Pos;
pub const I2C_CR2_RELOAD: u32 = I2C_CR2_RELOAD_Msk;
pub const I2C_CR2_AUTOEND_Pos: u32 = 25;
pub const I2C_CR2_AUTOEND_Msk: u32 = 0x1 << I2C_CR2_AUTOEND_Pos;
pub const I2C_CR2_AUTOEND: u32 = I2C_CR2_AUTOEND_Msk;
pub const I2C_CR2_PECBYTE_Pos: u32 = 26;
pub const I2C_CR2_PECBYTE_Msk: u32 = 0x1 << I2C_CR2_PECBYTE_Pos;
pub const I2C_CR2_PECBYTE: u32 = I2C_CR2_PECBYTE_Msk;
pub const I2C_OAR1_OA1_Pos: u32 = 0;
pub const I2C_OAR1_OA1_Msk: u32 = 0x3FF << I2C_OAR1_OA1_Pos;
pub const I2C_OAR1_OA1: u32 = I2C_OAR1_OA1_Msk;
pub const I2C_OAR1_OA1MODE_Pos: u32 = 10;
pub const I2C_OAR1_OA1MODE_Msk: u32 = 0x1 << I2C_OAR1_OA1MODE_Pos;
pub const I2C_OAR1_OA1MODE: u32 = I2C_OAR1_OA1MODE_Msk;
pub const I2C_OAR1_OA1EN_Pos: u32 = 15;
pub const I2C_OAR1_OA1EN_Msk: u32 = 0x1 << I2C_OAR1_OA1EN_Pos;
pub const I2C_OAR1_OA1EN: u32 = I2C_OAR1_OA1EN_Msk;
pub const I2C_OAR2_OA2_Pos: u32 = 1;
pub const I2C_OAR2_OA2_Msk: u32 = 0x7F << I2C_OAR2_OA2_Pos;
pub const I2C_OAR2_OA2: u32 = I2C_OAR2_OA2_Msk;
pub const I2C_OAR2_OA2MSK_Pos: u32 = 8;
pub const I2C_OAR2_OA2MSK_Msk: u32 = 0x7 << I2C_OAR2_OA2MSK_Pos;
pub const I2C_OAR2_OA2MSK: u32 = I2C_OAR2_OA2MSK_Msk;
pub const I2C_OAR2_OA2NOMASK: u32 = 0x00000000;
pub const I2C_OAR2_OA2MASK01_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK01_Msk: u32 = 0x1 << I2C_OAR2_OA2MASK01_Pos;
pub const I2C_OAR2_OA2MASK01: u32 = I2C_OAR2_OA2MASK01_Msk;
pub const I2C_OAR2_OA2MASK02_Pos: u32 = 9;
pub const I2C_OAR2_OA2MASK02_Msk: u32 = 0x1 << I2C_OAR2_OA2MASK02_Pos;
pub const I2C_OAR2_OA2MASK02: u32 = I2C_OAR2_OA2MASK02_Msk;
pub const I2C_OAR2_OA2MASK03_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK03_Msk: u32 = 0x3 << I2C_OAR2_OA2MASK03_Pos;
pub const I2C_OAR2_OA2MASK03: u32 = I2C_OAR2_OA2MASK03_Msk;
pub const I2C_OAR2_OA2MASK04_Pos: u32 = 10;
pub const I2C_OAR2_OA2MASK04_Msk: u32 = 0x1 << I2C_OAR2_OA2MASK04_Pos;
pub const I2C_OAR2_OA2MASK04: u32 = I2C_OAR2_OA2MASK04_Msk;
pub const I2C_OAR2_OA2MASK05_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK05_Msk: u32 = 0x5 << I2C_OAR2_OA2MASK05_Pos;
pub const I2C_OAR2_OA2MASK05: u32 = I2C_OAR2_OA2MASK05_Msk;
pub const I2C_OAR2_OA2MASK06_Pos: u32 = 9;
pub const I2C_OAR2_OA2MASK06_Msk: u32 = 0x3 << I2C_OAR2_OA2MASK06_Pos;
pub const I2C_OAR2_OA2MASK06: u32 = I2C_OAR2_OA2MASK06_Msk;
pub const I2C_OAR2_OA2MASK07_Pos: u32 = 8;
pub const I2C_OAR2_OA2MASK07_Msk: u32 = 0x7 << I2C_OAR2_OA2MASK07_Pos;
pub const I2C_OAR2_OA2MASK07: u32 = I2C_OAR2_OA2MASK07_Msk;
pub const I2C_OAR2_OA2EN_Pos: u32 = 15;
pub const I2C_OAR2_OA2EN_Msk: u32 = 0x1 << I2C_OAR2_OA2EN_Pos;
pub const I2C_OAR2_OA2EN: u32 = I2C_OAR2_OA2EN_Msk;
pub const I2C_TIMINGR_SCLL_Pos: u32 = 0;
pub const I2C_TIMINGR_SCLL_Msk: u32 = 0xFF << I2C_TIMINGR_SCLL_Pos;
pub const I2C_TIMINGR_SCLL: u32 = I2C_TIMINGR_SCLL_Msk;
pub const I2C_TIMINGR_SCLH_Pos: u32 = 8;
pub const I2C_TIMINGR_SCLH_Msk: u32 = 0xFF << I2C_TIMINGR_SCLH_Pos;
pub const I2C_TIMINGR_SCLH: u32 = I2C_TIMINGR_SCLH_Msk;
pub const I2C_TIMINGR_SDADEL_Pos: u32 = 16;
pub const I2C_TIMINGR_SDADEL_Msk: u32 = 0xF << I2C_TIMINGR_SDADEL_Pos;
pub const I2C_TIMINGR_SDADEL: u32 = I2C_TIMINGR_SDADEL_Msk;
pub const I2C_TIMINGR_SCLDEL_Pos: u32 = 20;
pub const I2C_TIMINGR_SCLDEL_Msk: u32 = 0xF << I2C_TIMINGR_SCLDEL_Pos;
pub const I2C_TIMINGR_SCLDEL: u32 = I2C_TIMINGR_SCLDEL_Msk;
pub const I2C_TIMINGR_PRESC_Pos: u32 = 28;
pub const I2C_TIMINGR_PRESC_Msk: u32 = 0xF << I2C_TIMINGR_PRESC_Pos;
pub const I2C_TIMINGR_PRESC: u32 = I2C_TIMINGR_PRESC_Msk;
pub const I2C_TIMEOUTR_TIMEOUTA_Pos: u32 = 0;
pub const I2C_TIMEOUTR_TIMEOUTA_Msk: u32 = 0xFFF << I2C_TIMEOUTR_TIMEOUTA_Pos;
pub const I2C_TIMEOUTR_TIMEOUTA: u32 = I2C_TIMEOUTR_TIMEOUTA_Msk;
pub const I2C_TIMEOUTR_TIDLE_Pos: u32 = 12;
pub const I2C_TIMEOUTR_TIDLE_Msk: u32 = 0x1 << I2C_TIMEOUTR_TIDLE_Pos;
pub const I2C_TIMEOUTR_TIDLE: u32 = I2C_TIMEOUTR_TIDLE_Msk;
pub const I2C_TIMEOUTR_TIMOUTEN_Pos: u32 = 15;
pub const I2C_TIMEOUTR_TIMOUTEN_Msk: u32 = 0x1 << I2C_TIMEOUTR_TIMOUTEN_Pos;
pub const I2C_TIMEOUTR_TIMOUTEN: u32 = I2C_TIMEOUTR_TIMOUTEN_Msk;
pub const I2C_TIMEOUTR_TIMEOUTB_Pos: u32 = 16;
pub const I2C_TIMEOUTR_TIMEOUTB_Msk: u32 = 0xFFF << I2C_TIMEOUTR_TIMEOUTB_Pos;
pub const I2C_TIMEOUTR_TIMEOUTB: u32 = I2C_TIMEOUTR_TIMEOUTB_Msk;
pub const I2C_TIMEOUTR_TEXTEN_Pos: u32 = 31;
pub const I2C_TIMEOUTR_TEXTEN_Msk: u32 = 0x1 << I2C_TIMEOUTR_TEXTEN_Pos;
pub const I2C_TIMEOUTR_TEXTEN: u32 = I2C_TIMEOUTR_TEXTEN_Msk;
pub const I2C_ISR_TXE_Pos: u32 = 0;
pub const I2C_ISR_TXE_Msk: u32 = 0x1 << I2C_ISR_TXE_Pos;
pub const I2C_ISR_TXE: u32 = I2C_ISR_TXE_Msk;
pub const I2C_ISR_TXIS_Pos: u32 = 1;
pub const I2C_ISR_TXIS_Msk: u32 = 0x1 << I2C_ISR_TXIS_Pos;
pub const I2C_ISR_TXIS: u32 = I2C_ISR_TXIS_Msk;
pub const I2C_ISR_RXNE_Pos: u32 = 2;
pub const I2C_ISR_RXNE_Msk: u32 = 0x1 << I2C_ISR_RXNE_Pos;
pub const I2C_ISR_RXNE: u32 = I2C_ISR_RXNE_Msk;
pub const I2C_ISR_ADDR_Pos: u32 = 3;
pub const I2C_ISR_ADDR_Msk: u32 = 0x1 << I2C_ISR_ADDR_Pos;
pub const I2C_ISR_ADDR: u32 = I2C_ISR_ADDR_Msk;
pub const I2C_ISR_NACKF_Pos: u32 = 4;
pub const I2C_ISR_NACKF_Msk: u32 = 0x1 << I2C_ISR_NACKF_Pos;
pub const I2C_ISR_NACKF: u32 = I2C_ISR_NACKF_Msk;
pub const I2C_ISR_STOPF_Pos: u32 = 5;
pub const I2C_ISR_STOPF_Msk: u32 = 0x1 << I2C_ISR_STOPF_Pos;
pub const I2C_ISR_STOPF: u32 = I2C_ISR_STOPF_Msk;
pub const I2C_ISR_TC_Pos: u32 = 6;
pub const I2C_ISR_TC_Msk: u32 = 0x1 << I2C_ISR_TC_Pos;
pub const I2C_ISR_TC: u32 = I2C_ISR_TC_Msk;
pub const I2C_ISR_TCR_Pos: u32 = 7;
pub const I2C_ISR_TCR_Msk: u32 = 0x1 << I2C_ISR_TCR_Pos;
pub const I2C_ISR_TCR: u32 = I2C_ISR_TCR_Msk;
pub const I2C_ISR_BERR_Pos: u32 = 8;
pub const I2C_ISR_BERR_Msk: u32 = 0x1 << I2C_ISR_BERR_Pos;
pub const I2C_ISR_BERR: u32 = I2C_ISR_BERR_Msk;
pub const I2C_ISR_ARLO_Pos: u32 = 9;
pub const I2C_ISR_ARLO_Msk: u32 = 0x1 << I2C_ISR_ARLO_Pos;
pub const I2C_ISR_ARLO: u32 = I2C_ISR_ARLO_Msk;
pub const I2C_ISR_OVR_Pos: u32 = 10;
pub const I2C_ISR_OVR_Msk: u32 = 0x1 << I2C_ISR_OVR_Pos;
pub const I2C_ISR_OVR: u32 = I2C_ISR_OVR_Msk;
pub const I2C_ISR_PECERR_Pos: u32 = 11;
pub const I2C_ISR_PECERR_Msk: u32 = 0x1 << I2C_ISR_PECERR_Pos;
pub const I2C_ISR_PECERR: u32 = I2C_ISR_PECERR_Msk;
pub const I2C_ISR_TIMEOUT_Pos: u32 = 12;
pub const I2C_ISR_TIMEOUT_Msk: u32 = 0x1 << I2C_ISR_TIMEOUT_Pos;
pub const I2C_ISR_TIMEOUT: u32 = I2C_ISR_TIMEOUT_Msk;
pub const I2C_ISR_ALERT_Pos: u32 = 13;
pub const I2C_ISR_ALERT_Msk: u32 = 0x1 << I2C_ISR_ALERT_Pos;
pub const I2C_ISR_ALERT: u32 = I2C_ISR_ALERT_Msk;
pub const I2C_ISR_BUSY_Pos: u32 = 15;
pub const I2C_ISR_BUSY_Msk: u32 = 0x1 << I2C_ISR_BUSY_Pos;
pub const I2C_ISR_BUSY: u32 = I2C_ISR_BUSY_Msk;
pub const I2C_ISR_DIR_Pos: u32 = 16;
pub const I2C_ISR_DIR_Msk: u32 = 0x1 << I2C_ISR_DIR_Pos;
pub const I2C_ISR_DIR: u32 = I2C_ISR_DIR_Msk;
pub const I2C_ISR_ADDCODE_Pos: u32 = 17;
pub const I2C_ISR_ADDCODE_Msk: u32 = 0x7F << I2C_ISR_ADDCODE_Pos;
pub const I2C_ISR_ADDCODE: u32 = I2C_ISR_ADDCODE_Msk;
pub const I2C_ICR_ADDRCF_Pos: u32 = 3;
pub const I2C_ICR_ADDRCF_Msk: u32 = 0x1 << I2C_ICR_ADDRCF_Pos;
pub const I2C_ICR_ADDRCF: u32 = I2C_ICR_ADDRCF_Msk;
pub const I2C_ICR_NACKCF_Pos: u32 = 4;
pub const I2C_ICR_NACKCF_Msk: u32 = 0x1 << I2C_ICR_NACKCF_Pos;
pub const I2C_ICR_NACKCF: u32 = I2C_ICR_NACKCF_Msk;
pub const I2C_ICR_STOPCF_Pos: u32 = 5;
pub const I2C_ICR_STOPCF_Msk: u32 = 0x1 << I2C_ICR_STOPCF_Pos;
pub const I2C_ICR_STOPCF: u32 = I2C_ICR_STOPCF_Msk;
pub const I2C_ICR_BERRCF_Pos: u32 = 8;
pub const I2C_ICR_BERRCF_Msk: u32 = 0x1 << I2C_ICR_BERRCF_Pos;
pub const I2C_ICR_BERRCF: u32 = I2C_ICR_BERRCF_Msk;
pub const I2C_ICR_ARLOCF_Pos: u32 = 9;
pub const I2C_ICR_ARLOCF_Msk: u32 = 0x1 << I2C_ICR_ARLOCF_Pos;
pub const I2C_ICR_ARLOCF: u32 = I2C_ICR_ARLOCF_Msk;
pub const I2C_ICR_OVRCF_Pos: u32 = 10;
pub const I2C_ICR_OVRCF_Msk: u32 = 0x1 << I2C_ICR_OVRCF_Pos;
pub const I2C_ICR_OVRCF: u32 = I2C_ICR_OVRCF_Msk;
pub const I2C_ICR_PECCF_Pos: u32 = 11;
pub const I2C_ICR_PECCF_Msk: u32 = 0x1 << I2C_ICR_PECCF_Pos;
pub const I2C_ICR_PECCF: u32 = I2C_ICR_PECCF_Msk;
pub const I2C_ICR_TIMOUTCF_Pos: u32 = 12;
pub const I2C_ICR_TIMOUTCF_Msk: u32 = 0x1 << I2C_ICR_TIMOUTCF_Pos;
pub const I2C_ICR_TIMOUTCF: u32 = I2C_ICR_TIMOUTCF_Msk;
pub const I2C_ICR_ALERTCF_Pos: u32 = 13;
pub const I2C_ICR_ALERTCF_Msk: u32 = 0x1 << I2C_ICR_ALERTCF_Pos;
pub const I2C_ICR_ALERTCF: u32 = I2C_ICR_ALERTCF_Msk;
pub const I2C_PECR_PEC_Pos: u32 = 0;
pub const I2C_PECR_PEC_Msk: u32 = 0xFF << I2C_PECR_PEC_Pos;
pub const I2C_PECR_PEC: u32 = I2C_PECR_PEC_Msk;
pub const I2C_RXDR_RXDATA_Pos: u32 = 0;
pub const I2C_RXDR_RXDATA_Msk: u32 = 0xFF << I2C_RXDR_RXDATA_Pos;
pub const I2C_RXDR_RXDATA: u32 = I2C_RXDR_RXDATA_Msk;
pub const I2C_TXDR_TXDATA_Pos: u32 = 0;
pub const I2C_TXDR_TXDATA_Msk: u32 = 0xFF << I2C_TXDR_TXDATA_Pos;
pub const I2C_TXDR_TXDATA: u32 = I2C_TXDR_TXDATA_Msk;
pub const IWDG_KR_KEY_Pos: u32 = 0;
pub const IWDG_KR_KEY_Msk: u32 = 0xFFFF << IWDG_KR_KEY_Pos;
pub const IWDG_KR_KEY: u32 = IWDG_KR_KEY_Msk;
pub const IWDG_PR_PR_Pos: u32 = 0;
pub const IWDG_PR_PR_Msk: u32 = 0x7 << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR: u32 = IWDG_PR_PR_Msk;
pub const IWDG_PR_PR_0: u32 = 0x1 << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR_1: u32 = 0x2 << IWDG_PR_PR_Pos;
pub const IWDG_PR_PR_2: u32 = 0x4 << IWDG_PR_PR_Pos;
pub const IWDG_RLR_RL_Pos: u32 = 0;
pub const IWDG_RLR_RL_Msk: u32 = 0xFFF << IWDG_RLR_RL_Pos;
pub const IWDG_RLR_RL: u32 = IWDG_RLR_RL_Msk;
pub const IWDG_SR_PVU_Pos: u32 = 0;
pub const IWDG_SR_PVU_Msk: u32 = 0x1 << IWDG_SR_PVU_Pos;
pub const IWDG_SR_PVU: u32 = IWDG_SR_PVU_Msk;
pub const IWDG_SR_RVU_Pos: u32 = 1;
pub const IWDG_SR_RVU_Msk: u32 = 0x1 << IWDG_SR_RVU_Pos;
pub const IWDG_SR_RVU: u32 = IWDG_SR_RVU_Msk;
pub const IWDG_SR_WVU_Pos: u32 = 2;
pub const IWDG_SR_WVU_Msk: u32 = 0x1 << IWDG_SR_WVU_Pos;
pub const IWDG_SR_WVU: u32 = IWDG_SR_WVU_Msk;
pub const IWDG_WINR_WIN_Pos: u32 = 0;
pub const IWDG_WINR_WIN_Msk: u32 = 0xFFF << IWDG_WINR_WIN_Pos;
pub const IWDG_WINR_WIN: u32 = IWDG_WINR_WIN_Msk;
pub const LPTIM_ISR_CMPM_Pos: u32 = 0;
pub const LPTIM_ISR_CMPM_Msk: u32 = 0x1 << LPTIM_ISR_CMPM_Pos;
pub const LPTIM_ISR_CMPM: u32 = LPTIM_ISR_CMPM_Msk;
pub const LPTIM_ISR_ARRM_Pos: u32 = 1;
pub const LPTIM_ISR_ARRM_Msk: u32 = 0x1 << LPTIM_ISR_ARRM_Pos;
pub const LPTIM_ISR_ARRM: u32 = LPTIM_ISR_ARRM_Msk;
pub const LPTIM_ISR_EXTTRIG_Pos: u32 = 2;
pub const LPTIM_ISR_EXTTRIG_Msk: u32 = 0x1 << LPTIM_ISR_EXTTRIG_Pos;
pub const LPTIM_ISR_EXTTRIG: u32 = LPTIM_ISR_EXTTRIG_Msk;
pub const LPTIM_ISR_CMPOK_Pos: u32 = 3;
pub const LPTIM_ISR_CMPOK_Msk: u32 = 0x1 << LPTIM_ISR_CMPOK_Pos;
pub const LPTIM_ISR_CMPOK: u32 = LPTIM_ISR_CMPOK_Msk;
pub const LPTIM_ISR_ARROK_Pos: u32 = 4;
pub const LPTIM_ISR_ARROK_Msk: u32 = 0x1 << LPTIM_ISR_ARROK_Pos;
pub const LPTIM_ISR_ARROK: u32 = LPTIM_ISR_ARROK_Msk;
pub const LPTIM_ISR_UP_Pos: u32 = 5;
pub const LPTIM_ISR_UP_Msk: u32 = 0x1 << LPTIM_ISR_UP_Pos;
pub const LPTIM_ISR_UP: u32 = LPTIM_ISR_UP_Msk;
pub const LPTIM_ISR_DOWN_Pos: u32 = 6;
pub const LPTIM_ISR_DOWN_Msk: u32 = 0x1 << LPTIM_ISR_DOWN_Pos;
pub const LPTIM_ISR_DOWN: u32 = LPTIM_ISR_DOWN_Msk;
pub const LPTIM_ICR_CMPMCF_Pos: u32 = 0;
pub const LPTIM_ICR_CMPMCF_Msk: u32 = 0x1 << LPTIM_ICR_CMPMCF_Pos;
pub const LPTIM_ICR_CMPMCF: u32 = LPTIM_ICR_CMPMCF_Msk;
pub const LPTIM_ICR_ARRMCF_Pos: u32 = 1;
pub const LPTIM_ICR_ARRMCF_Msk: u32 = 0x1 << LPTIM_ICR_ARRMCF_Pos;
pub const LPTIM_ICR_ARRMCF: u32 = LPTIM_ICR_ARRMCF_Msk;
pub const LPTIM_ICR_EXTTRIGCF_Pos: u32 = 2;
pub const LPTIM_ICR_EXTTRIGCF_Msk: u32 = 0x1 << LPTIM_ICR_EXTTRIGCF_Pos;
pub const LPTIM_ICR_EXTTRIGCF: u32 = LPTIM_ICR_EXTTRIGCF_Msk;
pub const LPTIM_ICR_CMPOKCF_Pos: u32 = 3;
pub const LPTIM_ICR_CMPOKCF_Msk: u32 = 0x1 << LPTIM_ICR_CMPOKCF_Pos;
pub const LPTIM_ICR_CMPOKCF: u32 = LPTIM_ICR_CMPOKCF_Msk;
pub const LPTIM_ICR_ARROKCF_Pos: u32 = 4;
pub const LPTIM_ICR_ARROKCF_Msk: u32 = 0x1 << LPTIM_ICR_ARROKCF_Pos;
pub const LPTIM_ICR_ARROKCF: u32 = LPTIM_ICR_ARROKCF_Msk;
pub const LPTIM_ICR_UPCF_Pos: u32 = 5;
pub const LPTIM_ICR_UPCF_Msk: u32 = 0x1 << LPTIM_ICR_UPCF_Pos;
pub const LPTIM_ICR_UPCF: u32 = LPTIM_ICR_UPCF_Msk;
pub const LPTIM_ICR_DOWNCF_Pos: u32 = 6;
pub const LPTIM_ICR_DOWNCF_Msk: u32 = 0x1 << LPTIM_ICR_DOWNCF_Pos;
pub const LPTIM_ICR_DOWNCF: u32 = LPTIM_ICR_DOWNCF_Msk;
pub const LPTIM_IER_CMPMIE_Pos: u32 = 0;
pub const LPTIM_IER_CMPMIE_Msk: u32 = 0x1 << LPTIM_IER_CMPMIE_Pos;
pub const LPTIM_IER_CMPMIE: u32 = LPTIM_IER_CMPMIE_Msk;
pub const LPTIM_IER_ARRMIE_Pos: u32 = 1;
pub const LPTIM_IER_ARRMIE_Msk: u32 = 0x1 << LPTIM_IER_ARRMIE_Pos;
pub const LPTIM_IER_ARRMIE: u32 = LPTIM_IER_ARRMIE_Msk;
pub const LPTIM_IER_EXTTRIGIE_Pos: u32 = 2;
pub const LPTIM_IER_EXTTRIGIE_Msk: u32 = 0x1 << LPTIM_IER_EXTTRIGIE_Pos;
pub const LPTIM_IER_EXTTRIGIE: u32 = LPTIM_IER_EXTTRIGIE_Msk;
pub const LPTIM_IER_CMPOKIE_Pos: u32 = 3;
pub const LPTIM_IER_CMPOKIE_Msk: u32 = 0x1 << LPTIM_IER_CMPOKIE_Pos;
pub const LPTIM_IER_CMPOKIE: u32 = LPTIM_IER_CMPOKIE_Msk;
pub const LPTIM_IER_ARROKIE_Pos: u32 = 4;
pub const LPTIM_IER_ARROKIE_Msk: u32 = 0x1 << LPTIM_IER_ARROKIE_Pos;
pub const LPTIM_IER_ARROKIE: u32 = LPTIM_IER_ARROKIE_Msk;
pub const LPTIM_IER_UPIE_Pos: u32 = 5;
pub const LPTIM_IER_UPIE_Msk: u32 = 0x1 << LPTIM_IER_UPIE_Pos;
pub const LPTIM_IER_UPIE: u32 = LPTIM_IER_UPIE_Msk;
pub const LPTIM_IER_DOWNIE_Pos: u32 = 6;
pub const LPTIM_IER_DOWNIE_Msk: u32 = 0x1 << LPTIM_IER_DOWNIE_Pos;
pub const LPTIM_IER_DOWNIE: u32 = LPTIM_IER_DOWNIE_Msk;
pub const LPTIM_CFGR_CKSEL_Pos: u32 = 0;
pub const LPTIM_CFGR_CKSEL_Msk: u32 = 0x1 << LPTIM_CFGR_CKSEL_Pos;
pub const LPTIM_CFGR_CKSEL: u32 = LPTIM_CFGR_CKSEL_Msk;
pub const LPTIM_CFGR_CKPOL_Pos: u32 = 1;
pub const LPTIM_CFGR_CKPOL_Msk: u32 = 0x3 << LPTIM_CFGR_CKPOL_Pos;
pub const LPTIM_CFGR_CKPOL: u32 = LPTIM_CFGR_CKPOL_Msk;
pub const LPTIM_CFGR_CKPOL_0: u32 = 0x1 << LPTIM_CFGR_CKPOL_Pos;
pub const LPTIM_CFGR_CKPOL_1: u32 = 0x2 << LPTIM_CFGR_CKPOL_Pos;
pub const LPTIM_CFGR_CKFLT_Pos: u32 = 3;
pub const LPTIM_CFGR_CKFLT_Msk: u32 = 0x3 << LPTIM_CFGR_CKFLT_Pos;
pub const LPTIM_CFGR_CKFLT: u32 = LPTIM_CFGR_CKFLT_Msk;
pub const LPTIM_CFGR_CKFLT_0: u32 = 0x1 << LPTIM_CFGR_CKFLT_Pos;
pub const LPTIM_CFGR_CKFLT_1: u32 = 0x2 << LPTIM_CFGR_CKFLT_Pos;
pub const LPTIM_CFGR_TRGFLT_Pos: u32 = 6;
pub const LPTIM_CFGR_TRGFLT_Msk: u32 = 0x3 << LPTIM_CFGR_TRGFLT_Pos;
pub const LPTIM_CFGR_TRGFLT: u32 = LPTIM_CFGR_TRGFLT_Msk;
pub const LPTIM_CFGR_TRGFLT_0: u32 = 0x1 << LPTIM_CFGR_TRGFLT_Pos;
pub const LPTIM_CFGR_TRGFLT_1: u32 = 0x2 << LPTIM_CFGR_TRGFLT_Pos;
pub const LPTIM_CFGR_PRESC_Pos: u32 = 9;
pub const LPTIM_CFGR_PRESC_Msk: u32 = 0x7 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_PRESC: u32 = LPTIM_CFGR_PRESC_Msk;
pub const LPTIM_CFGR_PRESC_0: u32 = 0x1 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_PRESC_1: u32 = 0x2 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_PRESC_2: u32 = 0x4 << LPTIM_CFGR_PRESC_Pos;
pub const LPTIM_CFGR_TRIGSEL_Pos: u32 = 13;
pub const LPTIM_CFGR_TRIGSEL_Msk: u32 = 0x7 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGSEL: u32 = LPTIM_CFGR_TRIGSEL_Msk;
pub const LPTIM_CFGR_TRIGSEL_0: u32 = 0x1 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGSEL_1: u32 = 0x2 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGSEL_2: u32 = 0x4 << LPTIM_CFGR_TRIGSEL_Pos;
pub const LPTIM_CFGR_TRIGEN_Pos: u32 = 17;
pub const LPTIM_CFGR_TRIGEN_Msk: u32 = 0x3 << LPTIM_CFGR_TRIGEN_Pos;
pub const LPTIM_CFGR_TRIGEN: u32 = LPTIM_CFGR_TRIGEN_Msk;
pub const LPTIM_CFGR_TRIGEN_0: u32 = 0x1 << LPTIM_CFGR_TRIGEN_Pos;
pub const LPTIM_CFGR_TRIGEN_1: u32 = 0x2 << LPTIM_CFGR_TRIGEN_Pos;
pub const LPTIM_CFGR_TIMOUT_Pos: u32 = 19;
pub const LPTIM_CFGR_TIMOUT_Msk: u32 = 0x1 << LPTIM_CFGR_TIMOUT_Pos;
pub const LPTIM_CFGR_TIMOUT: u32 = LPTIM_CFGR_TIMOUT_Msk;
pub const LPTIM_CFGR_WAVE_Pos: u32 = 20;
pub const LPTIM_CFGR_WAVE_Msk: u32 = 0x1 << LPTIM_CFGR_WAVE_Pos;
pub const LPTIM_CFGR_WAVE: u32 = LPTIM_CFGR_WAVE_Msk;
pub const LPTIM_CFGR_WAVPOL_Pos: u32 = 21;
pub const LPTIM_CFGR_WAVPOL_Msk: u32 = 0x1 << LPTIM_CFGR_WAVPOL_Pos;
pub const LPTIM_CFGR_WAVPOL: u32 = LPTIM_CFGR_WAVPOL_Msk;
pub const LPTIM_CFGR_PRELOAD_Pos: u32 = 22;
pub const LPTIM_CFGR_PRELOAD_Msk: u32 = 0x1 << LPTIM_CFGR_PRELOAD_Pos;
pub const LPTIM_CFGR_PRELOAD: u32 = LPTIM_CFGR_PRELOAD_Msk;
pub const LPTIM_CFGR_COUNTMODE_Pos: u32 = 23;
pub const LPTIM_CFGR_COUNTMODE_Msk: u32 = 0x1 << LPTIM_CFGR_COUNTMODE_Pos;
pub const LPTIM_CFGR_COUNTMODE: u32 = LPTIM_CFGR_COUNTMODE_Msk;
pub const LPTIM_CFGR_ENC_Pos: u32 = 24;
pub const LPTIM_CFGR_ENC_Msk: u32 = 0x1 << LPTIM_CFGR_ENC_Pos;
pub const LPTIM_CFGR_ENC: u32 = LPTIM_CFGR_ENC_Msk;
pub const LPTIM_CR_ENABLE_Pos: u32 = 0;
pub const LPTIM_CR_ENABLE_Msk: u32 = 0x1 << LPTIM_CR_ENABLE_Pos;
pub const LPTIM_CR_ENABLE: u32 = LPTIM_CR_ENABLE_Msk;
pub const LPTIM_CR_SNGSTRT_Pos: u32 = 1;
pub const LPTIM_CR_SNGSTRT_Msk: u32 = 0x1 << LPTIM_CR_SNGSTRT_Pos;
pub const LPTIM_CR_SNGSTRT: u32 = LPTIM_CR_SNGSTRT_Msk;
pub const LPTIM_CR_CNTSTRT_Pos: u32 = 2;
pub const LPTIM_CR_CNTSTRT_Msk: u32 = 0x1 << LPTIM_CR_CNTSTRT_Pos;
pub const LPTIM_CR_CNTSTRT: u32 = LPTIM_CR_CNTSTRT_Msk;
pub const LPTIM_CMP_CMP_Pos: u32 = 0;
pub const LPTIM_CMP_CMP_Msk: u32 = 0xFFFF << LPTIM_CMP_CMP_Pos;
pub const LPTIM_CMP_CMP: u32 = LPTIM_CMP_CMP_Msk;
pub const LPTIM_ARR_ARR_Pos: u32 = 0;
pub const LPTIM_ARR_ARR_Msk: u32 = 0xFFFF << LPTIM_ARR_ARR_Pos;
pub const LPTIM_ARR_ARR: u32 = LPTIM_ARR_ARR_Msk;
pub const LPTIM_CNT_CNT_Pos: u32 = 0;
pub const LPTIM_CNT_CNT_Msk: u32 = 0xFFFF << LPTIM_CNT_CNT_Pos;
pub const LPTIM_CNT_CNT: u32 = LPTIM_CNT_CNT_Msk;
pub const FW_CSSA_ADD_Pos: u32 = 8;
pub const FW_CSSA_ADD_Msk: u32 = 0xFFFF << FW_CSSA_ADD_Pos;
pub const FW_CSSA_ADD: u32 = FW_CSSA_ADD_Msk;
pub const FW_CSL_LENG_Pos: u32 = 8;
pub const FW_CSL_LENG_Msk: u32 = 0x3FFF << FW_CSL_LENG_Pos;
pub const FW_CSL_LENG: u32 = FW_CSL_LENG_Msk;
pub const FW_NVDSSA_ADD_Pos: u32 = 8;
pub const FW_NVDSSA_ADD_Msk: u32 = 0xFFFF << FW_NVDSSA_ADD_Pos;
pub const FW_NVDSSA_ADD: u32 = FW_NVDSSA_ADD_Msk;
pub const FW_NVDSL_LENG_Pos: u32 = 8;
pub const FW_NVDSL_LENG_Msk: u32 = 0x3FFF << FW_NVDSL_LENG_Pos;
pub const FW_NVDSL_LENG: u32 = FW_NVDSL_LENG_Msk;
pub const FW_VDSSA_ADD_Pos: u32 = 6;
pub const FW_VDSSA_ADD_Msk: u32 = 0x3FF << FW_VDSSA_ADD_Pos;
pub const FW_VDSSA_ADD: u32 = FW_VDSSA_ADD_Msk;
pub const FW_VDSL_LENG_Pos: u32 = 6;
pub const FW_VDSL_LENG_Msk: u32 = 0x3FF << FW_VDSL_LENG_Pos;
pub const FW_VDSL_LENG: u32 = FW_VDSL_LENG_Msk;
pub const FW_CR_FPA_Pos: u32 = 0;
pub const FW_CR_FPA_Msk: u32 = 0x1 << FW_CR_FPA_Pos;
pub const FW_CR_FPA: u32 = FW_CR_FPA_Msk;
pub const FW_CR_VDS_Pos: u32 = 1;
pub const FW_CR_VDS_Msk: u32 = 0x1 << FW_CR_VDS_Pos;
pub const FW_CR_VDS: u32 = FW_CR_VDS_Msk;
pub const FW_CR_VDE_Pos: u32 = 2;
pub const FW_CR_VDE_Msk: u32 = 0x1 << FW_CR_VDE_Pos;
pub const FW_CR_VDE: u32 = FW_CR_VDE_Msk;
pub const PWR_CR_LPSDSR_Pos: u32 = 0;
pub const PWR_CR_LPSDSR_Msk: u32 = 0x1 << PWR_CR_LPSDSR_Pos;
pub const PWR_CR_LPSDSR: u32 = PWR_CR_LPSDSR_Msk;
pub const PWR_CR_PDDS_Pos: u32 = 1;
pub const PWR_CR_PDDS_Msk: u32 = 0x1 << PWR_CR_PDDS_Pos;
pub const PWR_CR_PDDS: u32 = PWR_CR_PDDS_Msk;
pub const PWR_CR_CWUF_Pos: u32 = 2;
pub const PWR_CR_CWUF_Msk: u32 = 0x1 << PWR_CR_CWUF_Pos;
pub const PWR_CR_CWUF: u32 = PWR_CR_CWUF_Msk;
pub const PWR_CR_CSBF_Pos: u32 = 3;
pub const PWR_CR_CSBF_Msk: u32 = 0x1 << PWR_CR_CSBF_Pos;
pub const PWR_CR_CSBF: u32 = PWR_CR_CSBF_Msk;
pub const PWR_CR_PVDE_Pos: u32 = 4;
pub const PWR_CR_PVDE_Msk: u32 = 0x1 << PWR_CR_PVDE_Pos;
pub const PWR_CR_PVDE: u32 = PWR_CR_PVDE_Msk;
pub const PWR_CR_PLS_Pos: u32 = 5;
pub const PWR_CR_PLS_Msk: u32 = 0x7 << PWR_CR_PLS_Pos;
pub const PWR_CR_PLS: u32 = PWR_CR_PLS_Msk;
pub const PWR_CR_PLS_0: u32 = 0x1 << PWR_CR_PLS_Pos;
pub const PWR_CR_PLS_1: u32 = 0x2 << PWR_CR_PLS_Pos;
pub const PWR_CR_PLS_2: u32 = 0x4 << PWR_CR_PLS_Pos;
pub const PWR_CR_PLS_LEV0: u32 = 0x00000000;
pub const PWR_CR_PLS_LEV1: u32 = 0x00000020;
pub const PWR_CR_PLS_LEV2: u32 = 0x00000040;
pub const PWR_CR_PLS_LEV3: u32 = 0x00000060;
pub const PWR_CR_PLS_LEV4: u32 = 0x00000080;
pub const PWR_CR_PLS_LEV5: u32 = 0x000000A0;
pub const PWR_CR_PLS_LEV6: u32 = 0x000000C0;
pub const PWR_CR_PLS_LEV7: u32 = 0x000000E0;
pub const PWR_CR_DBP_Pos: u32 = 8;
pub const PWR_CR_DBP_Msk: u32 = 0x1 << PWR_CR_DBP_Pos;
pub const PWR_CR_DBP: u32 = PWR_CR_DBP_Msk;
pub const PWR_CR_ULP_Pos: u32 = 9;
pub const PWR_CR_ULP_Msk: u32 = 0x1 << PWR_CR_ULP_Pos;
pub const PWR_CR_ULP: u32 = PWR_CR_ULP_Msk;
pub const PWR_CR_FWU_Pos: u32 = 10;
pub const PWR_CR_FWU_Msk: u32 = 0x1 << PWR_CR_FWU_Pos;
pub const PWR_CR_FWU: u32 = PWR_CR_FWU_Msk;
pub const PWR_CR_VOS_Pos: u32 = 11;
pub const PWR_CR_VOS_Msk: u32 = 0x3 << PWR_CR_VOS_Pos;
pub const PWR_CR_VOS: u32 = PWR_CR_VOS_Msk;
pub const PWR_CR_VOS_0: u32 = 0x1 << PWR_CR_VOS_Pos;
pub const PWR_CR_VOS_1: u32 = 0x2 << PWR_CR_VOS_Pos;
pub const PWR_CR_DSEEKOFF_Pos: u32 = 13;
pub const PWR_CR_DSEEKOFF_Msk: u32 = 0x1 << PWR_CR_DSEEKOFF_Pos;
pub const PWR_CR_DSEEKOFF: u32 = PWR_CR_DSEEKOFF_Msk;
pub const PWR_CR_LPRUN_Pos: u32 = 14;
pub const PWR_CR_LPRUN_Msk: u32 = 0x1 << PWR_CR_LPRUN_Pos;
pub const PWR_CR_LPRUN: u32 = PWR_CR_LPRUN_Msk;
pub const PWR_CSR_WUF_Pos: u32 = 0;
pub const PWR_CSR_WUF_Msk: u32 = 0x1 << PWR_CSR_WUF_Pos;
pub const PWR_CSR_WUF: u32 = PWR_CSR_WUF_Msk;
pub const PWR_CSR_SBF_Pos: u32 = 1;
pub const PWR_CSR_SBF_Msk: u32 = 0x1 << PWR_CSR_SBF_Pos;
pub const PWR_CSR_SBF: u32 = PWR_CSR_SBF_Msk;
pub const PWR_CSR_PVDO_Pos: u32 = 2;
pub const PWR_CSR_PVDO_Msk: u32 = 0x1 << PWR_CSR_PVDO_Pos;
pub const PWR_CSR_PVDO: u32 = PWR_CSR_PVDO_Msk;
pub const PWR_CSR_VREFINTRDYF_Pos: u32 = 3;
pub const PWR_CSR_VREFINTRDYF_Msk: u32 = 0x1 << PWR_CSR_VREFINTRDYF_Pos;
pub const PWR_CSR_VREFINTRDYF: u32 = PWR_CSR_VREFINTRDYF_Msk;
pub const PWR_CSR_VOSF_Pos: u32 = 4;
pub const PWR_CSR_VOSF_Msk: u32 = 0x1 << PWR_CSR_VOSF_Pos;
pub const PWR_CSR_VOSF: u32 = PWR_CSR_VOSF_Msk;
pub const PWR_CSR_REGLPF_Pos: u32 = 5;
pub const PWR_CSR_REGLPF_Msk: u32 = 0x1 << PWR_CSR_REGLPF_Pos;
pub const PWR_CSR_REGLPF: u32 = PWR_CSR_REGLPF_Msk;
pub const PWR_CSR_EWUP1_Pos: u32 = 8;
pub const PWR_CSR_EWUP1_Msk: u32 = 0x1 << PWR_CSR_EWUP1_Pos;
pub const PWR_CSR_EWUP1: u32 = PWR_CSR_EWUP1_Msk;
pub const PWR_CSR_EWUP2_Pos: u32 = 9;
pub const PWR_CSR_EWUP2_Msk: u32 = 0x1 << PWR_CSR_EWUP2_Pos;
pub const PWR_CSR_EWUP2: u32 = PWR_CSR_EWUP2_Msk;
pub const RCC_CR_HSION_Pos: u32 = 0;
pub const RCC_CR_HSION_Msk: u32 = 0x1 << RCC_CR_HSION_Pos;
pub const RCC_CR_HSION: u32 = RCC_CR_HSION_Msk;
pub const RCC_CR_HSIKERON_Pos: u32 = 1;
pub const RCC_CR_HSIKERON_Msk: u32 = 0x1 << RCC_CR_HSIKERON_Pos;
pub const RCC_CR_HSIKERON: u32 = RCC_CR_HSIKERON_Msk;
pub const RCC_CR_HSIRDY_Pos: u32 = 2;
pub const RCC_CR_HSIRDY_Msk: u32 = 0x1 << RCC_CR_HSIRDY_Pos;
pub const RCC_CR_HSIRDY: u32 = RCC_CR_HSIRDY_Msk;
pub const RCC_CR_HSIDIVEN_Pos: u32 = 3;
pub const RCC_CR_HSIDIVEN_Msk: u32 = 0x1 << RCC_CR_HSIDIVEN_Pos;
pub const RCC_CR_HSIDIVEN: u32 = RCC_CR_HSIDIVEN_Msk;
pub const RCC_CR_HSIDIVF_Pos: u32 = 4;
pub const RCC_CR_HSIDIVF_Msk: u32 = 0x1 << RCC_CR_HSIDIVF_Pos;
pub const RCC_CR_HSIDIVF: u32 = RCC_CR_HSIDIVF_Msk;
pub const RCC_CR_MSION_Pos: u32 = 8;
pub const RCC_CR_MSION_Msk: u32 = 0x1 << RCC_CR_MSION_Pos;
pub const RCC_CR_MSION: u32 = RCC_CR_MSION_Msk;
pub const RCC_CR_MSIRDY_Pos: u32 = 9;
pub const RCC_CR_MSIRDY_Msk: u32 = 0x1 << RCC_CR_MSIRDY_Pos;
pub const RCC_CR_MSIRDY: u32 = RCC_CR_MSIRDY_Msk;
pub const RCC_CR_HSEON_Pos: u32 = 16;
pub const RCC_CR_HSEON_Msk: u32 = 0x1 << RCC_CR_HSEON_Pos;
pub const RCC_CR_HSEON: u32 = RCC_CR_HSEON_Msk;
pub const RCC_CR_HSERDY_Pos: u32 = 17;
pub const RCC_CR_HSERDY_Msk: u32 = 0x1 << RCC_CR_HSERDY_Pos;
pub const RCC_CR_HSERDY: u32 = RCC_CR_HSERDY_Msk;
pub const RCC_CR_HSEBYP_Pos: u32 = 18;
pub const RCC_CR_HSEBYP_Msk: u32 = 0x1 << RCC_CR_HSEBYP_Pos;
pub const RCC_CR_HSEBYP: u32 = RCC_CR_HSEBYP_Msk;
pub const RCC_CR_CSSHSEON_Pos: u32 = 19;
pub const RCC_CR_CSSHSEON_Msk: u32 = 0x1 << RCC_CR_CSSHSEON_Pos;
pub const RCC_CR_CSSHSEON: u32 = RCC_CR_CSSHSEON_Msk;
pub const RCC_CR_RTCPRE_Pos: u32 = 20;
pub const RCC_CR_RTCPRE_Msk: u32 = 0x3 << RCC_CR_RTCPRE_Pos;
pub const RCC_CR_RTCPRE: u32 = RCC_CR_RTCPRE_Msk;
pub const RCC_CR_RTCPRE_0: u32 = 0x1 << RCC_CR_RTCPRE_Pos;
pub const RCC_CR_RTCPRE_1: u32 = 0x2 << RCC_CR_RTCPRE_Pos;
pub const RCC_CR_PLLON_Pos: u32 = 24;
pub const RCC_CR_PLLON_Msk: u32 = 0x1 << RCC_CR_PLLON_Pos;
pub const RCC_CR_PLLON: u32 = RCC_CR_PLLON_Msk;
pub const RCC_CR_PLLRDY_Pos: u32 = 25;
pub const RCC_CR_PLLRDY_Msk: u32 = 0x1 << RCC_CR_PLLRDY_Pos;
pub const RCC_CR_PLLRDY: u32 = RCC_CR_PLLRDY_Msk;
pub const RCC_CR_CSSON: u32 = RCC_CR_CSSHSEON;
pub const RCC_ICSCR_HSICAL_Pos: u32 = 0;
pub const RCC_ICSCR_HSICAL_Msk: u32 = 0xFF << RCC_ICSCR_HSICAL_Pos;
pub const RCC_ICSCR_HSICAL: u32 = RCC_ICSCR_HSICAL_Msk;
pub const RCC_ICSCR_HSITRIM_Pos: u32 = 8;
pub const RCC_ICSCR_HSITRIM_Msk: u32 = 0x1F << RCC_ICSCR_HSITRIM_Pos;
pub const RCC_ICSCR_HSITRIM: u32 = RCC_ICSCR_HSITRIM_Msk;
pub const RCC_ICSCR_MSIRANGE_Pos: u32 = 13;
pub const RCC_ICSCR_MSIRANGE_Msk: u32 = 0x7 << RCC_ICSCR_MSIRANGE_Pos;
pub const RCC_ICSCR_MSIRANGE: u32 = RCC_ICSCR_MSIRANGE_Msk;
pub const RCC_ICSCR_MSIRANGE_0: u32 = 0x0 << RCC_ICSCR_MSIRANGE_Pos;
pub const RCC_ICSCR_MSIRANGE_1: u32 = 0x1 << RCC_ICSCR_MSIRANGE_Pos;
pub const RCC_ICSCR_MSIRANGE_2: u32 = 0x2 << RCC_ICSCR_MSIRANGE_Pos;
pub const RCC_ICSCR_MSIRANGE_3: u32 = 0x3 << RCC_ICSCR_MSIRANGE_Pos;
pub const RCC_ICSCR_MSIRANGE_4: u32 = 0x4 << RCC_ICSCR_MSIRANGE_Pos;
pub const RCC_ICSCR_MSIRANGE_5: u32 = 0x5 << RCC_ICSCR_MSIRANGE_Pos;
pub const RCC_ICSCR_MSIRANGE_6: u32 = 0x6 << RCC_ICSCR_MSIRANGE_Pos;
pub const RCC_ICSCR_MSICAL_Pos: u32 = 16;
pub const RCC_ICSCR_MSICAL_Msk: u32 = 0xFF << RCC_ICSCR_MSICAL_Pos;
pub const RCC_ICSCR_MSICAL: u32 = RCC_ICSCR_MSICAL_Msk;
pub const RCC_ICSCR_MSITRIM_Pos: u32 = 24;
pub const RCC_ICSCR_MSITRIM_Msk: u32 = 0xFF << RCC_ICSCR_MSITRIM_Pos;
pub const RCC_ICSCR_MSITRIM: u32 = RCC_ICSCR_MSITRIM_Msk;
pub const RCC_CRRCR_HSI48ON_Pos: u32 = 0;
pub const RCC_CRRCR_HSI48ON_Msk: u32 = 0x1 << RCC_CRRCR_HSI48ON_Pos;
pub const RCC_CRRCR_HSI48ON: u32 = RCC_CRRCR_HSI48ON_Msk;
pub const RCC_CRRCR_HSI48RDY_Pos: u32 = 1;
pub const RCC_CRRCR_HSI48RDY_Msk: u32 = 0x1 << RCC_CRRCR_HSI48RDY_Pos;
pub const RCC_CRRCR_HSI48RDY: u32 = RCC_CRRCR_HSI48RDY_Msk;
pub const RCC_CRRCR_HSI48CAL_Pos: u32 = 8;
pub const RCC_CRRCR_HSI48CAL_Msk: u32 = 0xFF << RCC_CRRCR_HSI48CAL_Pos;
pub const RCC_CRRCR_HSI48CAL: u32 = RCC_CRRCR_HSI48CAL_Msk;
pub const RCC_CFGR_SW_Pos: u32 = 0;
pub const RCC_CFGR_SW_Msk: u32 = 0x3 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SW: u32 = RCC_CFGR_SW_Msk;
pub const RCC_CFGR_SW_0: u32 = 0x1 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SW_1: u32 = 0x2 << RCC_CFGR_SW_Pos;
pub const RCC_CFGR_SW_MSI: u32 = 0x00000000;
pub const RCC_CFGR_SW_HSI: u32 = 0x00000001;
pub const RCC_CFGR_SW_HSE: u32 = 0x00000002;
pub const RCC_CFGR_SW_PLL: u32 = 0x00000003;
pub const RCC_CFGR_SWS_Pos: u32 = 2;
pub const RCC_CFGR_SWS_Msk: u32 = 0x3 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_SWS: u32 = RCC_CFGR_SWS_Msk;
pub const RCC_CFGR_SWS_0: u32 = 0x1 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_SWS_1: u32 = 0x2 << RCC_CFGR_SWS_Pos;
pub const RCC_CFGR_SWS_MSI: u32 = 0x00000000;
pub const RCC_CFGR_SWS_HSI: u32 = 0x00000004;
pub const RCC_CFGR_SWS_HSE: u32 = 0x00000008;
pub const RCC_CFGR_SWS_PLL: u32 = 0x0000000C;
pub const RCC_CFGR_HPRE_Pos: u32 = 4;
pub const RCC_CFGR_HPRE_Msk: u32 = 0xF << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE: u32 = RCC_CFGR_HPRE_Msk;
pub const RCC_CFGR_HPRE_0: u32 = 0x1 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_1: u32 = 0x2 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_2: u32 = 0x4 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_3: u32 = 0x8 << RCC_CFGR_HPRE_Pos;
pub const RCC_CFGR_HPRE_DIV1: u32 = 0x00000000;
pub const RCC_CFGR_HPRE_DIV2: u32 = 0x00000080;
pub const RCC_CFGR_HPRE_DIV4: u32 = 0x00000090;
pub const RCC_CFGR_HPRE_DIV8: u32 = 0x000000A0;
pub const RCC_CFGR_HPRE_DIV16: u32 = 0x000000B0;
pub const RCC_CFGR_HPRE_DIV64: u32 = 0x000000C0;
pub const RCC_CFGR_HPRE_DIV128: u32 = 0x000000D0;
pub const RCC_CFGR_HPRE_DIV256: u32 = 0x000000E0;
pub const RCC_CFGR_HPRE_DIV512: u32 = 0x000000F0;
pub const RCC_CFGR_PPRE1_Pos: u32 = 8;
pub const RCC_CFGR_PPRE1_Msk: u32 = 0x7 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1: u32 = RCC_CFGR_PPRE1_Msk;
pub const RCC_CFGR_PPRE1_0: u32 = 0x1 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1_1: u32 = 0x2 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1_2: u32 = 0x4 << RCC_CFGR_PPRE1_Pos;
pub const RCC_CFGR_PPRE1_DIV1: u32 = 0x00000000;
pub const RCC_CFGR_PPRE1_DIV2: u32 = 0x00000400;
pub const RCC_CFGR_PPRE1_DIV4: u32 = 0x00000500;
pub const RCC_CFGR_PPRE1_DIV8: u32 = 0x00000600;
pub const RCC_CFGR_PPRE1_DIV16: u32 = 0x00000700;
pub const RCC_CFGR_PPRE2_Pos: u32 = 11;
pub const RCC_CFGR_PPRE2_Msk: u32 = 0x7 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2: u32 = RCC_CFGR_PPRE2_Msk;
pub const RCC_CFGR_PPRE2_0: u32 = 0x1 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2_1: u32 = 0x2 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2_2: u32 = 0x4 << RCC_CFGR_PPRE2_Pos;
pub const RCC_CFGR_PPRE2_DIV1: u32 = 0x00000000;
pub const RCC_CFGR_PPRE2_DIV2: u32 = 0x00002000;
pub const RCC_CFGR_PPRE2_DIV4: u32 = 0x00002800;
pub const RCC_CFGR_PPRE2_DIV8: u32 = 0x00003000;
pub const RCC_CFGR_PPRE2_DIV16: u32 = 0x00003800;
pub const RCC_CFGR_STOPWUCK_Pos: u32 = 15;
pub const RCC_CFGR_STOPWUCK_Msk: u32 = 0x1 << RCC_CFGR_STOPWUCK_Pos;
pub const RCC_CFGR_STOPWUCK: u32 = RCC_CFGR_STOPWUCK_Msk;
pub const RCC_CFGR_PLLSRC_Pos: u32 = 16;
pub const RCC_CFGR_PLLSRC_Msk: u32 = 0x1 << RCC_CFGR_PLLSRC_Pos;
pub const RCC_CFGR_PLLSRC: u32 = RCC_CFGR_PLLSRC_Msk;
pub const RCC_CFGR_PLLSRC_HSI: u32 = 0x00000000;
pub const RCC_CFGR_PLLSRC_HSE: u32 = 0x00010000;
pub const RCC_CFGR_PLLMUL_Pos: u32 = 18;
pub const RCC_CFGR_PLLMUL_Msk: u32 = 0xF << RCC_CFGR_PLLMUL_Pos;
pub const RCC_CFGR_PLLMUL: u32 = RCC_CFGR_PLLMUL_Msk;
pub const RCC_CFGR_PLLMUL_0: u32 = 0x1 << RCC_CFGR_PLLMUL_Pos;
pub const RCC_CFGR_PLLMUL_1: u32 = 0x2 << RCC_CFGR_PLLMUL_Pos;
pub const RCC_CFGR_PLLMUL_2: u32 = 0x4 << RCC_CFGR_PLLMUL_Pos;
pub const RCC_CFGR_PLLMUL_3: u32 = 0x8 << RCC_CFGR_PLLMUL_Pos;
pub const RCC_CFGR_PLLMUL3: u32 = 0x00000000;
pub const RCC_CFGR_PLLMUL4: u32 = 0x00040000;
pub const RCC_CFGR_PLLMUL6: u32 = 0x00080000;
pub const RCC_CFGR_PLLMUL8: u32 = 0x000C0000;
pub const RCC_CFGR_PLLMUL12: u32 = 0x00100000;
pub const RCC_CFGR_PLLMUL16: u32 = 0x00140000;
pub const RCC_CFGR_PLLMUL24: u32 = 0x00180000;
pub const RCC_CFGR_PLLMUL32: u32 = 0x001C0000;
pub const RCC_CFGR_PLLMUL48: u32 = 0x00200000;
pub const RCC_CFGR_PLLDIV_Pos: u32 = 22;
pub const RCC_CFGR_PLLDIV_Msk: u32 = 0x3 << RCC_CFGR_PLLDIV_Pos;
pub const RCC_CFGR_PLLDIV: u32 = RCC_CFGR_PLLDIV_Msk;
pub const RCC_CFGR_PLLDIV_0: u32 = 0x1 << RCC_CFGR_PLLDIV_Pos;
pub const RCC_CFGR_PLLDIV_1: u32 = 0x2 << RCC_CFGR_PLLDIV_Pos;
pub const RCC_CFGR_PLLDIV2_Pos: u32 = 22;
pub const RCC_CFGR_PLLDIV2_Msk: u32 = 0x1 << RCC_CFGR_PLLDIV2_Pos;
pub const RCC_CFGR_PLLDIV2: u32 = RCC_CFGR_PLLDIV2_Msk;
pub const RCC_CFGR_PLLDIV3_Pos: u32 = 23;
pub const RCC_CFGR_PLLDIV3_Msk: u32 = 0x1 << RCC_CFGR_PLLDIV3_Pos;
pub const RCC_CFGR_PLLDIV3: u32 = RCC_CFGR_PLLDIV3_Msk;
pub const RCC_CFGR_PLLDIV4_Pos: u32 = 22;
pub const RCC_CFGR_PLLDIV4_Msk: u32 = 0x3 << RCC_CFGR_PLLDIV4_Pos;
pub const RCC_CFGR_PLLDIV4: u32 = RCC_CFGR_PLLDIV4_Msk;
pub const RCC_CFGR_MCOSEL_Pos: u32 = 24;
pub const RCC_CFGR_MCOSEL_Msk: u32 = 0xF << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOSEL: u32 = RCC_CFGR_MCOSEL_Msk;
pub const RCC_CFGR_MCOSEL_0: u32 = 0x1 << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOSEL_1: u32 = 0x2 << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOSEL_2: u32 = 0x4 << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOSEL_3: u32 = 0x8 << RCC_CFGR_MCOSEL_Pos;
pub const RCC_CFGR_MCOSEL_NOCLOCK: u32 = 0x00000000;
pub const RCC_CFGR_MCOSEL_SYSCLK_Pos: u32 = 24;
pub const RCC_CFGR_MCOSEL_SYSCLK_Msk: u32 = 0x1 << RCC_CFGR_MCOSEL_SYSCLK_Pos;
pub const RCC_CFGR_MCOSEL_SYSCLK: u32 = RCC_CFGR_MCOSEL_SYSCLK_Msk;
pub const RCC_CFGR_MCOSEL_HSI_Pos: u32 = 25;
pub const RCC_CFGR_MCOSEL_HSI_Msk: u32 = 0x1 << RCC_CFGR_MCOSEL_HSI_Pos;
pub const RCC_CFGR_MCOSEL_HSI: u32 = RCC_CFGR_MCOSEL_HSI_Msk;
pub const RCC_CFGR_MCOSEL_MSI_Pos: u32 = 24;
pub const RCC_CFGR_MCOSEL_MSI_Msk: u32 = 0x3 << RCC_CFGR_MCOSEL_MSI_Pos;
pub const RCC_CFGR_MCOSEL_MSI: u32 = RCC_CFGR_MCOSEL_MSI_Msk;
pub const RCC_CFGR_MCOSEL_HSE_Pos: u32 = 26;
pub const RCC_CFGR_MCOSEL_HSE_Msk: u32 = 0x1 << RCC_CFGR_MCOSEL_HSE_Pos;
pub const RCC_CFGR_MCOSEL_HSE: u32 = RCC_CFGR_MCOSEL_HSE_Msk;
pub const RCC_CFGR_MCOSEL_PLL_Pos: u32 = 24;
pub const RCC_CFGR_MCOSEL_PLL_Msk: u32 = 0x5 << RCC_CFGR_MCOSEL_PLL_Pos;
pub const RCC_CFGR_MCOSEL_PLL: u32 = RCC_CFGR_MCOSEL_PLL_Msk;
pub const RCC_CFGR_MCOSEL_LSI_Pos: u32 = 25;
pub const RCC_CFGR_MCOSEL_LSI_Msk: u32 = 0x3 << RCC_CFGR_MCOSEL_LSI_Pos;
pub const RCC_CFGR_MCOSEL_LSI: u32 = RCC_CFGR_MCOSEL_LSI_Msk;
pub const RCC_CFGR_MCOSEL_LSE_Pos: u32 = 24;
pub const RCC_CFGR_MCOSEL_LSE_Msk: u32 = 0x7 << RCC_CFGR_MCOSEL_LSE_Pos;
pub const RCC_CFGR_MCOSEL_LSE: u32 = RCC_CFGR_MCOSEL_LSE_Msk;
pub const RCC_CFGR_MCOSEL_HSI48_Pos: u32 = 27;
pub const RCC_CFGR_MCOSEL_HSI48_Msk: u32 = 0x1 << RCC_CFGR_MCOSEL_HSI48_Pos;
pub const RCC_CFGR_MCOSEL_HSI48: u32 = RCC_CFGR_MCOSEL_HSI48_Msk;
pub const RCC_CFGR_MCOPRE_Pos: u32 = 28;
pub const RCC_CFGR_MCOPRE_Msk: u32 = 0x7 << RCC_CFGR_MCOPRE_Pos;
pub const RCC_CFGR_MCOPRE: u32 = RCC_CFGR_MCOPRE_Msk;
pub const RCC_CFGR_MCOPRE_0: u32 = 0x1 << RCC_CFGR_MCOPRE_Pos;
pub const RCC_CFGR_MCOPRE_1: u32 = 0x2 << RCC_CFGR_MCOPRE_Pos;
pub const RCC_CFGR_MCOPRE_2: u32 = 0x4 << RCC_CFGR_MCOPRE_Pos;
pub const RCC_CFGR_MCOPRE_DIV1: u32 = 0x00000000;
pub const RCC_CFGR_MCOPRE_DIV2: u32 = 0x10000000;
pub const RCC_CFGR_MCOPRE_DIV4: u32 = 0x20000000;
pub const RCC_CFGR_MCOPRE_DIV8: u32 = 0x30000000;
pub const RCC_CFGR_MCOPRE_DIV16: u32 = 0x40000000;
pub const RCC_CFGR_MCO_NOCLOCK: u32 = RCC_CFGR_MCOSEL_NOCLOCK;
pub const RCC_CFGR_MCO_SYSCLK: u32 = RCC_CFGR_MCOSEL_SYSCLK;
pub const RCC_CFGR_MCO_HSI: u32 = RCC_CFGR_MCOSEL_HSI;
pub const RCC_CFGR_MCO_MSI: u32 = RCC_CFGR_MCOSEL_MSI;
pub const RCC_CFGR_MCO_HSE: u32 = RCC_CFGR_MCOSEL_HSE;
pub const RCC_CFGR_MCO_PLL: u32 = RCC_CFGR_MCOSEL_PLL;
pub const RCC_CFGR_MCO_LSI: u32 = RCC_CFGR_MCOSEL_LSI;
pub const RCC_CFGR_MCO_LSE: u32 = RCC_CFGR_MCOSEL_LSE;
pub const RCC_CFGR_MCO_HSI48: u32 = RCC_CFGR_MCOSEL_HSI48;
pub const RCC_CFGR_MCO_PRE: u32 = RCC_CFGR_MCOPRE;
pub const RCC_CFGR_MCO_PRE_1: u32 = RCC_CFGR_MCOPRE_DIV1;
pub const RCC_CFGR_MCO_PRE_2: u32 = RCC_CFGR_MCOPRE_DIV2;
pub const RCC_CFGR_MCO_PRE_4: u32 = RCC_CFGR_MCOPRE_DIV4;
pub const RCC_CFGR_MCO_PRE_8: u32 = RCC_CFGR_MCOPRE_DIV8;
pub const RCC_CFGR_MCO_PRE_16: u32 = RCC_CFGR_MCOPRE_DIV16;
pub const RCC_CIER_LSIRDYIE_Pos: u32 = 0;
pub const RCC_CIER_LSIRDYIE_Msk: u32 = 0x1 << RCC_CIER_LSIRDYIE_Pos;
pub const RCC_CIER_LSIRDYIE: u32 = RCC_CIER_LSIRDYIE_Msk;
pub const RCC_CIER_LSERDYIE_Pos: u32 = 1;
pub const RCC_CIER_LSERDYIE_Msk: u32 = 0x1 << RCC_CIER_LSERDYIE_Pos;
pub const RCC_CIER_LSERDYIE: u32 = RCC_CIER_LSERDYIE_Msk;
pub const RCC_CIER_HSIRDYIE_Pos: u32 = 2;
pub const RCC_CIER_HSIRDYIE_Msk: u32 = 0x1 << RCC_CIER_HSIRDYIE_Pos;
pub const RCC_CIER_HSIRDYIE: u32 = RCC_CIER_HSIRDYIE_Msk;
pub const RCC_CIER_HSERDYIE_Pos: u32 = 3;
pub const RCC_CIER_HSERDYIE_Msk: u32 = 0x1 << RCC_CIER_HSERDYIE_Pos;
pub const RCC_CIER_HSERDYIE: u32 = RCC_CIER_HSERDYIE_Msk;
pub const RCC_CIER_PLLRDYIE_Pos: u32 = 4;
pub const RCC_CIER_PLLRDYIE_Msk: u32 = 0x1 << RCC_CIER_PLLRDYIE_Pos;
pub const RCC_CIER_PLLRDYIE: u32 = RCC_CIER_PLLRDYIE_Msk;
pub const RCC_CIER_MSIRDYIE_Pos: u32 = 5;
pub const RCC_CIER_MSIRDYIE_Msk: u32 = 0x1 << RCC_CIER_MSIRDYIE_Pos;
pub const RCC_CIER_MSIRDYIE: u32 = RCC_CIER_MSIRDYIE_Msk;
pub const RCC_CIER_HSI48RDYIE_Pos: u32 = 6;
pub const RCC_CIER_HSI48RDYIE_Msk: u32 = 0x1 << RCC_CIER_HSI48RDYIE_Pos;
pub const RCC_CIER_HSI48RDYIE: u32 = RCC_CIER_HSI48RDYIE_Msk;
pub const RCC_CIER_CSSLSE_Pos: u32 = 7;
pub const RCC_CIER_CSSLSE_Msk: u32 = 0x1 << RCC_CIER_CSSLSE_Pos;
pub const RCC_CIER_CSSLSE: u32 = RCC_CIER_CSSLSE_Msk;
pub const RCC_CIER_LSECSSIE: u32 = RCC_CIER_CSSLSE;
pub const RCC_CIFR_LSIRDYF_Pos: u32 = 0;
pub const RCC_CIFR_LSIRDYF_Msk: u32 = 0x1 << RCC_CIFR_LSIRDYF_Pos;
pub const RCC_CIFR_LSIRDYF: u32 = RCC_CIFR_LSIRDYF_Msk;
pub const RCC_CIFR_LSERDYF_Pos: u32 = 1;
pub const RCC_CIFR_LSERDYF_Msk: u32 = 0x1 << RCC_CIFR_LSERDYF_Pos;
pub const RCC_CIFR_LSERDYF: u32 = RCC_CIFR_LSERDYF_Msk;
pub const RCC_CIFR_HSIRDYF_Pos: u32 = 2;
pub const RCC_CIFR_HSIRDYF_Msk: u32 = 0x1 << RCC_CIFR_HSIRDYF_Pos;
pub const RCC_CIFR_HSIRDYF: u32 = RCC_CIFR_HSIRDYF_Msk;
pub const RCC_CIFR_HSERDYF_Pos: u32 = 3;
pub const RCC_CIFR_HSERDYF_Msk: u32 = 0x1 << RCC_CIFR_HSERDYF_Pos;
pub const RCC_CIFR_HSERDYF: u32 = RCC_CIFR_HSERDYF_Msk;
pub const RCC_CIFR_PLLRDYF_Pos: u32 = 4;
pub const RCC_CIFR_PLLRDYF_Msk: u32 = 0x1 << RCC_CIFR_PLLRDYF_Pos;
pub const RCC_CIFR_PLLRDYF: u32 = RCC_CIFR_PLLRDYF_Msk;
pub const RCC_CIFR_MSIRDYF_Pos: u32 = 5;
pub const RCC_CIFR_MSIRDYF_Msk: u32 = 0x1 << RCC_CIFR_MSIRDYF_Pos;
pub const RCC_CIFR_MSIRDYF: u32 = RCC_CIFR_MSIRDYF_Msk;
pub const RCC_CIFR_HSI48RDYF_Pos: u32 = 6;
pub const RCC_CIFR_HSI48RDYF_Msk: u32 = 0x1 << RCC_CIFR_HSI48RDYF_Pos;
pub const RCC_CIFR_HSI48RDYF: u32 = RCC_CIFR_HSI48RDYF_Msk;
pub const RCC_CIFR_CSSLSEF_Pos: u32 = 7;
pub const RCC_CIFR_CSSLSEF_Msk: u32 = 0x1 << RCC_CIFR_CSSLSEF_Pos;
pub const RCC_CIFR_CSSLSEF: u32 = RCC_CIFR_CSSLSEF_Msk;
pub const RCC_CIFR_CSSHSEF_Pos: u32 = 8;
pub const RCC_CIFR_CSSHSEF_Msk: u32 = 0x1 << RCC_CIFR_CSSHSEF_Pos;
pub const RCC_CIFR_CSSHSEF: u32 = RCC_CIFR_CSSHSEF_Msk;
pub const RCC_CIFR_LSECSSF: u32 = RCC_CIFR_CSSLSEF;
pub const RCC_CIFR_CSSF: u32 = RCC_CIFR_CSSHSEF;
pub const RCC_CICR_LSIRDYC_Pos: u32 = 0;
pub const RCC_CICR_LSIRDYC_Msk: u32 = 0x1 << RCC_CICR_LSIRDYC_Pos;
pub const RCC_CICR_LSIRDYC: u32 = RCC_CICR_LSIRDYC_Msk;
pub const RCC_CICR_LSERDYC_Pos: u32 = 1;
pub const RCC_CICR_LSERDYC_Msk: u32 = 0x1 << RCC_CICR_LSERDYC_Pos;
pub const RCC_CICR_LSERDYC: u32 = RCC_CICR_LSERDYC_Msk;
pub const RCC_CICR_HSIRDYC_Pos: u32 = 2;
pub const RCC_CICR_HSIRDYC_Msk: u32 = 0x1 << RCC_CICR_HSIRDYC_Pos;
pub const RCC_CICR_HSIRDYC: u32 = RCC_CICR_HSIRDYC_Msk;
pub const RCC_CICR_HSERDYC_Pos: u32 = 3;
pub const RCC_CICR_HSERDYC_Msk: u32 = 0x1 << RCC_CICR_HSERDYC_Pos;
pub const RCC_CICR_HSERDYC: u32 = RCC_CICR_HSERDYC_Msk;
pub const RCC_CICR_PLLRDYC_Pos: u32 = 4;
pub const RCC_CICR_PLLRDYC_Msk: u32 = 0x1 << RCC_CICR_PLLRDYC_Pos;
pub const RCC_CICR_PLLRDYC: u32 = RCC_CICR_PLLRDYC_Msk;
pub const RCC_CICR_MSIRDYC_Pos: u32 = 5;
pub const RCC_CICR_MSIRDYC_Msk: u32 = 0x1 << RCC_CICR_MSIRDYC_Pos;
pub const RCC_CICR_MSIRDYC: u32 = RCC_CICR_MSIRDYC_Msk;
pub const RCC_CICR_HSI48RDYC_Pos: u32 = 6;
pub const RCC_CICR_HSI48RDYC_Msk: u32 = 0x1 << RCC_CICR_HSI48RDYC_Pos;
pub const RCC_CICR_HSI48RDYC: u32 = RCC_CICR_HSI48RDYC_Msk;
pub const RCC_CICR_CSSLSEC_Pos: u32 = 7;
pub const RCC_CICR_CSSLSEC_Msk: u32 = 0x1 << RCC_CICR_CSSLSEC_Pos;
pub const RCC_CICR_CSSLSEC: u32 = RCC_CICR_CSSLSEC_Msk;
pub const RCC_CICR_CSSHSEC_Pos: u32 = 8;
pub const RCC_CICR_CSSHSEC_Msk: u32 = 0x1 << RCC_CICR_CSSHSEC_Pos;
pub const RCC_CICR_CSSHSEC: u32 = RCC_CICR_CSSHSEC_Msk;
pub const RCC_CICR_LSECSSC: u32 = RCC_CICR_CSSLSEC;
pub const RCC_CICR_CSSC: u32 = RCC_CICR_CSSHSEC;
pub const RCC_IOPRSTR_IOPARST_Pos: u32 = 0;
pub const RCC_IOPRSTR_IOPARST_Msk: u32 = 0x1 << RCC_IOPRSTR_IOPARST_Pos;
pub const RCC_IOPRSTR_IOPARST: u32 = RCC_IOPRSTR_IOPARST_Msk;
pub const RCC_IOPRSTR_IOPBRST_Pos: u32 = 1;
pub const RCC_IOPRSTR_IOPBRST_Msk: u32 = 0x1 << RCC_IOPRSTR_IOPBRST_Pos;
pub const RCC_IOPRSTR_IOPBRST: u32 = RCC_IOPRSTR_IOPBRST_Msk;
pub const RCC_IOPRSTR_IOPCRST_Pos: u32 = 2;
pub const RCC_IOPRSTR_IOPCRST_Msk: u32 = 0x1 << RCC_IOPRSTR_IOPCRST_Pos;
pub const RCC_IOPRSTR_IOPCRST: u32 = RCC_IOPRSTR_IOPCRST_Msk;
pub const RCC_IOPRSTR_IOPDRST_Pos: u32 = 3;
pub const RCC_IOPRSTR_IOPDRST_Msk: u32 = 0x1 << RCC_IOPRSTR_IOPDRST_Pos;
pub const RCC_IOPRSTR_IOPDRST: u32 = RCC_IOPRSTR_IOPDRST_Msk;
pub const RCC_IOPRSTR_IOPHRST_Pos: u32 = 7;
pub const RCC_IOPRSTR_IOPHRST_Msk: u32 = 0x1 << RCC_IOPRSTR_IOPHRST_Pos;
pub const RCC_IOPRSTR_IOPHRST: u32 = RCC_IOPRSTR_IOPHRST_Msk;
pub const RCC_IOPRSTR_GPIOARST: u32 = RCC_IOPRSTR_IOPARST;
pub const RCC_IOPRSTR_GPIOBRST: u32 = RCC_IOPRSTR_IOPBRST;
pub const RCC_IOPRSTR_GPIOCRST: u32 = RCC_IOPRSTR_IOPCRST;
pub const RCC_IOPRSTR_GPIODRST: u32 = RCC_IOPRSTR_IOPDRST;
pub const RCC_IOPRSTR_GPIOHRST: u32 = RCC_IOPRSTR_IOPHRST;
pub const RCC_AHBRSTR_DMARST_Pos: u32 = 0;
pub const RCC_AHBRSTR_DMARST_Msk: u32 = 0x1 << RCC_AHBRSTR_DMARST_Pos;
pub const RCC_AHBRSTR_DMARST: u32 = RCC_AHBRSTR_DMARST_Msk;
pub const RCC_AHBRSTR_MIFRST_Pos: u32 = 8;
pub const RCC_AHBRSTR_MIFRST_Msk: u32 = 0x1 << RCC_AHBRSTR_MIFRST_Pos;
pub const RCC_AHBRSTR_MIFRST: u32 = RCC_AHBRSTR_MIFRST_Msk;
pub const RCC_AHBRSTR_CRCRST_Pos: u32 = 12;
pub const RCC_AHBRSTR_CRCRST_Msk: u32 = 0x1 << RCC_AHBRSTR_CRCRST_Pos;
pub const RCC_AHBRSTR_CRCRST: u32 = RCC_AHBRSTR_CRCRST_Msk;
pub const RCC_AHBRSTR_TSCRST_Pos: u32 = 16;
pub const RCC_AHBRSTR_TSCRST_Msk: u32 = 0x1 << RCC_AHBRSTR_TSCRST_Pos;
pub const RCC_AHBRSTR_TSCRST: u32 = RCC_AHBRSTR_TSCRST_Msk;
pub const RCC_AHBRSTR_RNGRST_Pos: u32 = 20;
pub const RCC_AHBRSTR_RNGRST_Msk: u32 = 0x1 << RCC_AHBRSTR_RNGRST_Pos;
pub const RCC_AHBRSTR_RNGRST: u32 = RCC_AHBRSTR_RNGRST_Msk;
pub const RCC_AHBRSTR_CRYPRST_Pos: u32 = 24;
pub const RCC_AHBRSTR_CRYPRST_Msk: u32 = 0x1 << RCC_AHBRSTR_CRYPRST_Pos;
pub const RCC_AHBRSTR_CRYPRST: u32 = RCC_AHBRSTR_CRYPRST_Msk;
pub const RCC_AHBRSTR_DMA1RST: u32 = RCC_AHBRSTR_DMARST;
pub const RCC_APB2RSTR_SYSCFGRST_Pos: u32 = 0;
pub const RCC_APB2RSTR_SYSCFGRST_Msk: u32 = 0x1 << RCC_APB2RSTR_SYSCFGRST_Pos;
pub const RCC_APB2RSTR_SYSCFGRST: u32 = RCC_APB2RSTR_SYSCFGRST_Msk;
pub const RCC_APB2RSTR_TIM21RST_Pos: u32 = 2;
pub const RCC_APB2RSTR_TIM21RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM21RST_Pos;
pub const RCC_APB2RSTR_TIM21RST: u32 = RCC_APB2RSTR_TIM21RST_Msk;
pub const RCC_APB2RSTR_TIM22RST_Pos: u32 = 5;
pub const RCC_APB2RSTR_TIM22RST_Msk: u32 = 0x1 << RCC_APB2RSTR_TIM22RST_Pos;
pub const RCC_APB2RSTR_TIM22RST: u32 = RCC_APB2RSTR_TIM22RST_Msk;
pub const RCC_APB2RSTR_ADCRST_Pos: u32 = 9;
pub const RCC_APB2RSTR_ADCRST_Msk: u32 = 0x1 << RCC_APB2RSTR_ADCRST_Pos;
pub const RCC_APB2RSTR_ADCRST: u32 = RCC_APB2RSTR_ADCRST_Msk;
pub const RCC_APB2RSTR_SPI1RST_Pos: u32 = 12;
pub const RCC_APB2RSTR_SPI1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_SPI1RST_Pos;
pub const RCC_APB2RSTR_SPI1RST: u32 = RCC_APB2RSTR_SPI1RST_Msk;
pub const RCC_APB2RSTR_USART1RST_Pos: u32 = 14;
pub const RCC_APB2RSTR_USART1RST_Msk: u32 = 0x1 << RCC_APB2RSTR_USART1RST_Pos;
pub const RCC_APB2RSTR_USART1RST: u32 = RCC_APB2RSTR_USART1RST_Msk;
pub const RCC_APB2RSTR_DBGRST_Pos: u32 = 22;
pub const RCC_APB2RSTR_DBGRST_Msk: u32 = 0x1 << RCC_APB2RSTR_DBGRST_Pos;
pub const RCC_APB2RSTR_DBGRST: u32 = RCC_APB2RSTR_DBGRST_Msk;
pub const RCC_APB2RSTR_ADC1RST: u32 = RCC_APB2RSTR_ADCRST;
pub const RCC_APB2RSTR_DBGMCURST: u32 = RCC_APB2RSTR_DBGRST;
pub const RCC_APB1RSTR_TIM2RST_Pos: u32 = 0;
pub const RCC_APB1RSTR_TIM2RST_Msk: u32 = 0x1 << RCC_APB1RSTR_TIM2RST_Pos;
pub const RCC_APB1RSTR_TIM2RST: u32 = RCC_APB1RSTR_TIM2RST_Msk;
pub const RCC_APB1RSTR_TIM6RST_Pos: u32 = 4;
pub const RCC_APB1RSTR_TIM6RST_Msk: u32 = 0x1 << RCC_APB1RSTR_TIM6RST_Pos;
pub const RCC_APB1RSTR_TIM6RST: u32 = RCC_APB1RSTR_TIM6RST_Msk;
pub const RCC_APB1RSTR_WWDGRST_Pos: u32 = 11;
pub const RCC_APB1RSTR_WWDGRST_Msk: u32 = 0x1 << RCC_APB1RSTR_WWDGRST_Pos;
pub const RCC_APB1RSTR_WWDGRST: u32 = RCC_APB1RSTR_WWDGRST_Msk;
pub const RCC_APB1RSTR_SPI2RST_Pos: u32 = 14;
pub const RCC_APB1RSTR_SPI2RST_Msk: u32 = 0x1 << RCC_APB1RSTR_SPI2RST_Pos;
pub const RCC_APB1RSTR_SPI2RST: u32 = RCC_APB1RSTR_SPI2RST_Msk;
pub const RCC_APB1RSTR_USART2RST_Pos: u32 = 17;
pub const RCC_APB1RSTR_USART2RST_Msk: u32 = 0x1 << RCC_APB1RSTR_USART2RST_Pos;
pub const RCC_APB1RSTR_USART2RST: u32 = RCC_APB1RSTR_USART2RST_Msk;
pub const RCC_APB1RSTR_LPUART1RST_Pos: u32 = 18;
pub const RCC_APB1RSTR_LPUART1RST_Msk: u32 = 0x1 << RCC_APB1RSTR_LPUART1RST_Pos;
pub const RCC_APB1RSTR_LPUART1RST: u32 = RCC_APB1RSTR_LPUART1RST_Msk;
pub const RCC_APB1RSTR_I2C1RST_Pos: u32 = 21;
pub const RCC_APB1RSTR_I2C1RST_Msk: u32 = 0x1 << RCC_APB1RSTR_I2C1RST_Pos;
pub const RCC_APB1RSTR_I2C1RST: u32 = RCC_APB1RSTR_I2C1RST_Msk;
pub const RCC_APB1RSTR_I2C2RST_Pos: u32 = 22;
pub const RCC_APB1RSTR_I2C2RST_Msk: u32 = 0x1 << RCC_APB1RSTR_I2C2RST_Pos;
pub const RCC_APB1RSTR_I2C2RST: u32 = RCC_APB1RSTR_I2C2RST_Msk;
pub const RCC_APB1RSTR_USBRST_Pos: u32 = 23;
pub const RCC_APB1RSTR_USBRST_Msk: u32 = 0x1 << RCC_APB1RSTR_USBRST_Pos;
pub const RCC_APB1RSTR_USBRST: u32 = RCC_APB1RSTR_USBRST_Msk;
pub const RCC_APB1RSTR_CRSRST_Pos: u32 = 27;
pub const RCC_APB1RSTR_CRSRST_Msk: u32 = 0x1 << RCC_APB1RSTR_CRSRST_Pos;
pub const RCC_APB1RSTR_CRSRST: u32 = RCC_APB1RSTR_CRSRST_Msk;
pub const RCC_APB1RSTR_PWRRST_Pos: u32 = 28;
pub const RCC_APB1RSTR_PWRRST_Msk: u32 = 0x1 << RCC_APB1RSTR_PWRRST_Pos;
pub const RCC_APB1RSTR_PWRRST: u32 = RCC_APB1RSTR_PWRRST_Msk;
pub const RCC_APB1RSTR_DACRST_Pos: u32 = 29;
pub const RCC_APB1RSTR_DACRST_Msk: u32 = 0x1 << RCC_APB1RSTR_DACRST_Pos;
pub const RCC_APB1RSTR_DACRST: u32 = RCC_APB1RSTR_DACRST_Msk;
pub const RCC_APB1RSTR_LPTIM1RST_Pos: u32 = 31;
pub const RCC_APB1RSTR_LPTIM1RST_Msk: u32 = 0x1 << RCC_APB1RSTR_LPTIM1RST_Pos;
pub const RCC_APB1RSTR_LPTIM1RST: u32 = RCC_APB1RSTR_LPTIM1RST_Msk;
pub const RCC_IOPENR_IOPAEN_Pos: u32 = 0;
pub const RCC_IOPENR_IOPAEN_Msk: u32 = 0x1 << RCC_IOPENR_IOPAEN_Pos;
pub const RCC_IOPENR_IOPAEN: u32 = RCC_IOPENR_IOPAEN_Msk;
pub const RCC_IOPENR_IOPBEN_Pos: u32 = 1;
pub const RCC_IOPENR_IOPBEN_Msk: u32 = 0x1 << RCC_IOPENR_IOPBEN_Pos;
pub const RCC_IOPENR_IOPBEN: u32 = RCC_IOPENR_IOPBEN_Msk;
pub const RCC_IOPENR_IOPCEN_Pos: u32 = 2;
pub const RCC_IOPENR_IOPCEN_Msk: u32 = 0x1 << RCC_IOPENR_IOPCEN_Pos;
pub const RCC_IOPENR_IOPCEN: u32 = RCC_IOPENR_IOPCEN_Msk;
pub const RCC_IOPENR_IOPDEN_Pos: u32 = 3;
pub const RCC_IOPENR_IOPDEN_Msk: u32 = 0x1 << RCC_IOPENR_IOPDEN_Pos;
pub const RCC_IOPENR_IOPDEN: u32 = RCC_IOPENR_IOPDEN_Msk;
pub const RCC_IOPENR_IOPHEN_Pos: u32 = 7;
pub const RCC_IOPENR_IOPHEN_Msk: u32 = 0x1 << RCC_IOPENR_IOPHEN_Pos;
pub const RCC_IOPENR_IOPHEN: u32 = RCC_IOPENR_IOPHEN_Msk;
pub const RCC_IOPENR_GPIOAEN: u32 = RCC_IOPENR_IOPAEN;
pub const RCC_IOPENR_GPIOBEN: u32 = RCC_IOPENR_IOPBEN;
pub const RCC_IOPENR_GPIOCEN: u32 = RCC_IOPENR_IOPCEN;
pub const RCC_IOPENR_GPIODEN: u32 = RCC_IOPENR_IOPDEN;
pub const RCC_IOPENR_GPIOHEN: u32 = RCC_IOPENR_IOPHEN;
pub const RCC_AHBENR_DMAEN_Pos: u32 = 0;
pub const RCC_AHBENR_DMAEN_Msk: u32 = 0x1 << RCC_AHBENR_DMAEN_Pos;
pub const RCC_AHBENR_DMAEN: u32 = RCC_AHBENR_DMAEN_Msk;
pub const RCC_AHBENR_MIFEN_Pos: u32 = 8;
pub const RCC_AHBENR_MIFEN_Msk: u32 = 0x1 << RCC_AHBENR_MIFEN_Pos;
pub const RCC_AHBENR_MIFEN: u32 = RCC_AHBENR_MIFEN_Msk;
pub const RCC_AHBENR_CRCEN_Pos: u32 = 12;
pub const RCC_AHBENR_CRCEN_Msk: u32 = 0x1 << RCC_AHBENR_CRCEN_Pos;
pub const RCC_AHBENR_CRCEN: u32 = RCC_AHBENR_CRCEN_Msk;
pub const RCC_AHBENR_TSCEN_Pos: u32 = 16;
pub const RCC_AHBENR_TSCEN_Msk: u32 = 0x1 << RCC_AHBENR_TSCEN_Pos;
pub const RCC_AHBENR_TSCEN: u32 = RCC_AHBENR_TSCEN_Msk;
pub const RCC_AHBENR_RNGEN_Pos: u32 = 20;
pub const RCC_AHBENR_RNGEN_Msk: u32 = 0x1 << RCC_AHBENR_RNGEN_Pos;
pub const RCC_AHBENR_RNGEN: u32 = RCC_AHBENR_RNGEN_Msk;
pub const RCC_AHBENR_CRYPEN_Pos: u32 = 24;
pub const RCC_AHBENR_CRYPEN_Msk: u32 = 0x1 << RCC_AHBENR_CRYPEN_Pos;
pub const RCC_AHBENR_CRYPEN: u32 = RCC_AHBENR_CRYPEN_Msk;
pub const RCC_AHBENR_DMA1EN: u32 = RCC_AHBENR_DMAEN;
pub const RCC_APB2ENR_SYSCFGEN_Pos: u32 = 0;
pub const RCC_APB2ENR_SYSCFGEN_Msk: u32 = 0x1 << RCC_APB2ENR_SYSCFGEN_Pos;
pub const RCC_APB2ENR_SYSCFGEN: u32 = RCC_APB2ENR_SYSCFGEN_Msk;
pub const RCC_APB2ENR_TIM21EN_Pos: u32 = 2;
pub const RCC_APB2ENR_TIM21EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM21EN_Pos;
pub const RCC_APB2ENR_TIM21EN: u32 = RCC_APB2ENR_TIM21EN_Msk;
pub const RCC_APB2ENR_TIM22EN_Pos: u32 = 5;
pub const RCC_APB2ENR_TIM22EN_Msk: u32 = 0x1 << RCC_APB2ENR_TIM22EN_Pos;
pub const RCC_APB2ENR_TIM22EN: u32 = RCC_APB2ENR_TIM22EN_Msk;
pub const RCC_APB2ENR_FWEN_Pos: u32 = 7;
pub const RCC_APB2ENR_FWEN_Msk: u32 = 0x1 << RCC_APB2ENR_FWEN_Pos;
pub const RCC_APB2ENR_FWEN: u32 = RCC_APB2ENR_FWEN_Msk;
pub const RCC_APB2ENR_ADCEN_Pos: u32 = 9;
pub const RCC_APB2ENR_ADCEN_Msk: u32 = 0x1 << RCC_APB2ENR_ADCEN_Pos;
pub const RCC_APB2ENR_ADCEN: u32 = RCC_APB2ENR_ADCEN_Msk;
pub const RCC_APB2ENR_SPI1EN_Pos: u32 = 12;
pub const RCC_APB2ENR_SPI1EN_Msk: u32 = 0x1 << RCC_APB2ENR_SPI1EN_Pos;
pub const RCC_APB2ENR_SPI1EN: u32 = RCC_APB2ENR_SPI1EN_Msk;
pub const RCC_APB2ENR_USART1EN_Pos: u32 = 14;
pub const RCC_APB2ENR_USART1EN_Msk: u32 = 0x1 << RCC_APB2ENR_USART1EN_Pos;
pub const RCC_APB2ENR_USART1EN: u32 = RCC_APB2ENR_USART1EN_Msk;
pub const RCC_APB2ENR_DBGEN_Pos: u32 = 22;
pub const RCC_APB2ENR_DBGEN_Msk: u32 = 0x1 << RCC_APB2ENR_DBGEN_Pos;
pub const RCC_APB2ENR_DBGEN: u32 = RCC_APB2ENR_DBGEN_Msk;
pub const RCC_APB2ENR_MIFIEN: u32 = RCC_APB2ENR_FWEN;
pub const RCC_APB2ENR_ADC1EN: u32 = RCC_APB2ENR_ADCEN;
pub const RCC_APB2ENR_DBGMCUEN: u32 = RCC_APB2ENR_DBGEN;
pub const RCC_APB1ENR_TIM2EN_Pos: u32 = 0;
pub const RCC_APB1ENR_TIM2EN_Msk: u32 = 0x1 << RCC_APB1ENR_TIM2EN_Pos;
pub const RCC_APB1ENR_TIM2EN: u32 = RCC_APB1ENR_TIM2EN_Msk;
pub const RCC_APB1ENR_TIM6EN_Pos: u32 = 4;
pub const RCC_APB1ENR_TIM6EN_Msk: u32 = 0x1 << RCC_APB1ENR_TIM6EN_Pos;
pub const RCC_APB1ENR_TIM6EN: u32 = RCC_APB1ENR_TIM6EN_Msk;
pub const RCC_APB1ENR_WWDGEN_Pos: u32 = 11;
pub const RCC_APB1ENR_WWDGEN_Msk: u32 = 0x1 << RCC_APB1ENR_WWDGEN_Pos;
pub const RCC_APB1ENR_WWDGEN: u32 = RCC_APB1ENR_WWDGEN_Msk;
pub const RCC_APB1ENR_SPI2EN_Pos: u32 = 14;
pub const RCC_APB1ENR_SPI2EN_Msk: u32 = 0x1 << RCC_APB1ENR_SPI2EN_Pos;
pub const RCC_APB1ENR_SPI2EN: u32 = RCC_APB1ENR_SPI2EN_Msk;
pub const RCC_APB1ENR_USART2EN_Pos: u32 = 17;
pub const RCC_APB1ENR_USART2EN_Msk: u32 = 0x1 << RCC_APB1ENR_USART2EN_Pos;
pub const RCC_APB1ENR_USART2EN: u32 = RCC_APB1ENR_USART2EN_Msk;
pub const RCC_APB1ENR_LPUART1EN_Pos: u32 = 18;
pub const RCC_APB1ENR_LPUART1EN_Msk: u32 = 0x1 << RCC_APB1ENR_LPUART1EN_Pos;
pub const RCC_APB1ENR_LPUART1EN: u32 = RCC_APB1ENR_LPUART1EN_Msk;
pub const RCC_APB1ENR_I2C1EN_Pos: u32 = 21;
pub const RCC_APB1ENR_I2C1EN_Msk: u32 = 0x1 << RCC_APB1ENR_I2C1EN_Pos;
pub const RCC_APB1ENR_I2C1EN: u32 = RCC_APB1ENR_I2C1EN_Msk;
pub const RCC_APB1ENR_I2C2EN_Pos: u32 = 22;
pub const RCC_APB1ENR_I2C2EN_Msk: u32 = 0x1 << RCC_APB1ENR_I2C2EN_Pos;
pub const RCC_APB1ENR_I2C2EN: u32 = RCC_APB1ENR_I2C2EN_Msk;
pub const RCC_APB1ENR_USBEN_Pos: u32 = 23;
pub const RCC_APB1ENR_USBEN_Msk: u32 = 0x1 << RCC_APB1ENR_USBEN_Pos;
pub const RCC_APB1ENR_USBEN: u32 = RCC_APB1ENR_USBEN_Msk;
pub const RCC_APB1ENR_CRSEN_Pos: u32 = 27;
pub const RCC_APB1ENR_CRSEN_Msk: u32 = 0x1 << RCC_APB1ENR_CRSEN_Pos;
pub const RCC_APB1ENR_CRSEN: u32 = RCC_APB1ENR_CRSEN_Msk;
pub const RCC_APB1ENR_PWREN_Pos: u32 = 28;
pub const RCC_APB1ENR_PWREN_Msk: u32 = 0x1 << RCC_APB1ENR_PWREN_Pos;
pub const RCC_APB1ENR_PWREN: u32 = RCC_APB1ENR_PWREN_Msk;
pub const RCC_APB1ENR_DACEN_Pos: u32 = 29;
pub const RCC_APB1ENR_DACEN_Msk: u32 = 0x1 << RCC_APB1ENR_DACEN_Pos;
pub const RCC_APB1ENR_DACEN: u32 = RCC_APB1ENR_DACEN_Msk;
pub const RCC_APB1ENR_LPTIM1EN_Pos: u32 = 31;
pub const RCC_APB1ENR_LPTIM1EN_Msk: u32 = 0x1 << RCC_APB1ENR_LPTIM1EN_Pos;
pub const RCC_APB1ENR_LPTIM1EN: u32 = RCC_APB1ENR_LPTIM1EN_Msk;
pub const RCC_IOPSMENR_IOPASMEN_Pos: u32 = 0;
pub const RCC_IOPSMENR_IOPASMEN_Msk: u32 = 0x1 << RCC_IOPSMENR_IOPASMEN_Pos;
pub const RCC_IOPSMENR_IOPASMEN: u32 = RCC_IOPSMENR_IOPASMEN_Msk;
pub const RCC_IOPSMENR_IOPBSMEN_Pos: u32 = 1;
pub const RCC_IOPSMENR_IOPBSMEN_Msk: u32 = 0x1 << RCC_IOPSMENR_IOPBSMEN_Pos;
pub const RCC_IOPSMENR_IOPBSMEN: u32 = RCC_IOPSMENR_IOPBSMEN_Msk;
pub const RCC_IOPSMENR_IOPCSMEN_Pos: u32 = 2;
pub const RCC_IOPSMENR_IOPCSMEN_Msk: u32 = 0x1 << RCC_IOPSMENR_IOPCSMEN_Pos;
pub const RCC_IOPSMENR_IOPCSMEN: u32 = RCC_IOPSMENR_IOPCSMEN_Msk;
pub const RCC_IOPSMENR_IOPDSMEN_Pos: u32 = 3;
pub const RCC_IOPSMENR_IOPDSMEN_Msk: u32 = 0x1 << RCC_IOPSMENR_IOPDSMEN_Pos;
pub const RCC_IOPSMENR_IOPDSMEN: u32 = RCC_IOPSMENR_IOPDSMEN_Msk;
pub const RCC_IOPSMENR_IOPHSMEN_Pos: u32 = 7;
pub const RCC_IOPSMENR_IOPHSMEN_Msk: u32 = 0x1 << RCC_IOPSMENR_IOPHSMEN_Pos;
pub const RCC_IOPSMENR_IOPHSMEN: u32 = RCC_IOPSMENR_IOPHSMEN_Msk;
pub const RCC_IOPSMENR_GPIOASMEN: u32 = RCC_IOPSMENR_IOPASMEN;
pub const RCC_IOPSMENR_GPIOBSMEN: u32 = RCC_IOPSMENR_IOPBSMEN;
pub const RCC_IOPSMENR_GPIOCSMEN: u32 = RCC_IOPSMENR_IOPCSMEN;
pub const RCC_IOPSMENR_GPIODSMEN: u32 = RCC_IOPSMENR_IOPDSMEN;
pub const RCC_IOPSMENR_GPIOHSMEN: u32 = RCC_IOPSMENR_IOPHSMEN;
pub const RCC_AHBSMENR_DMASMEN_Pos: u32 = 0;
pub const RCC_AHBSMENR_DMASMEN_Msk: u32 = 0x1 << RCC_AHBSMENR_DMASMEN_Pos;
pub const RCC_AHBSMENR_DMASMEN: u32 = RCC_AHBSMENR_DMASMEN_Msk;
pub const RCC_AHBSMENR_MIFSMEN_Pos: u32 = 8;
pub const RCC_AHBSMENR_MIFSMEN_Msk: u32 = 0x1 << RCC_AHBSMENR_MIFSMEN_Pos;
pub const RCC_AHBSMENR_MIFSMEN: u32 = RCC_AHBSMENR_MIFSMEN_Msk;
pub const RCC_AHBSMENR_SRAMSMEN_Pos: u32 = 9;
pub const RCC_AHBSMENR_SRAMSMEN_Msk: u32 = 0x1 << RCC_AHBSMENR_SRAMSMEN_Pos;
pub const RCC_AHBSMENR_SRAMSMEN: u32 = RCC_AHBSMENR_SRAMSMEN_Msk;
pub const RCC_AHBSMENR_CRCSMEN_Pos: u32 = 12;
pub const RCC_AHBSMENR_CRCSMEN_Msk: u32 = 0x1 << RCC_AHBSMENR_CRCSMEN_Pos;
pub const RCC_AHBSMENR_CRCSMEN: u32 = RCC_AHBSMENR_CRCSMEN_Msk;
pub const RCC_AHBSMENR_TSCSMEN_Pos: u32 = 16;
pub const RCC_AHBSMENR_TSCSMEN_Msk: u32 = 0x1 << RCC_AHBSMENR_TSCSMEN_Pos;
pub const RCC_AHBSMENR_TSCSMEN: u32 = RCC_AHBSMENR_TSCSMEN_Msk;
pub const RCC_AHBSMENR_RNGSMEN_Pos: u32 = 20;
pub const RCC_AHBSMENR_RNGSMEN_Msk: u32 = 0x1 << RCC_AHBSMENR_RNGSMEN_Pos;
pub const RCC_AHBSMENR_RNGSMEN: u32 = RCC_AHBSMENR_RNGSMEN_Msk;
pub const RCC_AHBSMENR_CRYPSMEN_Pos: u32 = 24;
pub const RCC_AHBSMENR_CRYPSMEN_Msk: u32 = 0x1 << RCC_AHBSMENR_CRYPSMEN_Pos;
pub const RCC_AHBSMENR_CRYPSMEN: u32 = RCC_AHBSMENR_CRYPSMEN_Msk;
pub const RCC_AHBSMENR_DMA1SMEN: u32 = RCC_AHBSMENR_DMASMEN;
pub const RCC_APB2SMENR_SYSCFGSMEN_Pos: u32 = 0;
pub const RCC_APB2SMENR_SYSCFGSMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_SYSCFGSMEN_Pos;
pub const RCC_APB2SMENR_SYSCFGSMEN: u32 = RCC_APB2SMENR_SYSCFGSMEN_Msk;
pub const RCC_APB2SMENR_TIM21SMEN_Pos: u32 = 2;
pub const RCC_APB2SMENR_TIM21SMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_TIM21SMEN_Pos;
pub const RCC_APB2SMENR_TIM21SMEN: u32 = RCC_APB2SMENR_TIM21SMEN_Msk;
pub const RCC_APB2SMENR_TIM22SMEN_Pos: u32 = 5;
pub const RCC_APB2SMENR_TIM22SMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_TIM22SMEN_Pos;
pub const RCC_APB2SMENR_TIM22SMEN: u32 = RCC_APB2SMENR_TIM22SMEN_Msk;
pub const RCC_APB2SMENR_ADCSMEN_Pos: u32 = 9;
pub const RCC_APB2SMENR_ADCSMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_ADCSMEN_Pos;
pub const RCC_APB2SMENR_ADCSMEN: u32 = RCC_APB2SMENR_ADCSMEN_Msk;
pub const RCC_APB2SMENR_SPI1SMEN_Pos: u32 = 12;
pub const RCC_APB2SMENR_SPI1SMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_SPI1SMEN_Pos;
pub const RCC_APB2SMENR_SPI1SMEN: u32 = RCC_APB2SMENR_SPI1SMEN_Msk;
pub const RCC_APB2SMENR_USART1SMEN_Pos: u32 = 14;
pub const RCC_APB2SMENR_USART1SMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_USART1SMEN_Pos;
pub const RCC_APB2SMENR_USART1SMEN: u32 = RCC_APB2SMENR_USART1SMEN_Msk;
pub const RCC_APB2SMENR_DBGSMEN_Pos: u32 = 22;
pub const RCC_APB2SMENR_DBGSMEN_Msk: u32 = 0x1 << RCC_APB2SMENR_DBGSMEN_Pos;
pub const RCC_APB2SMENR_DBGSMEN: u32 = RCC_APB2SMENR_DBGSMEN_Msk;
pub const RCC_APB2SMENR_ADC1SMEN: u32 = RCC_APB2SMENR_ADCSMEN;
pub const RCC_APB2SMENR_DBGMCUSMEN: u32 = RCC_APB2SMENR_DBGSMEN;
pub const RCC_APB1SMENR_TIM2SMEN_Pos: u32 = 0;
pub const RCC_APB1SMENR_TIM2SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR_TIM2SMEN_Pos;
pub const RCC_APB1SMENR_TIM2SMEN: u32 = RCC_APB1SMENR_TIM2SMEN_Msk;
pub const RCC_APB1SMENR_TIM6SMEN_Pos: u32 = 4;
pub const RCC_APB1SMENR_TIM6SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR_TIM6SMEN_Pos;
pub const RCC_APB1SMENR_TIM6SMEN: u32 = RCC_APB1SMENR_TIM6SMEN_Msk;
pub const RCC_APB1SMENR_WWDGSMEN_Pos: u32 = 11;
pub const RCC_APB1SMENR_WWDGSMEN_Msk: u32 = 0x1 << RCC_APB1SMENR_WWDGSMEN_Pos;
pub const RCC_APB1SMENR_WWDGSMEN: u32 = RCC_APB1SMENR_WWDGSMEN_Msk;
pub const RCC_APB1SMENR_SPI2SMEN_Pos: u32 = 14;
pub const RCC_APB1SMENR_SPI2SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR_SPI2SMEN_Pos;
pub const RCC_APB1SMENR_SPI2SMEN: u32 = RCC_APB1SMENR_SPI2SMEN_Msk;
pub const RCC_APB1SMENR_USART2SMEN_Pos: u32 = 17;
pub const RCC_APB1SMENR_USART2SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR_USART2SMEN_Pos;
pub const RCC_APB1SMENR_USART2SMEN: u32 = RCC_APB1SMENR_USART2SMEN_Msk;
pub const RCC_APB1SMENR_LPUART1SMEN_Pos: u32 = 18;
pub const RCC_APB1SMENR_LPUART1SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR_LPUART1SMEN_Pos;
pub const RCC_APB1SMENR_LPUART1SMEN: u32 = RCC_APB1SMENR_LPUART1SMEN_Msk;
pub const RCC_APB1SMENR_I2C1SMEN_Pos: u32 = 21;
pub const RCC_APB1SMENR_I2C1SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR_I2C1SMEN_Pos;
pub const RCC_APB1SMENR_I2C1SMEN: u32 = RCC_APB1SMENR_I2C1SMEN_Msk;
pub const RCC_APB1SMENR_I2C2SMEN_Pos: u32 = 22;
pub const RCC_APB1SMENR_I2C2SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR_I2C2SMEN_Pos;
pub const RCC_APB1SMENR_I2C2SMEN: u32 = RCC_APB1SMENR_I2C2SMEN_Msk;
pub const RCC_APB1SMENR_USBSMEN_Pos: u32 = 23;
pub const RCC_APB1SMENR_USBSMEN_Msk: u32 = 0x1 << RCC_APB1SMENR_USBSMEN_Pos;
pub const RCC_APB1SMENR_USBSMEN: u32 = RCC_APB1SMENR_USBSMEN_Msk;
pub const RCC_APB1SMENR_CRSSMEN_Pos: u32 = 27;
pub const RCC_APB1SMENR_CRSSMEN_Msk: u32 = 0x1 << RCC_APB1SMENR_CRSSMEN_Pos;
pub const RCC_APB1SMENR_CRSSMEN: u32 = RCC_APB1SMENR_CRSSMEN_Msk;
pub const RCC_APB1SMENR_PWRSMEN_Pos: u32 = 28;
pub const RCC_APB1SMENR_PWRSMEN_Msk: u32 = 0x1 << RCC_APB1SMENR_PWRSMEN_Pos;
pub const RCC_APB1SMENR_PWRSMEN: u32 = RCC_APB1SMENR_PWRSMEN_Msk;
pub const RCC_APB1SMENR_DACSMEN_Pos: u32 = 29;
pub const RCC_APB1SMENR_DACSMEN_Msk: u32 = 0x1 << RCC_APB1SMENR_DACSMEN_Pos;
pub const RCC_APB1SMENR_DACSMEN: u32 = RCC_APB1SMENR_DACSMEN_Msk;
pub const RCC_APB1SMENR_LPTIM1SMEN_Pos: u32 = 31;
pub const RCC_APB1SMENR_LPTIM1SMEN_Msk: u32 = 0x1 << RCC_APB1SMENR_LPTIM1SMEN_Pos;
pub const RCC_APB1SMENR_LPTIM1SMEN: u32 = RCC_APB1SMENR_LPTIM1SMEN_Msk;
pub const RCC_CCIPR_USART1SEL_Pos: u32 = 0;
pub const RCC_CCIPR_USART1SEL_Msk: u32 = 0x3 << RCC_CCIPR_USART1SEL_Pos;
pub const RCC_CCIPR_USART1SEL: u32 = RCC_CCIPR_USART1SEL_Msk;
pub const RCC_CCIPR_USART1SEL_0: u32 = 0x1 << RCC_CCIPR_USART1SEL_Pos;
pub const RCC_CCIPR_USART1SEL_1: u32 = 0x2 << RCC_CCIPR_USART1SEL_Pos;
pub const RCC_CCIPR_USART2SEL_Pos: u32 = 2;
pub const RCC_CCIPR_USART2SEL_Msk: u32 = 0x3 << RCC_CCIPR_USART2SEL_Pos;
pub const RCC_CCIPR_USART2SEL: u32 = RCC_CCIPR_USART2SEL_Msk;
pub const RCC_CCIPR_USART2SEL_0: u32 = 0x1 << RCC_CCIPR_USART2SEL_Pos;
pub const RCC_CCIPR_USART2SEL_1: u32 = 0x2 << RCC_CCIPR_USART2SEL_Pos;
pub const RCC_CCIPR_LPUART1SEL_Pos: u32 = 10;
pub const RCC_CCIPR_LPUART1SEL_Msk: u32 = 0x3 << RCC_CCIPR_LPUART1SEL_Pos;
pub const RCC_CCIPR_LPUART1SEL: u32 = RCC_CCIPR_LPUART1SEL_Msk;
pub const RCC_CCIPR_LPUART1SEL_0: u32 = 0x1 << RCC_CCIPR_LPUART1SEL_Pos;
pub const RCC_CCIPR_LPUART1SEL_1: u32 = 0x2 << RCC_CCIPR_LPUART1SEL_Pos;
pub const RCC_CCIPR_I2C1SEL_Pos: u32 = 12;
pub const RCC_CCIPR_I2C1SEL_Msk: u32 = 0x3 << RCC_CCIPR_I2C1SEL_Pos;
pub const RCC_CCIPR_I2C1SEL: u32 = RCC_CCIPR_I2C1SEL_Msk;
pub const RCC_CCIPR_I2C1SEL_0: u32 = 0x1 << RCC_CCIPR_I2C1SEL_Pos;
pub const RCC_CCIPR_I2C1SEL_1: u32 = 0x2 << RCC_CCIPR_I2C1SEL_Pos;
pub const RCC_CCIPR_LPTIM1SEL_Pos: u32 = 18;
pub const RCC_CCIPR_LPTIM1SEL_Msk: u32 = 0x3 << RCC_CCIPR_LPTIM1SEL_Pos;
pub const RCC_CCIPR_LPTIM1SEL: u32 = RCC_CCIPR_LPTIM1SEL_Msk;
pub const RCC_CCIPR_LPTIM1SEL_0: u32 = 0x1 << RCC_CCIPR_LPTIM1SEL_Pos;
pub const RCC_CCIPR_LPTIM1SEL_1: u32 = 0x2 << RCC_CCIPR_LPTIM1SEL_Pos;
pub const RCC_CCIPR_HSI48SEL_Pos: u32 = 26;
pub const RCC_CCIPR_HSI48SEL_Msk: u32 = 0x1 << RCC_CCIPR_HSI48SEL_Pos;
pub const RCC_CCIPR_HSI48SEL: u32 = RCC_CCIPR_HSI48SEL_Msk;
pub const RCC_CCIPR_HSI48MSEL: u32 = RCC_CCIPR_HSI48SEL;
pub const RCC_CSR_LSION_Pos: u32 = 0;
pub const RCC_CSR_LSION_Msk: u32 = 0x1 << RCC_CSR_LSION_Pos;
pub const RCC_CSR_LSION: u32 = RCC_CSR_LSION_Msk;
pub const RCC_CSR_LSIRDY_Pos: u32 = 1;
pub const RCC_CSR_LSIRDY_Msk: u32 = 0x1 << RCC_CSR_LSIRDY_Pos;
pub const RCC_CSR_LSIRDY: u32 = RCC_CSR_LSIRDY_Msk;
pub const RCC_CSR_LSEON_Pos: u32 = 8;
pub const RCC_CSR_LSEON_Msk: u32 = 0x1 << RCC_CSR_LSEON_Pos;
pub const RCC_CSR_LSEON: u32 = RCC_CSR_LSEON_Msk;
pub const RCC_CSR_LSERDY_Pos: u32 = 9;
pub const RCC_CSR_LSERDY_Msk: u32 = 0x1 << RCC_CSR_LSERDY_Pos;
pub const RCC_CSR_LSERDY: u32 = RCC_CSR_LSERDY_Msk;
pub const RCC_CSR_LSEBYP_Pos: u32 = 10;
pub const RCC_CSR_LSEBYP_Msk: u32 = 0x1 << RCC_CSR_LSEBYP_Pos;
pub const RCC_CSR_LSEBYP: u32 = RCC_CSR_LSEBYP_Msk;
pub const RCC_CSR_LSEDRV_Pos: u32 = 11;
pub const RCC_CSR_LSEDRV_Msk: u32 = 0x3 << RCC_CSR_LSEDRV_Pos;
pub const RCC_CSR_LSEDRV: u32 = RCC_CSR_LSEDRV_Msk;
pub const RCC_CSR_LSEDRV_0: u32 = 0x1 << RCC_CSR_LSEDRV_Pos;
pub const RCC_CSR_LSEDRV_1: u32 = 0x2 << RCC_CSR_LSEDRV_Pos;
pub const RCC_CSR_LSECSSON_Pos: u32 = 13;
pub const RCC_CSR_LSECSSON_Msk: u32 = 0x1 << RCC_CSR_LSECSSON_Pos;
pub const RCC_CSR_LSECSSON: u32 = RCC_CSR_LSECSSON_Msk;
pub const RCC_CSR_LSECSSD_Pos: u32 = 14;
pub const RCC_CSR_LSECSSD_Msk: u32 = 0x1 << RCC_CSR_LSECSSD_Pos;
pub const RCC_CSR_LSECSSD: u32 = RCC_CSR_LSECSSD_Msk;
pub const RCC_CSR_RTCSEL_Pos: u32 = 16;
pub const RCC_CSR_RTCSEL_Msk: u32 = 0x3 << RCC_CSR_RTCSEL_Pos;
pub const RCC_CSR_RTCSEL: u32 = RCC_CSR_RTCSEL_Msk;
pub const RCC_CSR_RTCSEL_0: u32 = 0x1 << RCC_CSR_RTCSEL_Pos;
pub const RCC_CSR_RTCSEL_1: u32 = 0x2 << RCC_CSR_RTCSEL_Pos;
pub const RCC_CSR_RTCSEL_NOCLOCK: u32 = 0x00000000;
pub const RCC_CSR_RTCSEL_LSE_Pos: u32 = 16;
pub const RCC_CSR_RTCSEL_LSE_Msk: u32 = 0x1 << RCC_CSR_RTCSEL_LSE_Pos;
pub const RCC_CSR_RTCSEL_LSE: u32 = RCC_CSR_RTCSEL_LSE_Msk;
pub const RCC_CSR_RTCSEL_LSI_Pos: u32 = 17;
pub const RCC_CSR_RTCSEL_LSI_Msk: u32 = 0x1 << RCC_CSR_RTCSEL_LSI_Pos;
pub const RCC_CSR_RTCSEL_LSI: u32 = RCC_CSR_RTCSEL_LSI_Msk;
pub const RCC_CSR_RTCSEL_HSE_Pos: u32 = 16;
pub const RCC_CSR_RTCSEL_HSE_Msk: u32 = 0x3 << RCC_CSR_RTCSEL_HSE_Pos;
pub const RCC_CSR_RTCSEL_HSE: u32 = RCC_CSR_RTCSEL_HSE_Msk;
pub const RCC_CSR_RTCEN_Pos: u32 = 18;
pub const RCC_CSR_RTCEN_Msk: u32 = 0x1 << RCC_CSR_RTCEN_Pos;
pub const RCC_CSR_RTCEN: u32 = RCC_CSR_RTCEN_Msk;
pub const RCC_CSR_RTCRST_Pos: u32 = 19;
pub const RCC_CSR_RTCRST_Msk: u32 = 0x1 << RCC_CSR_RTCRST_Pos;
pub const RCC_CSR_RTCRST: u32 = RCC_CSR_RTCRST_Msk;
pub const RCC_CSR_RMVF_Pos: u32 = 23;
pub const RCC_CSR_RMVF_Msk: u32 = 0x1 << RCC_CSR_RMVF_Pos;
pub const RCC_CSR_RMVF: u32 = RCC_CSR_RMVF_Msk;
pub const RCC_CSR_FWRSTF_Pos: u32 = 24;
pub const RCC_CSR_FWRSTF_Msk: u32 = 0x1 << RCC_CSR_FWRSTF_Pos;
pub const RCC_CSR_FWRSTF: u32 = RCC_CSR_FWRSTF_Msk;
pub const RCC_CSR_OBLRSTF_Pos: u32 = 25;
pub const RCC_CSR_OBLRSTF_Msk: u32 = 0x1 << RCC_CSR_OBLRSTF_Pos;
pub const RCC_CSR_OBLRSTF: u32 = RCC_CSR_OBLRSTF_Msk;
pub const RCC_CSR_PINRSTF_Pos: u32 = 26;
pub const RCC_CSR_PINRSTF_Msk: u32 = 0x1 << RCC_CSR_PINRSTF_Pos;
pub const RCC_CSR_PINRSTF: u32 = RCC_CSR_PINRSTF_Msk;
pub const RCC_CSR_PORRSTF_Pos: u32 = 27;
pub const RCC_CSR_PORRSTF_Msk: u32 = 0x1 << RCC_CSR_PORRSTF_Pos;
pub const RCC_CSR_PORRSTF: u32 = RCC_CSR_PORRSTF_Msk;
pub const RCC_CSR_SFTRSTF_Pos: u32 = 28;
pub const RCC_CSR_SFTRSTF_Msk: u32 = 0x1 << RCC_CSR_SFTRSTF_Pos;
pub const RCC_CSR_SFTRSTF: u32 = RCC_CSR_SFTRSTF_Msk;
pub const RCC_CSR_IWDGRSTF_Pos: u32 = 29;
pub const RCC_CSR_IWDGRSTF_Msk: u32 = 0x1 << RCC_CSR_IWDGRSTF_Pos;
pub const RCC_CSR_IWDGRSTF: u32 = RCC_CSR_IWDGRSTF_Msk;
pub const RCC_CSR_WWDGRSTF_Pos: u32 = 30;
pub const RCC_CSR_WWDGRSTF_Msk: u32 = 0x1 << RCC_CSR_WWDGRSTF_Pos;
pub const RCC_CSR_WWDGRSTF: u32 = RCC_CSR_WWDGRSTF_Msk;
pub const RCC_CSR_LPWRRSTF_Pos: u32 = 31;
pub const RCC_CSR_LPWRRSTF_Msk: u32 = 0x1 << RCC_CSR_LPWRRSTF_Pos;
pub const RCC_CSR_LPWRRSTF: u32 = RCC_CSR_LPWRRSTF_Msk;
pub const RCC_CSR_OBL: u32 = RCC_CSR_OBLRSTF;
pub const RNG_CR_RNGEN_Pos: u32 = 2;
pub const RNG_CR_RNGEN_Msk: u32 = 0x1 << RNG_CR_RNGEN_Pos;
pub const RNG_CR_RNGEN: u32 = RNG_CR_RNGEN_Msk;
pub const RNG_CR_IE_Pos: u32 = 3;
pub const RNG_CR_IE_Msk: u32 = 0x1 << RNG_CR_IE_Pos;
pub const RNG_CR_IE: u32 = RNG_CR_IE_Msk;
pub const RNG_SR_DRDY_Pos: u32 = 0;
pub const RNG_SR_DRDY_Msk: u32 = 0x1 << RNG_SR_DRDY_Pos;
pub const RNG_SR_DRDY: u32 = RNG_SR_DRDY_Msk;
pub const RNG_SR_CECS_Pos: u32 = 1;
pub const RNG_SR_CECS_Msk: u32 = 0x1 << RNG_SR_CECS_Pos;
pub const RNG_SR_CECS: u32 = RNG_SR_CECS_Msk;
pub const RNG_SR_SECS_Pos: u32 = 2;
pub const RNG_SR_SECS_Msk: u32 = 0x1 << RNG_SR_SECS_Pos;
pub const RNG_SR_SECS: u32 = RNG_SR_SECS_Msk;
pub const RNG_SR_CEIS_Pos: u32 = 5;
pub const RNG_SR_CEIS_Msk: u32 = 0x1 << RNG_SR_CEIS_Pos;
pub const RNG_SR_CEIS: u32 = RNG_SR_CEIS_Msk;
pub const RNG_SR_SEIS_Pos: u32 = 6;
pub const RNG_SR_SEIS_Msk: u32 = 0x1 << RNG_SR_SEIS_Pos;
pub const RNG_SR_SEIS: u32 = RNG_SR_SEIS_Msk;
pub const RTC_TR_PM_Pos: u32 = 22;
pub const RTC_TR_PM_Msk: u32 = 0x1 << RTC_TR_PM_Pos;
pub const RTC_TR_PM: u32 = RTC_TR_PM_Msk;
pub const RTC_TR_HT_Pos: u32 = 20;
pub const RTC_TR_HT_Msk: u32 = 0x3 << RTC_TR_HT_Pos;
pub const RTC_TR_HT: u32 = RTC_TR_HT_Msk;
pub const RTC_TR_HT_0: u32 = 0x1 << RTC_TR_HT_Pos;
pub const RTC_TR_HT_1: u32 = 0x2 << RTC_TR_HT_Pos;
pub const RTC_TR_HU_Pos: u32 = 16;
pub const RTC_TR_HU_Msk: u32 = 0xF << RTC_TR_HU_Pos;
pub const RTC_TR_HU: u32 = RTC_TR_HU_Msk;
pub const RTC_TR_HU_0: u32 = 0x1 << RTC_TR_HU_Pos;
pub const RTC_TR_HU_1: u32 = 0x2 << RTC_TR_HU_Pos;
pub const RTC_TR_HU_2: u32 = 0x4 << RTC_TR_HU_Pos;
pub const RTC_TR_HU_3: u32 = 0x8 << RTC_TR_HU_Pos;
pub const RTC_TR_MNT_Pos: u32 = 12;
pub const RTC_TR_MNT_Msk: u32 = 0x7 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNT: u32 = RTC_TR_MNT_Msk;
pub const RTC_TR_MNT_0: u32 = 0x1 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNT_1: u32 = 0x2 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNT_2: u32 = 0x4 << RTC_TR_MNT_Pos;
pub const RTC_TR_MNU_Pos: u32 = 8;
pub const RTC_TR_MNU_Msk: u32 = 0xF << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU: u32 = RTC_TR_MNU_Msk;
pub const RTC_TR_MNU_0: u32 = 0x1 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU_1: u32 = 0x2 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU_2: u32 = 0x4 << RTC_TR_MNU_Pos;
pub const RTC_TR_MNU_3: u32 = 0x8 << RTC_TR_MNU_Pos;
pub const RTC_TR_ST_Pos: u32 = 4;
pub const RTC_TR_ST_Msk: u32 = 0x7 << RTC_TR_ST_Pos;
pub const RTC_TR_ST: u32 = RTC_TR_ST_Msk;
pub const RTC_TR_ST_0: u32 = 0x1 << RTC_TR_ST_Pos;
pub const RTC_TR_ST_1: u32 = 0x2 << RTC_TR_ST_Pos;
pub const RTC_TR_ST_2: u32 = 0x4 << RTC_TR_ST_Pos;
pub const RTC_TR_SU_Pos: u32 = 0;
pub const RTC_TR_SU_Msk: u32 = 0xF << RTC_TR_SU_Pos;
pub const RTC_TR_SU: u32 = RTC_TR_SU_Msk;
pub const RTC_TR_SU_0: u32 = 0x1 << RTC_TR_SU_Pos;
pub const RTC_TR_SU_1: u32 = 0x2 << RTC_TR_SU_Pos;
pub const RTC_TR_SU_2: u32 = 0x4 << RTC_TR_SU_Pos;
pub const RTC_TR_SU_3: u32 = 0x8 << RTC_TR_SU_Pos;
pub const RTC_DR_YT_Pos: u32 = 20;
pub const RTC_DR_YT_Msk: u32 = 0xF << RTC_DR_YT_Pos;
pub const RTC_DR_YT: u32 = RTC_DR_YT_Msk;
pub const RTC_DR_YT_0: u32 = 0x1 << RTC_DR_YT_Pos;
pub const RTC_DR_YT_1: u32 = 0x2 << RTC_DR_YT_Pos;
pub const RTC_DR_YT_2: u32 = 0x4 << RTC_DR_YT_Pos;
pub const RTC_DR_YT_3: u32 = 0x8 << RTC_DR_YT_Pos;
pub const RTC_DR_YU_Pos: u32 = 16;
pub const RTC_DR_YU_Msk: u32 = 0xF << RTC_DR_YU_Pos;
pub const RTC_DR_YU: u32 = RTC_DR_YU_Msk;
pub const RTC_DR_YU_0: u32 = 0x1 << RTC_DR_YU_Pos;
pub const RTC_DR_YU_1: u32 = 0x2 << RTC_DR_YU_Pos;
pub const RTC_DR_YU_2: u32 = 0x4 << RTC_DR_YU_Pos;
pub const RTC_DR_YU_3: u32 = 0x8 << RTC_DR_YU_Pos;
pub const RTC_DR_WDU_Pos: u32 = 13;
pub const RTC_DR_WDU_Msk: u32 = 0x7 << RTC_DR_WDU_Pos;
pub const RTC_DR_WDU: u32 = RTC_DR_WDU_Msk;
pub const RTC_DR_WDU_0: u32 = 0x1 << RTC_DR_WDU_Pos;
pub const RTC_DR_WDU_1: u32 = 0x2 << RTC_DR_WDU_Pos;
pub const RTC_DR_WDU_2: u32 = 0x4 << RTC_DR_WDU_Pos;
pub const RTC_DR_MT_Pos: u32 = 12;
pub const RTC_DR_MT_Msk: u32 = 0x1 << RTC_DR_MT_Pos;
pub const RTC_DR_MT: u32 = RTC_DR_MT_Msk;
pub const RTC_DR_MU_Pos: u32 = 8;
pub const RTC_DR_MU_Msk: u32 = 0xF << RTC_DR_MU_Pos;
pub const RTC_DR_MU: u32 = RTC_DR_MU_Msk;
pub const RTC_DR_MU_0: u32 = 0x1 << RTC_DR_MU_Pos;
pub const RTC_DR_MU_1: u32 = 0x2 << RTC_DR_MU_Pos;
pub const RTC_DR_MU_2: u32 = 0x4 << RTC_DR_MU_Pos;
pub const RTC_DR_MU_3: u32 = 0x8 << RTC_DR_MU_Pos;
pub const RTC_DR_DT_Pos: u32 = 4;
pub const RTC_DR_DT_Msk: u32 = 0x3 << RTC_DR_DT_Pos;
pub const RTC_DR_DT: u32 = RTC_DR_DT_Msk;
pub const RTC_DR_DT_0: u32 = 0x1 << RTC_DR_DT_Pos;
pub const RTC_DR_DT_1: u32 = 0x2 << RTC_DR_DT_Pos;
pub const RTC_DR_DU_Pos: u32 = 0;
pub const RTC_DR_DU_Msk: u32 = 0xF << RTC_DR_DU_Pos;
pub const RTC_DR_DU: u32 = RTC_DR_DU_Msk;
pub const RTC_DR_DU_0: u32 = 0x1 << RTC_DR_DU_Pos;
pub const RTC_DR_DU_1: u32 = 0x2 << RTC_DR_DU_Pos;
pub const RTC_DR_DU_2: u32 = 0x4 << RTC_DR_DU_Pos;
pub const RTC_DR_DU_3: u32 = 0x8 << RTC_DR_DU_Pos;
pub const RTC_CR_COE_Pos: u32 = 23;
pub const RTC_CR_COE_Msk: u32 = 0x1 << RTC_CR_COE_Pos;
pub const RTC_CR_COE: u32 = RTC_CR_COE_Msk;
pub const RTC_CR_OSEL_Pos: u32 = 21;
pub const RTC_CR_OSEL_Msk: u32 = 0x3 << RTC_CR_OSEL_Pos;
pub const RTC_CR_OSEL: u32 = RTC_CR_OSEL_Msk;
pub const RTC_CR_OSEL_0: u32 = 0x1 << RTC_CR_OSEL_Pos;
pub const RTC_CR_OSEL_1: u32 = 0x2 << RTC_CR_OSEL_Pos;
pub const RTC_CR_POL_Pos: u32 = 20;
pub const RTC_CR_POL_Msk: u32 = 0x1 << RTC_CR_POL_Pos;
pub const RTC_CR_POL: u32 = RTC_CR_POL_Msk;
pub const RTC_CR_COSEL_Pos: u32 = 19;
pub const RTC_CR_COSEL_Msk: u32 = 0x1 << RTC_CR_COSEL_Pos;
pub const RTC_CR_COSEL: u32 = RTC_CR_COSEL_Msk;
pub const RTC_CR_BKP_Pos: u32 = 18;
pub const RTC_CR_BKP_Msk: u32 = 0x1 << RTC_CR_BKP_Pos;
pub const RTC_CR_BKP: u32 = RTC_CR_BKP_Msk;
pub const RTC_CR_SUB1H_Pos: u32 = 17;
pub const RTC_CR_SUB1H_Msk: u32 = 0x1 << RTC_CR_SUB1H_Pos;
pub const RTC_CR_SUB1H: u32 = RTC_CR_SUB1H_Msk;
pub const RTC_CR_ADD1H_Pos: u32 = 16;
pub const RTC_CR_ADD1H_Msk: u32 = 0x1 << RTC_CR_ADD1H_Pos;
pub const RTC_CR_ADD1H: u32 = RTC_CR_ADD1H_Msk;
pub const RTC_CR_TSIE_Pos: u32 = 15;
pub const RTC_CR_TSIE_Msk: u32 = 0x1 << RTC_CR_TSIE_Pos;
pub const RTC_CR_TSIE: u32 = RTC_CR_TSIE_Msk;
pub const RTC_CR_WUTIE_Pos: u32 = 14;
pub const RTC_CR_WUTIE_Msk: u32 = 0x1 << RTC_CR_WUTIE_Pos;
pub const RTC_CR_WUTIE: u32 = RTC_CR_WUTIE_Msk;
pub const RTC_CR_ALRBIE_Pos: u32 = 13;
pub const RTC_CR_ALRBIE_Msk: u32 = 0x1 << RTC_CR_ALRBIE_Pos;
pub const RTC_CR_ALRBIE: u32 = RTC_CR_ALRBIE_Msk;
pub const RTC_CR_ALRAIE_Pos: u32 = 12;
pub const RTC_CR_ALRAIE_Msk: u32 = 0x1 << RTC_CR_ALRAIE_Pos;
pub const RTC_CR_ALRAIE: u32 = RTC_CR_ALRAIE_Msk;
pub const RTC_CR_TSE_Pos: u32 = 11;
pub const RTC_CR_TSE_Msk: u32 = 0x1 << RTC_CR_TSE_Pos;
pub const RTC_CR_TSE: u32 = RTC_CR_TSE_Msk;
pub const RTC_CR_WUTE_Pos: u32 = 10;
pub const RTC_CR_WUTE_Msk: u32 = 0x1 << RTC_CR_WUTE_Pos;
pub const RTC_CR_WUTE: u32 = RTC_CR_WUTE_Msk;
pub const RTC_CR_ALRBE_Pos: u32 = 9;
pub const RTC_CR_ALRBE_Msk: u32 = 0x1 << RTC_CR_ALRBE_Pos;
pub const RTC_CR_ALRBE: u32 = RTC_CR_ALRBE_Msk;
pub const RTC_CR_ALRAE_Pos: u32 = 8;
pub const RTC_CR_ALRAE_Msk: u32 = 0x1 << RTC_CR_ALRAE_Pos;
pub const RTC_CR_ALRAE: u32 = RTC_CR_ALRAE_Msk;
pub const RTC_CR_FMT_Pos: u32 = 6;
pub const RTC_CR_FMT_Msk: u32 = 0x1 << RTC_CR_FMT_Pos;
pub const RTC_CR_FMT: u32 = RTC_CR_FMT_Msk;
pub const RTC_CR_BYPSHAD_Pos: u32 = 5;
pub const RTC_CR_BYPSHAD_Msk: u32 = 0x1 << RTC_CR_BYPSHAD_Pos;
pub const RTC_CR_BYPSHAD: u32 = RTC_CR_BYPSHAD_Msk;
pub const RTC_CR_REFCKON_Pos: u32 = 4;
pub const RTC_CR_REFCKON_Msk: u32 = 0x1 << RTC_CR_REFCKON_Pos;
pub const RTC_CR_REFCKON: u32 = RTC_CR_REFCKON_Msk;
pub const RTC_CR_TSEDGE_Pos: u32 = 3;
pub const RTC_CR_TSEDGE_Msk: u32 = 0x1 << RTC_CR_TSEDGE_Pos;
pub const RTC_CR_TSEDGE: u32 = RTC_CR_TSEDGE_Msk;
pub const RTC_CR_WUCKSEL_Pos: u32 = 0;
pub const RTC_CR_WUCKSEL_Msk: u32 = 0x7 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_WUCKSEL: u32 = RTC_CR_WUCKSEL_Msk;
pub const RTC_CR_WUCKSEL_0: u32 = 0x1 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_WUCKSEL_1: u32 = 0x2 << RTC_CR_WUCKSEL_Pos;
pub const RTC_CR_WUCKSEL_2: u32 = 0x4 << RTC_CR_WUCKSEL_Pos;
pub const RTC_ISR_RECALPF_Pos: u32 = 16;
pub const RTC_ISR_RECALPF_Msk: u32 = 0x1 << RTC_ISR_RECALPF_Pos;
pub const RTC_ISR_RECALPF: u32 = RTC_ISR_RECALPF_Msk;
pub const RTC_ISR_TAMP2F_Pos: u32 = 14;
pub const RTC_ISR_TAMP2F_Msk: u32 = 0x1 << RTC_ISR_TAMP2F_Pos;
pub const RTC_ISR_TAMP2F: u32 = RTC_ISR_TAMP2F_Msk;
pub const RTC_ISR_TAMP1F_Pos: u32 = 13;
pub const RTC_ISR_TAMP1F_Msk: u32 = 0x1 << RTC_ISR_TAMP1F_Pos;
pub const RTC_ISR_TAMP1F: u32 = RTC_ISR_TAMP1F_Msk;
pub const RTC_ISR_TSOVF_Pos: u32 = 12;
pub const RTC_ISR_TSOVF_Msk: u32 = 0x1 << RTC_ISR_TSOVF_Pos;
pub const RTC_ISR_TSOVF: u32 = RTC_ISR_TSOVF_Msk;
pub const RTC_ISR_TSF_Pos: u32 = 11;
pub const RTC_ISR_TSF_Msk: u32 = 0x1 << RTC_ISR_TSF_Pos;
pub const RTC_ISR_TSF: u32 = RTC_ISR_TSF_Msk;
pub const RTC_ISR_WUTF_Pos: u32 = 10;
pub const RTC_ISR_WUTF_Msk: u32 = 0x1 << RTC_ISR_WUTF_Pos;
pub const RTC_ISR_WUTF: u32 = RTC_ISR_WUTF_Msk;
pub const RTC_ISR_ALRBF_Pos: u32 = 9;
pub const RTC_ISR_ALRBF_Msk: u32 = 0x1 << RTC_ISR_ALRBF_Pos;
pub const RTC_ISR_ALRBF: u32 = RTC_ISR_ALRBF_Msk;
pub const RTC_ISR_ALRAF_Pos: u32 = 8;
pub const RTC_ISR_ALRAF_Msk: u32 = 0x1 << RTC_ISR_ALRAF_Pos;
pub const RTC_ISR_ALRAF: u32 = RTC_ISR_ALRAF_Msk;
pub const RTC_ISR_INIT_Pos: u32 = 7;
pub const RTC_ISR_INIT_Msk: u32 = 0x1 << RTC_ISR_INIT_Pos;
pub const RTC_ISR_INIT: u32 = RTC_ISR_INIT_Msk;
pub const RTC_ISR_INITF_Pos: u32 = 6;
pub const RTC_ISR_INITF_Msk: u32 = 0x1 << RTC_ISR_INITF_Pos;
pub const RTC_ISR_INITF: u32 = RTC_ISR_INITF_Msk;
pub const RTC_ISR_RSF_Pos: u32 = 5;
pub const RTC_ISR_RSF_Msk: u32 = 0x1 << RTC_ISR_RSF_Pos;
pub const RTC_ISR_RSF: u32 = RTC_ISR_RSF_Msk;
pub const RTC_ISR_INITS_Pos: u32 = 4;
pub const RTC_ISR_INITS_Msk: u32 = 0x1 << RTC_ISR_INITS_Pos;
pub const RTC_ISR_INITS: u32 = RTC_ISR_INITS_Msk;
pub const RTC_ISR_SHPF_Pos: u32 = 3;
pub const RTC_ISR_SHPF_Msk: u32 = 0x1 << RTC_ISR_SHPF_Pos;
pub const RTC_ISR_SHPF: u32 = RTC_ISR_SHPF_Msk;
pub const RTC_ISR_WUTWF_Pos: u32 = 2;
pub const RTC_ISR_WUTWF_Msk: u32 = 0x1 << RTC_ISR_WUTWF_Pos;
pub const RTC_ISR_WUTWF: u32 = RTC_ISR_WUTWF_Msk;
pub const RTC_ISR_ALRBWF_Pos: u32 = 1;
pub const RTC_ISR_ALRBWF_Msk: u32 = 0x1 << RTC_ISR_ALRBWF_Pos;
pub const RTC_ISR_ALRBWF: u32 = RTC_ISR_ALRBWF_Msk;
pub const RTC_ISR_ALRAWF_Pos: u32 = 0;
pub const RTC_ISR_ALRAWF_Msk: u32 = 0x1 << RTC_ISR_ALRAWF_Pos;
pub const RTC_ISR_ALRAWF: u32 = RTC_ISR_ALRAWF_Msk;
pub const RTC_PRER_PREDIV_A_Pos: u32 = 16;
pub const RTC_PRER_PREDIV_A_Msk: u32 = 0x7F << RTC_PRER_PREDIV_A_Pos;
pub const RTC_PRER_PREDIV_A: u32 = RTC_PRER_PREDIV_A_Msk;
pub const RTC_PRER_PREDIV_S_Pos: u32 = 0;
pub const RTC_PRER_PREDIV_S_Msk: u32 = 0x7FFF << RTC_PRER_PREDIV_S_Pos;
pub const RTC_PRER_PREDIV_S: u32 = RTC_PRER_PREDIV_S_Msk;
pub const RTC_WUTR_WUT_Pos: u32 = 0;
pub const RTC_WUTR_WUT_Msk: u32 = 0xFFFF << RTC_WUTR_WUT_Pos;
pub const RTC_WUTR_WUT: u32 = RTC_WUTR_WUT_Msk;
pub const RTC_ALRMAR_MSK4_Pos: u32 = 31;
pub const RTC_ALRMAR_MSK4_Msk: u32 = 0x1 << RTC_ALRMAR_MSK4_Pos;
pub const RTC_ALRMAR_MSK4: u32 = RTC_ALRMAR_MSK4_Msk;
pub const RTC_ALRMAR_WDSEL_Pos: u32 = 30;
pub const RTC_ALRMAR_WDSEL_Msk: u32 = 0x1 << RTC_ALRMAR_WDSEL_Pos;
pub const RTC_ALRMAR_WDSEL: u32 = RTC_ALRMAR_WDSEL_Msk;
pub const RTC_ALRMAR_DT_Pos: u32 = 28;
pub const RTC_ALRMAR_DT_Msk: u32 = 0x3 << RTC_ALRMAR_DT_Pos;
pub const RTC_ALRMAR_DT: u32 = RTC_ALRMAR_DT_Msk;
pub const RTC_ALRMAR_DT_0: u32 = 0x1 << RTC_ALRMAR_DT_Pos;
pub const RTC_ALRMAR_DT_1: u32 = 0x2 << RTC_ALRMAR_DT_Pos;
pub const RTC_ALRMAR_DU_Pos: u32 = 24;
pub const RTC_ALRMAR_DU_Msk: u32 = 0xF << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU: u32 = RTC_ALRMAR_DU_Msk;
pub const RTC_ALRMAR_DU_0: u32 = 0x1 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU_1: u32 = 0x2 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU_2: u32 = 0x4 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_DU_3: u32 = 0x8 << RTC_ALRMAR_DU_Pos;
pub const RTC_ALRMAR_MSK3_Pos: u32 = 23;
pub const RTC_ALRMAR_MSK3_Msk: u32 = 0x1 << RTC_ALRMAR_MSK3_Pos;
pub const RTC_ALRMAR_MSK3: u32 = RTC_ALRMAR_MSK3_Msk;
pub const RTC_ALRMAR_PM_Pos: u32 = 22;
pub const RTC_ALRMAR_PM_Msk: u32 = 0x1 << RTC_ALRMAR_PM_Pos;
pub const RTC_ALRMAR_PM: u32 = RTC_ALRMAR_PM_Msk;
pub const RTC_ALRMAR_HT_Pos: u32 = 20;
pub const RTC_ALRMAR_HT_Msk: u32 = 0x3 << RTC_ALRMAR_HT_Pos;
pub const RTC_ALRMAR_HT: u32 = RTC_ALRMAR_HT_Msk;
pub const RTC_ALRMAR_HT_0: u32 = 0x1 << RTC_ALRMAR_HT_Pos;
pub const RTC_ALRMAR_HT_1: u32 = 0x2 << RTC_ALRMAR_HT_Pos;
pub const RTC_ALRMAR_HU_Pos: u32 = 16;
pub const RTC_ALRMAR_HU_Msk: u32 = 0xF << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU: u32 = RTC_ALRMAR_HU_Msk;
pub const RTC_ALRMAR_HU_0: u32 = 0x1 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU_1: u32 = 0x2 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU_2: u32 = 0x4 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_HU_3: u32 = 0x8 << RTC_ALRMAR_HU_Pos;
pub const RTC_ALRMAR_MSK2_Pos: u32 = 15;
pub const RTC_ALRMAR_MSK2_Msk: u32 = 0x1 << RTC_ALRMAR_MSK2_Pos;
pub const RTC_ALRMAR_MSK2: u32 = RTC_ALRMAR_MSK2_Msk;
pub const RTC_ALRMAR_MNT_Pos: u32 = 12;
pub const RTC_ALRMAR_MNT_Msk: u32 = 0x7 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNT: u32 = RTC_ALRMAR_MNT_Msk;
pub const RTC_ALRMAR_MNT_0: u32 = 0x1 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNT_1: u32 = 0x2 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNT_2: u32 = 0x4 << RTC_ALRMAR_MNT_Pos;
pub const RTC_ALRMAR_MNU_Pos: u32 = 8;
pub const RTC_ALRMAR_MNU_Msk: u32 = 0xF << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU: u32 = RTC_ALRMAR_MNU_Msk;
pub const RTC_ALRMAR_MNU_0: u32 = 0x1 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU_1: u32 = 0x2 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU_2: u32 = 0x4 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MNU_3: u32 = 0x8 << RTC_ALRMAR_MNU_Pos;
pub const RTC_ALRMAR_MSK1_Pos: u32 = 7;
pub const RTC_ALRMAR_MSK1_Msk: u32 = 0x1 << RTC_ALRMAR_MSK1_Pos;
pub const RTC_ALRMAR_MSK1: u32 = RTC_ALRMAR_MSK1_Msk;
pub const RTC_ALRMAR_ST_Pos: u32 = 4;
pub const RTC_ALRMAR_ST_Msk: u32 = 0x7 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_ST: u32 = RTC_ALRMAR_ST_Msk;
pub const RTC_ALRMAR_ST_0: u32 = 0x1 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_ST_1: u32 = 0x2 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_ST_2: u32 = 0x4 << RTC_ALRMAR_ST_Pos;
pub const RTC_ALRMAR_SU_Pos: u32 = 0;
pub const RTC_ALRMAR_SU_Msk: u32 = 0xF << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU: u32 = RTC_ALRMAR_SU_Msk;
pub const RTC_ALRMAR_SU_0: u32 = 0x1 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU_1: u32 = 0x2 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU_2: u32 = 0x4 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMAR_SU_3: u32 = 0x8 << RTC_ALRMAR_SU_Pos;
pub const RTC_ALRMBR_MSK4_Pos: u32 = 31;
pub const RTC_ALRMBR_MSK4_Msk: u32 = 0x1 << RTC_ALRMBR_MSK4_Pos;
pub const RTC_ALRMBR_MSK4: u32 = RTC_ALRMBR_MSK4_Msk;
pub const RTC_ALRMBR_WDSEL_Pos: u32 = 30;
pub const RTC_ALRMBR_WDSEL_Msk: u32 = 0x1 << RTC_ALRMBR_WDSEL_Pos;
pub const RTC_ALRMBR_WDSEL: u32 = RTC_ALRMBR_WDSEL_Msk;
pub const RTC_ALRMBR_DT_Pos: u32 = 28;
pub const RTC_ALRMBR_DT_Msk: u32 = 0x3 << RTC_ALRMBR_DT_Pos;
pub const RTC_ALRMBR_DT: u32 = RTC_ALRMBR_DT_Msk;
pub const RTC_ALRMBR_DT_0: u32 = 0x1 << RTC_ALRMBR_DT_Pos;
pub const RTC_ALRMBR_DT_1: u32 = 0x2 << RTC_ALRMBR_DT_Pos;
pub const RTC_ALRMBR_DU_Pos: u32 = 24;
pub const RTC_ALRMBR_DU_Msk: u32 = 0xF << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU: u32 = RTC_ALRMBR_DU_Msk;
pub const RTC_ALRMBR_DU_0: u32 = 0x1 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU_1: u32 = 0x2 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU_2: u32 = 0x4 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_DU_3: u32 = 0x8 << RTC_ALRMBR_DU_Pos;
pub const RTC_ALRMBR_MSK3_Pos: u32 = 23;
pub const RTC_ALRMBR_MSK3_Msk: u32 = 0x1 << RTC_ALRMBR_MSK3_Pos;
pub const RTC_ALRMBR_MSK3: u32 = RTC_ALRMBR_MSK3_Msk;
pub const RTC_ALRMBR_PM_Pos: u32 = 22;
pub const RTC_ALRMBR_PM_Msk: u32 = 0x1 << RTC_ALRMBR_PM_Pos;
pub const RTC_ALRMBR_PM: u32 = RTC_ALRMBR_PM_Msk;
pub const RTC_ALRMBR_HT_Pos: u32 = 20;
pub const RTC_ALRMBR_HT_Msk: u32 = 0x3 << RTC_ALRMBR_HT_Pos;
pub const RTC_ALRMBR_HT: u32 = RTC_ALRMBR_HT_Msk;
pub const RTC_ALRMBR_HT_0: u32 = 0x1 << RTC_ALRMBR_HT_Pos;
pub const RTC_ALRMBR_HT_1: u32 = 0x2 << RTC_ALRMBR_HT_Pos;
pub const RTC_ALRMBR_HU_Pos: u32 = 16;
pub const RTC_ALRMBR_HU_Msk: u32 = 0xF << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU: u32 = RTC_ALRMBR_HU_Msk;
pub const RTC_ALRMBR_HU_0: u32 = 0x1 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU_1: u32 = 0x2 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU_2: u32 = 0x4 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_HU_3: u32 = 0x8 << RTC_ALRMBR_HU_Pos;
pub const RTC_ALRMBR_MSK2_Pos: u32 = 15;
pub const RTC_ALRMBR_MSK2_Msk: u32 = 0x1 << RTC_ALRMBR_MSK2_Pos;
pub const RTC_ALRMBR_MSK2: u32 = RTC_ALRMBR_MSK2_Msk;
pub const RTC_ALRMBR_MNT_Pos: u32 = 12;
pub const RTC_ALRMBR_MNT_Msk: u32 = 0x7 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNT: u32 = RTC_ALRMBR_MNT_Msk;
pub const RTC_ALRMBR_MNT_0: u32 = 0x1 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNT_1: u32 = 0x2 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNT_2: u32 = 0x4 << RTC_ALRMBR_MNT_Pos;
pub const RTC_ALRMBR_MNU_Pos: u32 = 8;
pub const RTC_ALRMBR_MNU_Msk: u32 = 0xF << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU: u32 = RTC_ALRMBR_MNU_Msk;
pub const RTC_ALRMBR_MNU_0: u32 = 0x1 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU_1: u32 = 0x2 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU_2: u32 = 0x4 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MNU_3: u32 = 0x8 << RTC_ALRMBR_MNU_Pos;
pub const RTC_ALRMBR_MSK1_Pos: u32 = 7;
pub const RTC_ALRMBR_MSK1_Msk: u32 = 0x1 << RTC_ALRMBR_MSK1_Pos;
pub const RTC_ALRMBR_MSK1: u32 = RTC_ALRMBR_MSK1_Msk;
pub const RTC_ALRMBR_ST_Pos: u32 = 4;
pub const RTC_ALRMBR_ST_Msk: u32 = 0x7 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_ST: u32 = RTC_ALRMBR_ST_Msk;
pub const RTC_ALRMBR_ST_0: u32 = 0x1 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_ST_1: u32 = 0x2 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_ST_2: u32 = 0x4 << RTC_ALRMBR_ST_Pos;
pub const RTC_ALRMBR_SU_Pos: u32 = 0;
pub const RTC_ALRMBR_SU_Msk: u32 = 0xF << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU: u32 = RTC_ALRMBR_SU_Msk;
pub const RTC_ALRMBR_SU_0: u32 = 0x1 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU_1: u32 = 0x2 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU_2: u32 = 0x4 << RTC_ALRMBR_SU_Pos;
pub const RTC_ALRMBR_SU_3: u32 = 0x8 << RTC_ALRMBR_SU_Pos;
pub const RTC_WPR_KEY_Pos: u32 = 0;
pub const RTC_WPR_KEY_Msk: u32 = 0xFF << RTC_WPR_KEY_Pos;
pub const RTC_WPR_KEY: u32 = RTC_WPR_KEY_Msk;
pub const RTC_SSR_SS_Pos: u32 = 0;
pub const RTC_SSR_SS_Msk: u32 = 0xFFFF << RTC_SSR_SS_Pos;
pub const RTC_SSR_SS: u32 = RTC_SSR_SS_Msk;
pub const RTC_SHIFTR_SUBFS_Pos: u32 = 0;
pub const RTC_SHIFTR_SUBFS_Msk: u32 = 0x7FFF << RTC_SHIFTR_SUBFS_Pos;
pub const RTC_SHIFTR_SUBFS: u32 = RTC_SHIFTR_SUBFS_Msk;
pub const RTC_SHIFTR_ADD1S_Pos: u32 = 31;
pub const RTC_SHIFTR_ADD1S_Msk: u32 = 0x1 << RTC_SHIFTR_ADD1S_Pos;
pub const RTC_SHIFTR_ADD1S: u32 = RTC_SHIFTR_ADD1S_Msk;
pub const RTC_TSTR_PM_Pos: u32 = 22;
pub const RTC_TSTR_PM_Msk: u32 = 0x1 << RTC_TSTR_PM_Pos;
pub const RTC_TSTR_PM: u32 = RTC_TSTR_PM_Msk;
pub const RTC_TSTR_HT_Pos: u32 = 20;
pub const RTC_TSTR_HT_Msk: u32 = 0x3 << RTC_TSTR_HT_Pos;
pub const RTC_TSTR_HT: u32 = RTC_TSTR_HT_Msk;
pub const RTC_TSTR_HT_0: u32 = 0x1 << RTC_TSTR_HT_Pos;
pub const RTC_TSTR_HT_1: u32 = 0x2 << RTC_TSTR_HT_Pos;
pub const RTC_TSTR_HU_Pos: u32 = 16;
pub const RTC_TSTR_HU_Msk: u32 = 0xF << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU: u32 = RTC_TSTR_HU_Msk;
pub const RTC_TSTR_HU_0: u32 = 0x1 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU_1: u32 = 0x2 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU_2: u32 = 0x4 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_HU_3: u32 = 0x8 << RTC_TSTR_HU_Pos;
pub const RTC_TSTR_MNT_Pos: u32 = 12;
pub const RTC_TSTR_MNT_Msk: u32 = 0x7 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNT: u32 = RTC_TSTR_MNT_Msk;
pub const RTC_TSTR_MNT_0: u32 = 0x1 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNT_1: u32 = 0x2 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNT_2: u32 = 0x4 << RTC_TSTR_MNT_Pos;
pub const RTC_TSTR_MNU_Pos: u32 = 8;
pub const RTC_TSTR_MNU_Msk: u32 = 0xF << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU: u32 = RTC_TSTR_MNU_Msk;
pub const RTC_TSTR_MNU_0: u32 = 0x1 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU_1: u32 = 0x2 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU_2: u32 = 0x4 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_MNU_3: u32 = 0x8 << RTC_TSTR_MNU_Pos;
pub const RTC_TSTR_ST_Pos: u32 = 4;
pub const RTC_TSTR_ST_Msk: u32 = 0x7 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_ST: u32 = RTC_TSTR_ST_Msk;
pub const RTC_TSTR_ST_0: u32 = 0x1 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_ST_1: u32 = 0x2 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_ST_2: u32 = 0x4 << RTC_TSTR_ST_Pos;
pub const RTC_TSTR_SU_Pos: u32 = 0;
pub const RTC_TSTR_SU_Msk: u32 = 0xF << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU: u32 = RTC_TSTR_SU_Msk;
pub const RTC_TSTR_SU_0: u32 = 0x1 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU_1: u32 = 0x2 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU_2: u32 = 0x4 << RTC_TSTR_SU_Pos;
pub const RTC_TSTR_SU_3: u32 = 0x8 << RTC_TSTR_SU_Pos;
pub const RTC_TSDR_WDU_Pos: u32 = 13;
pub const RTC_TSDR_WDU_Msk: u32 = 0x7 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_WDU: u32 = RTC_TSDR_WDU_Msk;
pub const RTC_TSDR_WDU_0: u32 = 0x1 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_WDU_1: u32 = 0x2 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_WDU_2: u32 = 0x4 << RTC_TSDR_WDU_Pos;
pub const RTC_TSDR_MT_Pos: u32 = 12;
pub const RTC_TSDR_MT_Msk: u32 = 0x1 << RTC_TSDR_MT_Pos;
pub const RTC_TSDR_MT: u32 = RTC_TSDR_MT_Msk;
pub const RTC_TSDR_MU_Pos: u32 = 8;
pub const RTC_TSDR_MU_Msk: u32 = 0xF << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU: u32 = RTC_TSDR_MU_Msk;
pub const RTC_TSDR_MU_0: u32 = 0x1 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU_1: u32 = 0x2 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU_2: u32 = 0x4 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_MU_3: u32 = 0x8 << RTC_TSDR_MU_Pos;
pub const RTC_TSDR_DT_Pos: u32 = 4;
pub const RTC_TSDR_DT_Msk: u32 = 0x3 << RTC_TSDR_DT_Pos;
pub const RTC_TSDR_DT: u32 = RTC_TSDR_DT_Msk;
pub const RTC_TSDR_DT_0: u32 = 0x1 << RTC_TSDR_DT_Pos;
pub const RTC_TSDR_DT_1: u32 = 0x2 << RTC_TSDR_DT_Pos;
pub const RTC_TSDR_DU_Pos: u32 = 0;
pub const RTC_TSDR_DU_Msk: u32 = 0xF << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU: u32 = RTC_TSDR_DU_Msk;
pub const RTC_TSDR_DU_0: u32 = 0x1 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU_1: u32 = 0x2 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU_2: u32 = 0x4 << RTC_TSDR_DU_Pos;
pub const RTC_TSDR_DU_3: u32 = 0x8 << RTC_TSDR_DU_Pos;
pub const RTC_TSSSR_SS_Pos: u32 = 0;
pub const RTC_TSSSR_SS_Msk: u32 = 0xFFFF << RTC_TSSSR_SS_Pos;
pub const RTC_TSSSR_SS: u32 = RTC_TSSSR_SS_Msk;
pub const RTC_CALR_CALP_Pos: u32 = 15;
pub const RTC_CALR_CALP_Msk: u32 = 0x1 << RTC_CALR_CALP_Pos;
pub const RTC_CALR_CALP: u32 = RTC_CALR_CALP_Msk;
pub const RTC_CALR_CALW8_Pos: u32 = 14;
pub const RTC_CALR_CALW8_Msk: u32 = 0x1 << RTC_CALR_CALW8_Pos;
pub const RTC_CALR_CALW8: u32 = RTC_CALR_CALW8_Msk;
pub const RTC_CALR_CALW16_Pos: u32 = 13;
pub const RTC_CALR_CALW16_Msk: u32 = 0x1 << RTC_CALR_CALW16_Pos;
pub const RTC_CALR_CALW16: u32 = RTC_CALR_CALW16_Msk;
pub const RTC_CALR_CALM_Pos: u32 = 0;
pub const RTC_CALR_CALM_Msk: u32 = 0x1FF << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM: u32 = RTC_CALR_CALM_Msk;
pub const RTC_CALR_CALM_0: u32 = 0x001 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_1: u32 = 0x002 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_2: u32 = 0x004 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_3: u32 = 0x008 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_4: u32 = 0x010 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_5: u32 = 0x020 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_6: u32 = 0x040 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_7: u32 = 0x080 << RTC_CALR_CALM_Pos;
pub const RTC_CALR_CALM_8: u32 = 0x100 << RTC_CALR_CALM_Pos;
pub const RTC_CAL_CALP: u32 = RTC_CALR_CALP;
pub const RTC_CAL_CALW8: u32 = RTC_CALR_CALW8;
pub const RTC_CAL_CALW16: u32 = RTC_CALR_CALW16;
pub const RTC_CAL_CALM: u32 = RTC_CALR_CALM;
pub const RTC_CAL_CALM_0: u32 = RTC_CALR_CALM_0;
pub const RTC_CAL_CALM_1: u32 = RTC_CALR_CALM_1;
pub const RTC_CAL_CALM_2: u32 = RTC_CALR_CALM_2;
pub const RTC_CAL_CALM_3: u32 = RTC_CALR_CALM_3;
pub const RTC_CAL_CALM_4: u32 = RTC_CALR_CALM_4;
pub const RTC_CAL_CALM_5: u32 = RTC_CALR_CALM_5;
pub const RTC_CAL_CALM_6: u32 = RTC_CALR_CALM_6;
pub const RTC_CAL_CALM_7: u32 = RTC_CALR_CALM_7;
pub const RTC_CAL_CALM_8: u32 = RTC_CALR_CALM_8;
pub const RTC_TAMPCR_TAMP2MF_Pos: u32 = 21;
pub const RTC_TAMPCR_TAMP2MF_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP2MF_Pos;
pub const RTC_TAMPCR_TAMP2MF: u32 = RTC_TAMPCR_TAMP2MF_Msk;
pub const RTC_TAMPCR_TAMP2NOERASE_Pos: u32 = 20;
pub const RTC_TAMPCR_TAMP2NOERASE_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP2NOERASE_Pos;
pub const RTC_TAMPCR_TAMP2NOERASE: u32 = RTC_TAMPCR_TAMP2NOERASE_Msk;
pub const RTC_TAMPCR_TAMP2IE_Pos: u32 = 19;
pub const RTC_TAMPCR_TAMP2IE_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP2IE_Pos;
pub const RTC_TAMPCR_TAMP2IE: u32 = RTC_TAMPCR_TAMP2IE_Msk;
pub const RTC_TAMPCR_TAMP1MF_Pos: u32 = 18;
pub const RTC_TAMPCR_TAMP1MF_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP1MF_Pos;
pub const RTC_TAMPCR_TAMP1MF: u32 = RTC_TAMPCR_TAMP1MF_Msk;
pub const RTC_TAMPCR_TAMP1NOERASE_Pos: u32 = 17;
pub const RTC_TAMPCR_TAMP1NOERASE_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP1NOERASE_Pos;
pub const RTC_TAMPCR_TAMP1NOERASE: u32 = RTC_TAMPCR_TAMP1NOERASE_Msk;
pub const RTC_TAMPCR_TAMP1IE_Pos: u32 = 16;
pub const RTC_TAMPCR_TAMP1IE_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP1IE_Pos;
pub const RTC_TAMPCR_TAMP1IE: u32 = RTC_TAMPCR_TAMP1IE_Msk;
pub const RTC_TAMPCR_TAMPPUDIS_Pos: u32 = 15;
pub const RTC_TAMPCR_TAMPPUDIS_Msk: u32 = 0x1 << RTC_TAMPCR_TAMPPUDIS_Pos;
pub const RTC_TAMPCR_TAMPPUDIS: u32 = RTC_TAMPCR_TAMPPUDIS_Msk;
pub const RTC_TAMPCR_TAMPPRCH_Pos: u32 = 13;
pub const RTC_TAMPCR_TAMPPRCH_Msk: u32 = 0x3 << RTC_TAMPCR_TAMPPRCH_Pos;
pub const RTC_TAMPCR_TAMPPRCH: u32 = RTC_TAMPCR_TAMPPRCH_Msk;
pub const RTC_TAMPCR_TAMPPRCH_0: u32 = 0x1 << RTC_TAMPCR_TAMPPRCH_Pos;
pub const RTC_TAMPCR_TAMPPRCH_1: u32 = 0x2 << RTC_TAMPCR_TAMPPRCH_Pos;
pub const RTC_TAMPCR_TAMPFLT_Pos: u32 = 11;
pub const RTC_TAMPCR_TAMPFLT_Msk: u32 = 0x3 << RTC_TAMPCR_TAMPFLT_Pos;
pub const RTC_TAMPCR_TAMPFLT: u32 = RTC_TAMPCR_TAMPFLT_Msk;
pub const RTC_TAMPCR_TAMPFLT_0: u32 = 0x1 << RTC_TAMPCR_TAMPFLT_Pos;
pub const RTC_TAMPCR_TAMPFLT_1: u32 = 0x2 << RTC_TAMPCR_TAMPFLT_Pos;
pub const RTC_TAMPCR_TAMPFREQ_Pos: u32 = 8;
pub const RTC_TAMPCR_TAMPFREQ_Msk: u32 = 0x7 << RTC_TAMPCR_TAMPFREQ_Pos;
pub const RTC_TAMPCR_TAMPFREQ: u32 = RTC_TAMPCR_TAMPFREQ_Msk;
pub const RTC_TAMPCR_TAMPFREQ_0: u32 = 0x1 << RTC_TAMPCR_TAMPFREQ_Pos;
pub const RTC_TAMPCR_TAMPFREQ_1: u32 = 0x2 << RTC_TAMPCR_TAMPFREQ_Pos;
pub const RTC_TAMPCR_TAMPFREQ_2: u32 = 0x4 << RTC_TAMPCR_TAMPFREQ_Pos;
pub const RTC_TAMPCR_TAMPTS_Pos: u32 = 7;
pub const RTC_TAMPCR_TAMPTS_Msk: u32 = 0x1 << RTC_TAMPCR_TAMPTS_Pos;
pub const RTC_TAMPCR_TAMPTS: u32 = RTC_TAMPCR_TAMPTS_Msk;
pub const RTC_TAMPCR_TAMP2TRG_Pos: u32 = 4;
pub const RTC_TAMPCR_TAMP2TRG_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP2TRG_Pos;
pub const RTC_TAMPCR_TAMP2TRG: u32 = RTC_TAMPCR_TAMP2TRG_Msk;
pub const RTC_TAMPCR_TAMP2E_Pos: u32 = 3;
pub const RTC_TAMPCR_TAMP2E_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP2E_Pos;
pub const RTC_TAMPCR_TAMP2E: u32 = RTC_TAMPCR_TAMP2E_Msk;
pub const RTC_TAMPCR_TAMPIE_Pos: u32 = 2;
pub const RTC_TAMPCR_TAMPIE_Msk: u32 = 0x1 << RTC_TAMPCR_TAMPIE_Pos;
pub const RTC_TAMPCR_TAMPIE: u32 = RTC_TAMPCR_TAMPIE_Msk;
pub const RTC_TAMPCR_TAMP1TRG_Pos: u32 = 1;
pub const RTC_TAMPCR_TAMP1TRG_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP1TRG_Pos;
pub const RTC_TAMPCR_TAMP1TRG: u32 = RTC_TAMPCR_TAMP1TRG_Msk;
pub const RTC_TAMPCR_TAMP1E_Pos: u32 = 0;
pub const RTC_TAMPCR_TAMP1E_Msk: u32 = 0x1 << RTC_TAMPCR_TAMP1E_Pos;
pub const RTC_TAMPCR_TAMP1E: u32 = RTC_TAMPCR_TAMP1E_Msk;
pub const RTC_ALRMASSR_MASKSS_Pos: u32 = 24;
pub const RTC_ALRMASSR_MASKSS_Msk: u32 = 0xF << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS: u32 = RTC_ALRMASSR_MASKSS_Msk;
pub const RTC_ALRMASSR_MASKSS_0: u32 = 0x1 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_1: u32 = 0x2 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_2: u32 = 0x4 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_MASKSS_3: u32 = 0x8 << RTC_ALRMASSR_MASKSS_Pos;
pub const RTC_ALRMASSR_SS_Pos: u32 = 0;
pub const RTC_ALRMASSR_SS_Msk: u32 = 0x7FFF << RTC_ALRMASSR_SS_Pos;
pub const RTC_ALRMASSR_SS: u32 = RTC_ALRMASSR_SS_Msk;
pub const RTC_ALRMBSSR_MASKSS_Pos: u32 = 24;
pub const RTC_ALRMBSSR_MASKSS_Msk: u32 = 0xF << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS: u32 = RTC_ALRMBSSR_MASKSS_Msk;
pub const RTC_ALRMBSSR_MASKSS_0: u32 = 0x1 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_1: u32 = 0x2 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_2: u32 = 0x4 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_MASKSS_3: u32 = 0x8 << RTC_ALRMBSSR_MASKSS_Pos;
pub const RTC_ALRMBSSR_SS_Pos: u32 = 0;
pub const RTC_ALRMBSSR_SS_Msk: u32 = 0x7FFF << RTC_ALRMBSSR_SS_Pos;
pub const RTC_ALRMBSSR_SS: u32 = RTC_ALRMBSSR_SS_Msk;
pub const RTC_OR_OUT_RMP_Pos: u32 = 1;
pub const RTC_OR_OUT_RMP_Msk: u32 = 0x1 << RTC_OR_OUT_RMP_Pos;
pub const RTC_OR_OUT_RMP: u32 = RTC_OR_OUT_RMP_Msk;
pub const RTC_OR_ALARMOUTTYPE_Pos: u32 = 0;
pub const RTC_OR_ALARMOUTTYPE_Msk: u32 = 0x1 << RTC_OR_ALARMOUTTYPE_Pos;
pub const RTC_OR_ALARMOUTTYPE: u32 = RTC_OR_ALARMOUTTYPE_Msk;
pub const RTC_OR_RTC_OUT_RMP: u32 = RTC_OR_OUT_RMP;
pub const RTC_BKP0R_Pos: u32 = 0;
pub const RTC_BKP0R_Msk: u32 = 0xFFFFFFFF << RTC_BKP0R_Pos;
pub const RTC_BKP0R: u32 = RTC_BKP0R_Msk;
pub const RTC_BKP1R_Pos: u32 = 0;
pub const RTC_BKP1R_Msk: u32 = 0xFFFFFFFF << RTC_BKP1R_Pos;
pub const RTC_BKP1R: u32 = RTC_BKP1R_Msk;
pub const RTC_BKP2R_Pos: u32 = 0;
pub const RTC_BKP2R_Msk: u32 = 0xFFFFFFFF << RTC_BKP2R_Pos;
pub const RTC_BKP2R: u32 = RTC_BKP2R_Msk;
pub const RTC_BKP3R_Pos: u32 = 0;
pub const RTC_BKP3R_Msk: u32 = 0xFFFFFFFF << RTC_BKP3R_Pos;
pub const RTC_BKP3R: u32 = RTC_BKP3R_Msk;
pub const RTC_BKP4R_Pos: u32 = 0;
pub const RTC_BKP4R_Msk: u32 = 0xFFFFFFFF << RTC_BKP4R_Pos;
pub const RTC_BKP4R: u32 = RTC_BKP4R_Msk;
pub const RTC_BKP_NUMBER: u32 = 0x00000005;
pub const SPI_CR1_CPHA_Pos: u32 = 0;
pub const SPI_CR1_CPHA_Msk: u32 = 0x1 << SPI_CR1_CPHA_Pos;
pub const SPI_CR1_CPHA: u32 = SPI_CR1_CPHA_Msk;
pub const SPI_CR1_CPOL_Pos: u32 = 1;
pub const SPI_CR1_CPOL_Msk: u32 = 0x1 << SPI_CR1_CPOL_Pos;
pub const SPI_CR1_CPOL: u32 = SPI_CR1_CPOL_Msk;
pub const SPI_CR1_MSTR_Pos: u32 = 2;
pub const SPI_CR1_MSTR_Msk: u32 = 0x1 << SPI_CR1_MSTR_Pos;
pub const SPI_CR1_MSTR: u32 = SPI_CR1_MSTR_Msk;
pub const SPI_CR1_BR_Pos: u32 = 3;
pub const SPI_CR1_BR_Msk: u32 = 0x7 << SPI_CR1_BR_Pos;
pub const SPI_CR1_BR: u32 = SPI_CR1_BR_Msk;
pub const SPI_CR1_BR_0: u32 = 0x1 << SPI_CR1_BR_Pos;
pub const SPI_CR1_BR_1: u32 = 0x2 << SPI_CR1_BR_Pos;
pub const SPI_CR1_BR_2: u32 = 0x4 << SPI_CR1_BR_Pos;
pub const SPI_CR1_SPE_Pos: u32 = 6;
pub const SPI_CR1_SPE_Msk: u32 = 0x1 << SPI_CR1_SPE_Pos;
pub const SPI_CR1_SPE: u32 = SPI_CR1_SPE_Msk;
pub const SPI_CR1_LSBFIRST_Pos: u32 = 7;
pub const SPI_CR1_LSBFIRST_Msk: u32 = 0x1 << SPI_CR1_LSBFIRST_Pos;
pub const SPI_CR1_LSBFIRST: u32 = SPI_CR1_LSBFIRST_Msk;
pub const SPI_CR1_SSI_Pos: u32 = 8;
pub const SPI_CR1_SSI_Msk: u32 = 0x1 << SPI_CR1_SSI_Pos;
pub const SPI_CR1_SSI: u32 = SPI_CR1_SSI_Msk;
pub const SPI_CR1_SSM_Pos: u32 = 9;
pub const SPI_CR1_SSM_Msk: u32 = 0x1 << SPI_CR1_SSM_Pos;
pub const SPI_CR1_SSM: u32 = SPI_CR1_SSM_Msk;
pub const SPI_CR1_RXONLY_Pos: u32 = 10;
pub const SPI_CR1_RXONLY_Msk: u32 = 0x1 << SPI_CR1_RXONLY_Pos;
pub const SPI_CR1_RXONLY: u32 = SPI_CR1_RXONLY_Msk;
pub const SPI_CR1_DFF_Pos: u32 = 11;
pub const SPI_CR1_DFF_Msk: u32 = 0x1 << SPI_CR1_DFF_Pos;
pub const SPI_CR1_DFF: u32 = SPI_CR1_DFF_Msk;
pub const SPI_CR1_CRCNEXT_Pos: u32 = 12;
pub const SPI_CR1_CRCNEXT_Msk: u32 = 0x1 << SPI_CR1_CRCNEXT_Pos;
pub const SPI_CR1_CRCNEXT: u32 = SPI_CR1_CRCNEXT_Msk;
pub const SPI_CR1_CRCEN_Pos: u32 = 13;
pub const SPI_CR1_CRCEN_Msk: u32 = 0x1 << SPI_CR1_CRCEN_Pos;
pub const SPI_CR1_CRCEN: u32 = SPI_CR1_CRCEN_Msk;
pub const SPI_CR1_BIDIOE_Pos: u32 = 14;
pub const SPI_CR1_BIDIOE_Msk: u32 = 0x1 << SPI_CR1_BIDIOE_Pos;
pub const SPI_CR1_BIDIOE: u32 = SPI_CR1_BIDIOE_Msk;
pub const SPI_CR1_BIDIMODE_Pos: u32 = 15;
pub const SPI_CR1_BIDIMODE_Msk: u32 = 0x1 << SPI_CR1_BIDIMODE_Pos;
pub const SPI_CR1_BIDIMODE: u32 = SPI_CR1_BIDIMODE_Msk;
pub const SPI_CR2_RXDMAEN_Pos: u32 = 0;
pub const SPI_CR2_RXDMAEN_Msk: u32 = 0x1 << SPI_CR2_RXDMAEN_Pos;
pub const SPI_CR2_RXDMAEN: u32 = SPI_CR2_RXDMAEN_Msk;
pub const SPI_CR2_TXDMAEN_Pos: u32 = 1;
pub const SPI_CR2_TXDMAEN_Msk: u32 = 0x1 << SPI_CR2_TXDMAEN_Pos;
pub const SPI_CR2_TXDMAEN: u32 = SPI_CR2_TXDMAEN_Msk;
pub const SPI_CR2_SSOE_Pos: u32 = 2;
pub const SPI_CR2_SSOE_Msk: u32 = 0x1 << SPI_CR2_SSOE_Pos;
pub const SPI_CR2_SSOE: u32 = SPI_CR2_SSOE_Msk;
pub const SPI_CR2_FRF_Pos: u32 = 4;
pub const SPI_CR2_FRF_Msk: u32 = 0x1 << SPI_CR2_FRF_Pos;
pub const SPI_CR2_FRF: u32 = SPI_CR2_FRF_Msk;
pub const SPI_CR2_ERRIE_Pos: u32 = 5;
pub const SPI_CR2_ERRIE_Msk: u32 = 0x1 << SPI_CR2_ERRIE_Pos;
pub const SPI_CR2_ERRIE: u32 = SPI_CR2_ERRIE_Msk;
pub const SPI_CR2_RXNEIE_Pos: u32 = 6;
pub const SPI_CR2_RXNEIE_Msk: u32 = 0x1 << SPI_CR2_RXNEIE_Pos;
pub const SPI_CR2_RXNEIE: u32 = SPI_CR2_RXNEIE_Msk;
pub const SPI_CR2_TXEIE_Pos: u32 = 7;
pub const SPI_CR2_TXEIE_Msk: u32 = 0x1 << SPI_CR2_TXEIE_Pos;
pub const SPI_CR2_TXEIE: u32 = SPI_CR2_TXEIE_Msk;
pub const SPI_SR_RXNE_Pos: u32 = 0;
pub const SPI_SR_RXNE_Msk: u32 = 0x1 << SPI_SR_RXNE_Pos;
pub const SPI_SR_RXNE: u32 = SPI_SR_RXNE_Msk;
pub const SPI_SR_TXE_Pos: u32 = 1;
pub const SPI_SR_TXE_Msk: u32 = 0x1 << SPI_SR_TXE_Pos;
pub const SPI_SR_TXE: u32 = SPI_SR_TXE_Msk;
pub const SPI_SR_CHSIDE_Pos: u32 = 2;
pub const SPI_SR_CHSIDE_Msk: u32 = 0x1 << SPI_SR_CHSIDE_Pos;
pub const SPI_SR_CHSIDE: u32 = SPI_SR_CHSIDE_Msk;
pub const SPI_SR_UDR_Pos: u32 = 3;
pub const SPI_SR_UDR_Msk: u32 = 0x1 << SPI_SR_UDR_Pos;
pub const SPI_SR_UDR: u32 = SPI_SR_UDR_Msk;
pub const SPI_SR_CRCERR_Pos: u32 = 4;
pub const SPI_SR_CRCERR_Msk: u32 = 0x1 << SPI_SR_CRCERR_Pos;
pub const SPI_SR_CRCERR: u32 = SPI_SR_CRCERR_Msk;
pub const SPI_SR_MODF_Pos: u32 = 5;
pub const SPI_SR_MODF_Msk: u32 = 0x1 << SPI_SR_MODF_Pos;
pub const SPI_SR_MODF: u32 = SPI_SR_MODF_Msk;
pub const SPI_SR_OVR_Pos: u32 = 6;
pub const SPI_SR_OVR_Msk: u32 = 0x1 << SPI_SR_OVR_Pos;
pub const SPI_SR_OVR: u32 = SPI_SR_OVR_Msk;
pub const SPI_SR_BSY_Pos: u32 = 7;
pub const SPI_SR_BSY_Msk: u32 = 0x1 << SPI_SR_BSY_Pos;
pub const SPI_SR_BSY: u32 = SPI_SR_BSY_Msk;
pub const SPI_SR_FRE_Pos: u32 = 8;
pub const SPI_SR_FRE_Msk: u32 = 0x1 << SPI_SR_FRE_Pos;
pub const SPI_SR_FRE: u32 = SPI_SR_FRE_Msk;
pub const SPI_DR_DR_Pos: u32 = 0;
pub const SPI_DR_DR_Msk: u32 = 0xFFFF << SPI_DR_DR_Pos;
pub const SPI_DR_DR: u32 = SPI_DR_DR_Msk;
pub const SPI_CRCPR_CRCPOLY_Pos: u32 = 0;
pub const SPI_CRCPR_CRCPOLY_Msk: u32 = 0xFFFF << SPI_CRCPR_CRCPOLY_Pos;
pub const SPI_CRCPR_CRCPOLY: u32 = SPI_CRCPR_CRCPOLY_Msk;
pub const SPI_RXCRCR_RXCRC_Pos: u32 = 0;
pub const SPI_RXCRCR_RXCRC_Msk: u32 = 0xFFFF << SPI_RXCRCR_RXCRC_Pos;
pub const SPI_RXCRCR_RXCRC: u32 = SPI_RXCRCR_RXCRC_Msk;
pub const SPI_TXCRCR_TXCRC_Pos: u32 = 0;
pub const SPI_TXCRCR_TXCRC_Msk: u32 = 0xFFFF << SPI_TXCRCR_TXCRC_Pos;
pub const SPI_TXCRCR_TXCRC: u32 = SPI_TXCRCR_TXCRC_Msk;
pub const SPI_I2SCFGR_CHLEN_Pos: u32 = 0;
pub const SPI_I2SCFGR_CHLEN_Msk: u32 = 0x1 << SPI_I2SCFGR_CHLEN_Pos;
pub const SPI_I2SCFGR_CHLEN: u32 = SPI_I2SCFGR_CHLEN_Msk;
pub const SPI_I2SCFGR_DATLEN_Pos: u32 = 1;
pub const SPI_I2SCFGR_DATLEN_Msk: u32 = 0x3 << SPI_I2SCFGR_DATLEN_Pos;
pub const SPI_I2SCFGR_DATLEN: u32 = SPI_I2SCFGR_DATLEN_Msk;
pub const SPI_I2SCFGR_DATLEN_0: u32 = 0x1 << SPI_I2SCFGR_DATLEN_Pos;
pub const SPI_I2SCFGR_DATLEN_1: u32 = 0x2 << SPI_I2SCFGR_DATLEN_Pos;
pub const SPI_I2SCFGR_CKPOL_Pos: u32 = 3;
pub const SPI_I2SCFGR_CKPOL_Msk: u32 = 0x1 << SPI_I2SCFGR_CKPOL_Pos;
pub const SPI_I2SCFGR_CKPOL: u32 = SPI_I2SCFGR_CKPOL_Msk;
pub const SPI_I2SCFGR_I2SSTD_Pos: u32 = 4;
pub const SPI_I2SCFGR_I2SSTD_Msk: u32 = 0x3 << SPI_I2SCFGR_I2SSTD_Pos;
pub const SPI_I2SCFGR_I2SSTD: u32 = SPI_I2SCFGR_I2SSTD_Msk;
pub const SPI_I2SCFGR_I2SSTD_0: u32 = 0x1 << SPI_I2SCFGR_I2SSTD_Pos;
pub const SPI_I2SCFGR_I2SSTD_1: u32 = 0x2 << SPI_I2SCFGR_I2SSTD_Pos;
pub const SPI_I2SCFGR_PCMSYNC_Pos: u32 = 7;
pub const SPI_I2SCFGR_PCMSYNC_Msk: u32 = 0x1 << SPI_I2SCFGR_PCMSYNC_Pos;
pub const SPI_I2SCFGR_PCMSYNC: u32 = SPI_I2SCFGR_PCMSYNC_Msk;
pub const SPI_I2SCFGR_I2SCFG_Pos: u32 = 8;
pub const SPI_I2SCFGR_I2SCFG_Msk: u32 = 0x3 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SCFG: u32 = SPI_I2SCFGR_I2SCFG_Msk;
pub const SPI_I2SCFGR_I2SCFG_0: u32 = 0x1 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SCFG_1: u32 = 0x2 << SPI_I2SCFGR_I2SCFG_Pos;
pub const SPI_I2SCFGR_I2SE_Pos: u32 = 10;
pub const SPI_I2SCFGR_I2SE_Msk: u32 = 0x1 << SPI_I2SCFGR_I2SE_Pos;
pub const SPI_I2SCFGR_I2SE: u32 = SPI_I2SCFGR_I2SE_Msk;
pub const SPI_I2SCFGR_I2SMOD_Pos: u32 = 11;
pub const SPI_I2SCFGR_I2SMOD_Msk: u32 = 0x1 << SPI_I2SCFGR_I2SMOD_Pos;
pub const SPI_I2SCFGR_I2SMOD: u32 = SPI_I2SCFGR_I2SMOD_Msk;
pub const SPI_I2SPR_I2SDIV_Pos: u32 = 0;
pub const SPI_I2SPR_I2SDIV_Msk: u32 = 0xFF << SPI_I2SPR_I2SDIV_Pos;
pub const SPI_I2SPR_I2SDIV: u32 = SPI_I2SPR_I2SDIV_Msk;
pub const SPI_I2SPR_ODD_Pos: u32 = 8;
pub const SPI_I2SPR_ODD_Msk: u32 = 0x1 << SPI_I2SPR_ODD_Pos;
pub const SPI_I2SPR_ODD: u32 = SPI_I2SPR_ODD_Msk;
pub const SPI_I2SPR_MCKOE_Pos: u32 = 9;
pub const SPI_I2SPR_MCKOE_Msk: u32 = 0x1 << SPI_I2SPR_MCKOE_Pos;
pub const SPI_I2SPR_MCKOE: u32 = SPI_I2SPR_MCKOE_Msk;
pub const SYSCFG_CFGR1_MEM_MODE_Pos: u32 = 0;
pub const SYSCFG_CFGR1_MEM_MODE_Msk: u32 = 0x3 << SYSCFG_CFGR1_MEM_MODE_Pos;
pub const SYSCFG_CFGR1_MEM_MODE: u32 = SYSCFG_CFGR1_MEM_MODE_Msk;
pub const SYSCFG_CFGR1_MEM_MODE_0: u32 = 0x1 << SYSCFG_CFGR1_MEM_MODE_Pos;
pub const SYSCFG_CFGR1_MEM_MODE_1: u32 = 0x2 << SYSCFG_CFGR1_MEM_MODE_Pos;
pub const SYSCFG_CFGR1_BOOT_MODE_Pos: u32 = 8;
pub const SYSCFG_CFGR1_BOOT_MODE_Msk: u32 = 0x3 << SYSCFG_CFGR1_BOOT_MODE_Pos;
pub const SYSCFG_CFGR1_BOOT_MODE: u32 = SYSCFG_CFGR1_BOOT_MODE_Msk;
pub const SYSCFG_CFGR1_BOOT_MODE_0: u32 = 0x1 << SYSCFG_CFGR1_BOOT_MODE_Pos;
pub const SYSCFG_CFGR1_BOOT_MODE_1: u32 = 0x2 << SYSCFG_CFGR1_BOOT_MODE_Pos;
pub const SYSCFG_CFGR2_FWDISEN_Pos: u32 = 0;
pub const SYSCFG_CFGR2_FWDISEN_Msk: u32 = 0x1 << SYSCFG_CFGR2_FWDISEN_Pos;
pub const SYSCFG_CFGR2_FWDISEN: u32 = SYSCFG_CFGR2_FWDISEN_Msk;
pub const SYSCFG_CFGR2_I2C_PB6_FMP_Pos: u32 = 8;
pub const SYSCFG_CFGR2_I2C_PB6_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR2_I2C_PB6_FMP_Pos;
pub const SYSCFG_CFGR2_I2C_PB6_FMP: u32 = SYSCFG_CFGR2_I2C_PB6_FMP_Msk;
pub const SYSCFG_CFGR2_I2C_PB7_FMP_Pos: u32 = 9;
pub const SYSCFG_CFGR2_I2C_PB7_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR2_I2C_PB7_FMP_Pos;
pub const SYSCFG_CFGR2_I2C_PB7_FMP: u32 = SYSCFG_CFGR2_I2C_PB7_FMP_Msk;
pub const SYSCFG_CFGR2_I2C_PB8_FMP_Pos: u32 = 10;
pub const SYSCFG_CFGR2_I2C_PB8_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR2_I2C_PB8_FMP_Pos;
pub const SYSCFG_CFGR2_I2C_PB8_FMP: u32 = SYSCFG_CFGR2_I2C_PB8_FMP_Msk;
pub const SYSCFG_CFGR2_I2C_PB9_FMP_Pos: u32 = 11;
pub const SYSCFG_CFGR2_I2C_PB9_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR2_I2C_PB9_FMP_Pos;
pub const SYSCFG_CFGR2_I2C_PB9_FMP: u32 = SYSCFG_CFGR2_I2C_PB9_FMP_Msk;
pub const SYSCFG_CFGR2_I2C1_FMP_Pos: u32 = 12;
pub const SYSCFG_CFGR2_I2C1_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR2_I2C1_FMP_Pos;
pub const SYSCFG_CFGR2_I2C1_FMP: u32 = SYSCFG_CFGR2_I2C1_FMP_Msk;
pub const SYSCFG_CFGR2_I2C2_FMP_Pos: u32 = 13;
pub const SYSCFG_CFGR2_I2C2_FMP_Msk: u32 = 0x1 << SYSCFG_CFGR2_I2C2_FMP_Pos;
pub const SYSCFG_CFGR2_I2C2_FMP: u32 = SYSCFG_CFGR2_I2C2_FMP_Msk;
pub const SYSCFG_EXTICR1_EXTI0_Pos: u32 = 0;
pub const SYSCFG_EXTICR1_EXTI0_Msk: u32 = 0xF << SYSCFG_EXTICR1_EXTI0_Pos;
pub const SYSCFG_EXTICR1_EXTI0: u32 = SYSCFG_EXTICR1_EXTI0_Msk;
pub const SYSCFG_EXTICR1_EXTI1_Pos: u32 = 4;
pub const SYSCFG_EXTICR1_EXTI1_Msk: u32 = 0xF << SYSCFG_EXTICR1_EXTI1_Pos;
pub const SYSCFG_EXTICR1_EXTI1: u32 = SYSCFG_EXTICR1_EXTI1_Msk;
pub const SYSCFG_EXTICR1_EXTI2_Pos: u32 = 8;
pub const SYSCFG_EXTICR1_EXTI2_Msk: u32 = 0xF << SYSCFG_EXTICR1_EXTI2_Pos;
pub const SYSCFG_EXTICR1_EXTI2: u32 = SYSCFG_EXTICR1_EXTI2_Msk;
pub const SYSCFG_EXTICR1_EXTI3_Pos: u32 = 12;
pub const SYSCFG_EXTICR1_EXTI3_Msk: u32 = 0xF << SYSCFG_EXTICR1_EXTI3_Pos;
pub const SYSCFG_EXTICR1_EXTI3: u32 = SYSCFG_EXTICR1_EXTI3_Msk;
pub const SYSCFG_EXTICR1_EXTI0_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR1_EXTI0_PB: u32 = 0x00000001;
pub const SYSCFG_EXTICR1_EXTI0_PC: u32 = 0x00000002;
pub const SYSCFG_EXTICR1_EXTI0_PH: u32 = 0x00000005;
pub const SYSCFG_EXTICR1_EXTI1_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR1_EXTI1_PB: u32 = 0x00000010;
pub const SYSCFG_EXTICR1_EXTI1_PC: u32 = 0x00000020;
pub const SYSCFG_EXTICR1_EXTI1_PH: u32 = 0x00000050;
pub const SYSCFG_EXTICR1_EXTI2_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR1_EXTI2_PB: u32 = 0x00000100;
pub const SYSCFG_EXTICR1_EXTI2_PC: u32 = 0x00000200;
pub const SYSCFG_EXTICR1_EXTI2_PD: u32 = 0x00000300;
pub const SYSCFG_EXTICR1_EXTI3_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR1_EXTI3_PB: u32 = 0x00001000;
pub const SYSCFG_EXTICR1_EXTI3_PC: u32 = 0x00002000;
pub const SYSCFG_EXTICR2_EXTI4_Pos: u32 = 0;
pub const SYSCFG_EXTICR2_EXTI4_Msk: u32 = 0xF << SYSCFG_EXTICR2_EXTI4_Pos;
pub const SYSCFG_EXTICR2_EXTI4: u32 = SYSCFG_EXTICR2_EXTI4_Msk;
pub const SYSCFG_EXTICR2_EXTI5_Pos: u32 = 4;
pub const SYSCFG_EXTICR2_EXTI5_Msk: u32 = 0xF << SYSCFG_EXTICR2_EXTI5_Pos;
pub const SYSCFG_EXTICR2_EXTI5: u32 = SYSCFG_EXTICR2_EXTI5_Msk;
pub const SYSCFG_EXTICR2_EXTI6_Pos: u32 = 8;
pub const SYSCFG_EXTICR2_EXTI6_Msk: u32 = 0xF << SYSCFG_EXTICR2_EXTI6_Pos;
pub const SYSCFG_EXTICR2_EXTI6: u32 = SYSCFG_EXTICR2_EXTI6_Msk;
pub const SYSCFG_EXTICR2_EXTI7_Pos: u32 = 12;
pub const SYSCFG_EXTICR2_EXTI7_Msk: u32 = 0xF << SYSCFG_EXTICR2_EXTI7_Pos;
pub const SYSCFG_EXTICR2_EXTI7: u32 = SYSCFG_EXTICR2_EXTI7_Msk;
pub const SYSCFG_EXTICR2_EXTI4_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR2_EXTI4_PB: u32 = 0x00000001;
pub const SYSCFG_EXTICR2_EXTI4_PC: u32 = 0x00000002;
pub const SYSCFG_EXTICR2_EXTI5_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR2_EXTI5_PB: u32 = 0x00000010;
pub const SYSCFG_EXTICR2_EXTI5_PC: u32 = 0x00000020;
pub const SYSCFG_EXTICR2_EXTI6_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR2_EXTI6_PB: u32 = 0x00000100;
pub const SYSCFG_EXTICR2_EXTI6_PC: u32 = 0x00000200;
pub const SYSCFG_EXTICR2_EXTI7_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR2_EXTI7_PB: u32 = 0x00001000;
pub const SYSCFG_EXTICR2_EXTI7_PC: u32 = 0x00002000;
pub const SYSCFG_EXTICR3_EXTI8_Pos: u32 = 0;
pub const SYSCFG_EXTICR3_EXTI8_Msk: u32 = 0xF << SYSCFG_EXTICR3_EXTI8_Pos;
pub const SYSCFG_EXTICR3_EXTI8: u32 = SYSCFG_EXTICR3_EXTI8_Msk;
pub const SYSCFG_EXTICR3_EXTI9_Pos: u32 = 4;
pub const SYSCFG_EXTICR3_EXTI9_Msk: u32 = 0xF << SYSCFG_EXTICR3_EXTI9_Pos;
pub const SYSCFG_EXTICR3_EXTI9: u32 = SYSCFG_EXTICR3_EXTI9_Msk;
pub const SYSCFG_EXTICR3_EXTI10_Pos: u32 = 8;
pub const SYSCFG_EXTICR3_EXTI10_Msk: u32 = 0xF << SYSCFG_EXTICR3_EXTI10_Pos;
pub const SYSCFG_EXTICR3_EXTI10: u32 = SYSCFG_EXTICR3_EXTI10_Msk;
pub const SYSCFG_EXTICR3_EXTI11_Pos: u32 = 12;
pub const SYSCFG_EXTICR3_EXTI11_Msk: u32 = 0xF << SYSCFG_EXTICR3_EXTI11_Pos;
pub const SYSCFG_EXTICR3_EXTI11: u32 = SYSCFG_EXTICR3_EXTI11_Msk;
pub const SYSCFG_EXTICR3_EXTI8_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR3_EXTI8_PB: u32 = 0x00000001;
pub const SYSCFG_EXTICR3_EXTI8_PC: u32 = 0x00000002;
pub const SYSCFG_EXTICR3_EXTI9_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR3_EXTI9_PB: u32 = 0x00000010;
pub const SYSCFG_EXTICR3_EXTI9_PC: u32 = 0x00000020;
pub const SYSCFG_EXTICR3_EXTI10_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR3_EXTI10_PB: u32 = 0x00000100;
pub const SYSCFG_EXTICR3_EXTI10_PC: u32 = 0x00000200;
pub const SYSCFG_EXTICR3_EXTI11_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR3_EXTI11_PB: u32 = 0x00001000;
pub const SYSCFG_EXTICR3_EXTI11_PC: u32 = 0x00002000;
pub const SYSCFG_EXTICR4_EXTI12_Pos: u32 = 0;
pub const SYSCFG_EXTICR4_EXTI12_Msk: u32 = 0xF << SYSCFG_EXTICR4_EXTI12_Pos;
pub const SYSCFG_EXTICR4_EXTI12: u32 = SYSCFG_EXTICR4_EXTI12_Msk;
pub const SYSCFG_EXTICR4_EXTI13_Pos: u32 = 4;
pub const SYSCFG_EXTICR4_EXTI13_Msk: u32 = 0xF << SYSCFG_EXTICR4_EXTI13_Pos;
pub const SYSCFG_EXTICR4_EXTI13: u32 = SYSCFG_EXTICR4_EXTI13_Msk;
pub const SYSCFG_EXTICR4_EXTI14_Pos: u32 = 8;
pub const SYSCFG_EXTICR4_EXTI14_Msk: u32 = 0xF << SYSCFG_EXTICR4_EXTI14_Pos;
pub const SYSCFG_EXTICR4_EXTI14: u32 = SYSCFG_EXTICR4_EXTI14_Msk;
pub const SYSCFG_EXTICR4_EXTI15_Pos: u32 = 12;
pub const SYSCFG_EXTICR4_EXTI15_Msk: u32 = 0xF << SYSCFG_EXTICR4_EXTI15_Pos;
pub const SYSCFG_EXTICR4_EXTI15: u32 = SYSCFG_EXTICR4_EXTI15_Msk;
pub const SYSCFG_EXTICR4_EXTI12_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR4_EXTI12_PB: u32 = 0x00000001;
pub const SYSCFG_EXTICR4_EXTI12_PC: u32 = 0x00000002;
pub const SYSCFG_EXTICR4_EXTI13_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR4_EXTI13_PB: u32 = 0x00000010;
pub const SYSCFG_EXTICR4_EXTI13_PC: u32 = 0x00000020;
pub const SYSCFG_EXTICR4_EXTI14_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR4_EXTI14_PB: u32 = 0x00000100;
pub const SYSCFG_EXTICR4_EXTI14_PC: u32 = 0x00000200;
pub const SYSCFG_EXTICR4_EXTI15_PA: u32 = 0x00000000;
pub const SYSCFG_EXTICR4_EXTI15_PB: u32 = 0x00001000;
pub const SYSCFG_EXTICR4_EXTI15_PC: u32 = 0x00002000;
pub const SYSCFG_CFGR3_EN_VREFINT_Pos: u32 = 0;
pub const SYSCFG_CFGR3_EN_VREFINT_Msk: u32 = 0x1 << SYSCFG_CFGR3_EN_VREFINT_Pos;
pub const SYSCFG_CFGR3_EN_VREFINT: u32 = SYSCFG_CFGR3_EN_VREFINT_Msk;
pub const SYSCFG_CFGR3_VREF_OUT_Pos: u32 = 4;
pub const SYSCFG_CFGR3_VREF_OUT_Msk: u32 = 0x3 << SYSCFG_CFGR3_VREF_OUT_Pos;
pub const SYSCFG_CFGR3_VREF_OUT: u32 = SYSCFG_CFGR3_VREF_OUT_Msk;
pub const SYSCFG_CFGR3_VREF_OUT_0: u32 = 0x1 << SYSCFG_CFGR3_VREF_OUT_Pos;
pub const SYSCFG_CFGR3_VREF_OUT_1: u32 = 0x2 << SYSCFG_CFGR3_VREF_OUT_Pos;
pub const SYSCFG_CFGR3_ENBUF_VREFINT_ADC_Pos: u32 = 8;
pub const SYSCFG_CFGR3_ENBUF_VREFINT_ADC_Msk: u32 = 0x1 << SYSCFG_CFGR3_ENBUF_VREFINT_ADC_Pos;
pub const SYSCFG_CFGR3_ENBUF_VREFINT_ADC: u32 = SYSCFG_CFGR3_ENBUF_VREFINT_ADC_Msk;
pub const SYSCFG_CFGR3_ENBUF_SENSOR_ADC_Pos: u32 = 9;
pub const SYSCFG_CFGR3_ENBUF_SENSOR_ADC_Msk: u32 = 0x1 << SYSCFG_CFGR3_ENBUF_SENSOR_ADC_Pos;
pub const SYSCFG_CFGR3_ENBUF_SENSOR_ADC: u32 = SYSCFG_CFGR3_ENBUF_SENSOR_ADC_Msk;
pub const SYSCFG_CFGR3_ENBUFLP_VREFINT_COMP_Pos: u32 = 12;
pub const SYSCFG_CFGR3_ENBUFLP_VREFINT_COMP_Msk: u32 = 0x1 << SYSCFG_CFGR3_ENBUFLP_VREFINT_COMP_Pos;
pub const SYSCFG_CFGR3_ENBUFLP_VREFINT_COMP: u32 = SYSCFG_CFGR3_ENBUFLP_VREFINT_COMP_Msk;
pub const SYSCFG_CFGR3_ENREF_HSI48_Pos: u32 = 13;
pub const SYSCFG_CFGR3_ENREF_HSI48_Msk: u32 = 0x1 << SYSCFG_CFGR3_ENREF_HSI48_Pos;
pub const SYSCFG_CFGR3_ENREF_HSI48: u32 = SYSCFG_CFGR3_ENREF_HSI48_Msk;
pub const SYSCFG_CFGR3_VREFINT_RDYF_Pos: u32 = 30;
pub const SYSCFG_CFGR3_VREFINT_RDYF_Msk: u32 = 0x1 << SYSCFG_CFGR3_VREFINT_RDYF_Pos;
pub const SYSCFG_CFGR3_VREFINT_RDYF: u32 = SYSCFG_CFGR3_VREFINT_RDYF_Msk;
pub const SYSCFG_CFGR3_REF_LOCK_Pos: u32 = 31;
pub const SYSCFG_CFGR3_REF_LOCK_Msk: u32 = 0x1 << SYSCFG_CFGR3_REF_LOCK_Pos;
pub const SYSCFG_CFGR3_REF_LOCK: u32 = SYSCFG_CFGR3_REF_LOCK_Msk;
pub const SYSCFG_CFGR3_EN_BGAP: u32 = SYSCFG_CFGR3_EN_VREFINT;
pub const SYSCFG_CFGR3_ENBUF_BGAP_ADC: u32 = SYSCFG_CFGR3_ENBUF_VREFINT_ADC;
pub const SYSCFG_CFGR3_ENBUFLP_BGAP_COMP: u32 = SYSCFG_CFGR3_ENBUFLP_VREFINT_COMP;
pub const SYSCFG_CFGR3_ENREF_RC48MHz: u32 = SYSCFG_CFGR3_ENREF_HSI48;
pub const SYSCFG_CFGR3_REF_RC48MHz_RDYF: u32 = SYSCFG_CFGR3_VREFINT_RDYF;
pub const SYSCFG_CFGR3_REF_HSI48_RDYF: u32 = SYSCFG_CFGR3_VREFINT_RDYF;
pub const SYSCFG_VREFINT_ADC_RDYF: u32 = SYSCFG_CFGR3_VREFINT_RDYF;
pub const SYSCFG_CFGR3_SENSOR_ADC_RDYF: u32 = SYSCFG_CFGR3_VREFINT_RDYF;
pub const SYSCFG_CFGR3_VREFINT_ADC_RDYF: u32 = SYSCFG_CFGR3_VREFINT_RDYF;
pub const SYSCFG_CFGR3_VREFINT_COMP_RDYF: u32 = SYSCFG_CFGR3_VREFINT_RDYF;
pub const TIM_CR1_CEN_Pos: u32 = 0;
pub const TIM_CR1_CEN_Msk: u32 = 0x1 << TIM_CR1_CEN_Pos;
pub const TIM_CR1_CEN: u32 = TIM_CR1_CEN_Msk;
pub const TIM_CR1_UDIS_Pos: u32 = 1;
pub const TIM_CR1_UDIS_Msk: u32 = 0x1 << TIM_CR1_UDIS_Pos;
pub const TIM_CR1_UDIS: u32 = TIM_CR1_UDIS_Msk;
pub const TIM_CR1_URS_Pos: u32 = 2;
pub const TIM_CR1_URS_Msk: u32 = 0x1 << TIM_CR1_URS_Pos;
pub const TIM_CR1_URS: u32 = TIM_CR1_URS_Msk;
pub const TIM_CR1_OPM_Pos: u32 = 3;
pub const TIM_CR1_OPM_Msk: u32 = 0x1 << TIM_CR1_OPM_Pos;
pub const TIM_CR1_OPM: u32 = TIM_CR1_OPM_Msk;
pub const TIM_CR1_DIR_Pos: u32 = 4;
pub const TIM_CR1_DIR_Msk: u32 = 0x1 << TIM_CR1_DIR_Pos;
pub const TIM_CR1_DIR: u32 = TIM_CR1_DIR_Msk;
pub const TIM_CR1_CMS_Pos: u32 = 5;
pub const TIM_CR1_CMS_Msk: u32 = 0x3 << TIM_CR1_CMS_Pos;
pub const TIM_CR1_CMS: u32 = TIM_CR1_CMS_Msk;
pub const TIM_CR1_CMS_0: u32 = 0x1 << TIM_CR1_CMS_Pos;
pub const TIM_CR1_CMS_1: u32 = 0x2 << TIM_CR1_CMS_Pos;
pub const TIM_CR1_ARPE_Pos: u32 = 7;
pub const TIM_CR1_ARPE_Msk: u32 = 0x1 << TIM_CR1_ARPE_Pos;
pub const TIM_CR1_ARPE: u32 = TIM_CR1_ARPE_Msk;
pub const TIM_CR1_CKD_Pos: u32 = 8;
pub const TIM_CR1_CKD_Msk: u32 = 0x3 << TIM_CR1_CKD_Pos;
pub const TIM_CR1_CKD: u32 = TIM_CR1_CKD_Msk;
pub const TIM_CR1_CKD_0: u32 = 0x1 << TIM_CR1_CKD_Pos;
pub const TIM_CR1_CKD_1: u32 = 0x2 << TIM_CR1_CKD_Pos;
pub const TIM_CR2_CCDS_Pos: u32 = 3;
pub const TIM_CR2_CCDS_Msk: u32 = 0x1 << TIM_CR2_CCDS_Pos;
pub const TIM_CR2_CCDS: u32 = TIM_CR2_CCDS_Msk;
pub const TIM_CR2_MMS_Pos: u32 = 4;
pub const TIM_CR2_MMS_Msk: u32 = 0x7 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS: u32 = TIM_CR2_MMS_Msk;
pub const TIM_CR2_MMS_0: u32 = 0x1 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS_1: u32 = 0x2 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_MMS_2: u32 = 0x4 << TIM_CR2_MMS_Pos;
pub const TIM_CR2_TI1S_Pos: u32 = 7;
pub const TIM_CR2_TI1S_Msk: u32 = 0x1 << TIM_CR2_TI1S_Pos;
pub const TIM_CR2_TI1S: u32 = TIM_CR2_TI1S_Msk;
pub const TIM_SMCR_SMS_Pos: u32 = 0;
pub const TIM_SMCR_SMS_Msk: u32 = 0x7 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS: u32 = TIM_SMCR_SMS_Msk;
pub const TIM_SMCR_SMS_0: u32 = 0x1 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS_1: u32 = 0x2 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_SMS_2: u32 = 0x4 << TIM_SMCR_SMS_Pos;
pub const TIM_SMCR_TS_Pos: u32 = 4;
pub const TIM_SMCR_TS_Msk: u32 = 0x7 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS: u32 = TIM_SMCR_TS_Msk;
pub const TIM_SMCR_TS_0: u32 = 0x1 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS_1: u32 = 0x2 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_TS_2: u32 = 0x4 << TIM_SMCR_TS_Pos;
pub const TIM_SMCR_MSM_Pos: u32 = 7;
pub const TIM_SMCR_MSM_Msk: u32 = 0x1 << TIM_SMCR_MSM_Pos;
pub const TIM_SMCR_MSM: u32 = TIM_SMCR_MSM_Msk;
pub const TIM_SMCR_ETF_Pos: u32 = 8;
pub const TIM_SMCR_ETF_Msk: u32 = 0xF << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF: u32 = TIM_SMCR_ETF_Msk;
pub const TIM_SMCR_ETF_0: u32 = 0x1 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF_1: u32 = 0x2 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF_2: u32 = 0x4 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETF_3: u32 = 0x8 << TIM_SMCR_ETF_Pos;
pub const TIM_SMCR_ETPS_Pos: u32 = 12;
pub const TIM_SMCR_ETPS_Msk: u32 = 0x3 << TIM_SMCR_ETPS_Pos;
pub const TIM_SMCR_ETPS: u32 = TIM_SMCR_ETPS_Msk;
pub const TIM_SMCR_ETPS_0: u32 = 0x1 << TIM_SMCR_ETPS_Pos;
pub const TIM_SMCR_ETPS_1: u32 = 0x2 << TIM_SMCR_ETPS_Pos;
pub const TIM_SMCR_ECE_Pos: u32 = 14;
pub const TIM_SMCR_ECE_Msk: u32 = 0x1 << TIM_SMCR_ECE_Pos;
pub const TIM_SMCR_ECE: u32 = TIM_SMCR_ECE_Msk;
pub const TIM_SMCR_ETP_Pos: u32 = 15;
pub const TIM_SMCR_ETP_Msk: u32 = 0x1 << TIM_SMCR_ETP_Pos;
pub const TIM_SMCR_ETP: u32 = TIM_SMCR_ETP_Msk;
pub const TIM_DIER_UIE_Pos: u32 = 0;
pub const TIM_DIER_UIE_Msk: u32 = 0x1 << TIM_DIER_UIE_Pos;
pub const TIM_DIER_UIE: u32 = TIM_DIER_UIE_Msk;
pub const TIM_DIER_CC1IE_Pos: u32 = 1;
pub const TIM_DIER_CC1IE_Msk: u32 = 0x1 << TIM_DIER_CC1IE_Pos;
pub const TIM_DIER_CC1IE: u32 = TIM_DIER_CC1IE_Msk;
pub const TIM_DIER_CC2IE_Pos: u32 = 2;
pub const TIM_DIER_CC2IE_Msk: u32 = 0x1 << TIM_DIER_CC2IE_Pos;
pub const TIM_DIER_CC2IE: u32 = TIM_DIER_CC2IE_Msk;
pub const TIM_DIER_CC3IE_Pos: u32 = 3;
pub const TIM_DIER_CC3IE_Msk: u32 = 0x1 << TIM_DIER_CC3IE_Pos;
pub const TIM_DIER_CC3IE: u32 = TIM_DIER_CC3IE_Msk;
pub const TIM_DIER_CC4IE_Pos: u32 = 4;
pub const TIM_DIER_CC4IE_Msk: u32 = 0x1 << TIM_DIER_CC4IE_Pos;
pub const TIM_DIER_CC4IE: u32 = TIM_DIER_CC4IE_Msk;
pub const TIM_DIER_TIE_Pos: u32 = 6;
pub const TIM_DIER_TIE_Msk: u32 = 0x1 << TIM_DIER_TIE_Pos;
pub const TIM_DIER_TIE: u32 = TIM_DIER_TIE_Msk;
pub const TIM_DIER_UDE_Pos: u32 = 8;
pub const TIM_DIER_UDE_Msk: u32 = 0x1 << TIM_DIER_UDE_Pos;
pub const TIM_DIER_UDE: u32 = TIM_DIER_UDE_Msk;
pub const TIM_DIER_CC1DE_Pos: u32 = 9;
pub const TIM_DIER_CC1DE_Msk: u32 = 0x1 << TIM_DIER_CC1DE_Pos;
pub const TIM_DIER_CC1DE: u32 = TIM_DIER_CC1DE_Msk;
pub const TIM_DIER_CC2DE_Pos: u32 = 10;
pub const TIM_DIER_CC2DE_Msk: u32 = 0x1 << TIM_DIER_CC2DE_Pos;
pub const TIM_DIER_CC2DE: u32 = TIM_DIER_CC2DE_Msk;
pub const TIM_DIER_CC3DE_Pos: u32 = 11;
pub const TIM_DIER_CC3DE_Msk: u32 = 0x1 << TIM_DIER_CC3DE_Pos;
pub const TIM_DIER_CC3DE: u32 = TIM_DIER_CC3DE_Msk;
pub const TIM_DIER_CC4DE_Pos: u32 = 12;
pub const TIM_DIER_CC4DE_Msk: u32 = 0x1 << TIM_DIER_CC4DE_Pos;
pub const TIM_DIER_CC4DE: u32 = TIM_DIER_CC4DE_Msk;
pub const TIM_DIER_TDE_Pos: u32 = 14;
pub const TIM_DIER_TDE_Msk: u32 = 0x1 << TIM_DIER_TDE_Pos;
pub const TIM_DIER_TDE: u32 = TIM_DIER_TDE_Msk;
pub const TIM_SR_UIF_Pos: u32 = 0;
pub const TIM_SR_UIF_Msk: u32 = 0x1 << TIM_SR_UIF_Pos;
pub const TIM_SR_UIF: u32 = TIM_SR_UIF_Msk;
pub const TIM_SR_CC1IF_Pos: u32 = 1;
pub const TIM_SR_CC1IF_Msk: u32 = 0x1 << TIM_SR_CC1IF_Pos;
pub const TIM_SR_CC1IF: u32 = TIM_SR_CC1IF_Msk;
pub const TIM_SR_CC2IF_Pos: u32 = 2;
pub const TIM_SR_CC2IF_Msk: u32 = 0x1 << TIM_SR_CC2IF_Pos;
pub const TIM_SR_CC2IF: u32 = TIM_SR_CC2IF_Msk;
pub const TIM_SR_CC3IF_Pos: u32 = 3;
pub const TIM_SR_CC3IF_Msk: u32 = 0x1 << TIM_SR_CC3IF_Pos;
pub const TIM_SR_CC3IF: u32 = TIM_SR_CC3IF_Msk;
pub const TIM_SR_CC4IF_Pos: u32 = 4;
pub const TIM_SR_CC4IF_Msk: u32 = 0x1 << TIM_SR_CC4IF_Pos;
pub const TIM_SR_CC4IF: u32 = TIM_SR_CC4IF_Msk;
pub const TIM_SR_TIF_Pos: u32 = 6;
pub const TIM_SR_TIF_Msk: u32 = 0x1 << TIM_SR_TIF_Pos;
pub const TIM_SR_TIF: u32 = TIM_SR_TIF_Msk;
pub const TIM_SR_CC1OF_Pos: u32 = 9;
pub const TIM_SR_CC1OF_Msk: u32 = 0x1 << TIM_SR_CC1OF_Pos;
pub const TIM_SR_CC1OF: u32 = TIM_SR_CC1OF_Msk;
pub const TIM_SR_CC2OF_Pos: u32 = 10;
pub const TIM_SR_CC2OF_Msk: u32 = 0x1 << TIM_SR_CC2OF_Pos;
pub const TIM_SR_CC2OF: u32 = TIM_SR_CC2OF_Msk;
pub const TIM_SR_CC3OF_Pos: u32 = 11;
pub const TIM_SR_CC3OF_Msk: u32 = 0x1 << TIM_SR_CC3OF_Pos;
pub const TIM_SR_CC3OF: u32 = TIM_SR_CC3OF_Msk;
pub const TIM_SR_CC4OF_Pos: u32 = 12;
pub const TIM_SR_CC4OF_Msk: u32 = 0x1 << TIM_SR_CC4OF_Pos;
pub const TIM_SR_CC4OF: u32 = TIM_SR_CC4OF_Msk;
pub const TIM_EGR_UG_Pos: u32 = 0;
pub const TIM_EGR_UG_Msk: u32 = 0x1 << TIM_EGR_UG_Pos;
pub const TIM_EGR_UG: u32 = TIM_EGR_UG_Msk;
pub const TIM_EGR_CC1G_Pos: u32 = 1;
pub const TIM_EGR_CC1G_Msk: u32 = 0x1 << TIM_EGR_CC1G_Pos;
pub const TIM_EGR_CC1G: u32 = TIM_EGR_CC1G_Msk;
pub const TIM_EGR_CC2G_Pos: u32 = 2;
pub const TIM_EGR_CC2G_Msk: u32 = 0x1 << TIM_EGR_CC2G_Pos;
pub const TIM_EGR_CC2G: u32 = TIM_EGR_CC2G_Msk;
pub const TIM_EGR_CC3G_Pos: u32 = 3;
pub const TIM_EGR_CC3G_Msk: u32 = 0x1 << TIM_EGR_CC3G_Pos;
pub const TIM_EGR_CC3G: u32 = TIM_EGR_CC3G_Msk;
pub const TIM_EGR_CC4G_Pos: u32 = 4;
pub const TIM_EGR_CC4G_Msk: u32 = 0x1 << TIM_EGR_CC4G_Pos;
pub const TIM_EGR_CC4G: u32 = TIM_EGR_CC4G_Msk;
pub const TIM_EGR_TG_Pos: u32 = 6;
pub const TIM_EGR_TG_Msk: u32 = 0x1 << TIM_EGR_TG_Pos;
pub const TIM_EGR_TG: u32 = TIM_EGR_TG_Msk;
pub const TIM_CCMR1_CC1S_Pos: u32 = 0;
pub const TIM_CCMR1_CC1S_Msk: u32 = 0x3 << TIM_CCMR1_CC1S_Pos;
pub const TIM_CCMR1_CC1S: u32 = TIM_CCMR1_CC1S_Msk;
pub const TIM_CCMR1_CC1S_0: u32 = 0x1 << TIM_CCMR1_CC1S_Pos;
pub const TIM_CCMR1_CC1S_1: u32 = 0x2 << TIM_CCMR1_CC1S_Pos;
pub const TIM_CCMR1_OC1FE_Pos: u32 = 2;
pub const TIM_CCMR1_OC1FE_Msk: u32 = 0x1 << TIM_CCMR1_OC1FE_Pos;
pub const TIM_CCMR1_OC1FE: u32 = TIM_CCMR1_OC1FE_Msk;
pub const TIM_CCMR1_OC1PE_Pos: u32 = 3;
pub const TIM_CCMR1_OC1PE_Msk: u32 = 0x1 << TIM_CCMR1_OC1PE_Pos;
pub const TIM_CCMR1_OC1PE: u32 = TIM_CCMR1_OC1PE_Msk;
pub const TIM_CCMR1_OC1M_Pos: u32 = 4;
pub const TIM_CCMR1_OC1M_Msk: u32 = 0x7 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M: u32 = TIM_CCMR1_OC1M_Msk;
pub const TIM_CCMR1_OC1M_0: u32 = 0x1 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M_1: u32 = 0x2 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1M_2: u32 = 0x4 << TIM_CCMR1_OC1M_Pos;
pub const TIM_CCMR1_OC1CE_Pos: u32 = 7;
pub const TIM_CCMR1_OC1CE_Msk: u32 = 0x1 << TIM_CCMR1_OC1CE_Pos;
pub const TIM_CCMR1_OC1CE: u32 = TIM_CCMR1_OC1CE_Msk;
pub const TIM_CCMR1_CC2S_Pos: u32 = 8;
pub const TIM_CCMR1_CC2S_Msk: u32 = 0x3 << TIM_CCMR1_CC2S_Pos;
pub const TIM_CCMR1_CC2S: u32 = TIM_CCMR1_CC2S_Msk;
pub const TIM_CCMR1_CC2S_0: u32 = 0x1 << TIM_CCMR1_CC2S_Pos;
pub const TIM_CCMR1_CC2S_1: u32 = 0x2 << TIM_CCMR1_CC2S_Pos;
pub const TIM_CCMR1_OC2FE_Pos: u32 = 10;
pub const TIM_CCMR1_OC2FE_Msk: u32 = 0x1 << TIM_CCMR1_OC2FE_Pos;
pub const TIM_CCMR1_OC2FE: u32 = TIM_CCMR1_OC2FE_Msk;
pub const TIM_CCMR1_OC2PE_Pos: u32 = 11;
pub const TIM_CCMR1_OC2PE_Msk: u32 = 0x1 << TIM_CCMR1_OC2PE_Pos;
pub const TIM_CCMR1_OC2PE: u32 = TIM_CCMR1_OC2PE_Msk;
pub const TIM_CCMR1_OC2M_Pos: u32 = 12;
pub const TIM_CCMR1_OC2M_Msk: u32 = 0x7 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M: u32 = TIM_CCMR1_OC2M_Msk;
pub const TIM_CCMR1_OC2M_0: u32 = 0x1 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M_1: u32 = 0x2 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2M_2: u32 = 0x4 << TIM_CCMR1_OC2M_Pos;
pub const TIM_CCMR1_OC2CE_Pos: u32 = 15;
pub const TIM_CCMR1_OC2CE_Msk: u32 = 0x1 << TIM_CCMR1_OC2CE_Pos;
pub const TIM_CCMR1_OC2CE: u32 = TIM_CCMR1_OC2CE_Msk;
pub const TIM_CCMR1_IC1PSC_Pos: u32 = 2;
pub const TIM_CCMR1_IC1PSC_Msk: u32 = 0x3 << TIM_CCMR1_IC1PSC_Pos;
pub const TIM_CCMR1_IC1PSC: u32 = TIM_CCMR1_IC1PSC_Msk;
pub const TIM_CCMR1_IC1PSC_0: u32 = 0x1 << TIM_CCMR1_IC1PSC_Pos;
pub const TIM_CCMR1_IC1PSC_1: u32 = 0x2 << TIM_CCMR1_IC1PSC_Pos;
pub const TIM_CCMR1_IC1F_Pos: u32 = 4;
pub const TIM_CCMR1_IC1F_Msk: u32 = 0xF << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F: u32 = TIM_CCMR1_IC1F_Msk;
pub const TIM_CCMR1_IC1F_0: u32 = 0x1 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F_1: u32 = 0x2 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F_2: u32 = 0x4 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC1F_3: u32 = 0x8 << TIM_CCMR1_IC1F_Pos;
pub const TIM_CCMR1_IC2PSC_Pos: u32 = 10;
pub const TIM_CCMR1_IC2PSC_Msk: u32 = 0x3 << TIM_CCMR1_IC2PSC_Pos;
pub const TIM_CCMR1_IC2PSC: u32 = TIM_CCMR1_IC2PSC_Msk;
pub const TIM_CCMR1_IC2PSC_0: u32 = 0x1 << TIM_CCMR1_IC2PSC_Pos;
pub const TIM_CCMR1_IC2PSC_1: u32 = 0x2 << TIM_CCMR1_IC2PSC_Pos;
pub const TIM_CCMR1_IC2F_Pos: u32 = 12;
pub const TIM_CCMR1_IC2F_Msk: u32 = 0xF << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F: u32 = TIM_CCMR1_IC2F_Msk;
pub const TIM_CCMR1_IC2F_0: u32 = 0x1 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F_1: u32 = 0x2 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F_2: u32 = 0x4 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR1_IC2F_3: u32 = 0x8 << TIM_CCMR1_IC2F_Pos;
pub const TIM_CCMR2_CC3S_Pos: u32 = 0;
pub const TIM_CCMR2_CC3S_Msk: u32 = 0x3 << TIM_CCMR2_CC3S_Pos;
pub const TIM_CCMR2_CC3S: u32 = TIM_CCMR2_CC3S_Msk;
pub const TIM_CCMR2_CC3S_0: u32 = 0x1 << TIM_CCMR2_CC3S_Pos;
pub const TIM_CCMR2_CC3S_1: u32 = 0x2 << TIM_CCMR2_CC3S_Pos;
pub const TIM_CCMR2_OC3FE_Pos: u32 = 2;
pub const TIM_CCMR2_OC3FE_Msk: u32 = 0x1 << TIM_CCMR2_OC3FE_Pos;
pub const TIM_CCMR2_OC3FE: u32 = TIM_CCMR2_OC3FE_Msk;
pub const TIM_CCMR2_OC3PE_Pos: u32 = 3;
pub const TIM_CCMR2_OC3PE_Msk: u32 = 0x1 << TIM_CCMR2_OC3PE_Pos;
pub const TIM_CCMR2_OC3PE: u32 = TIM_CCMR2_OC3PE_Msk;
pub const TIM_CCMR2_OC3M_Pos: u32 = 4;
pub const TIM_CCMR2_OC3M_Msk: u32 = 0x7 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M: u32 = TIM_CCMR2_OC3M_Msk;
pub const TIM_CCMR2_OC3M_0: u32 = 0x1 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M_1: u32 = 0x2 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3M_2: u32 = 0x4 << TIM_CCMR2_OC3M_Pos;
pub const TIM_CCMR2_OC3CE_Pos: u32 = 7;
pub const TIM_CCMR2_OC3CE_Msk: u32 = 0x1 << TIM_CCMR2_OC3CE_Pos;
pub const TIM_CCMR2_OC3CE: u32 = TIM_CCMR2_OC3CE_Msk;
pub const TIM_CCMR2_CC4S_Pos: u32 = 8;
pub const TIM_CCMR2_CC4S_Msk: u32 = 0x3 << TIM_CCMR2_CC4S_Pos;
pub const TIM_CCMR2_CC4S: u32 = TIM_CCMR2_CC4S_Msk;
pub const TIM_CCMR2_CC4S_0: u32 = 0x1 << TIM_CCMR2_CC4S_Pos;
pub const TIM_CCMR2_CC4S_1: u32 = 0x2 << TIM_CCMR2_CC4S_Pos;
pub const TIM_CCMR2_OC4FE_Pos: u32 = 10;
pub const TIM_CCMR2_OC4FE_Msk: u32 = 0x1 << TIM_CCMR2_OC4FE_Pos;
pub const TIM_CCMR2_OC4FE: u32 = TIM_CCMR2_OC4FE_Msk;
pub const TIM_CCMR2_OC4PE_Pos: u32 = 11;
pub const TIM_CCMR2_OC4PE_Msk: u32 = 0x1 << TIM_CCMR2_OC4PE_Pos;
pub const TIM_CCMR2_OC4PE: u32 = TIM_CCMR2_OC4PE_Msk;
pub const TIM_CCMR2_OC4M_Pos: u32 = 12;
pub const TIM_CCMR2_OC4M_Msk: u32 = 0x7 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M: u32 = TIM_CCMR2_OC4M_Msk;
pub const TIM_CCMR2_OC4M_0: u32 = 0x1 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M_1: u32 = 0x2 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4M_2: u32 = 0x4 << TIM_CCMR2_OC4M_Pos;
pub const TIM_CCMR2_OC4CE_Pos: u32 = 15;
pub const TIM_CCMR2_OC4CE_Msk: u32 = 0x1 << TIM_CCMR2_OC4CE_Pos;
pub const TIM_CCMR2_OC4CE: u32 = TIM_CCMR2_OC4CE_Msk;
pub const TIM_CCMR2_IC3PSC_Pos: u32 = 2;
pub const TIM_CCMR2_IC3PSC_Msk: u32 = 0x3 << TIM_CCMR2_IC3PSC_Pos;
pub const TIM_CCMR2_IC3PSC: u32 = TIM_CCMR2_IC3PSC_Msk;
pub const TIM_CCMR2_IC3PSC_0: u32 = 0x1 << TIM_CCMR2_IC3PSC_Pos;
pub const TIM_CCMR2_IC3PSC_1: u32 = 0x2 << TIM_CCMR2_IC3PSC_Pos;
pub const TIM_CCMR2_IC3F_Pos: u32 = 4;
pub const TIM_CCMR2_IC3F_Msk: u32 = 0xF << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F: u32 = TIM_CCMR2_IC3F_Msk;
pub const TIM_CCMR2_IC3F_0: u32 = 0x1 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F_1: u32 = 0x2 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F_2: u32 = 0x4 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC3F_3: u32 = 0x8 << TIM_CCMR2_IC3F_Pos;
pub const TIM_CCMR2_IC4PSC_Pos: u32 = 10;
pub const TIM_CCMR2_IC4PSC_Msk: u32 = 0x3 << TIM_CCMR2_IC4PSC_Pos;
pub const TIM_CCMR2_IC4PSC: u32 = TIM_CCMR2_IC4PSC_Msk;
pub const TIM_CCMR2_IC4PSC_0: u32 = 0x1 << TIM_CCMR2_IC4PSC_Pos;
pub const TIM_CCMR2_IC4PSC_1: u32 = 0x2 << TIM_CCMR2_IC4PSC_Pos;
pub const TIM_CCMR2_IC4F_Pos: u32 = 12;
pub const TIM_CCMR2_IC4F_Msk: u32 = 0xF << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F: u32 = TIM_CCMR2_IC4F_Msk;
pub const TIM_CCMR2_IC4F_0: u32 = 0x1 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F_1: u32 = 0x2 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F_2: u32 = 0x4 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCMR2_IC4F_3: u32 = 0x8 << TIM_CCMR2_IC4F_Pos;
pub const TIM_CCER_CC1E_Pos: u32 = 0;
pub const TIM_CCER_CC1E_Msk: u32 = 0x1 << TIM_CCER_CC1E_Pos;
pub const TIM_CCER_CC1E: u32 = TIM_CCER_CC1E_Msk;
pub const TIM_CCER_CC1P_Pos: u32 = 1;
pub const TIM_CCER_CC1P_Msk: u32 = 0x1 << TIM_CCER_CC1P_Pos;
pub const TIM_CCER_CC1P: u32 = TIM_CCER_CC1P_Msk;
pub const TIM_CCER_CC1NP_Pos: u32 = 3;
pub const TIM_CCER_CC1NP_Msk: u32 = 0x1 << TIM_CCER_CC1NP_Pos;
pub const TIM_CCER_CC1NP: u32 = TIM_CCER_CC1NP_Msk;
pub const TIM_CCER_CC2E_Pos: u32 = 4;
pub const TIM_CCER_CC2E_Msk: u32 = 0x1 << TIM_CCER_CC2E_Pos;
pub const TIM_CCER_CC2E: u32 = TIM_CCER_CC2E_Msk;
pub const TIM_CCER_CC2P_Pos: u32 = 5;
pub const TIM_CCER_CC2P_Msk: u32 = 0x1 << TIM_CCER_CC2P_Pos;
pub const TIM_CCER_CC2P: u32 = TIM_CCER_CC2P_Msk;
pub const TIM_CCER_CC2NP_Pos: u32 = 7;
pub const TIM_CCER_CC2NP_Msk: u32 = 0x1 << TIM_CCER_CC2NP_Pos;
pub const TIM_CCER_CC2NP: u32 = TIM_CCER_CC2NP_Msk;
pub const TIM_CCER_CC3E_Pos: u32 = 8;
pub const TIM_CCER_CC3E_Msk: u32 = 0x1 << TIM_CCER_CC3E_Pos;
pub const TIM_CCER_CC3E: u32 = TIM_CCER_CC3E_Msk;
pub const TIM_CCER_CC3P_Pos: u32 = 9;
pub const TIM_CCER_CC3P_Msk: u32 = 0x1 << TIM_CCER_CC3P_Pos;
pub const TIM_CCER_CC3P: u32 = TIM_CCER_CC3P_Msk;
pub const TIM_CCER_CC3NP_Pos: u32 = 11;
pub const TIM_CCER_CC3NP_Msk: u32 = 0x1 << TIM_CCER_CC3NP_Pos;
pub const TIM_CCER_CC3NP: u32 = TIM_CCER_CC3NP_Msk;
pub const TIM_CCER_CC4E_Pos: u32 = 12;
pub const TIM_CCER_CC4E_Msk: u32 = 0x1 << TIM_CCER_CC4E_Pos;
pub const TIM_CCER_CC4E: u32 = TIM_CCER_CC4E_Msk;
pub const TIM_CCER_CC4P_Pos: u32 = 13;
pub const TIM_CCER_CC4P_Msk: u32 = 0x1 << TIM_CCER_CC4P_Pos;
pub const TIM_CCER_CC4P: u32 = TIM_CCER_CC4P_Msk;
pub const TIM_CCER_CC4NP_Pos: u32 = 15;
pub const TIM_CCER_CC4NP_Msk: u32 = 0x1 << TIM_CCER_CC4NP_Pos;
pub const TIM_CCER_CC4NP: u32 = TIM_CCER_CC4NP_Msk;
pub const TIM_CNT_CNT_Pos: u32 = 0;
pub const TIM_CNT_CNT_Msk: u32 = 0xFFFF << TIM_CNT_CNT_Pos;
pub const TIM_CNT_CNT: u32 = TIM_CNT_CNT_Msk;
pub const TIM_PSC_PSC_Pos: u32 = 0;
pub const TIM_PSC_PSC_Msk: u32 = 0xFFFF << TIM_PSC_PSC_Pos;
pub const TIM_PSC_PSC: u32 = TIM_PSC_PSC_Msk;
pub const TIM_ARR_ARR_Pos: u32 = 0;
pub const TIM_ARR_ARR_Msk: u32 = 0xFFFF << TIM_ARR_ARR_Pos;
pub const TIM_ARR_ARR: u32 = TIM_ARR_ARR_Msk;
pub const TIM_CCR1_CCR1_Pos: u32 = 0;
pub const TIM_CCR1_CCR1_Msk: u32 = 0xFFFF << TIM_CCR1_CCR1_Pos;
pub const TIM_CCR1_CCR1: u32 = TIM_CCR1_CCR1_Msk;
pub const TIM_CCR2_CCR2_Pos: u32 = 0;
pub const TIM_CCR2_CCR2_Msk: u32 = 0xFFFF << TIM_CCR2_CCR2_Pos;
pub const TIM_CCR2_CCR2: u32 = TIM_CCR2_CCR2_Msk;
pub const TIM_CCR3_CCR3_Pos: u32 = 0;
pub const TIM_CCR3_CCR3_Msk: u32 = 0xFFFF << TIM_CCR3_CCR3_Pos;
pub const TIM_CCR3_CCR3: u32 = TIM_CCR3_CCR3_Msk;
pub const TIM_CCR4_CCR4_Pos: u32 = 0;
pub const TIM_CCR4_CCR4_Msk: u32 = 0xFFFF << TIM_CCR4_CCR4_Pos;
pub const TIM_CCR4_CCR4: u32 = TIM_CCR4_CCR4_Msk;
pub const TIM_DCR_DBA_Pos: u32 = 0;
pub const TIM_DCR_DBA_Msk: u32 = 0x1F << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA: u32 = TIM_DCR_DBA_Msk;
pub const TIM_DCR_DBA_0: u32 = 0x01 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_1: u32 = 0x02 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_2: u32 = 0x04 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_3: u32 = 0x08 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBA_4: u32 = 0x10 << TIM_DCR_DBA_Pos;
pub const TIM_DCR_DBL_Pos: u32 = 8;
pub const TIM_DCR_DBL_Msk: u32 = 0x1F << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL: u32 = TIM_DCR_DBL_Msk;
pub const TIM_DCR_DBL_0: u32 = 0x01 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_1: u32 = 0x02 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_2: u32 = 0x04 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_3: u32 = 0x08 << TIM_DCR_DBL_Pos;
pub const TIM_DCR_DBL_4: u32 = 0x10 << TIM_DCR_DBL_Pos;
pub const TIM_DMAR_DMAB_Pos: u32 = 0;
pub const TIM_DMAR_DMAB_Msk: u32 = 0xFFFF << TIM_DMAR_DMAB_Pos;
pub const TIM_DMAR_DMAB: u32 = TIM_DMAR_DMAB_Msk;
pub const TIM2_OR_ETR_RMP_Pos: u32 = 0;
pub const TIM2_OR_ETR_RMP_Msk: u32 = 0x7 << TIM2_OR_ETR_RMP_Pos;
pub const TIM2_OR_ETR_RMP: u32 = TIM2_OR_ETR_RMP_Msk;
pub const TIM2_OR_ETR_RMP_0: u32 = 0x1 << TIM2_OR_ETR_RMP_Pos;
pub const TIM2_OR_ETR_RMP_1: u32 = 0x2 << TIM2_OR_ETR_RMP_Pos;
pub const TIM2_OR_ETR_RMP_2: u32 = 0x4 << TIM2_OR_ETR_RMP_Pos;
pub const TIM2_OR_TI4_RMP_Pos: u32 = 3;
pub const TIM2_OR_TI4_RMP_Msk: u32 = 0x3 << TIM2_OR_TI4_RMP_Pos;
pub const TIM2_OR_TI4_RMP: u32 = TIM2_OR_TI4_RMP_Msk;
pub const TIM2_OR_TI4_RMP_0: u32 = 0x1 << TIM2_OR_TI4_RMP_Pos;
pub const TIM2_OR_TI4_RMP_1: u32 = 0x2 << TIM2_OR_TI4_RMP_Pos;
pub const TIM21_OR_ETR_RMP_Pos: u32 = 0;
pub const TIM21_OR_ETR_RMP_Msk: u32 = 0x3 << TIM21_OR_ETR_RMP_Pos;
pub const TIM21_OR_ETR_RMP: u32 = TIM21_OR_ETR_RMP_Msk;
pub const TIM21_OR_ETR_RMP_0: u32 = 0x1 << TIM21_OR_ETR_RMP_Pos;
pub const TIM21_OR_ETR_RMP_1: u32 = 0x2 << TIM21_OR_ETR_RMP_Pos;
pub const TIM21_OR_TI1_RMP_Pos: u32 = 2;
pub const TIM21_OR_TI1_RMP_Msk: u32 = 0x7 << TIM21_OR_TI1_RMP_Pos;
pub const TIM21_OR_TI1_RMP: u32 = TIM21_OR_TI1_RMP_Msk;
pub const TIM21_OR_TI1_RMP_0: u32 = 0x1 << TIM21_OR_TI1_RMP_Pos;
pub const TIM21_OR_TI1_RMP_1: u32 = 0x2 << TIM21_OR_TI1_RMP_Pos;
pub const TIM21_OR_TI1_RMP_2: u32 = 0x4 << TIM21_OR_TI1_RMP_Pos;
pub const TIM21_OR_TI2_RMP_Pos: u32 = 5;
pub const TIM21_OR_TI2_RMP_Msk: u32 = 0x1 << TIM21_OR_TI2_RMP_Pos;
pub const TIM21_OR_TI2_RMP: u32 = TIM21_OR_TI2_RMP_Msk;
pub const TIM22_OR_ETR_RMP_Pos: u32 = 0;
pub const TIM22_OR_ETR_RMP_Msk: u32 = 0x3 << TIM22_OR_ETR_RMP_Pos;
pub const TIM22_OR_ETR_RMP: u32 = TIM22_OR_ETR_RMP_Msk;
pub const TIM22_OR_ETR_RMP_0: u32 = 0x1 << TIM22_OR_ETR_RMP_Pos;
pub const TIM22_OR_ETR_RMP_1: u32 = 0x2 << TIM22_OR_ETR_RMP_Pos;
pub const TIM22_OR_TI1_RMP_Pos: u32 = 2;
pub const TIM22_OR_TI1_RMP_Msk: u32 = 0x3 << TIM22_OR_TI1_RMP_Pos;
pub const TIM22_OR_TI1_RMP: u32 = TIM22_OR_TI1_RMP_Msk;
pub const TIM22_OR_TI1_RMP_0: u32 = 0x1 << TIM22_OR_TI1_RMP_Pos;
pub const TIM22_OR_TI1_RMP_1: u32 = 0x2 << TIM22_OR_TI1_RMP_Pos;
pub const TSC_CR_TSCE_Pos: u32 = 0;
pub const TSC_CR_TSCE_Msk: u32 = 0x1 << TSC_CR_TSCE_Pos;
pub const TSC_CR_TSCE: u32 = TSC_CR_TSCE_Msk;
pub const TSC_CR_START_Pos: u32 = 1;
pub const TSC_CR_START_Msk: u32 = 0x1 << TSC_CR_START_Pos;
pub const TSC_CR_START: u32 = TSC_CR_START_Msk;
pub const TSC_CR_AM_Pos: u32 = 2;
pub const TSC_CR_AM_Msk: u32 = 0x1 << TSC_CR_AM_Pos;
pub const TSC_CR_AM: u32 = TSC_CR_AM_Msk;
pub const TSC_CR_SYNCPOL_Pos: u32 = 3;
pub const TSC_CR_SYNCPOL_Msk: u32 = 0x1 << TSC_CR_SYNCPOL_Pos;
pub const TSC_CR_SYNCPOL: u32 = TSC_CR_SYNCPOL_Msk;
pub const TSC_CR_IODEF_Pos: u32 = 4;
pub const TSC_CR_IODEF_Msk: u32 = 0x1 << TSC_CR_IODEF_Pos;
pub const TSC_CR_IODEF: u32 = TSC_CR_IODEF_Msk;
pub const TSC_CR_MCV_Pos: u32 = 5;
pub const TSC_CR_MCV_Msk: u32 = 0x7 << TSC_CR_MCV_Pos;
pub const TSC_CR_MCV: u32 = TSC_CR_MCV_Msk;
pub const TSC_CR_MCV_0: u32 = 0x1 << TSC_CR_MCV_Pos;
pub const TSC_CR_MCV_1: u32 = 0x2 << TSC_CR_MCV_Pos;
pub const TSC_CR_MCV_2: u32 = 0x4 << TSC_CR_MCV_Pos;
pub const TSC_CR_PGPSC_Pos: u32 = 12;
pub const TSC_CR_PGPSC_Msk: u32 = 0x7 << TSC_CR_PGPSC_Pos;
pub const TSC_CR_PGPSC: u32 = TSC_CR_PGPSC_Msk;
pub const TSC_CR_PGPSC_0: u32 = 0x1 << TSC_CR_PGPSC_Pos;
pub const TSC_CR_PGPSC_1: u32 = 0x2 << TSC_CR_PGPSC_Pos;
pub const TSC_CR_PGPSC_2: u32 = 0x4 << TSC_CR_PGPSC_Pos;
pub const TSC_CR_SSPSC_Pos: u32 = 15;
pub const TSC_CR_SSPSC_Msk: u32 = 0x1 << TSC_CR_SSPSC_Pos;
pub const TSC_CR_SSPSC: u32 = TSC_CR_SSPSC_Msk;
pub const TSC_CR_SSE_Pos: u32 = 16;
pub const TSC_CR_SSE_Msk: u32 = 0x1 << TSC_CR_SSE_Pos;
pub const TSC_CR_SSE: u32 = TSC_CR_SSE_Msk;
pub const TSC_CR_SSD_Pos: u32 = 17;
pub const TSC_CR_SSD_Msk: u32 = 0x7F << TSC_CR_SSD_Pos;
pub const TSC_CR_SSD: u32 = TSC_CR_SSD_Msk;
pub const TSC_CR_SSD_0: u32 = 0x01 << TSC_CR_SSD_Pos;
pub const TSC_CR_SSD_1: u32 = 0x02 << TSC_CR_SSD_Pos;
pub const TSC_CR_SSD_2: u32 = 0x04 << TSC_CR_SSD_Pos;
pub const TSC_CR_SSD_3: u32 = 0x08 << TSC_CR_SSD_Pos;
pub const TSC_CR_SSD_4: u32 = 0x10 << TSC_CR_SSD_Pos;
pub const TSC_CR_SSD_5: u32 = 0x20 << TSC_CR_SSD_Pos;
pub const TSC_CR_SSD_6: u32 = 0x40 << TSC_CR_SSD_Pos;
pub const TSC_CR_CTPL_Pos: u32 = 24;
pub const TSC_CR_CTPL_Msk: u32 = 0xF << TSC_CR_CTPL_Pos;
pub const TSC_CR_CTPL: u32 = TSC_CR_CTPL_Msk;
pub const TSC_CR_CTPL_0: u32 = 0x1 << TSC_CR_CTPL_Pos;
pub const TSC_CR_CTPL_1: u32 = 0x2 << TSC_CR_CTPL_Pos;
pub const TSC_CR_CTPL_2: u32 = 0x4 << TSC_CR_CTPL_Pos;
pub const TSC_CR_CTPL_3: u32 = 0x8 << TSC_CR_CTPL_Pos;
pub const TSC_CR_CTPH_Pos: u32 = 28;
pub const TSC_CR_CTPH_Msk: u32 = 0xF << TSC_CR_CTPH_Pos;
pub const TSC_CR_CTPH: u32 = TSC_CR_CTPH_Msk;
pub const TSC_CR_CTPH_0: u32 = 0x1 << TSC_CR_CTPH_Pos;
pub const TSC_CR_CTPH_1: u32 = 0x2 << TSC_CR_CTPH_Pos;
pub const TSC_CR_CTPH_2: u32 = 0x4 << TSC_CR_CTPH_Pos;
pub const TSC_CR_CTPH_3: u32 = 0x8 << TSC_CR_CTPH_Pos;
pub const TSC_IER_EOAIE_Pos: u32 = 0;
pub const TSC_IER_EOAIE_Msk: u32 = 0x1 << TSC_IER_EOAIE_Pos;
pub const TSC_IER_EOAIE: u32 = TSC_IER_EOAIE_Msk;
pub const TSC_IER_MCEIE_Pos: u32 = 1;
pub const TSC_IER_MCEIE_Msk: u32 = 0x1 << TSC_IER_MCEIE_Pos;
pub const TSC_IER_MCEIE: u32 = TSC_IER_MCEIE_Msk;
pub const TSC_ICR_EOAIC_Pos: u32 = 0;
pub const TSC_ICR_EOAIC_Msk: u32 = 0x1 << TSC_ICR_EOAIC_Pos;
pub const TSC_ICR_EOAIC: u32 = TSC_ICR_EOAIC_Msk;
pub const TSC_ICR_MCEIC_Pos: u32 = 1;
pub const TSC_ICR_MCEIC_Msk: u32 = 0x1 << TSC_ICR_MCEIC_Pos;
pub const TSC_ICR_MCEIC: u32 = TSC_ICR_MCEIC_Msk;
pub const TSC_ISR_EOAF_Pos: u32 = 0;
pub const TSC_ISR_EOAF_Msk: u32 = 0x1 << TSC_ISR_EOAF_Pos;
pub const TSC_ISR_EOAF: u32 = TSC_ISR_EOAF_Msk;
pub const TSC_ISR_MCEF_Pos: u32 = 1;
pub const TSC_ISR_MCEF_Msk: u32 = 0x1 << TSC_ISR_MCEF_Pos;
pub const TSC_ISR_MCEF: u32 = TSC_ISR_MCEF_Msk;
pub const TSC_IOHCR_G1_IO1_Pos: u32 = 0;
pub const TSC_IOHCR_G1_IO1_Msk: u32 = 0x1 << TSC_IOHCR_G1_IO1_Pos;
pub const TSC_IOHCR_G1_IO1: u32 = TSC_IOHCR_G1_IO1_Msk;
pub const TSC_IOHCR_G1_IO2_Pos: u32 = 1;
pub const TSC_IOHCR_G1_IO2_Msk: u32 = 0x1 << TSC_IOHCR_G1_IO2_Pos;
pub const TSC_IOHCR_G1_IO2: u32 = TSC_IOHCR_G1_IO2_Msk;
pub const TSC_IOHCR_G1_IO3_Pos: u32 = 2;
pub const TSC_IOHCR_G1_IO3_Msk: u32 = 0x1 << TSC_IOHCR_G1_IO3_Pos;
pub const TSC_IOHCR_G1_IO3: u32 = TSC_IOHCR_G1_IO3_Msk;
pub const TSC_IOHCR_G1_IO4_Pos: u32 = 3;
pub const TSC_IOHCR_G1_IO4_Msk: u32 = 0x1 << TSC_IOHCR_G1_IO4_Pos;
pub const TSC_IOHCR_G1_IO4: u32 = TSC_IOHCR_G1_IO4_Msk;
pub const TSC_IOHCR_G2_IO1_Pos: u32 = 4;
pub const TSC_IOHCR_G2_IO1_Msk: u32 = 0x1 << TSC_IOHCR_G2_IO1_Pos;
pub const TSC_IOHCR_G2_IO1: u32 = TSC_IOHCR_G2_IO1_Msk;
pub const TSC_IOHCR_G2_IO2_Pos: u32 = 5;
pub const TSC_IOHCR_G2_IO2_Msk: u32 = 0x1 << TSC_IOHCR_G2_IO2_Pos;
pub const TSC_IOHCR_G2_IO2: u32 = TSC_IOHCR_G2_IO2_Msk;
pub const TSC_IOHCR_G2_IO3_Pos: u32 = 6;
pub const TSC_IOHCR_G2_IO3_Msk: u32 = 0x1 << TSC_IOHCR_G2_IO3_Pos;
pub const TSC_IOHCR_G2_IO3: u32 = TSC_IOHCR_G2_IO3_Msk;
pub const TSC_IOHCR_G2_IO4_Pos: u32 = 7;
pub const TSC_IOHCR_G2_IO4_Msk: u32 = 0x1 << TSC_IOHCR_G2_IO4_Pos;
pub const TSC_IOHCR_G2_IO4: u32 = TSC_IOHCR_G2_IO4_Msk;
pub const TSC_IOHCR_G3_IO1_Pos: u32 = 8;
pub const TSC_IOHCR_G3_IO1_Msk: u32 = 0x1 << TSC_IOHCR_G3_IO1_Pos;
pub const TSC_IOHCR_G3_IO1: u32 = TSC_IOHCR_G3_IO1_Msk;
pub const TSC_IOHCR_G3_IO2_Pos: u32 = 9;
pub const TSC_IOHCR_G3_IO2_Msk: u32 = 0x1 << TSC_IOHCR_G3_IO2_Pos;
pub const TSC_IOHCR_G3_IO2: u32 = TSC_IOHCR_G3_IO2_Msk;
pub const TSC_IOHCR_G3_IO3_Pos: u32 = 10;
pub const TSC_IOHCR_G3_IO3_Msk: u32 = 0x1 << TSC_IOHCR_G3_IO3_Pos;
pub const TSC_IOHCR_G3_IO3: u32 = TSC_IOHCR_G3_IO3_Msk;
pub const TSC_IOHCR_G3_IO4_Pos: u32 = 11;
pub const TSC_IOHCR_G3_IO4_Msk: u32 = 0x1 << TSC_IOHCR_G3_IO4_Pos;
pub const TSC_IOHCR_G3_IO4: u32 = TSC_IOHCR_G3_IO4_Msk;
pub const TSC_IOHCR_G4_IO1_Pos: u32 = 12;
pub const TSC_IOHCR_G4_IO1_Msk: u32 = 0x1 << TSC_IOHCR_G4_IO1_Pos;
pub const TSC_IOHCR_G4_IO1: u32 = TSC_IOHCR_G4_IO1_Msk;
pub const TSC_IOHCR_G4_IO2_Pos: u32 = 13;
pub const TSC_IOHCR_G4_IO2_Msk: u32 = 0x1 << TSC_IOHCR_G4_IO2_Pos;
pub const TSC_IOHCR_G4_IO2: u32 = TSC_IOHCR_G4_IO2_Msk;
pub const TSC_IOHCR_G4_IO3_Pos: u32 = 14;
pub const TSC_IOHCR_G4_IO3_Msk: u32 = 0x1 << TSC_IOHCR_G4_IO3_Pos;
pub const TSC_IOHCR_G4_IO3: u32 = TSC_IOHCR_G4_IO3_Msk;
pub const TSC_IOHCR_G4_IO4_Pos: u32 = 15;
pub const TSC_IOHCR_G4_IO4_Msk: u32 = 0x1 << TSC_IOHCR_G4_IO4_Pos;
pub const TSC_IOHCR_G4_IO4: u32 = TSC_IOHCR_G4_IO4_Msk;
pub const TSC_IOHCR_G5_IO1_Pos: u32 = 16;
pub const TSC_IOHCR_G5_IO1_Msk: u32 = 0x1 << TSC_IOHCR_G5_IO1_Pos;
pub const TSC_IOHCR_G5_IO1: u32 = TSC_IOHCR_G5_IO1_Msk;
pub const TSC_IOHCR_G5_IO2_Pos: u32 = 17;
pub const TSC_IOHCR_G5_IO2_Msk: u32 = 0x1 << TSC_IOHCR_G5_IO2_Pos;
pub const TSC_IOHCR_G5_IO2: u32 = TSC_IOHCR_G5_IO2_Msk;
pub const TSC_IOHCR_G5_IO3_Pos: u32 = 18;
pub const TSC_IOHCR_G5_IO3_Msk: u32 = 0x1 << TSC_IOHCR_G5_IO3_Pos;
pub const TSC_IOHCR_G5_IO3: u32 = TSC_IOHCR_G5_IO3_Msk;
pub const TSC_IOHCR_G5_IO4_Pos: u32 = 19;
pub const TSC_IOHCR_G5_IO4_Msk: u32 = 0x1 << TSC_IOHCR_G5_IO4_Pos;
pub const TSC_IOHCR_G5_IO4: u32 = TSC_IOHCR_G5_IO4_Msk;
pub const TSC_IOHCR_G6_IO1_Pos: u32 = 20;
pub const TSC_IOHCR_G6_IO1_Msk: u32 = 0x1 << TSC_IOHCR_G6_IO1_Pos;
pub const TSC_IOHCR_G6_IO1: u32 = TSC_IOHCR_G6_IO1_Msk;
pub const TSC_IOHCR_G6_IO2_Pos: u32 = 21;
pub const TSC_IOHCR_G6_IO2_Msk: u32 = 0x1 << TSC_IOHCR_G6_IO2_Pos;
pub const TSC_IOHCR_G6_IO2: u32 = TSC_IOHCR_G6_IO2_Msk;
pub const TSC_IOHCR_G6_IO3_Pos: u32 = 22;
pub const TSC_IOHCR_G6_IO3_Msk: u32 = 0x1 << TSC_IOHCR_G6_IO3_Pos;
pub const TSC_IOHCR_G6_IO3: u32 = TSC_IOHCR_G6_IO3_Msk;
pub const TSC_IOHCR_G6_IO4_Pos: u32 = 23;
pub const TSC_IOHCR_G6_IO4_Msk: u32 = 0x1 << TSC_IOHCR_G6_IO4_Pos;
pub const TSC_IOHCR_G6_IO4: u32 = TSC_IOHCR_G6_IO4_Msk;
pub const TSC_IOHCR_G7_IO1_Pos: u32 = 24;
pub const TSC_IOHCR_G7_IO1_Msk: u32 = 0x1 << TSC_IOHCR_G7_IO1_Pos;
pub const TSC_IOHCR_G7_IO1: u32 = TSC_IOHCR_G7_IO1_Msk;
pub const TSC_IOHCR_G7_IO2_Pos: u32 = 25;
pub const TSC_IOHCR_G7_IO2_Msk: u32 = 0x1 << TSC_IOHCR_G7_IO2_Pos;
pub const TSC_IOHCR_G7_IO2: u32 = TSC_IOHCR_G7_IO2_Msk;
pub const TSC_IOHCR_G7_IO3_Pos: u32 = 26;
pub const TSC_IOHCR_G7_IO3_Msk: u32 = 0x1 << TSC_IOHCR_G7_IO3_Pos;
pub const TSC_IOHCR_G7_IO3: u32 = TSC_IOHCR_G7_IO3_Msk;
pub const TSC_IOHCR_G7_IO4_Pos: u32 = 27;
pub const TSC_IOHCR_G7_IO4_Msk: u32 = 0x1 << TSC_IOHCR_G7_IO4_Pos;
pub const TSC_IOHCR_G7_IO4: u32 = TSC_IOHCR_G7_IO4_Msk;
pub const TSC_IOHCR_G8_IO1_Pos: u32 = 28;
pub const TSC_IOHCR_G8_IO1_Msk: u32 = 0x1 << TSC_IOHCR_G8_IO1_Pos;
pub const TSC_IOHCR_G8_IO1: u32 = TSC_IOHCR_G8_IO1_Msk;
pub const TSC_IOHCR_G8_IO2_Pos: u32 = 29;
pub const TSC_IOHCR_G8_IO2_Msk: u32 = 0x1 << TSC_IOHCR_G8_IO2_Pos;
pub const TSC_IOHCR_G8_IO2: u32 = TSC_IOHCR_G8_IO2_Msk;
pub const TSC_IOHCR_G8_IO3_Pos: u32 = 30;
pub const TSC_IOHCR_G8_IO3_Msk: u32 = 0x1 << TSC_IOHCR_G8_IO3_Pos;
pub const TSC_IOHCR_G8_IO3: u32 = TSC_IOHCR_G8_IO3_Msk;
pub const TSC_IOHCR_G8_IO4_Pos: u32 = 31;
pub const TSC_IOHCR_G8_IO4_Msk: u32 = 0x1 << TSC_IOHCR_G8_IO4_Pos;
pub const TSC_IOHCR_G8_IO4: u32 = TSC_IOHCR_G8_IO4_Msk;
pub const TSC_IOASCR_G1_IO1_Pos: u32 = 0;
pub const TSC_IOASCR_G1_IO1_Msk: u32 = 0x1 << TSC_IOASCR_G1_IO1_Pos;
pub const TSC_IOASCR_G1_IO1: u32 = TSC_IOASCR_G1_IO1_Msk;
pub const TSC_IOASCR_G1_IO2_Pos: u32 = 1;
pub const TSC_IOASCR_G1_IO2_Msk: u32 = 0x1 << TSC_IOASCR_G1_IO2_Pos;
pub const TSC_IOASCR_G1_IO2: u32 = TSC_IOASCR_G1_IO2_Msk;
pub const TSC_IOASCR_G1_IO3_Pos: u32 = 2;
pub const TSC_IOASCR_G1_IO3_Msk: u32 = 0x1 << TSC_IOASCR_G1_IO3_Pos;
pub const TSC_IOASCR_G1_IO3: u32 = TSC_IOASCR_G1_IO3_Msk;
pub const TSC_IOASCR_G1_IO4_Pos: u32 = 3;
pub const TSC_IOASCR_G1_IO4_Msk: u32 = 0x1 << TSC_IOASCR_G1_IO4_Pos;
pub const TSC_IOASCR_G1_IO4: u32 = TSC_IOASCR_G1_IO4_Msk;
pub const TSC_IOASCR_G2_IO1_Pos: u32 = 4;
pub const TSC_IOASCR_G2_IO1_Msk: u32 = 0x1 << TSC_IOASCR_G2_IO1_Pos;
pub const TSC_IOASCR_G2_IO1: u32 = TSC_IOASCR_G2_IO1_Msk;
pub const TSC_IOASCR_G2_IO2_Pos: u32 = 5;
pub const TSC_IOASCR_G2_IO2_Msk: u32 = 0x1 << TSC_IOASCR_G2_IO2_Pos;
pub const TSC_IOASCR_G2_IO2: u32 = TSC_IOASCR_G2_IO2_Msk;
pub const TSC_IOASCR_G2_IO3_Pos: u32 = 6;
pub const TSC_IOASCR_G2_IO3_Msk: u32 = 0x1 << TSC_IOASCR_G2_IO3_Pos;
pub const TSC_IOASCR_G2_IO3: u32 = TSC_IOASCR_G2_IO3_Msk;
pub const TSC_IOASCR_G2_IO4_Pos: u32 = 7;
pub const TSC_IOASCR_G2_IO4_Msk: u32 = 0x1 << TSC_IOASCR_G2_IO4_Pos;
pub const TSC_IOASCR_G2_IO4: u32 = TSC_IOASCR_G2_IO4_Msk;
pub const TSC_IOASCR_G3_IO1_Pos: u32 = 8;
pub const TSC_IOASCR_G3_IO1_Msk: u32 = 0x1 << TSC_IOASCR_G3_IO1_Pos;
pub const TSC_IOASCR_G3_IO1: u32 = TSC_IOASCR_G3_IO1_Msk;
pub const TSC_IOASCR_G3_IO2_Pos: u32 = 9;
pub const TSC_IOASCR_G3_IO2_Msk: u32 = 0x1 << TSC_IOASCR_G3_IO2_Pos;
pub const TSC_IOASCR_G3_IO2: u32 = TSC_IOASCR_G3_IO2_Msk;
pub const TSC_IOASCR_G3_IO3_Pos: u32 = 10;
pub const TSC_IOASCR_G3_IO3_Msk: u32 = 0x1 << TSC_IOASCR_G3_IO3_Pos;
pub const TSC_IOASCR_G3_IO3: u32 = TSC_IOASCR_G3_IO3_Msk;
pub const TSC_IOASCR_G3_IO4_Pos: u32 = 11;
pub const TSC_IOASCR_G3_IO4_Msk: u32 = 0x1 << TSC_IOASCR_G3_IO4_Pos;
pub const TSC_IOASCR_G3_IO4: u32 = TSC_IOASCR_G3_IO4_Msk;
pub const TSC_IOASCR_G4_IO1_Pos: u32 = 12;
pub const TSC_IOASCR_G4_IO1_Msk: u32 = 0x1 << TSC_IOASCR_G4_IO1_Pos;
pub const TSC_IOASCR_G4_IO1: u32 = TSC_IOASCR_G4_IO1_Msk;
pub const TSC_IOASCR_G4_IO2_Pos: u32 = 13;
pub const TSC_IOASCR_G4_IO2_Msk: u32 = 0x1 << TSC_IOASCR_G4_IO2_Pos;
pub const TSC_IOASCR_G4_IO2: u32 = TSC_IOASCR_G4_IO2_Msk;
pub const TSC_IOASCR_G4_IO3_Pos: u32 = 14;
pub const TSC_IOASCR_G4_IO3_Msk: u32 = 0x1 << TSC_IOASCR_G4_IO3_Pos;
pub const TSC_IOASCR_G4_IO3: u32 = TSC_IOASCR_G4_IO3_Msk;
pub const TSC_IOASCR_G4_IO4_Pos: u32 = 15;
pub const TSC_IOASCR_G4_IO4_Msk: u32 = 0x1 << TSC_IOASCR_G4_IO4_Pos;
pub const TSC_IOASCR_G4_IO4: u32 = TSC_IOASCR_G4_IO4_Msk;
pub const TSC_IOASCR_G5_IO1_Pos: u32 = 16;
pub const TSC_IOASCR_G5_IO1_Msk: u32 = 0x1 << TSC_IOASCR_G5_IO1_Pos;
pub const TSC_IOASCR_G5_IO1: u32 = TSC_IOASCR_G5_IO1_Msk;
pub const TSC_IOASCR_G5_IO2_Pos: u32 = 17;
pub const TSC_IOASCR_G5_IO2_Msk: u32 = 0x1 << TSC_IOASCR_G5_IO2_Pos;
pub const TSC_IOASCR_G5_IO2: u32 = TSC_IOASCR_G5_IO2_Msk;
pub const TSC_IOASCR_G5_IO3_Pos: u32 = 18;
pub const TSC_IOASCR_G5_IO3_Msk: u32 = 0x1 << TSC_IOASCR_G5_IO3_Pos;
pub const TSC_IOASCR_G5_IO3: u32 = TSC_IOASCR_G5_IO3_Msk;
pub const TSC_IOASCR_G5_IO4_Pos: u32 = 19;
pub const TSC_IOASCR_G5_IO4_Msk: u32 = 0x1 << TSC_IOASCR_G5_IO4_Pos;
pub const TSC_IOASCR_G5_IO4: u32 = TSC_IOASCR_G5_IO4_Msk;
pub const TSC_IOASCR_G6_IO1_Pos: u32 = 20;
pub const TSC_IOASCR_G6_IO1_Msk: u32 = 0x1 << TSC_IOASCR_G6_IO1_Pos;
pub const TSC_IOASCR_G6_IO1: u32 = TSC_IOASCR_G6_IO1_Msk;
pub const TSC_IOASCR_G6_IO2_Pos: u32 = 21;
pub const TSC_IOASCR_G6_IO2_Msk: u32 = 0x1 << TSC_IOASCR_G6_IO2_Pos;
pub const TSC_IOASCR_G6_IO2: u32 = TSC_IOASCR_G6_IO2_Msk;
pub const TSC_IOASCR_G6_IO3_Pos: u32 = 22;
pub const TSC_IOASCR_G6_IO3_Msk: u32 = 0x1 << TSC_IOASCR_G6_IO3_Pos;
pub const TSC_IOASCR_G6_IO3: u32 = TSC_IOASCR_G6_IO3_Msk;
pub const TSC_IOASCR_G6_IO4_Pos: u32 = 23;
pub const TSC_IOASCR_G6_IO4_Msk: u32 = 0x1 << TSC_IOASCR_G6_IO4_Pos;
pub const TSC_IOASCR_G6_IO4: u32 = TSC_IOASCR_G6_IO4_Msk;
pub const TSC_IOASCR_G7_IO1_Pos: u32 = 24;
pub const TSC_IOASCR_G7_IO1_Msk: u32 = 0x1 << TSC_IOASCR_G7_IO1_Pos;
pub const TSC_IOASCR_G7_IO1: u32 = TSC_IOASCR_G7_IO1_Msk;
pub const TSC_IOASCR_G7_IO2_Pos: u32 = 25;
pub const TSC_IOASCR_G7_IO2_Msk: u32 = 0x1 << TSC_IOASCR_G7_IO2_Pos;
pub const TSC_IOASCR_G7_IO2: u32 = TSC_IOASCR_G7_IO2_Msk;
pub const TSC_IOASCR_G7_IO3_Pos: u32 = 26;
pub const TSC_IOASCR_G7_IO3_Msk: u32 = 0x1 << TSC_IOASCR_G7_IO3_Pos;
pub const TSC_IOASCR_G7_IO3: u32 = TSC_IOASCR_G7_IO3_Msk;
pub const TSC_IOASCR_G7_IO4_Pos: u32 = 27;
pub const TSC_IOASCR_G7_IO4_Msk: u32 = 0x1 << TSC_IOASCR_G7_IO4_Pos;
pub const TSC_IOASCR_G7_IO4: u32 = TSC_IOASCR_G7_IO4_Msk;
pub const TSC_IOASCR_G8_IO1_Pos: u32 = 28;
pub const TSC_IOASCR_G8_IO1_Msk: u32 = 0x1 << TSC_IOASCR_G8_IO1_Pos;
pub const TSC_IOASCR_G8_IO1: u32 = TSC_IOASCR_G8_IO1_Msk;
pub const TSC_IOASCR_G8_IO2_Pos: u32 = 29;
pub const TSC_IOASCR_G8_IO2_Msk: u32 = 0x1 << TSC_IOASCR_G8_IO2_Pos;
pub const TSC_IOASCR_G8_IO2: u32 = TSC_IOASCR_G8_IO2_Msk;
pub const TSC_IOASCR_G8_IO3_Pos: u32 = 30;
pub const TSC_IOASCR_G8_IO3_Msk: u32 = 0x1 << TSC_IOASCR_G8_IO3_Pos;
pub const TSC_IOASCR_G8_IO3: u32 = TSC_IOASCR_G8_IO3_Msk;
pub const TSC_IOASCR_G8_IO4_Pos: u32 = 31;
pub const TSC_IOASCR_G8_IO4_Msk: u32 = 0x1 << TSC_IOASCR_G8_IO4_Pos;
pub const TSC_IOASCR_G8_IO4: u32 = TSC_IOASCR_G8_IO4_Msk;
pub const TSC_IOSCR_G1_IO1_Pos: u32 = 0;
pub const TSC_IOSCR_G1_IO1_Msk: u32 = 0x1 << TSC_IOSCR_G1_IO1_Pos;
pub const TSC_IOSCR_G1_IO1: u32 = TSC_IOSCR_G1_IO1_Msk;
pub const TSC_IOSCR_G1_IO2_Pos: u32 = 1;
pub const TSC_IOSCR_G1_IO2_Msk: u32 = 0x1 << TSC_IOSCR_G1_IO2_Pos;
pub const TSC_IOSCR_G1_IO2: u32 = TSC_IOSCR_G1_IO2_Msk;
pub const TSC_IOSCR_G1_IO3_Pos: u32 = 2;
pub const TSC_IOSCR_G1_IO3_Msk: u32 = 0x1 << TSC_IOSCR_G1_IO3_Pos;
pub const TSC_IOSCR_G1_IO3: u32 = TSC_IOSCR_G1_IO3_Msk;
pub const TSC_IOSCR_G1_IO4_Pos: u32 = 3;
pub const TSC_IOSCR_G1_IO4_Msk: u32 = 0x1 << TSC_IOSCR_G1_IO4_Pos;
pub const TSC_IOSCR_G1_IO4: u32 = TSC_IOSCR_G1_IO4_Msk;
pub const TSC_IOSCR_G2_IO1_Pos: u32 = 4;
pub const TSC_IOSCR_G2_IO1_Msk: u32 = 0x1 << TSC_IOSCR_G2_IO1_Pos;
pub const TSC_IOSCR_G2_IO1: u32 = TSC_IOSCR_G2_IO1_Msk;
pub const TSC_IOSCR_G2_IO2_Pos: u32 = 5;
pub const TSC_IOSCR_G2_IO2_Msk: u32 = 0x1 << TSC_IOSCR_G2_IO2_Pos;
pub const TSC_IOSCR_G2_IO2: u32 = TSC_IOSCR_G2_IO2_Msk;
pub const TSC_IOSCR_G2_IO3_Pos: u32 = 6;
pub const TSC_IOSCR_G2_IO3_Msk: u32 = 0x1 << TSC_IOSCR_G2_IO3_Pos;
pub const TSC_IOSCR_G2_IO3: u32 = TSC_IOSCR_G2_IO3_Msk;
pub const TSC_IOSCR_G2_IO4_Pos: u32 = 7;
pub const TSC_IOSCR_G2_IO4_Msk: u32 = 0x1 << TSC_IOSCR_G2_IO4_Pos;
pub const TSC_IOSCR_G2_IO4: u32 = TSC_IOSCR_G2_IO4_Msk;
pub const TSC_IOSCR_G3_IO1_Pos: u32 = 8;
pub const TSC_IOSCR_G3_IO1_Msk: u32 = 0x1 << TSC_IOSCR_G3_IO1_Pos;
pub const TSC_IOSCR_G3_IO1: u32 = TSC_IOSCR_G3_IO1_Msk;
pub const TSC_IOSCR_G3_IO2_Pos: u32 = 9;
pub const TSC_IOSCR_G3_IO2_Msk: u32 = 0x1 << TSC_IOSCR_G3_IO2_Pos;
pub const TSC_IOSCR_G3_IO2: u32 = TSC_IOSCR_G3_IO2_Msk;
pub const TSC_IOSCR_G3_IO3_Pos: u32 = 10;
pub const TSC_IOSCR_G3_IO3_Msk: u32 = 0x1 << TSC_IOSCR_G3_IO3_Pos;
pub const TSC_IOSCR_G3_IO3: u32 = TSC_IOSCR_G3_IO3_Msk;
pub const TSC_IOSCR_G3_IO4_Pos: u32 = 11;
pub const TSC_IOSCR_G3_IO4_Msk: u32 = 0x1 << TSC_IOSCR_G3_IO4_Pos;
pub const TSC_IOSCR_G3_IO4: u32 = TSC_IOSCR_G3_IO4_Msk;
pub const TSC_IOSCR_G4_IO1_Pos: u32 = 12;
pub const TSC_IOSCR_G4_IO1_Msk: u32 = 0x1 << TSC_IOSCR_G4_IO1_Pos;
pub const TSC_IOSCR_G4_IO1: u32 = TSC_IOSCR_G4_IO1_Msk;
pub const TSC_IOSCR_G4_IO2_Pos: u32 = 13;
pub const TSC_IOSCR_G4_IO2_Msk: u32 = 0x1 << TSC_IOSCR_G4_IO2_Pos;
pub const TSC_IOSCR_G4_IO2: u32 = TSC_IOSCR_G4_IO2_Msk;
pub const TSC_IOSCR_G4_IO3_Pos: u32 = 14;
pub const TSC_IOSCR_G4_IO3_Msk: u32 = 0x1 << TSC_IOSCR_G4_IO3_Pos;
pub const TSC_IOSCR_G4_IO3: u32 = TSC_IOSCR_G4_IO3_Msk;
pub const TSC_IOSCR_G4_IO4_Pos: u32 = 15;
pub const TSC_IOSCR_G4_IO4_Msk: u32 = 0x1 << TSC_IOSCR_G4_IO4_Pos;
pub const TSC_IOSCR_G4_IO4: u32 = TSC_IOSCR_G4_IO4_Msk;
pub const TSC_IOSCR_G5_IO1_Pos: u32 = 16;
pub const TSC_IOSCR_G5_IO1_Msk: u32 = 0x1 << TSC_IOSCR_G5_IO1_Pos;
pub const TSC_IOSCR_G5_IO1: u32 = TSC_IOSCR_G5_IO1_Msk;
pub const TSC_IOSCR_G5_IO2_Pos: u32 = 17;
pub const TSC_IOSCR_G5_IO2_Msk: u32 = 0x1 << TSC_IOSCR_G5_IO2_Pos;
pub const TSC_IOSCR_G5_IO2: u32 = TSC_IOSCR_G5_IO2_Msk;
pub const TSC_IOSCR_G5_IO3_Pos: u32 = 18;
pub const TSC_IOSCR_G5_IO3_Msk: u32 = 0x1 << TSC_IOSCR_G5_IO3_Pos;
pub const TSC_IOSCR_G5_IO3: u32 = TSC_IOSCR_G5_IO3_Msk;
pub const TSC_IOSCR_G5_IO4_Pos: u32 = 19;
pub const TSC_IOSCR_G5_IO4_Msk: u32 = 0x1 << TSC_IOSCR_G5_IO4_Pos;
pub const TSC_IOSCR_G5_IO4: u32 = TSC_IOSCR_G5_IO4_Msk;
pub const TSC_IOSCR_G6_IO1_Pos: u32 = 20;
pub const TSC_IOSCR_G6_IO1_Msk: u32 = 0x1 << TSC_IOSCR_G6_IO1_Pos;
pub const TSC_IOSCR_G6_IO1: u32 = TSC_IOSCR_G6_IO1_Msk;
pub const TSC_IOSCR_G6_IO2_Pos: u32 = 21;
pub const TSC_IOSCR_G6_IO2_Msk: u32 = 0x1 << TSC_IOSCR_G6_IO2_Pos;
pub const TSC_IOSCR_G6_IO2: u32 = TSC_IOSCR_G6_IO2_Msk;
pub const TSC_IOSCR_G6_IO3_Pos: u32 = 22;
pub const TSC_IOSCR_G6_IO3_Msk: u32 = 0x1 << TSC_IOSCR_G6_IO3_Pos;
pub const TSC_IOSCR_G6_IO3: u32 = TSC_IOSCR_G6_IO3_Msk;
pub const TSC_IOSCR_G6_IO4_Pos: u32 = 23;
pub const TSC_IOSCR_G6_IO4_Msk: u32 = 0x1 << TSC_IOSCR_G6_IO4_Pos;
pub const TSC_IOSCR_G6_IO4: u32 = TSC_IOSCR_G6_IO4_Msk;
pub const TSC_IOSCR_G7_IO1_Pos: u32 = 24;
pub const TSC_IOSCR_G7_IO1_Msk: u32 = 0x1 << TSC_IOSCR_G7_IO1_Pos;
pub const TSC_IOSCR_G7_IO1: u32 = TSC_IOSCR_G7_IO1_Msk;
pub const TSC_IOSCR_G7_IO2_Pos: u32 = 25;
pub const TSC_IOSCR_G7_IO2_Msk: u32 = 0x1 << TSC_IOSCR_G7_IO2_Pos;
pub const TSC_IOSCR_G7_IO2: u32 = TSC_IOSCR_G7_IO2_Msk;
pub const TSC_IOSCR_G7_IO3_Pos: u32 = 26;
pub const TSC_IOSCR_G7_IO3_Msk: u32 = 0x1 << TSC_IOSCR_G7_IO3_Pos;
pub const TSC_IOSCR_G7_IO3: u32 = TSC_IOSCR_G7_IO3_Msk;
pub const TSC_IOSCR_G7_IO4_Pos: u32 = 27;
pub const TSC_IOSCR_G7_IO4_Msk: u32 = 0x1 << TSC_IOSCR_G7_IO4_Pos;
pub const TSC_IOSCR_G7_IO4: u32 = TSC_IOSCR_G7_IO4_Msk;
pub const TSC_IOSCR_G8_IO1_Pos: u32 = 28;
pub const TSC_IOSCR_G8_IO1_Msk: u32 = 0x1 << TSC_IOSCR_G8_IO1_Pos;
pub const TSC_IOSCR_G8_IO1: u32 = TSC_IOSCR_G8_IO1_Msk;
pub const TSC_IOSCR_G8_IO2_Pos: u32 = 29;
pub const TSC_IOSCR_G8_IO2_Msk: u32 = 0x1 << TSC_IOSCR_G8_IO2_Pos;
pub const TSC_IOSCR_G8_IO2: u32 = TSC_IOSCR_G8_IO2_Msk;
pub const TSC_IOSCR_G8_IO3_Pos: u32 = 30;
pub const TSC_IOSCR_G8_IO3_Msk: u32 = 0x1 << TSC_IOSCR_G8_IO3_Pos;
pub const TSC_IOSCR_G8_IO3: u32 = TSC_IOSCR_G8_IO3_Msk;
pub const TSC_IOSCR_G8_IO4_Pos: u32 = 31;
pub const TSC_IOSCR_G8_IO4_Msk: u32 = 0x1 << TSC_IOSCR_G8_IO4_Pos;
pub const TSC_IOSCR_G8_IO4: u32 = TSC_IOSCR_G8_IO4_Msk;
pub const TSC_IOCCR_G1_IO1_Pos: u32 = 0;
pub const TSC_IOCCR_G1_IO1_Msk: u32 = 0x1 << TSC_IOCCR_G1_IO1_Pos;
pub const TSC_IOCCR_G1_IO1: u32 = TSC_IOCCR_G1_IO1_Msk;
pub const TSC_IOCCR_G1_IO2_Pos: u32 = 1;
pub const TSC_IOCCR_G1_IO2_Msk: u32 = 0x1 << TSC_IOCCR_G1_IO2_Pos;
pub const TSC_IOCCR_G1_IO2: u32 = TSC_IOCCR_G1_IO2_Msk;
pub const TSC_IOCCR_G1_IO3_Pos: u32 = 2;
pub const TSC_IOCCR_G1_IO3_Msk: u32 = 0x1 << TSC_IOCCR_G1_IO3_Pos;
pub const TSC_IOCCR_G1_IO3: u32 = TSC_IOCCR_G1_IO3_Msk;
pub const TSC_IOCCR_G1_IO4_Pos: u32 = 3;
pub const TSC_IOCCR_G1_IO4_Msk: u32 = 0x1 << TSC_IOCCR_G1_IO4_Pos;
pub const TSC_IOCCR_G1_IO4: u32 = TSC_IOCCR_G1_IO4_Msk;
pub const TSC_IOCCR_G2_IO1_Pos: u32 = 4;
pub const TSC_IOCCR_G2_IO1_Msk: u32 = 0x1 << TSC_IOCCR_G2_IO1_Pos;
pub const TSC_IOCCR_G2_IO1: u32 = TSC_IOCCR_G2_IO1_Msk;
pub const TSC_IOCCR_G2_IO2_Pos: u32 = 5;
pub const TSC_IOCCR_G2_IO2_Msk: u32 = 0x1 << TSC_IOCCR_G2_IO2_Pos;
pub const TSC_IOCCR_G2_IO2: u32 = TSC_IOCCR_G2_IO2_Msk;
pub const TSC_IOCCR_G2_IO3_Pos: u32 = 6;
pub const TSC_IOCCR_G2_IO3_Msk: u32 = 0x1 << TSC_IOCCR_G2_IO3_Pos;
pub const TSC_IOCCR_G2_IO3: u32 = TSC_IOCCR_G2_IO3_Msk;
pub const TSC_IOCCR_G2_IO4_Pos: u32 = 7;
pub const TSC_IOCCR_G2_IO4_Msk: u32 = 0x1 << TSC_IOCCR_G2_IO4_Pos;
pub const TSC_IOCCR_G2_IO4: u32 = TSC_IOCCR_G2_IO4_Msk;
pub const TSC_IOCCR_G3_IO1_Pos: u32 = 8;
pub const TSC_IOCCR_G3_IO1_Msk: u32 = 0x1 << TSC_IOCCR_G3_IO1_Pos;
pub const TSC_IOCCR_G3_IO1: u32 = TSC_IOCCR_G3_IO1_Msk;
pub const TSC_IOCCR_G3_IO2_Pos: u32 = 9;
pub const TSC_IOCCR_G3_IO2_Msk: u32 = 0x1 << TSC_IOCCR_G3_IO2_Pos;
pub const TSC_IOCCR_G3_IO2: u32 = TSC_IOCCR_G3_IO2_Msk;
pub const TSC_IOCCR_G3_IO3_Pos: u32 = 10;
pub const TSC_IOCCR_G3_IO3_Msk: u32 = 0x1 << TSC_IOCCR_G3_IO3_Pos;
pub const TSC_IOCCR_G3_IO3: u32 = TSC_IOCCR_G3_IO3_Msk;
pub const TSC_IOCCR_G3_IO4_Pos: u32 = 11;
pub const TSC_IOCCR_G3_IO4_Msk: u32 = 0x1 << TSC_IOCCR_G3_IO4_Pos;
pub const TSC_IOCCR_G3_IO4: u32 = TSC_IOCCR_G3_IO4_Msk;
pub const TSC_IOCCR_G4_IO1_Pos: u32 = 12;
pub const TSC_IOCCR_G4_IO1_Msk: u32 = 0x1 << TSC_IOCCR_G4_IO1_Pos;
pub const TSC_IOCCR_G4_IO1: u32 = TSC_IOCCR_G4_IO1_Msk;
pub const TSC_IOCCR_G4_IO2_Pos: u32 = 13;
pub const TSC_IOCCR_G4_IO2_Msk: u32 = 0x1 << TSC_IOCCR_G4_IO2_Pos;
pub const TSC_IOCCR_G4_IO2: u32 = TSC_IOCCR_G4_IO2_Msk;
pub const TSC_IOCCR_G4_IO3_Pos: u32 = 14;
pub const TSC_IOCCR_G4_IO3_Msk: u32 = 0x1 << TSC_IOCCR_G4_IO3_Pos;
pub const TSC_IOCCR_G4_IO3: u32 = TSC_IOCCR_G4_IO3_Msk;
pub const TSC_IOCCR_G4_IO4_Pos: u32 = 15;
pub const TSC_IOCCR_G4_IO4_Msk: u32 = 0x1 << TSC_IOCCR_G4_IO4_Pos;
pub const TSC_IOCCR_G4_IO4: u32 = TSC_IOCCR_G4_IO4_Msk;
pub const TSC_IOCCR_G5_IO1_Pos: u32 = 16;
pub const TSC_IOCCR_G5_IO1_Msk: u32 = 0x1 << TSC_IOCCR_G5_IO1_Pos;
pub const TSC_IOCCR_G5_IO1: u32 = TSC_IOCCR_G5_IO1_Msk;
pub const TSC_IOCCR_G5_IO2_Pos: u32 = 17;
pub const TSC_IOCCR_G5_IO2_Msk: u32 = 0x1 << TSC_IOCCR_G5_IO2_Pos;
pub const TSC_IOCCR_G5_IO2: u32 = TSC_IOCCR_G5_IO2_Msk;
pub const TSC_IOCCR_G5_IO3_Pos: u32 = 18;
pub const TSC_IOCCR_G5_IO3_Msk: u32 = 0x1 << TSC_IOCCR_G5_IO3_Pos;
pub const TSC_IOCCR_G5_IO3: u32 = TSC_IOCCR_G5_IO3_Msk;
pub const TSC_IOCCR_G5_IO4_Pos: u32 = 19;
pub const TSC_IOCCR_G5_IO4_Msk: u32 = 0x1 << TSC_IOCCR_G5_IO4_Pos;
pub const TSC_IOCCR_G5_IO4: u32 = TSC_IOCCR_G5_IO4_Msk;
pub const TSC_IOCCR_G6_IO1_Pos: u32 = 20;
pub const TSC_IOCCR_G6_IO1_Msk: u32 = 0x1 << TSC_IOCCR_G6_IO1_Pos;
pub const TSC_IOCCR_G6_IO1: u32 = TSC_IOCCR_G6_IO1_Msk;
pub const TSC_IOCCR_G6_IO2_Pos: u32 = 21;
pub const TSC_IOCCR_G6_IO2_Msk: u32 = 0x1 << TSC_IOCCR_G6_IO2_Pos;
pub const TSC_IOCCR_G6_IO2: u32 = TSC_IOCCR_G6_IO2_Msk;
pub const TSC_IOCCR_G6_IO3_Pos: u32 = 22;
pub const TSC_IOCCR_G6_IO3_Msk: u32 = 0x1 << TSC_IOCCR_G6_IO3_Pos;
pub const TSC_IOCCR_G6_IO3: u32 = TSC_IOCCR_G6_IO3_Msk;
pub const TSC_IOCCR_G6_IO4_Pos: u32 = 23;
pub const TSC_IOCCR_G6_IO4_Msk: u32 = 0x1 << TSC_IOCCR_G6_IO4_Pos;
pub const TSC_IOCCR_G6_IO4: u32 = TSC_IOCCR_G6_IO4_Msk;
pub const TSC_IOCCR_G7_IO1_Pos: u32 = 24;
pub const TSC_IOCCR_G7_IO1_Msk: u32 = 0x1 << TSC_IOCCR_G7_IO1_Pos;
pub const TSC_IOCCR_G7_IO1: u32 = TSC_IOCCR_G7_IO1_Msk;
pub const TSC_IOCCR_G7_IO2_Pos: u32 = 25;
pub const TSC_IOCCR_G7_IO2_Msk: u32 = 0x1 << TSC_IOCCR_G7_IO2_Pos;
pub const TSC_IOCCR_G7_IO2: u32 = TSC_IOCCR_G7_IO2_Msk;
pub const TSC_IOCCR_G7_IO3_Pos: u32 = 26;
pub const TSC_IOCCR_G7_IO3_Msk: u32 = 0x1 << TSC_IOCCR_G7_IO3_Pos;
pub const TSC_IOCCR_G7_IO3: u32 = TSC_IOCCR_G7_IO3_Msk;
pub const TSC_IOCCR_G7_IO4_Pos: u32 = 27;
pub const TSC_IOCCR_G7_IO4_Msk: u32 = 0x1 << TSC_IOCCR_G7_IO4_Pos;
pub const TSC_IOCCR_G7_IO4: u32 = TSC_IOCCR_G7_IO4_Msk;
pub const TSC_IOCCR_G8_IO1_Pos: u32 = 28;
pub const TSC_IOCCR_G8_IO1_Msk: u32 = 0x1 << TSC_IOCCR_G8_IO1_Pos;
pub const TSC_IOCCR_G8_IO1: u32 = TSC_IOCCR_G8_IO1_Msk;
pub const TSC_IOCCR_G8_IO2_Pos: u32 = 29;
pub const TSC_IOCCR_G8_IO2_Msk: u32 = 0x1 << TSC_IOCCR_G8_IO2_Pos;
pub const TSC_IOCCR_G8_IO2: u32 = TSC_IOCCR_G8_IO2_Msk;
pub const TSC_IOCCR_G8_IO3_Pos: u32 = 30;
pub const TSC_IOCCR_G8_IO3_Msk: u32 = 0x1 << TSC_IOCCR_G8_IO3_Pos;
pub const TSC_IOCCR_G8_IO3: u32 = TSC_IOCCR_G8_IO3_Msk;
pub const TSC_IOCCR_G8_IO4_Pos: u32 = 31;
pub const TSC_IOCCR_G8_IO4_Msk: u32 = 0x1 << TSC_IOCCR_G8_IO4_Pos;
pub const TSC_IOCCR_G8_IO4: u32 = TSC_IOCCR_G8_IO4_Msk;
pub const TSC_IOGCSR_G1E_Pos: u32 = 0;
pub const TSC_IOGCSR_G1E_Msk: u32 = 0x1 << TSC_IOGCSR_G1E_Pos;
pub const TSC_IOGCSR_G1E: u32 = TSC_IOGCSR_G1E_Msk;
pub const TSC_IOGCSR_G2E_Pos: u32 = 1;
pub const TSC_IOGCSR_G2E_Msk: u32 = 0x1 << TSC_IOGCSR_G2E_Pos;
pub const TSC_IOGCSR_G2E: u32 = TSC_IOGCSR_G2E_Msk;
pub const TSC_IOGCSR_G3E_Pos: u32 = 2;
pub const TSC_IOGCSR_G3E_Msk: u32 = 0x1 << TSC_IOGCSR_G3E_Pos;
pub const TSC_IOGCSR_G3E: u32 = TSC_IOGCSR_G3E_Msk;
pub const TSC_IOGCSR_G4E_Pos: u32 = 3;
pub const TSC_IOGCSR_G4E_Msk: u32 = 0x1 << TSC_IOGCSR_G4E_Pos;
pub const TSC_IOGCSR_G4E: u32 = TSC_IOGCSR_G4E_Msk;
pub const TSC_IOGCSR_G5E_Pos: u32 = 4;
pub const TSC_IOGCSR_G5E_Msk: u32 = 0x1 << TSC_IOGCSR_G5E_Pos;
pub const TSC_IOGCSR_G5E: u32 = TSC_IOGCSR_G5E_Msk;
pub const TSC_IOGCSR_G6E_Pos: u32 = 5;
pub const TSC_IOGCSR_G6E_Msk: u32 = 0x1 << TSC_IOGCSR_G6E_Pos;
pub const TSC_IOGCSR_G6E: u32 = TSC_IOGCSR_G6E_Msk;
pub const TSC_IOGCSR_G7E_Pos: u32 = 6;
pub const TSC_IOGCSR_G7E_Msk: u32 = 0x1 << TSC_IOGCSR_G7E_Pos;
pub const TSC_IOGCSR_G7E: u32 = TSC_IOGCSR_G7E_Msk;
pub const TSC_IOGCSR_G8E_Pos: u32 = 7;
pub const TSC_IOGCSR_G8E_Msk: u32 = 0x1 << TSC_IOGCSR_G8E_Pos;
pub const TSC_IOGCSR_G8E: u32 = TSC_IOGCSR_G8E_Msk;
pub const TSC_IOGCSR_G1S_Pos: u32 = 16;
pub const TSC_IOGCSR_G1S_Msk: u32 = 0x1 << TSC_IOGCSR_G1S_Pos;
pub const TSC_IOGCSR_G1S: u32 = TSC_IOGCSR_G1S_Msk;
pub const TSC_IOGCSR_G2S_Pos: u32 = 17;
pub const TSC_IOGCSR_G2S_Msk: u32 = 0x1 << TSC_IOGCSR_G2S_Pos;
pub const TSC_IOGCSR_G2S: u32 = TSC_IOGCSR_G2S_Msk;
pub const TSC_IOGCSR_G3S_Pos: u32 = 18;
pub const TSC_IOGCSR_G3S_Msk: u32 = 0x1 << TSC_IOGCSR_G3S_Pos;
pub const TSC_IOGCSR_G3S: u32 = TSC_IOGCSR_G3S_Msk;
pub const TSC_IOGCSR_G4S_Pos: u32 = 19;
pub const TSC_IOGCSR_G4S_Msk: u32 = 0x1 << TSC_IOGCSR_G4S_Pos;
pub const TSC_IOGCSR_G4S: u32 = TSC_IOGCSR_G4S_Msk;
pub const TSC_IOGCSR_G5S_Pos: u32 = 20;
pub const TSC_IOGCSR_G5S_Msk: u32 = 0x1 << TSC_IOGCSR_G5S_Pos;
pub const TSC_IOGCSR_G5S: u32 = TSC_IOGCSR_G5S_Msk;
pub const TSC_IOGCSR_G6S_Pos: u32 = 21;
pub const TSC_IOGCSR_G6S_Msk: u32 = 0x1 << TSC_IOGCSR_G6S_Pos;
pub const TSC_IOGCSR_G6S: u32 = TSC_IOGCSR_G6S_Msk;
pub const TSC_IOGCSR_G7S_Pos: u32 = 22;
pub const TSC_IOGCSR_G7S_Msk: u32 = 0x1 << TSC_IOGCSR_G7S_Pos;
pub const TSC_IOGCSR_G7S: u32 = TSC_IOGCSR_G7S_Msk;
pub const TSC_IOGCSR_G8S_Pos: u32 = 23;
pub const TSC_IOGCSR_G8S_Msk: u32 = 0x1 << TSC_IOGCSR_G8S_Pos;
pub const TSC_IOGCSR_G8S: u32 = TSC_IOGCSR_G8S_Msk;
pub const TSC_IOGXCR_CNT_Pos: u32 = 0;
pub const TSC_IOGXCR_CNT_Msk: u32 = 0x3FFF << TSC_IOGXCR_CNT_Pos;
pub const TSC_IOGXCR_CNT: u32 = TSC_IOGXCR_CNT_Msk;
pub const USART_CR1_UE_Pos: u32 = 0;
pub const USART_CR1_UE_Msk: u32 = 0x1 << USART_CR1_UE_Pos;
pub const USART_CR1_UE: u32 = USART_CR1_UE_Msk;
pub const USART_CR1_UESM_Pos: u32 = 1;
pub const USART_CR1_UESM_Msk: u32 = 0x1 << USART_CR1_UESM_Pos;
pub const USART_CR1_UESM: u32 = USART_CR1_UESM_Msk;
pub const USART_CR1_RE_Pos: u32 = 2;
pub const USART_CR1_RE_Msk: u32 = 0x1 << USART_CR1_RE_Pos;
pub const USART_CR1_RE: u32 = USART_CR1_RE_Msk;
pub const USART_CR1_TE_Pos: u32 = 3;
pub const USART_CR1_TE_Msk: u32 = 0x1 << USART_CR1_TE_Pos;
pub const USART_CR1_TE: u32 = USART_CR1_TE_Msk;
pub const USART_CR1_IDLEIE_Pos: u32 = 4;
pub const USART_CR1_IDLEIE_Msk: u32 = 0x1 << USART_CR1_IDLEIE_Pos;
pub const USART_CR1_IDLEIE: u32 = USART_CR1_IDLEIE_Msk;
pub const USART_CR1_RXNEIE_Pos: u32 = 5;
pub const USART_CR1_RXNEIE_Msk: u32 = 0x1 << USART_CR1_RXNEIE_Pos;
pub const USART_CR1_RXNEIE: u32 = USART_CR1_RXNEIE_Msk;
pub const USART_CR1_TCIE_Pos: u32 = 6;
pub const USART_CR1_TCIE_Msk: u32 = 0x1 << USART_CR1_TCIE_Pos;
pub const USART_CR1_TCIE: u32 = USART_CR1_TCIE_Msk;
pub const USART_CR1_TXEIE_Pos: u32 = 7;
pub const USART_CR1_TXEIE_Msk: u32 = 0x1 << USART_CR1_TXEIE_Pos;
pub const USART_CR1_TXEIE: u32 = USART_CR1_TXEIE_Msk;
pub const USART_CR1_PEIE_Pos: u32 = 8;
pub const USART_CR1_PEIE_Msk: u32 = 0x1 << USART_CR1_PEIE_Pos;
pub const USART_CR1_PEIE: u32 = USART_CR1_PEIE_Msk;
pub const USART_CR1_PS_Pos: u32 = 9;
pub const USART_CR1_PS_Msk: u32 = 0x1 << USART_CR1_PS_Pos;
pub const USART_CR1_PS: u32 = USART_CR1_PS_Msk;
pub const USART_CR1_PCE_Pos: u32 = 10;
pub const USART_CR1_PCE_Msk: u32 = 0x1 << USART_CR1_PCE_Pos;
pub const USART_CR1_PCE: u32 = USART_CR1_PCE_Msk;
pub const USART_CR1_WAKE_Pos: u32 = 11;
pub const USART_CR1_WAKE_Msk: u32 = 0x1 << USART_CR1_WAKE_Pos;
pub const USART_CR1_WAKE: u32 = USART_CR1_WAKE_Msk;
pub const USART_CR1_M_Pos: u32 = 12;
pub const USART_CR1_M_Msk: u32 = 0x10001 << USART_CR1_M_Pos;
pub const USART_CR1_M: u32 = USART_CR1_M_Msk;
pub const USART_CR1_M0_Pos: u32 = 12;
pub const USART_CR1_M0_Msk: u32 = 0x1 << USART_CR1_M0_Pos;
pub const USART_CR1_M0: u32 = USART_CR1_M0_Msk;
pub const USART_CR1_MME_Pos: u32 = 13;
pub const USART_CR1_MME_Msk: u32 = 0x1 << USART_CR1_MME_Pos;
pub const USART_CR1_MME: u32 = USART_CR1_MME_Msk;
pub const USART_CR1_CMIE_Pos: u32 = 14;
pub const USART_CR1_CMIE_Msk: u32 = 0x1 << USART_CR1_CMIE_Pos;
pub const USART_CR1_CMIE: u32 = USART_CR1_CMIE_Msk;
pub const USART_CR1_OVER8_Pos: u32 = 15;
pub const USART_CR1_OVER8_Msk: u32 = 0x1 << USART_CR1_OVER8_Pos;
pub const USART_CR1_OVER8: u32 = USART_CR1_OVER8_Msk;
pub const USART_CR1_DEDT_Pos: u32 = 16;
pub const USART_CR1_DEDT_Msk: u32 = 0x1F << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT: u32 = USART_CR1_DEDT_Msk;
pub const USART_CR1_DEDT_0: u32 = 0x01 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_1: u32 = 0x02 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_2: u32 = 0x04 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_3: u32 = 0x08 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEDT_4: u32 = 0x10 << USART_CR1_DEDT_Pos;
pub const USART_CR1_DEAT_Pos: u32 = 21;
pub const USART_CR1_DEAT_Msk: u32 = 0x1F << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT: u32 = USART_CR1_DEAT_Msk;
pub const USART_CR1_DEAT_0: u32 = 0x01 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_1: u32 = 0x02 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_2: u32 = 0x04 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_3: u32 = 0x08 << USART_CR1_DEAT_Pos;
pub const USART_CR1_DEAT_4: u32 = 0x10 << USART_CR1_DEAT_Pos;
pub const USART_CR1_RTOIE_Pos: u32 = 26;
pub const USART_CR1_RTOIE_Msk: u32 = 0x1 << USART_CR1_RTOIE_Pos;
pub const USART_CR1_RTOIE: u32 = USART_CR1_RTOIE_Msk;
pub const USART_CR1_EOBIE_Pos: u32 = 27;
pub const USART_CR1_EOBIE_Msk: u32 = 0x1 << USART_CR1_EOBIE_Pos;
pub const USART_CR1_EOBIE: u32 = USART_CR1_EOBIE_Msk;
pub const USART_CR1_M1_Pos: u32 = 28;
pub const USART_CR1_M1_Msk: u32 = 0x1 << USART_CR1_M1_Pos;
pub const USART_CR1_M1: u32 = USART_CR1_M1_Msk;
pub const USART_CR2_ADDM7_Pos: u32 = 4;
pub const USART_CR2_ADDM7_Msk: u32 = 0x1 << USART_CR2_ADDM7_Pos;
pub const USART_CR2_ADDM7: u32 = USART_CR2_ADDM7_Msk;
pub const USART_CR2_LBDL_Pos: u32 = 5;
pub const USART_CR2_LBDL_Msk: u32 = 0x1 << USART_CR2_LBDL_Pos;
pub const USART_CR2_LBDL: u32 = USART_CR2_LBDL_Msk;
pub const USART_CR2_LBDIE_Pos: u32 = 6;
pub const USART_CR2_LBDIE_Msk: u32 = 0x1 << USART_CR2_LBDIE_Pos;
pub const USART_CR2_LBDIE: u32 = USART_CR2_LBDIE_Msk;
pub const USART_CR2_LBCL_Pos: u32 = 8;
pub const USART_CR2_LBCL_Msk: u32 = 0x1 << USART_CR2_LBCL_Pos;
pub const USART_CR2_LBCL: u32 = USART_CR2_LBCL_Msk;
pub const USART_CR2_CPHA_Pos: u32 = 9;
pub const USART_CR2_CPHA_Msk: u32 = 0x1 << USART_CR2_CPHA_Pos;
pub const USART_CR2_CPHA: u32 = USART_CR2_CPHA_Msk;
pub const USART_CR2_CPOL_Pos: u32 = 10;
pub const USART_CR2_CPOL_Msk: u32 = 0x1 << USART_CR2_CPOL_Pos;
pub const USART_CR2_CPOL: u32 = USART_CR2_CPOL_Msk;
pub const USART_CR2_CLKEN_Pos: u32 = 11;
pub const USART_CR2_CLKEN_Msk: u32 = 0x1 << USART_CR2_CLKEN_Pos;
pub const USART_CR2_CLKEN: u32 = USART_CR2_CLKEN_Msk;
pub const USART_CR2_STOP_Pos: u32 = 12;
pub const USART_CR2_STOP_Msk: u32 = 0x3 << USART_CR2_STOP_Pos;
pub const USART_CR2_STOP: u32 = USART_CR2_STOP_Msk;
pub const USART_CR2_STOP_0: u32 = 0x1 << USART_CR2_STOP_Pos;
pub const USART_CR2_STOP_1: u32 = 0x2 << USART_CR2_STOP_Pos;
pub const USART_CR2_LINEN_Pos: u32 = 14;
pub const USART_CR2_LINEN_Msk: u32 = 0x1 << USART_CR2_LINEN_Pos;
pub const USART_CR2_LINEN: u32 = USART_CR2_LINEN_Msk;
pub const USART_CR2_SWAP_Pos: u32 = 15;
pub const USART_CR2_SWAP_Msk: u32 = 0x1 << USART_CR2_SWAP_Pos;
pub const USART_CR2_SWAP: u32 = USART_CR2_SWAP_Msk;
pub const USART_CR2_RXINV_Pos: u32 = 16;
pub const USART_CR2_RXINV_Msk: u32 = 0x1 << USART_CR2_RXINV_Pos;
pub const USART_CR2_RXINV: u32 = USART_CR2_RXINV_Msk;
pub const USART_CR2_TXINV_Pos: u32 = 17;
pub const USART_CR2_TXINV_Msk: u32 = 0x1 << USART_CR2_TXINV_Pos;
pub const USART_CR2_TXINV: u32 = USART_CR2_TXINV_Msk;
pub const USART_CR2_DATAINV_Pos: u32 = 18;
pub const USART_CR2_DATAINV_Msk: u32 = 0x1 << USART_CR2_DATAINV_Pos;
pub const USART_CR2_DATAINV: u32 = USART_CR2_DATAINV_Msk;
pub const USART_CR2_MSBFIRST_Pos: u32 = 19;
pub const USART_CR2_MSBFIRST_Msk: u32 = 0x1 << USART_CR2_MSBFIRST_Pos;
pub const USART_CR2_MSBFIRST: u32 = USART_CR2_MSBFIRST_Msk;
pub const USART_CR2_ABREN_Pos: u32 = 20;
pub const USART_CR2_ABREN_Msk: u32 = 0x1 << USART_CR2_ABREN_Pos;
pub const USART_CR2_ABREN: u32 = USART_CR2_ABREN_Msk;
pub const USART_CR2_ABRMODE_Pos: u32 = 21;
pub const USART_CR2_ABRMODE_Msk: u32 = 0x3 << USART_CR2_ABRMODE_Pos;
pub const USART_CR2_ABRMODE: u32 = USART_CR2_ABRMODE_Msk;
pub const USART_CR2_ABRMODE_0: u32 = 0x1 << USART_CR2_ABRMODE_Pos;
pub const USART_CR2_ABRMODE_1: u32 = 0x2 << USART_CR2_ABRMODE_Pos;
pub const USART_CR2_RTOEN_Pos: u32 = 23;
pub const USART_CR2_RTOEN_Msk: u32 = 0x1 << USART_CR2_RTOEN_Pos;
pub const USART_CR2_RTOEN: u32 = USART_CR2_RTOEN_Msk;
pub const USART_CR2_ADD_Pos: u32 = 24;
pub const USART_CR2_ADD_Msk: u32 = 0xFF << USART_CR2_ADD_Pos;
pub const USART_CR2_ADD: u32 = USART_CR2_ADD_Msk;
pub const USART_CR3_EIE_Pos: u32 = 0;
pub const USART_CR3_EIE_Msk: u32 = 0x1 << USART_CR3_EIE_Pos;
pub const USART_CR3_EIE: u32 = USART_CR3_EIE_Msk;
pub const USART_CR3_IREN_Pos: u32 = 1;
pub const USART_CR3_IREN_Msk: u32 = 0x1 << USART_CR3_IREN_Pos;
pub const USART_CR3_IREN: u32 = USART_CR3_IREN_Msk;
pub const USART_CR3_IRLP_Pos: u32 = 2;
pub const USART_CR3_IRLP_Msk: u32 = 0x1 << USART_CR3_IRLP_Pos;
pub const USART_CR3_IRLP: u32 = USART_CR3_IRLP_Msk;
pub const USART_CR3_HDSEL_Pos: u32 = 3;
pub const USART_CR3_HDSEL_Msk: u32 = 0x1 << USART_CR3_HDSEL_Pos;
pub const USART_CR3_HDSEL: u32 = USART_CR3_HDSEL_Msk;
pub const USART_CR3_NACK_Pos: u32 = 4;
pub const USART_CR3_NACK_Msk: u32 = 0x1 << USART_CR3_NACK_Pos;
pub const USART_CR3_NACK: u32 = USART_CR3_NACK_Msk;
pub const USART_CR3_SCEN_Pos: u32 = 5;
pub const USART_CR3_SCEN_Msk: u32 = 0x1 << USART_CR3_SCEN_Pos;
pub const USART_CR3_SCEN: u32 = USART_CR3_SCEN_Msk;
pub const USART_CR3_DMAR_Pos: u32 = 6;
pub const USART_CR3_DMAR_Msk: u32 = 0x1 << USART_CR3_DMAR_Pos;
pub const USART_CR3_DMAR: u32 = USART_CR3_DMAR_Msk;
pub const USART_CR3_DMAT_Pos: u32 = 7;
pub const USART_CR3_DMAT_Msk: u32 = 0x1 << USART_CR3_DMAT_Pos;
pub const USART_CR3_DMAT: u32 = USART_CR3_DMAT_Msk;
pub const USART_CR3_RTSE_Pos: u32 = 8;
pub const USART_CR3_RTSE_Msk: u32 = 0x1 << USART_CR3_RTSE_Pos;
pub const USART_CR3_RTSE: u32 = USART_CR3_RTSE_Msk;
pub const USART_CR3_CTSE_Pos: u32 = 9;
pub const USART_CR3_CTSE_Msk: u32 = 0x1 << USART_CR3_CTSE_Pos;
pub const USART_CR3_CTSE: u32 = USART_CR3_CTSE_Msk;
pub const USART_CR3_CTSIE_Pos: u32 = 10;
pub const USART_CR3_CTSIE_Msk: u32 = 0x1 << USART_CR3_CTSIE_Pos;
pub const USART_CR3_CTSIE: u32 = USART_CR3_CTSIE_Msk;
pub const USART_CR3_ONEBIT_Pos: u32 = 11;
pub const USART_CR3_ONEBIT_Msk: u32 = 0x1 << USART_CR3_ONEBIT_Pos;
pub const USART_CR3_ONEBIT: u32 = USART_CR3_ONEBIT_Msk;
pub const USART_CR3_OVRDIS_Pos: u32 = 12;
pub const USART_CR3_OVRDIS_Msk: u32 = 0x1 << USART_CR3_OVRDIS_Pos;
pub const USART_CR3_OVRDIS: u32 = USART_CR3_OVRDIS_Msk;
pub const USART_CR3_DDRE_Pos: u32 = 13;
pub const USART_CR3_DDRE_Msk: u32 = 0x1 << USART_CR3_DDRE_Pos;
pub const USART_CR3_DDRE: u32 = USART_CR3_DDRE_Msk;
pub const USART_CR3_DEM_Pos: u32 = 14;
pub const USART_CR3_DEM_Msk: u32 = 0x1 << USART_CR3_DEM_Pos;
pub const USART_CR3_DEM: u32 = USART_CR3_DEM_Msk;
pub const USART_CR3_DEP_Pos: u32 = 15;
pub const USART_CR3_DEP_Msk: u32 = 0x1 << USART_CR3_DEP_Pos;
pub const USART_CR3_DEP: u32 = USART_CR3_DEP_Msk;
pub const USART_CR3_SCARCNT_Pos: u32 = 17;
pub const USART_CR3_SCARCNT_Msk: u32 = 0x7 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_SCARCNT: u32 = USART_CR3_SCARCNT_Msk;
pub const USART_CR3_SCARCNT_0: u32 = 0x1 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_SCARCNT_1: u32 = 0x2 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_SCARCNT_2: u32 = 0x4 << USART_CR3_SCARCNT_Pos;
pub const USART_CR3_WUS_Pos: u32 = 20;
pub const USART_CR3_WUS_Msk: u32 = 0x3 << USART_CR3_WUS_Pos;
pub const USART_CR3_WUS: u32 = USART_CR3_WUS_Msk;
pub const USART_CR3_WUS_0: u32 = 0x1 << USART_CR3_WUS_Pos;
pub const USART_CR3_WUS_1: u32 = 0x2 << USART_CR3_WUS_Pos;
pub const USART_CR3_WUFIE_Pos: u32 = 22;
pub const USART_CR3_WUFIE_Msk: u32 = 0x1 << USART_CR3_WUFIE_Pos;
pub const USART_CR3_WUFIE: u32 = USART_CR3_WUFIE_Msk;
pub const USART_CR3_UCESM_Pos: u32 = 23;
pub const USART_CR3_UCESM_Msk: u32 = 0x1 << USART_CR3_UCESM_Pos;
pub const USART_CR3_UCESM: u32 = USART_CR3_UCESM_Msk;
pub const USART_BRR_DIV_FRACTION_Pos: u32 = 0;
pub const USART_BRR_DIV_FRACTION_Msk: u32 = 0xF << USART_BRR_DIV_FRACTION_Pos;
pub const USART_BRR_DIV_FRACTION: u32 = USART_BRR_DIV_FRACTION_Msk;
pub const USART_BRR_DIV_MANTISSA_Pos: u32 = 4;
pub const USART_BRR_DIV_MANTISSA_Msk: u32 = 0xFFF << USART_BRR_DIV_MANTISSA_Pos;
pub const USART_BRR_DIV_MANTISSA: u32 = USART_BRR_DIV_MANTISSA_Msk;
pub const USART_GTPR_PSC_Pos: u32 = 0;
pub const USART_GTPR_PSC_Msk: u32 = 0xFF << USART_GTPR_PSC_Pos;
pub const USART_GTPR_PSC: u32 = USART_GTPR_PSC_Msk;
pub const USART_GTPR_GT_Pos: u32 = 8;
pub const USART_GTPR_GT_Msk: u32 = 0xFF << USART_GTPR_GT_Pos;
pub const USART_GTPR_GT: u32 = USART_GTPR_GT_Msk;
pub const USART_RTOR_RTO_Pos: u32 = 0;
pub const USART_RTOR_RTO_Msk: u32 = 0xFFFFFF << USART_RTOR_RTO_Pos;
pub const USART_RTOR_RTO: u32 = USART_RTOR_RTO_Msk;
pub const USART_RTOR_BLEN_Pos: u32 = 24;
pub const USART_RTOR_BLEN_Msk: u32 = 0xFF << USART_RTOR_BLEN_Pos;
pub const USART_RTOR_BLEN: u32 = USART_RTOR_BLEN_Msk;
pub const USART_RQR_ABRRQ_Pos: u32 = 0;
pub const USART_RQR_ABRRQ_Msk: u32 = 0x1 << USART_RQR_ABRRQ_Pos;
pub const USART_RQR_ABRRQ: u32 = USART_RQR_ABRRQ_Msk;
pub const USART_RQR_SBKRQ_Pos: u32 = 1;
pub const USART_RQR_SBKRQ_Msk: u32 = 0x1 << USART_RQR_SBKRQ_Pos;
pub const USART_RQR_SBKRQ: u32 = USART_RQR_SBKRQ_Msk;
pub const USART_RQR_MMRQ_Pos: u32 = 2;
pub const USART_RQR_MMRQ_Msk: u32 = 0x1 << USART_RQR_MMRQ_Pos;
pub const USART_RQR_MMRQ: u32 = USART_RQR_MMRQ_Msk;
pub const USART_RQR_RXFRQ_Pos: u32 = 3;
pub const USART_RQR_RXFRQ_Msk: u32 = 0x1 << USART_RQR_RXFRQ_Pos;
pub const USART_RQR_RXFRQ: u32 = USART_RQR_RXFRQ_Msk;
pub const USART_RQR_TXFRQ_Pos: u32 = 4;
pub const USART_RQR_TXFRQ_Msk: u32 = 0x1 << USART_RQR_TXFRQ_Pos;
pub const USART_RQR_TXFRQ: u32 = USART_RQR_TXFRQ_Msk;
pub const USART_ISR_PE_Pos: u32 = 0;
pub const USART_ISR_PE_Msk: u32 = 0x1 << USART_ISR_PE_Pos;
pub const USART_ISR_PE: u32 = USART_ISR_PE_Msk;
pub const USART_ISR_FE_Pos: u32 = 1;
pub const USART_ISR_FE_Msk: u32 = 0x1 << USART_ISR_FE_Pos;
pub const USART_ISR_FE: u32 = USART_ISR_FE_Msk;
pub const USART_ISR_NE_Pos: u32 = 2;
pub const USART_ISR_NE_Msk: u32 = 0x1 << USART_ISR_NE_Pos;
pub const USART_ISR_NE: u32 = USART_ISR_NE_Msk;
pub const USART_ISR_ORE_Pos: u32 = 3;
pub const USART_ISR_ORE_Msk: u32 = 0x1 << USART_ISR_ORE_Pos;
pub const USART_ISR_ORE: u32 = USART_ISR_ORE_Msk;
pub const USART_ISR_IDLE_Pos: u32 = 4;
pub const USART_ISR_IDLE_Msk: u32 = 0x1 << USART_ISR_IDLE_Pos;
pub const USART_ISR_IDLE: u32 = USART_ISR_IDLE_Msk;
pub const USART_ISR_RXNE_Pos: u32 = 5;
pub const USART_ISR_RXNE_Msk: u32 = 0x1 << USART_ISR_RXNE_Pos;
pub const USART_ISR_RXNE: u32 = USART_ISR_RXNE_Msk;
pub const USART_ISR_TC_Pos: u32 = 6;
pub const USART_ISR_TC_Msk: u32 = 0x1 << USART_ISR_TC_Pos;
pub const USART_ISR_TC: u32 = USART_ISR_TC_Msk;
pub const USART_ISR_TXE_Pos: u32 = 7;
pub const USART_ISR_TXE_Msk: u32 = 0x1 << USART_ISR_TXE_Pos;
pub const USART_ISR_TXE: u32 = USART_ISR_TXE_Msk;
pub const USART_ISR_LBDF_Pos: u32 = 8;
pub const USART_ISR_LBDF_Msk: u32 = 0x1 << USART_ISR_LBDF_Pos;
pub const USART_ISR_LBDF: u32 = USART_ISR_LBDF_Msk;
pub const USART_ISR_CTSIF_Pos: u32 = 9;
pub const USART_ISR_CTSIF_Msk: u32 = 0x1 << USART_ISR_CTSIF_Pos;
pub const USART_ISR_CTSIF: u32 = USART_ISR_CTSIF_Msk;
pub const USART_ISR_CTS_Pos: u32 = 10;
pub const USART_ISR_CTS_Msk: u32 = 0x1 << USART_ISR_CTS_Pos;
pub const USART_ISR_CTS: u32 = USART_ISR_CTS_Msk;
pub const USART_ISR_RTOF_Pos: u32 = 11;
pub const USART_ISR_RTOF_Msk: u32 = 0x1 << USART_ISR_RTOF_Pos;
pub const USART_ISR_RTOF: u32 = USART_ISR_RTOF_Msk;
pub const USART_ISR_EOBF_Pos: u32 = 12;
pub const USART_ISR_EOBF_Msk: u32 = 0x1 << USART_ISR_EOBF_Pos;
pub const USART_ISR_EOBF: u32 = USART_ISR_EOBF_Msk;
pub const USART_ISR_ABRE_Pos: u32 = 14;
pub const USART_ISR_ABRE_Msk: u32 = 0x1 << USART_ISR_ABRE_Pos;
pub const USART_ISR_ABRE: u32 = USART_ISR_ABRE_Msk;
pub const USART_ISR_ABRF_Pos: u32 = 15;
pub const USART_ISR_ABRF_Msk: u32 = 0x1 << USART_ISR_ABRF_Pos;
pub const USART_ISR_ABRF: u32 = USART_ISR_ABRF_Msk;
pub const USART_ISR_BUSY_Pos: u32 = 16;
pub const USART_ISR_BUSY_Msk: u32 = 0x1 << USART_ISR_BUSY_Pos;
pub const USART_ISR_BUSY: u32 = USART_ISR_BUSY_Msk;
pub const USART_ISR_CMF_Pos: u32 = 17;
pub const USART_ISR_CMF_Msk: u32 = 0x1 << USART_ISR_CMF_Pos;
pub const USART_ISR_CMF: u32 = USART_ISR_CMF_Msk;
pub const USART_ISR_SBKF_Pos: u32 = 18;
pub const USART_ISR_SBKF_Msk: u32 = 0x1 << USART_ISR_SBKF_Pos;
pub const USART_ISR_SBKF: u32 = USART_ISR_SBKF_Msk;
pub const USART_ISR_RWU_Pos: u32 = 19;
pub const USART_ISR_RWU_Msk: u32 = 0x1 << USART_ISR_RWU_Pos;
pub const USART_ISR_RWU: u32 = USART_ISR_RWU_Msk;
pub const USART_ISR_WUF_Pos: u32 = 20;
pub const USART_ISR_WUF_Msk: u32 = 0x1 << USART_ISR_WUF_Pos;
pub const USART_ISR_WUF: u32 = USART_ISR_WUF_Msk;
pub const USART_ISR_TEACK_Pos: u32 = 21;
pub const USART_ISR_TEACK_Msk: u32 = 0x1 << USART_ISR_TEACK_Pos;
pub const USART_ISR_TEACK: u32 = USART_ISR_TEACK_Msk;
pub const USART_ISR_REACK_Pos: u32 = 22;
pub const USART_ISR_REACK_Msk: u32 = 0x1 << USART_ISR_REACK_Pos;
pub const USART_ISR_REACK: u32 = USART_ISR_REACK_Msk;
pub const USART_ICR_PECF_Pos: u32 = 0;
pub const USART_ICR_PECF_Msk: u32 = 0x1 << USART_ICR_PECF_Pos;
pub const USART_ICR_PECF: u32 = USART_ICR_PECF_Msk;
pub const USART_ICR_FECF_Pos: u32 = 1;
pub const USART_ICR_FECF_Msk: u32 = 0x1 << USART_ICR_FECF_Pos;
pub const USART_ICR_FECF: u32 = USART_ICR_FECF_Msk;
pub const USART_ICR_NCF_Pos: u32 = 2;
pub const USART_ICR_NCF_Msk: u32 = 0x1 << USART_ICR_NCF_Pos;
pub const USART_ICR_NCF: u32 = USART_ICR_NCF_Msk;
pub const USART_ICR_ORECF_Pos: u32 = 3;
pub const USART_ICR_ORECF_Msk: u32 = 0x1 << USART_ICR_ORECF_Pos;
pub const USART_ICR_ORECF: u32 = USART_ICR_ORECF_Msk;
pub const USART_ICR_IDLECF_Pos: u32 = 4;
pub const USART_ICR_IDLECF_Msk: u32 = 0x1 << USART_ICR_IDLECF_Pos;
pub const USART_ICR_IDLECF: u32 = USART_ICR_IDLECF_Msk;
pub const USART_ICR_TCCF_Pos: u32 = 6;
pub const USART_ICR_TCCF_Msk: u32 = 0x1 << USART_ICR_TCCF_Pos;
pub const USART_ICR_TCCF: u32 = USART_ICR_TCCF_Msk;
pub const USART_ICR_LBDCF_Pos: u32 = 8;
pub const USART_ICR_LBDCF_Msk: u32 = 0x1 << USART_ICR_LBDCF_Pos;
pub const USART_ICR_LBDCF: u32 = USART_ICR_LBDCF_Msk;
pub const USART_ICR_CTSCF_Pos: u32 = 9;
pub const USART_ICR_CTSCF_Msk: u32 = 0x1 << USART_ICR_CTSCF_Pos;
pub const USART_ICR_CTSCF: u32 = USART_ICR_CTSCF_Msk;
pub const USART_ICR_RTOCF_Pos: u32 = 11;
pub const USART_ICR_RTOCF_Msk: u32 = 0x1 << USART_ICR_RTOCF_Pos;
pub const USART_ICR_RTOCF: u32 = USART_ICR_RTOCF_Msk;
pub const USART_ICR_EOBCF_Pos: u32 = 12;
pub const USART_ICR_EOBCF_Msk: u32 = 0x1 << USART_ICR_EOBCF_Pos;
pub const USART_ICR_EOBCF: u32 = USART_ICR_EOBCF_Msk;
pub const USART_ICR_CMCF_Pos: u32 = 17;
pub const USART_ICR_CMCF_Msk: u32 = 0x1 << USART_ICR_CMCF_Pos;
pub const USART_ICR_CMCF: u32 = USART_ICR_CMCF_Msk;
pub const USART_ICR_WUCF_Pos: u32 = 20;
pub const USART_ICR_WUCF_Msk: u32 = 0x1 << USART_ICR_WUCF_Pos;
pub const USART_ICR_WUCF: u32 = USART_ICR_WUCF_Msk;
pub const USART_ICR_NECF: u32 = USART_ICR_NCF;
pub const USART_RDR_RDR_Pos: u32 = 0;
pub const USART_RDR_RDR_Msk: u32 = 0x1FF << USART_RDR_RDR_Pos;
pub const USART_RDR_RDR: u32 = USART_RDR_RDR_Msk;
pub const USART_TDR_TDR_Pos: u32 = 0;
pub const USART_TDR_TDR_Msk: u32 = 0x1FF << USART_TDR_TDR_Pos;
pub const USART_TDR_TDR: u32 = USART_TDR_TDR_Msk;
pub const USB_BASE: u32 = 0x40005C00;
pub const USB_PMAADDR_Pos: u32 = 13;
pub const USB_PMAADDR_Msk: u32 = 0x20003 << USB_PMAADDR_Pos;
pub const USB_PMAADDR: u32 = USB_PMAADDR_Msk;
pub const USB_CNTR: u32 = USB_BASE + 0x40;
pub const USB_ISTR: u32 = USB_BASE + 0x44;
pub const USB_FNR: u32 = USB_BASE + 0x48;
pub const USB_DADDR: u32 = USB_BASE + 0x4C;
pub const USB_BTABLE: u32 = USB_BASE + 0x50;
pub const USB_LPMCSR: u32 = USB_BASE + 0x54;
pub const USB_BCDR: u32 = USB_BASE + 0x58;
pub const USB_ISTR_CTR: u32 = 0x8000;
pub const USB_ISTR_PMAOVR: u32 = 0x4000;
pub const USB_ISTR_ERR: u32 = 0x2000;
pub const USB_ISTR_WKUP: u32 = 0x1000;
pub const USB_ISTR_SUSP: u32 = 0x0800;
pub const USB_ISTR_RESET: u32 = 0x0400;
pub const USB_ISTR_SOF: u32 = 0x0200;
pub const USB_ISTR_ESOF: u32 = 0x0100;
pub const USB_ISTR_L1REQ: u32 = 0x0080;
pub const USB_ISTR_DIR: u32 = 0x0010;
pub const USB_ISTR_EP_ID: u32 = 0x000F;
pub const USB_CLR_CTR: u32 = !USB_ISTR_CTR;
pub const USB_CLR_PMAOVR: u32 = !USB_ISTR_PMAOVR;
pub const USB_CLR_ERR: u32 = !USB_ISTR_ERR;
pub const USB_CLR_WKUP: u32 = !USB_ISTR_WKUP;
pub const USB_CLR_SUSP: u32 = !USB_ISTR_SUSP;
pub const USB_CLR_RESET: u32 = !USB_ISTR_RESET;
pub const USB_CLR_SOF: u32 = !USB_ISTR_SOF;
pub const USB_CLR_ESOF: u32 = !USB_ISTR_ESOF;
pub const USB_CLR_L1REQ: u32 = !USB_ISTR_L1REQ;
pub const USB_CNTR_CTRM: u32 = 0x8000;
pub const USB_CNTR_PMAOVRM: u32 = 0x4000;
pub const USB_CNTR_ERRM: u32 = 0x2000;
pub const USB_CNTR_WKUPM: u32 = 0x1000;
pub const USB_CNTR_SUSPM: u32 = 0x0800;
pub const USB_CNTR_RESETM: u32 = 0x0400;
pub const USB_CNTR_SOFM: u32 = 0x0200;
pub const USB_CNTR_ESOFM: u32 = 0x0100;
pub const USB_CNTR_L1REQM: u32 = 0x0080;
pub const USB_CNTR_L1RESUME: u32 = 0x0020;
pub const USB_CNTR_RESUME: u32 = 0x0010;
pub const USB_CNTR_FSUSP: u32 = 0x0008;
pub const USB_CNTR_LPMODE: u32 = 0x0004;
pub const USB_CNTR_PDWN: u32 = 0x0002;
pub const USB_CNTR_FRES: u32 = 0x0001;
pub const USB_BCDR_DPPU: u32 = 0x8000;
pub const USB_BCDR_PS2DET: u32 = 0x0080;
pub const USB_BCDR_SDET: u32 = 0x0040;
pub const USB_BCDR_PDET: u32 = 0x0020;
pub const USB_BCDR_DCDET: u32 = 0x0010;
pub const USB_BCDR_SDEN: u32 = 0x0008;
pub const USB_BCDR_PDEN: u32 = 0x0004;
pub const USB_BCDR_DCDEN: u32 = 0x0002;
pub const USB_BCDR_BCDEN: u32 = 0x0001;
pub const USB_LPMCSR_BESL: u32 = 0x00F0;
pub const USB_LPMCSR_REMWAKE: u32 = 0x0008;
pub const USB_LPMCSR_LPMACK: u32 = 0x0002;
pub const USB_LPMCSR_LMPEN: u32 = 0x0001;
pub const USB_FNR_RXDP: u32 = 0x8000;
pub const USB_FNR_RXDM: u32 = 0x4000;
pub const USB_FNR_LCK: u32 = 0x2000;
pub const USB_FNR_LSOF: u32 = 0x1800;
pub const USB_FNR_FN: u32 = 0x07FF;
pub const USB_DADDR_EF: u32 = uint8_t0x80;
pub const USB_DADDR_ADD: u32 = uint8_t0x7F;
pub const USB_EP0R: u32 = USB_BASE;
pub const USB_EP1R: u32 = USB_BASE + 0x04;
pub const USB_EP2R: u32 = USB_BASE + 0x08;
pub const USB_EP3R: u32 = USB_BASE + 0x0C;
pub const USB_EP4R: u32 = USB_BASE + 0x10;
pub const USB_EP5R: u32 = USB_BASE + 0x14;
pub const USB_EP6R: u32 = USB_BASE + 0x18;
pub const USB_EP7R: u32 = USB_BASE + 0x1C;
pub const USB_EP_CTR_RX: u32 = 0x8000;
pub const USB_EP_DTOG_RX: u32 = 0x4000;
pub const USB_EPRX_STAT: u32 = 0x3000;
pub const USB_EP_SETUP: u32 = 0x0800;
pub const USB_EP_T_FIELD: u32 = 0x0600;
pub const USB_EP_KIND: u32 = 0x0100;
pub const USB_EP_CTR_TX: u32 = 0x0080;
pub const USB_EP_DTOG_TX: u32 = 0x0040;
pub const USB_EPTX_STAT: u32 = 0x0030;
pub const USB_EPADDR_FIELD: u32 = 0x000F;
pub const USB_EPREG_MASK: u32 =
    USB_EP_CTR_RX | USB_EP_SETUP | USB_EP_T_FIELD | USB_EP_KIND | USB_EP_CTR_TX | USB_EPADDR_FIELD;
pub const USB_EP_TYPE_MASK: u32 = 0x0600;
pub const USB_EP_BULK: u32 = 0x0000;
pub const USB_EP_CONTROL: u32 = 0x0200;
pub const USB_EP_ISOCHRONOUS: u32 = 0x0400;
pub const USB_EP_INTERRUPT: u32 = 0x0600;
pub const USB_EP_T_MASK: u32 = !USB_EP_T_FIELD & USB_EPREG_MASK;
pub const USB_EPKIND_MASK: u32 = !USB_EP_KIND & USB_EPREG_MASK;
pub const USB_EP_TX_DIS: u32 = 0x0000;
pub const USB_EP_TX_STALL: u32 = 0x0010;
pub const USB_EP_TX_NAK: u32 = 0x0020;
pub const USB_EP_TX_VALID: u32 = 0x0030;
pub const USB_EPTX_DTOG1: u32 = 0x0010;
pub const USB_EPTX_DTOG2: u32 = 0x0020;
pub const USB_EPTX_DTOGMASK: u32 = USB_EPTX_STAT | USB_EPREG_MASK;
pub const USB_EP_RX_DIS: u32 = 0x0000;
pub const USB_EP_RX_STALL: u32 = 0x1000;
pub const USB_EP_RX_NAK: u32 = 0x2000;
pub const USB_EP_RX_VALID: u32 = 0x3000;
pub const USB_EPRX_DTOG1: u32 = 0x1000;
pub const USB_EPRX_DTOG2: u32 = 0x2000;
pub const USB_EPRX_DTOGMASK: u32 = USB_EPRX_STAT | USB_EPREG_MASK;
pub const WWDG_CR_T_Pos: u32 = 0;
pub const WWDG_CR_T_Msk: u32 = 0x7F << WWDG_CR_T_Pos;
pub const WWDG_CR_T: u32 = WWDG_CR_T_Msk;
pub const WWDG_CR_T_0: u32 = 0x01 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_1: u32 = 0x02 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_2: u32 = 0x04 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_3: u32 = 0x08 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_4: u32 = 0x10 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_5: u32 = 0x20 << WWDG_CR_T_Pos;
pub const WWDG_CR_T_6: u32 = 0x40 << WWDG_CR_T_Pos;
pub const WWDG_CR_T0: u32 = WWDG_CR_T_0;
pub const WWDG_CR_T1: u32 = WWDG_CR_T_1;
pub const WWDG_CR_T2: u32 = WWDG_CR_T_2;
pub const WWDG_CR_T3: u32 = WWDG_CR_T_3;
pub const WWDG_CR_T4: u32 = WWDG_CR_T_4;
pub const WWDG_CR_T5: u32 = WWDG_CR_T_5;
pub const WWDG_CR_T6: u32 = WWDG_CR_T_6;
pub const WWDG_CR_WDGA_Pos: u32 = 7;
pub const WWDG_CR_WDGA_Msk: u32 = 0x1 << WWDG_CR_WDGA_Pos;
pub const WWDG_CR_WDGA: u32 = WWDG_CR_WDGA_Msk;
pub const WWDG_CFR_W_Pos: u32 = 0;
pub const WWDG_CFR_W_Msk: u32 = 0x7F << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W: u32 = WWDG_CFR_W_Msk;
pub const WWDG_CFR_W_0: u32 = 0x01 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_1: u32 = 0x02 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_2: u32 = 0x04 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_3: u32 = 0x08 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_4: u32 = 0x10 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_5: u32 = 0x20 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W_6: u32 = 0x40 << WWDG_CFR_W_Pos;
pub const WWDG_CFR_W0: u32 = WWDG_CFR_W_0;
pub const WWDG_CFR_W1: u32 = WWDG_CFR_W_1;
pub const WWDG_CFR_W2: u32 = WWDG_CFR_W_2;
pub const WWDG_CFR_W3: u32 = WWDG_CFR_W_3;
pub const WWDG_CFR_W4: u32 = WWDG_CFR_W_4;
pub const WWDG_CFR_W5: u32 = WWDG_CFR_W_5;
pub const WWDG_CFR_W6: u32 = WWDG_CFR_W_6;
pub const WWDG_CFR_WDGTB_Pos: u32 = 7;
pub const WWDG_CFR_WDGTB_Msk: u32 = 0x3 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_WDGTB: u32 = WWDG_CFR_WDGTB_Msk;
pub const WWDG_CFR_WDGTB_0: u32 = 0x1 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_WDGTB_1: u32 = 0x2 << WWDG_CFR_WDGTB_Pos;
pub const WWDG_CFR_WDGTB0: u32 = WWDG_CFR_WDGTB_0;
pub const WWDG_CFR_WDGTB1: u32 = WWDG_CFR_WDGTB_1;
pub const WWDG_CFR_EWI_Pos: u32 = 9;
pub const WWDG_CFR_EWI_Msk: u32 = 0x1 << WWDG_CFR_EWI_Pos;
pub const WWDG_CFR_EWI: u32 = WWDG_CFR_EWI_Msk;
pub const WWDG_SR_EWIF_Pos: u32 = 0;
pub const WWDG_SR_EWIF_Msk: u32 = 0x1 << WWDG_SR_EWIF_Pos;
pub const WWDG_SR_EWIF: u32 = WWDG_SR_EWIF_Msk;
